rn12
rn13
Tc2 (src)
Tc3
kcTyClGroup
  module Example
  type family F a
env2 []
kcTyClGroup: initial kinds [(F, AThing * -> *)]
Generalise kind
  F
  * -> *
  []
  * -> *
kcTyClGroup result [(F, * -> *)]
tcTyAndCl generalized kinds [(F, * -> *)]
tcTyAndCl-x type family F a
env2 []
env2 [(a, Type variable ‘a’ = a)]
open type family: F
Starting validity check [Type constructor ‘F’]
env2 []
tcFamInstDecl F
env2 []
tcHsTyVarBndrs {
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
env2 []
tc_lhs_type:
  Int
  Expected kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Bool
  The first argument of ‘F’ should have kind ‘*’
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcHsTyVarBndrs }
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
tcFamTyPats F
env2 []
tc_lhs_type:
  Int
  Expected kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tcTyFamInstEqn F []
Adding instances:
addLocalFamInst type instance F Bool -- Defined at p2.hs:5:1
alfi
  Example
  False
checkForConflicts
  []
  type instance F Bool -- Defined at p2.hs:5:1
  ([], [])
addFamInsts type instance F Bool -- Defined at p2.hs:5:1
env2 []
tcDeriving
tcDeriving False
tcDeriving 1 []
Adding instances:
Tc3b
tcAmpMissingParentClassWarn/isInsts []
tcAmpMissingParentClassWarn/isInsts []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Monad.join []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.<*> []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.pure []
Tc4
Tc4a
env2 []
Tc5
tc_lhs_type:
  F Bool
  Expected a type
tc_lhs_type:
  F
  Expected kind ‘k_ahq’
lk1 F
lk2 F Type constructor ‘F’
writeMetaTyVar k_ahq := * -> *
tc_lhs_type:
  Bool
  The first argument of ‘F’ should have kind ‘*’
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tcCheckHsTypeAndGen F Bool -> Int
checkValidType F Bool -> Int :: *
checkValidType done F Bool -> Int :: *
env2 [(foo, Identifier[foo::F Bool -> Int, <NotTopLevel>])]
------------------------------------------------
Bindings for { [foo]
Generalisation plan
  CheckGen foo :: F Bool -> Int
                  []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  foo
  F Bool -> Int
tcMatchesFun
  foo
  F Bool -> Int
tcGen
env2 [(n, Identifier[n::F Bool, <NotTopLevel>])]
tcBody Int
utype_defer
  cobox_ahs
  Bool
  Int
  a type equality Bool ~ Int
  In the expression: True
  In an equation for ‘foo’: foo n = True
addInlinePrags
  foo
  []
csb2 [foo]
} End of bindings for
  [foo]
  NonRecursive
  foo F Bool -> Int
env2 [(foo, Identifier[foo::F Bool -> Int, <TopLevel>])]
Tc6
env2 []
Tc7
End of tcVectDecls: LIE:
  WC {wc_flat = [W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                               ~
                                                               Int " p2.hs:8:9-12] (CNonCanonical)}
Tc7a
checkMain not Main Example
Tc8
simplifyTop {
  wanted =  WC {wc_flat = [W] cobox_ahs :: Bool
                                           ~ Int [" a type equality Bool
                                                                    ~
                                                                    Int " p2.hs:8:9-12] (CNonCanonical)}
solveWantedsTcMWithEvBinds
  wanted= WC {wc_flat = [W] cobox_ahs :: Bool
                                         ~ Int [" a type equality Bool
                                                                  ~
                                                                  Int " p2.hs:8:9-12] (CNonCanonical)}
solveWanteds {
  WC {wc_flat = [W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                               ~
                                                               Int " p2.hs:8:9-12] (CNonCanonical)}
solveFlats {
Start solver pipeline {
  work item =  [W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                              ~
                                                              Int " p2.hs:8:9-12] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                               ~
                                                               Int " p2.hs:8:9-12] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                 ~
                                                 Int " p2.hs:8:9-12] (CNonCanonical)
canEvNC:eq
  Bool
  Int
can_eq_nc
  [W] cobox_ahs :: Bool ~ Int
  Bool
  Bool
  Int
  Int
Emit insoluble
  [W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                 ~
                                                 Int " p2.hs:8:9-12] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                                            ~
                                                                            Int " p2.hs:8:9-12] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
solveFlats end } {}
simpl_loop, iteration 1
solveWanteds }
  unsolved_flats   = {}
  unsolved_implics = {}
  current evbinds  = {}
  current tybinds  =
  final wc = WC {wc_insol = [W] cobox_ahs :: Bool
                                             ~ Int [" a type equality Bool
                                                                      ~
                                                                      Int " p2.hs:8:9-12] (CNonCanonical)}
Constraint solver steps = 1
End simplifyTop }
reportUnsolved {
reportUnsolved (before unflattening)
  WC {wc_insol = [W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                                ~
                                                                Int " p2.hs:8:9-12] (CNonCanonical)}
reportUnsolved (after unflattening):
  WC {wc_insol = [W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                                ~
                                                                Int " p2.hs:8:9-12] (CNonCanonical)}
reportFlats
  Flats = {}
  Suppress = False
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {[W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                          ~
                                                          Int " p2.hs:8:9-12] (CNonCanonical)}
  Suppress = False
tryReporters {
  [[W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                  ~
                                                  Int " p2.hs:8:9-12] (CNonCanonical)]
tryReporters: yes
  Utterly wrong [[W] cobox_ahs :: Bool ~ Int [" a type equality Bool
                                                                ~
                                                                Int " p2.hs:8:9-12] (CNonCanonical)]
relevantBindings [n, foo]
Adding error:
  p2.hs:8:9:
      Couldn't match expected type ‘Int’ with actual type ‘Bool’
      In the expression: True
      In an equation for ‘foo’: foo n = True
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {}
  Suppress = True
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportUnsolved }
InstEnvs (External)
  instance Control.Applicative.Alternative []
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus m =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance (Control.Arrow.ArrowZero a, Control.Arrow.ArrowPlus a) =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.ArrowPlus a =>
           Control.Applicative.Alternative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Enum GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Enum (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Enum Float -- Defined in ‘GHC.Float’
  instance Enum Double -- Defined in ‘GHC.Float’
  instance Eq a => Eq (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Eq a => Eq (GHC.Real.Ratio a) -- Defined in ‘GHC.Real’
  instance Floating Float -- Defined in ‘GHC.Float’
  instance Floating Double -- Defined in ‘GHC.Float’
  instance Integral a => Fractional (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Fractional Float -- Defined in ‘GHC.Float’
  instance Fractional Double -- Defined in ‘GHC.Float’
  instance Integral GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral Integer -- Defined in ‘GHC.Real’
  instance Integral Int -- Defined in ‘GHC.Real’
  instance Monad m => Monad (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Monad [] -- Defined in ‘GHC.Base’
  instance Monad IO -- Defined in ‘GHC.Base’
  instance Monad ((->) r) -- Defined in ‘GHC.Base’
  instance Functor Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m => Functor (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Functor (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Functor (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Functor [] -- Defined in ‘GHC.Base’
  instance Functor IO -- Defined in ‘GHC.Base’
  instance Functor ((->) r) -- Defined in ‘GHC.Base’
  instance Functor ((,) a) -- Defined in ‘GHC.Base’
  instance Integral a => Num (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Num Float -- Defined in ‘GHC.Float’
  instance Num Double -- Defined in ‘GHC.Float’
  instance Ord a => Ord (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Integral a => Ord (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Read a => Read (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Real GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Real (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Real Integer -- Defined in ‘GHC.Real’
  instance Real Int -- Defined in ‘GHC.Real’
  instance Real Float -- Defined in ‘GHC.Float’
  instance Real Double -- Defined in ‘GHC.Float’
  instance RealFloat Float -- Defined in ‘GHC.Float’
  instance RealFloat Double -- Defined in ‘GHC.Float’
  instance Integral a => RealFrac (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance RealFrac Float -- Defined in ‘GHC.Float’
  instance RealFrac Double -- Defined in ‘GHC.Float’
  instance Show a => Show (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance (Integral a, Show a) => Show (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Show Float -- Defined in ‘GHC.Float’
  instance Show Double -- Defined in ‘GHC.Float’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Applicative
    -- Defined in ‘Control.Applicative’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Alternative
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus [] -- Defined in ‘Control.Monad’
  instance Control.Monad.MonadPlus Maybe
    -- Defined in ‘Control.Monad’
  instance Control.Applicative.Applicative []
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (GHC.ST.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             (base:Control.Monad.ST.Lazy.Imp.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Data.Proxy.Proxy
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative IO
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (Either e)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid m =>
           Control.Applicative.Applicative (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative ((->) a)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Control.Applicative.Applicative ((,) a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedMonad m a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedArrow a b c)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.Const a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0Const
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Data.Monoid.Monoid (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
InstEnvs (Internal)
famInstEnvs (External)
  type GHC.Generics.Rep Char
    == GHC.Generics.D1
         GHC.Generics.D_Char
         (GHC.Generics.C1
            GHC.Generics.C_Char
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Char)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Double
    == GHC.Generics.D1
         GHC.Generics.D_Double
         (GHC.Generics.C1
            GHC.Generics.C_Double
            (GHC.Generics.S1
               GHC.Generics.NoSelector (GHC.Generics.Rec0 Double)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Float
    == GHC.Generics.D1
         GHC.Generics.D_Float
         (GHC.Generics.C1
            GHC.Generics.C_Float
            (GHC.Generics.S1
               GHC.Generics.NoSelector (GHC.Generics.Rec0 Float)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Int
    == GHC.Generics.D1
         GHC.Generics.D_Int
         (GHC.Generics.C1
            GHC.Generics.C_Int
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Proxy.Proxy t)
    == GHC.Generics.D1
         GHC.Generics.D1Proxy
         (GHC.Generics.C1 GHC.Generics.C1_0Proxy GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f, g)
    == GHC.Generics.D1
         GHC.Generics.D1(,,,,,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,,,,,)
            ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
              GHC.Generics.:*: (GHC.Generics.S1
                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
             GHC.Generics.:*: ((GHC.Generics.S1
                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                    GHC.Generics.NoSelector
                                                                    (GHC.Generics.Rec0 g)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f)
    == GHC.Generics.D1
         GHC.Generics.D1(,,,,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,,,,)
            ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
              GHC.Generics.:*: (GHC.Generics.S1
                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                    GHC.Generics.NoSelector
                                                                    (GHC.Generics.Rec0 f)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e)
    == GHC.Generics.D1
         GHC.Generics.D1(,,,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,,,)
            ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
              GHC.Generics.:*: GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                    GHC.Generics.NoSelector
                                                                    (GHC.Generics.Rec0 e)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d)
    == GHC.Generics.D1
         GHC.Generics.D1(,,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,,)
            ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
              GHC.Generics.:*: GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c)
    == GHC.Generics.D1
         GHC.Generics.D1(,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,)
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b)
    == GHC.Generics.D1
         GHC.Generics.D1(,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,)
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ()
    == GHC.Generics.D1
         GHC.Generics.D1()
         (GHC.Generics.C1 GHC.Generics.C1_0() GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Ordering
    == GHC.Generics.D1
         GHC.Generics.D1Ordering
         (GHC.Generics.C1 GHC.Generics.C1_0Ordering GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.C1
                              GHC.Generics.C1_1Ordering GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               GHC.Generics.C1_2Ordering GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Bool
    == GHC.Generics.D1
         GHC.Generics.D1Bool
         (GHC.Generics.C1 GHC.Generics.C1_0Bool GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1Bool GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Either a b)
    == GHC.Generics.D1
         GHC.Generics.D1Either
         (GHC.Generics.C1
            GHC.Generics.C1_0Either
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1Either
                             (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Maybe a)
    == GHC.Generics.D1
         GHC.Generics.D1Maybe
         (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1Maybe
                             (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep [a]
    == GHC.Generics.D1
         GHC.Generics.D1[]
         (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1[]
                             (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 [a])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.U1 p)
    == GHC.Generics.D1
         GHC.Generics.D1U1
         (GHC.Generics.C1 GHC.Generics.C1_0U1 GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Par1 p)
    == GHC.Generics.D1
         GHC.Generics.D1Par1
         (GHC.Generics.C1
            GHC.Generics.C1_0Par1
            (GHC.Generics.S1 GHC.Generics.S1_0_0Par1 (GHC.Generics.Rec0 p)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Rec1 f p)
    == GHC.Generics.D1
         GHC.Generics.D1Rec1
         (GHC.Generics.C1
            GHC.Generics.C1_0Rec1
            (GHC.Generics.S1
               GHC.Generics.S1_0_0Rec1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.K1 i c p)
    == GHC.Generics.D1
         GHC.Generics.D1K1
         (GHC.Generics.C1
            GHC.Generics.C1_0K1
            (GHC.Generics.S1 GHC.Generics.S1_0_0K1 (GHC.Generics.Rec0 c)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.M1 i c f p)
    == GHC.Generics.D1
         GHC.Generics.D1M1
         (GHC.Generics.C1
            GHC.Generics.C1_0M1
            (GHC.Generics.S1 GHC.Generics.S1_0_0M1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:+:) f g p)
    == GHC.Generics.D1
         GHC.Generics.D1:+:
         (GHC.Generics.C1
            GHC.Generics.C1_0:+:
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p)))
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1:+:
                             (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:*:) f g p)
    == GHC.Generics.D1
         GHC.Generics.D1:*:
         (GHC.Generics.C1
            GHC.Generics.C1_0:*:
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p))
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:.:) f g p)
    == GHC.Generics.D1
         GHC.Generics.D1:.:
         (GHC.Generics.C1
            GHC.Generics.C1_0:.:
            (GHC.Generics.S1
               GHC.Generics.S1_0_0:.: (GHC.Generics.Rec0 (f (g p)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Associativity
    == GHC.Generics.D1
         GHC.Generics.D1Associativity
         (GHC.Generics.C1 GHC.Generics.C1_0Associativity GHC.Generics.U1
          GHC.Generics.:+: (GHC.Generics.C1
                              GHC.Generics.C1_1Associativity GHC.Generics.U1
                            GHC.Generics.:+: GHC.Generics.C1
                                               GHC.Generics.C1_2Associativity GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Fixity
    == GHC.Generics.D1
         GHC.Generics.D1Fixity
         (GHC.Generics.C1 GHC.Generics.C1_0Fixity GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1Fixity
                             (GHC.Generics.S1
                                GHC.Generics.NoSelector
                                (GHC.Generics.Rec0 GHC.Generics.Associativity)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Arity
    == GHC.Generics.D1
         GHC.Generics.D1Arity
         (GHC.Generics.C1 GHC.Generics.C1_0Arity GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1Arity
                             (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Monoid.Dual a)
    == GHC.Generics.D1
         Data.Monoid.D1Dual
         (GHC.Generics.C1
            Data.Monoid.C1_0Dual
            (GHC.Generics.S1 Data.Monoid.S1_0_0Dual (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Endo a)
    == GHC.Generics.D1
         Data.Monoid.D1Endo
         (GHC.Generics.C1
            Data.Monoid.C1_0Endo
            (GHC.Generics.S1
               Data.Monoid.S1_0_0Endo (GHC.Generics.Rec0 (a -> a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.All
    == GHC.Generics.D1
         Data.Monoid.D1All
         (GHC.Generics.C1
            Data.Monoid.C1_0All
            (GHC.Generics.S1 Data.Monoid.S1_0_0All (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.Any
    == GHC.Generics.D1
         Data.Monoid.D1Any
         (GHC.Generics.C1
            Data.Monoid.C1_0Any
            (GHC.Generics.S1 Data.Monoid.S1_0_0Any (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Sum a)
    == GHC.Generics.D1
         Data.Monoid.D1Sum
         (GHC.Generics.C1
            Data.Monoid.C1_0Sum
            (GHC.Generics.S1 Data.Monoid.S1_0_0Sum (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Product a)
    == GHC.Generics.D1
         Data.Monoid.D1Product
         (GHC.Generics.C1
            Data.Monoid.C1_0Product
            (GHC.Generics.S1 Data.Monoid.S1_0_0Product (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.First a)
    == GHC.Generics.D1
         Data.Monoid.D1First
         (GHC.Generics.C1
            Data.Monoid.C1_0First
            (GHC.Generics.S1
               Data.Monoid.S1_0_0First (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Last a)
    == GHC.Generics.D1
         Data.Monoid.D1Last
         (GHC.Generics.C1
            Data.Monoid.C1_0Last
            (GHC.Generics.S1
               Data.Monoid.S1_0_0Last (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Control.Applicative.Const a b)
    == GHC.Generics.D1
         Control.Applicative.D1Const
         (GHC.Generics.C1
            Control.Applicative.C1_0Const
            (GHC.Generics.S1
               Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedMonad m a)
    == GHC.Generics.D1
         Control.Applicative.D1WrappedMonad
         (GHC.Generics.C1
            Control.Applicative.C1_0WrappedMonad
            (GHC.Generics.S1
               Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec0 (m a))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedArrow a b c)
    == GHC.Generics.D1
         Control.Applicative.D1WrappedArrow
         (GHC.Generics.C1
            Control.Applicative.C1_0WrappedArrow
            (GHC.Generics.S1
               Control.Applicative.S1_0_0WrappedArrow
               (GHC.Generics.Rec0 (a b c))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.ZipList a)
    == GHC.Generics.D1
         Control.Applicative.D1ZipList
         (GHC.Generics.C1
            Control.Applicative.C1_0ZipList
            (GHC.Generics.S1
               Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec0 [a])))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 ((,,,,,,) a b c d e f)
    == GHC.Generics.D1
         GHC.Generics.D1(,,,,,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,,,,,)
            ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
              GHC.Generics.:*: (GHC.Generics.S1
                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
             GHC.Generics.:*: ((GHC.Generics.S1
                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                    GHC.Generics.NoSelector
                                                                    GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,,) a b c d e)
    == GHC.Generics.D1
         GHC.Generics.D1(,,,,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,,,,)
            ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
              GHC.Generics.:*: (GHC.Generics.S1
                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                                GHC.Generics.:*: GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                    GHC.Generics.NoSelector
                                                                    GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,) a b c d)
    == GHC.Generics.D1
         GHC.Generics.D1(,,,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,,,)
            ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
              GHC.Generics.:*: GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                               GHC.Generics.:*: (GHC.Generics.S1
                                                   GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                 GHC.Generics.:*: GHC.Generics.S1
                                                                    GHC.Generics.NoSelector
                                                                    GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,) a b c)
    == GHC.Generics.D1
         GHC.Generics.D1(,,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,,)
            ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
              GHC.Generics.:*: GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,) a b)
    == GHC.Generics.D1
         GHC.Generics.D1(,,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,,)
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,) a)
    == GHC.Generics.D1
         GHC.Generics.D1(,)
         (GHC.Generics.C1
            GHC.Generics.C1_0(,)
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 (Either a)
    == GHC.Generics.D1
         GHC.Generics.D1Either
         (GHC.Generics.C1
            GHC.Generics.C1_0Either
            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1Either
                             (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Maybe
    == GHC.Generics.D1
         GHC.Generics.D1Maybe
         (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1Maybe
                             (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 []
    == GHC.Generics.D1
         GHC.Generics.D1[]
         (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
          GHC.Generics.:+: GHC.Generics.C1
                             GHC.Generics.C1_1[]
                             (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec1 [])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Data.Monoid.Dual
    == GHC.Generics.D1
         Data.Monoid.D1Dual
         (GHC.Generics.C1
            Data.Monoid.C1_0Dual
            (GHC.Generics.S1 Data.Monoid.S1_0_0Dual GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Sum
    == GHC.Generics.D1
         Data.Monoid.D1Sum
         (GHC.Generics.C1
            Data.Monoid.C1_0Sum
            (GHC.Generics.S1 Data.Monoid.S1_0_0Sum GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Product
    == GHC.Generics.D1
         Data.Monoid.D1Product
         (GHC.Generics.C1
            Data.Monoid.C1_0Product
            (GHC.Generics.S1 Data.Monoid.S1_0_0Product GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.First
    == GHC.Generics.D1
         Data.Monoid.D1First
         (GHC.Generics.C1
            Data.Monoid.C1_0First
            (GHC.Generics.S1
               Data.Monoid.S1_0_0First (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Last
    == GHC.Generics.D1
         Data.Monoid.D1Last
         (GHC.Generics.C1
            Data.Monoid.C1_0Last
            (GHC.Generics.S1 Data.Monoid.S1_0_0Last (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 (Control.Applicative.Const a)
    == GHC.Generics.D1
         Control.Applicative.D1Const
         (GHC.Generics.C1
            Control.Applicative.C1_0Const
            (GHC.Generics.S1
               Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedMonad m)
    == GHC.Generics.D1
         Control.Applicative.D1WrappedMonad
         (GHC.Generics.C1
            Control.Applicative.C1_0WrappedMonad
            (GHC.Generics.S1
               Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec1 m)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedArrow a b)
    == GHC.Generics.D1
         Control.Applicative.D1WrappedArrow
         (GHC.Generics.C1
            Control.Applicative.C1_0WrappedArrow
            (GHC.Generics.S1
               Control.Applicative.S1_0_0WrappedArrow (GHC.Generics.Rec1 (a b))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 Control.Applicative.ZipList
    == GHC.Generics.D1
         Control.Applicative.D1ZipList
         (GHC.Generics.C1
            Control.Applicative.C1_0ZipList
            (GHC.Generics.S1
               Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec1 [])))
    -- Defined in ‘Control.Applicative’
  type instance a Data.Type.Equality.== b
    == Data.Either.EqEither a b
    -- Defined in ‘Data.Either’
famInstEnvs (Internal)
  type instance F Bool
    == Int
    -- Defined at p2.hs:5:1
originalCts (simplifyTop)
  fvars =  []
  wanted =  WC {wc_flat = [W] cobox_ahs :: Bool
                                           ~ Int [" a type equality Bool
                                                                    ~
                                                                    Int " p2.hs:8:9-12] (CNonCanonical)}
Tc9

p2.hs:8:9:
    Couldn't match expected type ‘Int’ with actual type ‘Bool’
    In the expression: True
    In an equation for ‘foo’: foo n = True
