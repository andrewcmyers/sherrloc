VARIABLE i_aqY
VARIABLE e_aqZ
VARIABLE a_ar0
VARIABLE i_ar6
VARIABLE e_ar7
VARIABLE a_ar8
VARIABLE a_au2
VARIABLE t_auG
VARIABLE a_auI
VARIABLE t_auM
VARIABLE t_auQ
VARIABLE a_auR
VARIABLE a_awT
VARIABLE t_awX
VARIABLE t_awY
VARIABLE t_awZ
VARIABLE m_ax2
VARIABLE a_ax4
VARIABLE b_ax5
VARIABLE a_axr
VARIABLE i_axs
VARIABLE e_axt
VARIABLE m_axu
VARIABLE b_axv
VARIABLE m_axC
VARIABLE a_axE
VARIABLE t_axI


%%
((list )) <= (Control.Applicative.Alternative);
axiom m . (m) <= (Control.Monad.MonadPlus); => ((Control.Applicative.WrappedMonad m)) <= (Control.Applicative.Alternative);;
axiom a . (a) <= (Control.Arrow.ArrowZero); (a) <= (Control.Arrow.ArrowPlus); => ((Control.Applicative.WrappedArrow a b)) <= (Control.Applicative.Alternative);;
(GHC.Conc.Sync.STM) <= (Control.Applicative.Alternative);
(Text.ParserCombinators.ReadPrec.ReadPrec) <= (Control.Applicative.Alternative);
(Text.ParserCombinators.ReadP.ReadP) <= (Control.Applicative.Alternative);
(Maybe) <= (Control.Applicative.Alternative);
axiom a . (a) <= (Control.Arrow.ArrowPlus); => ((Control.Arrow.ArrowMonad a)) <= (Control.Applicative.Alternative);;
(GHC.Int.Int8) <= (Bounded);
(GHC.Int.Int64) <= (Bounded);
(GHC.Int.Int32) <= (Bounded);
(GHC.Int.Int16) <= (Bounded);
(GHC.Word.Word8) <= (Bounded);
(GHC.Word.Word64) <= (Bounded);
(GHC.Word.Word32) <= (Bounded);
(GHC.Word.Word16) <= (Bounded);
(GHC.Types.Word) <= (Bounded);
(Ordering) <= (Bounded);
(Int) <= (Bounded);
(Char) <= (Bounded);
(Bool) <= (Bounded);
axiom o . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); (h) <= (Bounded); (i) <= (Bounded); (j) <= (Bounded); (k) <= (Bounded); (l) <= (Bounded); (m) <= (Bounded); (n) <= (Bounded); (o) <= (Bounded); => ((a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)) <= (Bounded);;
axiom n . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); (h) <= (Bounded); (i) <= (Bounded); (j) <= (Bounded); (k) <= (Bounded); (l) <= (Bounded); (m) <= (Bounded); (n) <= (Bounded); => ((a, b, c, d, e, f, g, h, i, j, k, l, m, n)) <= (Bounded);;
axiom m . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); (h) <= (Bounded); (i) <= (Bounded); (j) <= (Bounded); (k) <= (Bounded); (l) <= (Bounded); (m) <= (Bounded); => ((a, b, c, d, e, f, g, h, i, j, k, l, m)) <= (Bounded);;
axiom l . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); (h) <= (Bounded); (i) <= (Bounded); (j) <= (Bounded); (k) <= (Bounded); (l) <= (Bounded); => ((a, b, c, d, e, f, g, h, i, j, k, l)) <= (Bounded);;
axiom k . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); (h) <= (Bounded); (i) <= (Bounded); (j) <= (Bounded); (k) <= (Bounded); => ((a, b, c, d, e, f, g, h, i, j, k)) <= (Bounded);;
axiom j . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); (h) <= (Bounded); (i) <= (Bounded); (j) <= (Bounded); => ((a, b, c, d, e, f, g, h, i, j)) <= (Bounded);;
axiom i . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); (h) <= (Bounded); (i) <= (Bounded); => ((a, b, c, d, e, f, g, h, i)) <= (Bounded);;
axiom h . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); (h) <= (Bounded); => ((a, b, c, d, e, f, g, h)) <= (Bounded);;
axiom g . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); (g) <= (Bounded); => ((a, b, c, d, e, f, g)) <= (Bounded);;
axiom f . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); (f) <= (Bounded); => ((a, b, c, d, e, f)) <= (Bounded);;
axiom e . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); (e) <= (Bounded); => ((a, b, c, d, e)) <= (Bounded);;
axiom d . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); (d) <= (Bounded); => ((a, b, c, d)) <= (Bounded);;
axiom c . (a) <= (Bounded); (b) <= (Bounded); (c) <= (Bounded); => ((a, b, c)) <= (Bounded);;
axiom b . (a) <= (Bounded); (b) <= (Bounded); => ((a, b)) <= (Bounded);;
(EMPTY) <= (Bounded);
(GHC.Int.Int8) <= (Enum);
(GHC.Int.Int64) <= (Enum);
(GHC.Int.Int32) <= (Enum);
(GHC.Int.Int16) <= (Enum);
(GHC.Word.Word8) <= (Enum);
(GHC.Word.Word64) <= (Enum);
(GHC.Word.Word32) <= (Enum);
(GHC.Word.Word16) <= (Enum);
(Ordering) <= (Enum);
(Integer) <= (Enum);
(Int) <= (Enum);
(Char) <= (Enum);
(Bool) <= (Enum);
(EMPTY) <= (Enum);
(GHC.Types.Word) <= (Enum);
axiom a . (a) <= (Integral); => ((GHC.Real.Ratio a)) <= (Enum);;
(Float) <= (Enum);
(Double) <= (Enum);
axiom i . ((GHC.IOArray.IOArray i e)) <= (Eq);;
(GHC.Int.Int8) <= (Eq);
(GHC.Int.Int64) <= (Eq);
(GHC.Int.Int32) <= (Eq);
(GHC.Int.Int16) <= (Eq);
axiom a . ((GHC.Ptr.Ptr a)) <= (Eq);;
axiom a . ((GHC.Ptr.FunPtr a)) <= (Eq);;
axiom a . ((GHC.Stable.StablePtr a)) <= (Eq);;
(GHC.Word.Word8) <= (Eq);
(GHC.Word.Word64) <= (Eq);
(GHC.Word.Word32) <= (Eq);
(GHC.Word.Word16) <= (Eq);
(Integer) <= (Eq);
axiom a . (a) <= (Eq); => ((Control.Applicative.ZipList a)) <= (Eq);;
axiom e . (ix) <= (GHC.Arr.Ix); (e) <= (Eq); (cons_2 UArray e) <= (Data.Array.Base.IArray); => ((UArray ix e)) <= (Eq);;
axiom e , s . ((Data.Array.Base.STUArray s i e)) <= (Eq);;
axiom e , s . ((GHC.Arr.STArray s i e)) <= (Eq);;
axiom e , i . (i) <= (GHC.Arr.Ix); (e) <= (Eq); => ((Array i e)) <= (Eq);;
axiom a . (a) <= (Eq); => ((GHC.Real.Ratio a)) <= (Eq);;
(Float) <= (Floating);
(Double) <= (Floating);
axiom a . (a) <= (Integral); => ((GHC.Real.Ratio a)) <= (Fractional);;
(Float) <= (Fractional);
(Double) <= (Fractional);
(GHC.Int.Int8) <= (Integral);
(GHC.Int.Int64) <= (Integral);
(GHC.Int.Int32) <= (Integral);
(GHC.Int.Int16) <= (Integral);
(GHC.Word.Word8) <= (Integral);
(GHC.Word.Word64) <= (Integral);
(GHC.Word.Word32) <= (Integral);
(GHC.Word.Word16) <= (Integral);
(GHC.Types.Word) <= (Integral);
(Integer) <= (Integral);
(Int) <= (Integral);
axiom s . ((base:Control.Monad.ST.Lazy.Imp.ST s)) <= (Monad);;
axiom s . ((GHC.ST.ST s)) <= (Monad);;
axiom m . (m) <= (Monad); => ((Control.Applicative.WrappedMonad m)) <= (Monad);;
((list )) <= (Monad);
(IO) <= (Monad);
axiom r . ((arrow r)) <= (Monad);;
axiom s . ((base:Control.Monad.ST.Lazy.Imp.ST s)) <= (Functor);;
axiom s . ((GHC.ST.ST s)) <= (Functor);;
(Control.Applicative.ZipList) <= (Functor);
axiom m . (m) <= (Monad); => ((Control.Applicative.WrappedMonad m)) <= (Functor);;
axiom a . (a) <= (Control.Arrow.Arrow); => ((Control.Applicative.WrappedArrow a b)) <= (Functor);;
axiom m . ((Control.Applicative.Const m)) <= (Functor);;
((list )) <= (Functor);
(IO) <= (Functor);
axiom r . ((arrow r)) <= (Functor);;
axiom a . ((pair a)) <= (Functor);;
axiom i . (i) <= (GHC.Arr.Ix); => ((Array i)) <= (Functor);;
(GHC.Int.Int8) <= (Num);
(GHC.Int.Int64) <= (Num);
(GHC.Int.Int32) <= (Num);
(GHC.Int.Int16) <= (Num);
(GHC.Word.Word8) <= (Num);
(GHC.Word.Word64) <= (Num);
(GHC.Word.Word32) <= (Num);
(GHC.Word.Word16) <= (Num);
(GHC.Types.Word) <= (Num);
(Integer) <= (Num);
(Int) <= (Num);
axiom a . (a) <= (Integral); => ((GHC.Real.Ratio a)) <= (Num);;
(Float) <= (Num);
(Double) <= (Num);
(GHC.Int.Int8) <= (Ord);
(GHC.Int.Int64) <= (Ord);
(GHC.Int.Int32) <= (Ord);
(GHC.Int.Int16) <= (Ord);
axiom a . ((GHC.Ptr.Ptr a)) <= (Ord);;
axiom a . ((GHC.Ptr.FunPtr a)) <= (Ord);;
(GHC.Word.Word8) <= (Ord);
(GHC.Word.Word64) <= (Ord);
(GHC.Word.Word32) <= (Ord);
(GHC.Word.Word16) <= (Ord);
(Integer) <= (Ord);
axiom a . (a) <= (Ord); => ((Control.Applicative.ZipList a)) <= (Ord);;
axiom e . (ix) <= (GHC.Arr.Ix); (e) <= (Ord); (cons_2 UArray e) <= (Data.Array.Base.IArray); => ((UArray ix e)) <= (Ord);;
axiom e , i . (i) <= (GHC.Arr.Ix); (e) <= (Ord); => ((Array i e)) <= (Ord);;
axiom a . (a) <= (Integral); => ((GHC.Real.Ratio a)) <= (Ord);;
(GHC.Int.Int8) <= (Read);
(GHC.Int.Int64) <= (Read);
(GHC.Int.Int32) <= (Read);
(GHC.Int.Int16) <= (Read);
(GHC.Word.Word8) <= (Read);
(GHC.Word.Word64) <= (Read);
(GHC.Word.Word32) <= (Read);
(GHC.Word.Word16) <= (Read);
axiom a . (a) <= (Read); => ((Control.Applicative.ZipList a)) <= (Read);;
(GHC.Int.Int8) <= (Real);
(GHC.Int.Int64) <= (Real);
(GHC.Int.Int32) <= (Real);
(GHC.Int.Int16) <= (Real);
(GHC.Word.Word8) <= (Real);
(GHC.Word.Word64) <= (Real);
(GHC.Word.Word32) <= (Real);
(GHC.Word.Word16) <= (Real);
(GHC.Types.Word) <= (Real);
axiom a . (a) <= (Integral); => ((GHC.Real.Ratio a)) <= (Real);;
(Integer) <= (Real);
(Int) <= (Real);
(Float) <= (Real);
(Double) <= (Real);
(Float) <= (RealFloat);
(Double) <= (RealFloat);
axiom a . (a) <= (Integral); => ((GHC.Real.Ratio a)) <= (RealFrac);;
(Float) <= (RealFrac);
(Double) <= (RealFrac);
(GHC.Int.Int8) <= (Show);
(GHC.Int.Int64) <= (Show);
(GHC.Int.Int32) <= (Show);
(GHC.Int.Int16) <= (Show);
axiom a . ((GHC.Ptr.Ptr a)) <= (Show);;
axiom a . ((GHC.Ptr.FunPtr a)) <= (Show);;
(GHC.Word.Word8) <= (Show);
(GHC.Word.Word64) <= (Show);
(GHC.Word.Word32) <= (Show);
(GHC.Word.Word16) <= (Show);
axiom s . ((GHC.ST.ST s a)) <= (Show);;
axiom a . (a) <= (Show); => ((Control.Applicative.ZipList a)) <= (Show);;
axiom e . (ix) <= (GHC.Arr.Ix); (ix) <= (Show); (e) <= (Show); (cons_2 UArray e) <= (Data.Array.Base.IArray); => ((UArray ix e)) <= (Show);;
axiom a , b . (a) <= (GHC.Arr.Ix); (a) <= (Show); (b) <= (Show); => ((Array a b)) <= (Show);;
axiom a . (a) <= (Integral); (a) <= (Show); => ((GHC.Real.Ratio a)) <= (Show);;
(Float) <= (Show);
(Double) <= (Show);
(GHC.Int.Int8) <= (GHC.Arr.Ix);
(GHC.Int.Int64) <= (GHC.Arr.Ix);
(GHC.Int.Int32) <= (GHC.Arr.Ix);
(GHC.Int.Int16) <= (GHC.Arr.Ix);
(GHC.Word.Word8) <= (GHC.Arr.Ix);
(GHC.Word.Word64) <= (GHC.Arr.Ix);
(GHC.Word.Word32) <= (GHC.Arr.Ix);
(GHC.Word.Word16) <= (GHC.Arr.Ix);
(GHC.Types.Word) <= (GHC.Arr.Ix);
(Ordering) <= (GHC.Arr.Ix);
(Integer) <= (GHC.Arr.Ix);
(Int) <= (GHC.Arr.Ix);
(Char) <= (GHC.Arr.Ix);
(Bool) <= (GHC.Arr.Ix);
axiom (a1) <= (GHC.Arr.Ix); (a2) <= (GHC.Arr.Ix); (a3) <= (GHC.Arr.Ix); (a4) <= (GHC.Arr.Ix); (a5) <= (GHC.Arr.Ix); => ((a1, a2, a3, a4, a5)) <= (GHC.Arr.Ix);;
axiom (a1) <= (GHC.Arr.Ix); (a2) <= (GHC.Arr.Ix); (a3) <= (GHC.Arr.Ix); (a4) <= (GHC.Arr.Ix); => ((a1, a2, a3, a4)) <= (GHC.Arr.Ix);;
axiom (a1) <= (GHC.Arr.Ix); (a2) <= (GHC.Arr.Ix); (a3) <= (GHC.Arr.Ix); => ((a1, a2, a3)) <= (GHC.Arr.Ix);;
axiom b . (a) <= (GHC.Arr.Ix); (b) <= (GHC.Arr.Ix); => ((a, b)) <= (GHC.Arr.Ix);;
(EMPTY) <= (GHC.Arr.Ix);
(GHC.IOArray.IOArray) <= (Data.Typeable.Internal.Typeable);
(GHC.Int.Int8) <= (Data.Typeable.Internal.Typeable);
(GHC.Int.Int64) <= (Data.Typeable.Internal.Typeable);
(GHC.Int.Int32) <= (Data.Typeable.Internal.Typeable);
(GHC.Int.Int16) <= (Data.Typeable.Internal.Typeable);
(GHC.Stable.StablePtr) <= (Data.Typeable.Internal.Typeable);
(Control.Applicative.Applicative) <= (Data.Typeable.Internal.Typeable);
(Control.Applicative.Alternative) <= (Data.Typeable.Internal.Typeable);
(UArray) <= (Data.Typeable.Internal.Typeable);
(Data.Array.Base.STUArray) <= (Data.Typeable.Internal.Typeable);
axiom s . ((base:Control.Monad.ST.Lazy.Imp.ST s)) <= (Control.Monad.Fix.MonadFix);;
((list )) <= (Control.Monad.MonadPlus);
(Maybe) <= (Control.Monad.MonadPlus);
((list )) <= (Control.Applicative.Applicative);
(Control.Applicative.ZipList) <= (Control.Applicative.Applicative);
axiom m . (m) <= (Monad); => ((Control.Applicative.WrappedMonad m)) <= (Control.Applicative.Applicative);;
axiom a . (a) <= (Control.Arrow.Arrow); => ((Control.Applicative.WrappedArrow a b)) <= (Control.Applicative.Applicative);;
(GHC.Conc.Sync.STM) <= (Control.Applicative.Applicative);
axiom s . ((GHC.ST.ST s)) <= (Control.Applicative.Applicative);;
axiom s . ((base:Control.Monad.ST.Lazy.Imp.ST s)) <= (Control.Applicative.Applicative);;
(Text.ParserCombinators.ReadPrec.ReadPrec) <= (Control.Applicative.Applicative);
(Text.ParserCombinators.ReadP.ReadP) <= (Control.Applicative.Applicative);
(Data.Proxy.Proxy) <= (Control.Applicative.Applicative);
(Maybe) <= (Control.Applicative.Applicative);
(IO) <= (Control.Applicative.Applicative);
axiom e . ((Either e)) <= (Control.Applicative.Applicative);;
axiom m . (m) <= (Data.Monoid.Monoid); => ((Control.Applicative.Const m)) <= (Control.Applicative.Applicative);;
axiom a . (a) <= (Control.Arrow.Arrow); => ((Control.Arrow.ArrowMonad a)) <= (Control.Applicative.Applicative);;
axiom a . ((arrow a)) <= (Control.Applicative.Applicative);;
axiom a . (a) <= (Data.Monoid.Monoid); => ((pair a)) <= (Control.Applicative.Applicative);;
axiom a . ((Control.Applicative.ZipList a)) <= (GHC.Generics.Generic);;
axiom m . ((Control.Applicative.WrappedMonad m a)) <= (GHC.Generics.Generic);;
axiom c , a . ((Control.Applicative.WrappedArrow a b c)) <= (GHC.Generics.Generic);;
axiom a . ((Control.Applicative.Const a b)) <= (GHC.Generics.Generic);;
(Control.Applicative.ZipList) <= (GHC.Generics.Generic1);
axiom m . ((Control.Applicative.WrappedMonad m)) <= (GHC.Generics.Generic1);;
axiom a . ((Control.Applicative.WrappedArrow a b)) <= (GHC.Generics.Generic1);;
axiom a . ((Control.Applicative.Const a)) <= (GHC.Generics.Generic1);;
(Control.Applicative.D1ZipList) <= (GHC.Generics.Datatype);
(Control.Applicative.D1WrappedMonad) <= (GHC.Generics.Datatype);
(Control.Applicative.D1WrappedArrow) <= (GHC.Generics.Datatype);
(Control.Applicative.D1Const) <= (GHC.Generics.Datatype);
(Control.Applicative.C1_0ZipList) <= (GHC.Generics.Constructor);
(Control.Applicative.C1_0WrappedMonad) <= (GHC.Generics.Constructor);
(Control.Applicative.C1_0WrappedArrow) <= (GHC.Generics.Constructor);
(Control.Applicative.C1_0Const) <= (GHC.Generics.Constructor);
(Control.Applicative.S1_0_0ZipList) <= (GHC.Generics.Selector);
(Control.Applicative.S1_0_0WrappedMonad) <= (GHC.Generics.Selector);
(Control.Applicative.S1_0_0WrappedArrow) <= (GHC.Generics.Selector);
(Control.Applicative.S1_0_0Const) <= (GHC.Generics.Selector);
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Types.Word (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Word.Word8 (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Word.Word64 (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Word.Word32 (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Word.Word16 (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom a , s . (cons_3 (Data.Array.Base.STUArray s) (GHC.Stable.StablePtr a) (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom a , s . (cons_3 (Data.Array.Base.STUArray s) (GHC.Ptr.Ptr a) (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) Int (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Int.Int8 (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Int.Int64 (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Int.Int32 (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) GHC.Int.Int16 (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom a , s . (cons_3 (Data.Array.Base.STUArray s) (GHC.Ptr.FunPtr a) (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) Float (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) Double (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) Char (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom s . (cons_3 (Data.Array.Base.STUArray s) Bool (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom e , s . (cons_3 (GHC.Arr.STArray s) e (GHC.ST.ST s)) <= (Data.Array.Base.MArray);;
axiom e , s . (cons_3 (GHC.Arr.STArray s) e (base:Control.Monad.ST.Lazy.Imp.ST s)) <= (Data.Array.Base.MArray);;
axiom e . (cons_3 GHC.IOArray.IOArray e IO) <= (Data.Array.Base.MArray);;
(cons_2 UArray GHC.Word.Word8) <= (Data.Array.Base.IArray);
(cons_2 UArray GHC.Word.Word64) <= (Data.Array.Base.IArray);
(cons_2 UArray GHC.Word.Word32) <= (Data.Array.Base.IArray);
(cons_2 UArray GHC.Word.Word16) <= (Data.Array.Base.IArray);
(cons_2 UArray GHC.Types.Word) <= (Data.Array.Base.IArray);
axiom a . (cons_2 UArray (GHC.Stable.StablePtr a)) <= (Data.Array.Base.IArray);;
axiom a . (cons_2 UArray (GHC.Ptr.Ptr a)) <= (Data.Array.Base.IArray);;
(cons_2 UArray GHC.Int.Int8) <= (Data.Array.Base.IArray);
(cons_2 UArray GHC.Int.Int64) <= (Data.Array.Base.IArray);
(cons_2 UArray GHC.Int.Int32) <= (Data.Array.Base.IArray);
(cons_2 UArray GHC.Int.Int16) <= (Data.Array.Base.IArray);
(cons_2 UArray Int) <= (Data.Array.Base.IArray);
axiom a . (cons_2 UArray (GHC.Ptr.FunPtr a)) <= (Data.Array.Base.IArray);;
(cons_2 UArray Float) <= (Data.Array.Base.IArray);
(cons_2 UArray Double) <= (Data.Array.Base.IArray);
(cons_2 UArray Char) <= (Data.Array.Base.IArray);
(cons_2 UArray Bool) <= (Data.Array.Base.IArray);
axiom e . (cons_2 Array e) <= (Data.Array.Base.IArray);;
axiom a . (a) <= (Data.Monoid.Monoid); => ((Control.Applicative.Const a b)) <= (Data.Monoid.Monoid);;
(GHC.Int.Int8) <= (Data.Bits.FiniteBits);
(GHC.Int.Int64) <= (Data.Bits.FiniteBits);
(GHC.Int.Int32) <= (Data.Bits.FiniteBits);
(GHC.Int.Int16) <= (Data.Bits.FiniteBits);
(GHC.Word.Word8) <= (Data.Bits.FiniteBits);
(GHC.Word.Word64) <= (Data.Bits.FiniteBits);
(GHC.Word.Word32) <= (Data.Bits.FiniteBits);
(GHC.Word.Word16) <= (Data.Bits.FiniteBits);
(GHC.Int.Int8) <= (Data.Bits.Bits);
(GHC.Int.Int64) <= (Data.Bits.Bits);
(GHC.Int.Int32) <= (Data.Bits.Bits);
(GHC.Int.Int16) <= (Data.Bits.Bits);
(GHC.Word.Word8) <= (Data.Bits.Bits);
(GHC.Word.Word64) <= (Data.Bits.Bits);
(GHC.Word.Word32) <= (Data.Bits.Bits);
(GHC.Word.Word16) <= (Data.Bits.Bits);


%%
(cons_2 a_ar8 e_ar7)["":25,18-29@p4.hs] <= (Data.Array.Base.IArray)["":25,18-29@p4.hs] {};["a use of ‘listArray’":25,18-29@p4.hs]
(i_ar6)["":25,18-29@p4.hs] <= (GHC.Arr.Ix)["":25,18-29@p4.hs] {};["a use of ‘listArray’":25,18-29@p4.hs]
(((i_ar6, i_ar6) -> (list e_ar7) -> a_ar8 i_ar6 e_ar7))["":25,18-29@p4.hs] == (((Int, Int) -> (list Double) -> FlatVector))["":25,18-29@p4.hs] {};["a type equality (i_ar6, i_ar6) -> [e_ar7] -> a_ar8 i_ar6 e_ar7 ~ (Int, Int) -> [Double] -> FlatVector":25,18-29@p4.hs]
(a_au2)["":13,21-21@p4.hs] <= (Num)["":13,21-21@p4.hs] {};["the literal ‘1’":13,21-21@p4.hs]
(Int)["":14,21-29@p4.hs] == (t_auG)["":14,21-29@p4.hs] {};["a type equality Int ~ t_auG":14,21-29@p4.hs]
((list a_au2))["":14,28-29@p4.hs] == ((list a_auI))["":14,28-29@p4.hs] {};["a type equality [a_au2] ~ [a_auI]":14,28-29@p4.hs]
((list a_au2))["":16,61-62@p4.hs] == ((list t_auM))["":16,61-62@p4.hs] {};["a type equality [a_au2] ~ [t_auM]":16,61-62@p4.hs]
(FlatVector)["":16,23-56@p4.hs] == (FlatVector)["":16,23-56@p4.hs] {};["a type equality FlatVector ~ FlatVector":16,23-56@p4.hs]
(t_auM)["":16,41-41@p4.hs] == (Int)["":16,41-41@p4.hs] {};["a type equality t_auM ~ Int":16,41-41@p4.hs]
(a_auR)["":16,51-51@p4.hs] <= (Num)["":16,51-51@p4.hs] {};["the literal ‘1’":16,51-51@p4.hs]
((Integer -> a_auR))["":16,51-51@p4.hs] == ((Integer -> t_auQ))["":16,51-51@p4.hs] {};["a type equality Integer -> a_auR ~ Integer -> t_auQ":16,51-51@p4.hs]
(t_auM)["":16,54-54@p4.hs] == (t_auQ)["":16,54-54@p4.hs] {};["a type equality t_auM ~ t_auQ":16,54-54@p4.hs]
(t_auQ)["":16,50-55@p4.hs] <= (Enum)["":16,50-55@p4.hs] {};["the arithmetic sequence ‘1 .. s’":16,50-55@p4.hs]
(Vector a_awT)["":18,21-43@p4.hs] == (Vector FlatVector)["":18,21-43@p4.hs] {};["a type equality Vector a_awT ~ Vector FlatVector":18,21-43@p4.hs]
(t_auG)["":18,35-37@p4.hs] == (Int)["":18,35-37@p4.hs] {};["a type equality t_auG ~ Int":18,35-37@p4.hs]
((list FlatVector))["":18,40-43@p4.hs] == ((list a_awT))["":18,40-43@p4.hs] {};["a type equality [FlatVector] ~ [a_awT]":18,40-43@p4.hs]
(m_ax2)["":19,11-23@p4.hs] <= (Monad)["":19,11-23@p4.hs] {};["a do statement":19,11-23@p4.hs]
((m_ax2 a_ax4 -> (a_ax4 -> m_ax2 b_ax5) -> m_ax2 b_ax5))["":19,11-23@p4.hs] == ((t_awX -> (t_awY -> t_awZ) -> IO EMPTY))["":19,11-23@p4.hs] {};["a type equality m_ax2 a_ax4 -> (a_ax4 -> m_ax2 b_ax5) -> m_ax2 b_ax5 ~ t_awX -> (t_awY -> t_awZ) -> IO ()":19,11-23@p4.hs]
(i_axs)["":19,16-19@p4.hs] <= (GHC.Arr.Ix)["":19,16-19@p4.hs] {};["a use of ‘thaw’":19,16-19@p4.hs]
(cons_2 a_axr e_axt)["":19,16-19@p4.hs] <= (Data.Array.Base.IArray)["":19,16-19@p4.hs] {};["a use of ‘thaw’":19,16-19@p4.hs]
(cons_3 b_axv e_axt m_axu)["":19,16-19@p4.hs] <= (Data.Array.Base.MArray)["":19,16-19@p4.hs] {};["a use of ‘thaw’":19,16-19@p4.hs]
(m_axu (b_axv i_axs e_axt))["":19,16-23@p4.hs] == (t_awX)["":19,16-23@p4.hs] {};["a type equality m_axu (b_axv i_axs e_axt) ~ t_awX":19,16-23@p4.hs]
(Vector FlatVector)["":19,21-23@p4.hs] == (a_axr i_axs e_axt)["":19,21-23@p4.hs] {};["a type equality Vector FlatVector ~ a_axr i_axs e_axt":19,21-23@p4.hs]
(m_axC)["":20,11-16@p4.hs] <= (Monad)["":20,11-16@p4.hs] {};["a use of ‘return’":20,11-16@p4.hs]
(m_axC a_axE)["":20,11-19@p4.hs] == (t_awZ)["":20,11-19@p4.hs] {};["a type equality m_axC a_axE ~ t_awZ":20,11-19@p4.hs]
(EMPTY)["":20,18-19@p4.hs] == (a_axE)["":20,18-19@p4.hs] {};["a type equality () ~ a_axE":20,18-19@p4.hs]
(IO EMPTY)["":13,1-1@p4.hs] == (IO t_axI)["":13,1-1@p4.hs] {};["a type equality IO () ~ IO t_axI":13,1-1@p4.hs]
(cons_2 a_ar0 e_aqZ)["":30,14-25@p4.hs] <= (Data.Array.Base.IArray)["":30,14-25@p4.hs] {};["a use of ‘listArray’":30,14-25@p4.hs]
(i_aqY)["":30,14-25@p4.hs] <= (GHC.Arr.Ix)["":30,14-25@p4.hs] {};["a use of ‘listArray’":30,14-25@p4.hs]
(((i_aqY, i_aqY) -> (list e_aqZ) -> a_ar0 i_aqY e_aqZ))["":30,14-25@p4.hs] == (((Int, Int) -> (list a) -> Vector a))["":30,14-25@p4.hs] {};["a type equality (i_aqY, i_aqY) -> [e_aqZ] -> a_ar0 i_aqY e_aqZ ~ (Int, Int) -> [a] -> Vector a":30,14-25@p4.hs]
