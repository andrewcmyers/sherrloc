rn12
rn13
Tc2 (src)
Tc3
kcTyClGroup
  module Database
  type Table = [[String]]
kcTyClGroup: initial kinds []
env2 []
kcd1 Table []
tc_lhs_type:
  [[String]]
  Expected kind ‘k_abK’
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_abK := *
kcd2 Table
Generalise kind
  Table
  k_abK
  []
  *
kcTyClGroup result [(Table, *)]
tcTyAndCl generalized kinds [(Table, *)]
tcTyAndCl-x type Table = [[String]]
env2 []
env2 []
tc-syn
  Table
  [(r8l, AThing *)]
tc_lhs_type:
  [[String]]
  Expected kind ‘*’
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Table’]
checkValidType [[String]] :: *
checkValidType done [[String]] :: *
env2 []
Adding instances:
addFamInsts
env2 []
tcDeriving
tcDeriving False
tcDeriving 1 []
Adding instances:
Tc3b
tcAmpMissingParentClassWarn/isInsts []
tcAmpMissingParentClassWarn/isInsts []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Monad.join []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.<*> []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.pure []
Tc4
Tc4a
env2 []
Tc5
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Table -> [String]
Before unification
utype_defer
  cobox_aih
  Table
  t_aif
  a type equality Table ~ t_aif
  In the type signature for ‘megablaat’:
    megablaat :: Table -> [String]
utype_defer
  cobox_aii
  [String]
  t_aig
  a type equality [String] ~ t_aig
  In the type signature for ‘megablaat’:
    megablaat :: Table -> [String]
checkValidType t_aif -> t_aig :: *
checkValidType done t_aif -> t_aig :: *
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Table -> String
Before unification
utype_defer
  cobox_ail
  Table
  t_aij
  a type equality Table ~ t_aij
  In the type signature for ‘writeTable’:
    writeTable :: Table -> String
utype_defer
  cobox_aim
  String
  t_aik
  a type equality String ~ t_aik
  In the type signature for ‘writeTable’:
    writeTable :: Table -> String
checkValidType t_aij -> t_aik :: *
checkValidType done t_aij -> t_aik :: *
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table
Before unification
utype_defer
  cobox_aio
  Table
  t_ain
  a type equality Table ~ t_ain
  In the type signature for ‘locaties’: locaties :: Table
checkValidType t_ain :: OpenKind
checkValidType done t_ain :: OpenKind
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table
Before unification
utype_defer
  cobox_aiq
  Table
  t_aip
  a type equality Table ~ t_aip
  In the type signature for ‘compilers’: compilers :: Table
checkValidType t_aip :: OpenKind
checkValidType done t_aip :: OpenKind
env2
  [(megablaat, Identifier[megablaat::t_aif -> t_aig, <NotTopLevel>]),
   (writeTable,
    Identifier[writeTable::t_aij -> t_aik, <NotTopLevel>]),
   (locaties, Identifier[locaties::t_ain, <NotTopLevel>]),
   (compilers, Identifier[compilers::t_aip, <NotTopLevel>])]
------------------------------------------------
Bindings for { [megablaat]
Generalisation plan
  CheckGen megablaat :: t_aif -> t_aig
                        []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  megablaat
  t_aif -> t_aig
tcMatchesFun
  megablaat
  t_aif -> t_aig
tcGen
env2 [(x, Identifier[x::t_aif, <NotTopLevel>])]
tcBody t_aig
Instantiating
  map with [a_aiu, b_aiv]
           []
utype_defer
  cobox_aiw
  [a_aiu] -> [b_aiv]
  t_aig
  a type equality [a_aiu] -> [b_aiv] ~ t_aig
  Possible cause: ‘map’ is applied to too many arguments
  In the expression: map (concat x ++ [""])
  In an equation for ‘megablaat’:
      megablaat x = map (concat x ++ [""])
tcPolyExprNC a_aiu -> b_aiv
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aiy]
          []
utype_defer
  cobox_aiz
  [a_aiy]
  a_aiu -> b_aiv
  a type equality [a_aiy] ~ a_aiu -> b_aiv
  In the first argument of ‘map’, namely ‘(concat x ++ [""])’
  In the expression: map (concat x ++ [""])
  In an equation for ‘megablaat’:
      megablaat x = map (concat x ++ [""])
tcPolyExprNC [a_aiy]
tcGen
Instantiating
  concat with [a_aiB]
              []
utype_defer
  cobox_aiC
  [a_aiB]
  [a_aiy]
  a type equality [a_aiB] ~ [a_aiy]
  In the first argument of ‘(++)’, namely ‘concat x’
  In the first argument of ‘map’, namely ‘(concat x ++ [""])’
tcPolyExprNC [[a_aiB]]
tcGen
utype_defer
  cobox_aiD
  t_aif
  [[a_aiB]]
  a type equality t_aif ~ [[a_aiB]]
  In the first argument of ‘concat’, namely ‘x’
  In the first argument of ‘(++)’, namely ‘concat x’
tcPolyExprNC [a_aiy]
tcGen
tcPolyExpr a_aiy
tcPolyExprNC a_aiy
tcGen
utype_defer
  cobox_aiE
  [Char]
  a_aiy
  a type equality [Char] ~ a_aiy
  In the expression: ""
  In the second argument of ‘(++)’, namely ‘[""]’
  In the first argument of ‘map’, namely ‘(concat x ++ [""])’
addInlinePrags
  megablaat
  []
csb2 [megablaat]
} End of bindings for
  [megablaat]
  NonRecursive
  megablaat t_aif -> t_aig
env2
  [(megablaat, Identifier[megablaat::t_aif -> t_aig, <NotTopLevel>])]
------------------------------------------------
Bindings for { [writeTable]
Generalisation plan
  CheckGen writeTable :: t_aij -> t_aik
                         []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  writeTable
  t_aij -> t_aik
tcMatchesFun
  writeTable
  t_aij -> t_aik
tcGen
env2 [(x, Identifier[x::t_aij, <NotTopLevel>])]
tcBody t_aik
Instantiating
  concat with [a_aiG]
              []
utype_defer
  cobox_aiH
  [a_aiG]
  t_aik
  a type equality [a_aiG] ~ t_aik
  In the expression: concat (megablaat x)
  In an equation for ‘writeTable’:
      writeTable x = concat (megablaat x)
tcPolyExprNC [[a_aiG]]
tcGen
utype_defer
  cobox_aiI
  t_aig
  [[a_aiG]]
  a type equality t_aig ~ [[a_aiG]]
  In the first argument of ‘concat’, namely ‘(megablaat x)’
  In the expression: concat (megablaat x)
tcPolyExprNC t_aif
tcGen
utype_defer
  cobox_aiJ
  t_aij
  t_aif
  a type equality t_aij ~ t_aif
  In the first argument of ‘megablaat’, namely ‘x’
  In the first argument of ‘concat’, namely ‘(megablaat x)’
addInlinePrags
  writeTable
  []
csb2 [writeTable]
} End of bindings for
  [writeTable]
  NonRecursive
  writeTable t_aij -> t_aik
env2
  [(writeTable,
    Identifier[writeTable::t_aij -> t_aik, <NotTopLevel>])]
------------------------------------------------
Bindings for { [locaties]
Generalisation plan
  CheckGen locaties :: t_ain
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  locaties
  t_ain
tcMatchesFun
  locaties
  t_ain
tcGen
tcBody t_ain
utype_defer
  cobox_aiM
  [t_aiL]
  t_ain
  a type equality [t_aiL] ~ t_ain
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiL
tcPolyExprNC t_aiL
tcGen
utype_defer
  cobox_aiO
  [t_aiN]
  t_aiL
  a type equality [t_aiN] ~ t_aiL
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiN
tcPolyExprNC t_aiN
tcGen
utype_defer
  cobox_aiP
  [Char]
  t_aiN
  a type equality [Char] ~ t_aiN
  In the expression: "Universiteit/bedrijf"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiN
tcPolyExprNC t_aiN
tcGen
utype_defer
  cobox_aiQ
  [Char]
  t_aiN
  a type equality [Char] ~ t_aiN
  In the expression: "Land"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiN
tcPolyExprNC t_aiN
tcGen
utype_defer
  cobox_aiR
  [Char]
  t_aiN
  a type equality [Char] ~ t_aiN
  In the expression: "Stad"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiL
tcPolyExprNC t_aiL
tcGen
utype_defer
  cobox_aiT
  [t_aiS]
  t_aiL
  a type equality [t_aiS] ~ t_aiL
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiS
tcPolyExprNC t_aiS
tcGen
utype_defer
  cobox_aiU
  [Char]
  t_aiS
  a type equality [Char] ~ t_aiS
  In the expression: "Universiteit van Utrecht"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiS
tcPolyExprNC t_aiS
tcGen
utype_defer
  cobox_aiV
  [Char]
  t_aiS
  a type equality [Char] ~ t_aiS
  In the expression: "Nederland"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiS
tcPolyExprNC t_aiS
tcGen
utype_defer
  cobox_aiW
  [Char]
  t_aiS
  a type equality [Char] ~ t_aiS
  In the expression: "Utrecht"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiL
tcPolyExprNC t_aiL
tcGen
utype_defer
  cobox_aiY
  [t_aiX]
  t_aiL
  a type equality [t_aiX] ~ t_aiL
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiX
tcPolyExprNC t_aiX
tcGen
utype_defer
  cobox_aiZ
  [Char]
  t_aiX
  a type equality [Char] ~ t_aiX
  In the expression: "University of York"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiX
tcPolyExprNC t_aiX
tcGen
utype_defer
  cobox_aj0
  [Char]
  t_aiX
  a type equality [Char] ~ t_aiX
  In the expression: "Engeland"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiX
tcPolyExprNC t_aiX
tcGen
utype_defer
  cobox_aj1
  [Char]
  t_aiX
  a type equality [Char] ~ t_aiX
  In the expression: "York"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiL
tcPolyExprNC t_aiL
tcGen
utype_defer
  cobox_aj3
  [t_aj2]
  t_aiL
  a type equality [t_aj2] ~ t_aiL
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj2
tcPolyExprNC t_aj2
tcGen
utype_defer
  cobox_aj4
  [Char]
  t_aj2
  a type equality [Char] ~ t_aj2
  In the expression: "Microsoft Research"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj2
tcPolyExprNC t_aj2
tcGen
utype_defer
  cobox_aj5
  [Char]
  t_aj2
  a type equality [Char] ~ t_aj2
  In the expression: "Engeland"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj2
tcPolyExprNC t_aj2
tcGen
utype_defer
  cobox_aj6
  [Char]
  t_aj2
  a type equality [Char] ~ t_aj2
  In the expression: "Cambridge"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiL
tcPolyExprNC t_aiL
tcGen
utype_defer
  cobox_aj8
  [t_aj7]
  t_aiL
  a type equality [t_aj7] ~ t_aiL
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj7
tcPolyExprNC t_aj7
tcGen
utype_defer
  cobox_aj9
  [Char]
  t_aj7
  a type equality [Char] ~ t_aj7
  In the expression: "Galois Connections"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj7
tcPolyExprNC t_aj7
tcGen
utype_defer
  cobox_aja
  [Char]
  t_aj7
  a type equality [Char] ~ t_aj7
  In the expression: "Verenigde Staten"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj7
tcPolyExprNC t_aj7
tcGen
utype_defer
  cobox_ajb
  [Char]
  t_aj7
  a type equality [Char] ~ t_aj7
  In the expression: "Beaverton"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiL
tcPolyExprNC t_aiL
tcGen
utype_defer
  cobox_ajd
  [t_ajc]
  t_aiL
  a type equality [t_ajc] ~ t_aiL
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajc
tcPolyExprNC t_ajc
tcGen
utype_defer
  cobox_aje
  [Char]
  t_ajc
  a type equality [Char] ~ t_ajc
  In the expression: "Oregon Graduate Institute"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajc
tcPolyExprNC t_ajc
tcGen
utype_defer
  cobox_ajf
  [Char]
  t_ajc
  a type equality [Char] ~ t_ajc
  In the expression: "Verenigde Staten"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajc
tcPolyExprNC t_ajc
tcGen
utype_defer
  cobox_ajg
  [Char]
  t_ajc
  a type equality [Char] ~ t_ajc
  In the expression: "Beaverton"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aiL
tcPolyExprNC t_aiL
tcGen
utype_defer
  cobox_aji
  [t_ajh]
  t_aiL
  a type equality [t_ajh] ~ t_aiL
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajh
tcPolyExprNC t_ajh
tcGen
utype_defer
  cobox_ajj
  [Char]
  t_ajh
  a type equality [Char] ~ t_ajh
  In the expression: "Chalmers University of Technology"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajh
tcPolyExprNC t_ajh
tcGen
utype_defer
  cobox_ajk
  [Char]
  t_ajh
  a type equality [Char] ~ t_ajh
  In the expression: "Zweden"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajh
tcPolyExprNC t_ajh
tcGen
utype_defer
  cobox_ajl
  [Char]
  t_ajh
  a type equality [Char] ~ t_ajh
  In the expression: "Goteborg"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
addInlinePrags
  locaties
  []
csb2 [locaties]
} End of bindings for
  [locaties]
  NonRecursive
  locaties t_ain
env2 [(locaties, Identifier[locaties::t_ain, <NotTopLevel>])]
------------------------------------------------
Bindings for { [compilers]
Generalisation plan
  CheckGen compilers :: t_aip
                        []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  compilers
  t_aip
tcMatchesFun
  compilers
  t_aip
tcGen
tcBody t_aip
utype_defer
  cobox_ajo
  [t_ajn]
  t_aip
  a type equality [t_ajn] ~ t_aip
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_ajq
  [t_ajp]
  t_ajn
  a type equality [t_ajp] ~ t_ajn
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajp
tcPolyExprNC t_ajp
tcGen
utype_defer
  cobox_ajr
  [Char]
  t_ajp
  a type equality [Char] ~ t_ajp
  In the expression: "Compiler"
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajp
tcPolyExprNC t_ajp
tcGen
utype_defer
  cobox_ajs
  [Char]
  t_ajp
  a type equality [Char] ~ t_ajp
  In the expression: "Universiteit/bedrijf"
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_aju
  [t_ajt]
  t_ajn
  a type equality [t_ajt] ~ t_ajn
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajt
tcPolyExprNC t_ajt
tcGen
utype_defer
  cobox_ajv
  [Char]
  t_ajt
  a type equality [Char] ~ t_ajt
  In the expression: "Helium"
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajt
tcPolyExprNC t_ajt
tcGen
utype_defer
  cobox_ajw
  [Char]
  t_ajt
  a type equality [Char] ~ t_ajt
  In the expression: "Universiteit van Utrecht"
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_ajy
  [t_ajx]
  t_ajn
  a type equality [t_ajx] ~ t_ajn
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajx
tcPolyExprNC t_ajx
tcGen
utype_defer
  cobox_ajz
  [Char]
  t_ajx
  a type equality [Char] ~ t_ajx
  In the expression: "NHC"
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajx
tcPolyExprNC t_ajx
tcGen
utype_defer
  cobox_ajA
  [Char]
  t_ajx
  a type equality [Char] ~ t_ajx
  In the expression: "University of York"
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_ajC
  [t_ajB]
  t_ajn
  a type equality [t_ajB] ~ t_ajn
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajB
tcPolyExprNC t_ajB
tcGen
utype_defer
  cobox_ajD
  [Char]
  t_ajB
  a type equality [Char] ~ t_ajB
  In the expression: "GHC"
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajB
tcPolyExprNC t_ajB
tcGen
utype_defer
  cobox_ajE
  [Char]
  t_ajB
  a type equality [Char] ~ t_ajB
  In the expression: "Microsoft Research"
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_ajG
  [t_ajF]
  t_ajn
  a type equality [t_ajF] ~ t_ajn
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ajH
  [Char]
  t_ajF
  a type equality [Char] ~ t_ajF
  In the expression: "Hugs"
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ajI
  [Char]
  t_ajF
  a type equality [Char] ~ t_ajF
  In the expression: "Galois Connections"
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_ajK
  [t_ajJ]
  t_ajn
  a type equality [t_ajJ] ~ t_ajn
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajJ
tcPolyExprNC t_ajJ
tcGen
utype_defer
  cobox_ajL
  [Char]
  t_ajJ
  a type equality [Char] ~ t_ajJ
  In the expression: "Hugs.NET"
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajJ
tcPolyExprNC t_ajJ
tcGen
utype_defer
  cobox_ajM
  [Char]
  t_ajJ
  a type equality [Char] ~ t_ajJ
  In the expression: "Galois Connections"
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_ajO
  [t_ajN]
  t_ajn
  a type equality [t_ajN] ~ t_ajn
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajN
tcPolyExprNC t_ajN
tcGen
utype_defer
  cobox_ajP
  [Char]
  t_ajN
  a type equality [Char] ~ t_ajN
  In the expression: "O'Haskell"
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajN
tcPolyExprNC t_ajN
tcGen
utype_defer
  cobox_ajQ
  [Char]
  t_ajN
  a type equality [Char] ~ t_ajN
  In the expression: "Oregon Graduate Institute"
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_ajS
  [t_ajR]
  t_ajn
  a type equality [t_ajR] ~ t_ajn
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajR
tcPolyExprNC t_ajR
tcGen
utype_defer
  cobox_ajT
  [Char]
  t_ajR
  a type equality [Char] ~ t_ajR
  In the expression: "O'Haskell"
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajR
tcPolyExprNC t_ajR
tcGen
utype_defer
  cobox_ajU
  [Char]
  t_ajR
  a type equality [Char] ~ t_ajR
  In the expression: "Chalmers University of Technology"
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajn
tcPolyExprNC t_ajn
tcGen
utype_defer
  cobox_ajW
  [t_ajV]
  t_ajn
  a type equality [t_ajV] ~ t_ajn
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajV
tcPolyExprNC t_ajV
tcGen
utype_defer
  cobox_ajX
  [Char]
  t_ajV
  a type equality [Char] ~ t_ajV
  In the expression: "HBC"
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajV
tcPolyExprNC t_ajV
tcGen
utype_defer
  cobox_ajY
  [Char]
  t_ajV
  a type equality [Char] ~ t_ajV
  In the expression: "Chalmers University of Technology"
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
addInlinePrags
  compilers
  []
csb2 [compilers]
} End of bindings for
  [compilers]
  NonRecursive
  compilers t_aip
env2 [(compilers, Identifier[compilers::t_aip, <NotTopLevel>])]
Tc6
env2 []
Tc7
End of tcVectDecls: LIE:
  WC {wc_flat = [W] cobox_aih :: Table
                                 ~ t_aif [" a type equality Table
                                                            ~
                                                            t_aif " Database.hs:30:14-30] (CNonCanonical)
                [W] cobox_aii :: [String] ~ t_aig [" a type equality [String]
                                                                     ~
                                                                     t_aig " Database.hs:30:14-30] (CNonCanonical)
                [W] cobox_ail :: Table ~ t_aij [" a type equality Table
                                                                  ~
                                                                  t_aij " Database.hs:27:15-29] (CNonCanonical)
                [W] cobox_aim :: String ~ t_aik [" a type equality String
                                                                   ~
                                                                   t_aik " Database.hs:27:15-29] (CNonCanonical)
                [W] cobox_aio :: Table ~ t_ain [" a type equality Table
                                                                  ~
                                                                  t_ain " Database.hs:16:13-17] (CNonCanonical)
                [W] cobox_aiq :: Table ~ t_aip [" a type equality Table
                                                                  ~
                                                                  t_aip " Database.hs:3:14-18] (CNonCanonical)
                [W] cobox_aiw :: ([a_aiu] -> [b_aiv])
                                 ~ t_aig [" a type equality [a_aiu] -> [b_aiv]
                                                            ~
                                                            t_aig " Database.hs:31:15-38] (CNonCanonical)
                [W] cobox_aiz :: [a_aiy]
                                 ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                       ~
                                                                       a_aiu
                                                                       -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
                [W] cobox_aiC :: [a_aiB] ~ [a_aiy] [" a type equality [a_aiB]
                                                                      ~
                                                                      [a_aiy] " Database.hs:31:20-27] (CNonCanonical)
                [W] cobox_aiD :: t_aif ~ [[a_aiB]] [" a type equality t_aif
                                                                      ~
                                                                      [[a_aiB]] " Database.hs:31:27] (CNonCanonical)
                [W] cobox_aiE :: [Char] ~ a_aiy [" a type equality [Char]
                                                                   ~
                                                                   a_aiy " Database.hs:31:33-36] (CNonCanonical)
                [W] cobox_aiH :: [a_aiG] ~ t_aik [" a type equality [a_aiG]
                                                                    ~
                                                                    t_aik " Database.hs:28:16-35] (CNonCanonical)
                [W] cobox_aiI :: t_aig ~ [[a_aiG]] [" a type equality t_aig
                                                                      ~
                                                                      [[a_aiG]] " Database.hs:28:24-34] (CNonCanonical)
                [W] cobox_aiJ :: t_aij ~ t_aif [" a type equality t_aij
                                                                  ~
                                                                  t_aif " Database.hs:28:34] (CNonCanonical)
                [W] cobox_aiM :: [t_aiL] ~ t_ain [" a type equality [t_aiL]
                                                                    ~
                                                                    t_ain " Database.hs:(18,3)-(25,3)] (CNonCanonical)
                [W] cobox_aiO :: [t_aiN] ~ t_aiL [" a type equality [t_aiN]
                                                                    ~
                                                                    t_aiL " Database.hs:18:5-44] (CNonCanonical)
                [W] cobox_aiP :: [Char] ~ t_aiN [" a type equality [Char]
                                                                   ~
                                                                   t_aiN " Database.hs:18:6-27] (CNonCanonical)
                [W] cobox_aiQ :: [Char] ~ t_aiN [" a type equality [Char]
                                                                   ~
                                                                   t_aiN " Database.hs:18:30-35] (CNonCanonical)
                [W] cobox_aiR :: [Char] ~ t_aiN [" a type equality [Char]
                                                                   ~
                                                                   t_aiN " Database.hs:18:38-43] (CNonCanonical)
                [W] cobox_aiT :: [t_aiS] ~ t_aiL [" a type equality [t_aiS]
                                                                    ~
                                                                    t_aiL " Database.hs:19:5-56] (CNonCanonical)
                [W] cobox_aiU :: [Char] ~ t_aiS [" a type equality [Char]
                                                                   ~
                                                                   t_aiS " Database.hs:19:6-31] (CNonCanonical)
                [W] cobox_aiV :: [Char] ~ t_aiS [" a type equality [Char]
                                                                   ~
                                                                   t_aiS " Database.hs:19:34-44] (CNonCanonical)
                [W] cobox_aiW :: [Char] ~ t_aiS [" a type equality [Char]
                                                                   ~
                                                                   t_aiS " Database.hs:19:47-55] (CNonCanonical)
                [W] cobox_aiY :: [t_aiX] ~ t_aiL [" a type equality [t_aiX]
                                                                    ~
                                                                    t_aiL " Database.hs:20:5-46] (CNonCanonical)
                [W] cobox_aiZ :: [Char] ~ t_aiX [" a type equality [Char]
                                                                   ~
                                                                   t_aiX " Database.hs:20:6-25] (CNonCanonical)
                [W] cobox_aj0 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                   ~
                                                                   t_aiX " Database.hs:20:28-37] (CNonCanonical)
                [W] cobox_aj1 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                   ~
                                                                   t_aiX " Database.hs:20:40-45] (CNonCanonical)
                [W] cobox_aj3 :: [t_aj2] ~ t_aiL [" a type equality [t_aj2]
                                                                    ~
                                                                    t_aiL " Database.hs:21:5-51] (CNonCanonical)
                [W] cobox_aj4 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                   ~
                                                                   t_aj2 " Database.hs:21:6-25] (CNonCanonical)
                [W] cobox_aj5 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                   ~
                                                                   t_aj2 " Database.hs:21:28-37] (CNonCanonical)
                [W] cobox_aj6 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                   ~
                                                                   t_aj2 " Database.hs:21:40-50] (CNonCanonical)
                [W] cobox_aj8 :: [t_aj7] ~ t_aiL [" a type equality [t_aj7]
                                                                    ~
                                                                    t_aiL " Database.hs:22:5-59] (CNonCanonical)
                [W] cobox_aj9 :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                   ~
                                                                   t_aj7 " Database.hs:22:6-25] (CNonCanonical)
                [W] cobox_aja :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                   ~
                                                                   t_aj7 " Database.hs:22:28-45] (CNonCanonical)
                [W] cobox_ajb :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                   ~
                                                                   t_aj7 " Database.hs:22:48-58] (CNonCanonical)
                [W] cobox_ajd :: [t_ajc] ~ t_aiL [" a type equality [t_ajc]
                                                                    ~
                                                                    t_aiL " Database.hs:23:5-66] (CNonCanonical)
                [W] cobox_aje :: [Char] ~ t_ajc [" a type equality [Char]
                                                                   ~
                                                                   t_ajc " Database.hs:23:6-32] (CNonCanonical)
                [W] cobox_ajf :: [Char] ~ t_ajc [" a type equality [Char]
                                                                   ~
                                                                   t_ajc " Database.hs:23:35-52] (CNonCanonical)
                [W] cobox_ajg :: [Char] ~ t_ajc [" a type equality [Char]
                                                                   ~
                                                                   t_ajc " Database.hs:23:55-65] (CNonCanonical)
                [W] cobox_aji :: [t_ajh] ~ t_aiL [" a type equality [t_ajh]
                                                                    ~
                                                                    t_aiL " Database.hs:24:5-63] (CNonCanonical)
                [W] cobox_ajj :: [Char] ~ t_ajh [" a type equality [Char]
                                                                   ~
                                                                   t_ajh " Database.hs:24:6-40] (CNonCanonical)
                [W] cobox_ajk :: [Char] ~ t_ajh [" a type equality [Char]
                                                                   ~
                                                                   t_ajh " Database.hs:24:43-50] (CNonCanonical)
                [W] cobox_ajl :: [Char] ~ t_ajh [" a type equality [Char]
                                                                   ~
                                                                   t_ajh " Database.hs:24:53-62] (CNonCanonical)
                [W] cobox_ajo :: [t_ajn] ~ t_aip [" a type equality [t_ajn]
                                                                    ~
                                                                    t_aip " Database.hs:(5,3)-(14,3)] (CNonCanonical)
                [W] cobox_ajq :: [t_ajp] ~ t_ajn [" a type equality [t_ajp]
                                                                    ~
                                                                    t_ajn " Database.hs:5:5-40] (CNonCanonical)
                [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Database.hs:5:6-15] (CNonCanonical)
                [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Database.hs:5:18-39] (CNonCanonical)
                [W] cobox_aju :: [t_ajt] ~ t_ajn [" a type equality [t_ajt]
                                                                    ~
                                                                    t_ajn " Database.hs:6:5-42] (CNonCanonical)
                [W] cobox_ajv :: [Char] ~ t_ajt [" a type equality [Char]
                                                                   ~
                                                                   t_ajt " Database.hs:6:6-13] (CNonCanonical)
                [W] cobox_ajw :: [Char] ~ t_ajt [" a type equality [Char]
                                                                   ~
                                                                   t_ajt " Database.hs:6:16-41] (CNonCanonical)
                [W] cobox_ajy :: [t_ajx] ~ t_ajn [" a type equality [t_ajx]
                                                                    ~
                                                                    t_ajn " Database.hs:7:5-33] (CNonCanonical)
                [W] cobox_ajz :: [Char] ~ t_ajx [" a type equality [Char]
                                                                   ~
                                                                   t_ajx " Database.hs:7:6-10] (CNonCanonical)
                [W] cobox_ajA :: [Char] ~ t_ajx [" a type equality [Char]
                                                                   ~
                                                                   t_ajx " Database.hs:7:13-32] (CNonCanonical)
                [W] cobox_ajC :: [t_ajB] ~ t_ajn [" a type equality [t_ajB]
                                                                    ~
                                                                    t_ajn " Database.hs:8:5-33] (CNonCanonical)
                [W] cobox_ajD :: [Char] ~ t_ajB [" a type equality [Char]
                                                                   ~
                                                                   t_ajB " Database.hs:8:6-10] (CNonCanonical)
                [W] cobox_ajE :: [Char] ~ t_ajB [" a type equality [Char]
                                                                   ~
                                                                   t_ajB " Database.hs:8:13-32] (CNonCanonical)
                [W] cobox_ajG :: [t_ajF] ~ t_ajn [" a type equality [t_ajF]
                                                                    ~
                                                                    t_ajn " Database.hs:9:5-34] (CNonCanonical)
                [W] cobox_ajH :: [Char] ~ t_ajF [" a type equality [Char]
                                                                   ~
                                                                   t_ajF " Database.hs:9:6-11] (CNonCanonical)
                [W] cobox_ajI :: [Char] ~ t_ajF [" a type equality [Char]
                                                                   ~
                                                                   t_ajF " Database.hs:9:14-33] (CNonCanonical)
                [W] cobox_ajK :: [t_ajJ] ~ t_ajn [" a type equality [t_ajJ]
                                                                    ~
                                                                    t_ajn " Database.hs:10:5-38] (CNonCanonical)
                [W] cobox_ajL :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                   ~
                                                                   t_ajJ " Database.hs:10:6-15] (CNonCanonical)
                [W] cobox_ajM :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                   ~
                                                                   t_ajJ " Database.hs:10:18-37] (CNonCanonical)
                [W] cobox_ajO :: [t_ajN] ~ t_ajn [" a type equality [t_ajN]
                                                                    ~
                                                                    t_ajn " Database.hs:11:5-46] (CNonCanonical)
                [W] cobox_ajP :: [Char] ~ t_ajN [" a type equality [Char]
                                                                   ~
                                                                   t_ajN " Database.hs:11:6-16] (CNonCanonical)
                [W] cobox_ajQ :: [Char] ~ t_ajN [" a type equality [Char]
                                                                   ~
                                                                   t_ajN " Database.hs:11:19-45] (CNonCanonical)
                [W] cobox_ajS :: [t_ajR] ~ t_ajn [" a type equality [t_ajR]
                                                                    ~
                                                                    t_ajn " Database.hs:12:5-54] (CNonCanonical)
                [W] cobox_ajT :: [Char] ~ t_ajR [" a type equality [Char]
                                                                   ~
                                                                   t_ajR " Database.hs:12:6-16] (CNonCanonical)
                [W] cobox_ajU :: [Char] ~ t_ajR [" a type equality [Char]
                                                                   ~
                                                                   t_ajR " Database.hs:12:19-53] (CNonCanonical)
                [W] cobox_ajW :: [t_ajV] ~ t_ajn [" a type equality [t_ajV]
                                                                    ~
                                                                    t_ajn " Database.hs:13:5-48] (CNonCanonical)
                [W] cobox_ajX :: [Char] ~ t_ajV [" a type equality [Char]
                                                                   ~
                                                                   t_ajV " Database.hs:13:6-10] (CNonCanonical)
                [W] cobox_ajY :: [Char] ~ t_ajV [" a type equality [Char]
                                                                   ~
                                                                   t_ajV " Database.hs:13:13-47] (CNonCanonical)}
Tc7a
checkMain not Main Database
Tc8
simplifyTop {
  wanted =  WC {wc_flat = [W] cobox_aih :: Table
                                           ~ t_aif [" a type equality Table
                                                                      ~
                                                                      t_aif " Database.hs:30:14-30] (CNonCanonical)
                          [W] cobox_aii :: [String] ~ t_aig [" a type equality [String]
                                                                               ~
                                                                               t_aig " Database.hs:30:14-30] (CNonCanonical)
                          [W] cobox_ail :: Table ~ t_aij [" a type equality Table
                                                                            ~
                                                                            t_aij " Database.hs:27:15-29] (CNonCanonical)
                          [W] cobox_aim :: String ~ t_aik [" a type equality String
                                                                             ~
                                                                             t_aik " Database.hs:27:15-29] (CNonCanonical)
                          [W] cobox_aio :: Table ~ t_ain [" a type equality Table
                                                                            ~
                                                                            t_ain " Database.hs:16:13-17] (CNonCanonical)
                          [W] cobox_aiq :: Table ~ t_aip [" a type equality Table
                                                                            ~
                                                                            t_aip " Database.hs:3:14-18] (CNonCanonical)
                          [W] cobox_aiw :: ([a_aiu] -> [b_aiv])
                                           ~ t_aig [" a type equality [a_aiu] -> [b_aiv]
                                                                      ~
                                                                      t_aig " Database.hs:31:15-38] (CNonCanonical)
                          [W] cobox_aiz :: [a_aiy]
                                           ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                                 ~
                                                                                 a_aiu
                                                                                 -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
                          [W] cobox_aiC :: [a_aiB] ~ [a_aiy] [" a type equality [a_aiB]
                                                                                ~
                                                                                [a_aiy] " Database.hs:31:20-27] (CNonCanonical)
                          [W] cobox_aiD :: t_aif ~ [[a_aiB]] [" a type equality t_aif
                                                                                ~
                                                                                [[a_aiB]] " Database.hs:31:27] (CNonCanonical)
                          [W] cobox_aiE :: [Char] ~ a_aiy [" a type equality [Char]
                                                                             ~
                                                                             a_aiy " Database.hs:31:33-36] (CNonCanonical)
                          [W] cobox_aiH :: [a_aiG] ~ t_aik [" a type equality [a_aiG]
                                                                              ~
                                                                              t_aik " Database.hs:28:16-35] (CNonCanonical)
                          [W] cobox_aiI :: t_aig ~ [[a_aiG]] [" a type equality t_aig
                                                                                ~
                                                                                [[a_aiG]] " Database.hs:28:24-34] (CNonCanonical)
                          [W] cobox_aiJ :: t_aij ~ t_aif [" a type equality t_aij
                                                                            ~
                                                                            t_aif " Database.hs:28:34] (CNonCanonical)
                          [W] cobox_aiM :: [t_aiL] ~ t_ain [" a type equality [t_aiL]
                                                                              ~
                                                                              t_ain " Database.hs:(18,3)-(25,3)] (CNonCanonical)
                          [W] cobox_aiO :: [t_aiN] ~ t_aiL [" a type equality [t_aiN]
                                                                              ~
                                                                              t_aiL " Database.hs:18:5-44] (CNonCanonical)
                          [W] cobox_aiP :: [Char] ~ t_aiN [" a type equality [Char]
                                                                             ~
                                                                             t_aiN " Database.hs:18:6-27] (CNonCanonical)
                          [W] cobox_aiQ :: [Char] ~ t_aiN [" a type equality [Char]
                                                                             ~
                                                                             t_aiN " Database.hs:18:30-35] (CNonCanonical)
                          [W] cobox_aiR :: [Char] ~ t_aiN [" a type equality [Char]
                                                                             ~
                                                                             t_aiN " Database.hs:18:38-43] (CNonCanonical)
                          [W] cobox_aiT :: [t_aiS] ~ t_aiL [" a type equality [t_aiS]
                                                                              ~
                                                                              t_aiL " Database.hs:19:5-56] (CNonCanonical)
                          [W] cobox_aiU :: [Char] ~ t_aiS [" a type equality [Char]
                                                                             ~
                                                                             t_aiS " Database.hs:19:6-31] (CNonCanonical)
                          [W] cobox_aiV :: [Char] ~ t_aiS [" a type equality [Char]
                                                                             ~
                                                                             t_aiS " Database.hs:19:34-44] (CNonCanonical)
                          [W] cobox_aiW :: [Char] ~ t_aiS [" a type equality [Char]
                                                                             ~
                                                                             t_aiS " Database.hs:19:47-55] (CNonCanonical)
                          [W] cobox_aiY :: [t_aiX] ~ t_aiL [" a type equality [t_aiX]
                                                                              ~
                                                                              t_aiL " Database.hs:20:5-46] (CNonCanonical)
                          [W] cobox_aiZ :: [Char] ~ t_aiX [" a type equality [Char]
                                                                             ~
                                                                             t_aiX " Database.hs:20:6-25] (CNonCanonical)
                          [W] cobox_aj0 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                             ~
                                                                             t_aiX " Database.hs:20:28-37] (CNonCanonical)
                          [W] cobox_aj1 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                             ~
                                                                             t_aiX " Database.hs:20:40-45] (CNonCanonical)
                          [W] cobox_aj3 :: [t_aj2] ~ t_aiL [" a type equality [t_aj2]
                                                                              ~
                                                                              t_aiL " Database.hs:21:5-51] (CNonCanonical)
                          [W] cobox_aj4 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                             ~
                                                                             t_aj2 " Database.hs:21:6-25] (CNonCanonical)
                          [W] cobox_aj5 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                             ~
                                                                             t_aj2 " Database.hs:21:28-37] (CNonCanonical)
                          [W] cobox_aj6 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                             ~
                                                                             t_aj2 " Database.hs:21:40-50] (CNonCanonical)
                          [W] cobox_aj8 :: [t_aj7] ~ t_aiL [" a type equality [t_aj7]
                                                                              ~
                                                                              t_aiL " Database.hs:22:5-59] (CNonCanonical)
                          [W] cobox_aj9 :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                             ~
                                                                             t_aj7 " Database.hs:22:6-25] (CNonCanonical)
                          [W] cobox_aja :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                             ~
                                                                             t_aj7 " Database.hs:22:28-45] (CNonCanonical)
                          [W] cobox_ajb :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                             ~
                                                                             t_aj7 " Database.hs:22:48-58] (CNonCanonical)
                          [W] cobox_ajd :: [t_ajc] ~ t_aiL [" a type equality [t_ajc]
                                                                              ~
                                                                              t_aiL " Database.hs:23:5-66] (CNonCanonical)
                          [W] cobox_aje :: [Char] ~ t_ajc [" a type equality [Char]
                                                                             ~
                                                                             t_ajc " Database.hs:23:6-32] (CNonCanonical)
                          [W] cobox_ajf :: [Char] ~ t_ajc [" a type equality [Char]
                                                                             ~
                                                                             t_ajc " Database.hs:23:35-52] (CNonCanonical)
                          [W] cobox_ajg :: [Char] ~ t_ajc [" a type equality [Char]
                                                                             ~
                                                                             t_ajc " Database.hs:23:55-65] (CNonCanonical)
                          [W] cobox_aji :: [t_ajh] ~ t_aiL [" a type equality [t_ajh]
                                                                              ~
                                                                              t_aiL " Database.hs:24:5-63] (CNonCanonical)
                          [W] cobox_ajj :: [Char] ~ t_ajh [" a type equality [Char]
                                                                             ~
                                                                             t_ajh " Database.hs:24:6-40] (CNonCanonical)
                          [W] cobox_ajk :: [Char] ~ t_ajh [" a type equality [Char]
                                                                             ~
                                                                             t_ajh " Database.hs:24:43-50] (CNonCanonical)
                          [W] cobox_ajl :: [Char] ~ t_ajh [" a type equality [Char]
                                                                             ~
                                                                             t_ajh " Database.hs:24:53-62] (CNonCanonical)
                          [W] cobox_ajo :: [t_ajn] ~ t_aip [" a type equality [t_ajn]
                                                                              ~
                                                                              t_aip " Database.hs:(5,3)-(14,3)] (CNonCanonical)
                          [W] cobox_ajq :: [t_ajp] ~ t_ajn [" a type equality [t_ajp]
                                                                              ~
                                                                              t_ajn " Database.hs:5:5-40] (CNonCanonical)
                          [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Database.hs:5:6-15] (CNonCanonical)
                          [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Database.hs:5:18-39] (CNonCanonical)
                          [W] cobox_aju :: [t_ajt] ~ t_ajn [" a type equality [t_ajt]
                                                                              ~
                                                                              t_ajn " Database.hs:6:5-42] (CNonCanonical)
                          [W] cobox_ajv :: [Char] ~ t_ajt [" a type equality [Char]
                                                                             ~
                                                                             t_ajt " Database.hs:6:6-13] (CNonCanonical)
                          [W] cobox_ajw :: [Char] ~ t_ajt [" a type equality [Char]
                                                                             ~
                                                                             t_ajt " Database.hs:6:16-41] (CNonCanonical)
                          [W] cobox_ajy :: [t_ajx] ~ t_ajn [" a type equality [t_ajx]
                                                                              ~
                                                                              t_ajn " Database.hs:7:5-33] (CNonCanonical)
                          [W] cobox_ajz :: [Char] ~ t_ajx [" a type equality [Char]
                                                                             ~
                                                                             t_ajx " Database.hs:7:6-10] (CNonCanonical)
                          [W] cobox_ajA :: [Char] ~ t_ajx [" a type equality [Char]
                                                                             ~
                                                                             t_ajx " Database.hs:7:13-32] (CNonCanonical)
                          [W] cobox_ajC :: [t_ajB] ~ t_ajn [" a type equality [t_ajB]
                                                                              ~
                                                                              t_ajn " Database.hs:8:5-33] (CNonCanonical)
                          [W] cobox_ajD :: [Char] ~ t_ajB [" a type equality [Char]
                                                                             ~
                                                                             t_ajB " Database.hs:8:6-10] (CNonCanonical)
                          [W] cobox_ajE :: [Char] ~ t_ajB [" a type equality [Char]
                                                                             ~
                                                                             t_ajB " Database.hs:8:13-32] (CNonCanonical)
                          [W] cobox_ajG :: [t_ajF] ~ t_ajn [" a type equality [t_ajF]
                                                                              ~
                                                                              t_ajn " Database.hs:9:5-34] (CNonCanonical)
                          [W] cobox_ajH :: [Char] ~ t_ajF [" a type equality [Char]
                                                                             ~
                                                                             t_ajF " Database.hs:9:6-11] (CNonCanonical)
                          [W] cobox_ajI :: [Char] ~ t_ajF [" a type equality [Char]
                                                                             ~
                                                                             t_ajF " Database.hs:9:14-33] (CNonCanonical)
                          [W] cobox_ajK :: [t_ajJ] ~ t_ajn [" a type equality [t_ajJ]
                                                                              ~
                                                                              t_ajn " Database.hs:10:5-38] (CNonCanonical)
                          [W] cobox_ajL :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                             ~
                                                                             t_ajJ " Database.hs:10:6-15] (CNonCanonical)
                          [W] cobox_ajM :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                             ~
                                                                             t_ajJ " Database.hs:10:18-37] (CNonCanonical)
                          [W] cobox_ajO :: [t_ajN] ~ t_ajn [" a type equality [t_ajN]
                                                                              ~
                                                                              t_ajn " Database.hs:11:5-46] (CNonCanonical)
                          [W] cobox_ajP :: [Char] ~ t_ajN [" a type equality [Char]
                                                                             ~
                                                                             t_ajN " Database.hs:11:6-16] (CNonCanonical)
                          [W] cobox_ajQ :: [Char] ~ t_ajN [" a type equality [Char]
                                                                             ~
                                                                             t_ajN " Database.hs:11:19-45] (CNonCanonical)
                          [W] cobox_ajS :: [t_ajR] ~ t_ajn [" a type equality [t_ajR]
                                                                              ~
                                                                              t_ajn " Database.hs:12:5-54] (CNonCanonical)
                          [W] cobox_ajT :: [Char] ~ t_ajR [" a type equality [Char]
                                                                             ~
                                                                             t_ajR " Database.hs:12:6-16] (CNonCanonical)
                          [W] cobox_ajU :: [Char] ~ t_ajR [" a type equality [Char]
                                                                             ~
                                                                             t_ajR " Database.hs:12:19-53] (CNonCanonical)
                          [W] cobox_ajW :: [t_ajV] ~ t_ajn [" a type equality [t_ajV]
                                                                              ~
                                                                              t_ajn " Database.hs:13:5-48] (CNonCanonical)
                          [W] cobox_ajX :: [Char] ~ t_ajV [" a type equality [Char]
                                                                             ~
                                                                             t_ajV " Database.hs:13:6-10] (CNonCanonical)
                          [W] cobox_ajY :: [Char] ~ t_ajV [" a type equality [Char]
                                                                             ~
                                                                             t_ajV " Database.hs:13:13-47] (CNonCanonical)}
solveWantedsTcMWithEvBinds
  wanted= WC {wc_flat = [W] cobox_aih :: Table
                                         ~ t_aif [" a type equality Table
                                                                    ~
                                                                    t_aif " Database.hs:30:14-30] (CNonCanonical)
                        [W] cobox_aii :: [String] ~ t_aig [" a type equality [String]
                                                                             ~
                                                                             t_aig " Database.hs:30:14-30] (CNonCanonical)
                        [W] cobox_ail :: Table ~ t_aij [" a type equality Table
                                                                          ~
                                                                          t_aij " Database.hs:27:15-29] (CNonCanonical)
                        [W] cobox_aim :: String ~ t_aik [" a type equality String
                                                                           ~
                                                                           t_aik " Database.hs:27:15-29] (CNonCanonical)
                        [W] cobox_aio :: Table ~ t_ain [" a type equality Table
                                                                          ~
                                                                          t_ain " Database.hs:16:13-17] (CNonCanonical)
                        [W] cobox_aiq :: Table ~ t_aip [" a type equality Table
                                                                          ~
                                                                          t_aip " Database.hs:3:14-18] (CNonCanonical)
                        [W] cobox_aiw :: ([a_aiu] -> [b_aiv])
                                         ~ t_aig [" a type equality [a_aiu] -> [b_aiv]
                                                                    ~
                                                                    t_aig " Database.hs:31:15-38] (CNonCanonical)
                        [W] cobox_aiz :: [a_aiy]
                                         ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                               ~
                                                                               a_aiu
                                                                               -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
                        [W] cobox_aiC :: [a_aiB] ~ [a_aiy] [" a type equality [a_aiB]
                                                                              ~
                                                                              [a_aiy] " Database.hs:31:20-27] (CNonCanonical)
                        [W] cobox_aiD :: t_aif ~ [[a_aiB]] [" a type equality t_aif
                                                                              ~
                                                                              [[a_aiB]] " Database.hs:31:27] (CNonCanonical)
                        [W] cobox_aiE :: [Char] ~ a_aiy [" a type equality [Char]
                                                                           ~
                                                                           a_aiy " Database.hs:31:33-36] (CNonCanonical)
                        [W] cobox_aiH :: [a_aiG] ~ t_aik [" a type equality [a_aiG]
                                                                            ~
                                                                            t_aik " Database.hs:28:16-35] (CNonCanonical)
                        [W] cobox_aiI :: t_aig ~ [[a_aiG]] [" a type equality t_aig
                                                                              ~
                                                                              [[a_aiG]] " Database.hs:28:24-34] (CNonCanonical)
                        [W] cobox_aiJ :: t_aij ~ t_aif [" a type equality t_aij
                                                                          ~
                                                                          t_aif " Database.hs:28:34] (CNonCanonical)
                        [W] cobox_aiM :: [t_aiL] ~ t_ain [" a type equality [t_aiL]
                                                                            ~
                                                                            t_ain " Database.hs:(18,3)-(25,3)] (CNonCanonical)
                        [W] cobox_aiO :: [t_aiN] ~ t_aiL [" a type equality [t_aiN]
                                                                            ~
                                                                            t_aiL " Database.hs:18:5-44] (CNonCanonical)
                        [W] cobox_aiP :: [Char] ~ t_aiN [" a type equality [Char]
                                                                           ~
                                                                           t_aiN " Database.hs:18:6-27] (CNonCanonical)
                        [W] cobox_aiQ :: [Char] ~ t_aiN [" a type equality [Char]
                                                                           ~
                                                                           t_aiN " Database.hs:18:30-35] (CNonCanonical)
                        [W] cobox_aiR :: [Char] ~ t_aiN [" a type equality [Char]
                                                                           ~
                                                                           t_aiN " Database.hs:18:38-43] (CNonCanonical)
                        [W] cobox_aiT :: [t_aiS] ~ t_aiL [" a type equality [t_aiS]
                                                                            ~
                                                                            t_aiL " Database.hs:19:5-56] (CNonCanonical)
                        [W] cobox_aiU :: [Char] ~ t_aiS [" a type equality [Char]
                                                                           ~
                                                                           t_aiS " Database.hs:19:6-31] (CNonCanonical)
                        [W] cobox_aiV :: [Char] ~ t_aiS [" a type equality [Char]
                                                                           ~
                                                                           t_aiS " Database.hs:19:34-44] (CNonCanonical)
                        [W] cobox_aiW :: [Char] ~ t_aiS [" a type equality [Char]
                                                                           ~
                                                                           t_aiS " Database.hs:19:47-55] (CNonCanonical)
                        [W] cobox_aiY :: [t_aiX] ~ t_aiL [" a type equality [t_aiX]
                                                                            ~
                                                                            t_aiL " Database.hs:20:5-46] (CNonCanonical)
                        [W] cobox_aiZ :: [Char] ~ t_aiX [" a type equality [Char]
                                                                           ~
                                                                           t_aiX " Database.hs:20:6-25] (CNonCanonical)
                        [W] cobox_aj0 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                           ~
                                                                           t_aiX " Database.hs:20:28-37] (CNonCanonical)
                        [W] cobox_aj1 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                           ~
                                                                           t_aiX " Database.hs:20:40-45] (CNonCanonical)
                        [W] cobox_aj3 :: [t_aj2] ~ t_aiL [" a type equality [t_aj2]
                                                                            ~
                                                                            t_aiL " Database.hs:21:5-51] (CNonCanonical)
                        [W] cobox_aj4 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                           ~
                                                                           t_aj2 " Database.hs:21:6-25] (CNonCanonical)
                        [W] cobox_aj5 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                           ~
                                                                           t_aj2 " Database.hs:21:28-37] (CNonCanonical)
                        [W] cobox_aj6 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                           ~
                                                                           t_aj2 " Database.hs:21:40-50] (CNonCanonical)
                        [W] cobox_aj8 :: [t_aj7] ~ t_aiL [" a type equality [t_aj7]
                                                                            ~
                                                                            t_aiL " Database.hs:22:5-59] (CNonCanonical)
                        [W] cobox_aj9 :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                           ~
                                                                           t_aj7 " Database.hs:22:6-25] (CNonCanonical)
                        [W] cobox_aja :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                           ~
                                                                           t_aj7 " Database.hs:22:28-45] (CNonCanonical)
                        [W] cobox_ajb :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                           ~
                                                                           t_aj7 " Database.hs:22:48-58] (CNonCanonical)
                        [W] cobox_ajd :: [t_ajc] ~ t_aiL [" a type equality [t_ajc]
                                                                            ~
                                                                            t_aiL " Database.hs:23:5-66] (CNonCanonical)
                        [W] cobox_aje :: [Char] ~ t_ajc [" a type equality [Char]
                                                                           ~
                                                                           t_ajc " Database.hs:23:6-32] (CNonCanonical)
                        [W] cobox_ajf :: [Char] ~ t_ajc [" a type equality [Char]
                                                                           ~
                                                                           t_ajc " Database.hs:23:35-52] (CNonCanonical)
                        [W] cobox_ajg :: [Char] ~ t_ajc [" a type equality [Char]
                                                                           ~
                                                                           t_ajc " Database.hs:23:55-65] (CNonCanonical)
                        [W] cobox_aji :: [t_ajh] ~ t_aiL [" a type equality [t_ajh]
                                                                            ~
                                                                            t_aiL " Database.hs:24:5-63] (CNonCanonical)
                        [W] cobox_ajj :: [Char] ~ t_ajh [" a type equality [Char]
                                                                           ~
                                                                           t_ajh " Database.hs:24:6-40] (CNonCanonical)
                        [W] cobox_ajk :: [Char] ~ t_ajh [" a type equality [Char]
                                                                           ~
                                                                           t_ajh " Database.hs:24:43-50] (CNonCanonical)
                        [W] cobox_ajl :: [Char] ~ t_ajh [" a type equality [Char]
                                                                           ~
                                                                           t_ajh " Database.hs:24:53-62] (CNonCanonical)
                        [W] cobox_ajo :: [t_ajn] ~ t_aip [" a type equality [t_ajn]
                                                                            ~
                                                                            t_aip " Database.hs:(5,3)-(14,3)] (CNonCanonical)
                        [W] cobox_ajq :: [t_ajp] ~ t_ajn [" a type equality [t_ajp]
                                                                            ~
                                                                            t_ajn " Database.hs:5:5-40] (CNonCanonical)
                        [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                           ~
                                                                           t_ajp " Database.hs:5:6-15] (CNonCanonical)
                        [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                           ~
                                                                           t_ajp " Database.hs:5:18-39] (CNonCanonical)
                        [W] cobox_aju :: [t_ajt] ~ t_ajn [" a type equality [t_ajt]
                                                                            ~
                                                                            t_ajn " Database.hs:6:5-42] (CNonCanonical)
                        [W] cobox_ajv :: [Char] ~ t_ajt [" a type equality [Char]
                                                                           ~
                                                                           t_ajt " Database.hs:6:6-13] (CNonCanonical)
                        [W] cobox_ajw :: [Char] ~ t_ajt [" a type equality [Char]
                                                                           ~
                                                                           t_ajt " Database.hs:6:16-41] (CNonCanonical)
                        [W] cobox_ajy :: [t_ajx] ~ t_ajn [" a type equality [t_ajx]
                                                                            ~
                                                                            t_ajn " Database.hs:7:5-33] (CNonCanonical)
                        [W] cobox_ajz :: [Char] ~ t_ajx [" a type equality [Char]
                                                                           ~
                                                                           t_ajx " Database.hs:7:6-10] (CNonCanonical)
                        [W] cobox_ajA :: [Char] ~ t_ajx [" a type equality [Char]
                                                                           ~
                                                                           t_ajx " Database.hs:7:13-32] (CNonCanonical)
                        [W] cobox_ajC :: [t_ajB] ~ t_ajn [" a type equality [t_ajB]
                                                                            ~
                                                                            t_ajn " Database.hs:8:5-33] (CNonCanonical)
                        [W] cobox_ajD :: [Char] ~ t_ajB [" a type equality [Char]
                                                                           ~
                                                                           t_ajB " Database.hs:8:6-10] (CNonCanonical)
                        [W] cobox_ajE :: [Char] ~ t_ajB [" a type equality [Char]
                                                                           ~
                                                                           t_ajB " Database.hs:8:13-32] (CNonCanonical)
                        [W] cobox_ajG :: [t_ajF] ~ t_ajn [" a type equality [t_ajF]
                                                                            ~
                                                                            t_ajn " Database.hs:9:5-34] (CNonCanonical)
                        [W] cobox_ajH :: [Char] ~ t_ajF [" a type equality [Char]
                                                                           ~
                                                                           t_ajF " Database.hs:9:6-11] (CNonCanonical)
                        [W] cobox_ajI :: [Char] ~ t_ajF [" a type equality [Char]
                                                                           ~
                                                                           t_ajF " Database.hs:9:14-33] (CNonCanonical)
                        [W] cobox_ajK :: [t_ajJ] ~ t_ajn [" a type equality [t_ajJ]
                                                                            ~
                                                                            t_ajn " Database.hs:10:5-38] (CNonCanonical)
                        [W] cobox_ajL :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                           ~
                                                                           t_ajJ " Database.hs:10:6-15] (CNonCanonical)
                        [W] cobox_ajM :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                           ~
                                                                           t_ajJ " Database.hs:10:18-37] (CNonCanonical)
                        [W] cobox_ajO :: [t_ajN] ~ t_ajn [" a type equality [t_ajN]
                                                                            ~
                                                                            t_ajn " Database.hs:11:5-46] (CNonCanonical)
                        [W] cobox_ajP :: [Char] ~ t_ajN [" a type equality [Char]
                                                                           ~
                                                                           t_ajN " Database.hs:11:6-16] (CNonCanonical)
                        [W] cobox_ajQ :: [Char] ~ t_ajN [" a type equality [Char]
                                                                           ~
                                                                           t_ajN " Database.hs:11:19-45] (CNonCanonical)
                        [W] cobox_ajS :: [t_ajR] ~ t_ajn [" a type equality [t_ajR]
                                                                            ~
                                                                            t_ajn " Database.hs:12:5-54] (CNonCanonical)
                        [W] cobox_ajT :: [Char] ~ t_ajR [" a type equality [Char]
                                                                           ~
                                                                           t_ajR " Database.hs:12:6-16] (CNonCanonical)
                        [W] cobox_ajU :: [Char] ~ t_ajR [" a type equality [Char]
                                                                           ~
                                                                           t_ajR " Database.hs:12:19-53] (CNonCanonical)
                        [W] cobox_ajW :: [t_ajV] ~ t_ajn [" a type equality [t_ajV]
                                                                            ~
                                                                            t_ajn " Database.hs:13:5-48] (CNonCanonical)
                        [W] cobox_ajX :: [Char] ~ t_ajV [" a type equality [Char]
                                                                           ~
                                                                           t_ajV " Database.hs:13:6-10] (CNonCanonical)
                        [W] cobox_ajY :: [Char] ~ t_ajV [" a type equality [Char]
                                                                           ~
                                                                           t_ajV " Database.hs:13:13-47] (CNonCanonical)}
solveWanteds {
  WC {wc_flat = [W] cobox_aih :: Table
                                 ~ t_aif [" a type equality Table
                                                            ~
                                                            t_aif " Database.hs:30:14-30] (CNonCanonical)
                [W] cobox_aii :: [String] ~ t_aig [" a type equality [String]
                                                                     ~
                                                                     t_aig " Database.hs:30:14-30] (CNonCanonical)
                [W] cobox_ail :: Table ~ t_aij [" a type equality Table
                                                                  ~
                                                                  t_aij " Database.hs:27:15-29] (CNonCanonical)
                [W] cobox_aim :: String ~ t_aik [" a type equality String
                                                                   ~
                                                                   t_aik " Database.hs:27:15-29] (CNonCanonical)
                [W] cobox_aio :: Table ~ t_ain [" a type equality Table
                                                                  ~
                                                                  t_ain " Database.hs:16:13-17] (CNonCanonical)
                [W] cobox_aiq :: Table ~ t_aip [" a type equality Table
                                                                  ~
                                                                  t_aip " Database.hs:3:14-18] (CNonCanonical)
                [W] cobox_aiw :: ([a_aiu] -> [b_aiv])
                                 ~ t_aig [" a type equality [a_aiu] -> [b_aiv]
                                                            ~
                                                            t_aig " Database.hs:31:15-38] (CNonCanonical)
                [W] cobox_aiz :: [a_aiy]
                                 ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                       ~
                                                                       a_aiu
                                                                       -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
                [W] cobox_aiC :: [a_aiB] ~ [a_aiy] [" a type equality [a_aiB]
                                                                      ~
                                                                      [a_aiy] " Database.hs:31:20-27] (CNonCanonical)
                [W] cobox_aiD :: t_aif ~ [[a_aiB]] [" a type equality t_aif
                                                                      ~
                                                                      [[a_aiB]] " Database.hs:31:27] (CNonCanonical)
                [W] cobox_aiE :: [Char] ~ a_aiy [" a type equality [Char]
                                                                   ~
                                                                   a_aiy " Database.hs:31:33-36] (CNonCanonical)
                [W] cobox_aiH :: [a_aiG] ~ t_aik [" a type equality [a_aiG]
                                                                    ~
                                                                    t_aik " Database.hs:28:16-35] (CNonCanonical)
                [W] cobox_aiI :: t_aig ~ [[a_aiG]] [" a type equality t_aig
                                                                      ~
                                                                      [[a_aiG]] " Database.hs:28:24-34] (CNonCanonical)
                [W] cobox_aiJ :: t_aij ~ t_aif [" a type equality t_aij
                                                                  ~
                                                                  t_aif " Database.hs:28:34] (CNonCanonical)
                [W] cobox_aiM :: [t_aiL] ~ t_ain [" a type equality [t_aiL]
                                                                    ~
                                                                    t_ain " Database.hs:(18,3)-(25,3)] (CNonCanonical)
                [W] cobox_aiO :: [t_aiN] ~ t_aiL [" a type equality [t_aiN]
                                                                    ~
                                                                    t_aiL " Database.hs:18:5-44] (CNonCanonical)
                [W] cobox_aiP :: [Char] ~ t_aiN [" a type equality [Char]
                                                                   ~
                                                                   t_aiN " Database.hs:18:6-27] (CNonCanonical)
                [W] cobox_aiQ :: [Char] ~ t_aiN [" a type equality [Char]
                                                                   ~
                                                                   t_aiN " Database.hs:18:30-35] (CNonCanonical)
                [W] cobox_aiR :: [Char] ~ t_aiN [" a type equality [Char]
                                                                   ~
                                                                   t_aiN " Database.hs:18:38-43] (CNonCanonical)
                [W] cobox_aiT :: [t_aiS] ~ t_aiL [" a type equality [t_aiS]
                                                                    ~
                                                                    t_aiL " Database.hs:19:5-56] (CNonCanonical)
                [W] cobox_aiU :: [Char] ~ t_aiS [" a type equality [Char]
                                                                   ~
                                                                   t_aiS " Database.hs:19:6-31] (CNonCanonical)
                [W] cobox_aiV :: [Char] ~ t_aiS [" a type equality [Char]
                                                                   ~
                                                                   t_aiS " Database.hs:19:34-44] (CNonCanonical)
                [W] cobox_aiW :: [Char] ~ t_aiS [" a type equality [Char]
                                                                   ~
                                                                   t_aiS " Database.hs:19:47-55] (CNonCanonical)
                [W] cobox_aiY :: [t_aiX] ~ t_aiL [" a type equality [t_aiX]
                                                                    ~
                                                                    t_aiL " Database.hs:20:5-46] (CNonCanonical)
                [W] cobox_aiZ :: [Char] ~ t_aiX [" a type equality [Char]
                                                                   ~
                                                                   t_aiX " Database.hs:20:6-25] (CNonCanonical)
                [W] cobox_aj0 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                   ~
                                                                   t_aiX " Database.hs:20:28-37] (CNonCanonical)
                [W] cobox_aj1 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                   ~
                                                                   t_aiX " Database.hs:20:40-45] (CNonCanonical)
                [W] cobox_aj3 :: [t_aj2] ~ t_aiL [" a type equality [t_aj2]
                                                                    ~
                                                                    t_aiL " Database.hs:21:5-51] (CNonCanonical)
                [W] cobox_aj4 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                   ~
                                                                   t_aj2 " Database.hs:21:6-25] (CNonCanonical)
                [W] cobox_aj5 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                   ~
                                                                   t_aj2 " Database.hs:21:28-37] (CNonCanonical)
                [W] cobox_aj6 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                   ~
                                                                   t_aj2 " Database.hs:21:40-50] (CNonCanonical)
                [W] cobox_aj8 :: [t_aj7] ~ t_aiL [" a type equality [t_aj7]
                                                                    ~
                                                                    t_aiL " Database.hs:22:5-59] (CNonCanonical)
                [W] cobox_aj9 :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                   ~
                                                                   t_aj7 " Database.hs:22:6-25] (CNonCanonical)
                [W] cobox_aja :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                   ~
                                                                   t_aj7 " Database.hs:22:28-45] (CNonCanonical)
                [W] cobox_ajb :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                   ~
                                                                   t_aj7 " Database.hs:22:48-58] (CNonCanonical)
                [W] cobox_ajd :: [t_ajc] ~ t_aiL [" a type equality [t_ajc]
                                                                    ~
                                                                    t_aiL " Database.hs:23:5-66] (CNonCanonical)
                [W] cobox_aje :: [Char] ~ t_ajc [" a type equality [Char]
                                                                   ~
                                                                   t_ajc " Database.hs:23:6-32] (CNonCanonical)
                [W] cobox_ajf :: [Char] ~ t_ajc [" a type equality [Char]
                                                                   ~
                                                                   t_ajc " Database.hs:23:35-52] (CNonCanonical)
                [W] cobox_ajg :: [Char] ~ t_ajc [" a type equality [Char]
                                                                   ~
                                                                   t_ajc " Database.hs:23:55-65] (CNonCanonical)
                [W] cobox_aji :: [t_ajh] ~ t_aiL [" a type equality [t_ajh]
                                                                    ~
                                                                    t_aiL " Database.hs:24:5-63] (CNonCanonical)
                [W] cobox_ajj :: [Char] ~ t_ajh [" a type equality [Char]
                                                                   ~
                                                                   t_ajh " Database.hs:24:6-40] (CNonCanonical)
                [W] cobox_ajk :: [Char] ~ t_ajh [" a type equality [Char]
                                                                   ~
                                                                   t_ajh " Database.hs:24:43-50] (CNonCanonical)
                [W] cobox_ajl :: [Char] ~ t_ajh [" a type equality [Char]
                                                                   ~
                                                                   t_ajh " Database.hs:24:53-62] (CNonCanonical)
                [W] cobox_ajo :: [t_ajn] ~ t_aip [" a type equality [t_ajn]
                                                                    ~
                                                                    t_aip " Database.hs:(5,3)-(14,3)] (CNonCanonical)
                [W] cobox_ajq :: [t_ajp] ~ t_ajn [" a type equality [t_ajp]
                                                                    ~
                                                                    t_ajn " Database.hs:5:5-40] (CNonCanonical)
                [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Database.hs:5:6-15] (CNonCanonical)
                [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Database.hs:5:18-39] (CNonCanonical)
                [W] cobox_aju :: [t_ajt] ~ t_ajn [" a type equality [t_ajt]
                                                                    ~
                                                                    t_ajn " Database.hs:6:5-42] (CNonCanonical)
                [W] cobox_ajv :: [Char] ~ t_ajt [" a type equality [Char]
                                                                   ~
                                                                   t_ajt " Database.hs:6:6-13] (CNonCanonical)
                [W] cobox_ajw :: [Char] ~ t_ajt [" a type equality [Char]
                                                                   ~
                                                                   t_ajt " Database.hs:6:16-41] (CNonCanonical)
                [W] cobox_ajy :: [t_ajx] ~ t_ajn [" a type equality [t_ajx]
                                                                    ~
                                                                    t_ajn " Database.hs:7:5-33] (CNonCanonical)
                [W] cobox_ajz :: [Char] ~ t_ajx [" a type equality [Char]
                                                                   ~
                                                                   t_ajx " Database.hs:7:6-10] (CNonCanonical)
                [W] cobox_ajA :: [Char] ~ t_ajx [" a type equality [Char]
                                                                   ~
                                                                   t_ajx " Database.hs:7:13-32] (CNonCanonical)
                [W] cobox_ajC :: [t_ajB] ~ t_ajn [" a type equality [t_ajB]
                                                                    ~
                                                                    t_ajn " Database.hs:8:5-33] (CNonCanonical)
                [W] cobox_ajD :: [Char] ~ t_ajB [" a type equality [Char]
                                                                   ~
                                                                   t_ajB " Database.hs:8:6-10] (CNonCanonical)
                [W] cobox_ajE :: [Char] ~ t_ajB [" a type equality [Char]
                                                                   ~
                                                                   t_ajB " Database.hs:8:13-32] (CNonCanonical)
                [W] cobox_ajG :: [t_ajF] ~ t_ajn [" a type equality [t_ajF]
                                                                    ~
                                                                    t_ajn " Database.hs:9:5-34] (CNonCanonical)
                [W] cobox_ajH :: [Char] ~ t_ajF [" a type equality [Char]
                                                                   ~
                                                                   t_ajF " Database.hs:9:6-11] (CNonCanonical)
                [W] cobox_ajI :: [Char] ~ t_ajF [" a type equality [Char]
                                                                   ~
                                                                   t_ajF " Database.hs:9:14-33] (CNonCanonical)
                [W] cobox_ajK :: [t_ajJ] ~ t_ajn [" a type equality [t_ajJ]
                                                                    ~
                                                                    t_ajn " Database.hs:10:5-38] (CNonCanonical)
                [W] cobox_ajL :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                   ~
                                                                   t_ajJ " Database.hs:10:6-15] (CNonCanonical)
                [W] cobox_ajM :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                   ~
                                                                   t_ajJ " Database.hs:10:18-37] (CNonCanonical)
                [W] cobox_ajO :: [t_ajN] ~ t_ajn [" a type equality [t_ajN]
                                                                    ~
                                                                    t_ajn " Database.hs:11:5-46] (CNonCanonical)
                [W] cobox_ajP :: [Char] ~ t_ajN [" a type equality [Char]
                                                                   ~
                                                                   t_ajN " Database.hs:11:6-16] (CNonCanonical)
                [W] cobox_ajQ :: [Char] ~ t_ajN [" a type equality [Char]
                                                                   ~
                                                                   t_ajN " Database.hs:11:19-45] (CNonCanonical)
                [W] cobox_ajS :: [t_ajR] ~ t_ajn [" a type equality [t_ajR]
                                                                    ~
                                                                    t_ajn " Database.hs:12:5-54] (CNonCanonical)
                [W] cobox_ajT :: [Char] ~ t_ajR [" a type equality [Char]
                                                                   ~
                                                                   t_ajR " Database.hs:12:6-16] (CNonCanonical)
                [W] cobox_ajU :: [Char] ~ t_ajR [" a type equality [Char]
                                                                   ~
                                                                   t_ajR " Database.hs:12:19-53] (CNonCanonical)
                [W] cobox_ajW :: [t_ajV] ~ t_ajn [" a type equality [t_ajV]
                                                                    ~
                                                                    t_ajn " Database.hs:13:5-48] (CNonCanonical)
                [W] cobox_ajX :: [Char] ~ t_ajV [" a type equality [Char]
                                                                   ~
                                                                   t_ajV " Database.hs:13:6-10] (CNonCanonical)
                [W] cobox_ajY :: [Char] ~ t_ajV [" a type equality [Char]
                                                                   ~
                                                                   t_ajV " Database.hs:13:13-47] (CNonCanonical)}
solveFlats {
Start solver pipeline {
  work item =  [W] cobox_aih :: Table
                                ~ t_aif [" a type equality Table
                                                           ~
                                                           t_aif " Database.hs:30:14-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aih :: Table
                                 ~ t_aif [" a type equality Table
                                                            ~
                                                            t_aif " Database.hs:30:14-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aih :: Table ~ t_aif [" a type equality Table
                                                    ~
                                                    t_aif " Database.hs:30:14-30] (CNonCanonical)
canEvNC:eq
  Table
  t_aif
can_eq_nc
  [W] cobox_aih :: Table ~ t_aif
  Table
  Table
  t_aif
  t_aif
can_eq_nc
  [W] cobox_aih :: Table ~ t_aif
  [[String]]
  Table
  t_aif
  t_aif
canEqTyVar
  t_aif
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ak0 :: t_aif ~ Table
setEvBind
  ev = cobox_aih
  tm  = CO Sym cobox_ak0
rewriteEqEvidence
  [W] cobox_aih :: Table ~ t_aif
  t_aif
  Table
  Sym cobox_ak0
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ak0 :: t_aif
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_aif " Database.hs:30:14-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_aif := Table
  Coercion: t_aif ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aif := Table
setEvBind
  ev = cobox_ak0
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_aif
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
1[<C:0,F:0>] [W] cobox_ak0 :: t_aif ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aii :: [String]
                                ~ t_aig [" a type equality [String]
                                                           ~
                                                           t_aig " Database.hs:30:14-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aii :: [String]
                                 ~ t_aig [" a type equality [String]
                                                            ~
                                                            t_aig " Database.hs:30:14-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aii :: [String] ~ t_aig [" a type equality [String]
                                                       ~
                                                       t_aig " Database.hs:30:14-30] (CNonCanonical)
canEvNC:eq
  [String]
  t_aig
can_eq_nc
  [W] cobox_aii :: [String] ~ t_aig
  [String]
  [String]
  t_aig
  t_aig
canEqTyVar
  t_aig
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ak1 :: t_aig ~ [String]
setEvBind
  ev = cobox_aii
  tm  = CO Sym cobox_ak1
rewriteEqEvidence
  [W] cobox_aii :: [String] ~ t_aig
  t_aig
  [String]
  Sym cobox_ak1
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ak1 :: t_aig
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_aig " Database.hs:30:14-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_aig := [String]
  Coercion: t_aig ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aig := [String]
setEvBind
  ev = cobox_ak1
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_aig
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
2[<C:0,F:0>] [W] cobox_ak1 :: t_aig
                              ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ail :: Table
                                ~ t_aij [" a type equality Table
                                                           ~
                                                           t_aij " Database.hs:27:15-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ail :: Table
                                 ~ t_aij [" a type equality Table
                                                            ~
                                                            t_aij " Database.hs:27:15-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ail :: Table ~ t_aij [" a type equality Table
                                                    ~
                                                    t_aij " Database.hs:27:15-29] (CNonCanonical)
canEvNC:eq
  Table
  t_aij
can_eq_nc
  [W] cobox_ail :: Table ~ t_aij
  Table
  Table
  t_aij
  t_aij
can_eq_nc
  [W] cobox_ail :: Table ~ t_aij
  [[String]]
  Table
  t_aij
  t_aij
canEqTyVar
  t_aij
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ak2 :: t_aij ~ Table
setEvBind
  ev = cobox_ail
  tm  = CO Sym cobox_ak2
rewriteEqEvidence
  [W] cobox_ail :: Table ~ t_aij
  t_aij
  Table
  Sym cobox_ak2
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ak2 :: t_aij
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_aij " Database.hs:27:15-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_aij := Table
  Coercion: t_aij ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aij := Table
setEvBind
  ev = cobox_ak2
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_aij
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
3[<C:0,F:0>] [W] cobox_ak2 :: t_aij ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aim :: String
                                ~ t_aik [" a type equality String
                                                           ~
                                                           t_aik " Database.hs:27:15-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aim :: String
                                 ~ t_aik [" a type equality String
                                                            ~
                                                            t_aik " Database.hs:27:15-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aim :: String ~ t_aik [" a type equality String
                                                     ~
                                                     t_aik " Database.hs:27:15-29] (CNonCanonical)
canEvNC:eq
  String
  t_aik
can_eq_nc
  [W] cobox_aim :: String ~ t_aik
  String
  String
  t_aik
  t_aik
can_eq_nc
  [W] cobox_aim :: String ~ t_aik
  [Char]
  String
  t_aik
  t_aik
canEqTyVar
  t_aik
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ak3 :: t_aik ~ String
setEvBind
  ev = cobox_aim
  tm  = CO Sym cobox_ak3
rewriteEqEvidence
  [W] cobox_aim :: String ~ t_aik
  t_aik
  String
  Sym cobox_ak3
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ak3 :: t_aik
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aik " Database.hs:27:15-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_aik := String
  Coercion: t_aik ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aik := String
setEvBind
  ev = cobox_ak3
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aik
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
4[<C:0,F:0>] [W] cobox_ak3 :: t_aik ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aio :: Table
                                ~ t_ain [" a type equality Table
                                                           ~
                                                           t_ain " Database.hs:16:13-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aio :: Table
                                 ~ t_ain [" a type equality Table
                                                            ~
                                                            t_ain " Database.hs:16:13-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aio :: Table ~ t_ain [" a type equality Table
                                                    ~
                                                    t_ain " Database.hs:16:13-17] (CNonCanonical)
canEvNC:eq
  Table
  t_ain
can_eq_nc
  [W] cobox_aio :: Table ~ t_ain
  Table
  Table
  t_ain
  t_ain
can_eq_nc
  [W] cobox_aio :: Table ~ t_ain
  [[String]]
  Table
  t_ain
  t_ain
canEqTyVar
  t_ain
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ak4 :: t_ain ~ Table
setEvBind
  ev = cobox_aio
  tm  = CO Sym cobox_ak4
rewriteEqEvidence
  [W] cobox_aio :: Table ~ t_ain
  t_ain
  Table
  Sym cobox_ak4
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ak4 :: t_ain
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_ain " Database.hs:16:13-17] (CTyEqCan)
Sneaky unification:
  Unifies: t_ain := Table
  Coercion: t_ain ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ain := Table
setEvBind
  ev = cobox_ak4
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_ain
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
5[<C:0,F:0>] [W] cobox_ak4 :: t_ain ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiq :: Table
                                ~ t_aip [" a type equality Table
                                                           ~
                                                           t_aip " Database.hs:3:14-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiq :: Table
                                 ~ t_aip [" a type equality Table
                                                            ~
                                                            t_aip " Database.hs:3:14-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiq :: Table ~ t_aip [" a type equality Table
                                                    ~
                                                    t_aip " Database.hs:3:14-18] (CNonCanonical)
canEvNC:eq
  Table
  t_aip
can_eq_nc
  [W] cobox_aiq :: Table ~ t_aip
  Table
  Table
  t_aip
  t_aip
can_eq_nc
  [W] cobox_aiq :: Table ~ t_aip
  [[String]]
  Table
  t_aip
  t_aip
canEqTyVar
  t_aip
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ak5 :: t_aip ~ Table
setEvBind
  ev = cobox_aiq
  tm  = CO Sym cobox_ak5
rewriteEqEvidence
  [W] cobox_aiq :: Table ~ t_aip
  t_aip
  Table
  Sym cobox_ak5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ak5 :: t_aip
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_aip " Database.hs:3:14-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aip := Table
  Coercion: t_aip ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aip := Table
setEvBind
  ev = cobox_ak5
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_aip
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
6[<C:0,F:0>] [W] cobox_ak5 :: t_aip ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiw :: ([a_aiu] -> [b_aiv])
                                ~ t_aig [" a type equality [a_aiu] -> [b_aiv]
                                                           ~
                                                           t_aig " Database.hs:31:15-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiw :: ([a_aiu] -> [b_aiv])
                                 ~ t_aig [" a type equality [a_aiu] -> [b_aiv]
                                                            ~
                                                            t_aig " Database.hs:31:15-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiw :: ([a_aiu] -> [b_aiv])
                   ~ t_aig [" a type equality [a_aiu] -> [b_aiv]
                                              ~
                                              t_aig " Database.hs:31:15-38] (CNonCanonical)
canEvNC:eq
  [a_aiu] -> [b_aiv]
  t_aig
can_eq_nc
  [W] cobox_aiw :: ([a_aiu] -> [b_aiv]) ~ t_aig
  [a_aiu] -> [b_aiv]
  [a_aiu] -> [b_aiv]
  t_aig
  t_aig
canEqTyVar
  t_aig
  [a_aiu] -> [b_aiv]
  Is-swapped
Following bound tyvar t_aig = [String]
newWantedEvVar/cache miss
  [W] cobox_ak6 :: [String] ~ ([a_aiu] -> [b_aiv])
setEvBind
  ev = cobox_aiw
  tm  = CO Sym cobox_ak6
rewriteEqEvidence
  [W] cobox_aiw :: ([a_aiu] -> [b_aiv]) ~ t_aig
  [String]
  [a_aiu] -> [b_aiv]
  Sym cobox_ak6
canEqTyVar2
  t_aig
  [a_aiu] -> [b_aiv]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_ak6 :: [String] ~ ([a_aiu] -> [b_aiv])
  [String]
  [String]
  [a_aiu] -> [b_aiv]
  [a_aiu] -> [b_aiv]
Emit insoluble
  [W] cobox_ak6 :: [String]
                   ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu] -> [b_aiv]
                                                             ~
                                                             t_aig " Database.hs:31:15-38] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiz :: [a_aiy]
                                ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                      ~
                                                                      a_aiu
                                                                      -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiz :: [a_aiy]
                                 ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                       ~
                                                                       a_aiu
                                                                       -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiz :: [a_aiy]
                   ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                         ~
                                                         a_aiu
                                                         -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
canEvNC:eq
  [a_aiy]
  a_aiu -> b_aiv
can_eq_nc
  [W] cobox_aiz :: [a_aiy] ~ (a_aiu -> b_aiv)
  [a_aiy]
  [a_aiy]
  a_aiu -> b_aiv
  a_aiu -> b_aiv
Emit insoluble
  [W] cobox_aiz :: [a_aiy]
                   ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                         ~
                                                         a_aiu
                                                         -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)
                             [W] cobox_aiz :: [a_aiy]
                                              ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                                    ~
                                                                                    a_aiu
                                                                                    -> b_aiv " Database.hs:31:20-37] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiC :: [a_aiB]
                                ~ [a_aiy] [" a type equality [a_aiB]
                                                             ~
                                                             [a_aiy] " Database.hs:31:20-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)
                             [W] cobox_aiz :: [a_aiy]
                                              ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                                    ~
                                                                                    a_aiu
                                                                                    -> b_aiv " Database.hs:31:20-37] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiC :: [a_aiB]
                                 ~ [a_aiy] [" a type equality [a_aiB]
                                                              ~
                                                              [a_aiy] " Database.hs:31:20-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiC :: [a_aiB] ~ [a_aiy] [" a type equality [a_aiB]
                                                        ~
                                                        [a_aiy] " Database.hs:31:20-27] (CNonCanonical)
canEvNC:eq
  [a_aiB]
  [a_aiy]
can_eq_nc
  [W] cobox_aiC :: [a_aiB] ~ [a_aiy]
  [a_aiB]
  [a_aiB]
  [a_aiy]
  [a_aiy]
newWantedEvVar/cache miss [W] cobox_ak7 :: a_aiB ~ a_aiy
setEvBind
  ev = cobox_aiC
  tm  = CO [cobox_ak7]_N
canEvNC:eq
  a_aiB
  a_aiy
can_eq_nc
  [W] cobox_ak7 :: a_aiB ~ a_aiy
  a_aiB
  a_aiB
  a_aiy
  a_aiy
canEqTyVar
  a_aiB
  a_aiy
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ak7 :: a_aiB
                                 ~ a_aiy [" a type equality [a_aiB]
                                                            ~
                                                            [a_aiy] " Database.hs:31:20-27] (CTyEqCan)
Sneaky unification:
  Unifies: a_aiy := a_aiB
  Coercion: a_aiy ~ a_aiB
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aiy := a_aiB
setEvBind
  ev = cobox_ak7
  tm  = CO <a_aiB>_N
kickOutRewritable
  tv =  a_aiy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  [[W] cobox_aiz :: [a_aiy]
                                                     ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                                           ~
                                                                                           a_aiu
                                                                                           -> b_aiv " Database.hs:31:20-37] (CNonCanonical)]
9[<C:0,F:0>] [W] cobox_ak7 :: a_aiB
                              ~ a_aiy: Spontaneously solved (1 kicked out)
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiD :: t_aif
                                ~ [[a_aiB]] [" a type equality t_aif
                                                               ~
                                                               [[a_aiB]] " Database.hs:31:27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiD :: t_aif
                                 ~ [[a_aiB]] [" a type equality t_aif
                                                                ~
                                                                [[a_aiB]] " Database.hs:31:27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiD :: t_aif ~ [[a_aiB]] [" a type equality t_aif
                                                        ~
                                                        [[a_aiB]] " Database.hs:31:27] (CNonCanonical)
canEvNC:eq
  t_aif
  [[a_aiB]]
can_eq_nc
  [W] cobox_aiD :: t_aif ~ [[a_aiB]]
  t_aif
  t_aif
  [[a_aiB]]
  [[a_aiB]]
canEqTyVar
  t_aif
  [[a_aiB]]
  Not-swapped
Following bound tyvar t_aif = Table
canEqTyVar2
  t_aif
  [[a_aiB]]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aiD :: Table ~ [[a_aiB]]
  Table
  Table
  [[a_aiB]]
  [[a_aiB]]
can_eq_nc
  [W] cobox_aiD :: Table ~ [[a_aiB]]
  [[String]]
  Table
  [[a_aiB]]
  [[a_aiB]]
newWantedEvVar/cache miss [W] cobox_ak8 :: [String] ~ [a_aiB]
setEvBind
  ev = cobox_aiD
  tm  = CO [cobox_ak8]_N
canEvNC:eq
  [String]
  [a_aiB]
can_eq_nc
  [W] cobox_ak8 :: [String] ~ [a_aiB]
  [String]
  [String]
  [a_aiB]
  [a_aiB]
newWantedEvVar/cache miss [W] cobox_ak9 :: String ~ a_aiB
setEvBind
  ev = cobox_ak8
  tm  = CO [cobox_ak9]_N
canEvNC:eq
  String
  a_aiB
can_eq_nc
  [W] cobox_ak9 :: String ~ a_aiB
  String
  String
  a_aiB
  a_aiB
can_eq_nc
  [W] cobox_ak9 :: String ~ a_aiB
  [Char]
  String
  a_aiB
  a_aiB
canEqTyVar
  a_aiB
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aka :: a_aiB ~ String
setEvBind
  ev = cobox_ak9
  tm  = CO Sym cobox_aka
rewriteEqEvidence
  [W] cobox_ak9 :: String ~ a_aiB
  a_aiB
  String
  Sym cobox_aka
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aka :: a_aiB
                                 ~ String [" a type equality t_aif
                                                             ~
                                                             [[a_aiB]] " Database.hs:31:27] (CTyEqCan)
Sneaky unification:
  Unifies: a_aiB := String
  Coercion: a_aiB ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aiB := String
setEvBind
  ev = cobox_aka
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aiB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
10[<C:0,F:0>] [W] cobox_aka :: a_aiB ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiE :: [Char]
                                ~ a_aiy [" a type equality [Char]
                                                           ~
                                                           a_aiy " Database.hs:31:33-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiE :: [Char]
                                 ~ a_aiy [" a type equality [Char]
                                                            ~
                                                            a_aiy " Database.hs:31:33-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiE :: [Char] ~ a_aiy [" a type equality [Char]
                                                     ~
                                                     a_aiy " Database.hs:31:33-36] (CNonCanonical)
canEvNC:eq
  [Char]
  a_aiy
can_eq_nc
  [W] cobox_aiE :: [Char] ~ a_aiy
  [Char]
  [Char]
  a_aiy
  a_aiy
canEqTyVar
  a_aiy
  [Char]
  Is-swapped
Following bound tyvar a_aiy = a_aiB
newWantedEvVar/cache miss [W] cobox_akb :: a_aiB ~ [Char]
setEvBind
  ev = cobox_aiE
  tm  = CO Sym cobox_akb
rewriteEqEvidence
  [W] cobox_aiE :: [Char] ~ a_aiy
  a_aiB
  [Char]
  Sym cobox_akb
canEqTyVar2
  a_aiy
  [Char]
  Is-swapped
  a_aiB
  <a_aiB>_N
can_eq_nc
  [W] cobox_akb :: a_aiB ~ [Char]
  a_aiB
  a_aiB
  [Char]
  [Char]
canEqTyVar
  a_aiB
  [Char]
  Not-swapped
Following bound tyvar a_aiB = String
canEqTyVar2
  a_aiB
  [Char]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akb :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akb :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akc :: Char ~ Char
setEvBind
  ev = cobox_akb
  tm  = CO [cobox_akc]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akc :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akc
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiH :: [a_aiG]
                                ~ t_aik [" a type equality [a_aiG]
                                                           ~
                                                           t_aik " Database.hs:28:16-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiH :: [a_aiG]
                                 ~ t_aik [" a type equality [a_aiG]
                                                            ~
                                                            t_aik " Database.hs:28:16-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiH :: [a_aiG] ~ t_aik [" a type equality [a_aiG]
                                                      ~
                                                      t_aik " Database.hs:28:16-35] (CNonCanonical)
canEvNC:eq
  [a_aiG]
  t_aik
can_eq_nc
  [W] cobox_aiH :: [a_aiG] ~ t_aik
  [a_aiG]
  [a_aiG]
  t_aik
  t_aik
canEqTyVar
  t_aik
  [a_aiG]
  Is-swapped
Following bound tyvar t_aik = String
newWantedEvVar/cache miss [W] cobox_akd :: String ~ [a_aiG]
setEvBind
  ev = cobox_aiH
  tm  = CO Sym cobox_akd
rewriteEqEvidence
  [W] cobox_aiH :: [a_aiG] ~ t_aik
  String
  [a_aiG]
  Sym cobox_akd
canEqTyVar2
  t_aik
  [a_aiG]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akd :: String ~ [a_aiG]
  String
  String
  [a_aiG]
  [a_aiG]
can_eq_nc
  [W] cobox_akd :: String ~ [a_aiG]
  [Char]
  String
  [a_aiG]
  [a_aiG]
newWantedEvVar/cache miss [W] cobox_ake :: Char ~ a_aiG
setEvBind
  ev = cobox_akd
  tm  = CO [cobox_ake]_N
canEvNC:eq
  Char
  a_aiG
can_eq_nc
  [W] cobox_ake :: Char ~ a_aiG
  Char
  Char
  a_aiG
  a_aiG
canEqTyVar
  a_aiG
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akf :: a_aiG ~ Char
setEvBind
  ev = cobox_ake
  tm  = CO Sym cobox_akf
rewriteEqEvidence
  [W] cobox_ake :: Char ~ a_aiG
  a_aiG
  Char
  Sym cobox_akf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akf :: a_aiG
                                 ~ Char [" a type equality [a_aiG]
                                                           ~
                                                           t_aik " Database.hs:28:16-35] (CTyEqCan)
Sneaky unification:
  Unifies: a_aiG := Char
  Coercion: a_aiG ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aiG := Char
setEvBind
  ev = cobox_akf
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aiG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
12[<C:0,F:0>] [W] cobox_akf :: a_aiG ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiI :: t_aig
                                ~ [[a_aiG]] [" a type equality t_aig
                                                               ~
                                                               [[a_aiG]] " Database.hs:28:24-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiI :: t_aig
                                 ~ [[a_aiG]] [" a type equality t_aig
                                                                ~
                                                                [[a_aiG]] " Database.hs:28:24-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiI :: t_aig ~ [[a_aiG]] [" a type equality t_aig
                                                        ~
                                                        [[a_aiG]] " Database.hs:28:24-34] (CNonCanonical)
canEvNC:eq
  t_aig
  [[a_aiG]]
can_eq_nc
  [W] cobox_aiI :: t_aig ~ [[a_aiG]]
  t_aig
  t_aig
  [[a_aiG]]
  [[a_aiG]]
canEqTyVar
  t_aig
  [[a_aiG]]
  Not-swapped
Following bound tyvar t_aig = [String]
canEqTyVar2
  t_aig
  [[a_aiG]]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aiI :: [String] ~ [[a_aiG]]
  [String]
  [String]
  [[a_aiG]]
  [[a_aiG]]
newWantedEvVar/cache miss [W] cobox_akg :: String ~ [a_aiG]
setEvBind
  ev = cobox_aiI
  tm  = CO [cobox_akg]_N
canEvNC:eq
  String
  [a_aiG]
can_eq_nc
  [W] cobox_akg :: String ~ [a_aiG]
  String
  String
  [a_aiG]
  [a_aiG]
can_eq_nc
  [W] cobox_akg :: String ~ [a_aiG]
  [Char]
  String
  [a_aiG]
  [a_aiG]
newWantedEvVar/cache miss [W] cobox_akh :: Char ~ a_aiG
setEvBind
  ev = cobox_akg
  tm  = CO [cobox_akh]_N
canEvNC:eq
  Char
  a_aiG
can_eq_nc
  [W] cobox_akh :: Char ~ a_aiG
  Char
  Char
  a_aiG
  a_aiG
canEqTyVar
  a_aiG
  Char
  Is-swapped
Following bound tyvar a_aiG = Char
newWantedEvVar/cache miss [W] cobox_aki :: Char ~ Char
setEvBind
  ev = cobox_akh
  tm  = CO Sym cobox_aki
rewriteEqEvidence
  [W] cobox_akh :: Char ~ a_aiG
  Char
  Char
  Sym cobox_aki
canEqTyVar2
  a_aiG
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aki :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aki
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiJ :: t_aij
                                ~ t_aif [" a type equality t_aij
                                                           ~
                                                           t_aif " Database.hs:28:34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiJ :: t_aij
                                 ~ t_aif [" a type equality t_aij
                                                            ~
                                                            t_aif " Database.hs:28:34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiJ :: t_aij ~ t_aif [" a type equality t_aij
                                                    ~
                                                    t_aif " Database.hs:28:34] (CNonCanonical)
canEvNC:eq
  t_aij
  t_aif
can_eq_nc
  [W] cobox_aiJ :: t_aij ~ t_aif
  t_aij
  t_aij
  t_aif
  t_aif
canEqTyVar
  t_aij
  t_aif
  Not-swapped
Following bound tyvar t_aij = Table
canEqTyVar2
  t_aij
  t_aif
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aiJ :: Table ~ t_aif
  Table
  Table
  t_aif
  t_aif
can_eq_nc
  [W] cobox_aiJ :: Table ~ t_aif
  [[String]]
  Table
  t_aif
  t_aif
canEqTyVar
  t_aif
  [[String]]
  Is-swapped
Following bound tyvar t_aif = Table
newWantedEvVar/cache miss [W] cobox_akj :: Table ~ Table
setEvBind
  ev = cobox_aiJ
  tm  = CO Sym cobox_akj
rewriteEqEvidence
  [W] cobox_aiJ :: Table ~ t_aif
  Table
  Table
  Sym cobox_akj
canEqTyVar2
  t_aif
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_akj :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_akj :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_akk :: [String] ~ [String]
setEvBind
  ev = cobox_akj
  tm  = CO [cobox_akk]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_akk :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_akl :: String ~ String
setEvBind
  ev = cobox_akk
  tm  = CO [cobox_akl]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_akl :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_akl :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_akl :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_akm :: Char ~ Char
setEvBind
  ev = cobox_akl
  tm  = CO [cobox_akm]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akm :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akm
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiM :: [t_aiL]
                                ~ t_ain [" a type equality [t_aiL]
                                                           ~
                                                           t_ain " Database.hs:(18,3)-(25,3)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiM :: [t_aiL]
                                 ~ t_ain [" a type equality [t_aiL]
                                                            ~
                                                            t_ain " Database.hs:(18,3)-(25,3)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiM :: [t_aiL] ~ t_ain [" a type equality [t_aiL]
                                                      ~
                                                      t_ain " Database.hs:(18,3)-(25,3)] (CNonCanonical)
canEvNC:eq
  [t_aiL]
  t_ain
can_eq_nc
  [W] cobox_aiM :: [t_aiL] ~ t_ain
  [t_aiL]
  [t_aiL]
  t_ain
  t_ain
canEqTyVar
  t_ain
  [t_aiL]
  Is-swapped
Following bound tyvar t_ain = Table
newWantedEvVar/cache miss [W] cobox_akn :: Table ~ [t_aiL]
setEvBind
  ev = cobox_aiM
  tm  = CO Sym cobox_akn
rewriteEqEvidence
  [W] cobox_aiM :: [t_aiL] ~ t_ain
  Table
  [t_aiL]
  Sym cobox_akn
canEqTyVar2
  t_ain
  [t_aiL]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_akn :: Table ~ [t_aiL]
  Table
  Table
  [t_aiL]
  [t_aiL]
can_eq_nc
  [W] cobox_akn :: Table ~ [t_aiL]
  [[String]]
  Table
  [t_aiL]
  [t_aiL]
newWantedEvVar/cache miss [W] cobox_ako :: [String] ~ t_aiL
setEvBind
  ev = cobox_akn
  tm  = CO [cobox_ako]_N
canEvNC:eq
  [String]
  t_aiL
can_eq_nc
  [W] cobox_ako :: [String] ~ t_aiL
  [String]
  [String]
  t_aiL
  t_aiL
canEqTyVar
  t_aiL
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akp :: t_aiL ~ [String]
setEvBind
  ev = cobox_ako
  tm  = CO Sym cobox_akp
rewriteEqEvidence
  [W] cobox_ako :: [String] ~ t_aiL
  t_aiL
  [String]
  Sym cobox_akp
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akp :: t_aiL
                                 ~ [String] [" a type equality [t_aiL]
                                                               ~
                                                               t_ain " Database.hs:(18,3)-(25,3)] (CTyEqCan)
Sneaky unification:
  Unifies: t_aiL := [String]
  Coercion: t_aiL ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aiL := [String]
setEvBind
  ev = cobox_akp
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_aiL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
15[<C:0,F:0>] [W] cobox_akp :: t_aiL
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiO :: [t_aiN]
                                ~ t_aiL [" a type equality [t_aiN]
                                                           ~
                                                           t_aiL " Database.hs:18:5-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiO :: [t_aiN]
                                 ~ t_aiL [" a type equality [t_aiN]
                                                            ~
                                                            t_aiL " Database.hs:18:5-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiO :: [t_aiN] ~ t_aiL [" a type equality [t_aiN]
                                                      ~
                                                      t_aiL " Database.hs:18:5-44] (CNonCanonical)
canEvNC:eq
  [t_aiN]
  t_aiL
can_eq_nc
  [W] cobox_aiO :: [t_aiN] ~ t_aiL
  [t_aiN]
  [t_aiN]
  t_aiL
  t_aiL
canEqTyVar
  t_aiL
  [t_aiN]
  Is-swapped
Following bound tyvar t_aiL = [String]
newWantedEvVar/cache miss [W] cobox_akq :: [String] ~ [t_aiN]
setEvBind
  ev = cobox_aiO
  tm  = CO Sym cobox_akq
rewriteEqEvidence
  [W] cobox_aiO :: [t_aiN] ~ t_aiL
  [String]
  [t_aiN]
  Sym cobox_akq
canEqTyVar2
  t_aiL
  [t_aiN]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_akq :: [String] ~ [t_aiN]
  [String]
  [String]
  [t_aiN]
  [t_aiN]
newWantedEvVar/cache miss [W] cobox_akr :: String ~ t_aiN
setEvBind
  ev = cobox_akq
  tm  = CO [cobox_akr]_N
canEvNC:eq
  String
  t_aiN
can_eq_nc
  [W] cobox_akr :: String ~ t_aiN
  String
  String
  t_aiN
  t_aiN
can_eq_nc
  [W] cobox_akr :: String ~ t_aiN
  [Char]
  String
  t_aiN
  t_aiN
canEqTyVar
  t_aiN
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aks :: t_aiN ~ String
setEvBind
  ev = cobox_akr
  tm  = CO Sym cobox_aks
rewriteEqEvidence
  [W] cobox_akr :: String ~ t_aiN
  t_aiN
  String
  Sym cobox_aks
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aks :: t_aiN
                                 ~ String [" a type equality [t_aiN]
                                                             ~
                                                             t_aiL " Database.hs:18:5-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_aiN := String
  Coercion: t_aiN ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aiN := String
setEvBind
  ev = cobox_aks
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aiN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
16[<C:0,F:0>] [W] cobox_aks :: t_aiN ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiP :: [Char]
                                ~ t_aiN [" a type equality [Char]
                                                           ~
                                                           t_aiN " Database.hs:18:6-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiP :: [Char]
                                 ~ t_aiN [" a type equality [Char]
                                                            ~
                                                            t_aiN " Database.hs:18:6-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiP :: [Char] ~ t_aiN [" a type equality [Char]
                                                     ~
                                                     t_aiN " Database.hs:18:6-27] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiN
can_eq_nc
  [W] cobox_aiP :: [Char] ~ t_aiN
  [Char]
  [Char]
  t_aiN
  t_aiN
canEqTyVar
  t_aiN
  [Char]
  Is-swapped
Following bound tyvar t_aiN = String
newWantedEvVar/cache miss [W] cobox_akt :: String ~ [Char]
setEvBind
  ev = cobox_aiP
  tm  = CO Sym cobox_akt
rewriteEqEvidence
  [W] cobox_aiP :: [Char] ~ t_aiN
  String
  [Char]
  Sym cobox_akt
canEqTyVar2
  t_aiN
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akt :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akt :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aku :: Char ~ Char
setEvBind
  ev = cobox_akt
  tm  = CO [cobox_aku]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aku :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aku
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiQ :: [Char]
                                ~ t_aiN [" a type equality [Char]
                                                           ~
                                                           t_aiN " Database.hs:18:30-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiQ :: [Char]
                                 ~ t_aiN [" a type equality [Char]
                                                            ~
                                                            t_aiN " Database.hs:18:30-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiQ :: [Char] ~ t_aiN [" a type equality [Char]
                                                     ~
                                                     t_aiN " Database.hs:18:30-35] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiN
can_eq_nc
  [W] cobox_aiQ :: [Char] ~ t_aiN
  [Char]
  [Char]
  t_aiN
  t_aiN
canEqTyVar
  t_aiN
  [Char]
  Is-swapped
Following bound tyvar t_aiN = String
newWantedEvVar/cache miss [W] cobox_akv :: String ~ [Char]
setEvBind
  ev = cobox_aiQ
  tm  = CO Sym cobox_akv
rewriteEqEvidence
  [W] cobox_aiQ :: [Char] ~ t_aiN
  String
  [Char]
  Sym cobox_akv
canEqTyVar2
  t_aiN
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akv :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akv :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akw :: Char ~ Char
setEvBind
  ev = cobox_akv
  tm  = CO [cobox_akw]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiR :: [Char]
                                ~ t_aiN [" a type equality [Char]
                                                           ~
                                                           t_aiN " Database.hs:18:38-43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiR :: [Char]
                                 ~ t_aiN [" a type equality [Char]
                                                            ~
                                                            t_aiN " Database.hs:18:38-43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiR :: [Char] ~ t_aiN [" a type equality [Char]
                                                     ~
                                                     t_aiN " Database.hs:18:38-43] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiN
can_eq_nc
  [W] cobox_aiR :: [Char] ~ t_aiN
  [Char]
  [Char]
  t_aiN
  t_aiN
canEqTyVar
  t_aiN
  [Char]
  Is-swapped
Following bound tyvar t_aiN = String
newWantedEvVar/cache miss [W] cobox_akx :: String ~ [Char]
setEvBind
  ev = cobox_aiR
  tm  = CO Sym cobox_akx
rewriteEqEvidence
  [W] cobox_aiR :: [Char] ~ t_aiN
  String
  [Char]
  Sym cobox_akx
canEqTyVar2
  t_aiN
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akx :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akx :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aky :: Char ~ Char
setEvBind
  ev = cobox_akx
  tm  = CO [cobox_aky]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aky :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aky
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiT :: [t_aiS]
                                ~ t_aiL [" a type equality [t_aiS]
                                                           ~
                                                           t_aiL " Database.hs:19:5-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiT :: [t_aiS]
                                 ~ t_aiL [" a type equality [t_aiS]
                                                            ~
                                                            t_aiL " Database.hs:19:5-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiT :: [t_aiS] ~ t_aiL [" a type equality [t_aiS]
                                                      ~
                                                      t_aiL " Database.hs:19:5-56] (CNonCanonical)
canEvNC:eq
  [t_aiS]
  t_aiL
can_eq_nc
  [W] cobox_aiT :: [t_aiS] ~ t_aiL
  [t_aiS]
  [t_aiS]
  t_aiL
  t_aiL
canEqTyVar
  t_aiL
  [t_aiS]
  Is-swapped
Following bound tyvar t_aiL = [String]
newWantedEvVar/cache miss [W] cobox_akz :: [String] ~ [t_aiS]
setEvBind
  ev = cobox_aiT
  tm  = CO Sym cobox_akz
rewriteEqEvidence
  [W] cobox_aiT :: [t_aiS] ~ t_aiL
  [String]
  [t_aiS]
  Sym cobox_akz
canEqTyVar2
  t_aiL
  [t_aiS]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_akz :: [String] ~ [t_aiS]
  [String]
  [String]
  [t_aiS]
  [t_aiS]
newWantedEvVar/cache miss [W] cobox_akA :: String ~ t_aiS
setEvBind
  ev = cobox_akz
  tm  = CO [cobox_akA]_N
canEvNC:eq
  String
  t_aiS
can_eq_nc
  [W] cobox_akA :: String ~ t_aiS
  String
  String
  t_aiS
  t_aiS
can_eq_nc
  [W] cobox_akA :: String ~ t_aiS
  [Char]
  String
  t_aiS
  t_aiS
canEqTyVar
  t_aiS
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akB :: t_aiS ~ String
setEvBind
  ev = cobox_akA
  tm  = CO Sym cobox_akB
rewriteEqEvidence
  [W] cobox_akA :: String ~ t_aiS
  t_aiS
  String
  Sym cobox_akB
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akB :: t_aiS
                                 ~ String [" a type equality [t_aiS]
                                                             ~
                                                             t_aiL " Database.hs:19:5-56] (CTyEqCan)
Sneaky unification:
  Unifies: t_aiS := String
  Coercion: t_aiS ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aiS := String
setEvBind
  ev = cobox_akB
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aiS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
20[<C:0,F:0>] [W] cobox_akB :: t_aiS ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiU :: [Char]
                                ~ t_aiS [" a type equality [Char]
                                                           ~
                                                           t_aiS " Database.hs:19:6-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiU :: [Char]
                                 ~ t_aiS [" a type equality [Char]
                                                            ~
                                                            t_aiS " Database.hs:19:6-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiU :: [Char] ~ t_aiS [" a type equality [Char]
                                                     ~
                                                     t_aiS " Database.hs:19:6-31] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiS
can_eq_nc
  [W] cobox_aiU :: [Char] ~ t_aiS
  [Char]
  [Char]
  t_aiS
  t_aiS
canEqTyVar
  t_aiS
  [Char]
  Is-swapped
Following bound tyvar t_aiS = String
newWantedEvVar/cache miss [W] cobox_akC :: String ~ [Char]
setEvBind
  ev = cobox_aiU
  tm  = CO Sym cobox_akC
rewriteEqEvidence
  [W] cobox_aiU :: [Char] ~ t_aiS
  String
  [Char]
  Sym cobox_akC
canEqTyVar2
  t_aiS
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akC :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akC :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akD :: Char ~ Char
setEvBind
  ev = cobox_akC
  tm  = CO [cobox_akD]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akD :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akD
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiV :: [Char]
                                ~ t_aiS [" a type equality [Char]
                                                           ~
                                                           t_aiS " Database.hs:19:34-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiV :: [Char]
                                 ~ t_aiS [" a type equality [Char]
                                                            ~
                                                            t_aiS " Database.hs:19:34-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiV :: [Char] ~ t_aiS [" a type equality [Char]
                                                     ~
                                                     t_aiS " Database.hs:19:34-44] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiS
can_eq_nc
  [W] cobox_aiV :: [Char] ~ t_aiS
  [Char]
  [Char]
  t_aiS
  t_aiS
canEqTyVar
  t_aiS
  [Char]
  Is-swapped
Following bound tyvar t_aiS = String
newWantedEvVar/cache miss [W] cobox_akE :: String ~ [Char]
setEvBind
  ev = cobox_aiV
  tm  = CO Sym cobox_akE
rewriteEqEvidence
  [W] cobox_aiV :: [Char] ~ t_aiS
  String
  [Char]
  Sym cobox_akE
canEqTyVar2
  t_aiS
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akE :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akE :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akF :: Char ~ Char
setEvBind
  ev = cobox_akE
  tm  = CO [cobox_akF]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akF :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akF
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiW :: [Char]
                                ~ t_aiS [" a type equality [Char]
                                                           ~
                                                           t_aiS " Database.hs:19:47-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiW :: [Char]
                                 ~ t_aiS [" a type equality [Char]
                                                            ~
                                                            t_aiS " Database.hs:19:47-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiW :: [Char] ~ t_aiS [" a type equality [Char]
                                                     ~
                                                     t_aiS " Database.hs:19:47-55] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiS
can_eq_nc
  [W] cobox_aiW :: [Char] ~ t_aiS
  [Char]
  [Char]
  t_aiS
  t_aiS
canEqTyVar
  t_aiS
  [Char]
  Is-swapped
Following bound tyvar t_aiS = String
newWantedEvVar/cache miss [W] cobox_akG :: String ~ [Char]
setEvBind
  ev = cobox_aiW
  tm  = CO Sym cobox_akG
rewriteEqEvidence
  [W] cobox_aiW :: [Char] ~ t_aiS
  String
  [Char]
  Sym cobox_akG
canEqTyVar2
  t_aiS
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akG :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akG :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akH :: Char ~ Char
setEvBind
  ev = cobox_akG
  tm  = CO [cobox_akH]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akH :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akH
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiY :: [t_aiX]
                                ~ t_aiL [" a type equality [t_aiX]
                                                           ~
                                                           t_aiL " Database.hs:20:5-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiY :: [t_aiX]
                                 ~ t_aiL [" a type equality [t_aiX]
                                                            ~
                                                            t_aiL " Database.hs:20:5-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiY :: [t_aiX] ~ t_aiL [" a type equality [t_aiX]
                                                      ~
                                                      t_aiL " Database.hs:20:5-46] (CNonCanonical)
canEvNC:eq
  [t_aiX]
  t_aiL
can_eq_nc
  [W] cobox_aiY :: [t_aiX] ~ t_aiL
  [t_aiX]
  [t_aiX]
  t_aiL
  t_aiL
canEqTyVar
  t_aiL
  [t_aiX]
  Is-swapped
Following bound tyvar t_aiL = [String]
newWantedEvVar/cache miss [W] cobox_akI :: [String] ~ [t_aiX]
setEvBind
  ev = cobox_aiY
  tm  = CO Sym cobox_akI
rewriteEqEvidence
  [W] cobox_aiY :: [t_aiX] ~ t_aiL
  [String]
  [t_aiX]
  Sym cobox_akI
canEqTyVar2
  t_aiL
  [t_aiX]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_akI :: [String] ~ [t_aiX]
  [String]
  [String]
  [t_aiX]
  [t_aiX]
newWantedEvVar/cache miss [W] cobox_akJ :: String ~ t_aiX
setEvBind
  ev = cobox_akI
  tm  = CO [cobox_akJ]_N
canEvNC:eq
  String
  t_aiX
can_eq_nc
  [W] cobox_akJ :: String ~ t_aiX
  String
  String
  t_aiX
  t_aiX
can_eq_nc
  [W] cobox_akJ :: String ~ t_aiX
  [Char]
  String
  t_aiX
  t_aiX
canEqTyVar
  t_aiX
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akK :: t_aiX ~ String
setEvBind
  ev = cobox_akJ
  tm  = CO Sym cobox_akK
rewriteEqEvidence
  [W] cobox_akJ :: String ~ t_aiX
  t_aiX
  String
  Sym cobox_akK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akK :: t_aiX
                                 ~ String [" a type equality [t_aiX]
                                                             ~
                                                             t_aiL " Database.hs:20:5-46] (CTyEqCan)
Sneaky unification:
  Unifies: t_aiX := String
  Coercion: t_aiX ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aiX := String
setEvBind
  ev = cobox_akK
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aiX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
24[<C:0,F:0>] [W] cobox_akK :: t_aiX ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiZ :: [Char]
                                ~ t_aiX [" a type equality [Char]
                                                           ~
                                                           t_aiX " Database.hs:20:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiZ :: [Char]
                                 ~ t_aiX [" a type equality [Char]
                                                            ~
                                                            t_aiX " Database.hs:20:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiZ :: [Char] ~ t_aiX [" a type equality [Char]
                                                     ~
                                                     t_aiX " Database.hs:20:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiX
can_eq_nc
  [W] cobox_aiZ :: [Char] ~ t_aiX
  [Char]
  [Char]
  t_aiX
  t_aiX
canEqTyVar
  t_aiX
  [Char]
  Is-swapped
Following bound tyvar t_aiX = String
newWantedEvVar/cache miss [W] cobox_akL :: String ~ [Char]
setEvBind
  ev = cobox_aiZ
  tm  = CO Sym cobox_akL
rewriteEqEvidence
  [W] cobox_aiZ :: [Char] ~ t_aiX
  String
  [Char]
  Sym cobox_akL
canEqTyVar2
  t_aiX
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akL :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akL :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akM :: Char ~ Char
setEvBind
  ev = cobox_akL
  tm  = CO [cobox_akM]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akM :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akM
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj0 :: [Char]
                                ~ t_aiX [" a type equality [Char]
                                                           ~
                                                           t_aiX " Database.hs:20:28-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj0 :: [Char]
                                 ~ t_aiX [" a type equality [Char]
                                                            ~
                                                            t_aiX " Database.hs:20:28-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj0 :: [Char] ~ t_aiX [" a type equality [Char]
                                                     ~
                                                     t_aiX " Database.hs:20:28-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiX
can_eq_nc
  [W] cobox_aj0 :: [Char] ~ t_aiX
  [Char]
  [Char]
  t_aiX
  t_aiX
canEqTyVar
  t_aiX
  [Char]
  Is-swapped
Following bound tyvar t_aiX = String
newWantedEvVar/cache miss [W] cobox_akN :: String ~ [Char]
setEvBind
  ev = cobox_aj0
  tm  = CO Sym cobox_akN
rewriteEqEvidence
  [W] cobox_aj0 :: [Char] ~ t_aiX
  String
  [Char]
  Sym cobox_akN
canEqTyVar2
  t_aiX
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akN :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akN :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akO :: Char ~ Char
setEvBind
  ev = cobox_akN
  tm  = CO [cobox_akO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj1 :: [Char]
                                ~ t_aiX [" a type equality [Char]
                                                           ~
                                                           t_aiX " Database.hs:20:40-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj1 :: [Char]
                                 ~ t_aiX [" a type equality [Char]
                                                            ~
                                                            t_aiX " Database.hs:20:40-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj1 :: [Char] ~ t_aiX [" a type equality [Char]
                                                     ~
                                                     t_aiX " Database.hs:20:40-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiX
can_eq_nc
  [W] cobox_aj1 :: [Char] ~ t_aiX
  [Char]
  [Char]
  t_aiX
  t_aiX
canEqTyVar
  t_aiX
  [Char]
  Is-swapped
Following bound tyvar t_aiX = String
newWantedEvVar/cache miss [W] cobox_akP :: String ~ [Char]
setEvBind
  ev = cobox_aj1
  tm  = CO Sym cobox_akP
rewriteEqEvidence
  [W] cobox_aj1 :: [Char] ~ t_aiX
  String
  [Char]
  Sym cobox_akP
canEqTyVar2
  t_aiX
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akP :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akP :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akQ :: Char ~ Char
setEvBind
  ev = cobox_akP
  tm  = CO [cobox_akQ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akQ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akQ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj3 :: [t_aj2]
                                ~ t_aiL [" a type equality [t_aj2]
                                                           ~
                                                           t_aiL " Database.hs:21:5-51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj3 :: [t_aj2]
                                 ~ t_aiL [" a type equality [t_aj2]
                                                            ~
                                                            t_aiL " Database.hs:21:5-51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj3 :: [t_aj2] ~ t_aiL [" a type equality [t_aj2]
                                                      ~
                                                      t_aiL " Database.hs:21:5-51] (CNonCanonical)
canEvNC:eq
  [t_aj2]
  t_aiL
can_eq_nc
  [W] cobox_aj3 :: [t_aj2] ~ t_aiL
  [t_aj2]
  [t_aj2]
  t_aiL
  t_aiL
canEqTyVar
  t_aiL
  [t_aj2]
  Is-swapped
Following bound tyvar t_aiL = [String]
newWantedEvVar/cache miss [W] cobox_akR :: [String] ~ [t_aj2]
setEvBind
  ev = cobox_aj3
  tm  = CO Sym cobox_akR
rewriteEqEvidence
  [W] cobox_aj3 :: [t_aj2] ~ t_aiL
  [String]
  [t_aj2]
  Sym cobox_akR
canEqTyVar2
  t_aiL
  [t_aj2]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_akR :: [String] ~ [t_aj2]
  [String]
  [String]
  [t_aj2]
  [t_aj2]
newWantedEvVar/cache miss [W] cobox_akS :: String ~ t_aj2
setEvBind
  ev = cobox_akR
  tm  = CO [cobox_akS]_N
canEvNC:eq
  String
  t_aj2
can_eq_nc
  [W] cobox_akS :: String ~ t_aj2
  String
  String
  t_aj2
  t_aj2
can_eq_nc
  [W] cobox_akS :: String ~ t_aj2
  [Char]
  String
  t_aj2
  t_aj2
canEqTyVar
  t_aj2
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akT :: t_aj2 ~ String
setEvBind
  ev = cobox_akS
  tm  = CO Sym cobox_akT
rewriteEqEvidence
  [W] cobox_akS :: String ~ t_aj2
  t_aj2
  String
  Sym cobox_akT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akT :: t_aj2
                                 ~ String [" a type equality [t_aj2]
                                                             ~
                                                             t_aiL " Database.hs:21:5-51] (CTyEqCan)
Sneaky unification:
  Unifies: t_aj2 := String
  Coercion: t_aj2 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aj2 := String
setEvBind
  ev = cobox_akT
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aj2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
28[<C:0,F:0>] [W] cobox_akT :: t_aj2 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj4 :: [Char]
                                ~ t_aj2 [" a type equality [Char]
                                                           ~
                                                           t_aj2 " Database.hs:21:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj4 :: [Char]
                                 ~ t_aj2 [" a type equality [Char]
                                                            ~
                                                            t_aj2 " Database.hs:21:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj4 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                     ~
                                                     t_aj2 " Database.hs:21:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj2
can_eq_nc
  [W] cobox_aj4 :: [Char] ~ t_aj2
  [Char]
  [Char]
  t_aj2
  t_aj2
canEqTyVar
  t_aj2
  [Char]
  Is-swapped
Following bound tyvar t_aj2 = String
newWantedEvVar/cache miss [W] cobox_akU :: String ~ [Char]
setEvBind
  ev = cobox_aj4
  tm  = CO Sym cobox_akU
rewriteEqEvidence
  [W] cobox_aj4 :: [Char] ~ t_aj2
  String
  [Char]
  Sym cobox_akU
canEqTyVar2
  t_aj2
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akU :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akU :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akV :: Char ~ Char
setEvBind
  ev = cobox_akU
  tm  = CO [cobox_akV]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akV :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akV
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj5 :: [Char]
                                ~ t_aj2 [" a type equality [Char]
                                                           ~
                                                           t_aj2 " Database.hs:21:28-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj5 :: [Char]
                                 ~ t_aj2 [" a type equality [Char]
                                                            ~
                                                            t_aj2 " Database.hs:21:28-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj5 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                     ~
                                                     t_aj2 " Database.hs:21:28-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj2
can_eq_nc
  [W] cobox_aj5 :: [Char] ~ t_aj2
  [Char]
  [Char]
  t_aj2
  t_aj2
canEqTyVar
  t_aj2
  [Char]
  Is-swapped
Following bound tyvar t_aj2 = String
newWantedEvVar/cache miss [W] cobox_akW :: String ~ [Char]
setEvBind
  ev = cobox_aj5
  tm  = CO Sym cobox_akW
rewriteEqEvidence
  [W] cobox_aj5 :: [Char] ~ t_aj2
  String
  [Char]
  Sym cobox_akW
canEqTyVar2
  t_aj2
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akW :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akW :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akX :: Char ~ Char
setEvBind
  ev = cobox_akW
  tm  = CO [cobox_akX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj6 :: [Char]
                                ~ t_aj2 [" a type equality [Char]
                                                           ~
                                                           t_aj2 " Database.hs:21:40-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj6 :: [Char]
                                 ~ t_aj2 [" a type equality [Char]
                                                            ~
                                                            t_aj2 " Database.hs:21:40-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj6 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                     ~
                                                     t_aj2 " Database.hs:21:40-50] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj2
can_eq_nc
  [W] cobox_aj6 :: [Char] ~ t_aj2
  [Char]
  [Char]
  t_aj2
  t_aj2
canEqTyVar
  t_aj2
  [Char]
  Is-swapped
Following bound tyvar t_aj2 = String
newWantedEvVar/cache miss [W] cobox_akY :: String ~ [Char]
setEvBind
  ev = cobox_aj6
  tm  = CO Sym cobox_akY
rewriteEqEvidence
  [W] cobox_aj6 :: [Char] ~ t_aj2
  String
  [Char]
  Sym cobox_akY
canEqTyVar2
  t_aj2
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akY :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akY :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akZ :: Char ~ Char
setEvBind
  ev = cobox_akY
  tm  = CO [cobox_akZ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj8 :: [t_aj7]
                                ~ t_aiL [" a type equality [t_aj7]
                                                           ~
                                                           t_aiL " Database.hs:22:5-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj8 :: [t_aj7]
                                 ~ t_aiL [" a type equality [t_aj7]
                                                            ~
                                                            t_aiL " Database.hs:22:5-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj8 :: [t_aj7] ~ t_aiL [" a type equality [t_aj7]
                                                      ~
                                                      t_aiL " Database.hs:22:5-59] (CNonCanonical)
canEvNC:eq
  [t_aj7]
  t_aiL
can_eq_nc
  [W] cobox_aj8 :: [t_aj7] ~ t_aiL
  [t_aj7]
  [t_aj7]
  t_aiL
  t_aiL
canEqTyVar
  t_aiL
  [t_aj7]
  Is-swapped
Following bound tyvar t_aiL = [String]
newWantedEvVar/cache miss [W] cobox_al0 :: [String] ~ [t_aj7]
setEvBind
  ev = cobox_aj8
  tm  = CO Sym cobox_al0
rewriteEqEvidence
  [W] cobox_aj8 :: [t_aj7] ~ t_aiL
  [String]
  [t_aj7]
  Sym cobox_al0
canEqTyVar2
  t_aiL
  [t_aj7]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_al0 :: [String] ~ [t_aj7]
  [String]
  [String]
  [t_aj7]
  [t_aj7]
newWantedEvVar/cache miss [W] cobox_al1 :: String ~ t_aj7
setEvBind
  ev = cobox_al0
  tm  = CO [cobox_al1]_N
canEvNC:eq
  String
  t_aj7
can_eq_nc
  [W] cobox_al1 :: String ~ t_aj7
  String
  String
  t_aj7
  t_aj7
can_eq_nc
  [W] cobox_al1 :: String ~ t_aj7
  [Char]
  String
  t_aj7
  t_aj7
canEqTyVar
  t_aj7
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_al2 :: t_aj7 ~ String
setEvBind
  ev = cobox_al1
  tm  = CO Sym cobox_al2
rewriteEqEvidence
  [W] cobox_al1 :: String ~ t_aj7
  t_aj7
  String
  Sym cobox_al2
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_al2 :: t_aj7
                                 ~ String [" a type equality [t_aj7]
                                                             ~
                                                             t_aiL " Database.hs:22:5-59] (CTyEqCan)
Sneaky unification:
  Unifies: t_aj7 := String
  Coercion: t_aj7 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aj7 := String
setEvBind
  ev = cobox_al2
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aj7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
32[<C:0,F:0>] [W] cobox_al2 :: t_aj7 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj9 :: [Char]
                                ~ t_aj7 [" a type equality [Char]
                                                           ~
                                                           t_aj7 " Database.hs:22:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj9 :: [Char]
                                 ~ t_aj7 [" a type equality [Char]
                                                            ~
                                                            t_aj7 " Database.hs:22:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj9 :: [Char] ~ t_aj7 [" a type equality [Char]
                                                     ~
                                                     t_aj7 " Database.hs:22:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj7
can_eq_nc
  [W] cobox_aj9 :: [Char] ~ t_aj7
  [Char]
  [Char]
  t_aj7
  t_aj7
canEqTyVar
  t_aj7
  [Char]
  Is-swapped
Following bound tyvar t_aj7 = String
newWantedEvVar/cache miss [W] cobox_al3 :: String ~ [Char]
setEvBind
  ev = cobox_aj9
  tm  = CO Sym cobox_al3
rewriteEqEvidence
  [W] cobox_aj9 :: [Char] ~ t_aj7
  String
  [Char]
  Sym cobox_al3
canEqTyVar2
  t_aj7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_al3 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_al3 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_al4 :: Char ~ Char
setEvBind
  ev = cobox_al3
  tm  = CO [cobox_al4]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_al4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_al4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aja :: [Char]
                                ~ t_aj7 [" a type equality [Char]
                                                           ~
                                                           t_aj7 " Database.hs:22:28-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aja :: [Char]
                                 ~ t_aj7 [" a type equality [Char]
                                                            ~
                                                            t_aj7 " Database.hs:22:28-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aja :: [Char] ~ t_aj7 [" a type equality [Char]
                                                     ~
                                                     t_aj7 " Database.hs:22:28-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj7
can_eq_nc
  [W] cobox_aja :: [Char] ~ t_aj7
  [Char]
  [Char]
  t_aj7
  t_aj7
canEqTyVar
  t_aj7
  [Char]
  Is-swapped
Following bound tyvar t_aj7 = String
newWantedEvVar/cache miss [W] cobox_al5 :: String ~ [Char]
setEvBind
  ev = cobox_aja
  tm  = CO Sym cobox_al5
rewriteEqEvidence
  [W] cobox_aja :: [Char] ~ t_aj7
  String
  [Char]
  Sym cobox_al5
canEqTyVar2
  t_aj7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_al5 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_al5 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_al6 :: Char ~ Char
setEvBind
  ev = cobox_al5
  tm  = CO [cobox_al6]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_al6 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_al6
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajb :: [Char]
                                ~ t_aj7 [" a type equality [Char]
                                                           ~
                                                           t_aj7 " Database.hs:22:48-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajb :: [Char]
                                 ~ t_aj7 [" a type equality [Char]
                                                            ~
                                                            t_aj7 " Database.hs:22:48-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajb :: [Char] ~ t_aj7 [" a type equality [Char]
                                                     ~
                                                     t_aj7 " Database.hs:22:48-58] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj7
can_eq_nc
  [W] cobox_ajb :: [Char] ~ t_aj7
  [Char]
  [Char]
  t_aj7
  t_aj7
canEqTyVar
  t_aj7
  [Char]
  Is-swapped
Following bound tyvar t_aj7 = String
newWantedEvVar/cache miss [W] cobox_al7 :: String ~ [Char]
setEvBind
  ev = cobox_ajb
  tm  = CO Sym cobox_al7
rewriteEqEvidence
  [W] cobox_ajb :: [Char] ~ t_aj7
  String
  [Char]
  Sym cobox_al7
canEqTyVar2
  t_aj7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_al7 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_al7 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_al8 :: Char ~ Char
setEvBind
  ev = cobox_al7
  tm  = CO [cobox_al8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_al8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_al8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajd :: [t_ajc]
                                ~ t_aiL [" a type equality [t_ajc]
                                                           ~
                                                           t_aiL " Database.hs:23:5-66] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajd :: [t_ajc]
                                 ~ t_aiL [" a type equality [t_ajc]
                                                            ~
                                                            t_aiL " Database.hs:23:5-66] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajd :: [t_ajc] ~ t_aiL [" a type equality [t_ajc]
                                                      ~
                                                      t_aiL " Database.hs:23:5-66] (CNonCanonical)
canEvNC:eq
  [t_ajc]
  t_aiL
can_eq_nc
  [W] cobox_ajd :: [t_ajc] ~ t_aiL
  [t_ajc]
  [t_ajc]
  t_aiL
  t_aiL
canEqTyVar
  t_aiL
  [t_ajc]
  Is-swapped
Following bound tyvar t_aiL = [String]
newWantedEvVar/cache miss [W] cobox_al9 :: [String] ~ [t_ajc]
setEvBind
  ev = cobox_ajd
  tm  = CO Sym cobox_al9
rewriteEqEvidence
  [W] cobox_ajd :: [t_ajc] ~ t_aiL
  [String]
  [t_ajc]
  Sym cobox_al9
canEqTyVar2
  t_aiL
  [t_ajc]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_al9 :: [String] ~ [t_ajc]
  [String]
  [String]
  [t_ajc]
  [t_ajc]
newWantedEvVar/cache miss [W] cobox_ala :: String ~ t_ajc
setEvBind
  ev = cobox_al9
  tm  = CO [cobox_ala]_N
canEvNC:eq
  String
  t_ajc
can_eq_nc
  [W] cobox_ala :: String ~ t_ajc
  String
  String
  t_ajc
  t_ajc
can_eq_nc
  [W] cobox_ala :: String ~ t_ajc
  [Char]
  String
  t_ajc
  t_ajc
canEqTyVar
  t_ajc
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alb :: t_ajc ~ String
setEvBind
  ev = cobox_ala
  tm  = CO Sym cobox_alb
rewriteEqEvidence
  [W] cobox_ala :: String ~ t_ajc
  t_ajc
  String
  Sym cobox_alb
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alb :: t_ajc
                                 ~ String [" a type equality [t_ajc]
                                                             ~
                                                             t_aiL " Database.hs:23:5-66] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajc := String
  Coercion: t_ajc ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajc := String
setEvBind
  ev = cobox_alb
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
36[<C:0,F:0>] [W] cobox_alb :: t_ajc ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aje :: [Char]
                                ~ t_ajc [" a type equality [Char]
                                                           ~
                                                           t_ajc " Database.hs:23:6-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aje :: [Char]
                                 ~ t_ajc [" a type equality [Char]
                                                            ~
                                                            t_ajc " Database.hs:23:6-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aje :: [Char] ~ t_ajc [" a type equality [Char]
                                                     ~
                                                     t_ajc " Database.hs:23:6-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajc
can_eq_nc
  [W] cobox_aje :: [Char] ~ t_ajc
  [Char]
  [Char]
  t_ajc
  t_ajc
canEqTyVar
  t_ajc
  [Char]
  Is-swapped
Following bound tyvar t_ajc = String
newWantedEvVar/cache miss [W] cobox_alc :: String ~ [Char]
setEvBind
  ev = cobox_aje
  tm  = CO Sym cobox_alc
rewriteEqEvidence
  [W] cobox_aje :: [Char] ~ t_ajc
  String
  [Char]
  Sym cobox_alc
canEqTyVar2
  t_ajc
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alc :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alc :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_ald :: Char ~ Char
setEvBind
  ev = cobox_alc
  tm  = CO [cobox_ald]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_ald :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ald
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajf :: [Char]
                                ~ t_ajc [" a type equality [Char]
                                                           ~
                                                           t_ajc " Database.hs:23:35-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajf :: [Char]
                                 ~ t_ajc [" a type equality [Char]
                                                            ~
                                                            t_ajc " Database.hs:23:35-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajf :: [Char] ~ t_ajc [" a type equality [Char]
                                                     ~
                                                     t_ajc " Database.hs:23:35-52] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajc
can_eq_nc
  [W] cobox_ajf :: [Char] ~ t_ajc
  [Char]
  [Char]
  t_ajc
  t_ajc
canEqTyVar
  t_ajc
  [Char]
  Is-swapped
Following bound tyvar t_ajc = String
newWantedEvVar/cache miss [W] cobox_ale :: String ~ [Char]
setEvBind
  ev = cobox_ajf
  tm  = CO Sym cobox_ale
rewriteEqEvidence
  [W] cobox_ajf :: [Char] ~ t_ajc
  String
  [Char]
  Sym cobox_ale
canEqTyVar2
  t_ajc
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_ale :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_ale :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alf :: Char ~ Char
setEvBind
  ev = cobox_ale
  tm  = CO [cobox_alf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajg :: [Char]
                                ~ t_ajc [" a type equality [Char]
                                                           ~
                                                           t_ajc " Database.hs:23:55-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajg :: [Char]
                                 ~ t_ajc [" a type equality [Char]
                                                            ~
                                                            t_ajc " Database.hs:23:55-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajg :: [Char] ~ t_ajc [" a type equality [Char]
                                                     ~
                                                     t_ajc " Database.hs:23:55-65] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajc
can_eq_nc
  [W] cobox_ajg :: [Char] ~ t_ajc
  [Char]
  [Char]
  t_ajc
  t_ajc
canEqTyVar
  t_ajc
  [Char]
  Is-swapped
Following bound tyvar t_ajc = String
newWantedEvVar/cache miss [W] cobox_alg :: String ~ [Char]
setEvBind
  ev = cobox_ajg
  tm  = CO Sym cobox_alg
rewriteEqEvidence
  [W] cobox_ajg :: [Char] ~ t_ajc
  String
  [Char]
  Sym cobox_alg
canEqTyVar2
  t_ajc
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alg :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alg :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alh :: Char ~ Char
setEvBind
  ev = cobox_alg
  tm  = CO [cobox_alh]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aji :: [t_ajh]
                                ~ t_aiL [" a type equality [t_ajh]
                                                           ~
                                                           t_aiL " Database.hs:24:5-63] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aji :: [t_ajh]
                                 ~ t_aiL [" a type equality [t_ajh]
                                                            ~
                                                            t_aiL " Database.hs:24:5-63] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aji :: [t_ajh] ~ t_aiL [" a type equality [t_ajh]
                                                      ~
                                                      t_aiL " Database.hs:24:5-63] (CNonCanonical)
canEvNC:eq
  [t_ajh]
  t_aiL
can_eq_nc
  [W] cobox_aji :: [t_ajh] ~ t_aiL
  [t_ajh]
  [t_ajh]
  t_aiL
  t_aiL
canEqTyVar
  t_aiL
  [t_ajh]
  Is-swapped
Following bound tyvar t_aiL = [String]
newWantedEvVar/cache miss [W] cobox_ali :: [String] ~ [t_ajh]
setEvBind
  ev = cobox_aji
  tm  = CO Sym cobox_ali
rewriteEqEvidence
  [W] cobox_aji :: [t_ajh] ~ t_aiL
  [String]
  [t_ajh]
  Sym cobox_ali
canEqTyVar2
  t_aiL
  [t_ajh]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_ali :: [String] ~ [t_ajh]
  [String]
  [String]
  [t_ajh]
  [t_ajh]
newWantedEvVar/cache miss [W] cobox_alj :: String ~ t_ajh
setEvBind
  ev = cobox_ali
  tm  = CO [cobox_alj]_N
canEvNC:eq
  String
  t_ajh
can_eq_nc
  [W] cobox_alj :: String ~ t_ajh
  String
  String
  t_ajh
  t_ajh
can_eq_nc
  [W] cobox_alj :: String ~ t_ajh
  [Char]
  String
  t_ajh
  t_ajh
canEqTyVar
  t_ajh
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alk :: t_ajh ~ String
setEvBind
  ev = cobox_alj
  tm  = CO Sym cobox_alk
rewriteEqEvidence
  [W] cobox_alj :: String ~ t_ajh
  t_ajh
  String
  Sym cobox_alk
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alk :: t_ajh
                                 ~ String [" a type equality [t_ajh]
                                                             ~
                                                             t_aiL " Database.hs:24:5-63] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajh := String
  Coercion: t_ajh ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajh := String
setEvBind
  ev = cobox_alk
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajh
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
40[<C:0,F:0>] [W] cobox_alk :: t_ajh ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajj :: [Char]
                                ~ t_ajh [" a type equality [Char]
                                                           ~
                                                           t_ajh " Database.hs:24:6-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajj :: [Char]
                                 ~ t_ajh [" a type equality [Char]
                                                            ~
                                                            t_ajh " Database.hs:24:6-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajj :: [Char] ~ t_ajh [" a type equality [Char]
                                                     ~
                                                     t_ajh " Database.hs:24:6-40] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajh
can_eq_nc
  [W] cobox_ajj :: [Char] ~ t_ajh
  [Char]
  [Char]
  t_ajh
  t_ajh
canEqTyVar
  t_ajh
  [Char]
  Is-swapped
Following bound tyvar t_ajh = String
newWantedEvVar/cache miss [W] cobox_all :: String ~ [Char]
setEvBind
  ev = cobox_ajj
  tm  = CO Sym cobox_all
rewriteEqEvidence
  [W] cobox_ajj :: [Char] ~ t_ajh
  String
  [Char]
  Sym cobox_all
canEqTyVar2
  t_ajh
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_all :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_all :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alm :: Char ~ Char
setEvBind
  ev = cobox_all
  tm  = CO [cobox_alm]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alm :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alm
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajk :: [Char]
                                ~ t_ajh [" a type equality [Char]
                                                           ~
                                                           t_ajh " Database.hs:24:43-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajk :: [Char]
                                 ~ t_ajh [" a type equality [Char]
                                                            ~
                                                            t_ajh " Database.hs:24:43-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajk :: [Char] ~ t_ajh [" a type equality [Char]
                                                     ~
                                                     t_ajh " Database.hs:24:43-50] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajh
can_eq_nc
  [W] cobox_ajk :: [Char] ~ t_ajh
  [Char]
  [Char]
  t_ajh
  t_ajh
canEqTyVar
  t_ajh
  [Char]
  Is-swapped
Following bound tyvar t_ajh = String
newWantedEvVar/cache miss [W] cobox_aln :: String ~ [Char]
setEvBind
  ev = cobox_ajk
  tm  = CO Sym cobox_aln
rewriteEqEvidence
  [W] cobox_ajk :: [Char] ~ t_ajh
  String
  [Char]
  Sym cobox_aln
canEqTyVar2
  t_ajh
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aln :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aln :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alo :: Char ~ Char
setEvBind
  ev = cobox_aln
  tm  = CO [cobox_alo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajl :: [Char]
                                ~ t_ajh [" a type equality [Char]
                                                           ~
                                                           t_ajh " Database.hs:24:53-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajl :: [Char]
                                 ~ t_ajh [" a type equality [Char]
                                                            ~
                                                            t_ajh " Database.hs:24:53-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajl :: [Char] ~ t_ajh [" a type equality [Char]
                                                     ~
                                                     t_ajh " Database.hs:24:53-62] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajh
can_eq_nc
  [W] cobox_ajl :: [Char] ~ t_ajh
  [Char]
  [Char]
  t_ajh
  t_ajh
canEqTyVar
  t_ajh
  [Char]
  Is-swapped
Following bound tyvar t_ajh = String
newWantedEvVar/cache miss [W] cobox_alp :: String ~ [Char]
setEvBind
  ev = cobox_ajl
  tm  = CO Sym cobox_alp
rewriteEqEvidence
  [W] cobox_ajl :: [Char] ~ t_ajh
  String
  [Char]
  Sym cobox_alp
canEqTyVar2
  t_ajh
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alp :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alp :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alq :: Char ~ Char
setEvBind
  ev = cobox_alp
  tm  = CO [cobox_alq]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alq :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alq
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajo :: [t_ajn]
                                ~ t_aip [" a type equality [t_ajn]
                                                           ~
                                                           t_aip " Database.hs:(5,3)-(14,3)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajo :: [t_ajn]
                                 ~ t_aip [" a type equality [t_ajn]
                                                            ~
                                                            t_aip " Database.hs:(5,3)-(14,3)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajo :: [t_ajn] ~ t_aip [" a type equality [t_ajn]
                                                      ~
                                                      t_aip " Database.hs:(5,3)-(14,3)] (CNonCanonical)
canEvNC:eq
  [t_ajn]
  t_aip
can_eq_nc
  [W] cobox_ajo :: [t_ajn] ~ t_aip
  [t_ajn]
  [t_ajn]
  t_aip
  t_aip
canEqTyVar
  t_aip
  [t_ajn]
  Is-swapped
Following bound tyvar t_aip = Table
newWantedEvVar/cache miss [W] cobox_alr :: Table ~ [t_ajn]
setEvBind
  ev = cobox_ajo
  tm  = CO Sym cobox_alr
rewriteEqEvidence
  [W] cobox_ajo :: [t_ajn] ~ t_aip
  Table
  [t_ajn]
  Sym cobox_alr
canEqTyVar2
  t_aip
  [t_ajn]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_alr :: Table ~ [t_ajn]
  Table
  Table
  [t_ajn]
  [t_ajn]
can_eq_nc
  [W] cobox_alr :: Table ~ [t_ajn]
  [[String]]
  Table
  [t_ajn]
  [t_ajn]
newWantedEvVar/cache miss [W] cobox_als :: [String] ~ t_ajn
setEvBind
  ev = cobox_alr
  tm  = CO [cobox_als]_N
canEvNC:eq
  [String]
  t_ajn
can_eq_nc
  [W] cobox_als :: [String] ~ t_ajn
  [String]
  [String]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alt :: t_ajn ~ [String]
setEvBind
  ev = cobox_als
  tm  = CO Sym cobox_alt
rewriteEqEvidence
  [W] cobox_als :: [String] ~ t_ajn
  t_ajn
  [String]
  Sym cobox_alt
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alt :: t_ajn
                                 ~ [String] [" a type equality [t_ajn]
                                                               ~
                                                               t_aip " Database.hs:(5,3)-(14,3)] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajn := [String]
  Coercion: t_ajn ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajn := [String]
setEvBind
  ev = cobox_alt
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_ajn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
44[<C:0,F:0>] [W] cobox_alt :: t_ajn
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajq :: [t_ajp]
                                ~ t_ajn [" a type equality [t_ajp]
                                                           ~
                                                           t_ajn " Database.hs:5:5-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajq :: [t_ajp]
                                 ~ t_ajn [" a type equality [t_ajp]
                                                            ~
                                                            t_ajn " Database.hs:5:5-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajq :: [t_ajp] ~ t_ajn [" a type equality [t_ajp]
                                                      ~
                                                      t_ajn " Database.hs:5:5-40] (CNonCanonical)
canEvNC:eq
  [t_ajp]
  t_ajn
can_eq_nc
  [W] cobox_ajq :: [t_ajp] ~ t_ajn
  [t_ajp]
  [t_ajp]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajp]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_alu :: [String] ~ [t_ajp]
setEvBind
  ev = cobox_ajq
  tm  = CO Sym cobox_alu
rewriteEqEvidence
  [W] cobox_ajq :: [t_ajp] ~ t_ajn
  [String]
  [t_ajp]
  Sym cobox_alu
canEqTyVar2
  t_ajn
  [t_ajp]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alu :: [String] ~ [t_ajp]
  [String]
  [String]
  [t_ajp]
  [t_ajp]
newWantedEvVar/cache miss [W] cobox_alv :: String ~ t_ajp
setEvBind
  ev = cobox_alu
  tm  = CO [cobox_alv]_N
canEvNC:eq
  String
  t_ajp
can_eq_nc
  [W] cobox_alv :: String ~ t_ajp
  String
  String
  t_ajp
  t_ajp
can_eq_nc
  [W] cobox_alv :: String ~ t_ajp
  [Char]
  String
  t_ajp
  t_ajp
canEqTyVar
  t_ajp
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alw :: t_ajp ~ String
setEvBind
  ev = cobox_alv
  tm  = CO Sym cobox_alw
rewriteEqEvidence
  [W] cobox_alv :: String ~ t_ajp
  t_ajp
  String
  Sym cobox_alw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alw :: t_ajp
                                 ~ String [" a type equality [t_ajp]
                                                             ~
                                                             t_ajn " Database.hs:5:5-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajp := String
  Coercion: t_ajp ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajp := String
setEvBind
  ev = cobox_alw
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajp
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
45[<C:0,F:0>] [W] cobox_alw :: t_ajp ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajr :: [Char]
                                ~ t_ajp [" a type equality [Char]
                                                           ~
                                                           t_ajp " Database.hs:5:6-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajr :: [Char]
                                 ~ t_ajp [" a type equality [Char]
                                                            ~
                                                            t_ajp " Database.hs:5:6-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                     ~
                                                     t_ajp " Database.hs:5:6-15] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajp
can_eq_nc
  [W] cobox_ajr :: [Char] ~ t_ajp
  [Char]
  [Char]
  t_ajp
  t_ajp
canEqTyVar
  t_ajp
  [Char]
  Is-swapped
Following bound tyvar t_ajp = String
newWantedEvVar/cache miss [W] cobox_alx :: String ~ [Char]
setEvBind
  ev = cobox_ajr
  tm  = CO Sym cobox_alx
rewriteEqEvidence
  [W] cobox_ajr :: [Char] ~ t_ajp
  String
  [Char]
  Sym cobox_alx
canEqTyVar2
  t_ajp
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alx :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alx :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aly :: Char ~ Char
setEvBind
  ev = cobox_alx
  tm  = CO [cobox_aly]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aly :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aly
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajs :: [Char]
                                ~ t_ajp [" a type equality [Char]
                                                           ~
                                                           t_ajp " Database.hs:5:18-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajs :: [Char]
                                 ~ t_ajp [" a type equality [Char]
                                                            ~
                                                            t_ajp " Database.hs:5:18-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                     ~
                                                     t_ajp " Database.hs:5:18-39] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajp
can_eq_nc
  [W] cobox_ajs :: [Char] ~ t_ajp
  [Char]
  [Char]
  t_ajp
  t_ajp
canEqTyVar
  t_ajp
  [Char]
  Is-swapped
Following bound tyvar t_ajp = String
newWantedEvVar/cache miss [W] cobox_alz :: String ~ [Char]
setEvBind
  ev = cobox_ajs
  tm  = CO Sym cobox_alz
rewriteEqEvidence
  [W] cobox_ajs :: [Char] ~ t_ajp
  String
  [Char]
  Sym cobox_alz
canEqTyVar2
  t_ajp
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alz :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alz :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alA :: Char ~ Char
setEvBind
  ev = cobox_alz
  tm  = CO [cobox_alA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aju :: [t_ajt]
                                ~ t_ajn [" a type equality [t_ajt]
                                                           ~
                                                           t_ajn " Database.hs:6:5-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aju :: [t_ajt]
                                 ~ t_ajn [" a type equality [t_ajt]
                                                            ~
                                                            t_ajn " Database.hs:6:5-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aju :: [t_ajt] ~ t_ajn [" a type equality [t_ajt]
                                                      ~
                                                      t_ajn " Database.hs:6:5-42] (CNonCanonical)
canEvNC:eq
  [t_ajt]
  t_ajn
can_eq_nc
  [W] cobox_aju :: [t_ajt] ~ t_ajn
  [t_ajt]
  [t_ajt]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajt]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_alB :: [String] ~ [t_ajt]
setEvBind
  ev = cobox_aju
  tm  = CO Sym cobox_alB
rewriteEqEvidence
  [W] cobox_aju :: [t_ajt] ~ t_ajn
  [String]
  [t_ajt]
  Sym cobox_alB
canEqTyVar2
  t_ajn
  [t_ajt]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alB :: [String] ~ [t_ajt]
  [String]
  [String]
  [t_ajt]
  [t_ajt]
newWantedEvVar/cache miss [W] cobox_alC :: String ~ t_ajt
setEvBind
  ev = cobox_alB
  tm  = CO [cobox_alC]_N
canEvNC:eq
  String
  t_ajt
can_eq_nc
  [W] cobox_alC :: String ~ t_ajt
  String
  String
  t_ajt
  t_ajt
can_eq_nc
  [W] cobox_alC :: String ~ t_ajt
  [Char]
  String
  t_ajt
  t_ajt
canEqTyVar
  t_ajt
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alD :: t_ajt ~ String
setEvBind
  ev = cobox_alC
  tm  = CO Sym cobox_alD
rewriteEqEvidence
  [W] cobox_alC :: String ~ t_ajt
  t_ajt
  String
  Sym cobox_alD
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alD :: t_ajt
                                 ~ String [" a type equality [t_ajt]
                                                             ~
                                                             t_ajn " Database.hs:6:5-42] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajt := String
  Coercion: t_ajt ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajt := String
setEvBind
  ev = cobox_alD
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajt
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
48[<C:0,F:0>] [W] cobox_alD :: t_ajt ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajv :: [Char]
                                ~ t_ajt [" a type equality [Char]
                                                           ~
                                                           t_ajt " Database.hs:6:6-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajv :: [Char]
                                 ~ t_ajt [" a type equality [Char]
                                                            ~
                                                            t_ajt " Database.hs:6:6-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajv :: [Char] ~ t_ajt [" a type equality [Char]
                                                     ~
                                                     t_ajt " Database.hs:6:6-13] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajt
can_eq_nc
  [W] cobox_ajv :: [Char] ~ t_ajt
  [Char]
  [Char]
  t_ajt
  t_ajt
canEqTyVar
  t_ajt
  [Char]
  Is-swapped
Following bound tyvar t_ajt = String
newWantedEvVar/cache miss [W] cobox_alE :: String ~ [Char]
setEvBind
  ev = cobox_ajv
  tm  = CO Sym cobox_alE
rewriteEqEvidence
  [W] cobox_ajv :: [Char] ~ t_ajt
  String
  [Char]
  Sym cobox_alE
canEqTyVar2
  t_ajt
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alE :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alE :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alF :: Char ~ Char
setEvBind
  ev = cobox_alE
  tm  = CO [cobox_alF]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alF :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alF
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajw :: [Char]
                                ~ t_ajt [" a type equality [Char]
                                                           ~
                                                           t_ajt " Database.hs:6:16-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajw :: [Char]
                                 ~ t_ajt [" a type equality [Char]
                                                            ~
                                                            t_ajt " Database.hs:6:16-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajw :: [Char] ~ t_ajt [" a type equality [Char]
                                                     ~
                                                     t_ajt " Database.hs:6:16-41] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajt
can_eq_nc
  [W] cobox_ajw :: [Char] ~ t_ajt
  [Char]
  [Char]
  t_ajt
  t_ajt
canEqTyVar
  t_ajt
  [Char]
  Is-swapped
Following bound tyvar t_ajt = String
newWantedEvVar/cache miss [W] cobox_alG :: String ~ [Char]
setEvBind
  ev = cobox_ajw
  tm  = CO Sym cobox_alG
rewriteEqEvidence
  [W] cobox_ajw :: [Char] ~ t_ajt
  String
  [Char]
  Sym cobox_alG
canEqTyVar2
  t_ajt
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alG :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alG :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alH :: Char ~ Char
setEvBind
  ev = cobox_alG
  tm  = CO [cobox_alH]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alH :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alH
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajy :: [t_ajx]
                                ~ t_ajn [" a type equality [t_ajx]
                                                           ~
                                                           t_ajn " Database.hs:7:5-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajy :: [t_ajx]
                                 ~ t_ajn [" a type equality [t_ajx]
                                                            ~
                                                            t_ajn " Database.hs:7:5-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajy :: [t_ajx] ~ t_ajn [" a type equality [t_ajx]
                                                      ~
                                                      t_ajn " Database.hs:7:5-33] (CNonCanonical)
canEvNC:eq
  [t_ajx]
  t_ajn
can_eq_nc
  [W] cobox_ajy :: [t_ajx] ~ t_ajn
  [t_ajx]
  [t_ajx]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajx]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_alI :: [String] ~ [t_ajx]
setEvBind
  ev = cobox_ajy
  tm  = CO Sym cobox_alI
rewriteEqEvidence
  [W] cobox_ajy :: [t_ajx] ~ t_ajn
  [String]
  [t_ajx]
  Sym cobox_alI
canEqTyVar2
  t_ajn
  [t_ajx]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alI :: [String] ~ [t_ajx]
  [String]
  [String]
  [t_ajx]
  [t_ajx]
newWantedEvVar/cache miss [W] cobox_alJ :: String ~ t_ajx
setEvBind
  ev = cobox_alI
  tm  = CO [cobox_alJ]_N
canEvNC:eq
  String
  t_ajx
can_eq_nc
  [W] cobox_alJ :: String ~ t_ajx
  String
  String
  t_ajx
  t_ajx
can_eq_nc
  [W] cobox_alJ :: String ~ t_ajx
  [Char]
  String
  t_ajx
  t_ajx
canEqTyVar
  t_ajx
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alK :: t_ajx ~ String
setEvBind
  ev = cobox_alJ
  tm  = CO Sym cobox_alK
rewriteEqEvidence
  [W] cobox_alJ :: String ~ t_ajx
  t_ajx
  String
  Sym cobox_alK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alK :: t_ajx
                                 ~ String [" a type equality [t_ajx]
                                                             ~
                                                             t_ajn " Database.hs:7:5-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajx := String
  Coercion: t_ajx ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajx := String
setEvBind
  ev = cobox_alK
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajx
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
51[<C:0,F:0>] [W] cobox_alK :: t_ajx ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajz :: [Char]
                                ~ t_ajx [" a type equality [Char]
                                                           ~
                                                           t_ajx " Database.hs:7:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajz :: [Char]
                                 ~ t_ajx [" a type equality [Char]
                                                            ~
                                                            t_ajx " Database.hs:7:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajz :: [Char] ~ t_ajx [" a type equality [Char]
                                                     ~
                                                     t_ajx " Database.hs:7:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajx
can_eq_nc
  [W] cobox_ajz :: [Char] ~ t_ajx
  [Char]
  [Char]
  t_ajx
  t_ajx
canEqTyVar
  t_ajx
  [Char]
  Is-swapped
Following bound tyvar t_ajx = String
newWantedEvVar/cache miss [W] cobox_alL :: String ~ [Char]
setEvBind
  ev = cobox_ajz
  tm  = CO Sym cobox_alL
rewriteEqEvidence
  [W] cobox_ajz :: [Char] ~ t_ajx
  String
  [Char]
  Sym cobox_alL
canEqTyVar2
  t_ajx
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alL :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alL :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alM :: Char ~ Char
setEvBind
  ev = cobox_alL
  tm  = CO [cobox_alM]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alM :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alM
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajA :: [Char]
                                ~ t_ajx [" a type equality [Char]
                                                           ~
                                                           t_ajx " Database.hs:7:13-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajA :: [Char]
                                 ~ t_ajx [" a type equality [Char]
                                                            ~
                                                            t_ajx " Database.hs:7:13-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajA :: [Char] ~ t_ajx [" a type equality [Char]
                                                     ~
                                                     t_ajx " Database.hs:7:13-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajx
can_eq_nc
  [W] cobox_ajA :: [Char] ~ t_ajx
  [Char]
  [Char]
  t_ajx
  t_ajx
canEqTyVar
  t_ajx
  [Char]
  Is-swapped
Following bound tyvar t_ajx = String
newWantedEvVar/cache miss [W] cobox_alN :: String ~ [Char]
setEvBind
  ev = cobox_ajA
  tm  = CO Sym cobox_alN
rewriteEqEvidence
  [W] cobox_ajA :: [Char] ~ t_ajx
  String
  [Char]
  Sym cobox_alN
canEqTyVar2
  t_ajx
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alN :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alN :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alO :: Char ~ Char
setEvBind
  ev = cobox_alN
  tm  = CO [cobox_alO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajC :: [t_ajB]
                                ~ t_ajn [" a type equality [t_ajB]
                                                           ~
                                                           t_ajn " Database.hs:8:5-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajC :: [t_ajB]
                                 ~ t_ajn [" a type equality [t_ajB]
                                                            ~
                                                            t_ajn " Database.hs:8:5-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajC :: [t_ajB] ~ t_ajn [" a type equality [t_ajB]
                                                      ~
                                                      t_ajn " Database.hs:8:5-33] (CNonCanonical)
canEvNC:eq
  [t_ajB]
  t_ajn
can_eq_nc
  [W] cobox_ajC :: [t_ajB] ~ t_ajn
  [t_ajB]
  [t_ajB]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajB]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_alP :: [String] ~ [t_ajB]
setEvBind
  ev = cobox_ajC
  tm  = CO Sym cobox_alP
rewriteEqEvidence
  [W] cobox_ajC :: [t_ajB] ~ t_ajn
  [String]
  [t_ajB]
  Sym cobox_alP
canEqTyVar2
  t_ajn
  [t_ajB]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alP :: [String] ~ [t_ajB]
  [String]
  [String]
  [t_ajB]
  [t_ajB]
newWantedEvVar/cache miss [W] cobox_alQ :: String ~ t_ajB
setEvBind
  ev = cobox_alP
  tm  = CO [cobox_alQ]_N
canEvNC:eq
  String
  t_ajB
can_eq_nc
  [W] cobox_alQ :: String ~ t_ajB
  String
  String
  t_ajB
  t_ajB
can_eq_nc
  [W] cobox_alQ :: String ~ t_ajB
  [Char]
  String
  t_ajB
  t_ajB
canEqTyVar
  t_ajB
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alR :: t_ajB ~ String
setEvBind
  ev = cobox_alQ
  tm  = CO Sym cobox_alR
rewriteEqEvidence
  [W] cobox_alQ :: String ~ t_ajB
  t_ajB
  String
  Sym cobox_alR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alR :: t_ajB
                                 ~ String [" a type equality [t_ajB]
                                                             ~
                                                             t_ajn " Database.hs:8:5-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajB := String
  Coercion: t_ajB ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajB := String
setEvBind
  ev = cobox_alR
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
54[<C:0,F:0>] [W] cobox_alR :: t_ajB ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajD :: [Char]
                                ~ t_ajB [" a type equality [Char]
                                                           ~
                                                           t_ajB " Database.hs:8:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajD :: [Char]
                                 ~ t_ajB [" a type equality [Char]
                                                            ~
                                                            t_ajB " Database.hs:8:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajD :: [Char] ~ t_ajB [" a type equality [Char]
                                                     ~
                                                     t_ajB " Database.hs:8:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajB
can_eq_nc
  [W] cobox_ajD :: [Char] ~ t_ajB
  [Char]
  [Char]
  t_ajB
  t_ajB
canEqTyVar
  t_ajB
  [Char]
  Is-swapped
Following bound tyvar t_ajB = String
newWantedEvVar/cache miss [W] cobox_alS :: String ~ [Char]
setEvBind
  ev = cobox_ajD
  tm  = CO Sym cobox_alS
rewriteEqEvidence
  [W] cobox_ajD :: [Char] ~ t_ajB
  String
  [Char]
  Sym cobox_alS
canEqTyVar2
  t_ajB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alS :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alS :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alT :: Char ~ Char
setEvBind
  ev = cobox_alS
  tm  = CO [cobox_alT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajE :: [Char]
                                ~ t_ajB [" a type equality [Char]
                                                           ~
                                                           t_ajB " Database.hs:8:13-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajE :: [Char]
                                 ~ t_ajB [" a type equality [Char]
                                                            ~
                                                            t_ajB " Database.hs:8:13-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajE :: [Char] ~ t_ajB [" a type equality [Char]
                                                     ~
                                                     t_ajB " Database.hs:8:13-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajB
can_eq_nc
  [W] cobox_ajE :: [Char] ~ t_ajB
  [Char]
  [Char]
  t_ajB
  t_ajB
canEqTyVar
  t_ajB
  [Char]
  Is-swapped
Following bound tyvar t_ajB = String
newWantedEvVar/cache miss [W] cobox_alU :: String ~ [Char]
setEvBind
  ev = cobox_ajE
  tm  = CO Sym cobox_alU
rewriteEqEvidence
  [W] cobox_ajE :: [Char] ~ t_ajB
  String
  [Char]
  Sym cobox_alU
canEqTyVar2
  t_ajB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alU :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alU :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alV :: Char ~ Char
setEvBind
  ev = cobox_alU
  tm  = CO [cobox_alV]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alV :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alV
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajG :: [t_ajF]
                                ~ t_ajn [" a type equality [t_ajF]
                                                           ~
                                                           t_ajn " Database.hs:9:5-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajG :: [t_ajF]
                                 ~ t_ajn [" a type equality [t_ajF]
                                                            ~
                                                            t_ajn " Database.hs:9:5-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajG :: [t_ajF] ~ t_ajn [" a type equality [t_ajF]
                                                      ~
                                                      t_ajn " Database.hs:9:5-34] (CNonCanonical)
canEvNC:eq
  [t_ajF]
  t_ajn
can_eq_nc
  [W] cobox_ajG :: [t_ajF] ~ t_ajn
  [t_ajF]
  [t_ajF]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajF]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_alW :: [String] ~ [t_ajF]
setEvBind
  ev = cobox_ajG
  tm  = CO Sym cobox_alW
rewriteEqEvidence
  [W] cobox_ajG :: [t_ajF] ~ t_ajn
  [String]
  [t_ajF]
  Sym cobox_alW
canEqTyVar2
  t_ajn
  [t_ajF]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alW :: [String] ~ [t_ajF]
  [String]
  [String]
  [t_ajF]
  [t_ajF]
newWantedEvVar/cache miss [W] cobox_alX :: String ~ t_ajF
setEvBind
  ev = cobox_alW
  tm  = CO [cobox_alX]_N
canEvNC:eq
  String
  t_ajF
can_eq_nc
  [W] cobox_alX :: String ~ t_ajF
  String
  String
  t_ajF
  t_ajF
can_eq_nc
  [W] cobox_alX :: String ~ t_ajF
  [Char]
  String
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alY :: t_ajF ~ String
setEvBind
  ev = cobox_alX
  tm  = CO Sym cobox_alY
rewriteEqEvidence
  [W] cobox_alX :: String ~ t_ajF
  t_ajF
  String
  Sym cobox_alY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alY :: t_ajF
                                 ~ String [" a type equality [t_ajF]
                                                             ~
                                                             t_ajn " Database.hs:9:5-34] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajF := String
  Coercion: t_ajF ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajF := String
setEvBind
  ev = cobox_alY
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
57[<C:0,F:0>] [W] cobox_alY :: t_ajF ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajH :: [Char]
                                ~ t_ajF [" a type equality [Char]
                                                           ~
                                                           t_ajF " Database.hs:9:6-11] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajH :: [Char]
                                 ~ t_ajF [" a type equality [Char]
                                                            ~
                                                            t_ajF " Database.hs:9:6-11] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajH :: [Char] ~ t_ajF [" a type equality [Char]
                                                     ~
                                                     t_ajF " Database.hs:9:6-11] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajF
can_eq_nc
  [W] cobox_ajH :: [Char] ~ t_ajF
  [Char]
  [Char]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [Char]
  Is-swapped
Following bound tyvar t_ajF = String
newWantedEvVar/cache miss [W] cobox_alZ :: String ~ [Char]
setEvBind
  ev = cobox_ajH
  tm  = CO Sym cobox_alZ
rewriteEqEvidence
  [W] cobox_ajH :: [Char] ~ t_ajF
  String
  [Char]
  Sym cobox_alZ
canEqTyVar2
  t_ajF
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alZ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alZ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_am0 :: Char ~ Char
setEvBind
  ev = cobox_alZ
  tm  = CO [cobox_am0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_am0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_am0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajI :: [Char]
                                ~ t_ajF [" a type equality [Char]
                                                           ~
                                                           t_ajF " Database.hs:9:14-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajI :: [Char]
                                 ~ t_ajF [" a type equality [Char]
                                                            ~
                                                            t_ajF " Database.hs:9:14-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajI :: [Char] ~ t_ajF [" a type equality [Char]
                                                     ~
                                                     t_ajF " Database.hs:9:14-33] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajF
can_eq_nc
  [W] cobox_ajI :: [Char] ~ t_ajF
  [Char]
  [Char]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [Char]
  Is-swapped
Following bound tyvar t_ajF = String
newWantedEvVar/cache miss [W] cobox_am1 :: String ~ [Char]
setEvBind
  ev = cobox_ajI
  tm  = CO Sym cobox_am1
rewriteEqEvidence
  [W] cobox_ajI :: [Char] ~ t_ajF
  String
  [Char]
  Sym cobox_am1
canEqTyVar2
  t_ajF
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_am1 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_am1 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_am2 :: Char ~ Char
setEvBind
  ev = cobox_am1
  tm  = CO [cobox_am2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_am2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_am2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajK :: [t_ajJ]
                                ~ t_ajn [" a type equality [t_ajJ]
                                                           ~
                                                           t_ajn " Database.hs:10:5-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajK :: [t_ajJ]
                                 ~ t_ajn [" a type equality [t_ajJ]
                                                            ~
                                                            t_ajn " Database.hs:10:5-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajK :: [t_ajJ] ~ t_ajn [" a type equality [t_ajJ]
                                                      ~
                                                      t_ajn " Database.hs:10:5-38] (CNonCanonical)
canEvNC:eq
  [t_ajJ]
  t_ajn
can_eq_nc
  [W] cobox_ajK :: [t_ajJ] ~ t_ajn
  [t_ajJ]
  [t_ajJ]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajJ]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_am3 :: [String] ~ [t_ajJ]
setEvBind
  ev = cobox_ajK
  tm  = CO Sym cobox_am3
rewriteEqEvidence
  [W] cobox_ajK :: [t_ajJ] ~ t_ajn
  [String]
  [t_ajJ]
  Sym cobox_am3
canEqTyVar2
  t_ajn
  [t_ajJ]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_am3 :: [String] ~ [t_ajJ]
  [String]
  [String]
  [t_ajJ]
  [t_ajJ]
newWantedEvVar/cache miss [W] cobox_am4 :: String ~ t_ajJ
setEvBind
  ev = cobox_am3
  tm  = CO [cobox_am4]_N
canEvNC:eq
  String
  t_ajJ
can_eq_nc
  [W] cobox_am4 :: String ~ t_ajJ
  String
  String
  t_ajJ
  t_ajJ
can_eq_nc
  [W] cobox_am4 :: String ~ t_ajJ
  [Char]
  String
  t_ajJ
  t_ajJ
canEqTyVar
  t_ajJ
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_am5 :: t_ajJ ~ String
setEvBind
  ev = cobox_am4
  tm  = CO Sym cobox_am5
rewriteEqEvidence
  [W] cobox_am4 :: String ~ t_ajJ
  t_ajJ
  String
  Sym cobox_am5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_am5 :: t_ajJ
                                 ~ String [" a type equality [t_ajJ]
                                                             ~
                                                             t_ajn " Database.hs:10:5-38] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajJ := String
  Coercion: t_ajJ ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajJ := String
setEvBind
  ev = cobox_am5
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
60[<C:0,F:0>] [W] cobox_am5 :: t_ajJ ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajL :: [Char]
                                ~ t_ajJ [" a type equality [Char]
                                                           ~
                                                           t_ajJ " Database.hs:10:6-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajL :: [Char]
                                 ~ t_ajJ [" a type equality [Char]
                                                            ~
                                                            t_ajJ " Database.hs:10:6-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajL :: [Char] ~ t_ajJ [" a type equality [Char]
                                                     ~
                                                     t_ajJ " Database.hs:10:6-15] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajJ
can_eq_nc
  [W] cobox_ajL :: [Char] ~ t_ajJ
  [Char]
  [Char]
  t_ajJ
  t_ajJ
canEqTyVar
  t_ajJ
  [Char]
  Is-swapped
Following bound tyvar t_ajJ = String
newWantedEvVar/cache miss [W] cobox_am6 :: String ~ [Char]
setEvBind
  ev = cobox_ajL
  tm  = CO Sym cobox_am6
rewriteEqEvidence
  [W] cobox_ajL :: [Char] ~ t_ajJ
  String
  [Char]
  Sym cobox_am6
canEqTyVar2
  t_ajJ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_am6 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_am6 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_am7 :: Char ~ Char
setEvBind
  ev = cobox_am6
  tm  = CO [cobox_am7]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_am7 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_am7
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajM :: [Char]
                                ~ t_ajJ [" a type equality [Char]
                                                           ~
                                                           t_ajJ " Database.hs:10:18-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajM :: [Char]
                                 ~ t_ajJ [" a type equality [Char]
                                                            ~
                                                            t_ajJ " Database.hs:10:18-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajM :: [Char] ~ t_ajJ [" a type equality [Char]
                                                     ~
                                                     t_ajJ " Database.hs:10:18-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajJ
can_eq_nc
  [W] cobox_ajM :: [Char] ~ t_ajJ
  [Char]
  [Char]
  t_ajJ
  t_ajJ
canEqTyVar
  t_ajJ
  [Char]
  Is-swapped
Following bound tyvar t_ajJ = String
newWantedEvVar/cache miss [W] cobox_am8 :: String ~ [Char]
setEvBind
  ev = cobox_ajM
  tm  = CO Sym cobox_am8
rewriteEqEvidence
  [W] cobox_ajM :: [Char] ~ t_ajJ
  String
  [Char]
  Sym cobox_am8
canEqTyVar2
  t_ajJ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_am8 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_am8 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_am9 :: Char ~ Char
setEvBind
  ev = cobox_am8
  tm  = CO [cobox_am9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_am9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_am9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajO :: [t_ajN]
                                ~ t_ajn [" a type equality [t_ajN]
                                                           ~
                                                           t_ajn " Database.hs:11:5-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajO :: [t_ajN]
                                 ~ t_ajn [" a type equality [t_ajN]
                                                            ~
                                                            t_ajn " Database.hs:11:5-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajO :: [t_ajN] ~ t_ajn [" a type equality [t_ajN]
                                                      ~
                                                      t_ajn " Database.hs:11:5-46] (CNonCanonical)
canEvNC:eq
  [t_ajN]
  t_ajn
can_eq_nc
  [W] cobox_ajO :: [t_ajN] ~ t_ajn
  [t_ajN]
  [t_ajN]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajN]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_ama :: [String] ~ [t_ajN]
setEvBind
  ev = cobox_ajO
  tm  = CO Sym cobox_ama
rewriteEqEvidence
  [W] cobox_ajO :: [t_ajN] ~ t_ajn
  [String]
  [t_ajN]
  Sym cobox_ama
canEqTyVar2
  t_ajn
  [t_ajN]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_ama :: [String] ~ [t_ajN]
  [String]
  [String]
  [t_ajN]
  [t_ajN]
newWantedEvVar/cache miss [W] cobox_amb :: String ~ t_ajN
setEvBind
  ev = cobox_ama
  tm  = CO [cobox_amb]_N
canEvNC:eq
  String
  t_ajN
can_eq_nc
  [W] cobox_amb :: String ~ t_ajN
  String
  String
  t_ajN
  t_ajN
can_eq_nc
  [W] cobox_amb :: String ~ t_ajN
  [Char]
  String
  t_ajN
  t_ajN
canEqTyVar
  t_ajN
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_amc :: t_ajN ~ String
setEvBind
  ev = cobox_amb
  tm  = CO Sym cobox_amc
rewriteEqEvidence
  [W] cobox_amb :: String ~ t_ajN
  t_ajN
  String
  Sym cobox_amc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_amc :: t_ajN
                                 ~ String [" a type equality [t_ajN]
                                                             ~
                                                             t_ajn " Database.hs:11:5-46] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajN := String
  Coercion: t_ajN ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajN := String
setEvBind
  ev = cobox_amc
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
63[<C:0,F:0>] [W] cobox_amc :: t_ajN ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajP :: [Char]
                                ~ t_ajN [" a type equality [Char]
                                                           ~
                                                           t_ajN " Database.hs:11:6-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajP :: [Char]
                                 ~ t_ajN [" a type equality [Char]
                                                            ~
                                                            t_ajN " Database.hs:11:6-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajP :: [Char] ~ t_ajN [" a type equality [Char]
                                                     ~
                                                     t_ajN " Database.hs:11:6-16] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajN
can_eq_nc
  [W] cobox_ajP :: [Char] ~ t_ajN
  [Char]
  [Char]
  t_ajN
  t_ajN
canEqTyVar
  t_ajN
  [Char]
  Is-swapped
Following bound tyvar t_ajN = String
newWantedEvVar/cache miss [W] cobox_amd :: String ~ [Char]
setEvBind
  ev = cobox_ajP
  tm  = CO Sym cobox_amd
rewriteEqEvidence
  [W] cobox_ajP :: [Char] ~ t_ajN
  String
  [Char]
  Sym cobox_amd
canEqTyVar2
  t_ajN
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amd :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amd :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_ame :: Char ~ Char
setEvBind
  ev = cobox_amd
  tm  = CO [cobox_ame]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_ame :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ame
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajQ :: [Char]
                                ~ t_ajN [" a type equality [Char]
                                                           ~
                                                           t_ajN " Database.hs:11:19-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajQ :: [Char]
                                 ~ t_ajN [" a type equality [Char]
                                                            ~
                                                            t_ajN " Database.hs:11:19-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajQ :: [Char] ~ t_ajN [" a type equality [Char]
                                                     ~
                                                     t_ajN " Database.hs:11:19-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajN
can_eq_nc
  [W] cobox_ajQ :: [Char] ~ t_ajN
  [Char]
  [Char]
  t_ajN
  t_ajN
canEqTyVar
  t_ajN
  [Char]
  Is-swapped
Following bound tyvar t_ajN = String
newWantedEvVar/cache miss [W] cobox_amf :: String ~ [Char]
setEvBind
  ev = cobox_ajQ
  tm  = CO Sym cobox_amf
rewriteEqEvidence
  [W] cobox_ajQ :: [Char] ~ t_ajN
  String
  [Char]
  Sym cobox_amf
canEqTyVar2
  t_ajN
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amf :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amf :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amg :: Char ~ Char
setEvBind
  ev = cobox_amf
  tm  = CO [cobox_amg]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amg :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amg
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajS :: [t_ajR]
                                ~ t_ajn [" a type equality [t_ajR]
                                                           ~
                                                           t_ajn " Database.hs:12:5-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajS :: [t_ajR]
                                 ~ t_ajn [" a type equality [t_ajR]
                                                            ~
                                                            t_ajn " Database.hs:12:5-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajS :: [t_ajR] ~ t_ajn [" a type equality [t_ajR]
                                                      ~
                                                      t_ajn " Database.hs:12:5-54] (CNonCanonical)
canEvNC:eq
  [t_ajR]
  t_ajn
can_eq_nc
  [W] cobox_ajS :: [t_ajR] ~ t_ajn
  [t_ajR]
  [t_ajR]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajR]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_amh :: [String] ~ [t_ajR]
setEvBind
  ev = cobox_ajS
  tm  = CO Sym cobox_amh
rewriteEqEvidence
  [W] cobox_ajS :: [t_ajR] ~ t_ajn
  [String]
  [t_ajR]
  Sym cobox_amh
canEqTyVar2
  t_ajn
  [t_ajR]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_amh :: [String] ~ [t_ajR]
  [String]
  [String]
  [t_ajR]
  [t_ajR]
newWantedEvVar/cache miss [W] cobox_ami :: String ~ t_ajR
setEvBind
  ev = cobox_amh
  tm  = CO [cobox_ami]_N
canEvNC:eq
  String
  t_ajR
can_eq_nc
  [W] cobox_ami :: String ~ t_ajR
  String
  String
  t_ajR
  t_ajR
can_eq_nc
  [W] cobox_ami :: String ~ t_ajR
  [Char]
  String
  t_ajR
  t_ajR
canEqTyVar
  t_ajR
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_amj :: t_ajR ~ String
setEvBind
  ev = cobox_ami
  tm  = CO Sym cobox_amj
rewriteEqEvidence
  [W] cobox_ami :: String ~ t_ajR
  t_ajR
  String
  Sym cobox_amj
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_amj :: t_ajR
                                 ~ String [" a type equality [t_ajR]
                                                             ~
                                                             t_ajn " Database.hs:12:5-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajR := String
  Coercion: t_ajR ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajR := String
setEvBind
  ev = cobox_amj
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
66[<C:0,F:0>] [W] cobox_amj :: t_ajR ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajT :: [Char]
                                ~ t_ajR [" a type equality [Char]
                                                           ~
                                                           t_ajR " Database.hs:12:6-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajT :: [Char]
                                 ~ t_ajR [" a type equality [Char]
                                                            ~
                                                            t_ajR " Database.hs:12:6-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajT :: [Char] ~ t_ajR [" a type equality [Char]
                                                     ~
                                                     t_ajR " Database.hs:12:6-16] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajR
can_eq_nc
  [W] cobox_ajT :: [Char] ~ t_ajR
  [Char]
  [Char]
  t_ajR
  t_ajR
canEqTyVar
  t_ajR
  [Char]
  Is-swapped
Following bound tyvar t_ajR = String
newWantedEvVar/cache miss [W] cobox_amk :: String ~ [Char]
setEvBind
  ev = cobox_ajT
  tm  = CO Sym cobox_amk
rewriteEqEvidence
  [W] cobox_ajT :: [Char] ~ t_ajR
  String
  [Char]
  Sym cobox_amk
canEqTyVar2
  t_ajR
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amk :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amk :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aml :: Char ~ Char
setEvBind
  ev = cobox_amk
  tm  = CO [cobox_aml]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aml :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aml
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajU :: [Char]
                                ~ t_ajR [" a type equality [Char]
                                                           ~
                                                           t_ajR " Database.hs:12:19-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajU :: [Char]
                                 ~ t_ajR [" a type equality [Char]
                                                            ~
                                                            t_ajR " Database.hs:12:19-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajU :: [Char] ~ t_ajR [" a type equality [Char]
                                                     ~
                                                     t_ajR " Database.hs:12:19-53] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajR
can_eq_nc
  [W] cobox_ajU :: [Char] ~ t_ajR
  [Char]
  [Char]
  t_ajR
  t_ajR
canEqTyVar
  t_ajR
  [Char]
  Is-swapped
Following bound tyvar t_ajR = String
newWantedEvVar/cache miss [W] cobox_amm :: String ~ [Char]
setEvBind
  ev = cobox_ajU
  tm  = CO Sym cobox_amm
rewriteEqEvidence
  [W] cobox_ajU :: [Char] ~ t_ajR
  String
  [Char]
  Sym cobox_amm
canEqTyVar2
  t_ajR
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amm :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amm :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amn :: Char ~ Char
setEvBind
  ev = cobox_amm
  tm  = CO [cobox_amn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajW :: [t_ajV]
                                ~ t_ajn [" a type equality [t_ajV]
                                                           ~
                                                           t_ajn " Database.hs:13:5-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajW :: [t_ajV]
                                 ~ t_ajn [" a type equality [t_ajV]
                                                            ~
                                                            t_ajn " Database.hs:13:5-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajW :: [t_ajV] ~ t_ajn [" a type equality [t_ajV]
                                                      ~
                                                      t_ajn " Database.hs:13:5-48] (CNonCanonical)
canEvNC:eq
  [t_ajV]
  t_ajn
can_eq_nc
  [W] cobox_ajW :: [t_ajV] ~ t_ajn
  [t_ajV]
  [t_ajV]
  t_ajn
  t_ajn
canEqTyVar
  t_ajn
  [t_ajV]
  Is-swapped
Following bound tyvar t_ajn = [String]
newWantedEvVar/cache miss [W] cobox_amo :: [String] ~ [t_ajV]
setEvBind
  ev = cobox_ajW
  tm  = CO Sym cobox_amo
rewriteEqEvidence
  [W] cobox_ajW :: [t_ajV] ~ t_ajn
  [String]
  [t_ajV]
  Sym cobox_amo
canEqTyVar2
  t_ajn
  [t_ajV]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_amo :: [String] ~ [t_ajV]
  [String]
  [String]
  [t_ajV]
  [t_ajV]
newWantedEvVar/cache miss [W] cobox_amp :: String ~ t_ajV
setEvBind
  ev = cobox_amo
  tm  = CO [cobox_amp]_N
canEvNC:eq
  String
  t_ajV
can_eq_nc
  [W] cobox_amp :: String ~ t_ajV
  String
  String
  t_ajV
  t_ajV
can_eq_nc
  [W] cobox_amp :: String ~ t_ajV
  [Char]
  String
  t_ajV
  t_ajV
canEqTyVar
  t_ajV
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_amq :: t_ajV ~ String
setEvBind
  ev = cobox_amp
  tm  = CO Sym cobox_amq
rewriteEqEvidence
  [W] cobox_amp :: String ~ t_ajV
  t_ajV
  String
  Sym cobox_amq
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_amq :: t_ajV
                                 ~ String [" a type equality [t_ajV]
                                                             ~
                                                             t_ajn " Database.hs:13:5-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajV := String
  Coercion: t_ajV ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajV := String
setEvBind
  ev = cobox_amq
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
69[<C:0,F:0>] [W] cobox_amq :: t_ajV ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajX :: [Char]
                                ~ t_ajV [" a type equality [Char]
                                                           ~
                                                           t_ajV " Database.hs:13:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajX :: [Char]
                                 ~ t_ajV [" a type equality [Char]
                                                            ~
                                                            t_ajV " Database.hs:13:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajX :: [Char] ~ t_ajV [" a type equality [Char]
                                                     ~
                                                     t_ajV " Database.hs:13:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajV
can_eq_nc
  [W] cobox_ajX :: [Char] ~ t_ajV
  [Char]
  [Char]
  t_ajV
  t_ajV
canEqTyVar
  t_ajV
  [Char]
  Is-swapped
Following bound tyvar t_ajV = String
newWantedEvVar/cache miss [W] cobox_amr :: String ~ [Char]
setEvBind
  ev = cobox_ajX
  tm  = CO Sym cobox_amr
rewriteEqEvidence
  [W] cobox_ajX :: [Char] ~ t_ajV
  String
  [Char]
  Sym cobox_amr
canEqTyVar2
  t_ajV
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amr :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amr :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_ams :: Char ~ Char
setEvBind
  ev = cobox_amr
  tm  = CO [cobox_ams]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_ams :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ams
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajY :: [Char]
                                ~ t_ajV [" a type equality [Char]
                                                           ~
                                                           t_ajV " Database.hs:13:13-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajY :: [Char]
                                 ~ t_ajV [" a type equality [Char]
                                                            ~
                                                            t_ajV " Database.hs:13:13-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajY :: [Char] ~ t_ajV [" a type equality [Char]
                                                     ~
                                                     t_ajV " Database.hs:13:13-47] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajV
can_eq_nc
  [W] cobox_ajY :: [Char] ~ t_ajV
  [Char]
  [Char]
  t_ajV
  t_ajV
canEqTyVar
  t_ajV
  [Char]
  Is-swapped
Following bound tyvar t_ajV = String
newWantedEvVar/cache miss [W] cobox_amt :: String ~ [Char]
setEvBind
  ev = cobox_ajY
  tm  = CO Sym cobox_amt
rewriteEqEvidence
  [W] cobox_ajY :: [Char] ~ t_ajV
  String
  [Char]
  Sym cobox_amt
canEqTyVar2
  t_ajV
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amt :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amt :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amu :: Char ~ Char
setEvBind
  ev = cobox_amt
  tm  = CO [cobox_amu]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amu :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amu
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiz :: [a_aiy]
                                ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                      ~
                                                                      a_aiu
                                                                      -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiz :: [a_aiy]
                                 ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                       ~
                                                                       a_aiu
                                                                       -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiz :: [a_aiy]
                   ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                         ~
                                                         a_aiu
                                                         -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
canEvNC:eq
  [a_aiy]
  a_aiu -> b_aiv
can_eq_nc
  [W] cobox_aiz :: [a_aiy] ~ (a_aiu -> b_aiv)
  [a_aiy]
  [a_aiy]
  a_aiu -> b_aiv
  a_aiu -> b_aiv
Following bound tyvar a_aiy = a_aiB
Following bound tyvar a_aiB = String
Emit insoluble
  [W] cobox_aiz :: [String]
                   ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                         ~
                                                         a_aiu
                                                         -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_ak6 :: [String]
                                              ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                        -> [b_aiv]
                                                                                        ~
                                                                                        t_aig " Database.hs:31:15-38] (CNonCanonical)
                             [W] cobox_aiz :: [String]
                                              ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                                    ~
                                                                                    a_aiu
                                                                                    -> b_aiv " Database.hs:31:20-37] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
solveFlats end } {}
simpl_loop, iteration 1
solveWanteds }
  unsolved_flats   = {}
  unsolved_implics = {}
  current evbinds  = {cobox_aih = CO Sym cobox_ak0,
                      cobox_aii = CO Sym cobox_ak1, cobox_ail = CO Sym cobox_ak2,
                      cobox_aim = CO Sym cobox_ak3, cobox_aio = CO Sym cobox_ak4,
                      cobox_aiq = CO Sym cobox_ak5, cobox_aiw = CO Sym cobox_ak6,
                      cobox_aiC = CO [cobox_ak7]_N, cobox_aiD = CO [cobox_ak8]_N,
                      cobox_aiE = CO Sym cobox_akb, cobox_aiH = CO Sym cobox_akd,
                      cobox_aiI = CO [cobox_akg]_N, cobox_aiJ = CO Sym cobox_akj,
                      cobox_aiM = CO Sym cobox_akn, cobox_aiO = CO Sym cobox_akq,
                      cobox_aiP = CO Sym cobox_akt, cobox_aiQ = CO Sym cobox_akv,
                      cobox_aiR = CO Sym cobox_akx, cobox_aiT = CO Sym cobox_akz,
                      cobox_aiU = CO Sym cobox_akC, cobox_aiV = CO Sym cobox_akE,
                      cobox_aiW = CO Sym cobox_akG, cobox_aiY = CO Sym cobox_akI,
                      cobox_aiZ = CO Sym cobox_akL, cobox_aj0 = CO Sym cobox_akN,
                      cobox_aj1 = CO Sym cobox_akP, cobox_aj3 = CO Sym cobox_akR,
                      cobox_aj4 = CO Sym cobox_akU, cobox_aj5 = CO Sym cobox_akW,
                      cobox_aj6 = CO Sym cobox_akY, cobox_aj8 = CO Sym cobox_al0,
                      cobox_aj9 = CO Sym cobox_al3, cobox_aja = CO Sym cobox_al5,
                      cobox_ajb = CO Sym cobox_al7, cobox_ajd = CO Sym cobox_al9,
                      cobox_aje = CO Sym cobox_alc, cobox_ajf = CO Sym cobox_ale,
                      cobox_ajg = CO Sym cobox_alg, cobox_aji = CO Sym cobox_ali,
                      cobox_ajj = CO Sym cobox_all, cobox_ajk = CO Sym cobox_aln,
                      cobox_ajl = CO Sym cobox_alp, cobox_ajo = CO Sym cobox_alr,
                      cobox_ajq = CO Sym cobox_alu, cobox_ajr = CO Sym cobox_alx,
                      cobox_ajs = CO Sym cobox_alz, cobox_aju = CO Sym cobox_alB,
                      cobox_ajv = CO Sym cobox_alE, cobox_ajw = CO Sym cobox_alG,
                      cobox_ajy = CO Sym cobox_alI, cobox_ajz = CO Sym cobox_alL,
                      cobox_ajA = CO Sym cobox_alN, cobox_ajC = CO Sym cobox_alP,
                      cobox_ajD = CO Sym cobox_alS, cobox_ajE = CO Sym cobox_alU,
                      cobox_ajG = CO Sym cobox_alW, cobox_ajH = CO Sym cobox_alZ,
                      cobox_ajI = CO Sym cobox_am1, cobox_ajK = CO Sym cobox_am3,
                      cobox_ajL = CO Sym cobox_am6, cobox_ajM = CO Sym cobox_am8,
                      cobox_ajO = CO Sym cobox_ama, cobox_ajP = CO Sym cobox_amd,
                      cobox_ajQ = CO Sym cobox_amf, cobox_ajS = CO Sym cobox_amh,
                      cobox_ajT = CO Sym cobox_amk, cobox_ajU = CO Sym cobox_amm,
                      cobox_ajW = CO Sym cobox_amo, cobox_ajX = CO Sym cobox_amr,
                      cobox_ajY = CO Sym cobox_amt, cobox_ak0 = CO <Table>_N,
                      cobox_ak1 = CO <[String]>_N, cobox_ak2 = CO <Table>_N,
                      cobox_ak3 = CO <String>_N, cobox_ak4 = CO <Table>_N,
                      cobox_ak5 = CO <Table>_N, cobox_ak7 = CO <a_aiB>_N,
                      cobox_ak8 = CO [cobox_ak9]_N, cobox_ak9 = CO Sym cobox_aka,
                      cobox_aka = CO <String>_N, cobox_akb = CO [cobox_akc]_N,
                      cobox_akc = CO <Char>_N, cobox_akd = CO [cobox_ake]_N,
                      cobox_ake = CO Sym cobox_akf, cobox_akf = CO <Char>_N,
                      cobox_akg = CO [cobox_akh]_N, cobox_akh = CO Sym cobox_aki,
                      cobox_aki = CO <Char>_N, cobox_akj = CO [cobox_akk]_N,
                      cobox_akk = CO [cobox_akl]_N, cobox_akl = CO [cobox_akm]_N,
                      cobox_akm = CO <Char>_N, cobox_akn = CO [cobox_ako]_N,
                      cobox_ako = CO Sym cobox_akp, cobox_akp = CO <[String]>_N,
                      cobox_akq = CO [cobox_akr]_N, cobox_akr = CO Sym cobox_aks,
                      cobox_aks = CO <String>_N, cobox_akt = CO [cobox_aku]_N,
                      cobox_aku = CO <Char>_N, cobox_akv = CO [cobox_akw]_N,
                      cobox_akw = CO <Char>_N, cobox_akx = CO [cobox_aky]_N,
                      cobox_aky = CO <Char>_N, cobox_akz = CO [cobox_akA]_N,
                      cobox_akA = CO Sym cobox_akB, cobox_akB = CO <String>_N,
                      cobox_akC = CO [cobox_akD]_N, cobox_akD = CO <Char>_N,
                      cobox_akE = CO [cobox_akF]_N, cobox_akF = CO <Char>_N,
                      cobox_akG = CO [cobox_akH]_N, cobox_akH = CO <Char>_N,
                      cobox_akI = CO [cobox_akJ]_N, cobox_akJ = CO Sym cobox_akK,
                      cobox_akK = CO <String>_N, cobox_akL = CO [cobox_akM]_N,
                      cobox_akM = CO <Char>_N, cobox_akN = CO [cobox_akO]_N,
                      cobox_akO = CO <Char>_N, cobox_akP = CO [cobox_akQ]_N,
                      cobox_akQ = CO <Char>_N, cobox_akR = CO [cobox_akS]_N,
                      cobox_akS = CO Sym cobox_akT, cobox_akT = CO <String>_N,
                      cobox_akU = CO [cobox_akV]_N, cobox_akV = CO <Char>_N,
                      cobox_akW = CO [cobox_akX]_N, cobox_akX = CO <Char>_N,
                      cobox_akY = CO [cobox_akZ]_N, cobox_akZ = CO <Char>_N,
                      cobox_al0 = CO [cobox_al1]_N, cobox_al1 = CO Sym cobox_al2,
                      cobox_al2 = CO <String>_N, cobox_al3 = CO [cobox_al4]_N,
                      cobox_al4 = CO <Char>_N, cobox_al5 = CO [cobox_al6]_N,
                      cobox_al6 = CO <Char>_N, cobox_al7 = CO [cobox_al8]_N,
                      cobox_al8 = CO <Char>_N, cobox_al9 = CO [cobox_ala]_N,
                      cobox_ala = CO Sym cobox_alb, cobox_alb = CO <String>_N,
                      cobox_alc = CO [cobox_ald]_N, cobox_ald = CO <Char>_N,
                      cobox_ale = CO [cobox_alf]_N, cobox_alf = CO <Char>_N,
                      cobox_alg = CO [cobox_alh]_N, cobox_alh = CO <Char>_N,
                      cobox_ali = CO [cobox_alj]_N, cobox_alj = CO Sym cobox_alk,
                      cobox_alk = CO <String>_N, cobox_all = CO [cobox_alm]_N,
                      cobox_alm = CO <Char>_N, cobox_aln = CO [cobox_alo]_N,
                      cobox_alo = CO <Char>_N, cobox_alp = CO [cobox_alq]_N,
                      cobox_alq = CO <Char>_N, cobox_alr = CO [cobox_als]_N,
                      cobox_als = CO Sym cobox_alt, cobox_alt = CO <[String]>_N,
                      cobox_alu = CO [cobox_alv]_N, cobox_alv = CO Sym cobox_alw,
                      cobox_alw = CO <String>_N, cobox_alx = CO [cobox_aly]_N,
                      cobox_aly = CO <Char>_N, cobox_alz = CO [cobox_alA]_N,
                      cobox_alA = CO <Char>_N, cobox_alB = CO [cobox_alC]_N,
                      cobox_alC = CO Sym cobox_alD, cobox_alD = CO <String>_N,
                      cobox_alE = CO [cobox_alF]_N, cobox_alF = CO <Char>_N,
                      cobox_alG = CO [cobox_alH]_N, cobox_alH = CO <Char>_N,
                      cobox_alI = CO [cobox_alJ]_N, cobox_alJ = CO Sym cobox_alK,
                      cobox_alK = CO <String>_N, cobox_alL = CO [cobox_alM]_N,
                      cobox_alM = CO <Char>_N, cobox_alN = CO [cobox_alO]_N,
                      cobox_alO = CO <Char>_N, cobox_alP = CO [cobox_alQ]_N,
                      cobox_alQ = CO Sym cobox_alR, cobox_alR = CO <String>_N,
                      cobox_alS = CO [cobox_alT]_N, cobox_alT = CO <Char>_N,
                      cobox_alU = CO [cobox_alV]_N, cobox_alV = CO <Char>_N,
                      cobox_alW = CO [cobox_alX]_N, cobox_alX = CO Sym cobox_alY,
                      cobox_alY = CO <String>_N, cobox_alZ = CO [cobox_am0]_N,
                      cobox_am0 = CO <Char>_N, cobox_am1 = CO [cobox_am2]_N,
                      cobox_am2 = CO <Char>_N, cobox_am3 = CO [cobox_am4]_N,
                      cobox_am4 = CO Sym cobox_am5, cobox_am5 = CO <String>_N,
                      cobox_am6 = CO [cobox_am7]_N, cobox_am7 = CO <Char>_N,
                      cobox_am8 = CO [cobox_am9]_N, cobox_am9 = CO <Char>_N,
                      cobox_ama = CO [cobox_amb]_N, cobox_amb = CO Sym cobox_amc,
                      cobox_amc = CO <String>_N, cobox_amd = CO [cobox_ame]_N,
                      cobox_ame = CO <Char>_N, cobox_amf = CO [cobox_amg]_N,
                      cobox_amg = CO <Char>_N, cobox_amh = CO [cobox_ami]_N,
                      cobox_ami = CO Sym cobox_amj, cobox_amj = CO <String>_N,
                      cobox_amk = CO [cobox_aml]_N, cobox_aml = CO <Char>_N,
                      cobox_amm = CO [cobox_amn]_N, cobox_amn = CO <Char>_N,
                      cobox_amo = CO [cobox_amp]_N, cobox_amp = CO Sym cobox_amq,
                      cobox_amq = CO <String>_N, cobox_amr = CO [cobox_ams]_N,
                      cobox_ams = CO <Char>_N, cobox_amt = CO [cobox_amu]_N,
                      cobox_amu = CO <Char>_N}
  current tybinds  = (t_aif, Table)
                     (t_aig, [String])
                     (t_aij, Table)
                     (t_aik, String)
                     (t_ain, Table)
                     (t_aip, Table)
                     (a_aiy, a_aiB)
                     (a_aiB, String)
                     (a_aiG, Char)
                     (t_aiL, [String])
                     (t_aiN, String)
                     (t_aiS, String)
                     (t_aiX, String)
                     (t_aj2, String)
                     (t_aj7, String)
                     (t_ajc, String)
                     (t_ajh, String)
                     (t_ajn, [String])
                     (t_ajp, String)
                     (t_ajt, String)
                     (t_ajx, String)
                     (t_ajB, String)
                     (t_ajF, String)
                     (t_ajJ, String)
                     (t_ajN, String)
                     (t_ajR, String)
                     (t_ajV, String)
  final wc = WC {wc_insol = [W] cobox_ak6 :: [String]
                                             ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu]
                                                                                       -> [b_aiv]
                                                                                       ~
                                                                                       t_aig " Database.hs:31:15-38] (CNonCanonical)
                            [W] cobox_aiz :: [String]
                                             ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                                   ~
                                                                                   a_aiu
                                                                                   -> b_aiv " Database.hs:31:20-37] (CNonCanonical)}
writeMetaTyVar t_aif := Table
writeMetaTyVar t_aig := [String]
writeMetaTyVar t_aij := Table
writeMetaTyVar t_aik := String
writeMetaTyVar t_ain := Table
writeMetaTyVar t_aip := Table
writeMetaTyVar a_aiy := a_aiB
writeMetaTyVar a_aiB := String
writeMetaTyVar a_aiG := Char
writeMetaTyVar t_aiL := [String]
writeMetaTyVar t_aiN := String
writeMetaTyVar t_aiS := String
writeMetaTyVar t_aiX := String
writeMetaTyVar t_aj2 := String
writeMetaTyVar t_aj7 := String
writeMetaTyVar t_ajc := String
writeMetaTyVar t_ajh := String
writeMetaTyVar t_ajn := [String]
writeMetaTyVar t_ajp := String
writeMetaTyVar t_ajt := String
writeMetaTyVar t_ajx := String
writeMetaTyVar t_ajB := String
writeMetaTyVar t_ajF := String
writeMetaTyVar t_ajJ := String
writeMetaTyVar t_ajN := String
writeMetaTyVar t_ajR := String
writeMetaTyVar t_ajV := String
Constraint solver steps = 72
End simplifyTop }
reportUnsolved {
reportUnsolved (before unflattening)
  WC {wc_insol = [W] cobox_ak6 :: [String]
                                  ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu] -> [b_aiv]
                                                                            ~
                                                                            t_aig " Database.hs:31:15-38] (CNonCanonical)
                 [W] cobox_aiz :: [String]
                                  ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                        ~
                                                                        a_aiu
                                                                        -> b_aiv " Database.hs:31:20-37] (CNonCanonical)}
reportUnsolved (after unflattening):
  a_aiu b_aiv
  WC {wc_insol = [W] cobox_ak6 :: [String]
                                  ~ ([a_aiu] -> [b_aiv]) [" a type equality [a_aiu] -> [b_aiv]
                                                                            ~
                                                                            t_aig " Database.hs:31:15-38] (CNonCanonical)
                 [W] cobox_aiz :: [String]
                                  ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                        ~
                                                                        a_aiu
                                                                        -> b_aiv " Database.hs:31:20-37] (CNonCanonical)}
reportFlats
  Flats = {}
  Suppress = False
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {[W] cobox_ak6 :: [String]
                            ~ ([a0] -> [b0]) [" a type equality [a_aiu] -> [b_aiv]
                                                                ~
                                                                t_aig " Database.hs:31:15-38] (CNonCanonical),
           [W] cobox_aiz :: [String] ~ (a0 -> b0) [" a type equality [a_aiy]
                                                                     ~
                                                                     a_aiu
                                                                     -> b_aiv " Database.hs:31:20-37] (CNonCanonical)}
  Suppress = False
tryReporters {
  [[W] cobox_ak6 :: [String]
                    ~ ([a0] -> [b0]) [" a type equality [a_aiu] -> [b_aiv]
                                                        ~
                                                        t_aig " Database.hs:31:15-38] (CNonCanonical),
   [W] cobox_aiz :: [String] ~ (a0 -> b0) [" a type equality [a_aiy]
                                                             ~
                                                             a_aiu
                                                             -> b_aiv " Database.hs:31:20-37] (CNonCanonical)]
tryReporters: yes
  Utterly wrong [[W] cobox_ak6 :: [String]
                                  ~ ([a0] -> [b0]) [" a type equality [a_aiu] -> [b_aiv]
                                                                      ~
                                                                      t_aig " Database.hs:31:15-38] (CNonCanonical),
                 [W] cobox_aiz :: [String] ~ (a0 -> b0) [" a type equality [a_aiy]
                                                                           ~
                                                                           a_aiu
                                                                           -> b_aiv " Database.hs:31:20-37] (CNonCanonical)]
relevantBindings [x, megablaat]
Adding error:
  Database.hs:31:15:
      Couldn't match expected type ‘[String]’
                  with actual type ‘[a0] -> [b0]’
      Probable cause: ‘map’ is applied to too few arguments
      In the expression: map (concat x ++ [""])
      In an equation for ‘megablaat’:
          megablaat x = map (concat x ++ [""])
relevantBindings [x, megablaat]
Adding error:
  Database.hs:31:20:
      Couldn't match expected type ‘a0 -> b0’ with actual type ‘[String]’
      In the first argument of ‘map’, namely ‘(concat x ++ [""])’
      In the expression: map (concat x ++ [""])
      In an equation for ‘megablaat’:
          megablaat x = map (concat x ++ [""])
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {}
  Suppress = True
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportUnsolved }
InstEnvs (External) {
  instance Control.Applicative.Alternative []
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus m =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance (Control.Arrow.ArrowZero a, Control.Arrow.ArrowPlus a) =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.ArrowPlus a =>
           Control.Applicative.Alternative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Enum GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Enum (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Enum Float -- Defined in ‘GHC.Float’
  instance Enum Double -- Defined in ‘GHC.Float’
  instance Eq a => Eq (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Eq a => Eq (GHC.Real.Ratio a) -- Defined in ‘GHC.Real’
  instance Floating Float -- Defined in ‘GHC.Float’
  instance Floating Double -- Defined in ‘GHC.Float’
  instance Integral a => Fractional (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Fractional Float -- Defined in ‘GHC.Float’
  instance Fractional Double -- Defined in ‘GHC.Float’
  instance Integral GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral Integer -- Defined in ‘GHC.Real’
  instance Integral Int -- Defined in ‘GHC.Real’
  instance Monad m => Monad (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Monad [] -- Defined in ‘GHC.Base’
  instance Monad IO -- Defined in ‘GHC.Base’
  instance Monad ((->) r) -- Defined in ‘GHC.Base’
  instance Functor Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m => Functor (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Functor (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Functor (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Functor [] -- Defined in ‘GHC.Base’
  instance Functor IO -- Defined in ‘GHC.Base’
  instance Functor ((->) r) -- Defined in ‘GHC.Base’
  instance Functor ((,) a) -- Defined in ‘GHC.Base’
  instance Integral a => Num (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Num Float -- Defined in ‘GHC.Float’
  instance Num Double -- Defined in ‘GHC.Float’
  instance Ord a => Ord (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Integral a => Ord (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Read a => Read (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Real GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Real (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Real Integer -- Defined in ‘GHC.Real’
  instance Real Int -- Defined in ‘GHC.Real’
  instance Real Float -- Defined in ‘GHC.Float’
  instance Real Double -- Defined in ‘GHC.Float’
  instance RealFloat Float -- Defined in ‘GHC.Float’
  instance RealFloat Double -- Defined in ‘GHC.Float’
  instance Integral a => RealFrac (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance RealFrac Float -- Defined in ‘GHC.Float’
  instance RealFrac Double -- Defined in ‘GHC.Float’
  instance Show a => Show (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance (Integral a, Show a) => Show (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Show Float -- Defined in ‘GHC.Float’
  instance Show Double -- Defined in ‘GHC.Float’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Applicative
    -- Defined in ‘Control.Applicative’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Alternative
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus [] -- Defined in ‘Control.Monad’
  instance Control.Monad.MonadPlus Maybe
    -- Defined in ‘Control.Monad’
  instance Control.Applicative.Applicative []
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (GHC.ST.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             (base:Control.Monad.ST.Lazy.Imp.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Data.Proxy.Proxy
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative IO
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (Either e)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid m =>
           Control.Applicative.Applicative (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative ((->) a)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Control.Applicative.Applicative ((,) a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedMonad m a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedArrow a b c)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.Const a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0Const
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Data.Monoid.Monoid (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
End InstEnvs }
InstEnvs (Internal) {
End InstEnvs }
famInstEnvs (External) {
  type GHC.Generics.Rep Char
    ~ GHC.Generics.D1
        GHC.Generics.D_Char
        (GHC.Generics.C1
           GHC.Generics.C_Char
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Char)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Double
    ~ GHC.Generics.D1
        GHC.Generics.D_Double
        (GHC.Generics.C1
           GHC.Generics.C_Double
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Double)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Float
    ~ GHC.Generics.D1
        GHC.Generics.D_Float
        (GHC.Generics.C1
           GHC.Generics.C_Float
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Float)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Int
    ~ GHC.Generics.D1
        GHC.Generics.D_Int
        (GHC.Generics.C1
           GHC.Generics.C_Int
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Proxy.Proxy t)
    ~ GHC.Generics.D1
        GHC.Generics.D1Proxy
        (GHC.Generics.C1 GHC.Generics.C1_0Proxy GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f, g)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 g)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 f)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 e)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ()
    ~ GHC.Generics.D1
        GHC.Generics.D1()
        (GHC.Generics.C1 GHC.Generics.C1_0() GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Ordering
    ~ GHC.Generics.D1
        GHC.Generics.D1Ordering
        (GHC.Generics.C1 GHC.Generics.C1_0Ordering GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Ordering GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Ordering GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Bool
    ~ GHC.Generics.D1
        GHC.Generics.D1Bool
        (GHC.Generics.C1 GHC.Generics.C1_0Bool GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Bool GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Either a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Maybe a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep [a]
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 [a])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.U1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1U1
        (GHC.Generics.C1 GHC.Generics.C1_0U1 GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Par1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Par1
        (GHC.Generics.C1
           GHC.Generics.C1_0Par1
           (GHC.Generics.S1 GHC.Generics.S1_0_0Par1 (GHC.Generics.Rec0 p)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Rec1 f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Rec1
        (GHC.Generics.C1
           GHC.Generics.C1_0Rec1
           (GHC.Generics.S1
              GHC.Generics.S1_0_0Rec1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.K1 i c p)
    ~ GHC.Generics.D1
        GHC.Generics.D1K1
        (GHC.Generics.C1
           GHC.Generics.C1_0K1
           (GHC.Generics.S1 GHC.Generics.S1_0_0K1 (GHC.Generics.Rec0 c)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.M1 i c f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1M1
        (GHC.Generics.C1
           GHC.Generics.C1_0M1
           (GHC.Generics.S1 GHC.Generics.S1_0_0M1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:+:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:+:
        (GHC.Generics.C1
           GHC.Generics.C1_0:+:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p)))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1:+:
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:*:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:*:
        (GHC.Generics.C1
           GHC.Generics.C1_0:*:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p))
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:.:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:.:
        (GHC.Generics.C1
           GHC.Generics.C1_0:.:
           (GHC.Generics.S1
              GHC.Generics.S1_0_0:.: (GHC.Generics.Rec0 (f (g p)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Associativity
    ~ GHC.Generics.D1
        GHC.Generics.D1Associativity
        (GHC.Generics.C1 GHC.Generics.C1_0Associativity GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Associativity GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Associativity GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Fixity
    ~ GHC.Generics.D1
        GHC.Generics.D1Fixity
        (GHC.Generics.C1 GHC.Generics.C1_0Fixity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Fixity
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector
                               (GHC.Generics.Rec0 GHC.Generics.Associativity)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Arity
    ~ GHC.Generics.D1
        GHC.Generics.D1Arity
        (GHC.Generics.C1 GHC.Generics.C1_0Arity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Arity
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Monoid.Dual a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Endo a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Endo
        (GHC.Generics.C1
           Data.Monoid.C1_0Endo
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Endo (GHC.Generics.Rec0 (a -> a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.All
    ~ GHC.Generics.D1
        Data.Monoid.D1All
        (GHC.Generics.C1
           Data.Monoid.C1_0All
           (GHC.Generics.S1 Data.Monoid.S1_0_0All (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.Any
    ~ GHC.Generics.D1
        Data.Monoid.D1Any
        (GHC.Generics.C1
           Data.Monoid.C1_0Any
           (GHC.Generics.S1 Data.Monoid.S1_0_0Any (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Sum a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Product a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.First a)
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Last a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Last (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Control.Applicative.Const a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedMonad m a)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec0 (m a))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedArrow a b c)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow
              (GHC.Generics.Rec0 (a b c))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.ZipList a)
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec0 [a])))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 ((,,,,,,) a b c d e f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,,) a b c d e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,) a b c d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,) a b c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,) a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,) a)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 (Either a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Maybe
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 []
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec1 [])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Data.Monoid.Dual
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Sum
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Product
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.First
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Last
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1 Data.Monoid.S1_0_0Last (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 (Control.Applicative.Const a)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedMonad m)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec1 m)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedArrow a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow (GHC.Generics.Rec1 (a b))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 Control.Applicative.ZipList
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec1 [])))
    -- Defined in ‘Control.Applicative’
  type instance a Data.Type.Equality.== b
    ~ Data.Either.EqEither a b
    -- Defined in ‘Data.Either’
End famInstEnvs }
famInstEnvs (Internal) {
End famInstEnvs }
originalCts (simplifyTop)
  fvars =  [(aif, t_aif), (aig, t_aig), (aij, t_aij), (aik, t_aik),
            (ain, t_ain), (aip, t_aip), (aiu, a_aiu), (aiv, b_aiv),
            (aiy, a_aiy), (aiB, a_aiB), (aiG, a_aiG), (aiL, t_aiL),
            (aiN, t_aiN), (aiS, t_aiS), (aiX, t_aiX), (aj2, t_aj2),
            (aj7, t_aj7), (ajc, t_ajc), (ajh, t_ajh), (ajn, t_ajn),
            (ajp, t_ajp), (ajt, t_ajt), (ajx, t_ajx), (ajB, t_ajB),
            (ajF, t_ajF), (ajJ, t_ajJ), (ajN, t_ajN), (ajR, t_ajR),
            (ajV, t_ajV)]
  wanted =  WC {wc_flat = [W] cobox_aih :: Table
                                           ~ t_aif [" a type equality Table
                                                                      ~
                                                                      t_aif " Database.hs:30:14-30] (CNonCanonical)
                          [W] cobox_aii :: [String] ~ t_aig [" a type equality [String]
                                                                               ~
                                                                               t_aig " Database.hs:30:14-30] (CNonCanonical)
                          [W] cobox_ail :: Table ~ t_aij [" a type equality Table
                                                                            ~
                                                                            t_aij " Database.hs:27:15-29] (CNonCanonical)
                          [W] cobox_aim :: String ~ t_aik [" a type equality String
                                                                             ~
                                                                             t_aik " Database.hs:27:15-29] (CNonCanonical)
                          [W] cobox_aio :: Table ~ t_ain [" a type equality Table
                                                                            ~
                                                                            t_ain " Database.hs:16:13-17] (CNonCanonical)
                          [W] cobox_aiq :: Table ~ t_aip [" a type equality Table
                                                                            ~
                                                                            t_aip " Database.hs:3:14-18] (CNonCanonical)
                          [W] cobox_aiw :: ([a_aiu] -> [b_aiv])
                                           ~ t_aig [" a type equality [a_aiu] -> [b_aiv]
                                                                      ~
                                                                      t_aig " Database.hs:31:15-38] (CNonCanonical)
                          [W] cobox_aiz :: [a_aiy]
                                           ~ (a_aiu -> b_aiv) [" a type equality [a_aiy]
                                                                                 ~
                                                                                 a_aiu
                                                                                 -> b_aiv " Database.hs:31:20-37] (CNonCanonical)
                          [W] cobox_aiC :: [a_aiB] ~ [a_aiy] [" a type equality [a_aiB]
                                                                                ~
                                                                                [a_aiy] " Database.hs:31:20-27] (CNonCanonical)
                          [W] cobox_aiD :: t_aif ~ [[a_aiB]] [" a type equality t_aif
                                                                                ~
                                                                                [[a_aiB]] " Database.hs:31:27] (CNonCanonical)
                          [W] cobox_aiE :: [Char] ~ a_aiy [" a type equality [Char]
                                                                             ~
                                                                             a_aiy " Database.hs:31:33-36] (CNonCanonical)
                          [W] cobox_aiH :: [a_aiG] ~ t_aik [" a type equality [a_aiG]
                                                                              ~
                                                                              t_aik " Database.hs:28:16-35] (CNonCanonical)
                          [W] cobox_aiI :: t_aig ~ [[a_aiG]] [" a type equality t_aig
                                                                                ~
                                                                                [[a_aiG]] " Database.hs:28:24-34] (CNonCanonical)
                          [W] cobox_aiJ :: t_aij ~ t_aif [" a type equality t_aij
                                                                            ~
                                                                            t_aif " Database.hs:28:34] (CNonCanonical)
                          [W] cobox_aiM :: [t_aiL] ~ t_ain [" a type equality [t_aiL]
                                                                              ~
                                                                              t_ain " Database.hs:(18,3)-(25,3)] (CNonCanonical)
                          [W] cobox_aiO :: [t_aiN] ~ t_aiL [" a type equality [t_aiN]
                                                                              ~
                                                                              t_aiL " Database.hs:18:5-44] (CNonCanonical)
                          [W] cobox_aiP :: [Char] ~ t_aiN [" a type equality [Char]
                                                                             ~
                                                                             t_aiN " Database.hs:18:6-27] (CNonCanonical)
                          [W] cobox_aiQ :: [Char] ~ t_aiN [" a type equality [Char]
                                                                             ~
                                                                             t_aiN " Database.hs:18:30-35] (CNonCanonical)
                          [W] cobox_aiR :: [Char] ~ t_aiN [" a type equality [Char]
                                                                             ~
                                                                             t_aiN " Database.hs:18:38-43] (CNonCanonical)
                          [W] cobox_aiT :: [t_aiS] ~ t_aiL [" a type equality [t_aiS]
                                                                              ~
                                                                              t_aiL " Database.hs:19:5-56] (CNonCanonical)
                          [W] cobox_aiU :: [Char] ~ t_aiS [" a type equality [Char]
                                                                             ~
                                                                             t_aiS " Database.hs:19:6-31] (CNonCanonical)
                          [W] cobox_aiV :: [Char] ~ t_aiS [" a type equality [Char]
                                                                             ~
                                                                             t_aiS " Database.hs:19:34-44] (CNonCanonical)
                          [W] cobox_aiW :: [Char] ~ t_aiS [" a type equality [Char]
                                                                             ~
                                                                             t_aiS " Database.hs:19:47-55] (CNonCanonical)
                          [W] cobox_aiY :: [t_aiX] ~ t_aiL [" a type equality [t_aiX]
                                                                              ~
                                                                              t_aiL " Database.hs:20:5-46] (CNonCanonical)
                          [W] cobox_aiZ :: [Char] ~ t_aiX [" a type equality [Char]
                                                                             ~
                                                                             t_aiX " Database.hs:20:6-25] (CNonCanonical)
                          [W] cobox_aj0 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                             ~
                                                                             t_aiX " Database.hs:20:28-37] (CNonCanonical)
                          [W] cobox_aj1 :: [Char] ~ t_aiX [" a type equality [Char]
                                                                             ~
                                                                             t_aiX " Database.hs:20:40-45] (CNonCanonical)
                          [W] cobox_aj3 :: [t_aj2] ~ t_aiL [" a type equality [t_aj2]
                                                                              ~
                                                                              t_aiL " Database.hs:21:5-51] (CNonCanonical)
                          [W] cobox_aj4 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                             ~
                                                                             t_aj2 " Database.hs:21:6-25] (CNonCanonical)
                          [W] cobox_aj5 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                             ~
                                                                             t_aj2 " Database.hs:21:28-37] (CNonCanonical)
                          [W] cobox_aj6 :: [Char] ~ t_aj2 [" a type equality [Char]
                                                                             ~
                                                                             t_aj2 " Database.hs:21:40-50] (CNonCanonical)
                          [W] cobox_aj8 :: [t_aj7] ~ t_aiL [" a type equality [t_aj7]
                                                                              ~
                                                                              t_aiL " Database.hs:22:5-59] (CNonCanonical)
                          [W] cobox_aj9 :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                             ~
                                                                             t_aj7 " Database.hs:22:6-25] (CNonCanonical)
                          [W] cobox_aja :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                             ~
                                                                             t_aj7 " Database.hs:22:28-45] (CNonCanonical)
                          [W] cobox_ajb :: [Char] ~ t_aj7 [" a type equality [Char]
                                                                             ~
                                                                             t_aj7 " Database.hs:22:48-58] (CNonCanonical)
                          [W] cobox_ajd :: [t_ajc] ~ t_aiL [" a type equality [t_ajc]
                                                                              ~
                                                                              t_aiL " Database.hs:23:5-66] (CNonCanonical)
                          [W] cobox_aje :: [Char] ~ t_ajc [" a type equality [Char]
                                                                             ~
                                                                             t_ajc " Database.hs:23:6-32] (CNonCanonical)
                          [W] cobox_ajf :: [Char] ~ t_ajc [" a type equality [Char]
                                                                             ~
                                                                             t_ajc " Database.hs:23:35-52] (CNonCanonical)
                          [W] cobox_ajg :: [Char] ~ t_ajc [" a type equality [Char]
                                                                             ~
                                                                             t_ajc " Database.hs:23:55-65] (CNonCanonical)
                          [W] cobox_aji :: [t_ajh] ~ t_aiL [" a type equality [t_ajh]
                                                                              ~
                                                                              t_aiL " Database.hs:24:5-63] (CNonCanonical)
                          [W] cobox_ajj :: [Char] ~ t_ajh [" a type equality [Char]
                                                                             ~
                                                                             t_ajh " Database.hs:24:6-40] (CNonCanonical)
                          [W] cobox_ajk :: [Char] ~ t_ajh [" a type equality [Char]
                                                                             ~
                                                                             t_ajh " Database.hs:24:43-50] (CNonCanonical)
                          [W] cobox_ajl :: [Char] ~ t_ajh [" a type equality [Char]
                                                                             ~
                                                                             t_ajh " Database.hs:24:53-62] (CNonCanonical)
                          [W] cobox_ajo :: [t_ajn] ~ t_aip [" a type equality [t_ajn]
                                                                              ~
                                                                              t_aip " Database.hs:(5,3)-(14,3)] (CNonCanonical)
                          [W] cobox_ajq :: [t_ajp] ~ t_ajn [" a type equality [t_ajp]
                                                                              ~
                                                                              t_ajn " Database.hs:5:5-40] (CNonCanonical)
                          [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Database.hs:5:6-15] (CNonCanonical)
                          [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Database.hs:5:18-39] (CNonCanonical)
                          [W] cobox_aju :: [t_ajt] ~ t_ajn [" a type equality [t_ajt]
                                                                              ~
                                                                              t_ajn " Database.hs:6:5-42] (CNonCanonical)
                          [W] cobox_ajv :: [Char] ~ t_ajt [" a type equality [Char]
                                                                             ~
                                                                             t_ajt " Database.hs:6:6-13] (CNonCanonical)
                          [W] cobox_ajw :: [Char] ~ t_ajt [" a type equality [Char]
                                                                             ~
                                                                             t_ajt " Database.hs:6:16-41] (CNonCanonical)
                          [W] cobox_ajy :: [t_ajx] ~ t_ajn [" a type equality [t_ajx]
                                                                              ~
                                                                              t_ajn " Database.hs:7:5-33] (CNonCanonical)
                          [W] cobox_ajz :: [Char] ~ t_ajx [" a type equality [Char]
                                                                             ~
                                                                             t_ajx " Database.hs:7:6-10] (CNonCanonical)
                          [W] cobox_ajA :: [Char] ~ t_ajx [" a type equality [Char]
                                                                             ~
                                                                             t_ajx " Database.hs:7:13-32] (CNonCanonical)
                          [W] cobox_ajC :: [t_ajB] ~ t_ajn [" a type equality [t_ajB]
                                                                              ~
                                                                              t_ajn " Database.hs:8:5-33] (CNonCanonical)
                          [W] cobox_ajD :: [Char] ~ t_ajB [" a type equality [Char]
                                                                             ~
                                                                             t_ajB " Database.hs:8:6-10] (CNonCanonical)
                          [W] cobox_ajE :: [Char] ~ t_ajB [" a type equality [Char]
                                                                             ~
                                                                             t_ajB " Database.hs:8:13-32] (CNonCanonical)
                          [W] cobox_ajG :: [t_ajF] ~ t_ajn [" a type equality [t_ajF]
                                                                              ~
                                                                              t_ajn " Database.hs:9:5-34] (CNonCanonical)
                          [W] cobox_ajH :: [Char] ~ t_ajF [" a type equality [Char]
                                                                             ~
                                                                             t_ajF " Database.hs:9:6-11] (CNonCanonical)
                          [W] cobox_ajI :: [Char] ~ t_ajF [" a type equality [Char]
                                                                             ~
                                                                             t_ajF " Database.hs:9:14-33] (CNonCanonical)
                          [W] cobox_ajK :: [t_ajJ] ~ t_ajn [" a type equality [t_ajJ]
                                                                              ~
                                                                              t_ajn " Database.hs:10:5-38] (CNonCanonical)
                          [W] cobox_ajL :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                             ~
                                                                             t_ajJ " Database.hs:10:6-15] (CNonCanonical)
                          [W] cobox_ajM :: [Char] ~ t_ajJ [" a type equality [Char]
                                                                             ~
                                                                             t_ajJ " Database.hs:10:18-37] (CNonCanonical)
                          [W] cobox_ajO :: [t_ajN] ~ t_ajn [" a type equality [t_ajN]
                                                                              ~
                                                                              t_ajn " Database.hs:11:5-46] (CNonCanonical)
                          [W] cobox_ajP :: [Char] ~ t_ajN [" a type equality [Char]
                                                                             ~
                                                                             t_ajN " Database.hs:11:6-16] (CNonCanonical)
                          [W] cobox_ajQ :: [Char] ~ t_ajN [" a type equality [Char]
                                                                             ~
                                                                             t_ajN " Database.hs:11:19-45] (CNonCanonical)
                          [W] cobox_ajS :: [t_ajR] ~ t_ajn [" a type equality [t_ajR]
                                                                              ~
                                                                              t_ajn " Database.hs:12:5-54] (CNonCanonical)
                          [W] cobox_ajT :: [Char] ~ t_ajR [" a type equality [Char]
                                                                             ~
                                                                             t_ajR " Database.hs:12:6-16] (CNonCanonical)
                          [W] cobox_ajU :: [Char] ~ t_ajR [" a type equality [Char]
                                                                             ~
                                                                             t_ajR " Database.hs:12:19-53] (CNonCanonical)
                          [W] cobox_ajW :: [t_ajV] ~ t_ajn [" a type equality [t_ajV]
                                                                              ~
                                                                              t_ajn " Database.hs:13:5-48] (CNonCanonical)
                          [W] cobox_ajX :: [Char] ~ t_ajV [" a type equality [Char]
                                                                             ~
                                                                             t_ajV " Database.hs:13:6-10] (CNonCanonical)
                          [W] cobox_ajY :: [Char] ~ t_ajV [" a type equality [Char]
                                                                             ~
                                                                             t_ajV " Database.hs:13:13-47] (CNonCanonical)}
Tc9

Database.hs:31:15:
    Couldn't match expected type ‘[String]’
                with actual type ‘[a0] -> [b0]’
    Probable cause: ‘map’ is applied to too few arguments
    In the expression: map (concat x ++ [""])
    In an equation for ‘megablaat’:
        megablaat x = map (concat x ++ [""])

Database.hs:31:20:
    Couldn't match expected type ‘a0 -> b0’ with actual type ‘[String]’
    In the first argument of ‘map’, namely ‘(concat x ++ [""])’
    In the expression: map (concat x ++ [""])
    In an equation for ‘megablaat’:
        megablaat x = map (concat x ++ [""])
