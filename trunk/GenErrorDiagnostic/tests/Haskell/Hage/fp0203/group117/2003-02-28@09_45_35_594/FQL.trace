rn12
rn13
Tc2 (src)
Tc3
kcTyClGroup
  module FQL
  type Table = [[String]]
kcTyClGroup: initial kinds []
env2 []
kcd1 Table []
tc_lhs_type:
  [[String]]
  Expected kind ‘k_afh’
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_afh := *
kcd2 Table
Generalise kind
  Table
  k_afh
  []
  *
kcTyClGroup result [(Table, *)]
tcTyAndCl generalized kinds [(Table, *)]
tcTyAndCl-x type Table = [[String]]
env2 []
env2 []
tc-syn
  Table
  [(rao, AThing *)]
tc_lhs_type:
  [[String]]
  Expected kind ‘*’
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Table’]
checkValidType [[String]] :: *
checkValidType done [[String]] :: *
env2 []
Adding instances:
addFamInsts
env2 []
tcDeriving
tcDeriving False
tcDeriving 1 []
Adding instances:
Tc3b
tcAmpMissingParentClassWarn/isInsts []
tcAmpMissingParentClassWarn/isInsts []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions
  Control.Monad.join [join defined at FQL.hs:97:1]
Adding warning:
  FQL.hs:97:1: Warning:
      Local definition of ‘join’ clashes with a future Prelude name - this will become an error in GHC 7.10, under the Applicative-Monad Proposal.
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.<*> []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.pure []
Tc4
Tc4a
env2 []
Tc5
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Table -> Table
  Expected a type
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table -> Table -> Table
Before unification
utype_defer
  cobox_alE
  Table
  t_alB
  a type equality Table ~ t_alB
  In the type signature for ‘crossProduct’:
    crossProduct :: Table -> Table -> Table
utype_defer
  cobox_alF
  Table
  t_alC
  a type equality Table ~ t_alC
  In the type signature for ‘crossProduct’:
    crossProduct :: Table -> Table -> Table
utype_defer
  cobox_alG
  Table
  t_alD
  a type equality Table ~ t_alD
  In the type signature for ‘crossProduct’:
    crossProduct :: Table -> Table -> Table
checkValidType t_alB -> t_alC -> t_alD :: *
checkValidType done t_alB -> t_alC -> t_alD :: *
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Table -> Int -> Int -> Table
  Expected a type
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Int -> Int -> Table
  Expected a type
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Int -> Table
  Expected a type
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table -> Table -> Int -> Int -> Table
Before unification
utype_defer
  cobox_alM
  Table
  t_alH
  a type equality Table ~ t_alH
  In the type signature for ‘selecteq’:
    selecteq :: Table -> Table -> Int -> Int -> Table
utype_defer
  cobox_alN
  Table
  t_alI
  a type equality Table ~ t_alI
  In the type signature for ‘selecteq’:
    selecteq :: Table -> Table -> Int -> Int -> Table
utype_defer
  cobox_alO
  Int
  t_alJ
  a type equality Int ~ t_alJ
  In the type signature for ‘selecteq’:
    selecteq :: Table -> Table -> Int -> Int -> Table
utype_defer
  cobox_alP
  Int
  t_alK
  a type equality Int ~ t_alK
  In the type signature for ‘selecteq’:
    selecteq :: Table -> Table -> Int -> Int -> Table
utype_defer
  cobox_alQ
  Table
  t_alL
  a type equality Table ~ t_alL
  In the type signature for ‘selecteq’:
    selecteq :: Table -> Table -> Int -> Int -> Table
checkValidType t_alH -> t_alI -> t_alJ -> t_alK -> t_alL :: *
checkValidType done t_alH -> t_alI -> t_alJ -> t_alK -> t_alL :: *
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Table -> Table
  Expected a type
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table -> Table -> Table
Before unification
utype_defer
  cobox_alU
  Table
  t_alR
  a type equality Table ~ t_alR
  In the type signature for ‘join’: join :: Table -> Table -> Table
utype_defer
  cobox_alV
  Table
  t_alS
  a type equality Table ~ t_alS
  In the type signature for ‘join’: join :: Table -> Table -> Table
utype_defer
  cobox_alW
  Table
  t_alT
  a type equality Table ~ t_alT
  In the type signature for ‘join’: join :: Table -> Table -> Table
checkValidType t_alR -> t_alS -> t_alT :: *
checkValidType done t_alR -> t_alS -> t_alT :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  (String -> Bool) -> [String] -> Bool
  Expected a type
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tc_lhs_type:
  [String] -> Bool
  Expected a type
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcCheckHsTypeAndGen Int -> (String -> Bool) -> [String] -> Bool
Before unification
utype_defer
  cobox_am1
  Int
  t_alX
  a type equality Int ~ t_alX
  In the type signature for ‘rowTest’:
    rowTest :: Int -> (String -> Bool) -> [String] -> Bool
utype_defer
  cobox_am2
  String -> Bool
  t_alY
  a type equality String -> Bool ~ t_alY
  In the type signature for ‘rowTest’:
    rowTest :: Int -> (String -> Bool) -> [String] -> Bool
utype_defer
  cobox_am3
  [String]
  t_alZ
  a type equality [String] ~ t_alZ
  In the type signature for ‘rowTest’:
    rowTest :: Int -> (String -> Bool) -> [String] -> Bool
utype_defer
  cobox_am4
  Bool
  t_am0
  a type equality Bool ~ t_am0
  In the type signature for ‘rowTest’:
    rowTest :: Int -> (String -> Bool) -> [String] -> Bool
checkValidType t_alX -> t_alY -> t_alZ -> t_am0 :: *
checkValidType done t_alX -> t_alY -> t_alZ -> t_am0 :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  (String -> Bool) -> Table -> Table
  Expected a type
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tc_lhs_type:
  Table -> Table
  Expected a type
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Int -> (String -> Bool) -> Table -> Table
Before unification
utype_defer
  cobox_am9
  Int
  t_am5
  a type equality Int ~ t_am5
  In the type signature for ‘selectRows’:
    selectRows :: Int -> (String -> Bool) -> Table -> Table
utype_defer
  cobox_ama
  String -> Bool
  t_am6
  a type equality String -> Bool ~ t_am6
  In the type signature for ‘selectRows’:
    selectRows :: Int -> (String -> Bool) -> Table -> Table
utype_defer
  cobox_amb
  Table
  t_am7
  a type equality Table ~ t_am7
  In the type signature for ‘selectRows’:
    selectRows :: Int -> (String -> Bool) -> Table -> Table
utype_defer
  cobox_amc
  Table
  t_am8
  a type equality Table ~ t_am8
  In the type signature for ‘selectRows’:
    selectRows :: Int -> (String -> Bool) -> Table -> Table
checkValidType t_am5 -> t_am6 -> t_am7 -> t_am8 :: *
checkValidType done t_am5 -> t_am6 -> t_am7 -> t_am8 :: *
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  (String -> Bool) -> Table -> Table
  Expected a type
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tc_lhs_type:
  Table -> Table
  Expected a type
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen String -> (String -> Bool) -> Table -> Table
Before unification
utype_defer
  cobox_amh
  String
  t_amd
  a type equality String ~ t_amd
  In the type signature for ‘select’:
    select :: String -> (String -> Bool) -> Table -> Table
utype_defer
  cobox_ami
  String -> Bool
  t_ame
  a type equality String -> Bool ~ t_ame
  In the type signature for ‘select’:
    select :: String -> (String -> Bool) -> Table -> Table
utype_defer
  cobox_amj
  Table
  t_amf
  a type equality Table ~ t_amf
  In the type signature for ‘select’:
    select :: String -> (String -> Bool) -> Table -> Table
utype_defer
  cobox_amk
  Table
  t_amg
  a type equality Table ~ t_amg
  In the type signature for ‘select’:
    select :: String -> (String -> Bool) -> Table -> Table
checkValidType t_amd -> t_ame -> t_amf -> t_amg :: *
checkValidType done t_amd -> t_ame -> t_amf -> t_amg :: *
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [String] -> Int
  Expected a type
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tcCheckHsTypeAndGen [String] -> [String] -> Int
Before unification
utype_defer
  cobox_amo
  [String]
  t_aml
  a type equality [String] ~ t_aml
  In the type signature for ‘colno’:
    colno :: [String] -> [String] -> Int
utype_defer
  cobox_amp
  [String]
  t_amm
  a type equality [String] ~ t_amm
  In the type signature for ‘colno’:
    colno :: [String] -> [String] -> Int
utype_defer
  cobox_amq
  Int
  t_amn
  a type equality Int ~ t_amn
  In the type signature for ‘colno’:
    colno :: [String] -> [String] -> Int
checkValidType t_aml -> t_amm -> t_amn :: *
checkValidType done t_aml -> t_amm -> t_amn :: *
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [String] -> [Int]
  Expected a type
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [Int]
  Expected a type
tc_lhs_type:
  Int
  Expected kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tcCheckHsTypeAndGen [String] -> [String] -> [Int]
Before unification
utype_defer
  cobox_amu
  [String]
  t_amr
  a type equality [String] ~ t_amr
  In the type signature for ‘selectColumnNrs’:
    selectColumnNrs :: [String] -> [String] -> [Int]
utype_defer
  cobox_amv
  [String]
  t_ams
  a type equality [String] ~ t_ams
  In the type signature for ‘selectColumnNrs’:
    selectColumnNrs :: [String] -> [String] -> [Int]
utype_defer
  cobox_amw
  [Int]
  t_amt
  a type equality [Int] ~ t_amt
  In the type signature for ‘selectColumnNrs’:
    selectColumnNrs :: [String] -> [String] -> [Int]
checkValidType t_amr -> t_ams -> t_amt :: *
checkValidType done t_amr -> t_ams -> t_amt :: *
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Table -> Table
  Expected a type
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen [String] -> Table -> Table
Before unification
utype_defer
  cobox_amA
  [String]
  t_amx
  a type equality [String] ~ t_amx
  In the type signature for ‘project’:
    project :: [String] -> Table -> Table
utype_defer
  cobox_amB
  Table
  t_amy
  a type equality Table ~ t_amy
  In the type signature for ‘project’:
    project :: [String] -> Table -> Table
utype_defer
  cobox_amC
  Table
  t_amz
  a type equality Table ~ t_amz
  In the type signature for ‘project’:
    project :: [String] -> Table -> Table
checkValidType t_amx -> t_amy -> t_amz :: *
checkValidType done t_amx -> t_amy -> t_amz :: *
tc_lhs_type:
  [Int]
  Expected a type
tc_lhs_type:
  Int
  Expected kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  [String] -> String
  Expected a type
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen [Int] -> [String] -> String
Before unification
utype_defer
  cobox_amG
  [Int]
  t_amD
  a type equality [Int] ~ t_amD
  In the type signature for ‘lineOutRow’:
    lineOutRow :: [Int] -> [String] -> String
utype_defer
  cobox_amH
  [String]
  t_amE
  a type equality [String] ~ t_amE
  In the type signature for ‘lineOutRow’:
    lineOutRow :: [Int] -> [String] -> String
utype_defer
  cobox_amI
  String
  t_amF
  a type equality String ~ t_amF
  In the type signature for ‘lineOutRow’:
    lineOutRow :: [Int] -> [String] -> String
checkValidType t_amD -> t_amE -> t_amF :: *
checkValidType done t_amD -> t_amE -> t_amF :: *
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Table -> [String]
Before unification
utype_defer
  cobox_amL
  Table
  t_amJ
  a type equality Table ~ t_amJ
  In the type signature for ‘lineOutTable’:
    lineOutTable :: Table -> [String]
utype_defer
  cobox_amM
  [String]
  t_amK
  a type equality [String] ~ t_amK
  In the type signature for ‘lineOutTable’:
    lineOutTable :: Table -> [String]
checkValidType t_amJ -> t_amK :: *
checkValidType done t_amJ -> t_amK :: *
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  [Int]
  Expected a type
tc_lhs_type:
  Int
  Expected kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tcCheckHsTypeAndGen Table -> [Int]
Before unification
utype_defer
  cobox_amP
  Table
  t_amN
  a type equality Table ~ t_amN
  In the type signature for ‘columnLength’:
    columnLength :: Table -> [Int]
utype_defer
  cobox_amQ
  [Int]
  t_amO
  a type equality [Int] ~ t_amO
  In the type signature for ‘columnLength’:
    columnLength :: Table -> [Int]
checkValidType t_amN -> t_amO :: *
checkValidType done t_amN -> t_amO :: *
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Table -> [String]
Before unification
utype_defer
  cobox_amT
  Table
  t_amR
  a type equality Table ~ t_amR
  In the type signature for ‘insertEmptyLines’:
    insertEmptyLines :: Table -> [String]
utype_defer
  cobox_amU
  [String]
  t_amS
  a type equality [String] ~ t_amS
  In the type signature for ‘insertEmptyLines’:
    insertEmptyLines :: Table -> [String]
checkValidType t_amR -> t_amS :: *
checkValidType done t_amR -> t_amS :: *
tc_lhs_type:
  Table
  Expected a type
lk1 Table
lk2 Table Type constructor ‘Table’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Table -> String
Before unification
utype_defer
  cobox_amX
  Table
  t_amV
  a type equality Table ~ t_amV
  In the type signature for ‘writeTable’:
    writeTable :: Table -> String
utype_defer
  cobox_amY
  String
  t_amW
  a type equality String ~ t_amW
  In the type signature for ‘writeTable’:
    writeTable :: Table -> String
checkValidType t_amV -> t_amW :: *
checkValidType done t_amV -> t_amW :: *
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table
Before unification
utype_defer
  cobox_an0
  Table
  t_amZ
  a type equality Table ~ t_amZ
  In the type signature for ‘locaties’: locaties :: Table
checkValidType t_amZ :: OpenKind
checkValidType done t_amZ :: OpenKind
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table
Before unification
utype_defer
  cobox_an2
  Table
  t_an1
  a type equality Table ~ t_an1
  In the type signature for ‘compilers’: compilers :: Table
checkValidType t_an1 :: OpenKind
checkValidType done t_an1 :: OpenKind
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcCheckHsTypeAndGen String -> String -> Bool
Before unification
utype_defer
  cobox_an6
  String
  t_an3
  a type equality String ~ t_an3
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
utype_defer
  cobox_an7
  String
  t_an4
  a type equality String ~ t_an4
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
utype_defer
  cobox_an8
  Bool
  t_an5
  a type equality Bool ~ t_an5
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
checkValidType t_an3 -> t_an4 -> t_an5 :: *
checkValidType done t_an3 -> t_an4 -> t_an5 :: *
env2
  [(crossProduct,
    Identifier[crossProduct::t_alB -> t_alC -> t_alD, <NotTopLevel>]),
   (selecteq,
    Identifier[selecteq::t_alH
                         -> t_alI -> t_alJ -> t_alK -> t_alL, <NotTopLevel>]),
   (join, Identifier[join::t_alR -> t_alS -> t_alT, <NotTopLevel>]),
   (rowTest,
    Identifier[rowTest::t_alX
                        -> t_alY -> t_alZ -> t_am0, <NotTopLevel>]),
   (selectRows,
    Identifier[selectRows::t_am5
                           -> t_am6 -> t_am7 -> t_am8, <NotTopLevel>]),
   (select,
    Identifier[select::t_amd
                       -> t_ame -> t_amf -> t_amg, <NotTopLevel>]),
   (colno, Identifier[colno::t_aml -> t_amm -> t_amn, <NotTopLevel>]),
   (selectColumnNrs,
    Identifier[selectColumnNrs::t_amr
                                -> t_ams -> t_amt, <NotTopLevel>]),
   (project,
    Identifier[project::t_amx -> t_amy -> t_amz, <NotTopLevel>]),
   (lineOutRow,
    Identifier[lineOutRow::t_amD -> t_amE -> t_amF, <NotTopLevel>]),
   (lineOutTable,
    Identifier[lineOutTable::t_amJ -> t_amK, <NotTopLevel>]),
   (columnLength,
    Identifier[columnLength::t_amN -> t_amO, <NotTopLevel>]),
   (insertEmptyLines,
    Identifier[insertEmptyLines::t_amR -> t_amS, <NotTopLevel>]),
   (writeTable,
    Identifier[writeTable::t_amV -> t_amW, <NotTopLevel>]),
   (locaties, Identifier[locaties::t_amZ, <NotTopLevel>]),
   (compilers, Identifier[compilers::t_an1, <NotTopLevel>]),
   (eqString,
    Identifier[eqString::t_an3 -> t_an4 -> t_an5, <NotTopLevel>])]
------------------------------------------------
Bindings for { [crossProduct]
Generalisation plan
  CheckGen crossProduct :: t_alB -> t_alC -> t_alD
                           []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  crossProduct
  t_alB -> t_alC -> t_alD
tcMatchesFun
  crossProduct
  t_alB -> t_alC -> t_alD
tcGen
utype_defer
  cobox_anb
  [t_ana]
  t_alB
  a type equality [t_ana] ~ t_alB
  In the pattern: l : ls
  In an equation for ‘crossProduct’:
      crossProduct (l : ls) (r : rs)
        = zipWith
            (++)
            (l : (concat (map (replicate y) ls)))
            (r : (concat (replicate x rs)))
        where
            x = length ls
            y = length rs
tcConPat
  :
  []
  [t_ana]
  [t_ana, [t_ana]]
env2 [(l, Identifier[l::t_ana, <NotTopLevel>])]
env2 [(ls, Identifier[ls::[t_ana], <NotTopLevel>])]
utype_defer
  cobox_and
  [t_anc]
  t_alC
  a type equality [t_anc] ~ t_alC
  In the pattern: r : rs
  In an equation for ‘crossProduct’:
      crossProduct (l : ls) (r : rs)
        = zipWith
            (++)
            (l : (concat (map (replicate y) ls)))
            (r : (concat (replicate x rs)))
        where
            x = length ls
            y = length rs
tcConPat
  :
  []
  [t_anc]
  [t_anc, [t_anc]]
env2 [(r, Identifier[r::t_anc, <NotTopLevel>])]
env2 [(rs, Identifier[rs::[t_anc], <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [y]
Generalisation plan NoGen
addInlinePrags
  y
  []
tcMatchesFun
  y
  t_ane
tcGen
tcBody t_ane
Instantiating
  length with [a_ang]
              []
utype_defer
  cobox_anh
  Int
  t_ane
  a type equality Int ~ t_ane
  In the expression: length rs
  In an equation for ‘y’: y = length rs
tcPolyExprNC [a_ang]
tcGen
utype_defer
  cobox_ani
  [t_anc]
  [a_ang]
  a type equality [t_anc] ~ [a_ang]
  In the first argument of ‘length’, namely ‘rs’
  In the expression: length rs
csb2 [y]
} End of bindings for
  [y]
  NonRecursive
  y t_ane
env2 [(y, Identifier[y::t_ane, <NotTopLevel>])]
------------------------------------------------
Bindings for { [x]
Generalisation plan NoGen
addInlinePrags
  x
  []
tcMatchesFun
  x
  t_anj
tcGen
tcBody t_anj
Instantiating
  length with [a_ank]
              []
utype_defer
  cobox_anl
  Int
  t_anj
  a type equality Int ~ t_anj
  In the expression: length ls
  In an equation for ‘x’: x = length ls
tcPolyExprNC [a_ank]
tcGen
utype_defer
  cobox_anm
  [t_ana]
  [a_ank]
  a type equality [t_ana] ~ [a_ank]
  In the first argument of ‘length’, namely ‘ls’
  In the expression: length ls
csb2 [x]
} End of bindings for
  [x]
  NonRecursive
  x t_anj
env2 [(x, Identifier[x::t_anj, <NotTopLevel>])]
tcBody t_alD
Instantiating
  zipWith with [a_anq, b_anr, c_ans]
               []
utype_defer
  cobox_ant
  [c_ans]
  t_alD
  a type equality [c_ans] ~ t_alD
  In the expression:
    zipWith
      (++)
      (l : (concat (map (replicate y) ls)))
      (r : (concat (replicate x rs)))
  In an equation for ‘crossProduct’:
      crossProduct (l : ls) (r : rs)
        = zipWith
            (++)
            (l : (concat (map (replicate y) ls)))
            (r : (concat (replicate x rs)))
        where
            x = length ls
            y = length rs
tcPolyExprNC a_anq -> b_anr -> c_ans
tcGen
Instantiating
  ++ with [a_anv]
          []
utype_defer
  cobox_anw
  [a_anv] -> [a_anv] -> [a_anv]
  a_anq -> b_anr -> c_ans
  a type equality [a_anv] -> [a_anv] -> [a_anv]
                  ~
                  a_anq -> b_anr -> c_ans
  In the first argument of ‘zipWith’, namely ‘(++)’
  In the expression:
    zipWith
      (++)
      (l : (concat (map (replicate y) ls)))
      (r : (concat (replicate x rs)))
tcPolyExprNC [a_anq]
tcGen
Non Application rule (:)
Instantiating
  GHC.Types.: with [a_anx]
                   []
utype_defer
  cobox_any
  [a_anx]
  [a_anq]
  a type equality [a_anx] ~ [a_anq]
  In the second argument of ‘zipWith’, namely
    ‘(l : (concat (map (replicate y) ls)))’
  In the expression:
    zipWith
      (++)
      (l : (concat (map (replicate y) ls)))
      (r : (concat (replicate x rs)))
  In an equation for ‘crossProduct’:
      crossProduct (l : ls) (r : rs)
        = zipWith
            (++)
            (l : (concat (map (replicate y) ls)))
            (r : (concat (replicate x rs)))
        where
            x = length ls
            y = length rs
tcPolyExprNC a_anx
tcGen
utype_defer
  cobox_anz
  t_ana
  a_anx
  a type equality t_ana ~ a_anx
  In the first argument of ‘(:)’, namely ‘l’
  In the second argument of ‘zipWith’, namely
    ‘(l : (concat (map (replicate y) ls)))’
tcPolyExprNC [a_anx]
tcGen
Instantiating
  concat with [a_anB]
              []
utype_defer
  cobox_anC
  [a_anB]
  [a_anx]
  a type equality [a_anB] ~ [a_anx]
  In the second argument of ‘(:)’, namely
    ‘(concat (map (replicate y) ls))’
  In the second argument of ‘zipWith’, namely
    ‘(l : (concat (map (replicate y) ls)))’
tcPolyExprNC [[a_anB]]
tcGen
Instantiating
  map with [a_anF, b_anG]
           []
utype_defer
  cobox_anH
  [b_anG]
  [[a_anB]]
  a type equality [b_anG] ~ [[a_anB]]
  In the first argument of ‘concat’, namely ‘(map (replicate y) ls)’
  In the second argument of ‘(:)’, namely
    ‘(concat (map (replicate y) ls))’
tcPolyExprNC a_anF -> b_anG
tcGen
Instantiating
  replicate with [a_anJ]
                 []
utype_defer
  cobox_anK
  a_anJ -> [a_anJ]
  a_anF -> b_anG
  a type equality a_anJ -> [a_anJ] ~ a_anF -> b_anG
  In the first argument of ‘map’, namely ‘(replicate y)’
  In the first argument of ‘concat’, namely ‘(map (replicate y) ls)’
tcPolyExprNC Int
tcGen
utype_defer
  cobox_anL
  t_ane
  Int
  a type equality t_ane ~ Int
  In the first argument of ‘replicate’, namely ‘y’
  In the first argument of ‘map’, namely ‘(replicate y)’
tcPolyExprNC [a_anF]
tcGen
utype_defer
  cobox_anM
  [t_ana]
  [a_anF]
  a type equality [t_ana] ~ [a_anF]
  In the second argument of ‘map’, namely ‘ls’
  In the first argument of ‘concat’, namely ‘(map (replicate y) ls)’
tcPolyExprNC [b_anr]
tcGen
Non Application rule (:)
Instantiating
  GHC.Types.: with [a_anN]
                   []
utype_defer
  cobox_anO
  [a_anN]
  [b_anr]
  a type equality [a_anN] ~ [b_anr]
  In the third argument of ‘zipWith’, namely
    ‘(r : (concat (replicate x rs)))’
  In the expression:
    zipWith
      (++)
      (l : (concat (map (replicate y) ls)))
      (r : (concat (replicate x rs)))
  In an equation for ‘crossProduct’:
      crossProduct (l : ls) (r : rs)
        = zipWith
            (++)
            (l : (concat (map (replicate y) ls)))
            (r : (concat (replicate x rs)))
        where
            x = length ls
            y = length rs
tcPolyExprNC a_anN
tcGen
utype_defer
  cobox_anP
  t_anc
  a_anN
  a type equality t_anc ~ a_anN
  In the first argument of ‘(:)’, namely ‘r’
  In the third argument of ‘zipWith’, namely
    ‘(r : (concat (replicate x rs)))’
tcPolyExprNC [a_anN]
tcGen
Instantiating
  concat with [a_anQ]
              []
utype_defer
  cobox_anR
  [a_anQ]
  [a_anN]
  a type equality [a_anQ] ~ [a_anN]
  In the second argument of ‘(:)’, namely ‘(concat (replicate x rs))’
  In the third argument of ‘zipWith’, namely
    ‘(r : (concat (replicate x rs)))’
tcPolyExprNC [[a_anQ]]
tcGen
Instantiating
  replicate with [a_anS]
                 []
utype_defer
  cobox_anT
  [a_anS]
  [[a_anQ]]
  a type equality [a_anS] ~ [[a_anQ]]
  In the first argument of ‘concat’, namely ‘(replicate x rs)’
  In the second argument of ‘(:)’, namely ‘(concat (replicate x rs))’
tcPolyExprNC Int
tcGen
utype_defer
  cobox_anU
  t_anj
  Int
  a type equality t_anj ~ Int
  In the first argument of ‘replicate’, namely ‘x’
  In the first argument of ‘concat’, namely ‘(replicate x rs)’
tcPolyExprNC a_anS
tcGen
utype_defer
  cobox_anV
  [t_anc]
  a_anS
  a type equality [t_anc] ~ a_anS
  In the second argument of ‘replicate’, namely ‘rs’
  In the first argument of ‘concat’, namely ‘(replicate x rs)’
addInlinePrags
  crossProduct
  []
csb2 [crossProduct]
} End of bindings for
  [crossProduct]
  NonRecursive
  crossProduct t_alB -> t_alC -> t_alD
env2
  [(crossProduct,
    Identifier[crossProduct::t_alB -> t_alC -> t_alD, <NotTopLevel>])]
------------------------------------------------
Bindings for { [rowTest]
Generalisation plan
  CheckGen rowTest :: t_alX -> t_alY -> t_alZ -> t_am0
                      []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  rowTest
  t_alX -> t_alY -> t_alZ -> t_am0
tcMatchesFun
  rowTest
  t_alX -> t_alY -> t_alZ -> t_am0
tcGen
env2 [(number, Identifier[number::t_alX, <NotTopLevel>])]
env2 [(test, Identifier[test::t_alY, <NotTopLevel>])]
env2 [(list, Identifier[list::t_alZ, <NotTopLevel>])]
tcBody t_am0
utype_defer
  cobox_anZ
  t_alY
  t_anX -> t_anY
  a type equality t_alY ~ t_anX -> t_anY
  In the expression: test (list !! number)
  In an equation for ‘rowTest’:
      rowTest number test list = test (list !! number)
utype_defer
  cobox_ao0
  t_anY
  t_am0
  a type equality t_anY ~ t_am0
  In the expression: test (list !! number)
  In an equation for ‘rowTest’:
      rowTest number test list = test (list !! number)
tcPolyExprNC t_anX
tcGen
Non Application rule (!!)
Instantiating
  !! with [a_ao2]
          []
utype_defer
  cobox_ao3
  a_ao2
  t_anX
  a type equality a_ao2 ~ t_anX
  In the first argument of ‘test’, namely ‘(list !! number)’
  In the expression: test (list !! number)
  In an equation for ‘rowTest’:
      rowTest number test list = test (list !! number)
tcPolyExprNC [a_ao2]
tcGen
utype_defer
  cobox_ao4
  t_alZ
  [a_ao2]
  a type equality t_alZ ~ [a_ao2]
  In the first argument of ‘(!!)’, namely ‘list’
  In the first argument of ‘test’, namely ‘(list !! number)’
tcPolyExprNC Int
tcGen
utype_defer
  cobox_ao5
  t_alX
  Int
  a type equality t_alX ~ Int
  In the second argument of ‘(!!)’, namely ‘number’
  In the first argument of ‘test’, namely ‘(list !! number)’
addInlinePrags
  rowTest
  []
csb2 [rowTest]
} End of bindings for
  [rowTest]
  NonRecursive
  rowTest t_alX -> t_alY -> t_alZ -> t_am0
env2
  [(rowTest,
    Identifier[rowTest::t_alX
                        -> t_alY -> t_alZ -> t_am0, <NotTopLevel>])]
------------------------------------------------
Bindings for { [selectRows]
Generalisation plan
  CheckGen selectRows :: t_am5 -> t_am6 -> t_am7 -> t_am8
                         []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  selectRows
  t_am5 -> t_am6 -> t_am7 -> t_am8
tcMatchesFun
  selectRows
  t_am5 -> t_am6 -> t_am7 -> t_am8
tcGen
env2 [(number, Identifier[number::t_am5, <NotTopLevel>])]
env2 [(test, Identifier[test::t_am6, <NotTopLevel>])]
env2 [(table, Identifier[table::t_am7, <NotTopLevel>])]
tcBody t_am8
Instantiating
  filter with [a_ao8]
              []
utype_defer
  cobox_ao9
  [a_ao8]
  t_am8
  a type equality [a_ao8] ~ t_am8
  In the expression: filter (rowTest number test) table
  In an equation for ‘selectRows’:
      selectRows number test table = filter (rowTest number test) table
tcPolyExprNC a_ao8 -> Bool
tcGen
utype_defer
  cobox_aoa
  t_alZ -> t_am0
  a_ao8 -> Bool
  a type equality t_alZ -> t_am0 ~ a_ao8 -> Bool
  In the first argument of ‘filter’, namely ‘(rowTest number test)’
  In the expression: filter (rowTest number test) table
tcPolyExprNC t_alX
tcGen
utype_defer
  cobox_aob
  t_am5
  t_alX
  a type equality t_am5 ~ t_alX
  In the first argument of ‘rowTest’, namely ‘number’
  In the first argument of ‘filter’, namely ‘(rowTest number test)’
tcPolyExprNC t_alY
tcGen
utype_defer
  cobox_aoc
  t_am6
  t_alY
  a type equality t_am6 ~ t_alY
  In the second argument of ‘rowTest’, namely ‘test’
  In the first argument of ‘filter’, namely ‘(rowTest number test)’
tcPolyExprNC [a_ao8]
tcGen
utype_defer
  cobox_aod
  t_am7
  [a_ao8]
  a type equality t_am7 ~ [a_ao8]
  In the second argument of ‘filter’, namely ‘table’
  In the expression: filter (rowTest number test) table
addInlinePrags
  selectRows
  []
csb2 [selectRows]
} End of bindings for
  [selectRows]
  NonRecursive
  selectRows t_am5 -> t_am6 -> t_am7 -> t_am8
env2
  [(selectRows,
    Identifier[selectRows::t_am5
                           -> t_am6 -> t_am7 -> t_am8, <NotTopLevel>])]
------------------------------------------------
Bindings for { [lineOutRow]
Generalisation plan
  CheckGen lineOutRow :: t_amD -> t_amE -> t_amF
                         []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  lineOutRow
  t_amD -> t_amE -> t_amF
tcMatchesFun
  lineOutRow
  t_amD -> t_amE -> t_amF
tcGen
env2 [(ls, Identifier[ls::t_amD, <NotTopLevel>])]
env2 [(row, Identifier[row::t_amE, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [func]
Generalisation plan NoGen
addInlinePrags
  func
  []
tcMatchesFun
  func
  t_aof
tcGen
utype_defer
  cobox_aoj
  t_aof
  t_aog -> t_aoh -> t_aoi
  a type equality t_aof ~ t_aog -> t_aoh -> t_aoi
  In an equation for ‘lineOutRow’:
      lineOutRow ls row
        = concat (zipWith func ls row) ++ "|"
        where
            func dig str = "|" ++ take dig (str ++ repeat ' ')
env2 [(dig, Identifier[dig::t_aog, <NotTopLevel>])]
env2 [(str, Identifier[str::t_aoh, <NotTopLevel>])]
tcBody t_aoi
Non Application rule (++)
Instantiating
  ++ with [a_aok]
          []
utype_defer
  cobox_aol
  [a_aok]
  t_aoi
  a type equality [a_aok] ~ t_aoi
  In the expression: "|" ++ take dig (str ++ repeat ' ')
  In an equation for ‘func’:
      func dig str = "|" ++ take dig (str ++ repeat ' ')
  In an equation for ‘lineOutRow’:
      lineOutRow ls row
        = concat (zipWith func ls row) ++ "|"
        where
            func dig str = "|" ++ take dig (str ++ repeat ' ')
tcPolyExprNC [a_aok]
tcGen
utype_defer
  cobox_aom
  [Char]
  [a_aok]
  a type equality [Char] ~ [a_aok]
  In the first argument of ‘(++)’, namely ‘"|"’
  In the expression: "|" ++ take dig (str ++ repeat ' ')
  In an equation for ‘func’:
      func dig str = "|" ++ take dig (str ++ repeat ' ')
tcPolyExprNC [a_aok]
tcGen
Instantiating
  take with [a_aoo]
            []
utype_defer
  cobox_aop
  [a_aoo]
  [a_aok]
  a type equality [a_aoo] ~ [a_aok]
  In the second argument of ‘(++)’, namely
    ‘take dig (str ++ repeat ' ')’
  In the expression: "|" ++ take dig (str ++ repeat ' ')
tcPolyExprNC Int
tcGen
utype_defer
  cobox_aoq
  t_aog
  Int
  a type equality t_aog ~ Int
  In the first argument of ‘take’, namely ‘dig’
  In the second argument of ‘(++)’, namely
    ‘take dig (str ++ repeat ' ')’
tcPolyExprNC [a_aoo]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aor]
          []
utype_defer
  cobox_aos
  [a_aor]
  [a_aoo]
  a type equality [a_aor] ~ [a_aoo]
  In the second argument of ‘take’, namely ‘(str ++ repeat ' ')’
  In the second argument of ‘(++)’, namely
    ‘take dig (str ++ repeat ' ')’
  In the expression: "|" ++ take dig (str ++ repeat ' ')
tcPolyExprNC [a_aor]
tcGen
utype_defer
  cobox_aot
  t_aoh
  [a_aor]
  a type equality t_aoh ~ [a_aor]
  In the first argument of ‘(++)’, namely ‘str’
  In the second argument of ‘take’, namely ‘(str ++ repeat ' ')’
tcPolyExprNC [a_aor]
tcGen
Instantiating
  repeat with [a_aov]
              []
utype_defer
  cobox_aow
  [a_aov]
  [a_aor]
  a type equality [a_aov] ~ [a_aor]
  In the second argument of ‘(++)’, namely ‘repeat ' '’
  In the second argument of ‘take’, namely ‘(str ++ repeat ' ')’
tcPolyExprNC a_aov
tcGen
utype_defer
  cobox_aox
  Char
  a_aov
  a type equality Char ~ a_aov
  In the first argument of ‘repeat’, namely ‘' '’
  In the second argument of ‘(++)’, namely ‘repeat ' '’
  In the second argument of ‘take’, namely ‘(str ++ repeat ' ')’
csb2 [func]
} End of bindings for
  [func]
  NonRecursive
  func t_aof
env2 [(func, Identifier[func::t_aof, <NotTopLevel>])]
tcBody t_amF
Non Application rule (++)
Instantiating
  ++ with [a_aoy]
          []
utype_defer
  cobox_aoz
  [a_aoy]
  t_amF
  a type equality [a_aoy] ~ t_amF
  In the expression: concat (zipWith func ls row) ++ "|"
  In an equation for ‘lineOutRow’:
      lineOutRow ls row
        = concat (zipWith func ls row) ++ "|"
        where
            func dig str = "|" ++ take dig (str ++ repeat ' ')
tcPolyExprNC [a_aoy]
tcGen
Instantiating
  concat with [a_aoA]
              []
utype_defer
  cobox_aoB
  [a_aoA]
  [a_aoy]
  a type equality [a_aoA] ~ [a_aoy]
  In the first argument of ‘(++)’, namely
    ‘concat (zipWith func ls row)’
  In the expression: concat (zipWith func ls row) ++ "|"
tcPolyExprNC [[a_aoA]]
tcGen
Instantiating
  zipWith with [a_aoC, b_aoD, c_aoE]
               []
utype_defer
  cobox_aoF
  [c_aoE]
  [[a_aoA]]
  a type equality [c_aoE] ~ [[a_aoA]]
  In the first argument of ‘concat’, namely ‘(zipWith func ls row)’
  In the first argument of ‘(++)’, namely
    ‘concat (zipWith func ls row)’
tcPolyExprNC a_aoC -> b_aoD -> c_aoE
tcGen
utype_defer
  cobox_aoG
  t_aof
  a_aoC -> b_aoD -> c_aoE
  a type equality t_aof ~ a_aoC -> b_aoD -> c_aoE
  In the first argument of ‘zipWith’, namely ‘func’
  In the first argument of ‘concat’, namely ‘(zipWith func ls row)’
tcPolyExprNC [a_aoC]
tcGen
utype_defer
  cobox_aoH
  t_amD
  [a_aoC]
  a type equality t_amD ~ [a_aoC]
  In the second argument of ‘zipWith’, namely ‘ls’
  In the first argument of ‘concat’, namely ‘(zipWith func ls row)’
tcPolyExprNC [b_aoD]
tcGen
utype_defer
  cobox_aoI
  t_amE
  [b_aoD]
  a type equality t_amE ~ [b_aoD]
  In the third argument of ‘zipWith’, namely ‘row’
  In the first argument of ‘concat’, namely ‘(zipWith func ls row)’
tcPolyExprNC [a_aoy]
tcGen
utype_defer
  cobox_aoJ
  [Char]
  [a_aoy]
  a type equality [Char] ~ [a_aoy]
  In the second argument of ‘(++)’, namely ‘"|"’
  In the expression: concat (zipWith func ls row) ++ "|"
  In an equation for ‘lineOutRow’:
      lineOutRow ls row
        = concat (zipWith func ls row) ++ "|"
        where
            func dig str = "|" ++ take dig (str ++ repeat ' ')
addInlinePrags
  lineOutRow
  []
csb2 [lineOutRow]
} End of bindings for
  [lineOutRow]
  NonRecursive
  lineOutRow t_amD -> t_amE -> t_amF
env2
  [(lineOutRow,
    Identifier[lineOutRow::t_amD -> t_amE -> t_amF, <NotTopLevel>])]
------------------------------------------------
Bindings for { [columnLength]
Generalisation plan
  CheckGen columnLength :: t_amN -> t_amO
                           []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  columnLength
  t_amN -> t_amO
tcMatchesFun
  columnLength
  t_amN -> t_amO
tcGen
env2 [(table, Identifier[table::t_amN, <NotTopLevel>])]
tcBody t_amO
Instantiating
  map with [a_aoL, b_aoM]
           []
utype_defer
  cobox_aoN
  [b_aoM]
  t_amO
  a type equality [b_aoM] ~ t_amO
  In the expression: map (maximum . map length) (transpose table)
  In an equation for ‘columnLength’:
      columnLength table = map (maximum . map length) (transpose table)
tcPolyExprNC a_aoL -> b_aoM
tcGen
Non Application rule (.)
Instantiating
  . with [b_aoR, c_aoS, a_aoT]
         []
utype_defer
  cobox_aoU
  a_aoT -> c_aoS
  a_aoL -> b_aoM
  a type equality a_aoT -> c_aoS ~ a_aoL -> b_aoM
  In the first argument of ‘map’, namely ‘(maximum . map length)’
  In the expression: map (maximum . map length) (transpose table)
  In an equation for ‘columnLength’:
      columnLength table = map (maximum . map length) (transpose table)
tcPolyExprNC b_aoR -> c_aoS
tcGen
Instantiating
  maximum with [a_arY]
               [Ord a_arY]
instCallConstraints [$dOrd_arZ]
utype_defer
  cobox_as0
  [a_arY] -> a_arY
  b_aoR -> c_aoS
  a type equality [a_arY] -> a_arY ~ b_aoR -> c_aoS
  In the first argument of ‘(.)’, namely ‘maximum’
  In the first argument of ‘map’, namely ‘(maximum . map length)’
tcPolyExprNC a_aoT -> b_aoR
tcGen
Instantiating
  map with [a_as1, b_as2]
           []
utype_defer
  cobox_as3
  [a_as1] -> [b_as2]
  a_aoT -> b_aoR
  a type equality [a_as1] -> [b_as2] ~ a_aoT -> b_aoR
  In the second argument of ‘(.)’, namely ‘map length’
  In the first argument of ‘map’, namely ‘(maximum . map length)’
tcPolyExprNC a_as1 -> b_as2
tcGen
Instantiating
  length with [a_as4]
              []
utype_defer
  cobox_as5
  [a_as4] -> Int
  a_as1 -> b_as2
  a type equality [a_as4] -> Int ~ a_as1 -> b_as2
  In the first argument of ‘map’, namely ‘length’
  In the second argument of ‘(.)’, namely ‘map length’
tcPolyExprNC [a_aoL]
tcGen
Instantiating
  transpose with [a_as7]
                 []
utype_defer
  cobox_as8
  [[a_as7]]
  [a_aoL]
  a type equality [[a_as7]] ~ [a_aoL]
  In the second argument of ‘map’, namely ‘(transpose table)’
  In the expression: map (maximum . map length) (transpose table)
tcPolyExprNC [[a_as7]]
tcGen
utype_defer
  cobox_as9
  t_amN
  [[a_as7]]
  a type equality t_amN ~ [[a_as7]]
  In the first argument of ‘transpose’, namely ‘table’
  In the second argument of ‘map’, namely ‘(transpose table)’
addInlinePrags
  columnLength
  []
csb2 [columnLength]
} End of bindings for
  [columnLength]
  NonRecursive
  columnLength t_amN -> t_amO
env2
  [(columnLength,
    Identifier[columnLength::t_amN -> t_amO, <NotTopLevel>])]
------------------------------------------------
Bindings for { [lineOutTable]
Generalisation plan
  CheckGen lineOutTable :: t_amJ -> t_amK
                           []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  lineOutTable
  t_amJ -> t_amK
tcMatchesFun
  lineOutTable
  t_amJ -> t_amK
tcGen
env2 [(table, Identifier[table::t_amJ, <NotTopLevel>])]
tcBody t_amK
Instantiating
  map with [a_asb, b_asc]
           []
utype_defer
  cobox_asd
  [b_asc]
  t_amK
  a type equality [b_asc] ~ t_amK
  In the expression: map (lineOutRow (columnLength table)) table
  In an equation for ‘lineOutTable’:
      lineOutTable table = map (lineOutRow (columnLength table)) table
tcPolyExprNC a_asb -> b_asc
tcGen
utype_defer
  cobox_ase
  t_amE -> t_amF
  a_asb -> b_asc
  a type equality t_amE -> t_amF ~ a_asb -> b_asc
  In the first argument of ‘map’, namely
    ‘(lineOutRow (columnLength table))’
  In the expression: map (lineOutRow (columnLength table)) table
tcPolyExprNC t_amD
tcGen
utype_defer
  cobox_asf
  t_amO
  t_amD
  a type equality t_amO ~ t_amD
  In the first argument of ‘lineOutRow’, namely
    ‘(columnLength table)’
  In the first argument of ‘map’, namely
    ‘(lineOutRow (columnLength table))’
tcPolyExprNC t_amN
tcGen
utype_defer
  cobox_asg
  t_amJ
  t_amN
  a type equality t_amJ ~ t_amN
  In the first argument of ‘columnLength’, namely ‘table’
  In the first argument of ‘lineOutRow’, namely
    ‘(columnLength table)’
tcPolyExprNC [a_asb]
tcGen
utype_defer
  cobox_ash
  t_amJ
  [a_asb]
  a type equality t_amJ ~ [a_asb]
  In the second argument of ‘map’, namely ‘table’
  In the expression: map (lineOutRow (columnLength table)) table
addInlinePrags
  lineOutTable
  []
csb2 [lineOutTable]
} End of bindings for
  [lineOutTable]
  NonRecursive
  lineOutTable t_amJ -> t_amK
env2
  [(lineOutTable,
    Identifier[lineOutTable::t_amJ -> t_amK, <NotTopLevel>])]
------------------------------------------------
Bindings for { [insertEmptyLines]
Generalisation plan
  CheckGen insertEmptyLines :: t_amR -> t_amS
                               []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  insertEmptyLines
  t_amR -> t_amS
tcMatchesFun
  insertEmptyLines
  t_amR -> t_amS
tcGen
env2 [(table, Identifier[table::t_amR, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [t']
Generalisation plan NoGen
addInlinePrags
  t'
  []
tcMatchesFun
  t'
  t_asj
tcGen
tcBody t_asj
utype_defer
  cobox_ask
  t_amK
  t_asj
  a type equality t_amK ~ t_asj
  In the expression: lineOutTable table
  In an equation for ‘t'’: t' = lineOutTable table
tcPolyExprNC t_amJ
tcGen
utype_defer
  cobox_asl
  t_amR
  t_amJ
  a type equality t_amR ~ t_amJ
  In the first argument of ‘lineOutTable’, namely ‘table’
  In the expression: lineOutTable table
csb2 [t']
} End of bindings for
  [t']
  NonRecursive
  t' t_asj
env2 [(t', Identifier[t'::t_asj, <NotTopLevel>])]
------------------------------------------------
Bindings for { [emp]
Generalisation plan NoGen
addInlinePrags
  emp
  []
tcMatchesFun
  emp
  t_asm
tcGen
tcBody t_asm
Instantiating
  foldr with [a_asp, b_asq]
             []
utype_defer
  cobox_asr
  b_asq
  t_asm
  a type equality b_asq ~ t_asm
  In the expression:
    foldr
      (\ x -> (++) ("+" ++ replicate x '-')) "+" (columnLength table)
  In an equation for ‘emp’:
      emp
        = foldr
            (\ x -> (++) ("+" ++ replicate x '-')) "+" (columnLength table)
tcPolyExprNC a_asp -> b_asq -> b_asq
tcGen
env2 [(x, Identifier[x::a_asp, <NotTopLevel>])]
tcBody b_asq -> b_asq
Instantiating
  ++ with [a_ass]
          []
utype_defer
  cobox_ast
  [a_ass] -> [a_ass]
  b_asq -> b_asq
  a type equality [a_ass] -> [a_ass] ~ b_asq -> b_asq
  In the expression: (++) ("+" ++ replicate x '-')
  In the first argument of ‘foldr’, namely
    ‘(\ x -> (++) ("+" ++ replicate x '-'))’
tcPolyExprNC [a_ass]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_asu]
          []
utype_defer
  cobox_asv
  [a_asu]
  [a_ass]
  a type equality [a_asu] ~ [a_ass]
  In the first argument of ‘(++)’, namely ‘("+" ++ replicate x '-')’
  In the expression: (++) ("+" ++ replicate x '-')
  In the first argument of ‘foldr’, namely
    ‘(\ x -> (++) ("+" ++ replicate x '-'))’
tcPolyExprNC [a_asu]
tcGen
utype_defer
  cobox_asw
  [Char]
  [a_asu]
  a type equality [Char] ~ [a_asu]
  In the first argument of ‘(++)’, namely ‘"+"’
  In the first argument of ‘(++)’, namely ‘("+" ++ replicate x '-')’
  In the expression: (++) ("+" ++ replicate x '-')
tcPolyExprNC [a_asu]
tcGen
Instantiating
  replicate with [a_asx]
                 []
utype_defer
  cobox_asy
  [a_asx]
  [a_asu]
  a type equality [a_asx] ~ [a_asu]
  In the second argument of ‘(++)’, namely ‘replicate x '-'’
  In the first argument of ‘(++)’, namely ‘("+" ++ replicate x '-')’
tcPolyExprNC Int
tcGen
utype_defer
  cobox_asz
  a_asp
  Int
  a type equality a_asp ~ Int
  In the first argument of ‘replicate’, namely ‘x’
  In the second argument of ‘(++)’, namely ‘replicate x '-'’
tcPolyExprNC a_asx
tcGen
utype_defer
  cobox_asA
  Char
  a_asx
  a type equality Char ~ a_asx
  In the second argument of ‘replicate’, namely ‘'-'’
  In the second argument of ‘(++)’, namely ‘replicate x '-'’
  In the first argument of ‘(++)’, namely ‘("+" ++ replicate x '-')’
tcPolyExprNC b_asq
tcGen
utype_defer
  cobox_asB
  [Char]
  b_asq
  a type equality [Char] ~ b_asq
  In the second argument of ‘foldr’, namely ‘"+"’
  In the expression:
    foldr
      (\ x -> (++) ("+" ++ replicate x '-')) "+" (columnLength table)
  In an equation for ‘emp’:
      emp
        = foldr
            (\ x -> (++) ("+" ++ replicate x '-')) "+" (columnLength table)
tcPolyExprNC [a_asp]
tcGen
utype_defer
  cobox_asC
  t_amO
  [a_asp]
  a type equality t_amO ~ [a_asp]
  In the third argument of ‘foldr’, namely ‘(columnLength table)’
  In the expression:
    foldr
      (\ x -> (++) ("+" ++ replicate x '-')) "+" (columnLength table)
tcPolyExprNC t_amN
tcGen
utype_defer
  cobox_asD
  t_amR
  t_amN
  a type equality t_amR ~ t_amN
  In the first argument of ‘columnLength’, namely ‘table’
  In the third argument of ‘foldr’, namely ‘(columnLength table)’
csb2 [emp]
} End of bindings for
  [emp]
  NonRecursive
  emp t_asm
env2 [(emp, Identifier[emp::t_asm, <NotTopLevel>])]
tcBody t_amS
Non Application rule (:)
Instantiating
  GHC.Types.: with [a_asE]
                   []
utype_defer
  cobox_asF
  [a_asE]
  t_amS
  a type equality [a_asE] ~ t_amS
  In the expression: emp : head (t') : emp : tail (t') ++ [emp]
  In an equation for ‘insertEmptyLines’:
      insertEmptyLines table
        = emp : head (t') : emp : tail (t') ++ [emp]
        where
            emp
              = foldr
                  (\ x -> (++) ("+" ++ replicate x '-')) "+" (columnLength table)
            t' = lineOutTable table
tcPolyExprNC a_asE
tcGen
utype_defer
  cobox_asG
  t_asm
  a_asE
  a type equality t_asm ~ a_asE
  In the first argument of ‘(:)’, namely ‘emp’
  In the expression: emp : head (t') : emp : tail (t') ++ [emp]
tcPolyExprNC [a_asE]
tcGen
Non Application rule (:)
Instantiating
  GHC.Types.: with [a_asH]
                   []
utype_defer
  cobox_asI
  [a_asH]
  [a_asE]
  a type equality [a_asH] ~ [a_asE]
  In the second argument of ‘(:)’, namely
    ‘head (t') : emp : tail (t') ++ [emp]’
  In the expression: emp : head (t') : emp : tail (t') ++ [emp]
  In an equation for ‘insertEmptyLines’:
      insertEmptyLines table
        = emp : head (t') : emp : tail (t') ++ [emp]
        where
            emp
              = foldr
                  (\ x -> (++) ("+" ++ replicate x '-')) "+" (columnLength table)
            t' = lineOutTable table
tcPolyExprNC a_asH
tcGen
Instantiating
  head with [a_asK]
            []
utype_defer
  cobox_asL
  a_asK
  a_asH
  a type equality a_asK ~ a_asH
  In the first argument of ‘(:)’, namely ‘head (t')’
  In the second argument of ‘(:)’, namely
    ‘head (t') : emp : tail (t') ++ [emp]’
tcPolyExprNC [a_asK]
tcGen
utype_defer
  cobox_asM
  t_asj
  [a_asK]
  a type equality t_asj ~ [a_asK]
  In the first argument of ‘head’, namely ‘(t')’
  In the first argument of ‘(:)’, namely ‘head (t')’
tcPolyExprNC [a_asH]
tcGen
Non Application rule (:)
Instantiating
  GHC.Types.: with [a_asN]
                   []
utype_defer
  cobox_asO
  [a_asN]
  [a_asH]
  a type equality [a_asN] ~ [a_asH]
  In the second argument of ‘(:)’, namely ‘emp : tail (t') ++ [emp]’
  In the second argument of ‘(:)’, namely
    ‘head (t') : emp : tail (t') ++ [emp]’
  In the expression: emp : head (t') : emp : tail (t') ++ [emp]
tcPolyExprNC a_asN
tcGen
utype_defer
  cobox_asP
  t_asm
  a_asN
  a type equality t_asm ~ a_asN
  In the first argument of ‘(:)’, namely ‘emp’
  In the second argument of ‘(:)’, namely ‘emp : tail (t') ++ [emp]’
tcPolyExprNC [a_asN]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_asQ]
          []
utype_defer
  cobox_asR
  [a_asQ]
  [a_asN]
  a type equality [a_asQ] ~ [a_asN]
  In the second argument of ‘(:)’, namely ‘tail (t') ++ [emp]’
  In the second argument of ‘(:)’, namely ‘emp : tail (t') ++ [emp]’
  In the second argument of ‘(:)’, namely
    ‘head (t') : emp : tail (t') ++ [emp]’
tcPolyExprNC [a_asQ]
tcGen
Instantiating
  tail with [a_asT]
            []
utype_defer
  cobox_asU
  [a_asT]
  [a_asQ]
  a type equality [a_asT] ~ [a_asQ]
  In the first argument of ‘(++)’, namely ‘tail (t')’
  In the second argument of ‘(:)’, namely ‘tail (t') ++ [emp]’
tcPolyExprNC [a_asT]
tcGen
utype_defer
  cobox_asV
  t_asj
  [a_asT]
  a type equality t_asj ~ [a_asT]
  In the first argument of ‘tail’, namely ‘(t')’
  In the first argument of ‘(++)’, namely ‘tail (t')’
tcPolyExprNC [a_asQ]
tcGen
tcPolyExpr a_asQ
tcPolyExprNC a_asQ
tcGen
utype_defer
  cobox_asW
  t_asm
  a_asQ
  a type equality t_asm ~ a_asQ
  In the expression: emp
  In the second argument of ‘(++)’, namely ‘[emp]’
addInlinePrags
  insertEmptyLines
  []
csb2 [insertEmptyLines]
} End of bindings for
  [insertEmptyLines]
  NonRecursive
  insertEmptyLines t_amR -> t_amS
env2
  [(insertEmptyLines,
    Identifier[insertEmptyLines::t_amR -> t_amS, <NotTopLevel>])]
------------------------------------------------
Bindings for { [writeTable]
Generalisation plan
  CheckGen writeTable :: t_amV -> t_amW
                         []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  writeTable
  t_amV -> t_amW
tcMatchesFun
  writeTable
  t_amV -> t_amW
tcGen
tcBody t_amV -> t_amW
Non Application rule (.)
Instantiating
  . with [b_asY, c_asZ, a_at0]
         []
utype_defer
  cobox_at1
  a_at0 -> c_asZ
  t_amV -> t_amW
  a type equality a_at0 -> c_asZ ~ t_amV -> t_amW
  In the expression: unlines . insertEmptyLines
  In an equation for ‘writeTable’:
      writeTable = unlines . insertEmptyLines
tcPolyExprNC b_asY -> c_asZ
tcGen
utype_defer
  cobox_at2
  [String] -> String
  b_asY -> c_asZ
  a type equality [String] -> String ~ b_asY -> c_asZ
  In the first argument of ‘(.)’, namely ‘unlines’
  In the expression: unlines . insertEmptyLines
tcPolyExprNC a_at0 -> b_asY
tcGen
utype_defer
  cobox_at3
  t_amR -> t_amS
  a_at0 -> b_asY
  a type equality t_amR -> t_amS ~ a_at0 -> b_asY
  In the second argument of ‘(.)’, namely ‘insertEmptyLines’
  In the expression: unlines . insertEmptyLines
addInlinePrags
  writeTable
  []
csb2 [writeTable]
} End of bindings for
  [writeTable]
  NonRecursive
  writeTable t_amV -> t_amW
env2
  [(writeTable,
    Identifier[writeTable::t_amV -> t_amW, <NotTopLevel>])]
------------------------------------------------
Bindings for { [locaties]
Generalisation plan
  CheckGen locaties :: t_amZ
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  locaties
  t_amZ
tcMatchesFun
  locaties
  t_amZ
tcGen
tcBody t_amZ
utype_defer
  cobox_at6
  [t_at5]
  t_amZ
  a type equality [t_at5] ~ t_amZ
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at5
tcPolyExprNC t_at5
tcGen
utype_defer
  cobox_at8
  [t_at7]
  t_at5
  a type equality [t_at7] ~ t_at5
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at7
tcPolyExprNC t_at7
tcGen
utype_defer
  cobox_at9
  [Char]
  t_at7
  a type equality [Char] ~ t_at7
  In the expression: "Universiteit/bedrijf"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at7
tcPolyExprNC t_at7
tcGen
utype_defer
  cobox_ata
  [Char]
  t_at7
  a type equality [Char] ~ t_at7
  In the expression: "Land"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at7
tcPolyExprNC t_at7
tcGen
utype_defer
  cobox_atb
  [Char]
  t_at7
  a type equality [Char] ~ t_at7
  In the expression: "Stad"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at5
tcPolyExprNC t_at5
tcGen
utype_defer
  cobox_atd
  [t_atc]
  t_at5
  a type equality [t_atc] ~ t_at5
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atc
tcPolyExprNC t_atc
tcGen
utype_defer
  cobox_ate
  [Char]
  t_atc
  a type equality [Char] ~ t_atc
  In the expression: "Universiteit van Utrecht"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atc
tcPolyExprNC t_atc
tcGen
utype_defer
  cobox_atf
  [Char]
  t_atc
  a type equality [Char] ~ t_atc
  In the expression: "Nederland"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atc
tcPolyExprNC t_atc
tcGen
utype_defer
  cobox_atg
  [Char]
  t_atc
  a type equality [Char] ~ t_atc
  In the expression: "Utrecht"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at5
tcPolyExprNC t_at5
tcGen
utype_defer
  cobox_ati
  [t_ath]
  t_at5
  a type equality [t_ath] ~ t_at5
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ath
tcPolyExprNC t_ath
tcGen
utype_defer
  cobox_atj
  [Char]
  t_ath
  a type equality [Char] ~ t_ath
  In the expression: "University of York"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ath
tcPolyExprNC t_ath
tcGen
utype_defer
  cobox_atk
  [Char]
  t_ath
  a type equality [Char] ~ t_ath
  In the expression: "Engeland"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ath
tcPolyExprNC t_ath
tcGen
utype_defer
  cobox_atl
  [Char]
  t_ath
  a type equality [Char] ~ t_ath
  In the expression: "York"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at5
tcPolyExprNC t_at5
tcGen
utype_defer
  cobox_atn
  [t_atm]
  t_at5
  a type equality [t_atm] ~ t_at5
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atm
tcPolyExprNC t_atm
tcGen
utype_defer
  cobox_ato
  [Char]
  t_atm
  a type equality [Char] ~ t_atm
  In the expression: "Microsoft Research"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atm
tcPolyExprNC t_atm
tcGen
utype_defer
  cobox_atp
  [Char]
  t_atm
  a type equality [Char] ~ t_atm
  In the expression: "Engeland"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atm
tcPolyExprNC t_atm
tcGen
utype_defer
  cobox_atq
  [Char]
  t_atm
  a type equality [Char] ~ t_atm
  In the expression: "Cambridge"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at5
tcPolyExprNC t_at5
tcGen
utype_defer
  cobox_ats
  [t_atr]
  t_at5
  a type equality [t_atr] ~ t_at5
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atr
tcPolyExprNC t_atr
tcGen
utype_defer
  cobox_att
  [Char]
  t_atr
  a type equality [Char] ~ t_atr
  In the expression: "Galois Connections"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atr
tcPolyExprNC t_atr
tcGen
utype_defer
  cobox_atu
  [Char]
  t_atr
  a type equality [Char] ~ t_atr
  In the expression: "Verenigde Staten"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atr
tcPolyExprNC t_atr
tcGen
utype_defer
  cobox_atv
  [Char]
  t_atr
  a type equality [Char] ~ t_atr
  In the expression: "Beaverton"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at5
tcPolyExprNC t_at5
tcGen
utype_defer
  cobox_atx
  [t_atw]
  t_at5
  a type equality [t_atw] ~ t_at5
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atw
tcPolyExprNC t_atw
tcGen
utype_defer
  cobox_aty
  [Char]
  t_atw
  a type equality [Char] ~ t_atw
  In the expression: "Oregon Graduate Institute"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atw
tcPolyExprNC t_atw
tcGen
utype_defer
  cobox_atz
  [Char]
  t_atw
  a type equality [Char] ~ t_atw
  In the expression: "Verenigde Staten"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atw
tcPolyExprNC t_atw
tcGen
utype_defer
  cobox_atA
  [Char]
  t_atw
  a type equality [Char] ~ t_atw
  In the expression: "Beaverton"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_at5
tcPolyExprNC t_at5
tcGen
utype_defer
  cobox_atC
  [t_atB]
  t_at5
  a type equality [t_atB] ~ t_at5
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atB
tcPolyExprNC t_atB
tcGen
utype_defer
  cobox_atD
  [Char]
  t_atB
  a type equality [Char] ~ t_atB
  In the expression: "Chalmers University of Technology"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atB
tcPolyExprNC t_atB
tcGen
utype_defer
  cobox_atE
  [Char]
  t_atB
  a type equality [Char] ~ t_atB
  In the expression: "Zweden"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_atB
tcPolyExprNC t_atB
tcGen
utype_defer
  cobox_atF
  [Char]
  t_atB
  a type equality [Char] ~ t_atB
  In the expression: "Goteborg"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
addInlinePrags
  locaties
  []
csb2 [locaties]
} End of bindings for
  [locaties]
  NonRecursive
  locaties t_amZ
env2 [(locaties, Identifier[locaties::t_amZ, <NotTopLevel>])]
------------------------------------------------
Bindings for { [compilers]
Generalisation plan
  CheckGen compilers :: t_an1
                        []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  compilers
  t_an1
tcMatchesFun
  compilers
  t_an1
tcGen
tcBody t_an1
utype_defer
  cobox_atI
  [t_atH]
  t_an1
  a type equality [t_atH] ~ t_an1
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_atK
  [t_atJ]
  t_atH
  a type equality [t_atJ] ~ t_atH
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atJ
tcPolyExprNC t_atJ
tcGen
utype_defer
  cobox_atL
  [Char]
  t_atJ
  a type equality [Char] ~ t_atJ
  In the expression: "Compiler"
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atJ
tcPolyExprNC t_atJ
tcGen
utype_defer
  cobox_atM
  [Char]
  t_atJ
  a type equality [Char] ~ t_atJ
  In the expression: "Universiteit/bedrijf"
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_atO
  [t_atN]
  t_atH
  a type equality [t_atN] ~ t_atH
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atN
tcPolyExprNC t_atN
tcGen
utype_defer
  cobox_atP
  [Char]
  t_atN
  a type equality [Char] ~ t_atN
  In the expression: "Helium"
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atN
tcPolyExprNC t_atN
tcGen
utype_defer
  cobox_atQ
  [Char]
  t_atN
  a type equality [Char] ~ t_atN
  In the expression: "Universiteit van Utrecht"
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_atS
  [t_atR]
  t_atH
  a type equality [t_atR] ~ t_atH
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atR
tcPolyExprNC t_atR
tcGen
utype_defer
  cobox_atT
  [Char]
  t_atR
  a type equality [Char] ~ t_atR
  In the expression: "NHC"
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atR
tcPolyExprNC t_atR
tcGen
utype_defer
  cobox_atU
  [Char]
  t_atR
  a type equality [Char] ~ t_atR
  In the expression: "University of York"
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_atW
  [t_atV]
  t_atH
  a type equality [t_atV] ~ t_atH
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atV
tcPolyExprNC t_atV
tcGen
utype_defer
  cobox_atX
  [Char]
  t_atV
  a type equality [Char] ~ t_atV
  In the expression: "GHC"
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atV
tcPolyExprNC t_atV
tcGen
utype_defer
  cobox_atY
  [Char]
  t_atV
  a type equality [Char] ~ t_atV
  In the expression: "Microsoft Research"
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_au0
  [t_atZ]
  t_atH
  a type equality [t_atZ] ~ t_atH
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atZ
tcPolyExprNC t_atZ
tcGen
utype_defer
  cobox_au1
  [Char]
  t_atZ
  a type equality [Char] ~ t_atZ
  In the expression: "Hugs"
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atZ
tcPolyExprNC t_atZ
tcGen
utype_defer
  cobox_au2
  [Char]
  t_atZ
  a type equality [Char] ~ t_atZ
  In the expression: "Galois Connections"
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_au4
  [t_au3]
  t_atH
  a type equality [t_au3] ~ t_atH
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_au3
tcPolyExprNC t_au3
tcGen
utype_defer
  cobox_au5
  [Char]
  t_au3
  a type equality [Char] ~ t_au3
  In the expression: "Hugs.NET"
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_au3
tcPolyExprNC t_au3
tcGen
utype_defer
  cobox_au6
  [Char]
  t_au3
  a type equality [Char] ~ t_au3
  In the expression: "Galois Connections"
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_au8
  [t_au7]
  t_atH
  a type equality [t_au7] ~ t_atH
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_au7
tcPolyExprNC t_au7
tcGen
utype_defer
  cobox_au9
  [Char]
  t_au7
  a type equality [Char] ~ t_au7
  In the expression: "O'Haskell"
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_au7
tcPolyExprNC t_au7
tcGen
utype_defer
  cobox_aua
  [Char]
  t_au7
  a type equality [Char] ~ t_au7
  In the expression: "Oregon Graduate Institute"
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_auc
  [t_aub]
  t_atH
  a type equality [t_aub] ~ t_atH
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_aub
tcPolyExprNC t_aub
tcGen
utype_defer
  cobox_aud
  [Char]
  t_aub
  a type equality [Char] ~ t_aub
  In the expression: "O'Haskell"
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_aub
tcPolyExprNC t_aub
tcGen
utype_defer
  cobox_aue
  [Char]
  t_aub
  a type equality [Char] ~ t_aub
  In the expression: "Chalmers University of Technology"
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_atH
tcPolyExprNC t_atH
tcGen
utype_defer
  cobox_aug
  [t_auf]
  t_atH
  a type equality [t_auf] ~ t_atH
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_auf
tcPolyExprNC t_auf
tcGen
utype_defer
  cobox_auh
  [Char]
  t_auf
  a type equality [Char] ~ t_auf
  In the expression: "HBC"
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_auf
tcPolyExprNC t_auf
tcGen
utype_defer
  cobox_aui
  [Char]
  t_auf
  a type equality [Char] ~ t_auf
  In the expression: "Chalmers University of Technology"
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
addInlinePrags
  compilers
  []
csb2 [compilers]
} End of bindings for
  [compilers]
  NonRecursive
  compilers t_an1
env2 [(compilers, Identifier[compilers::t_an1, <NotTopLevel>])]
------------------------------------------------
Bindings for { [eqString]
Generalisation plan
  CheckGen eqString :: t_an3 -> t_an4 -> t_an5
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  eqString
  t_an3 -> t_an4 -> t_an5
tcMatchesFun
  eqString
  t_an3 -> t_an4 -> t_an5
tcGen
tcBody t_an3 -> t_an4 -> t_an5
Instantiating
  undefined with [a_auk]
                 []
utype_defer
  cobox_aul
  a_auk
  t_an3 -> t_an4 -> t_an5
  a type equality a_auk ~ t_an3 -> t_an4 -> t_an5
  In the expression: undefined
  In an equation for ‘eqString’: eqString = undefined
addInlinePrags
  eqString
  []
csb2 [eqString]
} End of bindings for
  [eqString]
  NonRecursive
  eqString t_an3 -> t_an4 -> t_an5
env2
  [(eqString,
    Identifier[eqString::t_an3 -> t_an4 -> t_an5, <NotTopLevel>])]
tc_group rec
  colno list (th : ths)
    | or (map (eqString th) list) = 0
    | otherwise = 1 + colno list ths
------------------------------------------------
Bindings for { [colno]
Generalisation plan
  CheckGen colno :: t_aml -> t_amm -> t_amn
                    []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  colno
  t_aml -> t_amm -> t_amn
tcMatchesFun
  colno
  t_aml -> t_amm -> t_amn
tcGen
env2 [(list, Identifier[list::t_aml, <NotTopLevel>])]
utype_defer
  cobox_auo
  [t_aun]
  t_amm
  a type equality [t_aun] ~ t_amm
  In the pattern: th : ths
  In an equation for ‘colno’:
      colno list (th : ths)
        | or (map (eqString th) list) = 0
        | otherwise = 1 + colno list ths
tcConPat
  :
  []
  [t_aun]
  [t_aun, [t_aun]]
env2 [(th, Identifier[th::t_aun, <NotTopLevel>])]
env2 [(ths, Identifier[ths::[t_aun], <NotTopLevel>])]
utype_defer
  cobox_aup
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: or (map (eqString th) list)
  In a stmt of a pattern guard for
                 an equation for ‘colno’:
    or (map (eqString th) list)
tcPolyExprNC [Bool]
tcGen
Instantiating
  map with [a_auq, b_aur]
           []
utype_defer
  cobox_aus
  [b_aur]
  [Bool]
  a type equality [b_aur] ~ [Bool]
  In the first argument of ‘or’, namely ‘(map (eqString th) list)’
  In the expression: or (map (eqString th) list)
tcPolyExprNC a_auq -> b_aur
tcGen
utype_defer
  cobox_aut
  t_an4 -> t_an5
  a_auq -> b_aur
  a type equality t_an4 -> t_an5 ~ a_auq -> b_aur
  In the first argument of ‘map’, namely ‘(eqString th)’
  In the first argument of ‘or’, namely ‘(map (eqString th) list)’
tcPolyExprNC t_an3
tcGen
utype_defer
  cobox_auu
  t_aun
  t_an3
  a type equality t_aun ~ t_an3
  In the first argument of ‘eqString’, namely ‘th’
  In the first argument of ‘map’, namely ‘(eqString th)’
tcPolyExprNC [a_auq]
tcGen
utype_defer
  cobox_auv
  t_aml
  [a_auq]
  a type equality t_aml ~ [a_auq]
  In the second argument of ‘map’, namely ‘list’
  In the first argument of ‘or’, namely ‘(map (eqString th) list)’
tcBody t_amn
Instantiating
  fromInteger with [a_awC]
                   [Num a_awC]
instCallConstraints [$dNum_awD]
utype_defer
  cobox_awE
  Integer -> a_awC
  Integer -> t_amn
  a type equality Integer -> a_awC ~ Integer -> t_amn
  In the expression: 0
  In an equation for ‘colno’:
      colno list (th : ths)
        | or (map (eqString th) list) = 0
        | otherwise = 1 + colno list ths
utype_defer
  cobox_awF
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: otherwise
  In a stmt of a pattern guard for
                 an equation for ‘colno’:
    otherwise
tcBody t_amn
Non Application rule (+)
Instantiating
  + with [a_awG]
         [Num a_awG]
instCallConstraints [$dNum_awH]
utype_defer
  cobox_awI
  a_awG
  t_amn
  a type equality a_awG ~ t_amn
  In the expression: 1 + colno list ths
  In an equation for ‘colno’:
      colno list (th : ths)
        | or (map (eqString th) list) = 0
        | otherwise = 1 + colno list ths
tcPolyExprNC a_awG
tcGen
Instantiating
  fromInteger with [a_awJ]
                   [Num a_awJ]
instCallConstraints [$dNum_awK]
utype_defer
  cobox_awL
  Integer -> a_awJ
  Integer -> a_awG
  a type equality Integer -> a_awJ ~ Integer -> a_awG
  In the first argument of ‘(+)’, namely ‘1’
  In the expression: 1 + colno list ths
  In an equation for ‘colno’:
      colno list (th : ths)
        | or (map (eqString th) list) = 0
        | otherwise = 1 + colno list ths
tcPolyExprNC a_awG
tcGen
utype_defer
  cobox_awM
  t_amn
  a_awG
  a type equality t_amn ~ a_awG
  In the second argument of ‘(+)’, namely ‘colno list ths’
  In the expression: 1 + colno list ths
tcPolyExprNC t_aml
tcGen
utype_defer
  cobox_awN
  t_aml
  t_aml
  a type equality t_aml ~ t_aml
  In the first argument of ‘colno’, namely ‘list’
  In the second argument of ‘(+)’, namely ‘colno list ths’
tcPolyExprNC t_amm
tcGen
utype_defer
  cobox_awO
  [t_aun]
  t_amm
  a type equality [t_aun] ~ t_amm
  In the second argument of ‘colno’, namely ‘ths’
  In the second argument of ‘(+)’, namely ‘colno list ths’
addInlinePrags
  colno
  []
csb2 [colno]
} End of bindings for
  [colno]
  Recursive
  colno t_aml -> t_amm -> t_amn
env2
  [(colno,
    Identifier[colno::t_aml -> t_amm -> t_amn, <NotTopLevel>])]
------------------------------------------------
Bindings for { [selectColumnNrs]
Generalisation plan
  CheckGen selectColumnNrs :: t_amr -> t_ams -> t_amt
                              []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  selectColumnNrs
  t_amr -> t_ams -> t_amt
tcMatchesFun
  selectColumnNrs
  t_amr -> t_ams -> t_amt
tcGen
env2 [(tableHead, Identifier[tableHead::t_amr, <NotTopLevel>])]
env2 [(list, Identifier[list::t_ams, <NotTopLevel>])]
tcBody t_amt
Instantiating
  map with [a_awQ, b_awR]
           []
utype_defer
  cobox_awS
  [b_awR]
  t_amt
  a type equality [b_awR] ~ t_amt
  In the expression: map (\ x -> colno [x] tableHead) list
  In an equation for ‘selectColumnNrs’:
      selectColumnNrs tableHead list
        = map (\ x -> colno [x] tableHead) list
tcPolyExprNC a_awQ -> b_awR
tcGen
env2 [(x, Identifier[x::a_awQ, <NotTopLevel>])]
tcBody b_awR
utype_defer
  cobox_awT
  t_amn
  b_awR
  a type equality t_amn ~ b_awR
  In the expression: colno [x] tableHead
  In the first argument of ‘map’, namely
    ‘(\ x -> colno [x] tableHead)’
tcPolyExprNC t_aml
tcGen
utype_defer
  cobox_awV
  [t_awU]
  t_aml
  a type equality [t_awU] ~ t_aml
  In the first argument of ‘colno’, namely ‘[x]’
  In the expression: colno [x] tableHead
  In the first argument of ‘map’, namely
    ‘(\ x -> colno [x] tableHead)’
tcPolyExpr t_awU
tcPolyExprNC t_awU
tcGen
utype_defer
  cobox_awW
  a_awQ
  t_awU
  a type equality a_awQ ~ t_awU
  In the expression: x
  In the first argument of ‘colno’, namely ‘[x]’
tcPolyExprNC t_amm
tcGen
utype_defer
  cobox_awX
  t_amr
  t_amm
  a type equality t_amr ~ t_amm
  In the second argument of ‘colno’, namely ‘tableHead’
  In the expression: colno [x] tableHead
tcPolyExprNC [a_awQ]
tcGen
utype_defer
  cobox_awY
  t_ams
  [a_awQ]
  a type equality t_ams ~ [a_awQ]
  In the second argument of ‘map’, namely ‘list’
  In the expression: map (\ x -> colno [x] tableHead) list
addInlinePrags
  selectColumnNrs
  []
csb2 [selectColumnNrs]
} End of bindings for
  [selectColumnNrs]
  NonRecursive
  selectColumnNrs t_amr -> t_ams -> t_amt
env2
  [(selectColumnNrs,
    Identifier[selectColumnNrs::t_amr
                                -> t_ams -> t_amt, <NotTopLevel>])]
------------------------------------------------
Bindings for { [project]
Generalisation plan
  CheckGen project :: t_amx -> t_amy -> t_amz
                      []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  project
  t_amx -> t_amy -> t_amz
tcMatchesFun
  project
  t_amx -> t_amy -> t_amz
tcGen
env2 [(list, Identifier[list::t_amx, <NotTopLevel>])]
env2 [(table, Identifier[table::t_amy, <NotTopLevel>])]
tcBody t_amz
Instantiating
  transpose with [a_ax0]
                 []
utype_defer
  cobox_ax1
  [[a_ax0]]
  t_amz
  a type equality [[a_ax0]] ~ t_amz
  In the expression:
    transpose
      (map ((transpose table) !!) (selectColumnNrs (head table) list))
  In an equation for ‘project’:
      project list table
        = transpose
            (map ((transpose table) !!) (selectColumnNrs (head table) list))
tcPolyExprNC [[a_ax0]]
tcGen
Instantiating
  map with [a_ax2, b_ax3]
           []
utype_defer
  cobox_ax4
  [b_ax3]
  [[a_ax0]]
  a type equality [b_ax3] ~ [[a_ax0]]
  In the first argument of ‘transpose’, namely
    ‘(map ((transpose table) !!) (selectColumnNrs (head table) list))’
  In the expression:
    transpose
      (map ((transpose table) !!) (selectColumnNrs (head table) list))
tcPolyExprNC a_ax2 -> b_ax3
tcGen
Instantiating
  !! with [a_ax5]
          []
utype_defer
  cobox_ax6
  Int -> a_ax5
  a_ax2 -> b_ax3
  a type equality Int -> a_ax5 ~ a_ax2 -> b_ax3
  In the first argument of ‘map’, namely ‘((transpose table) !!)’
  In the first argument of ‘transpose’, namely
    ‘(map ((transpose table) !!) (selectColumnNrs (head table) list))’
  In the expression:
    transpose
      (map ((transpose table) !!) (selectColumnNrs (head table) list))
tcPolyExprNC [a_ax5]
tcGen
Instantiating
  transpose with [a_ax7]
                 []
utype_defer
  cobox_ax8
  [[a_ax7]]
  [a_ax5]
  a type equality [[a_ax7]] ~ [a_ax5]
  In the first argument of ‘(!!)’, namely ‘(transpose table)’
  In the first argument of ‘map’, namely ‘((transpose table) !!)’
tcPolyExprNC [[a_ax7]]
tcGen
utype_defer
  cobox_ax9
  t_amy
  [[a_ax7]]
  a type equality t_amy ~ [[a_ax7]]
  In the first argument of ‘transpose’, namely ‘table’
  In the first argument of ‘(!!)’, namely ‘(transpose table)’
tcPolyExprNC [a_ax2]
tcGen
utype_defer
  cobox_axa
  t_amt
  [a_ax2]
  a type equality t_amt ~ [a_ax2]
  In the second argument of ‘map’, namely
    ‘(selectColumnNrs (head table) list)’
  In the first argument of ‘transpose’, namely
    ‘(map ((transpose table) !!) (selectColumnNrs (head table) list))’
tcPolyExprNC t_amr
tcGen
Instantiating
  head with [a_axb]
            []
utype_defer
  cobox_axc
  a_axb
  t_amr
  a type equality a_axb ~ t_amr
  In the first argument of ‘selectColumnNrs’, namely ‘(head table)’
  In the second argument of ‘map’, namely
    ‘(selectColumnNrs (head table) list)’
tcPolyExprNC [a_axb]
tcGen
utype_defer
  cobox_axd
  t_amy
  [a_axb]
  a type equality t_amy ~ [a_axb]
  In the first argument of ‘head’, namely ‘table’
  In the first argument of ‘selectColumnNrs’, namely ‘(head table)’
tcPolyExprNC t_ams
tcGen
utype_defer
  cobox_axe
  t_amx
  t_ams
  a type equality t_amx ~ t_ams
  In the second argument of ‘selectColumnNrs’, namely ‘list’
  In the second argument of ‘map’, namely
    ‘(selectColumnNrs (head table) list)’
addInlinePrags
  project
  []
csb2 [project]
} End of bindings for
  [project]
  NonRecursive
  project t_amx -> t_amy -> t_amz
env2
  [(project,
    Identifier[project::t_amx -> t_amy -> t_amz, <NotTopLevel>])]
------------------------------------------------
Bindings for { [select]
Generalisation plan
  CheckGen select :: t_amd -> t_ame -> t_amf -> t_amg
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  select
  t_amd -> t_ame -> t_amf -> t_amg
tcMatchesFun
  select
  t_amd -> t_ame -> t_amf -> t_amg
tcGen
env2 [(string, Identifier[string::t_amd, <NotTopLevel>])]
env2 [(test, Identifier[test::t_ame, <NotTopLevel>])]
env2 [(table, Identifier[table::t_amf, <NotTopLevel>])]
tcBody t_amg
Non Application rule (:)
Instantiating
  GHC.Types.: with [a_axg]
                   []
utype_defer
  cobox_axh
  [a_axg]
  t_amg
  a type equality [a_axg] ~ t_amg
  In the expression:
    (head table)
    : (selectRows (colno (head table) string) test (tail table))
  In an equation for ‘select’:
      select string test table
        = (head table)
          : (selectRows (colno (head table) string) test (tail table))
tcPolyExprNC a_axg
tcGen
Instantiating
  head with [a_axi]
            []
utype_defer
  cobox_axj
  a_axi
  a_axg
  a type equality a_axi ~ a_axg
  In the first argument of ‘(:)’, namely ‘(head table)’
  In the expression:
    (head table)
    : (selectRows (colno (head table) string) test (tail table))
tcPolyExprNC [a_axi]
tcGen
utype_defer
  cobox_axk
  t_amf
  [a_axi]
  a type equality t_amf ~ [a_axi]
  In the first argument of ‘head’, namely ‘table’
  In the first argument of ‘(:)’, namely ‘(head table)’
tcPolyExprNC [a_axg]
tcGen
utype_defer
  cobox_axl
  t_am8
  [a_axg]
  a type equality t_am8 ~ [a_axg]
  In the second argument of ‘(:)’, namely
    ‘(selectRows (colno (head table) string) test (tail table))’
  In the expression:
    (head table)
    : (selectRows (colno (head table) string) test (tail table))
tcPolyExprNC t_am5
tcGen
utype_defer
  cobox_axm
  t_amn
  t_am5
  a type equality t_amn ~ t_am5
  In the first argument of ‘selectRows’, namely
    ‘(colno (head table) string)’
  In the second argument of ‘(:)’, namely
    ‘(selectRows (colno (head table) string) test (tail table))’
tcPolyExprNC t_aml
tcGen
Instantiating
  head with [a_axn]
            []
utype_defer
  cobox_axo
  a_axn
  t_aml
  a type equality a_axn ~ t_aml
  In the first argument of ‘colno’, namely ‘(head table)’
  In the first argument of ‘selectRows’, namely
    ‘(colno (head table) string)’
tcPolyExprNC [a_axn]
tcGen
utype_defer
  cobox_axp
  t_amf
  [a_axn]
  a type equality t_amf ~ [a_axn]
  In the first argument of ‘head’, namely ‘table’
  In the first argument of ‘colno’, namely ‘(head table)’
tcPolyExprNC t_amm
tcGen
utype_defer
  cobox_axq
  t_amd
  t_amm
  a type equality t_amd ~ t_amm
  In the second argument of ‘colno’, namely ‘string’
  In the first argument of ‘selectRows’, namely
    ‘(colno (head table) string)’
tcPolyExprNC t_am6
tcGen
utype_defer
  cobox_axr
  t_ame
  t_am6
  a type equality t_ame ~ t_am6
  In the second argument of ‘selectRows’, namely ‘test’
  In the second argument of ‘(:)’, namely
    ‘(selectRows (colno (head table) string) test (tail table))’
tcPolyExprNC t_am7
tcGen
Instantiating
  tail with [a_axs]
            []
utype_defer
  cobox_axt
  [a_axs]
  t_am7
  a type equality [a_axs] ~ t_am7
  In the third argument of ‘selectRows’, namely ‘(tail table)’
  In the second argument of ‘(:)’, namely
    ‘(selectRows (colno (head table) string) test (tail table))’
tcPolyExprNC [a_axs]
tcGen
utype_defer
  cobox_axu
  t_amf
  [a_axs]
  a type equality t_amf ~ [a_axs]
  In the first argument of ‘tail’, namely ‘table’
  In the third argument of ‘selectRows’, namely ‘(tail table)’
addInlinePrags
  select
  []
csb2 [select]
} End of bindings for
  [select]
  NonRecursive
  select t_amd -> t_ame -> t_amf -> t_amg
env2
  [(select,
    Identifier[select::t_amd
                       -> t_ame -> t_amf -> t_amg, <NotTopLevel>])]
------------------------------------------------
Bindings for { [selecteq]
Generalisation plan
  CheckGen selecteq :: t_alH -> t_alI -> t_alJ -> t_alK -> t_alL
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  selecteq
  t_alH -> t_alI -> t_alJ -> t_alK -> t_alL
tcMatchesFun
  selecteq
  t_alH -> t_alI -> t_alJ -> t_alK -> t_alL
tcGen
env2 [(left, Identifier[left::t_alH, <NotTopLevel>])]
env2 [(right, Identifier[right::t_alI, <NotTopLevel>])]
env2 [(a, Identifier[a::t_alJ, <NotTopLevel>])]
env2 [(b, Identifier[b::t_alK, <NotTopLevel>])]
tcBody t_alL
Instantiating
  filter with [a_axw]
              []
utype_defer
  cobox_axx
  [a_axw]
  t_alL
  a type equality [a_axw] ~ t_alL
  In the expression:
    filter
      (\ x -> eqString (x !! a) (x !! b)) (crossProduct left right)
  In an equation for ‘selecteq’:
      selecteq left right a b
        = filter
            (\ x -> eqString (x !! a) (x !! b)) (crossProduct left right)
tcPolyExprNC a_axw -> Bool
tcGen
env2 [(x, Identifier[x::a_axw, <NotTopLevel>])]
tcBody Bool
utype_defer
  cobox_axy
  t_an5
  Bool
  a type equality t_an5 ~ Bool
  In the expression: eqString (x !! a) (x !! b)
  In the first argument of ‘filter’, namely
    ‘(\ x -> eqString (x !! a) (x !! b))’
tcPolyExprNC t_an3
tcGen
Non Application rule (!!)
Instantiating
  !! with [a_axz]
          []
utype_defer
  cobox_axA
  a_axz
  t_an3
  a type equality a_axz ~ t_an3
  In the first argument of ‘eqString’, namely ‘(x !! a)’
  In the expression: eqString (x !! a) (x !! b)
  In the first argument of ‘filter’, namely
    ‘(\ x -> eqString (x !! a) (x !! b))’
tcPolyExprNC [a_axz]
tcGen
utype_defer
  cobox_axB
  a_axw
  [a_axz]
  a type equality a_axw ~ [a_axz]
  In the first argument of ‘(!!)’, namely ‘x’
  In the first argument of ‘eqString’, namely ‘(x !! a)’
tcPolyExprNC Int
tcGen
utype_defer
  cobox_axC
  t_alJ
  Int
  a type equality t_alJ ~ Int
  In the second argument of ‘(!!)’, namely ‘a’
  In the first argument of ‘eqString’, namely ‘(x !! a)’
tcPolyExprNC t_an4
tcGen
Non Application rule (!!)
Instantiating
  !! with [a_axD]
          []
utype_defer
  cobox_axE
  a_axD
  t_an4
  a type equality a_axD ~ t_an4
  In the second argument of ‘eqString’, namely ‘(x !! b)’
  In the expression: eqString (x !! a) (x !! b)
  In the first argument of ‘filter’, namely
    ‘(\ x -> eqString (x !! a) (x !! b))’
tcPolyExprNC [a_axD]
tcGen
utype_defer
  cobox_axF
  a_axw
  [a_axD]
  a type equality a_axw ~ [a_axD]
  In the first argument of ‘(!!)’, namely ‘x’
  In the second argument of ‘eqString’, namely ‘(x !! b)’
tcPolyExprNC Int
tcGen
utype_defer
  cobox_axG
  t_alK
  Int
  a type equality t_alK ~ Int
  In the second argument of ‘(!!)’, namely ‘b’
  In the second argument of ‘eqString’, namely ‘(x !! b)’
tcPolyExprNC [a_axw]
tcGen
utype_defer
  cobox_axH
  t_alD
  [a_axw]
  a type equality t_alD ~ [a_axw]
  In the second argument of ‘filter’, namely
    ‘(crossProduct left right)’
  In the expression:
    filter
      (\ x -> eqString (x !! a) (x !! b)) (crossProduct left right)
tcPolyExprNC t_alB
tcGen
utype_defer
  cobox_axI
  t_alH
  t_alB
  a type equality t_alH ~ t_alB
  In the first argument of ‘crossProduct’, namely ‘left’
  In the second argument of ‘filter’, namely
    ‘(crossProduct left right)’
tcPolyExprNC t_alC
tcGen
utype_defer
  cobox_axJ
  t_alI
  t_alC
  a type equality t_alI ~ t_alC
  In the second argument of ‘crossProduct’, namely ‘right’
  In the second argument of ‘filter’, namely
    ‘(crossProduct left right)’
addInlinePrags
  selecteq
  []
csb2 [selecteq]
} End of bindings for
  [selecteq]
  NonRecursive
  selecteq t_alH -> t_alI -> t_alJ -> t_alK -> t_alL
env2
  [(selecteq,
    Identifier[selecteq::t_alH
                         -> t_alI -> t_alJ -> t_alK -> t_alL, <NotTopLevel>])]
------------------------------------------------
Bindings for { [join]
Generalisation plan
  CheckGen join :: t_alR -> t_alS -> t_alT
                   []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  join
  t_alR -> t_alS -> t_alT
tcMatchesFun
  join
  t_alR -> t_alS -> t_alT
tcGen
env2 [(left, Identifier[left::t_alR, <NotTopLevel>])]
env2 [(right, Identifier[right::t_alS, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [b]
Generalisation plan NoGen
addInlinePrags
  b
  []
tcMatchesFun
  b
  t_axL
tcGen
tcBody t_axL
Non Application rule (+)
Instantiating
  + with [a_axM]
         [Num a_axM]
instCallConstraints [$dNum_axN]
utype_defer
  cobox_axO
  a_axM
  t_axL
  a type equality a_axM ~ t_axL
  In the expression:
    colno (head left) (head right) + length (head left)
  In an equation for ‘b’:
      b = colno (head left) (head right) + length (head left)
  In an equation for ‘join’:
      join left right
        = map
            (\ x -> take b x ++ (drop (b + 1) x)) (selecteq left right a b)
        where
            a = colno (head right) (head left)
            b = colno (head left) (head right) + length (head left)
tcPolyExprNC a_axM
tcGen
utype_defer
  cobox_axP
  t_amn
  a_axM
  a type equality t_amn ~ a_axM
  In the first argument of ‘(+)’, namely
    ‘colno (head left) (head right)’
  In the expression:
    colno (head left) (head right) + length (head left)
tcPolyExprNC t_aml
tcGen
Instantiating
  head with [a_axQ]
            []
utype_defer
  cobox_axR
  a_axQ
  t_aml
  a type equality a_axQ ~ t_aml
  In the first argument of ‘colno’, namely ‘(head left)’
  In the first argument of ‘(+)’, namely
    ‘colno (head left) (head right)’
tcPolyExprNC [a_axQ]
tcGen
utype_defer
  cobox_axS
  t_alR
  [a_axQ]
  a type equality t_alR ~ [a_axQ]
  In the first argument of ‘head’, namely ‘left’
  In the first argument of ‘colno’, namely ‘(head left)’
tcPolyExprNC t_amm
tcGen
Instantiating
  head with [a_axT]
            []
utype_defer
  cobox_axU
  a_axT
  t_amm
  a type equality a_axT ~ t_amm
  In the second argument of ‘colno’, namely ‘(head right)’
  In the first argument of ‘(+)’, namely
    ‘colno (head left) (head right)’
tcPolyExprNC [a_axT]
tcGen
utype_defer
  cobox_axV
  t_alS
  [a_axT]
  a type equality t_alS ~ [a_axT]
  In the first argument of ‘head’, namely ‘right’
  In the second argument of ‘colno’, namely ‘(head right)’
tcPolyExprNC a_axM
tcGen
Instantiating
  length with [a_axW]
              []
utype_defer
  cobox_axX
  Int
  a_axM
  a type equality Int ~ a_axM
  In the second argument of ‘(+)’, namely ‘length (head left)’
  In the expression:
    colno (head left) (head right) + length (head left)
tcPolyExprNC [a_axW]
tcGen
Instantiating
  head with [a_axY]
            []
utype_defer
  cobox_axZ
  a_axY
  [a_axW]
  a type equality a_axY ~ [a_axW]
  In the first argument of ‘length’, namely ‘(head left)’
  In the second argument of ‘(+)’, namely ‘length (head left)’
tcPolyExprNC [a_axY]
tcGen
utype_defer
  cobox_ay0
  t_alR
  [a_axY]
  a type equality t_alR ~ [a_axY]
  In the first argument of ‘head’, namely ‘left’
  In the first argument of ‘length’, namely ‘(head left)’
csb2 [b]
} End of bindings for
  [b]
  NonRecursive
  b t_axL
env2 [(b, Identifier[b::t_axL, <NotTopLevel>])]
------------------------------------------------
Bindings for { [a]
Generalisation plan NoGen
addInlinePrags
  a
  []
tcMatchesFun
  a
  t_ay1
tcGen
tcBody t_ay1
utype_defer
  cobox_ay2
  t_amn
  t_ay1
  a type equality t_amn ~ t_ay1
  In the expression: colno (head right) (head left)
  In an equation for ‘a’: a = colno (head right) (head left)
tcPolyExprNC t_aml
tcGen
Instantiating
  head with [a_ay3]
            []
utype_defer
  cobox_ay4
  a_ay3
  t_aml
  a type equality a_ay3 ~ t_aml
  In the first argument of ‘colno’, namely ‘(head right)’
  In the expression: colno (head right) (head left)
tcPolyExprNC [a_ay3]
tcGen
utype_defer
  cobox_ay5
  t_alS
  [a_ay3]
  a type equality t_alS ~ [a_ay3]
  In the first argument of ‘head’, namely ‘right’
  In the first argument of ‘colno’, namely ‘(head right)’
tcPolyExprNC t_amm
tcGen
Instantiating
  head with [a_ay6]
            []
utype_defer
  cobox_ay7
  a_ay6
  t_amm
  a type equality a_ay6 ~ t_amm
  In the second argument of ‘colno’, namely ‘(head left)’
  In the expression: colno (head right) (head left)
tcPolyExprNC [a_ay6]
tcGen
utype_defer
  cobox_ay8
  t_alR
  [a_ay6]
  a type equality t_alR ~ [a_ay6]
  In the first argument of ‘head’, namely ‘left’
  In the second argument of ‘colno’, namely ‘(head left)’
csb2 [a]
} End of bindings for
  [a]
  NonRecursive
  a t_ay1
env2 [(a, Identifier[a::t_ay1, <NotTopLevel>])]
tcBody t_alT
Instantiating
  map with [a_ay9, b_aya]
           []
utype_defer
  cobox_ayb
  [b_aya]
  t_alT
  a type equality [b_aya] ~ t_alT
  In the expression:
    map (\ x -> take b x ++ (drop (b + 1) x)) (selecteq left right a b)
  In an equation for ‘join’:
      join left right
        = map
            (\ x -> take b x ++ (drop (b + 1) x)) (selecteq left right a b)
        where
            a = colno (head right) (head left)
            b = colno (head left) (head right) + length (head left)
tcPolyExprNC a_ay9 -> b_aya
tcGen
env2 [(x, Identifier[x::a_ay9, <NotTopLevel>])]
tcBody b_aya
Non Application rule (++)
Instantiating
  ++ with [a_ayc]
          []
utype_defer
  cobox_ayd
  [a_ayc]
  b_aya
  a type equality [a_ayc] ~ b_aya
  In the expression: take b x ++ (drop (b + 1) x)
  In the first argument of ‘map’, namely
    ‘(\ x -> take b x ++ (drop (b + 1) x))’
  In the expression:
    map (\ x -> take b x ++ (drop (b + 1) x)) (selecteq left right a b)
tcPolyExprNC [a_ayc]
tcGen
Instantiating
  take with [a_aye]
            []
utype_defer
  cobox_ayf
  [a_aye]
  [a_ayc]
  a type equality [a_aye] ~ [a_ayc]
  In the first argument of ‘(++)’, namely ‘take b x’
  In the expression: take b x ++ (drop (b + 1) x)
tcPolyExprNC Int
tcGen
utype_defer
  cobox_ayg
  t_axL
  Int
  a type equality t_axL ~ Int
  In the first argument of ‘take’, namely ‘b’
  In the first argument of ‘(++)’, namely ‘take b x’
tcPolyExprNC [a_aye]
tcGen
utype_defer
  cobox_ayh
  a_ay9
  [a_aye]
  a type equality a_ay9 ~ [a_aye]
  In the second argument of ‘take’, namely ‘x’
  In the first argument of ‘(++)’, namely ‘take b x’
tcPolyExprNC [a_ayc]
tcGen
Instantiating
  drop with [a_ayj]
            []
utype_defer
  cobox_ayk
  [a_ayj]
  [a_ayc]
  a type equality [a_ayj] ~ [a_ayc]
  In the second argument of ‘(++)’, namely ‘(drop (b + 1) x)’
  In the expression: take b x ++ (drop (b + 1) x)
tcPolyExprNC Int
tcGen
Non Application rule (+)
Instantiating
  + with [a_ayl]
         [Num a_ayl]
instCallConstraints [$dNum_aym]
utype_defer
  cobox_ayn
  a_ayl
  Int
  a type equality a_ayl ~ Int
  In the first argument of ‘drop’, namely ‘(b + 1)’
  In the second argument of ‘(++)’, namely ‘(drop (b + 1) x)’
  In the expression: take b x ++ (drop (b + 1) x)
tcPolyExprNC a_ayl
tcGen
utype_defer
  cobox_ayo
  t_axL
  a_ayl
  a type equality t_axL ~ a_ayl
  In the first argument of ‘(+)’, namely ‘b’
  In the first argument of ‘drop’, namely ‘(b + 1)’
tcPolyExprNC a_ayl
tcGen
Instantiating
  fromInteger with [a_ayp]
                   [Num a_ayp]
instCallConstraints [$dNum_ayq]
utype_defer
  cobox_ayr
  Integer -> a_ayp
  Integer -> a_ayl
  a type equality Integer -> a_ayp ~ Integer -> a_ayl
  In the second argument of ‘(+)’, namely ‘1’
  In the first argument of ‘drop’, namely ‘(b + 1)’
  In the second argument of ‘(++)’, namely ‘(drop (b + 1) x)’
tcPolyExprNC [a_ayj]
tcGen
utype_defer
  cobox_ays
  a_ay9
  [a_ayj]
  a type equality a_ay9 ~ [a_ayj]
  In the second argument of ‘drop’, namely ‘x’
  In the second argument of ‘(++)’, namely ‘(drop (b + 1) x)’
tcPolyExprNC [a_ay9]
tcGen
utype_defer
  cobox_ayt
  t_alL
  [a_ay9]
  a type equality t_alL ~ [a_ay9]
  In the second argument of ‘map’, namely ‘(selecteq left right a b)’
  In the expression:
    map (\ x -> take b x ++ (drop (b + 1) x)) (selecteq left right a b)
tcPolyExprNC t_alH
tcGen
utype_defer
  cobox_ayu
  t_alR
  t_alH
  a type equality t_alR ~ t_alH
  In the first argument of ‘selecteq’, namely ‘left’
  In the second argument of ‘map’, namely ‘(selecteq left right a b)’
tcPolyExprNC t_alI
tcGen
utype_defer
  cobox_ayv
  t_alS
  t_alI
  a type equality t_alS ~ t_alI
  In the second argument of ‘selecteq’, namely ‘right’
  In the second argument of ‘map’, namely ‘(selecteq left right a b)’
tcPolyExprNC t_alJ
tcGen
utype_defer
  cobox_ayw
  t_ay1
  t_alJ
  a type equality t_ay1 ~ t_alJ
  In the third argument of ‘selecteq’, namely ‘a’
  In the second argument of ‘map’, namely ‘(selecteq left right a b)’
tcPolyExprNC t_alK
tcGen
utype_defer
  cobox_ayx
  t_axL
  t_alK
  a type equality t_axL ~ t_alK
  In the fourth argument of ‘selecteq’, namely ‘b’
  In the second argument of ‘map’, namely ‘(selecteq left right a b)’
addInlinePrags
  join
  []
csb2 [join]
} End of bindings for
  [join]
  NonRecursive
  join t_alR -> t_alS -> t_alT
env2
  [(join, Identifier[join::t_alR -> t_alS -> t_alT, <NotTopLevel>])]
Tc6
env2 []
Tc7
End of tcVectDecls: LIE:
  WC {wc_flat = [W] cobox_alE :: Table
                                 ~ t_alB [" a type equality Table
                                                            ~
                                                            t_alB " FQL.hs:109:17-39] (CNonCanonical)
                [W] cobox_alF :: Table ~ t_alC [" a type equality Table
                                                                  ~
                                                                  t_alC " FQL.hs:109:17-39] (CNonCanonical)
                [W] cobox_alG :: Table ~ t_alD [" a type equality Table
                                                                  ~
                                                                  t_alD " FQL.hs:109:17-39] (CNonCanonical)
                [W] cobox_alM :: Table ~ t_alH [" a type equality Table
                                                                  ~
                                                                  t_alH " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alN :: Table ~ t_alI [" a type equality Table
                                                                  ~
                                                                  t_alI " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alO :: Int ~ t_alJ [" a type equality Int
                                                                ~
                                                                t_alJ " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alP :: Int ~ t_alK [" a type equality Int
                                                                ~
                                                                t_alK " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alQ :: Table ~ t_alL [" a type equality Table
                                                                  ~
                                                                  t_alL " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alU :: Table ~ t_alR [" a type equality Table
                                                                  ~
                                                                  t_alR " FQL.hs:96:9-31] (CNonCanonical)
                [W] cobox_alV :: Table ~ t_alS [" a type equality Table
                                                                  ~
                                                                  t_alS " FQL.hs:96:9-31] (CNonCanonical)
                [W] cobox_alW :: Table ~ t_alT [" a type equality Table
                                                                  ~
                                                                  t_alT " FQL.hs:96:9-31] (CNonCanonical)
                [W] cobox_am1 :: Int ~ t_alX [" a type equality Int
                                                                ~
                                                                t_alX " FQL.hs:89:12-54] (CNonCanonical)
                [W] cobox_am2 :: (String -> Bool) ~ t_alY [" a type equality String
                                                                             -> Bool
                                                                             ~
                                                                             t_alY " FQL.hs:89:12-54] (CNonCanonical)
                [W] cobox_am3 :: [String] ~ t_alZ [" a type equality [String]
                                                                     ~
                                                                     t_alZ " FQL.hs:89:12-54] (CNonCanonical)
                [W] cobox_am4 :: Bool ~ t_am0 [" a type equality Bool
                                                                 ~
                                                                 t_am0 " FQL.hs:89:12-54] (CNonCanonical)
                [W] cobox_am9 :: Int ~ t_am5 [" a type equality Int
                                                                ~
                                                                t_am5 " FQL.hs:85:15-55] (CNonCanonical)
                [W] cobox_ama :: (String -> Bool) ~ t_am6 [" a type equality String
                                                                             -> Bool
                                                                             ~
                                                                             t_am6 " FQL.hs:85:15-55] (CNonCanonical)
                [W] cobox_amb :: Table ~ t_am7 [" a type equality Table
                                                                  ~
                                                                  t_am7 " FQL.hs:85:15-55] (CNonCanonical)
                [W] cobox_amc :: Table ~ t_am8 [" a type equality Table
                                                                  ~
                                                                  t_am8 " FQL.hs:85:15-55] (CNonCanonical)
                [W] cobox_amh :: String ~ t_amd [" a type equality String
                                                                   ~
                                                                   t_amd " FQL.hs:78:11-54] (CNonCanonical)
                [W] cobox_ami :: (String -> Bool) ~ t_ame [" a type equality String
                                                                             -> Bool
                                                                             ~
                                                                             t_ame " FQL.hs:78:11-54] (CNonCanonical)
                [W] cobox_amj :: Table ~ t_amf [" a type equality Table
                                                                  ~
                                                                  t_amf " FQL.hs:78:11-54] (CNonCanonical)
                [W] cobox_amk :: Table ~ t_amg [" a type equality Table
                                                                  ~
                                                                  t_amg " FQL.hs:78:11-54] (CNonCanonical)
                [W] cobox_amo :: [String] ~ t_aml [" a type equality [String]
                                                                     ~
                                                                     t_aml " FQL.hs:70:10-36] (CNonCanonical)
                [W] cobox_amp :: [String] ~ t_amm [" a type equality [String]
                                                                     ~
                                                                     t_amm " FQL.hs:70:10-36] (CNonCanonical)
                [W] cobox_amq :: Int ~ t_amn [" a type equality Int
                                                                ~
                                                                t_amn " FQL.hs:70:10-36] (CNonCanonical)
                [W] cobox_amu :: [String] ~ t_amr [" a type equality [String]
                                                                     ~
                                                                     t_amr " FQL.hs:65:20-48] (CNonCanonical)
                [W] cobox_amv :: [String] ~ t_ams [" a type equality [String]
                                                                     ~
                                                                     t_ams " FQL.hs:65:20-48] (CNonCanonical)
                [W] cobox_amw :: [Int] ~ t_amt [" a type equality [Int]
                                                                  ~
                                                                  t_amt " FQL.hs:65:20-48] (CNonCanonical)
                [W] cobox_amA :: [String] ~ t_amx [" a type equality [String]
                                                                     ~
                                                                     t_amx " FQL.hs:60:12-37] (CNonCanonical)
                [W] cobox_amB :: Table ~ t_amy [" a type equality Table
                                                                  ~
                                                                  t_amy " FQL.hs:60:12-37] (CNonCanonical)
                [W] cobox_amC :: Table ~ t_amz [" a type equality Table
                                                                  ~
                                                                  t_amz " FQL.hs:60:12-37] (CNonCanonical)
                [W] cobox_amG :: [Int] ~ t_amD [" a type equality [Int]
                                                                  ~
                                                                  t_amD " FQL.hs:53:15-41] (CNonCanonical)
                [W] cobox_amH :: [String] ~ t_amE [" a type equality [String]
                                                                     ~
                                                                     t_amE " FQL.hs:53:15-41] (CNonCanonical)
                [W] cobox_amI :: String ~ t_amF [" a type equality String
                                                                   ~
                                                                   t_amF " FQL.hs:53:15-41] (CNonCanonical)
                [W] cobox_amL :: Table ~ t_amJ [" a type equality Table
                                                                  ~
                                                                  t_amJ " FQL.hs:49:17-33] (CNonCanonical)
                [W] cobox_amM :: [String] ~ t_amK [" a type equality [String]
                                                                     ~
                                                                     t_amK " FQL.hs:49:17-33] (CNonCanonical)
                [W] cobox_amP :: Table ~ t_amN [" a type equality Table
                                                                  ~
                                                                  t_amN " FQL.hs:44:17-30] (CNonCanonical)
                [W] cobox_amQ :: [Int] ~ t_amO [" a type equality [Int]
                                                                  ~
                                                                  t_amO " FQL.hs:44:17-30] (CNonCanonical)
                [W] cobox_amT :: Table ~ t_amR [" a type equality Table
                                                                  ~
                                                                  t_amR " FQL.hs:37:21-37] (CNonCanonical)
                [W] cobox_amU :: [String] ~ t_amS [" a type equality [String]
                                                                     ~
                                                                     t_amS " FQL.hs:37:21-37] (CNonCanonical)
                [W] cobox_amX :: Table ~ t_amV [" a type equality Table
                                                                  ~
                                                                  t_amV " FQL.hs:33:15-29] (CNonCanonical)
                [W] cobox_amY :: String ~ t_amW [" a type equality String
                                                                   ~
                                                                   t_amW " FQL.hs:33:15-29] (CNonCanonical)
                [W] cobox_an0 :: Table ~ t_amZ [" a type equality Table
                                                                  ~
                                                                  t_amZ " FQL.hs:20:13-17] (CNonCanonical)
                [W] cobox_an2 :: Table ~ t_an1 [" a type equality Table
                                                                  ~
                                                                  t_an1 " FQL.hs:7:14-18] (CNonCanonical)
                [W] cobox_an6 :: String ~ t_an3 [" a type equality String
                                                                   ~
                                                                   t_an3 " FQL.hs:5:18-41] (CNonCanonical)
                [W] cobox_an7 :: String ~ t_an4 [" a type equality String
                                                                   ~
                                                                   t_an4 " FQL.hs:5:18-41] (CNonCanonical)
                [W] cobox_an8 :: Bool ~ t_an5 [" a type equality Bool
                                                                 ~
                                                                 t_an5 " FQL.hs:5:18-41] (CNonCanonical)
                [W] cobox_anb :: [t_ana] ~ t_alB [" a type equality [t_ana]
                                                                    ~
                                                                    t_alB " FQL.hs:110:15-18] (CNonCanonical)
                [W] cobox_and :: [t_anc] ~ t_alC [" a type equality [t_anc]
                                                                    ~
                                                                    t_alC " FQL.hs:110:22-25] (CNonCanonical)
                [W] cobox_anh :: Int ~ t_ane [" a type equality Int
                                                                ~
                                                                t_ane " FQL.hs:112:40-48] (CNonCanonical)
                [W] cobox_ani :: [t_anc] ~ [a_ang] [" a type equality [t_anc]
                                                                      ~
                                                                      [a_ang] " FQL.hs:112:47-48] (CNonCanonical)
                [W] cobox_anl :: Int ~ t_anj [" a type equality Int
                                                                ~
                                                                t_anj " FQL.hs:111:40-48] (CNonCanonical)
                [W] cobox_anm :: [t_ana] ~ [a_ank] [" a type equality [t_ana]
                                                                      ~
                                                                      [a_ank] " FQL.hs:111:47-48] (CNonCanonical)
                [W] cobox_ant :: [c_ans] ~ t_alD [" a type equality [c_ans]
                                                                    ~
                                                                    t_alD " FQL.hs:110:30-107] (CNonCanonical)
                [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                                 ~ (a_anq -> b_anr -> c_ans) [" a type equality [a_anv]
                                                                                -> [a_anv]
                                                                                -> [a_anv]
                                                                                ~
                                                                                a_anq
                                                                                -> b_anr
                                                                                -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
                [W] cobox_any :: [a_anx] ~ [a_anq] [" a type equality [a_anx]
                                                                      ~
                                                                      [a_anq] " FQL.hs:110:44-76] (CNonCanonical)
                [W] cobox_anz :: t_ana ~ a_anx [" a type equality t_ana
                                                                  ~
                                                                  a_anx " FQL.hs:110:44] (CNonCanonical)
                [W] cobox_anC :: [a_anB] ~ [a_anx] [" a type equality [a_anB]
                                                                      ~
                                                                      [a_anx] " FQL.hs:110:47-75] (CNonCanonical)
                [W] cobox_anH :: [b_anG] ~ [[a_anB]] [" a type equality [b_anG]
                                                                        ~
                                                                        [[a_anB]] " FQL.hs:110:55-74] (CNonCanonical)
                [W] cobox_anK :: (a_anJ -> [a_anJ])
                                 ~ (a_anF -> b_anG) [" a type equality a_anJ -> [a_anJ]
                                                                       ~
                                                                       a_anF
                                                                       -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
                [W] cobox_anL :: t_ane ~ Int [" a type equality t_ane
                                                                ~
                                                                Int " FQL.hs:110:70] (CNonCanonical)
                [W] cobox_anM :: [t_ana] ~ [a_anF] [" a type equality [t_ana]
                                                                      ~
                                                                      [a_anF] " FQL.hs:110:73-74] (CNonCanonical)
                [W] cobox_anO :: [a_anN] ~ [b_anr] [" a type equality [a_anN]
                                                                      ~
                                                                      [b_anr] " FQL.hs:110:80-106] (CNonCanonical)
                [W] cobox_anP :: t_anc ~ a_anN [" a type equality t_anc
                                                                  ~
                                                                  a_anN " FQL.hs:110:80] (CNonCanonical)
                [W] cobox_anR :: [a_anQ] ~ [a_anN] [" a type equality [a_anQ]
                                                                      ~
                                                                      [a_anN] " FQL.hs:110:83-105] (CNonCanonical)
                [W] cobox_anT :: [a_anS] ~ [[a_anQ]] [" a type equality [a_anS]
                                                                        ~
                                                                        [[a_anQ]] " FQL.hs:110:91-104] (CNonCanonical)
                [W] cobox_anU :: t_anj ~ Int [" a type equality t_anj
                                                                ~
                                                                Int " FQL.hs:110:101] (CNonCanonical)
                [W] cobox_anV :: [t_anc] ~ a_anS [" a type equality [t_anc]
                                                                    ~
                                                                    a_anS " FQL.hs:110:103-104] (CNonCanonical)
                [W] cobox_anZ :: t_alY ~ (t_anX -> t_anY) [" a type equality t_alY
                                                                             ~
                                                                             t_anX
                                                                             -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
                [W] cobox_ao0 :: t_anY ~ t_am0 [" a type equality t_anY
                                                                  ~
                                                                  t_am0 " FQL.hs:90:28-48] (CNonCanonical)
                [W] cobox_ao3 :: a_ao2 ~ t_anX [" a type equality a_ao2
                                                                  ~
                                                                  t_anX " FQL.hs:90:34-47] (CNonCanonical)
                [W] cobox_ao4 :: t_alZ ~ [a_ao2] [" a type equality t_alZ
                                                                    ~
                                                                    [a_ao2] " FQL.hs:90:34-37] (CNonCanonical)
                [W] cobox_ao5 :: t_alX ~ Int [" a type equality t_alX
                                                                ~
                                                                Int " FQL.hs:90:42-47] (CNonCanonical)
                [W] cobox_ao9 :: [a_ao8] ~ t_am8 [" a type equality [a_ao8]
                                                                    ~
                                                                    t_am8 " FQL.hs:86:32-65] (CNonCanonical)
                [W] cobox_aoa :: (t_alZ -> t_am0)
                                 ~ (a_ao8 -> Bool) [" a type equality t_alZ -> t_am0
                                                                      ~
                                                                      a_ao8
                                                                      -> Bool " FQL.hs:86:40-58] (CNonCanonical)
                [W] cobox_aob :: t_am5 ~ t_alX [" a type equality t_am5
                                                                  ~
                                                                  t_alX " FQL.hs:86:48-53] (CNonCanonical)
                [W] cobox_aoc :: t_am6 ~ t_alY [" a type equality t_am6
                                                                  ~
                                                                  t_alY " FQL.hs:86:55-58] (CNonCanonical)
                [W] cobox_aod :: t_am7 ~ [a_ao8] [" a type equality t_am7
                                                                    ~
                                                                    [a_ao8] " FQL.hs:86:61-65] (CNonCanonical)
                [W] cobox_aoj :: t_aof
                                 ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                                ~
                                                                                t_aog
                                                                                -> t_aoh
                                                                                -> t_aoi " FQL.hs:56:27-76] (CNonCanonical)
                [W] cobox_aol :: [a_aok] ~ t_aoi [" a type equality [a_aok]
                                                                    ~
                                                                    t_aoi " FQL.hs:56:42-76] (CNonCanonical)
                [W] cobox_aom :: [Char] ~ [a_aok] [" a type equality [Char]
                                                                     ~
                                                                     [a_aok] " FQL.hs:56:42-44] (CNonCanonical)
                [W] cobox_aop :: [a_aoo] ~ [a_aok] [" a type equality [a_aoo]
                                                                      ~
                                                                      [a_aok] " FQL.hs:56:49-76] (CNonCanonical)
                [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                                ~
                                                                Int " FQL.hs:56:54-56] (CNonCanonical)
                [W] cobox_aos :: [a_aor] ~ [a_aoo] [" a type equality [a_aor]
                                                                      ~
                                                                      [a_aoo] " FQL.hs:56:59-75] (CNonCanonical)
                [W] cobox_aot :: t_aoh ~ [a_aor] [" a type equality t_aoh
                                                                    ~
                                                                    [a_aor] " FQL.hs:56:59-61] (CNonCanonical)
                [W] cobox_aow :: [a_aov] ~ [a_aor] [" a type equality [a_aov]
                                                                      ~
                                                                      [a_aor] " FQL.hs:56:66-75] (CNonCanonical)
                [W] cobox_aox :: Char ~ a_aov [" a type equality Char
                                                                 ~
                                                                 a_aov " FQL.hs:56:73-75] (CNonCanonical)
                [W] cobox_aoz :: [a_aoy] ~ t_amF [" a type equality [a_aoy]
                                                                    ~
                                                                    t_amF " FQL.hs:54:21-55] (CNonCanonical)
                [W] cobox_aoB :: [a_aoA] ~ [a_aoy] [" a type equality [a_aoA]
                                                                      ~
                                                                      [a_aoy] " FQL.hs:54:21-48] (CNonCanonical)
                [W] cobox_aoF :: [c_aoE] ~ [[a_aoA]] [" a type equality [c_aoE]
                                                                        ~
                                                                        [[a_aoA]] " FQL.hs:54:29-47] (CNonCanonical)
                [W] cobox_aoG :: t_aof
                                 ~ (a_aoC -> b_aoD -> c_aoE) [" a type equality t_aof
                                                                                ~
                                                                                a_aoC
                                                                                -> b_aoD
                                                                                -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
                [W] cobox_aoH :: t_amD ~ [a_aoC] [" a type equality t_amD
                                                                    ~
                                                                    [a_aoC] " FQL.hs:54:42-43] (CNonCanonical)
                [W] cobox_aoI :: t_amE ~ [b_aoD] [" a type equality t_amE
                                                                    ~
                                                                    [b_aoD] " FQL.hs:54:45-47] (CNonCanonical)
                [W] cobox_aoJ :: [Char] ~ [a_aoy] [" a type equality [Char]
                                                                     ~
                                                                     [a_aoy] " FQL.hs:54:53-55] (CNonCanonical)
                [W] cobox_aoN :: [b_aoM] ~ t_amO [" a type equality [b_aoM]
                                                                    ~
                                                                    t_amO " FQL.hs:45:22-63] (CNonCanonical)
                [W] cobox_aoU :: (a_aoT -> c_aoS)
                                 ~ (a_aoL -> b_aoM) [" a type equality a_aoT -> c_aoS
                                                                       ~
                                                                       a_aoL
                                                                       -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
                [W] $dOrd_arZ :: Ord
                                   a_arY [" a use of ‘maximum’ " FQL.hs:45:27-33] (CNonCanonical)
                [W] cobox_as0 :: ([a_arY] -> a_arY)
                                 ~ (b_aoR -> c_aoS) [" a type equality [a_arY] -> a_arY
                                                                       ~
                                                                       b_aoR
                                                                       -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
                [W] cobox_as3 :: ([a_as1] -> [b_as2])
                                 ~ (a_aoT -> b_aoR) [" a type equality [a_as1] -> [b_as2]
                                                                       ~
                                                                       a_aoT
                                                                       -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
                [W] cobox_as5 :: ([a_as4] -> Int)
                                 ~ (a_as1 -> b_as2) [" a type equality [a_as4] -> Int
                                                                       ~
                                                                       a_as1
                                                                       -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
                [W] cobox_as8 :: [[a_as7]] ~ [a_aoL] [" a type equality [[a_as7]]
                                                                        ~
                                                                        [a_aoL] " FQL.hs:45:48-62] (CNonCanonical)
                [W] cobox_as9 :: t_amN ~ [[a_as7]] [" a type equality t_amN
                                                                      ~
                                                                      [[a_as7]] " FQL.hs:45:58-62] (CNonCanonical)
                [W] cobox_asd :: [b_asc] ~ t_amK [" a type equality [b_asc]
                                                                    ~
                                                                    t_amK " FQL.hs:50:22-64] (CNonCanonical)
                [W] cobox_ase :: (t_amE -> t_amF)
                                 ~ (a_asb -> b_asc) [" a type equality t_amE -> t_amF
                                                                       ~
                                                                       a_asb
                                                                       -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
                [W] cobox_asf :: t_amO ~ t_amD [" a type equality t_amO
                                                                  ~
                                                                  t_amD " FQL.hs:50:39-56] (CNonCanonical)
                [W] cobox_asg :: t_amJ ~ t_amN [" a type equality t_amJ
                                                                  ~
                                                                  t_amN " FQL.hs:50:52-56] (CNonCanonical)
                [W] cobox_ash :: t_amJ ~ [a_asb] [" a type equality t_amJ
                                                                    ~
                                                                    [a_asb] " FQL.hs:50:60-64] (CNonCanonical)
                [W] cobox_ask :: t_amK ~ t_asj [" a type equality t_amK
                                                                  ~
                                                                  t_asj " FQL.hs:40:37-54] (CNonCanonical)
                [W] cobox_asl :: t_amR ~ t_amJ [" a type equality t_amR
                                                                  ~
                                                                  t_amJ " FQL.hs:40:50-54] (CNonCanonical)
                [W] cobox_asr :: b_asq ~ t_asm [" a type equality b_asq
                                                                  ~
                                                                  t_asm " FQL.hs:39:38-104] (CNonCanonical)
                [W] cobox_ast :: ([a_ass] -> [a_ass])
                                 ~ (b_asq -> b_asq) [" a type equality [a_ass] -> [a_ass]
                                                                       ~
                                                                       b_asq
                                                                       -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
                [W] cobox_asv :: [a_asu] ~ [a_ass] [" a type equality [a_asu]
                                                                      ~
                                                                      [a_ass] " FQL.hs:39:56-77] (CNonCanonical)
                [W] cobox_asw :: [Char] ~ [a_asu] [" a type equality [Char]
                                                                     ~
                                                                     [a_asu] " FQL.hs:39:56-58] (CNonCanonical)
                [W] cobox_asy :: [a_asx] ~ [a_asu] [" a type equality [a_asx]
                                                                      ~
                                                                      [a_asu] " FQL.hs:39:63-77] (CNonCanonical)
                [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                                ~
                                                                Int " FQL.hs:39:73] (CNonCanonical)
                [W] cobox_asA :: Char ~ a_asx [" a type equality Char
                                                                 ~
                                                                 a_asx " FQL.hs:39:75-77] (CNonCanonical)
                [W] cobox_asB :: [Char] ~ b_asq [" a type equality [Char]
                                                                   ~
                                                                   b_asq " FQL.hs:39:81-83] (CNonCanonical)
                [W] cobox_asC :: t_amO ~ [a_asp] [" a type equality t_amO
                                                                    ~
                                                                    [a_asp] " FQL.hs:39:86-103] (CNonCanonical)
                [W] cobox_asD :: t_amR ~ t_amN [" a type equality t_amR
                                                                  ~
                                                                  t_amN " FQL.hs:39:99-103] (CNonCanonical)
                [W] cobox_asF :: [a_asE] ~ t_amS [" a type equality [a_asE]
                                                                    ~
                                                                    t_amS " FQL.hs:38:26-65] (CNonCanonical)
                [W] cobox_asG :: t_asm ~ a_asE [" a type equality t_asm
                                                                  ~
                                                                  a_asE " FQL.hs:38:26-28] (CNonCanonical)
                [W] cobox_asI :: [a_asH] ~ [a_asE] [" a type equality [a_asH]
                                                                      ~
                                                                      [a_asE] " FQL.hs:38:32-65] (CNonCanonical)
                [W] cobox_asL :: a_asK ~ a_asH [" a type equality a_asK
                                                                  ~
                                                                  a_asH " FQL.hs:38:32-39] (CNonCanonical)
                [W] cobox_asM :: t_asj ~ [a_asK] [" a type equality t_asj
                                                                    ~
                                                                    [a_asK] " FQL.hs:38:37-38] (CNonCanonical)
                [W] cobox_asO :: [a_asN] ~ [a_asH] [" a type equality [a_asN]
                                                                      ~
                                                                      [a_asH] " FQL.hs:38:43-65] (CNonCanonical)
                [W] cobox_asP :: t_asm ~ a_asN [" a type equality t_asm
                                                                  ~
                                                                  a_asN " FQL.hs:38:43-45] (CNonCanonical)
                [W] cobox_asR :: [a_asQ] ~ [a_asN] [" a type equality [a_asQ]
                                                                      ~
                                                                      [a_asN] " FQL.hs:38:49-65] (CNonCanonical)
                [W] cobox_asU :: [a_asT] ~ [a_asQ] [" a type equality [a_asT]
                                                                      ~
                                                                      [a_asQ] " FQL.hs:38:49-56] (CNonCanonical)
                [W] cobox_asV :: t_asj ~ [a_asT] [" a type equality t_asj
                                                                    ~
                                                                    [a_asT] " FQL.hs:38:54-55] (CNonCanonical)
                [W] cobox_asW :: t_asm ~ a_asQ [" a type equality t_asm
                                                                  ~
                                                                  a_asQ " FQL.hs:38:62-64] (CNonCanonical)
                [W] cobox_at1 :: (a_at0 -> c_asZ)
                                 ~ (t_amV -> t_amW) [" a type equality a_at0 -> c_asZ
                                                                       ~
                                                                       t_amV
                                                                       -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
                [W] cobox_at2 :: ([String] -> String)
                                 ~ (b_asY -> c_asZ) [" a type equality [String] -> String
                                                                       ~
                                                                       b_asY
                                                                       -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
                [W] cobox_at3 :: (t_amR -> t_amS)
                                 ~ (a_at0 -> b_asY) [" a type equality t_amR -> t_amS
                                                                       ~
                                                                       a_at0
                                                                       -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
                [W] cobox_at6 :: [t_at5] ~ t_amZ [" a type equality [t_at5]
                                                                    ~
                                                                    t_amZ " FQL.hs:(22,3)-(29,3)] (CNonCanonical)
                [W] cobox_at8 :: [t_at7] ~ t_at5 [" a type equality [t_at7]
                                                                    ~
                                                                    t_at5 " FQL.hs:22:5-44] (CNonCanonical)
                [W] cobox_at9 :: [Char] ~ t_at7 [" a type equality [Char]
                                                                   ~
                                                                   t_at7 " FQL.hs:22:6-27] (CNonCanonical)
                [W] cobox_ata :: [Char] ~ t_at7 [" a type equality [Char]
                                                                   ~
                                                                   t_at7 " FQL.hs:22:30-35] (CNonCanonical)
                [W] cobox_atb :: [Char] ~ t_at7 [" a type equality [Char]
                                                                   ~
                                                                   t_at7 " FQL.hs:22:38-43] (CNonCanonical)
                [W] cobox_atd :: [t_atc] ~ t_at5 [" a type equality [t_atc]
                                                                    ~
                                                                    t_at5 " FQL.hs:23:5-56] (CNonCanonical)
                [W] cobox_ate :: [Char] ~ t_atc [" a type equality [Char]
                                                                   ~
                                                                   t_atc " FQL.hs:23:6-31] (CNonCanonical)
                [W] cobox_atf :: [Char] ~ t_atc [" a type equality [Char]
                                                                   ~
                                                                   t_atc " FQL.hs:23:34-44] (CNonCanonical)
                [W] cobox_atg :: [Char] ~ t_atc [" a type equality [Char]
                                                                   ~
                                                                   t_atc " FQL.hs:23:47-55] (CNonCanonical)
                [W] cobox_ati :: [t_ath] ~ t_at5 [" a type equality [t_ath]
                                                                    ~
                                                                    t_at5 " FQL.hs:24:5-46] (CNonCanonical)
                [W] cobox_atj :: [Char] ~ t_ath [" a type equality [Char]
                                                                   ~
                                                                   t_ath " FQL.hs:24:6-25] (CNonCanonical)
                [W] cobox_atk :: [Char] ~ t_ath [" a type equality [Char]
                                                                   ~
                                                                   t_ath " FQL.hs:24:28-37] (CNonCanonical)
                [W] cobox_atl :: [Char] ~ t_ath [" a type equality [Char]
                                                                   ~
                                                                   t_ath " FQL.hs:24:40-45] (CNonCanonical)
                [W] cobox_atn :: [t_atm] ~ t_at5 [" a type equality [t_atm]
                                                                    ~
                                                                    t_at5 " FQL.hs:25:5-51] (CNonCanonical)
                [W] cobox_ato :: [Char] ~ t_atm [" a type equality [Char]
                                                                   ~
                                                                   t_atm " FQL.hs:25:6-25] (CNonCanonical)
                [W] cobox_atp :: [Char] ~ t_atm [" a type equality [Char]
                                                                   ~
                                                                   t_atm " FQL.hs:25:28-37] (CNonCanonical)
                [W] cobox_atq :: [Char] ~ t_atm [" a type equality [Char]
                                                                   ~
                                                                   t_atm " FQL.hs:25:40-50] (CNonCanonical)
                [W] cobox_ats :: [t_atr] ~ t_at5 [" a type equality [t_atr]
                                                                    ~
                                                                    t_at5 " FQL.hs:26:5-59] (CNonCanonical)
                [W] cobox_att :: [Char] ~ t_atr [" a type equality [Char]
                                                                   ~
                                                                   t_atr " FQL.hs:26:6-25] (CNonCanonical)
                [W] cobox_atu :: [Char] ~ t_atr [" a type equality [Char]
                                                                   ~
                                                                   t_atr " FQL.hs:26:28-45] (CNonCanonical)
                [W] cobox_atv :: [Char] ~ t_atr [" a type equality [Char]
                                                                   ~
                                                                   t_atr " FQL.hs:26:48-58] (CNonCanonical)
                [W] cobox_atx :: [t_atw] ~ t_at5 [" a type equality [t_atw]
                                                                    ~
                                                                    t_at5 " FQL.hs:27:5-66] (CNonCanonical)
                [W] cobox_aty :: [Char] ~ t_atw [" a type equality [Char]
                                                                   ~
                                                                   t_atw " FQL.hs:27:6-32] (CNonCanonical)
                [W] cobox_atz :: [Char] ~ t_atw [" a type equality [Char]
                                                                   ~
                                                                   t_atw " FQL.hs:27:35-52] (CNonCanonical)
                [W] cobox_atA :: [Char] ~ t_atw [" a type equality [Char]
                                                                   ~
                                                                   t_atw " FQL.hs:27:55-65] (CNonCanonical)
                [W] cobox_atC :: [t_atB] ~ t_at5 [" a type equality [t_atB]
                                                                    ~
                                                                    t_at5 " FQL.hs:28:5-63] (CNonCanonical)
                [W] cobox_atD :: [Char] ~ t_atB [" a type equality [Char]
                                                                   ~
                                                                   t_atB " FQL.hs:28:6-40] (CNonCanonical)
                [W] cobox_atE :: [Char] ~ t_atB [" a type equality [Char]
                                                                   ~
                                                                   t_atB " FQL.hs:28:43-50] (CNonCanonical)
                [W] cobox_atF :: [Char] ~ t_atB [" a type equality [Char]
                                                                   ~
                                                                   t_atB " FQL.hs:28:53-62] (CNonCanonical)
                [W] cobox_atI :: [t_atH] ~ t_an1 [" a type equality [t_atH]
                                                                    ~
                                                                    t_an1 " FQL.hs:(9,3)-(18,3)] (CNonCanonical)
                [W] cobox_atK :: [t_atJ] ~ t_atH [" a type equality [t_atJ]
                                                                    ~
                                                                    t_atH " FQL.hs:9:5-40] (CNonCanonical)
                [W] cobox_atL :: [Char] ~ t_atJ [" a type equality [Char]
                                                                   ~
                                                                   t_atJ " FQL.hs:9:6-15] (CNonCanonical)
                [W] cobox_atM :: [Char] ~ t_atJ [" a type equality [Char]
                                                                   ~
                                                                   t_atJ " FQL.hs:9:18-39] (CNonCanonical)
                [W] cobox_atO :: [t_atN] ~ t_atH [" a type equality [t_atN]
                                                                    ~
                                                                    t_atH " FQL.hs:10:5-42] (CNonCanonical)
                [W] cobox_atP :: [Char] ~ t_atN [" a type equality [Char]
                                                                   ~
                                                                   t_atN " FQL.hs:10:6-13] (CNonCanonical)
                [W] cobox_atQ :: [Char] ~ t_atN [" a type equality [Char]
                                                                   ~
                                                                   t_atN " FQL.hs:10:16-41] (CNonCanonical)
                [W] cobox_atS :: [t_atR] ~ t_atH [" a type equality [t_atR]
                                                                    ~
                                                                    t_atH " FQL.hs:11:5-33] (CNonCanonical)
                [W] cobox_atT :: [Char] ~ t_atR [" a type equality [Char]
                                                                   ~
                                                                   t_atR " FQL.hs:11:6-10] (CNonCanonical)
                [W] cobox_atU :: [Char] ~ t_atR [" a type equality [Char]
                                                                   ~
                                                                   t_atR " FQL.hs:11:13-32] (CNonCanonical)
                [W] cobox_atW :: [t_atV] ~ t_atH [" a type equality [t_atV]
                                                                    ~
                                                                    t_atH " FQL.hs:12:5-33] (CNonCanonical)
                [W] cobox_atX :: [Char] ~ t_atV [" a type equality [Char]
                                                                   ~
                                                                   t_atV " FQL.hs:12:6-10] (CNonCanonical)
                [W] cobox_atY :: [Char] ~ t_atV [" a type equality [Char]
                                                                   ~
                                                                   t_atV " FQL.hs:12:13-32] (CNonCanonical)
                [W] cobox_au0 :: [t_atZ] ~ t_atH [" a type equality [t_atZ]
                                                                    ~
                                                                    t_atH " FQL.hs:13:5-34] (CNonCanonical)
                [W] cobox_au1 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                   ~
                                                                   t_atZ " FQL.hs:13:6-11] (CNonCanonical)
                [W] cobox_au2 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                   ~
                                                                   t_atZ " FQL.hs:13:14-33] (CNonCanonical)
                [W] cobox_au4 :: [t_au3] ~ t_atH [" a type equality [t_au3]
                                                                    ~
                                                                    t_atH " FQL.hs:14:5-38] (CNonCanonical)
                [W] cobox_au5 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                   ~
                                                                   t_au3 " FQL.hs:14:6-15] (CNonCanonical)
                [W] cobox_au6 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                   ~
                                                                   t_au3 " FQL.hs:14:18-37] (CNonCanonical)
                [W] cobox_au8 :: [t_au7] ~ t_atH [" a type equality [t_au7]
                                                                    ~
                                                                    t_atH " FQL.hs:15:5-46] (CNonCanonical)
                [W] cobox_au9 :: [Char] ~ t_au7 [" a type equality [Char]
                                                                   ~
                                                                   t_au7 " FQL.hs:15:6-16] (CNonCanonical)
                [W] cobox_aua :: [Char] ~ t_au7 [" a type equality [Char]
                                                                   ~
                                                                   t_au7 " FQL.hs:15:19-45] (CNonCanonical)
                [W] cobox_auc :: [t_aub] ~ t_atH [" a type equality [t_aub]
                                                                    ~
                                                                    t_atH " FQL.hs:16:5-54] (CNonCanonical)
                [W] cobox_aud :: [Char] ~ t_aub [" a type equality [Char]
                                                                   ~
                                                                   t_aub " FQL.hs:16:6-16] (CNonCanonical)
                [W] cobox_aue :: [Char] ~ t_aub [" a type equality [Char]
                                                                   ~
                                                                   t_aub " FQL.hs:16:19-53] (CNonCanonical)
                [W] cobox_aug :: [t_auf] ~ t_atH [" a type equality [t_auf]
                                                                    ~
                                                                    t_atH " FQL.hs:17:5-48] (CNonCanonical)
                [W] cobox_auh :: [Char] ~ t_auf [" a type equality [Char]
                                                                   ~
                                                                   t_auf " FQL.hs:17:6-10] (CNonCanonical)
                [W] cobox_aui :: [Char] ~ t_auf [" a type equality [Char]
                                                                   ~
                                                                   t_auf " FQL.hs:17:13-47] (CNonCanonical)
                [W] cobox_aul :: a_auk
                                 ~ (t_an3 -> t_an4 -> t_an5) [" a type equality a_auk
                                                                                ~
                                                                                t_an3
                                                                                -> t_an4
                                                                                -> t_an5 " FQL.hs:6:12-20] (CNonCanonical)
                [W] cobox_auo :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                    ~
                                                                    t_amm " FQL.hs:71:13-18] (CNonCanonical)
                [W] cobox_aup :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " FQL.hs:71:23-49] (CNonCanonical)
                [W] cobox_aus :: [b_aur] ~ [Bool] [" a type equality [b_aur]
                                                                     ~
                                                                     [Bool] " FQL.hs:71:27-48] (CNonCanonical)
                [W] cobox_aut :: (t_an4 -> t_an5)
                                 ~ (a_auq -> b_aur) [" a type equality t_an4 -> t_an5
                                                                       ~
                                                                       a_auq
                                                                       -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
                [W] cobox_auu :: t_aun ~ t_an3 [" a type equality t_aun
                                                                  ~
                                                                  t_an3 " FQL.hs:71:41-42] (CNonCanonical)
                [W] cobox_auv :: t_aml ~ [a_auq] [" a type equality t_aml
                                                                    ~
                                                                    [a_auq] " FQL.hs:71:45-48] (CNonCanonical)
                [W] $dNum_awD :: Num
                                   a_awC [" the literal ‘0’ " FQL.hs:71:53] (CNonCanonical)
                [W] cobox_awE :: (Integer -> a_awC)
                                 ~ (Integer -> t_amn) [" a type equality Integer -> a_awC
                                                                         ~
                                                                         Integer
                                                                         -> t_amn " FQL.hs:71:53] (CNonCanonical)
                [W] cobox_awF :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " FQL.hs:72:23-31] (CNonCanonical)
                [W] $dNum_awH :: Num
                                   a_awG [" a use of ‘+’ " FQL.hs:72:55] (CNonCanonical)
                [W] cobox_awI :: a_awG ~ t_amn [" a type equality a_awG
                                                                  ~
                                                                  t_amn " FQL.hs:72:53-70] (CNonCanonical)
                [W] $dNum_awK :: Num
                                   a_awJ [" the literal ‘1’ " FQL.hs:72:53] (CNonCanonical)
                [W] cobox_awL :: (Integer -> a_awJ)
                                 ~ (Integer -> a_awG) [" a type equality Integer -> a_awJ
                                                                         ~
                                                                         Integer
                                                                         -> a_awG " FQL.hs:72:53] (CNonCanonical)
                [W] cobox_awM :: t_amn ~ a_awG [" a type equality t_amn
                                                                  ~
                                                                  a_awG " FQL.hs:72:57-70] (CNonCanonical)
                [W] cobox_awN :: t_aml ~ t_aml [" a type equality t_aml
                                                                  ~
                                                                  t_aml " FQL.hs:72:63-66] (CNonCanonical)
                [W] cobox_awO :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                    ~
                                                                    t_amm " FQL.hs:72:68-70] (CNonCanonical)
                [W] cobox_awS :: [b_awR] ~ t_amt [" a type equality [b_awR]
                                                                    ~
                                                                    t_amt " FQL.hs:66:34-68] (CNonCanonical)
                [W] cobox_awT :: t_amn ~ b_awR [" a type equality t_amn
                                                                  ~
                                                                  b_awR " FQL.hs:66:44-62] (CNonCanonical)
                [W] cobox_awV :: [t_awU] ~ t_aml [" a type equality [t_awU]
                                                                    ~
                                                                    t_aml " FQL.hs:66:50-52] (CNonCanonical)
                [W] cobox_awW :: a_awQ ~ t_awU [" a type equality a_awQ
                                                                  ~
                                                                  t_awU " FQL.hs:66:51] (CNonCanonical)
                [W] cobox_awX :: t_amr ~ t_amm [" a type equality t_amr
                                                                  ~
                                                                  t_amm " FQL.hs:66:54-62] (CNonCanonical)
                [W] cobox_awY :: t_ams ~ [a_awQ] [" a type equality t_ams
                                                                    ~
                                                                    [a_awQ] " FQL.hs:66:65-68] (CNonCanonical)
                [W] cobox_ax1 :: [[a_ax0]] ~ t_amz [" a type equality [[a_ax0]]
                                                                      ~
                                                                      t_amz " FQL.hs:61:23-96] (CNonCanonical)
                [W] cobox_ax4 :: [b_ax3] ~ [[a_ax0]] [" a type equality [b_ax3]
                                                                        ~
                                                                        [[a_ax0]] " FQL.hs:61:34-95] (CNonCanonical)
                [W] cobox_ax6 :: (Int -> a_ax5)
                                 ~ (a_ax2 -> b_ax3) [" a type equality Int -> a_ax5
                                                                       ~
                                                                       a_ax2
                                                                       -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
                [W] cobox_ax8 :: [[a_ax7]] ~ [a_ax5] [" a type equality [[a_ax7]]
                                                                        ~
                                                                        [a_ax5] " FQL.hs:61:40-54] (CNonCanonical)
                [W] cobox_ax9 :: t_amy ~ [[a_ax7]] [" a type equality t_amy
                                                                      ~
                                                                      [[a_ax7]] " FQL.hs:61:50-54] (CNonCanonical)
                [W] cobox_axa :: t_amt ~ [a_ax2] [" a type equality t_amt
                                                                    ~
                                                                    [a_ax2] " FQL.hs:61:62-94] (CNonCanonical)
                [W] cobox_axc :: a_axb ~ t_amr [" a type equality a_axb
                                                                  ~
                                                                  t_amr " FQL.hs:61:79-88] (CNonCanonical)
                [W] cobox_axd :: t_amy ~ [a_axb] [" a type equality t_amy
                                                                    ~
                                                                    [a_axb] " FQL.hs:61:84-88] (CNonCanonical)
                [W] cobox_axe :: t_amx ~ t_ams [" a type equality t_amx
                                                                  ~
                                                                  t_ams " FQL.hs:61:91-94] (CNonCanonical)
                [W] cobox_axh :: [a_axg] ~ t_amg [" a type equality [a_axg]
                                                                    ~
                                                                    t_amg " FQL.hs:79:28-100] (CNonCanonical)
                [W] cobox_axj :: a_axi ~ a_axg [" a type equality a_axi
                                                                  ~
                                                                  a_axg " FQL.hs:79:29-38] (CNonCanonical)
                [W] cobox_axk :: t_amf ~ [a_axi] [" a type equality t_amf
                                                                    ~
                                                                    [a_axi] " FQL.hs:79:34-38] (CNonCanonical)
                [W] cobox_axl :: t_am8 ~ [a_axg] [" a type equality t_am8
                                                                    ~
                                                                    [a_axg] " FQL.hs:79:44-99] (CNonCanonical)
                [W] cobox_axm :: t_amn ~ t_am5 [" a type equality t_amn
                                                                  ~
                                                                  t_am5 " FQL.hs:79:56-80] (CNonCanonical)
                [W] cobox_axo :: a_axn ~ t_aml [" a type equality a_axn
                                                                  ~
                                                                  t_aml " FQL.hs:79:63-72] (CNonCanonical)
                [W] cobox_axp :: t_amf ~ [a_axn] [" a type equality t_amf
                                                                    ~
                                                                    [a_axn] " FQL.hs:79:68-72] (CNonCanonical)
                [W] cobox_axq :: t_amd ~ t_amm [" a type equality t_amd
                                                                  ~
                                                                  t_amm " FQL.hs:79:75-80] (CNonCanonical)
                [W] cobox_axr :: t_ame ~ t_am6 [" a type equality t_ame
                                                                  ~
                                                                  t_am6 " FQL.hs:79:83-86] (CNonCanonical)
                [W] cobox_axt :: [a_axs] ~ t_am7 [" a type equality [a_axs]
                                                                    ~
                                                                    t_am7 " FQL.hs:79:89-98] (CNonCanonical)
                [W] cobox_axu :: t_amf ~ [a_axs] [" a type equality t_amf
                                                                    ~
                                                                    [a_axs] " FQL.hs:79:94-98] (CNonCanonical)
                [W] cobox_axx :: [a_axw] ~ t_alL [" a type equality [a_axw]
                                                                    ~
                                                                    t_alL " FQL.hs:105:27-88] (CNonCanonical)
                [W] cobox_axy :: t_an5 ~ Bool [" a type equality t_an5
                                                                 ~
                                                                 Bool " FQL.hs:105:40-61] (CNonCanonical)
                [W] cobox_axA :: a_axz ~ t_an3 [" a type equality a_axz
                                                                  ~
                                                                  t_an3 " FQL.hs:105:50-53] (CNonCanonical)
                [W] cobox_axB :: a_axw ~ [a_axz] [" a type equality a_axw
                                                                    ~
                                                                    [a_axz] " FQL.hs:105:50] (CNonCanonical)
                [W] cobox_axC :: t_alJ ~ Int [" a type equality t_alJ
                                                                ~
                                                                Int " FQL.hs:105:53] (CNonCanonical)
                [W] cobox_axE :: a_axD ~ t_an4 [" a type equality a_axD
                                                                  ~
                                                                  t_an4 " FQL.hs:105:57-60] (CNonCanonical)
                [W] cobox_axF :: a_axw ~ [a_axD] [" a type equality a_axw
                                                                    ~
                                                                    [a_axD] " FQL.hs:105:57] (CNonCanonical)
                [W] cobox_axG :: t_alK ~ Int [" a type equality t_alK
                                                                ~
                                                                Int " FQL.hs:105:60] (CNonCanonical)
                [W] cobox_axH :: t_alD ~ [a_axw] [" a type equality t_alD
                                                                    ~
                                                                    [a_axw] " FQL.hs:105:65-87] (CNonCanonical)
                [W] cobox_axI :: t_alH ~ t_alB [" a type equality t_alH
                                                                  ~
                                                                  t_alB " FQL.hs:105:78-81] (CNonCanonical)
                [W] cobox_axJ :: t_alI ~ t_alC [" a type equality t_alI
                                                                  ~
                                                                  t_alC " FQL.hs:105:83-87] (CNonCanonical)
                [W] $dNum_axN :: Num
                                   a_axM [" a use of ‘+’ " FQL.hs:99:62] (CNonCanonical)
                [W] cobox_axO :: a_axM ~ t_axL [" a type equality a_axM
                                                                  ~
                                                                  t_axL " FQL.hs:99:30-81] (CNonCanonical)
                [W] cobox_axP :: t_amn ~ a_axM [" a type equality t_amn
                                                                  ~
                                                                  a_axM " FQL.hs:99:30-60] (CNonCanonical)
                [W] cobox_axR :: a_axQ ~ t_aml [" a type equality a_axQ
                                                                  ~
                                                                  t_aml " FQL.hs:99:37-45] (CNonCanonical)
                [W] cobox_axS :: t_alR ~ [a_axQ] [" a type equality t_alR
                                                                    ~
                                                                    [a_axQ] " FQL.hs:99:42-45] (CNonCanonical)
                [W] cobox_axU :: a_axT ~ t_amm [" a type equality a_axT
                                                                  ~
                                                                  t_amm " FQL.hs:99:50-59] (CNonCanonical)
                [W] cobox_axV :: t_alS ~ [a_axT] [" a type equality t_alS
                                                                    ~
                                                                    [a_axT] " FQL.hs:99:55-59] (CNonCanonical)
                [W] cobox_axX :: Int ~ a_axM [" a type equality Int
                                                                ~
                                                                a_axM " FQL.hs:99:64-81] (CNonCanonical)
                [W] cobox_axZ :: a_axY ~ [a_axW] [" a type equality a_axY
                                                                    ~
                                                                    [a_axW] " FQL.hs:99:72-80] (CNonCanonical)
                [W] cobox_ay0 :: t_alR ~ [a_axY] [" a type equality t_alR
                                                                    ~
                                                                    [a_axY] " FQL.hs:99:77-80] (CNonCanonical)
                [W] cobox_ay2 :: t_amn ~ t_ay1 [" a type equality t_amn
                                                                  ~
                                                                  t_ay1 " FQL.hs:98:30-59] (CNonCanonical)
                [W] cobox_ay4 :: a_ay3 ~ t_aml [" a type equality a_ay3
                                                                  ~
                                                                  t_aml " FQL.hs:98:37-46] (CNonCanonical)
                [W] cobox_ay5 :: t_alS ~ [a_ay3] [" a type equality t_alS
                                                                    ~
                                                                    [a_ay3] " FQL.hs:98:42-46] (CNonCanonical)
                [W] cobox_ay7 :: a_ay6 ~ t_amm [" a type equality a_ay6
                                                                  ~
                                                                  t_amm " FQL.hs:98:50-58] (CNonCanonical)
                [W] cobox_ay8 :: t_alR ~ [a_ay6] [" a type equality t_alR
                                                                    ~
                                                                    [a_ay6] " FQL.hs:98:55-58] (CNonCanonical)
                [W] cobox_ayb :: [b_aya] ~ t_alT [" a type equality [b_aya]
                                                                    ~
                                                                    t_alT " FQL.hs:97:20-82] (CNonCanonical)
                [W] cobox_ayd :: [a_ayc] ~ b_aya [" a type equality [a_ayc]
                                                                    ~
                                                                    b_aya " FQL.hs:97:30-55] (CNonCanonical)
                [W] cobox_ayf :: [a_aye] ~ [a_ayc] [" a type equality [a_aye]
                                                                      ~
                                                                      [a_ayc] " FQL.hs:97:30-37] (CNonCanonical)
                [W] cobox_ayg :: t_axL ~ Int [" a type equality t_axL
                                                                ~
                                                                Int " FQL.hs:97:35] (CNonCanonical)
                [W] cobox_ayh :: a_ay9 ~ [a_aye] [" a type equality a_ay9
                                                                    ~
                                                                    [a_aye] " FQL.hs:97:37] (CNonCanonical)
                [W] cobox_ayk :: [a_ayj] ~ [a_ayc] [" a type equality [a_ayj]
                                                                      ~
                                                                      [a_ayc] " FQL.hs:97:43-54] (CNonCanonical)
                [W] $dNum_aym :: Num
                                   a_ayl [" a use of ‘+’ " FQL.hs:97:50] (CNonCanonical)
                [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                                ~
                                                                Int " FQL.hs:97:49-51] (CNonCanonical)
                [W] cobox_ayo :: t_axL ~ a_ayl [" a type equality t_axL
                                                                  ~
                                                                  a_ayl " FQL.hs:97:49] (CNonCanonical)
                [W] $dNum_ayq :: Num
                                   a_ayp [" the literal ‘1’ " FQL.hs:97:51] (CNonCanonical)
                [W] cobox_ayr :: (Integer -> a_ayp)
                                 ~ (Integer -> a_ayl) [" a type equality Integer -> a_ayp
                                                                         ~
                                                                         Integer
                                                                         -> a_ayl " FQL.hs:97:51] (CNonCanonical)
                [W] cobox_ays :: a_ay9 ~ [a_ayj] [" a type equality a_ay9
                                                                    ~
                                                                    [a_ayj] " FQL.hs:97:54] (CNonCanonical)
                [W] cobox_ayt :: t_alL ~ [a_ay9] [" a type equality t_alL
                                                                    ~
                                                                    [a_ay9] " FQL.hs:97:59-81] (CNonCanonical)
                [W] cobox_ayu :: t_alR ~ t_alH [" a type equality t_alR
                                                                  ~
                                                                  t_alH " FQL.hs:97:68-71] (CNonCanonical)
                [W] cobox_ayv :: t_alS ~ t_alI [" a type equality t_alS
                                                                  ~
                                                                  t_alI " FQL.hs:97:73-77] (CNonCanonical)
                [W] cobox_ayw :: t_ay1 ~ t_alJ [" a type equality t_ay1
                                                                  ~
                                                                  t_alJ " FQL.hs:97:79] (CNonCanonical)
                [W] cobox_ayx :: t_axL ~ t_alK [" a type equality t_axL
                                                                  ~
                                                                  t_alK " FQL.hs:97:81] (CNonCanonical)}
Tc7a
checkMain not Main FQL
Tc8
simplifyTop {
  wanted =  WC {wc_flat = [W] cobox_alE :: Table
                                           ~ t_alB [" a type equality Table
                                                                      ~
                                                                      t_alB " FQL.hs:109:17-39] (CNonCanonical)
                          [W] cobox_alF :: Table ~ t_alC [" a type equality Table
                                                                            ~
                                                                            t_alC " FQL.hs:109:17-39] (CNonCanonical)
                          [W] cobox_alG :: Table ~ t_alD [" a type equality Table
                                                                            ~
                                                                            t_alD " FQL.hs:109:17-39] (CNonCanonical)
                          [W] cobox_alM :: Table ~ t_alH [" a type equality Table
                                                                            ~
                                                                            t_alH " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alN :: Table ~ t_alI [" a type equality Table
                                                                            ~
                                                                            t_alI " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alO :: Int ~ t_alJ [" a type equality Int
                                                                          ~
                                                                          t_alJ " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alP :: Int ~ t_alK [" a type equality Int
                                                                          ~
                                                                          t_alK " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alQ :: Table ~ t_alL [" a type equality Table
                                                                            ~
                                                                            t_alL " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alU :: Table ~ t_alR [" a type equality Table
                                                                            ~
                                                                            t_alR " FQL.hs:96:9-31] (CNonCanonical)
                          [W] cobox_alV :: Table ~ t_alS [" a type equality Table
                                                                            ~
                                                                            t_alS " FQL.hs:96:9-31] (CNonCanonical)
                          [W] cobox_alW :: Table ~ t_alT [" a type equality Table
                                                                            ~
                                                                            t_alT " FQL.hs:96:9-31] (CNonCanonical)
                          [W] cobox_am1 :: Int ~ t_alX [" a type equality Int
                                                                          ~
                                                                          t_alX " FQL.hs:89:12-54] (CNonCanonical)
                          [W] cobox_am2 :: (String -> Bool) ~ t_alY [" a type equality String
                                                                                       -> Bool
                                                                                       ~
                                                                                       t_alY " FQL.hs:89:12-54] (CNonCanonical)
                          [W] cobox_am3 :: [String] ~ t_alZ [" a type equality [String]
                                                                               ~
                                                                               t_alZ " FQL.hs:89:12-54] (CNonCanonical)
                          [W] cobox_am4 :: Bool ~ t_am0 [" a type equality Bool
                                                                           ~
                                                                           t_am0 " FQL.hs:89:12-54] (CNonCanonical)
                          [W] cobox_am9 :: Int ~ t_am5 [" a type equality Int
                                                                          ~
                                                                          t_am5 " FQL.hs:85:15-55] (CNonCanonical)
                          [W] cobox_ama :: (String -> Bool) ~ t_am6 [" a type equality String
                                                                                       -> Bool
                                                                                       ~
                                                                                       t_am6 " FQL.hs:85:15-55] (CNonCanonical)
                          [W] cobox_amb :: Table ~ t_am7 [" a type equality Table
                                                                            ~
                                                                            t_am7 " FQL.hs:85:15-55] (CNonCanonical)
                          [W] cobox_amc :: Table ~ t_am8 [" a type equality Table
                                                                            ~
                                                                            t_am8 " FQL.hs:85:15-55] (CNonCanonical)
                          [W] cobox_amh :: String ~ t_amd [" a type equality String
                                                                             ~
                                                                             t_amd " FQL.hs:78:11-54] (CNonCanonical)
                          [W] cobox_ami :: (String -> Bool) ~ t_ame [" a type equality String
                                                                                       -> Bool
                                                                                       ~
                                                                                       t_ame " FQL.hs:78:11-54] (CNonCanonical)
                          [W] cobox_amj :: Table ~ t_amf [" a type equality Table
                                                                            ~
                                                                            t_amf " FQL.hs:78:11-54] (CNonCanonical)
                          [W] cobox_amk :: Table ~ t_amg [" a type equality Table
                                                                            ~
                                                                            t_amg " FQL.hs:78:11-54] (CNonCanonical)
                          [W] cobox_amo :: [String] ~ t_aml [" a type equality [String]
                                                                               ~
                                                                               t_aml " FQL.hs:70:10-36] (CNonCanonical)
                          [W] cobox_amp :: [String] ~ t_amm [" a type equality [String]
                                                                               ~
                                                                               t_amm " FQL.hs:70:10-36] (CNonCanonical)
                          [W] cobox_amq :: Int ~ t_amn [" a type equality Int
                                                                          ~
                                                                          t_amn " FQL.hs:70:10-36] (CNonCanonical)
                          [W] cobox_amu :: [String] ~ t_amr [" a type equality [String]
                                                                               ~
                                                                               t_amr " FQL.hs:65:20-48] (CNonCanonical)
                          [W] cobox_amv :: [String] ~ t_ams [" a type equality [String]
                                                                               ~
                                                                               t_ams " FQL.hs:65:20-48] (CNonCanonical)
                          [W] cobox_amw :: [Int] ~ t_amt [" a type equality [Int]
                                                                            ~
                                                                            t_amt " FQL.hs:65:20-48] (CNonCanonical)
                          [W] cobox_amA :: [String] ~ t_amx [" a type equality [String]
                                                                               ~
                                                                               t_amx " FQL.hs:60:12-37] (CNonCanonical)
                          [W] cobox_amB :: Table ~ t_amy [" a type equality Table
                                                                            ~
                                                                            t_amy " FQL.hs:60:12-37] (CNonCanonical)
                          [W] cobox_amC :: Table ~ t_amz [" a type equality Table
                                                                            ~
                                                                            t_amz " FQL.hs:60:12-37] (CNonCanonical)
                          [W] cobox_amG :: [Int] ~ t_amD [" a type equality [Int]
                                                                            ~
                                                                            t_amD " FQL.hs:53:15-41] (CNonCanonical)
                          [W] cobox_amH :: [String] ~ t_amE [" a type equality [String]
                                                                               ~
                                                                               t_amE " FQL.hs:53:15-41] (CNonCanonical)
                          [W] cobox_amI :: String ~ t_amF [" a type equality String
                                                                             ~
                                                                             t_amF " FQL.hs:53:15-41] (CNonCanonical)
                          [W] cobox_amL :: Table ~ t_amJ [" a type equality Table
                                                                            ~
                                                                            t_amJ " FQL.hs:49:17-33] (CNonCanonical)
                          [W] cobox_amM :: [String] ~ t_amK [" a type equality [String]
                                                                               ~
                                                                               t_amK " FQL.hs:49:17-33] (CNonCanonical)
                          [W] cobox_amP :: Table ~ t_amN [" a type equality Table
                                                                            ~
                                                                            t_amN " FQL.hs:44:17-30] (CNonCanonical)
                          [W] cobox_amQ :: [Int] ~ t_amO [" a type equality [Int]
                                                                            ~
                                                                            t_amO " FQL.hs:44:17-30] (CNonCanonical)
                          [W] cobox_amT :: Table ~ t_amR [" a type equality Table
                                                                            ~
                                                                            t_amR " FQL.hs:37:21-37] (CNonCanonical)
                          [W] cobox_amU :: [String] ~ t_amS [" a type equality [String]
                                                                               ~
                                                                               t_amS " FQL.hs:37:21-37] (CNonCanonical)
                          [W] cobox_amX :: Table ~ t_amV [" a type equality Table
                                                                            ~
                                                                            t_amV " FQL.hs:33:15-29] (CNonCanonical)
                          [W] cobox_amY :: String ~ t_amW [" a type equality String
                                                                             ~
                                                                             t_amW " FQL.hs:33:15-29] (CNonCanonical)
                          [W] cobox_an0 :: Table ~ t_amZ [" a type equality Table
                                                                            ~
                                                                            t_amZ " FQL.hs:20:13-17] (CNonCanonical)
                          [W] cobox_an2 :: Table ~ t_an1 [" a type equality Table
                                                                            ~
                                                                            t_an1 " FQL.hs:7:14-18] (CNonCanonical)
                          [W] cobox_an6 :: String ~ t_an3 [" a type equality String
                                                                             ~
                                                                             t_an3 " FQL.hs:5:18-41] (CNonCanonical)
                          [W] cobox_an7 :: String ~ t_an4 [" a type equality String
                                                                             ~
                                                                             t_an4 " FQL.hs:5:18-41] (CNonCanonical)
                          [W] cobox_an8 :: Bool ~ t_an5 [" a type equality Bool
                                                                           ~
                                                                           t_an5 " FQL.hs:5:18-41] (CNonCanonical)
                          [W] cobox_anb :: [t_ana] ~ t_alB [" a type equality [t_ana]
                                                                              ~
                                                                              t_alB " FQL.hs:110:15-18] (CNonCanonical)
                          [W] cobox_and :: [t_anc] ~ t_alC [" a type equality [t_anc]
                                                                              ~
                                                                              t_alC " FQL.hs:110:22-25] (CNonCanonical)
                          [W] cobox_anh :: Int ~ t_ane [" a type equality Int
                                                                          ~
                                                                          t_ane " FQL.hs:112:40-48] (CNonCanonical)
                          [W] cobox_ani :: [t_anc] ~ [a_ang] [" a type equality [t_anc]
                                                                                ~
                                                                                [a_ang] " FQL.hs:112:47-48] (CNonCanonical)
                          [W] cobox_anl :: Int ~ t_anj [" a type equality Int
                                                                          ~
                                                                          t_anj " FQL.hs:111:40-48] (CNonCanonical)
                          [W] cobox_anm :: [t_ana] ~ [a_ank] [" a type equality [t_ana]
                                                                                ~
                                                                                [a_ank] " FQL.hs:111:47-48] (CNonCanonical)
                          [W] cobox_ant :: [c_ans] ~ t_alD [" a type equality [c_ans]
                                                                              ~
                                                                              t_alD " FQL.hs:110:30-107] (CNonCanonical)
                          [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                                           ~ (a_anq -> b_anr -> c_ans) [" a type equality [a_anv]
                                                                                          -> [a_anv]
                                                                                          -> [a_anv]
                                                                                          ~
                                                                                          a_anq
                                                                                          -> b_anr
                                                                                          -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
                          [W] cobox_any :: [a_anx] ~ [a_anq] [" a type equality [a_anx]
                                                                                ~
                                                                                [a_anq] " FQL.hs:110:44-76] (CNonCanonical)
                          [W] cobox_anz :: t_ana ~ a_anx [" a type equality t_ana
                                                                            ~
                                                                            a_anx " FQL.hs:110:44] (CNonCanonical)
                          [W] cobox_anC :: [a_anB] ~ [a_anx] [" a type equality [a_anB]
                                                                                ~
                                                                                [a_anx] " FQL.hs:110:47-75] (CNonCanonical)
                          [W] cobox_anH :: [b_anG] ~ [[a_anB]] [" a type equality [b_anG]
                                                                                  ~
                                                                                  [[a_anB]] " FQL.hs:110:55-74] (CNonCanonical)
                          [W] cobox_anK :: (a_anJ -> [a_anJ])
                                           ~ (a_anF -> b_anG) [" a type equality a_anJ -> [a_anJ]
                                                                                 ~
                                                                                 a_anF
                                                                                 -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
                          [W] cobox_anL :: t_ane ~ Int [" a type equality t_ane
                                                                          ~
                                                                          Int " FQL.hs:110:70] (CNonCanonical)
                          [W] cobox_anM :: [t_ana] ~ [a_anF] [" a type equality [t_ana]
                                                                                ~
                                                                                [a_anF] " FQL.hs:110:73-74] (CNonCanonical)
                          [W] cobox_anO :: [a_anN] ~ [b_anr] [" a type equality [a_anN]
                                                                                ~
                                                                                [b_anr] " FQL.hs:110:80-106] (CNonCanonical)
                          [W] cobox_anP :: t_anc ~ a_anN [" a type equality t_anc
                                                                            ~
                                                                            a_anN " FQL.hs:110:80] (CNonCanonical)
                          [W] cobox_anR :: [a_anQ] ~ [a_anN] [" a type equality [a_anQ]
                                                                                ~
                                                                                [a_anN] " FQL.hs:110:83-105] (CNonCanonical)
                          [W] cobox_anT :: [a_anS] ~ [[a_anQ]] [" a type equality [a_anS]
                                                                                  ~
                                                                                  [[a_anQ]] " FQL.hs:110:91-104] (CNonCanonical)
                          [W] cobox_anU :: t_anj ~ Int [" a type equality t_anj
                                                                          ~
                                                                          Int " FQL.hs:110:101] (CNonCanonical)
                          [W] cobox_anV :: [t_anc] ~ a_anS [" a type equality [t_anc]
                                                                              ~
                                                                              a_anS " FQL.hs:110:103-104] (CNonCanonical)
                          [W] cobox_anZ :: t_alY ~ (t_anX -> t_anY) [" a type equality t_alY
                                                                                       ~
                                                                                       t_anX
                                                                                       -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
                          [W] cobox_ao0 :: t_anY ~ t_am0 [" a type equality t_anY
                                                                            ~
                                                                            t_am0 " FQL.hs:90:28-48] (CNonCanonical)
                          [W] cobox_ao3 :: a_ao2 ~ t_anX [" a type equality a_ao2
                                                                            ~
                                                                            t_anX " FQL.hs:90:34-47] (CNonCanonical)
                          [W] cobox_ao4 :: t_alZ ~ [a_ao2] [" a type equality t_alZ
                                                                              ~
                                                                              [a_ao2] " FQL.hs:90:34-37] (CNonCanonical)
                          [W] cobox_ao5 :: t_alX ~ Int [" a type equality t_alX
                                                                          ~
                                                                          Int " FQL.hs:90:42-47] (CNonCanonical)
                          [W] cobox_ao9 :: [a_ao8] ~ t_am8 [" a type equality [a_ao8]
                                                                              ~
                                                                              t_am8 " FQL.hs:86:32-65] (CNonCanonical)
                          [W] cobox_aoa :: (t_alZ -> t_am0)
                                           ~ (a_ao8 -> Bool) [" a type equality t_alZ -> t_am0
                                                                                ~
                                                                                a_ao8
                                                                                -> Bool " FQL.hs:86:40-58] (CNonCanonical)
                          [W] cobox_aob :: t_am5 ~ t_alX [" a type equality t_am5
                                                                            ~
                                                                            t_alX " FQL.hs:86:48-53] (CNonCanonical)
                          [W] cobox_aoc :: t_am6 ~ t_alY [" a type equality t_am6
                                                                            ~
                                                                            t_alY " FQL.hs:86:55-58] (CNonCanonical)
                          [W] cobox_aod :: t_am7 ~ [a_ao8] [" a type equality t_am7
                                                                              ~
                                                                              [a_ao8] " FQL.hs:86:61-65] (CNonCanonical)
                          [W] cobox_aoj :: t_aof
                                           ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                                          ~
                                                                                          t_aog
                                                                                          -> t_aoh
                                                                                          -> t_aoi " FQL.hs:56:27-76] (CNonCanonical)
                          [W] cobox_aol :: [a_aok] ~ t_aoi [" a type equality [a_aok]
                                                                              ~
                                                                              t_aoi " FQL.hs:56:42-76] (CNonCanonical)
                          [W] cobox_aom :: [Char] ~ [a_aok] [" a type equality [Char]
                                                                               ~
                                                                               [a_aok] " FQL.hs:56:42-44] (CNonCanonical)
                          [W] cobox_aop :: [a_aoo] ~ [a_aok] [" a type equality [a_aoo]
                                                                                ~
                                                                                [a_aok] " FQL.hs:56:49-76] (CNonCanonical)
                          [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                                          ~
                                                                          Int " FQL.hs:56:54-56] (CNonCanonical)
                          [W] cobox_aos :: [a_aor] ~ [a_aoo] [" a type equality [a_aor]
                                                                                ~
                                                                                [a_aoo] " FQL.hs:56:59-75] (CNonCanonical)
                          [W] cobox_aot :: t_aoh ~ [a_aor] [" a type equality t_aoh
                                                                              ~
                                                                              [a_aor] " FQL.hs:56:59-61] (CNonCanonical)
                          [W] cobox_aow :: [a_aov] ~ [a_aor] [" a type equality [a_aov]
                                                                                ~
                                                                                [a_aor] " FQL.hs:56:66-75] (CNonCanonical)
                          [W] cobox_aox :: Char ~ a_aov [" a type equality Char
                                                                           ~
                                                                           a_aov " FQL.hs:56:73-75] (CNonCanonical)
                          [W] cobox_aoz :: [a_aoy] ~ t_amF [" a type equality [a_aoy]
                                                                              ~
                                                                              t_amF " FQL.hs:54:21-55] (CNonCanonical)
                          [W] cobox_aoB :: [a_aoA] ~ [a_aoy] [" a type equality [a_aoA]
                                                                                ~
                                                                                [a_aoy] " FQL.hs:54:21-48] (CNonCanonical)
                          [W] cobox_aoF :: [c_aoE] ~ [[a_aoA]] [" a type equality [c_aoE]
                                                                                  ~
                                                                                  [[a_aoA]] " FQL.hs:54:29-47] (CNonCanonical)
                          [W] cobox_aoG :: t_aof
                                           ~ (a_aoC -> b_aoD -> c_aoE) [" a type equality t_aof
                                                                                          ~
                                                                                          a_aoC
                                                                                          -> b_aoD
                                                                                          -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
                          [W] cobox_aoH :: t_amD ~ [a_aoC] [" a type equality t_amD
                                                                              ~
                                                                              [a_aoC] " FQL.hs:54:42-43] (CNonCanonical)
                          [W] cobox_aoI :: t_amE ~ [b_aoD] [" a type equality t_amE
                                                                              ~
                                                                              [b_aoD] " FQL.hs:54:45-47] (CNonCanonical)
                          [W] cobox_aoJ :: [Char] ~ [a_aoy] [" a type equality [Char]
                                                                               ~
                                                                               [a_aoy] " FQL.hs:54:53-55] (CNonCanonical)
                          [W] cobox_aoN :: [b_aoM] ~ t_amO [" a type equality [b_aoM]
                                                                              ~
                                                                              t_amO " FQL.hs:45:22-63] (CNonCanonical)
                          [W] cobox_aoU :: (a_aoT -> c_aoS)
                                           ~ (a_aoL -> b_aoM) [" a type equality a_aoT -> c_aoS
                                                                                 ~
                                                                                 a_aoL
                                                                                 -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
                          [W] $dOrd_arZ :: Ord
                                             a_arY [" a use of ‘maximum’ " FQL.hs:45:27-33] (CNonCanonical)
                          [W] cobox_as0 :: ([a_arY] -> a_arY)
                                           ~ (b_aoR -> c_aoS) [" a type equality [a_arY] -> a_arY
                                                                                 ~
                                                                                 b_aoR
                                                                                 -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
                          [W] cobox_as3 :: ([a_as1] -> [b_as2])
                                           ~ (a_aoT -> b_aoR) [" a type equality [a_as1] -> [b_as2]
                                                                                 ~
                                                                                 a_aoT
                                                                                 -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
                          [W] cobox_as5 :: ([a_as4] -> Int)
                                           ~ (a_as1 -> b_as2) [" a type equality [a_as4] -> Int
                                                                                 ~
                                                                                 a_as1
                                                                                 -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
                          [W] cobox_as8 :: [[a_as7]] ~ [a_aoL] [" a type equality [[a_as7]]
                                                                                  ~
                                                                                  [a_aoL] " FQL.hs:45:48-62] (CNonCanonical)
                          [W] cobox_as9 :: t_amN ~ [[a_as7]] [" a type equality t_amN
                                                                                ~
                                                                                [[a_as7]] " FQL.hs:45:58-62] (CNonCanonical)
                          [W] cobox_asd :: [b_asc] ~ t_amK [" a type equality [b_asc]
                                                                              ~
                                                                              t_amK " FQL.hs:50:22-64] (CNonCanonical)
                          [W] cobox_ase :: (t_amE -> t_amF)
                                           ~ (a_asb -> b_asc) [" a type equality t_amE -> t_amF
                                                                                 ~
                                                                                 a_asb
                                                                                 -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
                          [W] cobox_asf :: t_amO ~ t_amD [" a type equality t_amO
                                                                            ~
                                                                            t_amD " FQL.hs:50:39-56] (CNonCanonical)
                          [W] cobox_asg :: t_amJ ~ t_amN [" a type equality t_amJ
                                                                            ~
                                                                            t_amN " FQL.hs:50:52-56] (CNonCanonical)
                          [W] cobox_ash :: t_amJ ~ [a_asb] [" a type equality t_amJ
                                                                              ~
                                                                              [a_asb] " FQL.hs:50:60-64] (CNonCanonical)
                          [W] cobox_ask :: t_amK ~ t_asj [" a type equality t_amK
                                                                            ~
                                                                            t_asj " FQL.hs:40:37-54] (CNonCanonical)
                          [W] cobox_asl :: t_amR ~ t_amJ [" a type equality t_amR
                                                                            ~
                                                                            t_amJ " FQL.hs:40:50-54] (CNonCanonical)
                          [W] cobox_asr :: b_asq ~ t_asm [" a type equality b_asq
                                                                            ~
                                                                            t_asm " FQL.hs:39:38-104] (CNonCanonical)
                          [W] cobox_ast :: ([a_ass] -> [a_ass])
                                           ~ (b_asq -> b_asq) [" a type equality [a_ass] -> [a_ass]
                                                                                 ~
                                                                                 b_asq
                                                                                 -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
                          [W] cobox_asv :: [a_asu] ~ [a_ass] [" a type equality [a_asu]
                                                                                ~
                                                                                [a_ass] " FQL.hs:39:56-77] (CNonCanonical)
                          [W] cobox_asw :: [Char] ~ [a_asu] [" a type equality [Char]
                                                                               ~
                                                                               [a_asu] " FQL.hs:39:56-58] (CNonCanonical)
                          [W] cobox_asy :: [a_asx] ~ [a_asu] [" a type equality [a_asx]
                                                                                ~
                                                                                [a_asu] " FQL.hs:39:63-77] (CNonCanonical)
                          [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                                          ~
                                                                          Int " FQL.hs:39:73] (CNonCanonical)
                          [W] cobox_asA :: Char ~ a_asx [" a type equality Char
                                                                           ~
                                                                           a_asx " FQL.hs:39:75-77] (CNonCanonical)
                          [W] cobox_asB :: [Char] ~ b_asq [" a type equality [Char]
                                                                             ~
                                                                             b_asq " FQL.hs:39:81-83] (CNonCanonical)
                          [W] cobox_asC :: t_amO ~ [a_asp] [" a type equality t_amO
                                                                              ~
                                                                              [a_asp] " FQL.hs:39:86-103] (CNonCanonical)
                          [W] cobox_asD :: t_amR ~ t_amN [" a type equality t_amR
                                                                            ~
                                                                            t_amN " FQL.hs:39:99-103] (CNonCanonical)
                          [W] cobox_asF :: [a_asE] ~ t_amS [" a type equality [a_asE]
                                                                              ~
                                                                              t_amS " FQL.hs:38:26-65] (CNonCanonical)
                          [W] cobox_asG :: t_asm ~ a_asE [" a type equality t_asm
                                                                            ~
                                                                            a_asE " FQL.hs:38:26-28] (CNonCanonical)
                          [W] cobox_asI :: [a_asH] ~ [a_asE] [" a type equality [a_asH]
                                                                                ~
                                                                                [a_asE] " FQL.hs:38:32-65] (CNonCanonical)
                          [W] cobox_asL :: a_asK ~ a_asH [" a type equality a_asK
                                                                            ~
                                                                            a_asH " FQL.hs:38:32-39] (CNonCanonical)
                          [W] cobox_asM :: t_asj ~ [a_asK] [" a type equality t_asj
                                                                              ~
                                                                              [a_asK] " FQL.hs:38:37-38] (CNonCanonical)
                          [W] cobox_asO :: [a_asN] ~ [a_asH] [" a type equality [a_asN]
                                                                                ~
                                                                                [a_asH] " FQL.hs:38:43-65] (CNonCanonical)
                          [W] cobox_asP :: t_asm ~ a_asN [" a type equality t_asm
                                                                            ~
                                                                            a_asN " FQL.hs:38:43-45] (CNonCanonical)
                          [W] cobox_asR :: [a_asQ] ~ [a_asN] [" a type equality [a_asQ]
                                                                                ~
                                                                                [a_asN] " FQL.hs:38:49-65] (CNonCanonical)
                          [W] cobox_asU :: [a_asT] ~ [a_asQ] [" a type equality [a_asT]
                                                                                ~
                                                                                [a_asQ] " FQL.hs:38:49-56] (CNonCanonical)
                          [W] cobox_asV :: t_asj ~ [a_asT] [" a type equality t_asj
                                                                              ~
                                                                              [a_asT] " FQL.hs:38:54-55] (CNonCanonical)
                          [W] cobox_asW :: t_asm ~ a_asQ [" a type equality t_asm
                                                                            ~
                                                                            a_asQ " FQL.hs:38:62-64] (CNonCanonical)
                          [W] cobox_at1 :: (a_at0 -> c_asZ)
                                           ~ (t_amV -> t_amW) [" a type equality a_at0 -> c_asZ
                                                                                 ~
                                                                                 t_amV
                                                                                 -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
                          [W] cobox_at2 :: ([String] -> String)
                                           ~ (b_asY -> c_asZ) [" a type equality [String] -> String
                                                                                 ~
                                                                                 b_asY
                                                                                 -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
                          [W] cobox_at3 :: (t_amR -> t_amS)
                                           ~ (a_at0 -> b_asY) [" a type equality t_amR -> t_amS
                                                                                 ~
                                                                                 a_at0
                                                                                 -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
                          [W] cobox_at6 :: [t_at5] ~ t_amZ [" a type equality [t_at5]
                                                                              ~
                                                                              t_amZ " FQL.hs:(22,3)-(29,3)] (CNonCanonical)
                          [W] cobox_at8 :: [t_at7] ~ t_at5 [" a type equality [t_at7]
                                                                              ~
                                                                              t_at5 " FQL.hs:22:5-44] (CNonCanonical)
                          [W] cobox_at9 :: [Char] ~ t_at7 [" a type equality [Char]
                                                                             ~
                                                                             t_at7 " FQL.hs:22:6-27] (CNonCanonical)
                          [W] cobox_ata :: [Char] ~ t_at7 [" a type equality [Char]
                                                                             ~
                                                                             t_at7 " FQL.hs:22:30-35] (CNonCanonical)
                          [W] cobox_atb :: [Char] ~ t_at7 [" a type equality [Char]
                                                                             ~
                                                                             t_at7 " FQL.hs:22:38-43] (CNonCanonical)
                          [W] cobox_atd :: [t_atc] ~ t_at5 [" a type equality [t_atc]
                                                                              ~
                                                                              t_at5 " FQL.hs:23:5-56] (CNonCanonical)
                          [W] cobox_ate :: [Char] ~ t_atc [" a type equality [Char]
                                                                             ~
                                                                             t_atc " FQL.hs:23:6-31] (CNonCanonical)
                          [W] cobox_atf :: [Char] ~ t_atc [" a type equality [Char]
                                                                             ~
                                                                             t_atc " FQL.hs:23:34-44] (CNonCanonical)
                          [W] cobox_atg :: [Char] ~ t_atc [" a type equality [Char]
                                                                             ~
                                                                             t_atc " FQL.hs:23:47-55] (CNonCanonical)
                          [W] cobox_ati :: [t_ath] ~ t_at5 [" a type equality [t_ath]
                                                                              ~
                                                                              t_at5 " FQL.hs:24:5-46] (CNonCanonical)
                          [W] cobox_atj :: [Char] ~ t_ath [" a type equality [Char]
                                                                             ~
                                                                             t_ath " FQL.hs:24:6-25] (CNonCanonical)
                          [W] cobox_atk :: [Char] ~ t_ath [" a type equality [Char]
                                                                             ~
                                                                             t_ath " FQL.hs:24:28-37] (CNonCanonical)
                          [W] cobox_atl :: [Char] ~ t_ath [" a type equality [Char]
                                                                             ~
                                                                             t_ath " FQL.hs:24:40-45] (CNonCanonical)
                          [W] cobox_atn :: [t_atm] ~ t_at5 [" a type equality [t_atm]
                                                                              ~
                                                                              t_at5 " FQL.hs:25:5-51] (CNonCanonical)
                          [W] cobox_ato :: [Char] ~ t_atm [" a type equality [Char]
                                                                             ~
                                                                             t_atm " FQL.hs:25:6-25] (CNonCanonical)
                          [W] cobox_atp :: [Char] ~ t_atm [" a type equality [Char]
                                                                             ~
                                                                             t_atm " FQL.hs:25:28-37] (CNonCanonical)
                          [W] cobox_atq :: [Char] ~ t_atm [" a type equality [Char]
                                                                             ~
                                                                             t_atm " FQL.hs:25:40-50] (CNonCanonical)
                          [W] cobox_ats :: [t_atr] ~ t_at5 [" a type equality [t_atr]
                                                                              ~
                                                                              t_at5 " FQL.hs:26:5-59] (CNonCanonical)
                          [W] cobox_att :: [Char] ~ t_atr [" a type equality [Char]
                                                                             ~
                                                                             t_atr " FQL.hs:26:6-25] (CNonCanonical)
                          [W] cobox_atu :: [Char] ~ t_atr [" a type equality [Char]
                                                                             ~
                                                                             t_atr " FQL.hs:26:28-45] (CNonCanonical)
                          [W] cobox_atv :: [Char] ~ t_atr [" a type equality [Char]
                                                                             ~
                                                                             t_atr " FQL.hs:26:48-58] (CNonCanonical)
                          [W] cobox_atx :: [t_atw] ~ t_at5 [" a type equality [t_atw]
                                                                              ~
                                                                              t_at5 " FQL.hs:27:5-66] (CNonCanonical)
                          [W] cobox_aty :: [Char] ~ t_atw [" a type equality [Char]
                                                                             ~
                                                                             t_atw " FQL.hs:27:6-32] (CNonCanonical)
                          [W] cobox_atz :: [Char] ~ t_atw [" a type equality [Char]
                                                                             ~
                                                                             t_atw " FQL.hs:27:35-52] (CNonCanonical)
                          [W] cobox_atA :: [Char] ~ t_atw [" a type equality [Char]
                                                                             ~
                                                                             t_atw " FQL.hs:27:55-65] (CNonCanonical)
                          [W] cobox_atC :: [t_atB] ~ t_at5 [" a type equality [t_atB]
                                                                              ~
                                                                              t_at5 " FQL.hs:28:5-63] (CNonCanonical)
                          [W] cobox_atD :: [Char] ~ t_atB [" a type equality [Char]
                                                                             ~
                                                                             t_atB " FQL.hs:28:6-40] (CNonCanonical)
                          [W] cobox_atE :: [Char] ~ t_atB [" a type equality [Char]
                                                                             ~
                                                                             t_atB " FQL.hs:28:43-50] (CNonCanonical)
                          [W] cobox_atF :: [Char] ~ t_atB [" a type equality [Char]
                                                                             ~
                                                                             t_atB " FQL.hs:28:53-62] (CNonCanonical)
                          [W] cobox_atI :: [t_atH] ~ t_an1 [" a type equality [t_atH]
                                                                              ~
                                                                              t_an1 " FQL.hs:(9,3)-(18,3)] (CNonCanonical)
                          [W] cobox_atK :: [t_atJ] ~ t_atH [" a type equality [t_atJ]
                                                                              ~
                                                                              t_atH " FQL.hs:9:5-40] (CNonCanonical)
                          [W] cobox_atL :: [Char] ~ t_atJ [" a type equality [Char]
                                                                             ~
                                                                             t_atJ " FQL.hs:9:6-15] (CNonCanonical)
                          [W] cobox_atM :: [Char] ~ t_atJ [" a type equality [Char]
                                                                             ~
                                                                             t_atJ " FQL.hs:9:18-39] (CNonCanonical)
                          [W] cobox_atO :: [t_atN] ~ t_atH [" a type equality [t_atN]
                                                                              ~
                                                                              t_atH " FQL.hs:10:5-42] (CNonCanonical)
                          [W] cobox_atP :: [Char] ~ t_atN [" a type equality [Char]
                                                                             ~
                                                                             t_atN " FQL.hs:10:6-13] (CNonCanonical)
                          [W] cobox_atQ :: [Char] ~ t_atN [" a type equality [Char]
                                                                             ~
                                                                             t_atN " FQL.hs:10:16-41] (CNonCanonical)
                          [W] cobox_atS :: [t_atR] ~ t_atH [" a type equality [t_atR]
                                                                              ~
                                                                              t_atH " FQL.hs:11:5-33] (CNonCanonical)
                          [W] cobox_atT :: [Char] ~ t_atR [" a type equality [Char]
                                                                             ~
                                                                             t_atR " FQL.hs:11:6-10] (CNonCanonical)
                          [W] cobox_atU :: [Char] ~ t_atR [" a type equality [Char]
                                                                             ~
                                                                             t_atR " FQL.hs:11:13-32] (CNonCanonical)
                          [W] cobox_atW :: [t_atV] ~ t_atH [" a type equality [t_atV]
                                                                              ~
                                                                              t_atH " FQL.hs:12:5-33] (CNonCanonical)
                          [W] cobox_atX :: [Char] ~ t_atV [" a type equality [Char]
                                                                             ~
                                                                             t_atV " FQL.hs:12:6-10] (CNonCanonical)
                          [W] cobox_atY :: [Char] ~ t_atV [" a type equality [Char]
                                                                             ~
                                                                             t_atV " FQL.hs:12:13-32] (CNonCanonical)
                          [W] cobox_au0 :: [t_atZ] ~ t_atH [" a type equality [t_atZ]
                                                                              ~
                                                                              t_atH " FQL.hs:13:5-34] (CNonCanonical)
                          [W] cobox_au1 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                             ~
                                                                             t_atZ " FQL.hs:13:6-11] (CNonCanonical)
                          [W] cobox_au2 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                             ~
                                                                             t_atZ " FQL.hs:13:14-33] (CNonCanonical)
                          [W] cobox_au4 :: [t_au3] ~ t_atH [" a type equality [t_au3]
                                                                              ~
                                                                              t_atH " FQL.hs:14:5-38] (CNonCanonical)
                          [W] cobox_au5 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                             ~
                                                                             t_au3 " FQL.hs:14:6-15] (CNonCanonical)
                          [W] cobox_au6 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                             ~
                                                                             t_au3 " FQL.hs:14:18-37] (CNonCanonical)
                          [W] cobox_au8 :: [t_au7] ~ t_atH [" a type equality [t_au7]
                                                                              ~
                                                                              t_atH " FQL.hs:15:5-46] (CNonCanonical)
                          [W] cobox_au9 :: [Char] ~ t_au7 [" a type equality [Char]
                                                                             ~
                                                                             t_au7 " FQL.hs:15:6-16] (CNonCanonical)
                          [W] cobox_aua :: [Char] ~ t_au7 [" a type equality [Char]
                                                                             ~
                                                                             t_au7 " FQL.hs:15:19-45] (CNonCanonical)
                          [W] cobox_auc :: [t_aub] ~ t_atH [" a type equality [t_aub]
                                                                              ~
                                                                              t_atH " FQL.hs:16:5-54] (CNonCanonical)
                          [W] cobox_aud :: [Char] ~ t_aub [" a type equality [Char]
                                                                             ~
                                                                             t_aub " FQL.hs:16:6-16] (CNonCanonical)
                          [W] cobox_aue :: [Char] ~ t_aub [" a type equality [Char]
                                                                             ~
                                                                             t_aub " FQL.hs:16:19-53] (CNonCanonical)
                          [W] cobox_aug :: [t_auf] ~ t_atH [" a type equality [t_auf]
                                                                              ~
                                                                              t_atH " FQL.hs:17:5-48] (CNonCanonical)
                          [W] cobox_auh :: [Char] ~ t_auf [" a type equality [Char]
                                                                             ~
                                                                             t_auf " FQL.hs:17:6-10] (CNonCanonical)
                          [W] cobox_aui :: [Char] ~ t_auf [" a type equality [Char]
                                                                             ~
                                                                             t_auf " FQL.hs:17:13-47] (CNonCanonical)
                          [W] cobox_aul :: a_auk
                                           ~ (t_an3 -> t_an4 -> t_an5) [" a type equality a_auk
                                                                                          ~
                                                                                          t_an3
                                                                                          -> t_an4
                                                                                          -> t_an5 " FQL.hs:6:12-20] (CNonCanonical)
                          [W] cobox_auo :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                              ~
                                                                              t_amm " FQL.hs:71:13-18] (CNonCanonical)
                          [W] cobox_aup :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " FQL.hs:71:23-49] (CNonCanonical)
                          [W] cobox_aus :: [b_aur] ~ [Bool] [" a type equality [b_aur]
                                                                               ~
                                                                               [Bool] " FQL.hs:71:27-48] (CNonCanonical)
                          [W] cobox_aut :: (t_an4 -> t_an5)
                                           ~ (a_auq -> b_aur) [" a type equality t_an4 -> t_an5
                                                                                 ~
                                                                                 a_auq
                                                                                 -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
                          [W] cobox_auu :: t_aun ~ t_an3 [" a type equality t_aun
                                                                            ~
                                                                            t_an3 " FQL.hs:71:41-42] (CNonCanonical)
                          [W] cobox_auv :: t_aml ~ [a_auq] [" a type equality t_aml
                                                                              ~
                                                                              [a_auq] " FQL.hs:71:45-48] (CNonCanonical)
                          [W] $dNum_awD :: Num
                                             a_awC [" the literal ‘0’ " FQL.hs:71:53] (CNonCanonical)
                          [W] cobox_awE :: (Integer -> a_awC)
                                           ~ (Integer -> t_amn) [" a type equality Integer -> a_awC
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_amn " FQL.hs:71:53] (CNonCanonical)
                          [W] cobox_awF :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " FQL.hs:72:23-31] (CNonCanonical)
                          [W] $dNum_awH :: Num
                                             a_awG [" a use of ‘+’ " FQL.hs:72:55] (CNonCanonical)
                          [W] cobox_awI :: a_awG ~ t_amn [" a type equality a_awG
                                                                            ~
                                                                            t_amn " FQL.hs:72:53-70] (CNonCanonical)
                          [W] $dNum_awK :: Num
                                             a_awJ [" the literal ‘1’ " FQL.hs:72:53] (CNonCanonical)
                          [W] cobox_awL :: (Integer -> a_awJ)
                                           ~ (Integer -> a_awG) [" a type equality Integer -> a_awJ
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_awG " FQL.hs:72:53] (CNonCanonical)
                          [W] cobox_awM :: t_amn ~ a_awG [" a type equality t_amn
                                                                            ~
                                                                            a_awG " FQL.hs:72:57-70] (CNonCanonical)
                          [W] cobox_awN :: t_aml ~ t_aml [" a type equality t_aml
                                                                            ~
                                                                            t_aml " FQL.hs:72:63-66] (CNonCanonical)
                          [W] cobox_awO :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                              ~
                                                                              t_amm " FQL.hs:72:68-70] (CNonCanonical)
                          [W] cobox_awS :: [b_awR] ~ t_amt [" a type equality [b_awR]
                                                                              ~
                                                                              t_amt " FQL.hs:66:34-68] (CNonCanonical)
                          [W] cobox_awT :: t_amn ~ b_awR [" a type equality t_amn
                                                                            ~
                                                                            b_awR " FQL.hs:66:44-62] (CNonCanonical)
                          [W] cobox_awV :: [t_awU] ~ t_aml [" a type equality [t_awU]
                                                                              ~
                                                                              t_aml " FQL.hs:66:50-52] (CNonCanonical)
                          [W] cobox_awW :: a_awQ ~ t_awU [" a type equality a_awQ
                                                                            ~
                                                                            t_awU " FQL.hs:66:51] (CNonCanonical)
                          [W] cobox_awX :: t_amr ~ t_amm [" a type equality t_amr
                                                                            ~
                                                                            t_amm " FQL.hs:66:54-62] (CNonCanonical)
                          [W] cobox_awY :: t_ams ~ [a_awQ] [" a type equality t_ams
                                                                              ~
                                                                              [a_awQ] " FQL.hs:66:65-68] (CNonCanonical)
                          [W] cobox_ax1 :: [[a_ax0]] ~ t_amz [" a type equality [[a_ax0]]
                                                                                ~
                                                                                t_amz " FQL.hs:61:23-96] (CNonCanonical)
                          [W] cobox_ax4 :: [b_ax3] ~ [[a_ax0]] [" a type equality [b_ax3]
                                                                                  ~
                                                                                  [[a_ax0]] " FQL.hs:61:34-95] (CNonCanonical)
                          [W] cobox_ax6 :: (Int -> a_ax5)
                                           ~ (a_ax2 -> b_ax3) [" a type equality Int -> a_ax5
                                                                                 ~
                                                                                 a_ax2
                                                                                 -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
                          [W] cobox_ax8 :: [[a_ax7]] ~ [a_ax5] [" a type equality [[a_ax7]]
                                                                                  ~
                                                                                  [a_ax5] " FQL.hs:61:40-54] (CNonCanonical)
                          [W] cobox_ax9 :: t_amy ~ [[a_ax7]] [" a type equality t_amy
                                                                                ~
                                                                                [[a_ax7]] " FQL.hs:61:50-54] (CNonCanonical)
                          [W] cobox_axa :: t_amt ~ [a_ax2] [" a type equality t_amt
                                                                              ~
                                                                              [a_ax2] " FQL.hs:61:62-94] (CNonCanonical)
                          [W] cobox_axc :: a_axb ~ t_amr [" a type equality a_axb
                                                                            ~
                                                                            t_amr " FQL.hs:61:79-88] (CNonCanonical)
                          [W] cobox_axd :: t_amy ~ [a_axb] [" a type equality t_amy
                                                                              ~
                                                                              [a_axb] " FQL.hs:61:84-88] (CNonCanonical)
                          [W] cobox_axe :: t_amx ~ t_ams [" a type equality t_amx
                                                                            ~
                                                                            t_ams " FQL.hs:61:91-94] (CNonCanonical)
                          [W] cobox_axh :: [a_axg] ~ t_amg [" a type equality [a_axg]
                                                                              ~
                                                                              t_amg " FQL.hs:79:28-100] (CNonCanonical)
                          [W] cobox_axj :: a_axi ~ a_axg [" a type equality a_axi
                                                                            ~
                                                                            a_axg " FQL.hs:79:29-38] (CNonCanonical)
                          [W] cobox_axk :: t_amf ~ [a_axi] [" a type equality t_amf
                                                                              ~
                                                                              [a_axi] " FQL.hs:79:34-38] (CNonCanonical)
                          [W] cobox_axl :: t_am8 ~ [a_axg] [" a type equality t_am8
                                                                              ~
                                                                              [a_axg] " FQL.hs:79:44-99] (CNonCanonical)
                          [W] cobox_axm :: t_amn ~ t_am5 [" a type equality t_amn
                                                                            ~
                                                                            t_am5 " FQL.hs:79:56-80] (CNonCanonical)
                          [W] cobox_axo :: a_axn ~ t_aml [" a type equality a_axn
                                                                            ~
                                                                            t_aml " FQL.hs:79:63-72] (CNonCanonical)
                          [W] cobox_axp :: t_amf ~ [a_axn] [" a type equality t_amf
                                                                              ~
                                                                              [a_axn] " FQL.hs:79:68-72] (CNonCanonical)
                          [W] cobox_axq :: t_amd ~ t_amm [" a type equality t_amd
                                                                            ~
                                                                            t_amm " FQL.hs:79:75-80] (CNonCanonical)
                          [W] cobox_axr :: t_ame ~ t_am6 [" a type equality t_ame
                                                                            ~
                                                                            t_am6 " FQL.hs:79:83-86] (CNonCanonical)
                          [W] cobox_axt :: [a_axs] ~ t_am7 [" a type equality [a_axs]
                                                                              ~
                                                                              t_am7 " FQL.hs:79:89-98] (CNonCanonical)
                          [W] cobox_axu :: t_amf ~ [a_axs] [" a type equality t_amf
                                                                              ~
                                                                              [a_axs] " FQL.hs:79:94-98] (CNonCanonical)
                          [W] cobox_axx :: [a_axw] ~ t_alL [" a type equality [a_axw]
                                                                              ~
                                                                              t_alL " FQL.hs:105:27-88] (CNonCanonical)
                          [W] cobox_axy :: t_an5 ~ Bool [" a type equality t_an5
                                                                           ~
                                                                           Bool " FQL.hs:105:40-61] (CNonCanonical)
                          [W] cobox_axA :: a_axz ~ t_an3 [" a type equality a_axz
                                                                            ~
                                                                            t_an3 " FQL.hs:105:50-53] (CNonCanonical)
                          [W] cobox_axB :: a_axw ~ [a_axz] [" a type equality a_axw
                                                                              ~
                                                                              [a_axz] " FQL.hs:105:50] (CNonCanonical)
                          [W] cobox_axC :: t_alJ ~ Int [" a type equality t_alJ
                                                                          ~
                                                                          Int " FQL.hs:105:53] (CNonCanonical)
                          [W] cobox_axE :: a_axD ~ t_an4 [" a type equality a_axD
                                                                            ~
                                                                            t_an4 " FQL.hs:105:57-60] (CNonCanonical)
                          [W] cobox_axF :: a_axw ~ [a_axD] [" a type equality a_axw
                                                                              ~
                                                                              [a_axD] " FQL.hs:105:57] (CNonCanonical)
                          [W] cobox_axG :: t_alK ~ Int [" a type equality t_alK
                                                                          ~
                                                                          Int " FQL.hs:105:60] (CNonCanonical)
                          [W] cobox_axH :: t_alD ~ [a_axw] [" a type equality t_alD
                                                                              ~
                                                                              [a_axw] " FQL.hs:105:65-87] (CNonCanonical)
                          [W] cobox_axI :: t_alH ~ t_alB [" a type equality t_alH
                                                                            ~
                                                                            t_alB " FQL.hs:105:78-81] (CNonCanonical)
                          [W] cobox_axJ :: t_alI ~ t_alC [" a type equality t_alI
                                                                            ~
                                                                            t_alC " FQL.hs:105:83-87] (CNonCanonical)
                          [W] $dNum_axN :: Num
                                             a_axM [" a use of ‘+’ " FQL.hs:99:62] (CNonCanonical)
                          [W] cobox_axO :: a_axM ~ t_axL [" a type equality a_axM
                                                                            ~
                                                                            t_axL " FQL.hs:99:30-81] (CNonCanonical)
                          [W] cobox_axP :: t_amn ~ a_axM [" a type equality t_amn
                                                                            ~
                                                                            a_axM " FQL.hs:99:30-60] (CNonCanonical)
                          [W] cobox_axR :: a_axQ ~ t_aml [" a type equality a_axQ
                                                                            ~
                                                                            t_aml " FQL.hs:99:37-45] (CNonCanonical)
                          [W] cobox_axS :: t_alR ~ [a_axQ] [" a type equality t_alR
                                                                              ~
                                                                              [a_axQ] " FQL.hs:99:42-45] (CNonCanonical)
                          [W] cobox_axU :: a_axT ~ t_amm [" a type equality a_axT
                                                                            ~
                                                                            t_amm " FQL.hs:99:50-59] (CNonCanonical)
                          [W] cobox_axV :: t_alS ~ [a_axT] [" a type equality t_alS
                                                                              ~
                                                                              [a_axT] " FQL.hs:99:55-59] (CNonCanonical)
                          [W] cobox_axX :: Int ~ a_axM [" a type equality Int
                                                                          ~
                                                                          a_axM " FQL.hs:99:64-81] (CNonCanonical)
                          [W] cobox_axZ :: a_axY ~ [a_axW] [" a type equality a_axY
                                                                              ~
                                                                              [a_axW] " FQL.hs:99:72-80] (CNonCanonical)
                          [W] cobox_ay0 :: t_alR ~ [a_axY] [" a type equality t_alR
                                                                              ~
                                                                              [a_axY] " FQL.hs:99:77-80] (CNonCanonical)
                          [W] cobox_ay2 :: t_amn ~ t_ay1 [" a type equality t_amn
                                                                            ~
                                                                            t_ay1 " FQL.hs:98:30-59] (CNonCanonical)
                          [W] cobox_ay4 :: a_ay3 ~ t_aml [" a type equality a_ay3
                                                                            ~
                                                                            t_aml " FQL.hs:98:37-46] (CNonCanonical)
                          [W] cobox_ay5 :: t_alS ~ [a_ay3] [" a type equality t_alS
                                                                              ~
                                                                              [a_ay3] " FQL.hs:98:42-46] (CNonCanonical)
                          [W] cobox_ay7 :: a_ay6 ~ t_amm [" a type equality a_ay6
                                                                            ~
                                                                            t_amm " FQL.hs:98:50-58] (CNonCanonical)
                          [W] cobox_ay8 :: t_alR ~ [a_ay6] [" a type equality t_alR
                                                                              ~
                                                                              [a_ay6] " FQL.hs:98:55-58] (CNonCanonical)
                          [W] cobox_ayb :: [b_aya] ~ t_alT [" a type equality [b_aya]
                                                                              ~
                                                                              t_alT " FQL.hs:97:20-82] (CNonCanonical)
                          [W] cobox_ayd :: [a_ayc] ~ b_aya [" a type equality [a_ayc]
                                                                              ~
                                                                              b_aya " FQL.hs:97:30-55] (CNonCanonical)
                          [W] cobox_ayf :: [a_aye] ~ [a_ayc] [" a type equality [a_aye]
                                                                                ~
                                                                                [a_ayc] " FQL.hs:97:30-37] (CNonCanonical)
                          [W] cobox_ayg :: t_axL ~ Int [" a type equality t_axL
                                                                          ~
                                                                          Int " FQL.hs:97:35] (CNonCanonical)
                          [W] cobox_ayh :: a_ay9 ~ [a_aye] [" a type equality a_ay9
                                                                              ~
                                                                              [a_aye] " FQL.hs:97:37] (CNonCanonical)
                          [W] cobox_ayk :: [a_ayj] ~ [a_ayc] [" a type equality [a_ayj]
                                                                                ~
                                                                                [a_ayc] " FQL.hs:97:43-54] (CNonCanonical)
                          [W] $dNum_aym :: Num
                                             a_ayl [" a use of ‘+’ " FQL.hs:97:50] (CNonCanonical)
                          [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                                          ~
                                                                          Int " FQL.hs:97:49-51] (CNonCanonical)
                          [W] cobox_ayo :: t_axL ~ a_ayl [" a type equality t_axL
                                                                            ~
                                                                            a_ayl " FQL.hs:97:49] (CNonCanonical)
                          [W] $dNum_ayq :: Num
                                             a_ayp [" the literal ‘1’ " FQL.hs:97:51] (CNonCanonical)
                          [W] cobox_ayr :: (Integer -> a_ayp)
                                           ~ (Integer -> a_ayl) [" a type equality Integer -> a_ayp
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_ayl " FQL.hs:97:51] (CNonCanonical)
                          [W] cobox_ays :: a_ay9 ~ [a_ayj] [" a type equality a_ay9
                                                                              ~
                                                                              [a_ayj] " FQL.hs:97:54] (CNonCanonical)
                          [W] cobox_ayt :: t_alL ~ [a_ay9] [" a type equality t_alL
                                                                              ~
                                                                              [a_ay9] " FQL.hs:97:59-81] (CNonCanonical)
                          [W] cobox_ayu :: t_alR ~ t_alH [" a type equality t_alR
                                                                            ~
                                                                            t_alH " FQL.hs:97:68-71] (CNonCanonical)
                          [W] cobox_ayv :: t_alS ~ t_alI [" a type equality t_alS
                                                                            ~
                                                                            t_alI " FQL.hs:97:73-77] (CNonCanonical)
                          [W] cobox_ayw :: t_ay1 ~ t_alJ [" a type equality t_ay1
                                                                            ~
                                                                            t_alJ " FQL.hs:97:79] (CNonCanonical)
                          [W] cobox_ayx :: t_axL ~ t_alK [" a type equality t_axL
                                                                            ~
                                                                            t_alK " FQL.hs:97:81] (CNonCanonical)}
solveWantedsTcMWithEvBinds
  wanted= WC {wc_flat = [W] cobox_alE :: Table
                                         ~ t_alB [" a type equality Table
                                                                    ~
                                                                    t_alB " FQL.hs:109:17-39] (CNonCanonical)
                        [W] cobox_alF :: Table ~ t_alC [" a type equality Table
                                                                          ~
                                                                          t_alC " FQL.hs:109:17-39] (CNonCanonical)
                        [W] cobox_alG :: Table ~ t_alD [" a type equality Table
                                                                          ~
                                                                          t_alD " FQL.hs:109:17-39] (CNonCanonical)
                        [W] cobox_alM :: Table ~ t_alH [" a type equality Table
                                                                          ~
                                                                          t_alH " FQL.hs:104:13-49] (CNonCanonical)
                        [W] cobox_alN :: Table ~ t_alI [" a type equality Table
                                                                          ~
                                                                          t_alI " FQL.hs:104:13-49] (CNonCanonical)
                        [W] cobox_alO :: Int ~ t_alJ [" a type equality Int
                                                                        ~
                                                                        t_alJ " FQL.hs:104:13-49] (CNonCanonical)
                        [W] cobox_alP :: Int ~ t_alK [" a type equality Int
                                                                        ~
                                                                        t_alK " FQL.hs:104:13-49] (CNonCanonical)
                        [W] cobox_alQ :: Table ~ t_alL [" a type equality Table
                                                                          ~
                                                                          t_alL " FQL.hs:104:13-49] (CNonCanonical)
                        [W] cobox_alU :: Table ~ t_alR [" a type equality Table
                                                                          ~
                                                                          t_alR " FQL.hs:96:9-31] (CNonCanonical)
                        [W] cobox_alV :: Table ~ t_alS [" a type equality Table
                                                                          ~
                                                                          t_alS " FQL.hs:96:9-31] (CNonCanonical)
                        [W] cobox_alW :: Table ~ t_alT [" a type equality Table
                                                                          ~
                                                                          t_alT " FQL.hs:96:9-31] (CNonCanonical)
                        [W] cobox_am1 :: Int ~ t_alX [" a type equality Int
                                                                        ~
                                                                        t_alX " FQL.hs:89:12-54] (CNonCanonical)
                        [W] cobox_am2 :: (String -> Bool) ~ t_alY [" a type equality String
                                                                                     -> Bool
                                                                                     ~
                                                                                     t_alY " FQL.hs:89:12-54] (CNonCanonical)
                        [W] cobox_am3 :: [String] ~ t_alZ [" a type equality [String]
                                                                             ~
                                                                             t_alZ " FQL.hs:89:12-54] (CNonCanonical)
                        [W] cobox_am4 :: Bool ~ t_am0 [" a type equality Bool
                                                                         ~
                                                                         t_am0 " FQL.hs:89:12-54] (CNonCanonical)
                        [W] cobox_am9 :: Int ~ t_am5 [" a type equality Int
                                                                        ~
                                                                        t_am5 " FQL.hs:85:15-55] (CNonCanonical)
                        [W] cobox_ama :: (String -> Bool) ~ t_am6 [" a type equality String
                                                                                     -> Bool
                                                                                     ~
                                                                                     t_am6 " FQL.hs:85:15-55] (CNonCanonical)
                        [W] cobox_amb :: Table ~ t_am7 [" a type equality Table
                                                                          ~
                                                                          t_am7 " FQL.hs:85:15-55] (CNonCanonical)
                        [W] cobox_amc :: Table ~ t_am8 [" a type equality Table
                                                                          ~
                                                                          t_am8 " FQL.hs:85:15-55] (CNonCanonical)
                        [W] cobox_amh :: String ~ t_amd [" a type equality String
                                                                           ~
                                                                           t_amd " FQL.hs:78:11-54] (CNonCanonical)
                        [W] cobox_ami :: (String -> Bool) ~ t_ame [" a type equality String
                                                                                     -> Bool
                                                                                     ~
                                                                                     t_ame " FQL.hs:78:11-54] (CNonCanonical)
                        [W] cobox_amj :: Table ~ t_amf [" a type equality Table
                                                                          ~
                                                                          t_amf " FQL.hs:78:11-54] (CNonCanonical)
                        [W] cobox_amk :: Table ~ t_amg [" a type equality Table
                                                                          ~
                                                                          t_amg " FQL.hs:78:11-54] (CNonCanonical)
                        [W] cobox_amo :: [String] ~ t_aml [" a type equality [String]
                                                                             ~
                                                                             t_aml " FQL.hs:70:10-36] (CNonCanonical)
                        [W] cobox_amp :: [String] ~ t_amm [" a type equality [String]
                                                                             ~
                                                                             t_amm " FQL.hs:70:10-36] (CNonCanonical)
                        [W] cobox_amq :: Int ~ t_amn [" a type equality Int
                                                                        ~
                                                                        t_amn " FQL.hs:70:10-36] (CNonCanonical)
                        [W] cobox_amu :: [String] ~ t_amr [" a type equality [String]
                                                                             ~
                                                                             t_amr " FQL.hs:65:20-48] (CNonCanonical)
                        [W] cobox_amv :: [String] ~ t_ams [" a type equality [String]
                                                                             ~
                                                                             t_ams " FQL.hs:65:20-48] (CNonCanonical)
                        [W] cobox_amw :: [Int] ~ t_amt [" a type equality [Int]
                                                                          ~
                                                                          t_amt " FQL.hs:65:20-48] (CNonCanonical)
                        [W] cobox_amA :: [String] ~ t_amx [" a type equality [String]
                                                                             ~
                                                                             t_amx " FQL.hs:60:12-37] (CNonCanonical)
                        [W] cobox_amB :: Table ~ t_amy [" a type equality Table
                                                                          ~
                                                                          t_amy " FQL.hs:60:12-37] (CNonCanonical)
                        [W] cobox_amC :: Table ~ t_amz [" a type equality Table
                                                                          ~
                                                                          t_amz " FQL.hs:60:12-37] (CNonCanonical)
                        [W] cobox_amG :: [Int] ~ t_amD [" a type equality [Int]
                                                                          ~
                                                                          t_amD " FQL.hs:53:15-41] (CNonCanonical)
                        [W] cobox_amH :: [String] ~ t_amE [" a type equality [String]
                                                                             ~
                                                                             t_amE " FQL.hs:53:15-41] (CNonCanonical)
                        [W] cobox_amI :: String ~ t_amF [" a type equality String
                                                                           ~
                                                                           t_amF " FQL.hs:53:15-41] (CNonCanonical)
                        [W] cobox_amL :: Table ~ t_amJ [" a type equality Table
                                                                          ~
                                                                          t_amJ " FQL.hs:49:17-33] (CNonCanonical)
                        [W] cobox_amM :: [String] ~ t_amK [" a type equality [String]
                                                                             ~
                                                                             t_amK " FQL.hs:49:17-33] (CNonCanonical)
                        [W] cobox_amP :: Table ~ t_amN [" a type equality Table
                                                                          ~
                                                                          t_amN " FQL.hs:44:17-30] (CNonCanonical)
                        [W] cobox_amQ :: [Int] ~ t_amO [" a type equality [Int]
                                                                          ~
                                                                          t_amO " FQL.hs:44:17-30] (CNonCanonical)
                        [W] cobox_amT :: Table ~ t_amR [" a type equality Table
                                                                          ~
                                                                          t_amR " FQL.hs:37:21-37] (CNonCanonical)
                        [W] cobox_amU :: [String] ~ t_amS [" a type equality [String]
                                                                             ~
                                                                             t_amS " FQL.hs:37:21-37] (CNonCanonical)
                        [W] cobox_amX :: Table ~ t_amV [" a type equality Table
                                                                          ~
                                                                          t_amV " FQL.hs:33:15-29] (CNonCanonical)
                        [W] cobox_amY :: String ~ t_amW [" a type equality String
                                                                           ~
                                                                           t_amW " FQL.hs:33:15-29] (CNonCanonical)
                        [W] cobox_an0 :: Table ~ t_amZ [" a type equality Table
                                                                          ~
                                                                          t_amZ " FQL.hs:20:13-17] (CNonCanonical)
                        [W] cobox_an2 :: Table ~ t_an1 [" a type equality Table
                                                                          ~
                                                                          t_an1 " FQL.hs:7:14-18] (CNonCanonical)
                        [W] cobox_an6 :: String ~ t_an3 [" a type equality String
                                                                           ~
                                                                           t_an3 " FQL.hs:5:18-41] (CNonCanonical)
                        [W] cobox_an7 :: String ~ t_an4 [" a type equality String
                                                                           ~
                                                                           t_an4 " FQL.hs:5:18-41] (CNonCanonical)
                        [W] cobox_an8 :: Bool ~ t_an5 [" a type equality Bool
                                                                         ~
                                                                         t_an5 " FQL.hs:5:18-41] (CNonCanonical)
                        [W] cobox_anb :: [t_ana] ~ t_alB [" a type equality [t_ana]
                                                                            ~
                                                                            t_alB " FQL.hs:110:15-18] (CNonCanonical)
                        [W] cobox_and :: [t_anc] ~ t_alC [" a type equality [t_anc]
                                                                            ~
                                                                            t_alC " FQL.hs:110:22-25] (CNonCanonical)
                        [W] cobox_anh :: Int ~ t_ane [" a type equality Int
                                                                        ~
                                                                        t_ane " FQL.hs:112:40-48] (CNonCanonical)
                        [W] cobox_ani :: [t_anc] ~ [a_ang] [" a type equality [t_anc]
                                                                              ~
                                                                              [a_ang] " FQL.hs:112:47-48] (CNonCanonical)
                        [W] cobox_anl :: Int ~ t_anj [" a type equality Int
                                                                        ~
                                                                        t_anj " FQL.hs:111:40-48] (CNonCanonical)
                        [W] cobox_anm :: [t_ana] ~ [a_ank] [" a type equality [t_ana]
                                                                              ~
                                                                              [a_ank] " FQL.hs:111:47-48] (CNonCanonical)
                        [W] cobox_ant :: [c_ans] ~ t_alD [" a type equality [c_ans]
                                                                            ~
                                                                            t_alD " FQL.hs:110:30-107] (CNonCanonical)
                        [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                                         ~ (a_anq -> b_anr -> c_ans) [" a type equality [a_anv]
                                                                                        -> [a_anv]
                                                                                        -> [a_anv]
                                                                                        ~
                                                                                        a_anq
                                                                                        -> b_anr
                                                                                        -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
                        [W] cobox_any :: [a_anx] ~ [a_anq] [" a type equality [a_anx]
                                                                              ~
                                                                              [a_anq] " FQL.hs:110:44-76] (CNonCanonical)
                        [W] cobox_anz :: t_ana ~ a_anx [" a type equality t_ana
                                                                          ~
                                                                          a_anx " FQL.hs:110:44] (CNonCanonical)
                        [W] cobox_anC :: [a_anB] ~ [a_anx] [" a type equality [a_anB]
                                                                              ~
                                                                              [a_anx] " FQL.hs:110:47-75] (CNonCanonical)
                        [W] cobox_anH :: [b_anG] ~ [[a_anB]] [" a type equality [b_anG]
                                                                                ~
                                                                                [[a_anB]] " FQL.hs:110:55-74] (CNonCanonical)
                        [W] cobox_anK :: (a_anJ -> [a_anJ])
                                         ~ (a_anF -> b_anG) [" a type equality a_anJ -> [a_anJ]
                                                                               ~
                                                                               a_anF
                                                                               -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
                        [W] cobox_anL :: t_ane ~ Int [" a type equality t_ane
                                                                        ~
                                                                        Int " FQL.hs:110:70] (CNonCanonical)
                        [W] cobox_anM :: [t_ana] ~ [a_anF] [" a type equality [t_ana]
                                                                              ~
                                                                              [a_anF] " FQL.hs:110:73-74] (CNonCanonical)
                        [W] cobox_anO :: [a_anN] ~ [b_anr] [" a type equality [a_anN]
                                                                              ~
                                                                              [b_anr] " FQL.hs:110:80-106] (CNonCanonical)
                        [W] cobox_anP :: t_anc ~ a_anN [" a type equality t_anc
                                                                          ~
                                                                          a_anN " FQL.hs:110:80] (CNonCanonical)
                        [W] cobox_anR :: [a_anQ] ~ [a_anN] [" a type equality [a_anQ]
                                                                              ~
                                                                              [a_anN] " FQL.hs:110:83-105] (CNonCanonical)
                        [W] cobox_anT :: [a_anS] ~ [[a_anQ]] [" a type equality [a_anS]
                                                                                ~
                                                                                [[a_anQ]] " FQL.hs:110:91-104] (CNonCanonical)
                        [W] cobox_anU :: t_anj ~ Int [" a type equality t_anj
                                                                        ~
                                                                        Int " FQL.hs:110:101] (CNonCanonical)
                        [W] cobox_anV :: [t_anc] ~ a_anS [" a type equality [t_anc]
                                                                            ~
                                                                            a_anS " FQL.hs:110:103-104] (CNonCanonical)
                        [W] cobox_anZ :: t_alY ~ (t_anX -> t_anY) [" a type equality t_alY
                                                                                     ~
                                                                                     t_anX
                                                                                     -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
                        [W] cobox_ao0 :: t_anY ~ t_am0 [" a type equality t_anY
                                                                          ~
                                                                          t_am0 " FQL.hs:90:28-48] (CNonCanonical)
                        [W] cobox_ao3 :: a_ao2 ~ t_anX [" a type equality a_ao2
                                                                          ~
                                                                          t_anX " FQL.hs:90:34-47] (CNonCanonical)
                        [W] cobox_ao4 :: t_alZ ~ [a_ao2] [" a type equality t_alZ
                                                                            ~
                                                                            [a_ao2] " FQL.hs:90:34-37] (CNonCanonical)
                        [W] cobox_ao5 :: t_alX ~ Int [" a type equality t_alX
                                                                        ~
                                                                        Int " FQL.hs:90:42-47] (CNonCanonical)
                        [W] cobox_ao9 :: [a_ao8] ~ t_am8 [" a type equality [a_ao8]
                                                                            ~
                                                                            t_am8 " FQL.hs:86:32-65] (CNonCanonical)
                        [W] cobox_aoa :: (t_alZ -> t_am0)
                                         ~ (a_ao8 -> Bool) [" a type equality t_alZ -> t_am0
                                                                              ~
                                                                              a_ao8
                                                                              -> Bool " FQL.hs:86:40-58] (CNonCanonical)
                        [W] cobox_aob :: t_am5 ~ t_alX [" a type equality t_am5
                                                                          ~
                                                                          t_alX " FQL.hs:86:48-53] (CNonCanonical)
                        [W] cobox_aoc :: t_am6 ~ t_alY [" a type equality t_am6
                                                                          ~
                                                                          t_alY " FQL.hs:86:55-58] (CNonCanonical)
                        [W] cobox_aod :: t_am7 ~ [a_ao8] [" a type equality t_am7
                                                                            ~
                                                                            [a_ao8] " FQL.hs:86:61-65] (CNonCanonical)
                        [W] cobox_aoj :: t_aof
                                         ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                                        ~
                                                                                        t_aog
                                                                                        -> t_aoh
                                                                                        -> t_aoi " FQL.hs:56:27-76] (CNonCanonical)
                        [W] cobox_aol :: [a_aok] ~ t_aoi [" a type equality [a_aok]
                                                                            ~
                                                                            t_aoi " FQL.hs:56:42-76] (CNonCanonical)
                        [W] cobox_aom :: [Char] ~ [a_aok] [" a type equality [Char]
                                                                             ~
                                                                             [a_aok] " FQL.hs:56:42-44] (CNonCanonical)
                        [W] cobox_aop :: [a_aoo] ~ [a_aok] [" a type equality [a_aoo]
                                                                              ~
                                                                              [a_aok] " FQL.hs:56:49-76] (CNonCanonical)
                        [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                                        ~
                                                                        Int " FQL.hs:56:54-56] (CNonCanonical)
                        [W] cobox_aos :: [a_aor] ~ [a_aoo] [" a type equality [a_aor]
                                                                              ~
                                                                              [a_aoo] " FQL.hs:56:59-75] (CNonCanonical)
                        [W] cobox_aot :: t_aoh ~ [a_aor] [" a type equality t_aoh
                                                                            ~
                                                                            [a_aor] " FQL.hs:56:59-61] (CNonCanonical)
                        [W] cobox_aow :: [a_aov] ~ [a_aor] [" a type equality [a_aov]
                                                                              ~
                                                                              [a_aor] " FQL.hs:56:66-75] (CNonCanonical)
                        [W] cobox_aox :: Char ~ a_aov [" a type equality Char
                                                                         ~
                                                                         a_aov " FQL.hs:56:73-75] (CNonCanonical)
                        [W] cobox_aoz :: [a_aoy] ~ t_amF [" a type equality [a_aoy]
                                                                            ~
                                                                            t_amF " FQL.hs:54:21-55] (CNonCanonical)
                        [W] cobox_aoB :: [a_aoA] ~ [a_aoy] [" a type equality [a_aoA]
                                                                              ~
                                                                              [a_aoy] " FQL.hs:54:21-48] (CNonCanonical)
                        [W] cobox_aoF :: [c_aoE] ~ [[a_aoA]] [" a type equality [c_aoE]
                                                                                ~
                                                                                [[a_aoA]] " FQL.hs:54:29-47] (CNonCanonical)
                        [W] cobox_aoG :: t_aof
                                         ~ (a_aoC -> b_aoD -> c_aoE) [" a type equality t_aof
                                                                                        ~
                                                                                        a_aoC
                                                                                        -> b_aoD
                                                                                        -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
                        [W] cobox_aoH :: t_amD ~ [a_aoC] [" a type equality t_amD
                                                                            ~
                                                                            [a_aoC] " FQL.hs:54:42-43] (CNonCanonical)
                        [W] cobox_aoI :: t_amE ~ [b_aoD] [" a type equality t_amE
                                                                            ~
                                                                            [b_aoD] " FQL.hs:54:45-47] (CNonCanonical)
                        [W] cobox_aoJ :: [Char] ~ [a_aoy] [" a type equality [Char]
                                                                             ~
                                                                             [a_aoy] " FQL.hs:54:53-55] (CNonCanonical)
                        [W] cobox_aoN :: [b_aoM] ~ t_amO [" a type equality [b_aoM]
                                                                            ~
                                                                            t_amO " FQL.hs:45:22-63] (CNonCanonical)
                        [W] cobox_aoU :: (a_aoT -> c_aoS)
                                         ~ (a_aoL -> b_aoM) [" a type equality a_aoT -> c_aoS
                                                                               ~
                                                                               a_aoL
                                                                               -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
                        [W] $dOrd_arZ :: Ord
                                           a_arY [" a use of ‘maximum’ " FQL.hs:45:27-33] (CNonCanonical)
                        [W] cobox_as0 :: ([a_arY] -> a_arY)
                                         ~ (b_aoR -> c_aoS) [" a type equality [a_arY] -> a_arY
                                                                               ~
                                                                               b_aoR
                                                                               -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
                        [W] cobox_as3 :: ([a_as1] -> [b_as2])
                                         ~ (a_aoT -> b_aoR) [" a type equality [a_as1] -> [b_as2]
                                                                               ~
                                                                               a_aoT
                                                                               -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
                        [W] cobox_as5 :: ([a_as4] -> Int)
                                         ~ (a_as1 -> b_as2) [" a type equality [a_as4] -> Int
                                                                               ~
                                                                               a_as1
                                                                               -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
                        [W] cobox_as8 :: [[a_as7]] ~ [a_aoL] [" a type equality [[a_as7]]
                                                                                ~
                                                                                [a_aoL] " FQL.hs:45:48-62] (CNonCanonical)
                        [W] cobox_as9 :: t_amN ~ [[a_as7]] [" a type equality t_amN
                                                                              ~
                                                                              [[a_as7]] " FQL.hs:45:58-62] (CNonCanonical)
                        [W] cobox_asd :: [b_asc] ~ t_amK [" a type equality [b_asc]
                                                                            ~
                                                                            t_amK " FQL.hs:50:22-64] (CNonCanonical)
                        [W] cobox_ase :: (t_amE -> t_amF)
                                         ~ (a_asb -> b_asc) [" a type equality t_amE -> t_amF
                                                                               ~
                                                                               a_asb
                                                                               -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
                        [W] cobox_asf :: t_amO ~ t_amD [" a type equality t_amO
                                                                          ~
                                                                          t_amD " FQL.hs:50:39-56] (CNonCanonical)
                        [W] cobox_asg :: t_amJ ~ t_amN [" a type equality t_amJ
                                                                          ~
                                                                          t_amN " FQL.hs:50:52-56] (CNonCanonical)
                        [W] cobox_ash :: t_amJ ~ [a_asb] [" a type equality t_amJ
                                                                            ~
                                                                            [a_asb] " FQL.hs:50:60-64] (CNonCanonical)
                        [W] cobox_ask :: t_amK ~ t_asj [" a type equality t_amK
                                                                          ~
                                                                          t_asj " FQL.hs:40:37-54] (CNonCanonical)
                        [W] cobox_asl :: t_amR ~ t_amJ [" a type equality t_amR
                                                                          ~
                                                                          t_amJ " FQL.hs:40:50-54] (CNonCanonical)
                        [W] cobox_asr :: b_asq ~ t_asm [" a type equality b_asq
                                                                          ~
                                                                          t_asm " FQL.hs:39:38-104] (CNonCanonical)
                        [W] cobox_ast :: ([a_ass] -> [a_ass])
                                         ~ (b_asq -> b_asq) [" a type equality [a_ass] -> [a_ass]
                                                                               ~
                                                                               b_asq
                                                                               -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
                        [W] cobox_asv :: [a_asu] ~ [a_ass] [" a type equality [a_asu]
                                                                              ~
                                                                              [a_ass] " FQL.hs:39:56-77] (CNonCanonical)
                        [W] cobox_asw :: [Char] ~ [a_asu] [" a type equality [Char]
                                                                             ~
                                                                             [a_asu] " FQL.hs:39:56-58] (CNonCanonical)
                        [W] cobox_asy :: [a_asx] ~ [a_asu] [" a type equality [a_asx]
                                                                              ~
                                                                              [a_asu] " FQL.hs:39:63-77] (CNonCanonical)
                        [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                                        ~
                                                                        Int " FQL.hs:39:73] (CNonCanonical)
                        [W] cobox_asA :: Char ~ a_asx [" a type equality Char
                                                                         ~
                                                                         a_asx " FQL.hs:39:75-77] (CNonCanonical)
                        [W] cobox_asB :: [Char] ~ b_asq [" a type equality [Char]
                                                                           ~
                                                                           b_asq " FQL.hs:39:81-83] (CNonCanonical)
                        [W] cobox_asC :: t_amO ~ [a_asp] [" a type equality t_amO
                                                                            ~
                                                                            [a_asp] " FQL.hs:39:86-103] (CNonCanonical)
                        [W] cobox_asD :: t_amR ~ t_amN [" a type equality t_amR
                                                                          ~
                                                                          t_amN " FQL.hs:39:99-103] (CNonCanonical)
                        [W] cobox_asF :: [a_asE] ~ t_amS [" a type equality [a_asE]
                                                                            ~
                                                                            t_amS " FQL.hs:38:26-65] (CNonCanonical)
                        [W] cobox_asG :: t_asm ~ a_asE [" a type equality t_asm
                                                                          ~
                                                                          a_asE " FQL.hs:38:26-28] (CNonCanonical)
                        [W] cobox_asI :: [a_asH] ~ [a_asE] [" a type equality [a_asH]
                                                                              ~
                                                                              [a_asE] " FQL.hs:38:32-65] (CNonCanonical)
                        [W] cobox_asL :: a_asK ~ a_asH [" a type equality a_asK
                                                                          ~
                                                                          a_asH " FQL.hs:38:32-39] (CNonCanonical)
                        [W] cobox_asM :: t_asj ~ [a_asK] [" a type equality t_asj
                                                                            ~
                                                                            [a_asK] " FQL.hs:38:37-38] (CNonCanonical)
                        [W] cobox_asO :: [a_asN] ~ [a_asH] [" a type equality [a_asN]
                                                                              ~
                                                                              [a_asH] " FQL.hs:38:43-65] (CNonCanonical)
                        [W] cobox_asP :: t_asm ~ a_asN [" a type equality t_asm
                                                                          ~
                                                                          a_asN " FQL.hs:38:43-45] (CNonCanonical)
                        [W] cobox_asR :: [a_asQ] ~ [a_asN] [" a type equality [a_asQ]
                                                                              ~
                                                                              [a_asN] " FQL.hs:38:49-65] (CNonCanonical)
                        [W] cobox_asU :: [a_asT] ~ [a_asQ] [" a type equality [a_asT]
                                                                              ~
                                                                              [a_asQ] " FQL.hs:38:49-56] (CNonCanonical)
                        [W] cobox_asV :: t_asj ~ [a_asT] [" a type equality t_asj
                                                                            ~
                                                                            [a_asT] " FQL.hs:38:54-55] (CNonCanonical)
                        [W] cobox_asW :: t_asm ~ a_asQ [" a type equality t_asm
                                                                          ~
                                                                          a_asQ " FQL.hs:38:62-64] (CNonCanonical)
                        [W] cobox_at1 :: (a_at0 -> c_asZ)
                                         ~ (t_amV -> t_amW) [" a type equality a_at0 -> c_asZ
                                                                               ~
                                                                               t_amV
                                                                               -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
                        [W] cobox_at2 :: ([String] -> String)
                                         ~ (b_asY -> c_asZ) [" a type equality [String] -> String
                                                                               ~
                                                                               b_asY
                                                                               -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
                        [W] cobox_at3 :: (t_amR -> t_amS)
                                         ~ (a_at0 -> b_asY) [" a type equality t_amR -> t_amS
                                                                               ~
                                                                               a_at0
                                                                               -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
                        [W] cobox_at6 :: [t_at5] ~ t_amZ [" a type equality [t_at5]
                                                                            ~
                                                                            t_amZ " FQL.hs:(22,3)-(29,3)] (CNonCanonical)
                        [W] cobox_at8 :: [t_at7] ~ t_at5 [" a type equality [t_at7]
                                                                            ~
                                                                            t_at5 " FQL.hs:22:5-44] (CNonCanonical)
                        [W] cobox_at9 :: [Char] ~ t_at7 [" a type equality [Char]
                                                                           ~
                                                                           t_at7 " FQL.hs:22:6-27] (CNonCanonical)
                        [W] cobox_ata :: [Char] ~ t_at7 [" a type equality [Char]
                                                                           ~
                                                                           t_at7 " FQL.hs:22:30-35] (CNonCanonical)
                        [W] cobox_atb :: [Char] ~ t_at7 [" a type equality [Char]
                                                                           ~
                                                                           t_at7 " FQL.hs:22:38-43] (CNonCanonical)
                        [W] cobox_atd :: [t_atc] ~ t_at5 [" a type equality [t_atc]
                                                                            ~
                                                                            t_at5 " FQL.hs:23:5-56] (CNonCanonical)
                        [W] cobox_ate :: [Char] ~ t_atc [" a type equality [Char]
                                                                           ~
                                                                           t_atc " FQL.hs:23:6-31] (CNonCanonical)
                        [W] cobox_atf :: [Char] ~ t_atc [" a type equality [Char]
                                                                           ~
                                                                           t_atc " FQL.hs:23:34-44] (CNonCanonical)
                        [W] cobox_atg :: [Char] ~ t_atc [" a type equality [Char]
                                                                           ~
                                                                           t_atc " FQL.hs:23:47-55] (CNonCanonical)
                        [W] cobox_ati :: [t_ath] ~ t_at5 [" a type equality [t_ath]
                                                                            ~
                                                                            t_at5 " FQL.hs:24:5-46] (CNonCanonical)
                        [W] cobox_atj :: [Char] ~ t_ath [" a type equality [Char]
                                                                           ~
                                                                           t_ath " FQL.hs:24:6-25] (CNonCanonical)
                        [W] cobox_atk :: [Char] ~ t_ath [" a type equality [Char]
                                                                           ~
                                                                           t_ath " FQL.hs:24:28-37] (CNonCanonical)
                        [W] cobox_atl :: [Char] ~ t_ath [" a type equality [Char]
                                                                           ~
                                                                           t_ath " FQL.hs:24:40-45] (CNonCanonical)
                        [W] cobox_atn :: [t_atm] ~ t_at5 [" a type equality [t_atm]
                                                                            ~
                                                                            t_at5 " FQL.hs:25:5-51] (CNonCanonical)
                        [W] cobox_ato :: [Char] ~ t_atm [" a type equality [Char]
                                                                           ~
                                                                           t_atm " FQL.hs:25:6-25] (CNonCanonical)
                        [W] cobox_atp :: [Char] ~ t_atm [" a type equality [Char]
                                                                           ~
                                                                           t_atm " FQL.hs:25:28-37] (CNonCanonical)
                        [W] cobox_atq :: [Char] ~ t_atm [" a type equality [Char]
                                                                           ~
                                                                           t_atm " FQL.hs:25:40-50] (CNonCanonical)
                        [W] cobox_ats :: [t_atr] ~ t_at5 [" a type equality [t_atr]
                                                                            ~
                                                                            t_at5 " FQL.hs:26:5-59] (CNonCanonical)
                        [W] cobox_att :: [Char] ~ t_atr [" a type equality [Char]
                                                                           ~
                                                                           t_atr " FQL.hs:26:6-25] (CNonCanonical)
                        [W] cobox_atu :: [Char] ~ t_atr [" a type equality [Char]
                                                                           ~
                                                                           t_atr " FQL.hs:26:28-45] (CNonCanonical)
                        [W] cobox_atv :: [Char] ~ t_atr [" a type equality [Char]
                                                                           ~
                                                                           t_atr " FQL.hs:26:48-58] (CNonCanonical)
                        [W] cobox_atx :: [t_atw] ~ t_at5 [" a type equality [t_atw]
                                                                            ~
                                                                            t_at5 " FQL.hs:27:5-66] (CNonCanonical)
                        [W] cobox_aty :: [Char] ~ t_atw [" a type equality [Char]
                                                                           ~
                                                                           t_atw " FQL.hs:27:6-32] (CNonCanonical)
                        [W] cobox_atz :: [Char] ~ t_atw [" a type equality [Char]
                                                                           ~
                                                                           t_atw " FQL.hs:27:35-52] (CNonCanonical)
                        [W] cobox_atA :: [Char] ~ t_atw [" a type equality [Char]
                                                                           ~
                                                                           t_atw " FQL.hs:27:55-65] (CNonCanonical)
                        [W] cobox_atC :: [t_atB] ~ t_at5 [" a type equality [t_atB]
                                                                            ~
                                                                            t_at5 " FQL.hs:28:5-63] (CNonCanonical)
                        [W] cobox_atD :: [Char] ~ t_atB [" a type equality [Char]
                                                                           ~
                                                                           t_atB " FQL.hs:28:6-40] (CNonCanonical)
                        [W] cobox_atE :: [Char] ~ t_atB [" a type equality [Char]
                                                                           ~
                                                                           t_atB " FQL.hs:28:43-50] (CNonCanonical)
                        [W] cobox_atF :: [Char] ~ t_atB [" a type equality [Char]
                                                                           ~
                                                                           t_atB " FQL.hs:28:53-62] (CNonCanonical)
                        [W] cobox_atI :: [t_atH] ~ t_an1 [" a type equality [t_atH]
                                                                            ~
                                                                            t_an1 " FQL.hs:(9,3)-(18,3)] (CNonCanonical)
                        [W] cobox_atK :: [t_atJ] ~ t_atH [" a type equality [t_atJ]
                                                                            ~
                                                                            t_atH " FQL.hs:9:5-40] (CNonCanonical)
                        [W] cobox_atL :: [Char] ~ t_atJ [" a type equality [Char]
                                                                           ~
                                                                           t_atJ " FQL.hs:9:6-15] (CNonCanonical)
                        [W] cobox_atM :: [Char] ~ t_atJ [" a type equality [Char]
                                                                           ~
                                                                           t_atJ " FQL.hs:9:18-39] (CNonCanonical)
                        [W] cobox_atO :: [t_atN] ~ t_atH [" a type equality [t_atN]
                                                                            ~
                                                                            t_atH " FQL.hs:10:5-42] (CNonCanonical)
                        [W] cobox_atP :: [Char] ~ t_atN [" a type equality [Char]
                                                                           ~
                                                                           t_atN " FQL.hs:10:6-13] (CNonCanonical)
                        [W] cobox_atQ :: [Char] ~ t_atN [" a type equality [Char]
                                                                           ~
                                                                           t_atN " FQL.hs:10:16-41] (CNonCanonical)
                        [W] cobox_atS :: [t_atR] ~ t_atH [" a type equality [t_atR]
                                                                            ~
                                                                            t_atH " FQL.hs:11:5-33] (CNonCanonical)
                        [W] cobox_atT :: [Char] ~ t_atR [" a type equality [Char]
                                                                           ~
                                                                           t_atR " FQL.hs:11:6-10] (CNonCanonical)
                        [W] cobox_atU :: [Char] ~ t_atR [" a type equality [Char]
                                                                           ~
                                                                           t_atR " FQL.hs:11:13-32] (CNonCanonical)
                        [W] cobox_atW :: [t_atV] ~ t_atH [" a type equality [t_atV]
                                                                            ~
                                                                            t_atH " FQL.hs:12:5-33] (CNonCanonical)
                        [W] cobox_atX :: [Char] ~ t_atV [" a type equality [Char]
                                                                           ~
                                                                           t_atV " FQL.hs:12:6-10] (CNonCanonical)
                        [W] cobox_atY :: [Char] ~ t_atV [" a type equality [Char]
                                                                           ~
                                                                           t_atV " FQL.hs:12:13-32] (CNonCanonical)
                        [W] cobox_au0 :: [t_atZ] ~ t_atH [" a type equality [t_atZ]
                                                                            ~
                                                                            t_atH " FQL.hs:13:5-34] (CNonCanonical)
                        [W] cobox_au1 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                           ~
                                                                           t_atZ " FQL.hs:13:6-11] (CNonCanonical)
                        [W] cobox_au2 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                           ~
                                                                           t_atZ " FQL.hs:13:14-33] (CNonCanonical)
                        [W] cobox_au4 :: [t_au3] ~ t_atH [" a type equality [t_au3]
                                                                            ~
                                                                            t_atH " FQL.hs:14:5-38] (CNonCanonical)
                        [W] cobox_au5 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                           ~
                                                                           t_au3 " FQL.hs:14:6-15] (CNonCanonical)
                        [W] cobox_au6 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                           ~
                                                                           t_au3 " FQL.hs:14:18-37] (CNonCanonical)
                        [W] cobox_au8 :: [t_au7] ~ t_atH [" a type equality [t_au7]
                                                                            ~
                                                                            t_atH " FQL.hs:15:5-46] (CNonCanonical)
                        [W] cobox_au9 :: [Char] ~ t_au7 [" a type equality [Char]
                                                                           ~
                                                                           t_au7 " FQL.hs:15:6-16] (CNonCanonical)
                        [W] cobox_aua :: [Char] ~ t_au7 [" a type equality [Char]
                                                                           ~
                                                                           t_au7 " FQL.hs:15:19-45] (CNonCanonical)
                        [W] cobox_auc :: [t_aub] ~ t_atH [" a type equality [t_aub]
                                                                            ~
                                                                            t_atH " FQL.hs:16:5-54] (CNonCanonical)
                        [W] cobox_aud :: [Char] ~ t_aub [" a type equality [Char]
                                                                           ~
                                                                           t_aub " FQL.hs:16:6-16] (CNonCanonical)
                        [W] cobox_aue :: [Char] ~ t_aub [" a type equality [Char]
                                                                           ~
                                                                           t_aub " FQL.hs:16:19-53] (CNonCanonical)
                        [W] cobox_aug :: [t_auf] ~ t_atH [" a type equality [t_auf]
                                                                            ~
                                                                            t_atH " FQL.hs:17:5-48] (CNonCanonical)
                        [W] cobox_auh :: [Char] ~ t_auf [" a type equality [Char]
                                                                           ~
                                                                           t_auf " FQL.hs:17:6-10] (CNonCanonical)
                        [W] cobox_aui :: [Char] ~ t_auf [" a type equality [Char]
                                                                           ~
                                                                           t_auf " FQL.hs:17:13-47] (CNonCanonical)
                        [W] cobox_aul :: a_auk
                                         ~ (t_an3 -> t_an4 -> t_an5) [" a type equality a_auk
                                                                                        ~
                                                                                        t_an3
                                                                                        -> t_an4
                                                                                        -> t_an5 " FQL.hs:6:12-20] (CNonCanonical)
                        [W] cobox_auo :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                            ~
                                                                            t_amm " FQL.hs:71:13-18] (CNonCanonical)
                        [W] cobox_aup :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " FQL.hs:71:23-49] (CNonCanonical)
                        [W] cobox_aus :: [b_aur] ~ [Bool] [" a type equality [b_aur]
                                                                             ~
                                                                             [Bool] " FQL.hs:71:27-48] (CNonCanonical)
                        [W] cobox_aut :: (t_an4 -> t_an5)
                                         ~ (a_auq -> b_aur) [" a type equality t_an4 -> t_an5
                                                                               ~
                                                                               a_auq
                                                                               -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
                        [W] cobox_auu :: t_aun ~ t_an3 [" a type equality t_aun
                                                                          ~
                                                                          t_an3 " FQL.hs:71:41-42] (CNonCanonical)
                        [W] cobox_auv :: t_aml ~ [a_auq] [" a type equality t_aml
                                                                            ~
                                                                            [a_auq] " FQL.hs:71:45-48] (CNonCanonical)
                        [W] $dNum_awD :: Num
                                           a_awC [" the literal ‘0’ " FQL.hs:71:53] (CNonCanonical)
                        [W] cobox_awE :: (Integer -> a_awC)
                                         ~ (Integer -> t_amn) [" a type equality Integer -> a_awC
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_amn " FQL.hs:71:53] (CNonCanonical)
                        [W] cobox_awF :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " FQL.hs:72:23-31] (CNonCanonical)
                        [W] $dNum_awH :: Num
                                           a_awG [" a use of ‘+’ " FQL.hs:72:55] (CNonCanonical)
                        [W] cobox_awI :: a_awG ~ t_amn [" a type equality a_awG
                                                                          ~
                                                                          t_amn " FQL.hs:72:53-70] (CNonCanonical)
                        [W] $dNum_awK :: Num
                                           a_awJ [" the literal ‘1’ " FQL.hs:72:53] (CNonCanonical)
                        [W] cobox_awL :: (Integer -> a_awJ)
                                         ~ (Integer -> a_awG) [" a type equality Integer -> a_awJ
                                                                                 ~
                                                                                 Integer
                                                                                 -> a_awG " FQL.hs:72:53] (CNonCanonical)
                        [W] cobox_awM :: t_amn ~ a_awG [" a type equality t_amn
                                                                          ~
                                                                          a_awG " FQL.hs:72:57-70] (CNonCanonical)
                        [W] cobox_awN :: t_aml ~ t_aml [" a type equality t_aml
                                                                          ~
                                                                          t_aml " FQL.hs:72:63-66] (CNonCanonical)
                        [W] cobox_awO :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                            ~
                                                                            t_amm " FQL.hs:72:68-70] (CNonCanonical)
                        [W] cobox_awS :: [b_awR] ~ t_amt [" a type equality [b_awR]
                                                                            ~
                                                                            t_amt " FQL.hs:66:34-68] (CNonCanonical)
                        [W] cobox_awT :: t_amn ~ b_awR [" a type equality t_amn
                                                                          ~
                                                                          b_awR " FQL.hs:66:44-62] (CNonCanonical)
                        [W] cobox_awV :: [t_awU] ~ t_aml [" a type equality [t_awU]
                                                                            ~
                                                                            t_aml " FQL.hs:66:50-52] (CNonCanonical)
                        [W] cobox_awW :: a_awQ ~ t_awU [" a type equality a_awQ
                                                                          ~
                                                                          t_awU " FQL.hs:66:51] (CNonCanonical)
                        [W] cobox_awX :: t_amr ~ t_amm [" a type equality t_amr
                                                                          ~
                                                                          t_amm " FQL.hs:66:54-62] (CNonCanonical)
                        [W] cobox_awY :: t_ams ~ [a_awQ] [" a type equality t_ams
                                                                            ~
                                                                            [a_awQ] " FQL.hs:66:65-68] (CNonCanonical)
                        [W] cobox_ax1 :: [[a_ax0]] ~ t_amz [" a type equality [[a_ax0]]
                                                                              ~
                                                                              t_amz " FQL.hs:61:23-96] (CNonCanonical)
                        [W] cobox_ax4 :: [b_ax3] ~ [[a_ax0]] [" a type equality [b_ax3]
                                                                                ~
                                                                                [[a_ax0]] " FQL.hs:61:34-95] (CNonCanonical)
                        [W] cobox_ax6 :: (Int -> a_ax5)
                                         ~ (a_ax2 -> b_ax3) [" a type equality Int -> a_ax5
                                                                               ~
                                                                               a_ax2
                                                                               -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
                        [W] cobox_ax8 :: [[a_ax7]] ~ [a_ax5] [" a type equality [[a_ax7]]
                                                                                ~
                                                                                [a_ax5] " FQL.hs:61:40-54] (CNonCanonical)
                        [W] cobox_ax9 :: t_amy ~ [[a_ax7]] [" a type equality t_amy
                                                                              ~
                                                                              [[a_ax7]] " FQL.hs:61:50-54] (CNonCanonical)
                        [W] cobox_axa :: t_amt ~ [a_ax2] [" a type equality t_amt
                                                                            ~
                                                                            [a_ax2] " FQL.hs:61:62-94] (CNonCanonical)
                        [W] cobox_axc :: a_axb ~ t_amr [" a type equality a_axb
                                                                          ~
                                                                          t_amr " FQL.hs:61:79-88] (CNonCanonical)
                        [W] cobox_axd :: t_amy ~ [a_axb] [" a type equality t_amy
                                                                            ~
                                                                            [a_axb] " FQL.hs:61:84-88] (CNonCanonical)
                        [W] cobox_axe :: t_amx ~ t_ams [" a type equality t_amx
                                                                          ~
                                                                          t_ams " FQL.hs:61:91-94] (CNonCanonical)
                        [W] cobox_axh :: [a_axg] ~ t_amg [" a type equality [a_axg]
                                                                            ~
                                                                            t_amg " FQL.hs:79:28-100] (CNonCanonical)
                        [W] cobox_axj :: a_axi ~ a_axg [" a type equality a_axi
                                                                          ~
                                                                          a_axg " FQL.hs:79:29-38] (CNonCanonical)
                        [W] cobox_axk :: t_amf ~ [a_axi] [" a type equality t_amf
                                                                            ~
                                                                            [a_axi] " FQL.hs:79:34-38] (CNonCanonical)
                        [W] cobox_axl :: t_am8 ~ [a_axg] [" a type equality t_am8
                                                                            ~
                                                                            [a_axg] " FQL.hs:79:44-99] (CNonCanonical)
                        [W] cobox_axm :: t_amn ~ t_am5 [" a type equality t_amn
                                                                          ~
                                                                          t_am5 " FQL.hs:79:56-80] (CNonCanonical)
                        [W] cobox_axo :: a_axn ~ t_aml [" a type equality a_axn
                                                                          ~
                                                                          t_aml " FQL.hs:79:63-72] (CNonCanonical)
                        [W] cobox_axp :: t_amf ~ [a_axn] [" a type equality t_amf
                                                                            ~
                                                                            [a_axn] " FQL.hs:79:68-72] (CNonCanonical)
                        [W] cobox_axq :: t_amd ~ t_amm [" a type equality t_amd
                                                                          ~
                                                                          t_amm " FQL.hs:79:75-80] (CNonCanonical)
                        [W] cobox_axr :: t_ame ~ t_am6 [" a type equality t_ame
                                                                          ~
                                                                          t_am6 " FQL.hs:79:83-86] (CNonCanonical)
                        [W] cobox_axt :: [a_axs] ~ t_am7 [" a type equality [a_axs]
                                                                            ~
                                                                            t_am7 " FQL.hs:79:89-98] (CNonCanonical)
                        [W] cobox_axu :: t_amf ~ [a_axs] [" a type equality t_amf
                                                                            ~
                                                                            [a_axs] " FQL.hs:79:94-98] (CNonCanonical)
                        [W] cobox_axx :: [a_axw] ~ t_alL [" a type equality [a_axw]
                                                                            ~
                                                                            t_alL " FQL.hs:105:27-88] (CNonCanonical)
                        [W] cobox_axy :: t_an5 ~ Bool [" a type equality t_an5
                                                                         ~
                                                                         Bool " FQL.hs:105:40-61] (CNonCanonical)
                        [W] cobox_axA :: a_axz ~ t_an3 [" a type equality a_axz
                                                                          ~
                                                                          t_an3 " FQL.hs:105:50-53] (CNonCanonical)
                        [W] cobox_axB :: a_axw ~ [a_axz] [" a type equality a_axw
                                                                            ~
                                                                            [a_axz] " FQL.hs:105:50] (CNonCanonical)
                        [W] cobox_axC :: t_alJ ~ Int [" a type equality t_alJ
                                                                        ~
                                                                        Int " FQL.hs:105:53] (CNonCanonical)
                        [W] cobox_axE :: a_axD ~ t_an4 [" a type equality a_axD
                                                                          ~
                                                                          t_an4 " FQL.hs:105:57-60] (CNonCanonical)
                        [W] cobox_axF :: a_axw ~ [a_axD] [" a type equality a_axw
                                                                            ~
                                                                            [a_axD] " FQL.hs:105:57] (CNonCanonical)
                        [W] cobox_axG :: t_alK ~ Int [" a type equality t_alK
                                                                        ~
                                                                        Int " FQL.hs:105:60] (CNonCanonical)
                        [W] cobox_axH :: t_alD ~ [a_axw] [" a type equality t_alD
                                                                            ~
                                                                            [a_axw] " FQL.hs:105:65-87] (CNonCanonical)
                        [W] cobox_axI :: t_alH ~ t_alB [" a type equality t_alH
                                                                          ~
                                                                          t_alB " FQL.hs:105:78-81] (CNonCanonical)
                        [W] cobox_axJ :: t_alI ~ t_alC [" a type equality t_alI
                                                                          ~
                                                                          t_alC " FQL.hs:105:83-87] (CNonCanonical)
                        [W] $dNum_axN :: Num
                                           a_axM [" a use of ‘+’ " FQL.hs:99:62] (CNonCanonical)
                        [W] cobox_axO :: a_axM ~ t_axL [" a type equality a_axM
                                                                          ~
                                                                          t_axL " FQL.hs:99:30-81] (CNonCanonical)
                        [W] cobox_axP :: t_amn ~ a_axM [" a type equality t_amn
                                                                          ~
                                                                          a_axM " FQL.hs:99:30-60] (CNonCanonical)
                        [W] cobox_axR :: a_axQ ~ t_aml [" a type equality a_axQ
                                                                          ~
                                                                          t_aml " FQL.hs:99:37-45] (CNonCanonical)
                        [W] cobox_axS :: t_alR ~ [a_axQ] [" a type equality t_alR
                                                                            ~
                                                                            [a_axQ] " FQL.hs:99:42-45] (CNonCanonical)
                        [W] cobox_axU :: a_axT ~ t_amm [" a type equality a_axT
                                                                          ~
                                                                          t_amm " FQL.hs:99:50-59] (CNonCanonical)
                        [W] cobox_axV :: t_alS ~ [a_axT] [" a type equality t_alS
                                                                            ~
                                                                            [a_axT] " FQL.hs:99:55-59] (CNonCanonical)
                        [W] cobox_axX :: Int ~ a_axM [" a type equality Int
                                                                        ~
                                                                        a_axM " FQL.hs:99:64-81] (CNonCanonical)
                        [W] cobox_axZ :: a_axY ~ [a_axW] [" a type equality a_axY
                                                                            ~
                                                                            [a_axW] " FQL.hs:99:72-80] (CNonCanonical)
                        [W] cobox_ay0 :: t_alR ~ [a_axY] [" a type equality t_alR
                                                                            ~
                                                                            [a_axY] " FQL.hs:99:77-80] (CNonCanonical)
                        [W] cobox_ay2 :: t_amn ~ t_ay1 [" a type equality t_amn
                                                                          ~
                                                                          t_ay1 " FQL.hs:98:30-59] (CNonCanonical)
                        [W] cobox_ay4 :: a_ay3 ~ t_aml [" a type equality a_ay3
                                                                          ~
                                                                          t_aml " FQL.hs:98:37-46] (CNonCanonical)
                        [W] cobox_ay5 :: t_alS ~ [a_ay3] [" a type equality t_alS
                                                                            ~
                                                                            [a_ay3] " FQL.hs:98:42-46] (CNonCanonical)
                        [W] cobox_ay7 :: a_ay6 ~ t_amm [" a type equality a_ay6
                                                                          ~
                                                                          t_amm " FQL.hs:98:50-58] (CNonCanonical)
                        [W] cobox_ay8 :: t_alR ~ [a_ay6] [" a type equality t_alR
                                                                            ~
                                                                            [a_ay6] " FQL.hs:98:55-58] (CNonCanonical)
                        [W] cobox_ayb :: [b_aya] ~ t_alT [" a type equality [b_aya]
                                                                            ~
                                                                            t_alT " FQL.hs:97:20-82] (CNonCanonical)
                        [W] cobox_ayd :: [a_ayc] ~ b_aya [" a type equality [a_ayc]
                                                                            ~
                                                                            b_aya " FQL.hs:97:30-55] (CNonCanonical)
                        [W] cobox_ayf :: [a_aye] ~ [a_ayc] [" a type equality [a_aye]
                                                                              ~
                                                                              [a_ayc] " FQL.hs:97:30-37] (CNonCanonical)
                        [W] cobox_ayg :: t_axL ~ Int [" a type equality t_axL
                                                                        ~
                                                                        Int " FQL.hs:97:35] (CNonCanonical)
                        [W] cobox_ayh :: a_ay9 ~ [a_aye] [" a type equality a_ay9
                                                                            ~
                                                                            [a_aye] " FQL.hs:97:37] (CNonCanonical)
                        [W] cobox_ayk :: [a_ayj] ~ [a_ayc] [" a type equality [a_ayj]
                                                                              ~
                                                                              [a_ayc] " FQL.hs:97:43-54] (CNonCanonical)
                        [W] $dNum_aym :: Num
                                           a_ayl [" a use of ‘+’ " FQL.hs:97:50] (CNonCanonical)
                        [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                                        ~
                                                                        Int " FQL.hs:97:49-51] (CNonCanonical)
                        [W] cobox_ayo :: t_axL ~ a_ayl [" a type equality t_axL
                                                                          ~
                                                                          a_ayl " FQL.hs:97:49] (CNonCanonical)
                        [W] $dNum_ayq :: Num
                                           a_ayp [" the literal ‘1’ " FQL.hs:97:51] (CNonCanonical)
                        [W] cobox_ayr :: (Integer -> a_ayp)
                                         ~ (Integer -> a_ayl) [" a type equality Integer -> a_ayp
                                                                                 ~
                                                                                 Integer
                                                                                 -> a_ayl " FQL.hs:97:51] (CNonCanonical)
                        [W] cobox_ays :: a_ay9 ~ [a_ayj] [" a type equality a_ay9
                                                                            ~
                                                                            [a_ayj] " FQL.hs:97:54] (CNonCanonical)
                        [W] cobox_ayt :: t_alL ~ [a_ay9] [" a type equality t_alL
                                                                            ~
                                                                            [a_ay9] " FQL.hs:97:59-81] (CNonCanonical)
                        [W] cobox_ayu :: t_alR ~ t_alH [" a type equality t_alR
                                                                          ~
                                                                          t_alH " FQL.hs:97:68-71] (CNonCanonical)
                        [W] cobox_ayv :: t_alS ~ t_alI [" a type equality t_alS
                                                                          ~
                                                                          t_alI " FQL.hs:97:73-77] (CNonCanonical)
                        [W] cobox_ayw :: t_ay1 ~ t_alJ [" a type equality t_ay1
                                                                          ~
                                                                          t_alJ " FQL.hs:97:79] (CNonCanonical)
                        [W] cobox_ayx :: t_axL ~ t_alK [" a type equality t_axL
                                                                          ~
                                                                          t_alK " FQL.hs:97:81] (CNonCanonical)}
solveWanteds {
  WC {wc_flat = [W] cobox_alE :: Table
                                 ~ t_alB [" a type equality Table
                                                            ~
                                                            t_alB " FQL.hs:109:17-39] (CNonCanonical)
                [W] cobox_alF :: Table ~ t_alC [" a type equality Table
                                                                  ~
                                                                  t_alC " FQL.hs:109:17-39] (CNonCanonical)
                [W] cobox_alG :: Table ~ t_alD [" a type equality Table
                                                                  ~
                                                                  t_alD " FQL.hs:109:17-39] (CNonCanonical)
                [W] cobox_alM :: Table ~ t_alH [" a type equality Table
                                                                  ~
                                                                  t_alH " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alN :: Table ~ t_alI [" a type equality Table
                                                                  ~
                                                                  t_alI " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alO :: Int ~ t_alJ [" a type equality Int
                                                                ~
                                                                t_alJ " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alP :: Int ~ t_alK [" a type equality Int
                                                                ~
                                                                t_alK " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alQ :: Table ~ t_alL [" a type equality Table
                                                                  ~
                                                                  t_alL " FQL.hs:104:13-49] (CNonCanonical)
                [W] cobox_alU :: Table ~ t_alR [" a type equality Table
                                                                  ~
                                                                  t_alR " FQL.hs:96:9-31] (CNonCanonical)
                [W] cobox_alV :: Table ~ t_alS [" a type equality Table
                                                                  ~
                                                                  t_alS " FQL.hs:96:9-31] (CNonCanonical)
                [W] cobox_alW :: Table ~ t_alT [" a type equality Table
                                                                  ~
                                                                  t_alT " FQL.hs:96:9-31] (CNonCanonical)
                [W] cobox_am1 :: Int ~ t_alX [" a type equality Int
                                                                ~
                                                                t_alX " FQL.hs:89:12-54] (CNonCanonical)
                [W] cobox_am2 :: (String -> Bool) ~ t_alY [" a type equality String
                                                                             -> Bool
                                                                             ~
                                                                             t_alY " FQL.hs:89:12-54] (CNonCanonical)
                [W] cobox_am3 :: [String] ~ t_alZ [" a type equality [String]
                                                                     ~
                                                                     t_alZ " FQL.hs:89:12-54] (CNonCanonical)
                [W] cobox_am4 :: Bool ~ t_am0 [" a type equality Bool
                                                                 ~
                                                                 t_am0 " FQL.hs:89:12-54] (CNonCanonical)
                [W] cobox_am9 :: Int ~ t_am5 [" a type equality Int
                                                                ~
                                                                t_am5 " FQL.hs:85:15-55] (CNonCanonical)
                [W] cobox_ama :: (String -> Bool) ~ t_am6 [" a type equality String
                                                                             -> Bool
                                                                             ~
                                                                             t_am6 " FQL.hs:85:15-55] (CNonCanonical)
                [W] cobox_amb :: Table ~ t_am7 [" a type equality Table
                                                                  ~
                                                                  t_am7 " FQL.hs:85:15-55] (CNonCanonical)
                [W] cobox_amc :: Table ~ t_am8 [" a type equality Table
                                                                  ~
                                                                  t_am8 " FQL.hs:85:15-55] (CNonCanonical)
                [W] cobox_amh :: String ~ t_amd [" a type equality String
                                                                   ~
                                                                   t_amd " FQL.hs:78:11-54] (CNonCanonical)
                [W] cobox_ami :: (String -> Bool) ~ t_ame [" a type equality String
                                                                             -> Bool
                                                                             ~
                                                                             t_ame " FQL.hs:78:11-54] (CNonCanonical)
                [W] cobox_amj :: Table ~ t_amf [" a type equality Table
                                                                  ~
                                                                  t_amf " FQL.hs:78:11-54] (CNonCanonical)
                [W] cobox_amk :: Table ~ t_amg [" a type equality Table
                                                                  ~
                                                                  t_amg " FQL.hs:78:11-54] (CNonCanonical)
                [W] cobox_amo :: [String] ~ t_aml [" a type equality [String]
                                                                     ~
                                                                     t_aml " FQL.hs:70:10-36] (CNonCanonical)
                [W] cobox_amp :: [String] ~ t_amm [" a type equality [String]
                                                                     ~
                                                                     t_amm " FQL.hs:70:10-36] (CNonCanonical)
                [W] cobox_amq :: Int ~ t_amn [" a type equality Int
                                                                ~
                                                                t_amn " FQL.hs:70:10-36] (CNonCanonical)
                [W] cobox_amu :: [String] ~ t_amr [" a type equality [String]
                                                                     ~
                                                                     t_amr " FQL.hs:65:20-48] (CNonCanonical)
                [W] cobox_amv :: [String] ~ t_ams [" a type equality [String]
                                                                     ~
                                                                     t_ams " FQL.hs:65:20-48] (CNonCanonical)
                [W] cobox_amw :: [Int] ~ t_amt [" a type equality [Int]
                                                                  ~
                                                                  t_amt " FQL.hs:65:20-48] (CNonCanonical)
                [W] cobox_amA :: [String] ~ t_amx [" a type equality [String]
                                                                     ~
                                                                     t_amx " FQL.hs:60:12-37] (CNonCanonical)
                [W] cobox_amB :: Table ~ t_amy [" a type equality Table
                                                                  ~
                                                                  t_amy " FQL.hs:60:12-37] (CNonCanonical)
                [W] cobox_amC :: Table ~ t_amz [" a type equality Table
                                                                  ~
                                                                  t_amz " FQL.hs:60:12-37] (CNonCanonical)
                [W] cobox_amG :: [Int] ~ t_amD [" a type equality [Int]
                                                                  ~
                                                                  t_amD " FQL.hs:53:15-41] (CNonCanonical)
                [W] cobox_amH :: [String] ~ t_amE [" a type equality [String]
                                                                     ~
                                                                     t_amE " FQL.hs:53:15-41] (CNonCanonical)
                [W] cobox_amI :: String ~ t_amF [" a type equality String
                                                                   ~
                                                                   t_amF " FQL.hs:53:15-41] (CNonCanonical)
                [W] cobox_amL :: Table ~ t_amJ [" a type equality Table
                                                                  ~
                                                                  t_amJ " FQL.hs:49:17-33] (CNonCanonical)
                [W] cobox_amM :: [String] ~ t_amK [" a type equality [String]
                                                                     ~
                                                                     t_amK " FQL.hs:49:17-33] (CNonCanonical)
                [W] cobox_amP :: Table ~ t_amN [" a type equality Table
                                                                  ~
                                                                  t_amN " FQL.hs:44:17-30] (CNonCanonical)
                [W] cobox_amQ :: [Int] ~ t_amO [" a type equality [Int]
                                                                  ~
                                                                  t_amO " FQL.hs:44:17-30] (CNonCanonical)
                [W] cobox_amT :: Table ~ t_amR [" a type equality Table
                                                                  ~
                                                                  t_amR " FQL.hs:37:21-37] (CNonCanonical)
                [W] cobox_amU :: [String] ~ t_amS [" a type equality [String]
                                                                     ~
                                                                     t_amS " FQL.hs:37:21-37] (CNonCanonical)
                [W] cobox_amX :: Table ~ t_amV [" a type equality Table
                                                                  ~
                                                                  t_amV " FQL.hs:33:15-29] (CNonCanonical)
                [W] cobox_amY :: String ~ t_amW [" a type equality String
                                                                   ~
                                                                   t_amW " FQL.hs:33:15-29] (CNonCanonical)
                [W] cobox_an0 :: Table ~ t_amZ [" a type equality Table
                                                                  ~
                                                                  t_amZ " FQL.hs:20:13-17] (CNonCanonical)
                [W] cobox_an2 :: Table ~ t_an1 [" a type equality Table
                                                                  ~
                                                                  t_an1 " FQL.hs:7:14-18] (CNonCanonical)
                [W] cobox_an6 :: String ~ t_an3 [" a type equality String
                                                                   ~
                                                                   t_an3 " FQL.hs:5:18-41] (CNonCanonical)
                [W] cobox_an7 :: String ~ t_an4 [" a type equality String
                                                                   ~
                                                                   t_an4 " FQL.hs:5:18-41] (CNonCanonical)
                [W] cobox_an8 :: Bool ~ t_an5 [" a type equality Bool
                                                                 ~
                                                                 t_an5 " FQL.hs:5:18-41] (CNonCanonical)
                [W] cobox_anb :: [t_ana] ~ t_alB [" a type equality [t_ana]
                                                                    ~
                                                                    t_alB " FQL.hs:110:15-18] (CNonCanonical)
                [W] cobox_and :: [t_anc] ~ t_alC [" a type equality [t_anc]
                                                                    ~
                                                                    t_alC " FQL.hs:110:22-25] (CNonCanonical)
                [W] cobox_anh :: Int ~ t_ane [" a type equality Int
                                                                ~
                                                                t_ane " FQL.hs:112:40-48] (CNonCanonical)
                [W] cobox_ani :: [t_anc] ~ [a_ang] [" a type equality [t_anc]
                                                                      ~
                                                                      [a_ang] " FQL.hs:112:47-48] (CNonCanonical)
                [W] cobox_anl :: Int ~ t_anj [" a type equality Int
                                                                ~
                                                                t_anj " FQL.hs:111:40-48] (CNonCanonical)
                [W] cobox_anm :: [t_ana] ~ [a_ank] [" a type equality [t_ana]
                                                                      ~
                                                                      [a_ank] " FQL.hs:111:47-48] (CNonCanonical)
                [W] cobox_ant :: [c_ans] ~ t_alD [" a type equality [c_ans]
                                                                    ~
                                                                    t_alD " FQL.hs:110:30-107] (CNonCanonical)
                [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                                 ~ (a_anq -> b_anr -> c_ans) [" a type equality [a_anv]
                                                                                -> [a_anv]
                                                                                -> [a_anv]
                                                                                ~
                                                                                a_anq
                                                                                -> b_anr
                                                                                -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
                [W] cobox_any :: [a_anx] ~ [a_anq] [" a type equality [a_anx]
                                                                      ~
                                                                      [a_anq] " FQL.hs:110:44-76] (CNonCanonical)
                [W] cobox_anz :: t_ana ~ a_anx [" a type equality t_ana
                                                                  ~
                                                                  a_anx " FQL.hs:110:44] (CNonCanonical)
                [W] cobox_anC :: [a_anB] ~ [a_anx] [" a type equality [a_anB]
                                                                      ~
                                                                      [a_anx] " FQL.hs:110:47-75] (CNonCanonical)
                [W] cobox_anH :: [b_anG] ~ [[a_anB]] [" a type equality [b_anG]
                                                                        ~
                                                                        [[a_anB]] " FQL.hs:110:55-74] (CNonCanonical)
                [W] cobox_anK :: (a_anJ -> [a_anJ])
                                 ~ (a_anF -> b_anG) [" a type equality a_anJ -> [a_anJ]
                                                                       ~
                                                                       a_anF
                                                                       -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
                [W] cobox_anL :: t_ane ~ Int [" a type equality t_ane
                                                                ~
                                                                Int " FQL.hs:110:70] (CNonCanonical)
                [W] cobox_anM :: [t_ana] ~ [a_anF] [" a type equality [t_ana]
                                                                      ~
                                                                      [a_anF] " FQL.hs:110:73-74] (CNonCanonical)
                [W] cobox_anO :: [a_anN] ~ [b_anr] [" a type equality [a_anN]
                                                                      ~
                                                                      [b_anr] " FQL.hs:110:80-106] (CNonCanonical)
                [W] cobox_anP :: t_anc ~ a_anN [" a type equality t_anc
                                                                  ~
                                                                  a_anN " FQL.hs:110:80] (CNonCanonical)
                [W] cobox_anR :: [a_anQ] ~ [a_anN] [" a type equality [a_anQ]
                                                                      ~
                                                                      [a_anN] " FQL.hs:110:83-105] (CNonCanonical)
                [W] cobox_anT :: [a_anS] ~ [[a_anQ]] [" a type equality [a_anS]
                                                                        ~
                                                                        [[a_anQ]] " FQL.hs:110:91-104] (CNonCanonical)
                [W] cobox_anU :: t_anj ~ Int [" a type equality t_anj
                                                                ~
                                                                Int " FQL.hs:110:101] (CNonCanonical)
                [W] cobox_anV :: [t_anc] ~ a_anS [" a type equality [t_anc]
                                                                    ~
                                                                    a_anS " FQL.hs:110:103-104] (CNonCanonical)
                [W] cobox_anZ :: t_alY ~ (t_anX -> t_anY) [" a type equality t_alY
                                                                             ~
                                                                             t_anX
                                                                             -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
                [W] cobox_ao0 :: t_anY ~ t_am0 [" a type equality t_anY
                                                                  ~
                                                                  t_am0 " FQL.hs:90:28-48] (CNonCanonical)
                [W] cobox_ao3 :: a_ao2 ~ t_anX [" a type equality a_ao2
                                                                  ~
                                                                  t_anX " FQL.hs:90:34-47] (CNonCanonical)
                [W] cobox_ao4 :: t_alZ ~ [a_ao2] [" a type equality t_alZ
                                                                    ~
                                                                    [a_ao2] " FQL.hs:90:34-37] (CNonCanonical)
                [W] cobox_ao5 :: t_alX ~ Int [" a type equality t_alX
                                                                ~
                                                                Int " FQL.hs:90:42-47] (CNonCanonical)
                [W] cobox_ao9 :: [a_ao8] ~ t_am8 [" a type equality [a_ao8]
                                                                    ~
                                                                    t_am8 " FQL.hs:86:32-65] (CNonCanonical)
                [W] cobox_aoa :: (t_alZ -> t_am0)
                                 ~ (a_ao8 -> Bool) [" a type equality t_alZ -> t_am0
                                                                      ~
                                                                      a_ao8
                                                                      -> Bool " FQL.hs:86:40-58] (CNonCanonical)
                [W] cobox_aob :: t_am5 ~ t_alX [" a type equality t_am5
                                                                  ~
                                                                  t_alX " FQL.hs:86:48-53] (CNonCanonical)
                [W] cobox_aoc :: t_am6 ~ t_alY [" a type equality t_am6
                                                                  ~
                                                                  t_alY " FQL.hs:86:55-58] (CNonCanonical)
                [W] cobox_aod :: t_am7 ~ [a_ao8] [" a type equality t_am7
                                                                    ~
                                                                    [a_ao8] " FQL.hs:86:61-65] (CNonCanonical)
                [W] cobox_aoj :: t_aof
                                 ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                                ~
                                                                                t_aog
                                                                                -> t_aoh
                                                                                -> t_aoi " FQL.hs:56:27-76] (CNonCanonical)
                [W] cobox_aol :: [a_aok] ~ t_aoi [" a type equality [a_aok]
                                                                    ~
                                                                    t_aoi " FQL.hs:56:42-76] (CNonCanonical)
                [W] cobox_aom :: [Char] ~ [a_aok] [" a type equality [Char]
                                                                     ~
                                                                     [a_aok] " FQL.hs:56:42-44] (CNonCanonical)
                [W] cobox_aop :: [a_aoo] ~ [a_aok] [" a type equality [a_aoo]
                                                                      ~
                                                                      [a_aok] " FQL.hs:56:49-76] (CNonCanonical)
                [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                                ~
                                                                Int " FQL.hs:56:54-56] (CNonCanonical)
                [W] cobox_aos :: [a_aor] ~ [a_aoo] [" a type equality [a_aor]
                                                                      ~
                                                                      [a_aoo] " FQL.hs:56:59-75] (CNonCanonical)
                [W] cobox_aot :: t_aoh ~ [a_aor] [" a type equality t_aoh
                                                                    ~
                                                                    [a_aor] " FQL.hs:56:59-61] (CNonCanonical)
                [W] cobox_aow :: [a_aov] ~ [a_aor] [" a type equality [a_aov]
                                                                      ~
                                                                      [a_aor] " FQL.hs:56:66-75] (CNonCanonical)
                [W] cobox_aox :: Char ~ a_aov [" a type equality Char
                                                                 ~
                                                                 a_aov " FQL.hs:56:73-75] (CNonCanonical)
                [W] cobox_aoz :: [a_aoy] ~ t_amF [" a type equality [a_aoy]
                                                                    ~
                                                                    t_amF " FQL.hs:54:21-55] (CNonCanonical)
                [W] cobox_aoB :: [a_aoA] ~ [a_aoy] [" a type equality [a_aoA]
                                                                      ~
                                                                      [a_aoy] " FQL.hs:54:21-48] (CNonCanonical)
                [W] cobox_aoF :: [c_aoE] ~ [[a_aoA]] [" a type equality [c_aoE]
                                                                        ~
                                                                        [[a_aoA]] " FQL.hs:54:29-47] (CNonCanonical)
                [W] cobox_aoG :: t_aof
                                 ~ (a_aoC -> b_aoD -> c_aoE) [" a type equality t_aof
                                                                                ~
                                                                                a_aoC
                                                                                -> b_aoD
                                                                                -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
                [W] cobox_aoH :: t_amD ~ [a_aoC] [" a type equality t_amD
                                                                    ~
                                                                    [a_aoC] " FQL.hs:54:42-43] (CNonCanonical)
                [W] cobox_aoI :: t_amE ~ [b_aoD] [" a type equality t_amE
                                                                    ~
                                                                    [b_aoD] " FQL.hs:54:45-47] (CNonCanonical)
                [W] cobox_aoJ :: [Char] ~ [a_aoy] [" a type equality [Char]
                                                                     ~
                                                                     [a_aoy] " FQL.hs:54:53-55] (CNonCanonical)
                [W] cobox_aoN :: [b_aoM] ~ t_amO [" a type equality [b_aoM]
                                                                    ~
                                                                    t_amO " FQL.hs:45:22-63] (CNonCanonical)
                [W] cobox_aoU :: (a_aoT -> c_aoS)
                                 ~ (a_aoL -> b_aoM) [" a type equality a_aoT -> c_aoS
                                                                       ~
                                                                       a_aoL
                                                                       -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
                [W] $dOrd_arZ :: Ord
                                   a_arY [" a use of ‘maximum’ " FQL.hs:45:27-33] (CNonCanonical)
                [W] cobox_as0 :: ([a_arY] -> a_arY)
                                 ~ (b_aoR -> c_aoS) [" a type equality [a_arY] -> a_arY
                                                                       ~
                                                                       b_aoR
                                                                       -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
                [W] cobox_as3 :: ([a_as1] -> [b_as2])
                                 ~ (a_aoT -> b_aoR) [" a type equality [a_as1] -> [b_as2]
                                                                       ~
                                                                       a_aoT
                                                                       -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
                [W] cobox_as5 :: ([a_as4] -> Int)
                                 ~ (a_as1 -> b_as2) [" a type equality [a_as4] -> Int
                                                                       ~
                                                                       a_as1
                                                                       -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
                [W] cobox_as8 :: [[a_as7]] ~ [a_aoL] [" a type equality [[a_as7]]
                                                                        ~
                                                                        [a_aoL] " FQL.hs:45:48-62] (CNonCanonical)
                [W] cobox_as9 :: t_amN ~ [[a_as7]] [" a type equality t_amN
                                                                      ~
                                                                      [[a_as7]] " FQL.hs:45:58-62] (CNonCanonical)
                [W] cobox_asd :: [b_asc] ~ t_amK [" a type equality [b_asc]
                                                                    ~
                                                                    t_amK " FQL.hs:50:22-64] (CNonCanonical)
                [W] cobox_ase :: (t_amE -> t_amF)
                                 ~ (a_asb -> b_asc) [" a type equality t_amE -> t_amF
                                                                       ~
                                                                       a_asb
                                                                       -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
                [W] cobox_asf :: t_amO ~ t_amD [" a type equality t_amO
                                                                  ~
                                                                  t_amD " FQL.hs:50:39-56] (CNonCanonical)
                [W] cobox_asg :: t_amJ ~ t_amN [" a type equality t_amJ
                                                                  ~
                                                                  t_amN " FQL.hs:50:52-56] (CNonCanonical)
                [W] cobox_ash :: t_amJ ~ [a_asb] [" a type equality t_amJ
                                                                    ~
                                                                    [a_asb] " FQL.hs:50:60-64] (CNonCanonical)
                [W] cobox_ask :: t_amK ~ t_asj [" a type equality t_amK
                                                                  ~
                                                                  t_asj " FQL.hs:40:37-54] (CNonCanonical)
                [W] cobox_asl :: t_amR ~ t_amJ [" a type equality t_amR
                                                                  ~
                                                                  t_amJ " FQL.hs:40:50-54] (CNonCanonical)
                [W] cobox_asr :: b_asq ~ t_asm [" a type equality b_asq
                                                                  ~
                                                                  t_asm " FQL.hs:39:38-104] (CNonCanonical)
                [W] cobox_ast :: ([a_ass] -> [a_ass])
                                 ~ (b_asq -> b_asq) [" a type equality [a_ass] -> [a_ass]
                                                                       ~
                                                                       b_asq
                                                                       -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
                [W] cobox_asv :: [a_asu] ~ [a_ass] [" a type equality [a_asu]
                                                                      ~
                                                                      [a_ass] " FQL.hs:39:56-77] (CNonCanonical)
                [W] cobox_asw :: [Char] ~ [a_asu] [" a type equality [Char]
                                                                     ~
                                                                     [a_asu] " FQL.hs:39:56-58] (CNonCanonical)
                [W] cobox_asy :: [a_asx] ~ [a_asu] [" a type equality [a_asx]
                                                                      ~
                                                                      [a_asu] " FQL.hs:39:63-77] (CNonCanonical)
                [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                                ~
                                                                Int " FQL.hs:39:73] (CNonCanonical)
                [W] cobox_asA :: Char ~ a_asx [" a type equality Char
                                                                 ~
                                                                 a_asx " FQL.hs:39:75-77] (CNonCanonical)
                [W] cobox_asB :: [Char] ~ b_asq [" a type equality [Char]
                                                                   ~
                                                                   b_asq " FQL.hs:39:81-83] (CNonCanonical)
                [W] cobox_asC :: t_amO ~ [a_asp] [" a type equality t_amO
                                                                    ~
                                                                    [a_asp] " FQL.hs:39:86-103] (CNonCanonical)
                [W] cobox_asD :: t_amR ~ t_amN [" a type equality t_amR
                                                                  ~
                                                                  t_amN " FQL.hs:39:99-103] (CNonCanonical)
                [W] cobox_asF :: [a_asE] ~ t_amS [" a type equality [a_asE]
                                                                    ~
                                                                    t_amS " FQL.hs:38:26-65] (CNonCanonical)
                [W] cobox_asG :: t_asm ~ a_asE [" a type equality t_asm
                                                                  ~
                                                                  a_asE " FQL.hs:38:26-28] (CNonCanonical)
                [W] cobox_asI :: [a_asH] ~ [a_asE] [" a type equality [a_asH]
                                                                      ~
                                                                      [a_asE] " FQL.hs:38:32-65] (CNonCanonical)
                [W] cobox_asL :: a_asK ~ a_asH [" a type equality a_asK
                                                                  ~
                                                                  a_asH " FQL.hs:38:32-39] (CNonCanonical)
                [W] cobox_asM :: t_asj ~ [a_asK] [" a type equality t_asj
                                                                    ~
                                                                    [a_asK] " FQL.hs:38:37-38] (CNonCanonical)
                [W] cobox_asO :: [a_asN] ~ [a_asH] [" a type equality [a_asN]
                                                                      ~
                                                                      [a_asH] " FQL.hs:38:43-65] (CNonCanonical)
                [W] cobox_asP :: t_asm ~ a_asN [" a type equality t_asm
                                                                  ~
                                                                  a_asN " FQL.hs:38:43-45] (CNonCanonical)
                [W] cobox_asR :: [a_asQ] ~ [a_asN] [" a type equality [a_asQ]
                                                                      ~
                                                                      [a_asN] " FQL.hs:38:49-65] (CNonCanonical)
                [W] cobox_asU :: [a_asT] ~ [a_asQ] [" a type equality [a_asT]
                                                                      ~
                                                                      [a_asQ] " FQL.hs:38:49-56] (CNonCanonical)
                [W] cobox_asV :: t_asj ~ [a_asT] [" a type equality t_asj
                                                                    ~
                                                                    [a_asT] " FQL.hs:38:54-55] (CNonCanonical)
                [W] cobox_asW :: t_asm ~ a_asQ [" a type equality t_asm
                                                                  ~
                                                                  a_asQ " FQL.hs:38:62-64] (CNonCanonical)
                [W] cobox_at1 :: (a_at0 -> c_asZ)
                                 ~ (t_amV -> t_amW) [" a type equality a_at0 -> c_asZ
                                                                       ~
                                                                       t_amV
                                                                       -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
                [W] cobox_at2 :: ([String] -> String)
                                 ~ (b_asY -> c_asZ) [" a type equality [String] -> String
                                                                       ~
                                                                       b_asY
                                                                       -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
                [W] cobox_at3 :: (t_amR -> t_amS)
                                 ~ (a_at0 -> b_asY) [" a type equality t_amR -> t_amS
                                                                       ~
                                                                       a_at0
                                                                       -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
                [W] cobox_at6 :: [t_at5] ~ t_amZ [" a type equality [t_at5]
                                                                    ~
                                                                    t_amZ " FQL.hs:(22,3)-(29,3)] (CNonCanonical)
                [W] cobox_at8 :: [t_at7] ~ t_at5 [" a type equality [t_at7]
                                                                    ~
                                                                    t_at5 " FQL.hs:22:5-44] (CNonCanonical)
                [W] cobox_at9 :: [Char] ~ t_at7 [" a type equality [Char]
                                                                   ~
                                                                   t_at7 " FQL.hs:22:6-27] (CNonCanonical)
                [W] cobox_ata :: [Char] ~ t_at7 [" a type equality [Char]
                                                                   ~
                                                                   t_at7 " FQL.hs:22:30-35] (CNonCanonical)
                [W] cobox_atb :: [Char] ~ t_at7 [" a type equality [Char]
                                                                   ~
                                                                   t_at7 " FQL.hs:22:38-43] (CNonCanonical)
                [W] cobox_atd :: [t_atc] ~ t_at5 [" a type equality [t_atc]
                                                                    ~
                                                                    t_at5 " FQL.hs:23:5-56] (CNonCanonical)
                [W] cobox_ate :: [Char] ~ t_atc [" a type equality [Char]
                                                                   ~
                                                                   t_atc " FQL.hs:23:6-31] (CNonCanonical)
                [W] cobox_atf :: [Char] ~ t_atc [" a type equality [Char]
                                                                   ~
                                                                   t_atc " FQL.hs:23:34-44] (CNonCanonical)
                [W] cobox_atg :: [Char] ~ t_atc [" a type equality [Char]
                                                                   ~
                                                                   t_atc " FQL.hs:23:47-55] (CNonCanonical)
                [W] cobox_ati :: [t_ath] ~ t_at5 [" a type equality [t_ath]
                                                                    ~
                                                                    t_at5 " FQL.hs:24:5-46] (CNonCanonical)
                [W] cobox_atj :: [Char] ~ t_ath [" a type equality [Char]
                                                                   ~
                                                                   t_ath " FQL.hs:24:6-25] (CNonCanonical)
                [W] cobox_atk :: [Char] ~ t_ath [" a type equality [Char]
                                                                   ~
                                                                   t_ath " FQL.hs:24:28-37] (CNonCanonical)
                [W] cobox_atl :: [Char] ~ t_ath [" a type equality [Char]
                                                                   ~
                                                                   t_ath " FQL.hs:24:40-45] (CNonCanonical)
                [W] cobox_atn :: [t_atm] ~ t_at5 [" a type equality [t_atm]
                                                                    ~
                                                                    t_at5 " FQL.hs:25:5-51] (CNonCanonical)
                [W] cobox_ato :: [Char] ~ t_atm [" a type equality [Char]
                                                                   ~
                                                                   t_atm " FQL.hs:25:6-25] (CNonCanonical)
                [W] cobox_atp :: [Char] ~ t_atm [" a type equality [Char]
                                                                   ~
                                                                   t_atm " FQL.hs:25:28-37] (CNonCanonical)
                [W] cobox_atq :: [Char] ~ t_atm [" a type equality [Char]
                                                                   ~
                                                                   t_atm " FQL.hs:25:40-50] (CNonCanonical)
                [W] cobox_ats :: [t_atr] ~ t_at5 [" a type equality [t_atr]
                                                                    ~
                                                                    t_at5 " FQL.hs:26:5-59] (CNonCanonical)
                [W] cobox_att :: [Char] ~ t_atr [" a type equality [Char]
                                                                   ~
                                                                   t_atr " FQL.hs:26:6-25] (CNonCanonical)
                [W] cobox_atu :: [Char] ~ t_atr [" a type equality [Char]
                                                                   ~
                                                                   t_atr " FQL.hs:26:28-45] (CNonCanonical)
                [W] cobox_atv :: [Char] ~ t_atr [" a type equality [Char]
                                                                   ~
                                                                   t_atr " FQL.hs:26:48-58] (CNonCanonical)
                [W] cobox_atx :: [t_atw] ~ t_at5 [" a type equality [t_atw]
                                                                    ~
                                                                    t_at5 " FQL.hs:27:5-66] (CNonCanonical)
                [W] cobox_aty :: [Char] ~ t_atw [" a type equality [Char]
                                                                   ~
                                                                   t_atw " FQL.hs:27:6-32] (CNonCanonical)
                [W] cobox_atz :: [Char] ~ t_atw [" a type equality [Char]
                                                                   ~
                                                                   t_atw " FQL.hs:27:35-52] (CNonCanonical)
                [W] cobox_atA :: [Char] ~ t_atw [" a type equality [Char]
                                                                   ~
                                                                   t_atw " FQL.hs:27:55-65] (CNonCanonical)
                [W] cobox_atC :: [t_atB] ~ t_at5 [" a type equality [t_atB]
                                                                    ~
                                                                    t_at5 " FQL.hs:28:5-63] (CNonCanonical)
                [W] cobox_atD :: [Char] ~ t_atB [" a type equality [Char]
                                                                   ~
                                                                   t_atB " FQL.hs:28:6-40] (CNonCanonical)
                [W] cobox_atE :: [Char] ~ t_atB [" a type equality [Char]
                                                                   ~
                                                                   t_atB " FQL.hs:28:43-50] (CNonCanonical)
                [W] cobox_atF :: [Char] ~ t_atB [" a type equality [Char]
                                                                   ~
                                                                   t_atB " FQL.hs:28:53-62] (CNonCanonical)
                [W] cobox_atI :: [t_atH] ~ t_an1 [" a type equality [t_atH]
                                                                    ~
                                                                    t_an1 " FQL.hs:(9,3)-(18,3)] (CNonCanonical)
                [W] cobox_atK :: [t_atJ] ~ t_atH [" a type equality [t_atJ]
                                                                    ~
                                                                    t_atH " FQL.hs:9:5-40] (CNonCanonical)
                [W] cobox_atL :: [Char] ~ t_atJ [" a type equality [Char]
                                                                   ~
                                                                   t_atJ " FQL.hs:9:6-15] (CNonCanonical)
                [W] cobox_atM :: [Char] ~ t_atJ [" a type equality [Char]
                                                                   ~
                                                                   t_atJ " FQL.hs:9:18-39] (CNonCanonical)
                [W] cobox_atO :: [t_atN] ~ t_atH [" a type equality [t_atN]
                                                                    ~
                                                                    t_atH " FQL.hs:10:5-42] (CNonCanonical)
                [W] cobox_atP :: [Char] ~ t_atN [" a type equality [Char]
                                                                   ~
                                                                   t_atN " FQL.hs:10:6-13] (CNonCanonical)
                [W] cobox_atQ :: [Char] ~ t_atN [" a type equality [Char]
                                                                   ~
                                                                   t_atN " FQL.hs:10:16-41] (CNonCanonical)
                [W] cobox_atS :: [t_atR] ~ t_atH [" a type equality [t_atR]
                                                                    ~
                                                                    t_atH " FQL.hs:11:5-33] (CNonCanonical)
                [W] cobox_atT :: [Char] ~ t_atR [" a type equality [Char]
                                                                   ~
                                                                   t_atR " FQL.hs:11:6-10] (CNonCanonical)
                [W] cobox_atU :: [Char] ~ t_atR [" a type equality [Char]
                                                                   ~
                                                                   t_atR " FQL.hs:11:13-32] (CNonCanonical)
                [W] cobox_atW :: [t_atV] ~ t_atH [" a type equality [t_atV]
                                                                    ~
                                                                    t_atH " FQL.hs:12:5-33] (CNonCanonical)
                [W] cobox_atX :: [Char] ~ t_atV [" a type equality [Char]
                                                                   ~
                                                                   t_atV " FQL.hs:12:6-10] (CNonCanonical)
                [W] cobox_atY :: [Char] ~ t_atV [" a type equality [Char]
                                                                   ~
                                                                   t_atV " FQL.hs:12:13-32] (CNonCanonical)
                [W] cobox_au0 :: [t_atZ] ~ t_atH [" a type equality [t_atZ]
                                                                    ~
                                                                    t_atH " FQL.hs:13:5-34] (CNonCanonical)
                [W] cobox_au1 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                   ~
                                                                   t_atZ " FQL.hs:13:6-11] (CNonCanonical)
                [W] cobox_au2 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                   ~
                                                                   t_atZ " FQL.hs:13:14-33] (CNonCanonical)
                [W] cobox_au4 :: [t_au3] ~ t_atH [" a type equality [t_au3]
                                                                    ~
                                                                    t_atH " FQL.hs:14:5-38] (CNonCanonical)
                [W] cobox_au5 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                   ~
                                                                   t_au3 " FQL.hs:14:6-15] (CNonCanonical)
                [W] cobox_au6 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                   ~
                                                                   t_au3 " FQL.hs:14:18-37] (CNonCanonical)
                [W] cobox_au8 :: [t_au7] ~ t_atH [" a type equality [t_au7]
                                                                    ~
                                                                    t_atH " FQL.hs:15:5-46] (CNonCanonical)
                [W] cobox_au9 :: [Char] ~ t_au7 [" a type equality [Char]
                                                                   ~
                                                                   t_au7 " FQL.hs:15:6-16] (CNonCanonical)
                [W] cobox_aua :: [Char] ~ t_au7 [" a type equality [Char]
                                                                   ~
                                                                   t_au7 " FQL.hs:15:19-45] (CNonCanonical)
                [W] cobox_auc :: [t_aub] ~ t_atH [" a type equality [t_aub]
                                                                    ~
                                                                    t_atH " FQL.hs:16:5-54] (CNonCanonical)
                [W] cobox_aud :: [Char] ~ t_aub [" a type equality [Char]
                                                                   ~
                                                                   t_aub " FQL.hs:16:6-16] (CNonCanonical)
                [W] cobox_aue :: [Char] ~ t_aub [" a type equality [Char]
                                                                   ~
                                                                   t_aub " FQL.hs:16:19-53] (CNonCanonical)
                [W] cobox_aug :: [t_auf] ~ t_atH [" a type equality [t_auf]
                                                                    ~
                                                                    t_atH " FQL.hs:17:5-48] (CNonCanonical)
                [W] cobox_auh :: [Char] ~ t_auf [" a type equality [Char]
                                                                   ~
                                                                   t_auf " FQL.hs:17:6-10] (CNonCanonical)
                [W] cobox_aui :: [Char] ~ t_auf [" a type equality [Char]
                                                                   ~
                                                                   t_auf " FQL.hs:17:13-47] (CNonCanonical)
                [W] cobox_aul :: a_auk
                                 ~ (t_an3 -> t_an4 -> t_an5) [" a type equality a_auk
                                                                                ~
                                                                                t_an3
                                                                                -> t_an4
                                                                                -> t_an5 " FQL.hs:6:12-20] (CNonCanonical)
                [W] cobox_auo :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                    ~
                                                                    t_amm " FQL.hs:71:13-18] (CNonCanonical)
                [W] cobox_aup :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " FQL.hs:71:23-49] (CNonCanonical)
                [W] cobox_aus :: [b_aur] ~ [Bool] [" a type equality [b_aur]
                                                                     ~
                                                                     [Bool] " FQL.hs:71:27-48] (CNonCanonical)
                [W] cobox_aut :: (t_an4 -> t_an5)
                                 ~ (a_auq -> b_aur) [" a type equality t_an4 -> t_an5
                                                                       ~
                                                                       a_auq
                                                                       -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
                [W] cobox_auu :: t_aun ~ t_an3 [" a type equality t_aun
                                                                  ~
                                                                  t_an3 " FQL.hs:71:41-42] (CNonCanonical)
                [W] cobox_auv :: t_aml ~ [a_auq] [" a type equality t_aml
                                                                    ~
                                                                    [a_auq] " FQL.hs:71:45-48] (CNonCanonical)
                [W] $dNum_awD :: Num
                                   a_awC [" the literal ‘0’ " FQL.hs:71:53] (CNonCanonical)
                [W] cobox_awE :: (Integer -> a_awC)
                                 ~ (Integer -> t_amn) [" a type equality Integer -> a_awC
                                                                         ~
                                                                         Integer
                                                                         -> t_amn " FQL.hs:71:53] (CNonCanonical)
                [W] cobox_awF :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " FQL.hs:72:23-31] (CNonCanonical)
                [W] $dNum_awH :: Num
                                   a_awG [" a use of ‘+’ " FQL.hs:72:55] (CNonCanonical)
                [W] cobox_awI :: a_awG ~ t_amn [" a type equality a_awG
                                                                  ~
                                                                  t_amn " FQL.hs:72:53-70] (CNonCanonical)
                [W] $dNum_awK :: Num
                                   a_awJ [" the literal ‘1’ " FQL.hs:72:53] (CNonCanonical)
                [W] cobox_awL :: (Integer -> a_awJ)
                                 ~ (Integer -> a_awG) [" a type equality Integer -> a_awJ
                                                                         ~
                                                                         Integer
                                                                         -> a_awG " FQL.hs:72:53] (CNonCanonical)
                [W] cobox_awM :: t_amn ~ a_awG [" a type equality t_amn
                                                                  ~
                                                                  a_awG " FQL.hs:72:57-70] (CNonCanonical)
                [W] cobox_awN :: t_aml ~ t_aml [" a type equality t_aml
                                                                  ~
                                                                  t_aml " FQL.hs:72:63-66] (CNonCanonical)
                [W] cobox_awO :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                    ~
                                                                    t_amm " FQL.hs:72:68-70] (CNonCanonical)
                [W] cobox_awS :: [b_awR] ~ t_amt [" a type equality [b_awR]
                                                                    ~
                                                                    t_amt " FQL.hs:66:34-68] (CNonCanonical)
                [W] cobox_awT :: t_amn ~ b_awR [" a type equality t_amn
                                                                  ~
                                                                  b_awR " FQL.hs:66:44-62] (CNonCanonical)
                [W] cobox_awV :: [t_awU] ~ t_aml [" a type equality [t_awU]
                                                                    ~
                                                                    t_aml " FQL.hs:66:50-52] (CNonCanonical)
                [W] cobox_awW :: a_awQ ~ t_awU [" a type equality a_awQ
                                                                  ~
                                                                  t_awU " FQL.hs:66:51] (CNonCanonical)
                [W] cobox_awX :: t_amr ~ t_amm [" a type equality t_amr
                                                                  ~
                                                                  t_amm " FQL.hs:66:54-62] (CNonCanonical)
                [W] cobox_awY :: t_ams ~ [a_awQ] [" a type equality t_ams
                                                                    ~
                                                                    [a_awQ] " FQL.hs:66:65-68] (CNonCanonical)
                [W] cobox_ax1 :: [[a_ax0]] ~ t_amz [" a type equality [[a_ax0]]
                                                                      ~
                                                                      t_amz " FQL.hs:61:23-96] (CNonCanonical)
                [W] cobox_ax4 :: [b_ax3] ~ [[a_ax0]] [" a type equality [b_ax3]
                                                                        ~
                                                                        [[a_ax0]] " FQL.hs:61:34-95] (CNonCanonical)
                [W] cobox_ax6 :: (Int -> a_ax5)
                                 ~ (a_ax2 -> b_ax3) [" a type equality Int -> a_ax5
                                                                       ~
                                                                       a_ax2
                                                                       -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
                [W] cobox_ax8 :: [[a_ax7]] ~ [a_ax5] [" a type equality [[a_ax7]]
                                                                        ~
                                                                        [a_ax5] " FQL.hs:61:40-54] (CNonCanonical)
                [W] cobox_ax9 :: t_amy ~ [[a_ax7]] [" a type equality t_amy
                                                                      ~
                                                                      [[a_ax7]] " FQL.hs:61:50-54] (CNonCanonical)
                [W] cobox_axa :: t_amt ~ [a_ax2] [" a type equality t_amt
                                                                    ~
                                                                    [a_ax2] " FQL.hs:61:62-94] (CNonCanonical)
                [W] cobox_axc :: a_axb ~ t_amr [" a type equality a_axb
                                                                  ~
                                                                  t_amr " FQL.hs:61:79-88] (CNonCanonical)
                [W] cobox_axd :: t_amy ~ [a_axb] [" a type equality t_amy
                                                                    ~
                                                                    [a_axb] " FQL.hs:61:84-88] (CNonCanonical)
                [W] cobox_axe :: t_amx ~ t_ams [" a type equality t_amx
                                                                  ~
                                                                  t_ams " FQL.hs:61:91-94] (CNonCanonical)
                [W] cobox_axh :: [a_axg] ~ t_amg [" a type equality [a_axg]
                                                                    ~
                                                                    t_amg " FQL.hs:79:28-100] (CNonCanonical)
                [W] cobox_axj :: a_axi ~ a_axg [" a type equality a_axi
                                                                  ~
                                                                  a_axg " FQL.hs:79:29-38] (CNonCanonical)
                [W] cobox_axk :: t_amf ~ [a_axi] [" a type equality t_amf
                                                                    ~
                                                                    [a_axi] " FQL.hs:79:34-38] (CNonCanonical)
                [W] cobox_axl :: t_am8 ~ [a_axg] [" a type equality t_am8
                                                                    ~
                                                                    [a_axg] " FQL.hs:79:44-99] (CNonCanonical)
                [W] cobox_axm :: t_amn ~ t_am5 [" a type equality t_amn
                                                                  ~
                                                                  t_am5 " FQL.hs:79:56-80] (CNonCanonical)
                [W] cobox_axo :: a_axn ~ t_aml [" a type equality a_axn
                                                                  ~
                                                                  t_aml " FQL.hs:79:63-72] (CNonCanonical)
                [W] cobox_axp :: t_amf ~ [a_axn] [" a type equality t_amf
                                                                    ~
                                                                    [a_axn] " FQL.hs:79:68-72] (CNonCanonical)
                [W] cobox_axq :: t_amd ~ t_amm [" a type equality t_amd
                                                                  ~
                                                                  t_amm " FQL.hs:79:75-80] (CNonCanonical)
                [W] cobox_axr :: t_ame ~ t_am6 [" a type equality t_ame
                                                                  ~
                                                                  t_am6 " FQL.hs:79:83-86] (CNonCanonical)
                [W] cobox_axt :: [a_axs] ~ t_am7 [" a type equality [a_axs]
                                                                    ~
                                                                    t_am7 " FQL.hs:79:89-98] (CNonCanonical)
                [W] cobox_axu :: t_amf ~ [a_axs] [" a type equality t_amf
                                                                    ~
                                                                    [a_axs] " FQL.hs:79:94-98] (CNonCanonical)
                [W] cobox_axx :: [a_axw] ~ t_alL [" a type equality [a_axw]
                                                                    ~
                                                                    t_alL " FQL.hs:105:27-88] (CNonCanonical)
                [W] cobox_axy :: t_an5 ~ Bool [" a type equality t_an5
                                                                 ~
                                                                 Bool " FQL.hs:105:40-61] (CNonCanonical)
                [W] cobox_axA :: a_axz ~ t_an3 [" a type equality a_axz
                                                                  ~
                                                                  t_an3 " FQL.hs:105:50-53] (CNonCanonical)
                [W] cobox_axB :: a_axw ~ [a_axz] [" a type equality a_axw
                                                                    ~
                                                                    [a_axz] " FQL.hs:105:50] (CNonCanonical)
                [W] cobox_axC :: t_alJ ~ Int [" a type equality t_alJ
                                                                ~
                                                                Int " FQL.hs:105:53] (CNonCanonical)
                [W] cobox_axE :: a_axD ~ t_an4 [" a type equality a_axD
                                                                  ~
                                                                  t_an4 " FQL.hs:105:57-60] (CNonCanonical)
                [W] cobox_axF :: a_axw ~ [a_axD] [" a type equality a_axw
                                                                    ~
                                                                    [a_axD] " FQL.hs:105:57] (CNonCanonical)
                [W] cobox_axG :: t_alK ~ Int [" a type equality t_alK
                                                                ~
                                                                Int " FQL.hs:105:60] (CNonCanonical)
                [W] cobox_axH :: t_alD ~ [a_axw] [" a type equality t_alD
                                                                    ~
                                                                    [a_axw] " FQL.hs:105:65-87] (CNonCanonical)
                [W] cobox_axI :: t_alH ~ t_alB [" a type equality t_alH
                                                                  ~
                                                                  t_alB " FQL.hs:105:78-81] (CNonCanonical)
                [W] cobox_axJ :: t_alI ~ t_alC [" a type equality t_alI
                                                                  ~
                                                                  t_alC " FQL.hs:105:83-87] (CNonCanonical)
                [W] $dNum_axN :: Num
                                   a_axM [" a use of ‘+’ " FQL.hs:99:62] (CNonCanonical)
                [W] cobox_axO :: a_axM ~ t_axL [" a type equality a_axM
                                                                  ~
                                                                  t_axL " FQL.hs:99:30-81] (CNonCanonical)
                [W] cobox_axP :: t_amn ~ a_axM [" a type equality t_amn
                                                                  ~
                                                                  a_axM " FQL.hs:99:30-60] (CNonCanonical)
                [W] cobox_axR :: a_axQ ~ t_aml [" a type equality a_axQ
                                                                  ~
                                                                  t_aml " FQL.hs:99:37-45] (CNonCanonical)
                [W] cobox_axS :: t_alR ~ [a_axQ] [" a type equality t_alR
                                                                    ~
                                                                    [a_axQ] " FQL.hs:99:42-45] (CNonCanonical)
                [W] cobox_axU :: a_axT ~ t_amm [" a type equality a_axT
                                                                  ~
                                                                  t_amm " FQL.hs:99:50-59] (CNonCanonical)
                [W] cobox_axV :: t_alS ~ [a_axT] [" a type equality t_alS
                                                                    ~
                                                                    [a_axT] " FQL.hs:99:55-59] (CNonCanonical)
                [W] cobox_axX :: Int ~ a_axM [" a type equality Int
                                                                ~
                                                                a_axM " FQL.hs:99:64-81] (CNonCanonical)
                [W] cobox_axZ :: a_axY ~ [a_axW] [" a type equality a_axY
                                                                    ~
                                                                    [a_axW] " FQL.hs:99:72-80] (CNonCanonical)
                [W] cobox_ay0 :: t_alR ~ [a_axY] [" a type equality t_alR
                                                                    ~
                                                                    [a_axY] " FQL.hs:99:77-80] (CNonCanonical)
                [W] cobox_ay2 :: t_amn ~ t_ay1 [" a type equality t_amn
                                                                  ~
                                                                  t_ay1 " FQL.hs:98:30-59] (CNonCanonical)
                [W] cobox_ay4 :: a_ay3 ~ t_aml [" a type equality a_ay3
                                                                  ~
                                                                  t_aml " FQL.hs:98:37-46] (CNonCanonical)
                [W] cobox_ay5 :: t_alS ~ [a_ay3] [" a type equality t_alS
                                                                    ~
                                                                    [a_ay3] " FQL.hs:98:42-46] (CNonCanonical)
                [W] cobox_ay7 :: a_ay6 ~ t_amm [" a type equality a_ay6
                                                                  ~
                                                                  t_amm " FQL.hs:98:50-58] (CNonCanonical)
                [W] cobox_ay8 :: t_alR ~ [a_ay6] [" a type equality t_alR
                                                                    ~
                                                                    [a_ay6] " FQL.hs:98:55-58] (CNonCanonical)
                [W] cobox_ayb :: [b_aya] ~ t_alT [" a type equality [b_aya]
                                                                    ~
                                                                    t_alT " FQL.hs:97:20-82] (CNonCanonical)
                [W] cobox_ayd :: [a_ayc] ~ b_aya [" a type equality [a_ayc]
                                                                    ~
                                                                    b_aya " FQL.hs:97:30-55] (CNonCanonical)
                [W] cobox_ayf :: [a_aye] ~ [a_ayc] [" a type equality [a_aye]
                                                                      ~
                                                                      [a_ayc] " FQL.hs:97:30-37] (CNonCanonical)
                [W] cobox_ayg :: t_axL ~ Int [" a type equality t_axL
                                                                ~
                                                                Int " FQL.hs:97:35] (CNonCanonical)
                [W] cobox_ayh :: a_ay9 ~ [a_aye] [" a type equality a_ay9
                                                                    ~
                                                                    [a_aye] " FQL.hs:97:37] (CNonCanonical)
                [W] cobox_ayk :: [a_ayj] ~ [a_ayc] [" a type equality [a_ayj]
                                                                      ~
                                                                      [a_ayc] " FQL.hs:97:43-54] (CNonCanonical)
                [W] $dNum_aym :: Num
                                   a_ayl [" a use of ‘+’ " FQL.hs:97:50] (CNonCanonical)
                [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                                ~
                                                                Int " FQL.hs:97:49-51] (CNonCanonical)
                [W] cobox_ayo :: t_axL ~ a_ayl [" a type equality t_axL
                                                                  ~
                                                                  a_ayl " FQL.hs:97:49] (CNonCanonical)
                [W] $dNum_ayq :: Num
                                   a_ayp [" the literal ‘1’ " FQL.hs:97:51] (CNonCanonical)
                [W] cobox_ayr :: (Integer -> a_ayp)
                                 ~ (Integer -> a_ayl) [" a type equality Integer -> a_ayp
                                                                         ~
                                                                         Integer
                                                                         -> a_ayl " FQL.hs:97:51] (CNonCanonical)
                [W] cobox_ays :: a_ay9 ~ [a_ayj] [" a type equality a_ay9
                                                                    ~
                                                                    [a_ayj] " FQL.hs:97:54] (CNonCanonical)
                [W] cobox_ayt :: t_alL ~ [a_ay9] [" a type equality t_alL
                                                                    ~
                                                                    [a_ay9] " FQL.hs:97:59-81] (CNonCanonical)
                [W] cobox_ayu :: t_alR ~ t_alH [" a type equality t_alR
                                                                  ~
                                                                  t_alH " FQL.hs:97:68-71] (CNonCanonical)
                [W] cobox_ayv :: t_alS ~ t_alI [" a type equality t_alS
                                                                  ~
                                                                  t_alI " FQL.hs:97:73-77] (CNonCanonical)
                [W] cobox_ayw :: t_ay1 ~ t_alJ [" a type equality t_ay1
                                                                  ~
                                                                  t_alJ " FQL.hs:97:79] (CNonCanonical)
                [W] cobox_ayx :: t_axL ~ t_alK [" a type equality t_axL
                                                                  ~
                                                                  t_alK " FQL.hs:97:81] (CNonCanonical)}
solveFlats {
Start solver pipeline {
  work item =  [W] cobox_alE :: Table
                                ~ t_alB [" a type equality Table
                                                           ~
                                                           t_alB " FQL.hs:109:17-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alE :: Table
                                 ~ t_alB [" a type equality Table
                                                            ~
                                                            t_alB " FQL.hs:109:17-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alE :: Table ~ t_alB [" a type equality Table
                                                    ~
                                                    t_alB " FQL.hs:109:17-39] (CNonCanonical)
canEvNC:eq
  Table
  t_alB
can_eq_nc
  [W] cobox_alE :: Table ~ t_alB
  Table
  Table
  t_alB
  t_alB
can_eq_nc
  [W] cobox_alE :: Table ~ t_alB
  [[String]]
  Table
  t_alB
  t_alB
canEqTyVar
  t_alB
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayz :: t_alB ~ Table
setEvBind
  ev = cobox_alE
  tm  = CO Sym cobox_ayz
rewriteEqEvidence
  [W] cobox_alE :: Table ~ t_alB
  t_alB
  Table
  Sym cobox_ayz
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayz :: t_alB
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alB " FQL.hs:109:17-39] (CTyEqCan)
Sneaky unification:
  Unifies: t_alB := Table
  Coercion: t_alB ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alB := Table
setEvBind
  ev = cobox_ayz
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
1[<C:0,F:0>] [W] cobox_ayz :: t_alB ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alF :: Table
                                ~ t_alC [" a type equality Table
                                                           ~
                                                           t_alC " FQL.hs:109:17-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alF :: Table
                                 ~ t_alC [" a type equality Table
                                                            ~
                                                            t_alC " FQL.hs:109:17-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alF :: Table ~ t_alC [" a type equality Table
                                                    ~
                                                    t_alC " FQL.hs:109:17-39] (CNonCanonical)
canEvNC:eq
  Table
  t_alC
can_eq_nc
  [W] cobox_alF :: Table ~ t_alC
  Table
  Table
  t_alC
  t_alC
can_eq_nc
  [W] cobox_alF :: Table ~ t_alC
  [[String]]
  Table
  t_alC
  t_alC
canEqTyVar
  t_alC
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayA :: t_alC ~ Table
setEvBind
  ev = cobox_alF
  tm  = CO Sym cobox_ayA
rewriteEqEvidence
  [W] cobox_alF :: Table ~ t_alC
  t_alC
  Table
  Sym cobox_ayA
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayA :: t_alC
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alC " FQL.hs:109:17-39] (CTyEqCan)
Sneaky unification:
  Unifies: t_alC := Table
  Coercion: t_alC ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alC := Table
setEvBind
  ev = cobox_ayA
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
2[<C:0,F:0>] [W] cobox_ayA :: t_alC ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alG :: Table
                                ~ t_alD [" a type equality Table
                                                           ~
                                                           t_alD " FQL.hs:109:17-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alG :: Table
                                 ~ t_alD [" a type equality Table
                                                            ~
                                                            t_alD " FQL.hs:109:17-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alG :: Table ~ t_alD [" a type equality Table
                                                    ~
                                                    t_alD " FQL.hs:109:17-39] (CNonCanonical)
canEvNC:eq
  Table
  t_alD
can_eq_nc
  [W] cobox_alG :: Table ~ t_alD
  Table
  Table
  t_alD
  t_alD
can_eq_nc
  [W] cobox_alG :: Table ~ t_alD
  [[String]]
  Table
  t_alD
  t_alD
canEqTyVar
  t_alD
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayB :: t_alD ~ Table
setEvBind
  ev = cobox_alG
  tm  = CO Sym cobox_ayB
rewriteEqEvidence
  [W] cobox_alG :: Table ~ t_alD
  t_alD
  Table
  Sym cobox_ayB
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayB :: t_alD
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alD " FQL.hs:109:17-39] (CTyEqCan)
Sneaky unification:
  Unifies: t_alD := Table
  Coercion: t_alD ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alD := Table
setEvBind
  ev = cobox_ayB
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
3[<C:0,F:0>] [W] cobox_ayB :: t_alD ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alM :: Table
                                ~ t_alH [" a type equality Table
                                                           ~
                                                           t_alH " FQL.hs:104:13-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alM :: Table
                                 ~ t_alH [" a type equality Table
                                                            ~
                                                            t_alH " FQL.hs:104:13-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alM :: Table ~ t_alH [" a type equality Table
                                                    ~
                                                    t_alH " FQL.hs:104:13-49] (CNonCanonical)
canEvNC:eq
  Table
  t_alH
can_eq_nc
  [W] cobox_alM :: Table ~ t_alH
  Table
  Table
  t_alH
  t_alH
can_eq_nc
  [W] cobox_alM :: Table ~ t_alH
  [[String]]
  Table
  t_alH
  t_alH
canEqTyVar
  t_alH
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayC :: t_alH ~ Table
setEvBind
  ev = cobox_alM
  tm  = CO Sym cobox_ayC
rewriteEqEvidence
  [W] cobox_alM :: Table ~ t_alH
  t_alH
  Table
  Sym cobox_ayC
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayC :: t_alH
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alH " FQL.hs:104:13-49] (CTyEqCan)
Sneaky unification:
  Unifies: t_alH := Table
  Coercion: t_alH ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alH := Table
setEvBind
  ev = cobox_ayC
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
4[<C:0,F:0>] [W] cobox_ayC :: t_alH ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alN :: Table
                                ~ t_alI [" a type equality Table
                                                           ~
                                                           t_alI " FQL.hs:104:13-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alN :: Table
                                 ~ t_alI [" a type equality Table
                                                            ~
                                                            t_alI " FQL.hs:104:13-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alN :: Table ~ t_alI [" a type equality Table
                                                    ~
                                                    t_alI " FQL.hs:104:13-49] (CNonCanonical)
canEvNC:eq
  Table
  t_alI
can_eq_nc
  [W] cobox_alN :: Table ~ t_alI
  Table
  Table
  t_alI
  t_alI
can_eq_nc
  [W] cobox_alN :: Table ~ t_alI
  [[String]]
  Table
  t_alI
  t_alI
canEqTyVar
  t_alI
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayD :: t_alI ~ Table
setEvBind
  ev = cobox_alN
  tm  = CO Sym cobox_ayD
rewriteEqEvidence
  [W] cobox_alN :: Table ~ t_alI
  t_alI
  Table
  Sym cobox_ayD
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayD :: t_alI
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alI " FQL.hs:104:13-49] (CTyEqCan)
Sneaky unification:
  Unifies: t_alI := Table
  Coercion: t_alI ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alI := Table
setEvBind
  ev = cobox_ayD
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
5[<C:0,F:0>] [W] cobox_ayD :: t_alI ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alO :: Int ~ t_alJ [" a type equality Int
                                                               ~
                                                               t_alJ " FQL.hs:104:13-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alO :: Int ~ t_alJ [" a type equality Int
                                                                ~
                                                                t_alJ " FQL.hs:104:13-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alO :: Int ~ t_alJ [" a type equality Int
                                                  ~
                                                  t_alJ " FQL.hs:104:13-49] (CNonCanonical)
canEvNC:eq
  Int
  t_alJ
can_eq_nc
  [W] cobox_alO :: Int ~ t_alJ
  Int
  Int
  t_alJ
  t_alJ
canEqTyVar
  t_alJ
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayE :: t_alJ ~ Int
setEvBind
  ev = cobox_alO
  tm  = CO Sym cobox_ayE
rewriteEqEvidence
  [W] cobox_alO :: Int ~ t_alJ
  t_alJ
  Int
  Sym cobox_ayE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayE :: t_alJ ~ Int [" a type equality Int
                                                                ~
                                                                t_alJ " FQL.hs:104:13-49] (CTyEqCan)
Sneaky unification:
  Unifies: t_alJ := Int
  Coercion: t_alJ ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alJ := Int
setEvBind
  ev = cobox_ayE
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_alJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
6[<C:0,F:0>] [W] cobox_ayE :: t_alJ ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alP :: Int ~ t_alK [" a type equality Int
                                                               ~
                                                               t_alK " FQL.hs:104:13-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alP :: Int ~ t_alK [" a type equality Int
                                                                ~
                                                                t_alK " FQL.hs:104:13-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alP :: Int ~ t_alK [" a type equality Int
                                                  ~
                                                  t_alK " FQL.hs:104:13-49] (CNonCanonical)
canEvNC:eq
  Int
  t_alK
can_eq_nc
  [W] cobox_alP :: Int ~ t_alK
  Int
  Int
  t_alK
  t_alK
canEqTyVar
  t_alK
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayF :: t_alK ~ Int
setEvBind
  ev = cobox_alP
  tm  = CO Sym cobox_ayF
rewriteEqEvidence
  [W] cobox_alP :: Int ~ t_alK
  t_alK
  Int
  Sym cobox_ayF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayF :: t_alK ~ Int [" a type equality Int
                                                                ~
                                                                t_alK " FQL.hs:104:13-49] (CTyEqCan)
Sneaky unification:
  Unifies: t_alK := Int
  Coercion: t_alK ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alK := Int
setEvBind
  ev = cobox_ayF
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_alK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
7[<C:0,F:0>] [W] cobox_ayF :: t_alK ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alQ :: Table
                                ~ t_alL [" a type equality Table
                                                           ~
                                                           t_alL " FQL.hs:104:13-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alQ :: Table
                                 ~ t_alL [" a type equality Table
                                                            ~
                                                            t_alL " FQL.hs:104:13-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alQ :: Table ~ t_alL [" a type equality Table
                                                    ~
                                                    t_alL " FQL.hs:104:13-49] (CNonCanonical)
canEvNC:eq
  Table
  t_alL
can_eq_nc
  [W] cobox_alQ :: Table ~ t_alL
  Table
  Table
  t_alL
  t_alL
can_eq_nc
  [W] cobox_alQ :: Table ~ t_alL
  [[String]]
  Table
  t_alL
  t_alL
canEqTyVar
  t_alL
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayG :: t_alL ~ Table
setEvBind
  ev = cobox_alQ
  tm  = CO Sym cobox_ayG
rewriteEqEvidence
  [W] cobox_alQ :: Table ~ t_alL
  t_alL
  Table
  Sym cobox_ayG
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayG :: t_alL
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alL " FQL.hs:104:13-49] (CTyEqCan)
Sneaky unification:
  Unifies: t_alL := Table
  Coercion: t_alL ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alL := Table
setEvBind
  ev = cobox_ayG
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
8[<C:0,F:0>] [W] cobox_ayG :: t_alL ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alU :: Table
                                ~ t_alR [" a type equality Table
                                                           ~
                                                           t_alR " FQL.hs:96:9-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alU :: Table
                                 ~ t_alR [" a type equality Table
                                                            ~
                                                            t_alR " FQL.hs:96:9-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alU :: Table ~ t_alR [" a type equality Table
                                                    ~
                                                    t_alR " FQL.hs:96:9-31] (CNonCanonical)
canEvNC:eq
  Table
  t_alR
can_eq_nc
  [W] cobox_alU :: Table ~ t_alR
  Table
  Table
  t_alR
  t_alR
can_eq_nc
  [W] cobox_alU :: Table ~ t_alR
  [[String]]
  Table
  t_alR
  t_alR
canEqTyVar
  t_alR
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayH :: t_alR ~ Table
setEvBind
  ev = cobox_alU
  tm  = CO Sym cobox_ayH
rewriteEqEvidence
  [W] cobox_alU :: Table ~ t_alR
  t_alR
  Table
  Sym cobox_ayH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayH :: t_alR
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alR " FQL.hs:96:9-31] (CTyEqCan)
Sneaky unification:
  Unifies: t_alR := Table
  Coercion: t_alR ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alR := Table
setEvBind
  ev = cobox_ayH
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
9[<C:0,F:0>] [W] cobox_ayH :: t_alR ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alV :: Table
                                ~ t_alS [" a type equality Table
                                                           ~
                                                           t_alS " FQL.hs:96:9-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alV :: Table
                                 ~ t_alS [" a type equality Table
                                                            ~
                                                            t_alS " FQL.hs:96:9-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alV :: Table ~ t_alS [" a type equality Table
                                                    ~
                                                    t_alS " FQL.hs:96:9-31] (CNonCanonical)
canEvNC:eq
  Table
  t_alS
can_eq_nc
  [W] cobox_alV :: Table ~ t_alS
  Table
  Table
  t_alS
  t_alS
can_eq_nc
  [W] cobox_alV :: Table ~ t_alS
  [[String]]
  Table
  t_alS
  t_alS
canEqTyVar
  t_alS
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayI :: t_alS ~ Table
setEvBind
  ev = cobox_alV
  tm  = CO Sym cobox_ayI
rewriteEqEvidence
  [W] cobox_alV :: Table ~ t_alS
  t_alS
  Table
  Sym cobox_ayI
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayI :: t_alS
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alS " FQL.hs:96:9-31] (CTyEqCan)
Sneaky unification:
  Unifies: t_alS := Table
  Coercion: t_alS ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alS := Table
setEvBind
  ev = cobox_ayI
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
10[<C:0,F:0>] [W] cobox_ayI :: t_alS ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_alW :: Table
                                ~ t_alT [" a type equality Table
                                                           ~
                                                           t_alT " FQL.hs:96:9-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_alW :: Table
                                 ~ t_alT [" a type equality Table
                                                            ~
                                                            t_alT " FQL.hs:96:9-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_alW :: Table ~ t_alT [" a type equality Table
                                                    ~
                                                    t_alT " FQL.hs:96:9-31] (CNonCanonical)
canEvNC:eq
  Table
  t_alT
can_eq_nc
  [W] cobox_alW :: Table ~ t_alT
  Table
  Table
  t_alT
  t_alT
can_eq_nc
  [W] cobox_alW :: Table ~ t_alT
  [[String]]
  Table
  t_alT
  t_alT
canEqTyVar
  t_alT
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayJ :: t_alT ~ Table
setEvBind
  ev = cobox_alW
  tm  = CO Sym cobox_ayJ
rewriteEqEvidence
  [W] cobox_alW :: Table ~ t_alT
  t_alT
  Table
  Sym cobox_ayJ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayJ :: t_alT
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_alT " FQL.hs:96:9-31] (CTyEqCan)
Sneaky unification:
  Unifies: t_alT := Table
  Coercion: t_alT ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alT := Table
setEvBind
  ev = cobox_ayJ
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_alT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
11[<C:0,F:0>] [W] cobox_ayJ :: t_alT ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_am1 :: Int ~ t_alX [" a type equality Int
                                                               ~
                                                               t_alX " FQL.hs:89:12-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_am1 :: Int ~ t_alX [" a type equality Int
                                                                ~
                                                                t_alX " FQL.hs:89:12-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_am1 :: Int ~ t_alX [" a type equality Int
                                                  ~
                                                  t_alX " FQL.hs:89:12-54] (CNonCanonical)
canEvNC:eq
  Int
  t_alX
can_eq_nc
  [W] cobox_am1 :: Int ~ t_alX
  Int
  Int
  t_alX
  t_alX
canEqTyVar
  t_alX
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayK :: t_alX ~ Int
setEvBind
  ev = cobox_am1
  tm  = CO Sym cobox_ayK
rewriteEqEvidence
  [W] cobox_am1 :: Int ~ t_alX
  t_alX
  Int
  Sym cobox_ayK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayK :: t_alX ~ Int [" a type equality Int
                                                                ~
                                                                t_alX " FQL.hs:89:12-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_alX := Int
  Coercion: t_alX ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alX := Int
setEvBind
  ev = cobox_ayK
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_alX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
12[<C:0,F:0>] [W] cobox_ayK :: t_alX ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_am2 :: (String -> Bool)
                                ~ t_alY [" a type equality String -> Bool
                                                           ~
                                                           t_alY " FQL.hs:89:12-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_am2 :: (String -> Bool)
                                 ~ t_alY [" a type equality String -> Bool
                                                            ~
                                                            t_alY " FQL.hs:89:12-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_am2 :: (String -> Bool) ~ t_alY [" a type equality String
                                                               -> Bool
                                                               ~
                                                               t_alY " FQL.hs:89:12-54] (CNonCanonical)
canEvNC:eq
  String -> Bool
  t_alY
can_eq_nc
  [W] cobox_am2 :: (String -> Bool) ~ t_alY
  String -> Bool
  String -> Bool
  t_alY
  t_alY
canEqTyVar
  t_alY
  String -> Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayL :: t_alY ~ (String -> Bool)
setEvBind
  ev = cobox_am2
  tm  = CO Sym cobox_ayL
rewriteEqEvidence
  [W] cobox_am2 :: (String -> Bool) ~ t_alY
  t_alY
  String -> Bool
  Sym cobox_ayL
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayL :: t_alY
                                 ~ (String -> Bool) [" a type equality String -> Bool
                                                                       ~
                                                                       t_alY " FQL.hs:89:12-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_alY := String -> Bool
  Coercion: t_alY ~ (String -> Bool)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alY := String -> Bool
setEvBind
  ev = cobox_ayL
  tm  = CO <String -> Bool>_N
kickOutRewritable
  tv =  t_alY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
13[<C:0,F:0>] [W] cobox_ayL :: t_alY
                               ~ (String -> Bool): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_am3 :: [String]
                                ~ t_alZ [" a type equality [String]
                                                           ~
                                                           t_alZ " FQL.hs:89:12-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_am3 :: [String]
                                 ~ t_alZ [" a type equality [String]
                                                            ~
                                                            t_alZ " FQL.hs:89:12-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_am3 :: [String] ~ t_alZ [" a type equality [String]
                                                       ~
                                                       t_alZ " FQL.hs:89:12-54] (CNonCanonical)
canEvNC:eq
  [String]
  t_alZ
can_eq_nc
  [W] cobox_am3 :: [String] ~ t_alZ
  [String]
  [String]
  t_alZ
  t_alZ
canEqTyVar
  t_alZ
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayM :: t_alZ ~ [String]
setEvBind
  ev = cobox_am3
  tm  = CO Sym cobox_ayM
rewriteEqEvidence
  [W] cobox_am3 :: [String] ~ t_alZ
  t_alZ
  [String]
  Sym cobox_ayM
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayM :: t_alZ
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_alZ " FQL.hs:89:12-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_alZ := [String]
  Coercion: t_alZ ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_alZ := [String]
setEvBind
  ev = cobox_ayM
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_alZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
14[<C:0,F:0>] [W] cobox_ayM :: t_alZ
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_am4 :: Bool ~ t_am0 [" a type equality Bool
                                                                ~
                                                                t_am0 " FQL.hs:89:12-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_am4 :: Bool ~ t_am0 [" a type equality Bool
                                                                 ~
                                                                 t_am0 " FQL.hs:89:12-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_am4 :: Bool ~ t_am0 [" a type equality Bool
                                                   ~
                                                   t_am0 " FQL.hs:89:12-54] (CNonCanonical)
canEvNC:eq
  Bool
  t_am0
can_eq_nc
  [W] cobox_am4 :: Bool ~ t_am0
  Bool
  Bool
  t_am0
  t_am0
canEqTyVar
  t_am0
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayN :: t_am0 ~ Bool
setEvBind
  ev = cobox_am4
  tm  = CO Sym cobox_ayN
rewriteEqEvidence
  [W] cobox_am4 :: Bool ~ t_am0
  t_am0
  Bool
  Sym cobox_ayN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayN :: t_am0 ~ Bool [" a type equality Bool
                                                                 ~
                                                                 t_am0 " FQL.hs:89:12-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_am0 := Bool
  Coercion: t_am0 ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_am0 := Bool
setEvBind
  ev = cobox_ayN
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_am0
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
15[<C:0,F:0>] [W] cobox_ayN :: t_am0 ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_am9 :: Int ~ t_am5 [" a type equality Int
                                                               ~
                                                               t_am5 " FQL.hs:85:15-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_am9 :: Int ~ t_am5 [" a type equality Int
                                                                ~
                                                                t_am5 " FQL.hs:85:15-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_am9 :: Int ~ t_am5 [" a type equality Int
                                                  ~
                                                  t_am5 " FQL.hs:85:15-55] (CNonCanonical)
canEvNC:eq
  Int
  t_am5
can_eq_nc
  [W] cobox_am9 :: Int ~ t_am5
  Int
  Int
  t_am5
  t_am5
canEqTyVar
  t_am5
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayO :: t_am5 ~ Int
setEvBind
  ev = cobox_am9
  tm  = CO Sym cobox_ayO
rewriteEqEvidence
  [W] cobox_am9 :: Int ~ t_am5
  t_am5
  Int
  Sym cobox_ayO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayO :: t_am5 ~ Int [" a type equality Int
                                                                ~
                                                                t_am5 " FQL.hs:85:15-55] (CTyEqCan)
Sneaky unification:
  Unifies: t_am5 := Int
  Coercion: t_am5 ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_am5 := Int
setEvBind
  ev = cobox_ayO
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_am5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
16[<C:0,F:0>] [W] cobox_ayO :: t_am5 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ama :: (String -> Bool)
                                ~ t_am6 [" a type equality String -> Bool
                                                           ~
                                                           t_am6 " FQL.hs:85:15-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ama :: (String -> Bool)
                                 ~ t_am6 [" a type equality String -> Bool
                                                            ~
                                                            t_am6 " FQL.hs:85:15-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ama :: (String -> Bool) ~ t_am6 [" a type equality String
                                                               -> Bool
                                                               ~
                                                               t_am6 " FQL.hs:85:15-55] (CNonCanonical)
canEvNC:eq
  String -> Bool
  t_am6
can_eq_nc
  [W] cobox_ama :: (String -> Bool) ~ t_am6
  String -> Bool
  String -> Bool
  t_am6
  t_am6
canEqTyVar
  t_am6
  String -> Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayP :: t_am6 ~ (String -> Bool)
setEvBind
  ev = cobox_ama
  tm  = CO Sym cobox_ayP
rewriteEqEvidence
  [W] cobox_ama :: (String -> Bool) ~ t_am6
  t_am6
  String -> Bool
  Sym cobox_ayP
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayP :: t_am6
                                 ~ (String -> Bool) [" a type equality String -> Bool
                                                                       ~
                                                                       t_am6 " FQL.hs:85:15-55] (CTyEqCan)
Sneaky unification:
  Unifies: t_am6 := String -> Bool
  Coercion: t_am6 ~ (String -> Bool)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_am6 := String -> Bool
setEvBind
  ev = cobox_ayP
  tm  = CO <String -> Bool>_N
kickOutRewritable
  tv =  t_am6
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
17[<C:0,F:0>] [W] cobox_ayP :: t_am6
                               ~ (String -> Bool): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amb :: Table
                                ~ t_am7 [" a type equality Table
                                                           ~
                                                           t_am7 " FQL.hs:85:15-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amb :: Table
                                 ~ t_am7 [" a type equality Table
                                                            ~
                                                            t_am7 " FQL.hs:85:15-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amb :: Table ~ t_am7 [" a type equality Table
                                                    ~
                                                    t_am7 " FQL.hs:85:15-55] (CNonCanonical)
canEvNC:eq
  Table
  t_am7
can_eq_nc
  [W] cobox_amb :: Table ~ t_am7
  Table
  Table
  t_am7
  t_am7
can_eq_nc
  [W] cobox_amb :: Table ~ t_am7
  [[String]]
  Table
  t_am7
  t_am7
canEqTyVar
  t_am7
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayQ :: t_am7 ~ Table
setEvBind
  ev = cobox_amb
  tm  = CO Sym cobox_ayQ
rewriteEqEvidence
  [W] cobox_amb :: Table ~ t_am7
  t_am7
  Table
  Sym cobox_ayQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayQ :: t_am7
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_am7 " FQL.hs:85:15-55] (CTyEqCan)
Sneaky unification:
  Unifies: t_am7 := Table
  Coercion: t_am7 ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_am7 := Table
setEvBind
  ev = cobox_ayQ
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_am7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
18[<C:0,F:0>] [W] cobox_ayQ :: t_am7 ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amc :: Table
                                ~ t_am8 [" a type equality Table
                                                           ~
                                                           t_am8 " FQL.hs:85:15-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amc :: Table
                                 ~ t_am8 [" a type equality Table
                                                            ~
                                                            t_am8 " FQL.hs:85:15-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amc :: Table ~ t_am8 [" a type equality Table
                                                    ~
                                                    t_am8 " FQL.hs:85:15-55] (CNonCanonical)
canEvNC:eq
  Table
  t_am8
can_eq_nc
  [W] cobox_amc :: Table ~ t_am8
  Table
  Table
  t_am8
  t_am8
can_eq_nc
  [W] cobox_amc :: Table ~ t_am8
  [[String]]
  Table
  t_am8
  t_am8
canEqTyVar
  t_am8
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayR :: t_am8 ~ Table
setEvBind
  ev = cobox_amc
  tm  = CO Sym cobox_ayR
rewriteEqEvidence
  [W] cobox_amc :: Table ~ t_am8
  t_am8
  Table
  Sym cobox_ayR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayR :: t_am8
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_am8 " FQL.hs:85:15-55] (CTyEqCan)
Sneaky unification:
  Unifies: t_am8 := Table
  Coercion: t_am8 ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_am8 := Table
setEvBind
  ev = cobox_ayR
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_am8
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
19[<C:0,F:0>] [W] cobox_ayR :: t_am8 ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amh :: String
                                ~ t_amd [" a type equality String
                                                           ~
                                                           t_amd " FQL.hs:78:11-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amh :: String
                                 ~ t_amd [" a type equality String
                                                            ~
                                                            t_amd " FQL.hs:78:11-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amh :: String ~ t_amd [" a type equality String
                                                     ~
                                                     t_amd " FQL.hs:78:11-54] (CNonCanonical)
canEvNC:eq
  String
  t_amd
can_eq_nc
  [W] cobox_amh :: String ~ t_amd
  String
  String
  t_amd
  t_amd
can_eq_nc
  [W] cobox_amh :: String ~ t_amd
  [Char]
  String
  t_amd
  t_amd
canEqTyVar
  t_amd
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayS :: t_amd ~ String
setEvBind
  ev = cobox_amh
  tm  = CO Sym cobox_ayS
rewriteEqEvidence
  [W] cobox_amh :: String ~ t_amd
  t_amd
  String
  Sym cobox_ayS
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayS :: t_amd
                                 ~ String [" a type equality String
                                                             ~
                                                             t_amd " FQL.hs:78:11-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_amd := String
  Coercion: t_amd ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amd := String
setEvBind
  ev = cobox_ayS
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_amd
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
20[<C:0,F:0>] [W] cobox_ayS :: t_amd ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ami :: (String -> Bool)
                                ~ t_ame [" a type equality String -> Bool
                                                           ~
                                                           t_ame " FQL.hs:78:11-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ami :: (String -> Bool)
                                 ~ t_ame [" a type equality String -> Bool
                                                            ~
                                                            t_ame " FQL.hs:78:11-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ami :: (String -> Bool) ~ t_ame [" a type equality String
                                                               -> Bool
                                                               ~
                                                               t_ame " FQL.hs:78:11-54] (CNonCanonical)
canEvNC:eq
  String -> Bool
  t_ame
can_eq_nc
  [W] cobox_ami :: (String -> Bool) ~ t_ame
  String -> Bool
  String -> Bool
  t_ame
  t_ame
canEqTyVar
  t_ame
  String -> Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayT :: t_ame ~ (String -> Bool)
setEvBind
  ev = cobox_ami
  tm  = CO Sym cobox_ayT
rewriteEqEvidence
  [W] cobox_ami :: (String -> Bool) ~ t_ame
  t_ame
  String -> Bool
  Sym cobox_ayT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayT :: t_ame
                                 ~ (String -> Bool) [" a type equality String -> Bool
                                                                       ~
                                                                       t_ame " FQL.hs:78:11-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_ame := String -> Bool
  Coercion: t_ame ~ (String -> Bool)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ame := String -> Bool
setEvBind
  ev = cobox_ayT
  tm  = CO <String -> Bool>_N
kickOutRewritable
  tv =  t_ame
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
21[<C:0,F:0>] [W] cobox_ayT :: t_ame
                               ~ (String -> Bool): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amj :: Table
                                ~ t_amf [" a type equality Table
                                                           ~
                                                           t_amf " FQL.hs:78:11-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amj :: Table
                                 ~ t_amf [" a type equality Table
                                                            ~
                                                            t_amf " FQL.hs:78:11-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amj :: Table ~ t_amf [" a type equality Table
                                                    ~
                                                    t_amf " FQL.hs:78:11-54] (CNonCanonical)
canEvNC:eq
  Table
  t_amf
can_eq_nc
  [W] cobox_amj :: Table ~ t_amf
  Table
  Table
  t_amf
  t_amf
can_eq_nc
  [W] cobox_amj :: Table ~ t_amf
  [[String]]
  Table
  t_amf
  t_amf
canEqTyVar
  t_amf
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayU :: t_amf ~ Table
setEvBind
  ev = cobox_amj
  tm  = CO Sym cobox_ayU
rewriteEqEvidence
  [W] cobox_amj :: Table ~ t_amf
  t_amf
  Table
  Sym cobox_ayU
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayU :: t_amf
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amf " FQL.hs:78:11-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_amf := Table
  Coercion: t_amf ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amf := Table
setEvBind
  ev = cobox_ayU
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amf
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
22[<C:0,F:0>] [W] cobox_ayU :: t_amf ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amk :: Table
                                ~ t_amg [" a type equality Table
                                                           ~
                                                           t_amg " FQL.hs:78:11-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amk :: Table
                                 ~ t_amg [" a type equality Table
                                                            ~
                                                            t_amg " FQL.hs:78:11-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amk :: Table ~ t_amg [" a type equality Table
                                                    ~
                                                    t_amg " FQL.hs:78:11-54] (CNonCanonical)
canEvNC:eq
  Table
  t_amg
can_eq_nc
  [W] cobox_amk :: Table ~ t_amg
  Table
  Table
  t_amg
  t_amg
can_eq_nc
  [W] cobox_amk :: Table ~ t_amg
  [[String]]
  Table
  t_amg
  t_amg
canEqTyVar
  t_amg
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayV :: t_amg ~ Table
setEvBind
  ev = cobox_amk
  tm  = CO Sym cobox_ayV
rewriteEqEvidence
  [W] cobox_amk :: Table ~ t_amg
  t_amg
  Table
  Sym cobox_ayV
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayV :: t_amg
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amg " FQL.hs:78:11-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_amg := Table
  Coercion: t_amg ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amg := Table
setEvBind
  ev = cobox_ayV
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amg
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
23[<C:0,F:0>] [W] cobox_ayV :: t_amg ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amo :: [String]
                                ~ t_aml [" a type equality [String]
                                                           ~
                                                           t_aml " FQL.hs:70:10-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amo :: [String]
                                 ~ t_aml [" a type equality [String]
                                                            ~
                                                            t_aml " FQL.hs:70:10-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amo :: [String] ~ t_aml [" a type equality [String]
                                                       ~
                                                       t_aml " FQL.hs:70:10-36] (CNonCanonical)
canEvNC:eq
  [String]
  t_aml
can_eq_nc
  [W] cobox_amo :: [String] ~ t_aml
  [String]
  [String]
  t_aml
  t_aml
canEqTyVar
  t_aml
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayW :: t_aml ~ [String]
setEvBind
  ev = cobox_amo
  tm  = CO Sym cobox_ayW
rewriteEqEvidence
  [W] cobox_amo :: [String] ~ t_aml
  t_aml
  [String]
  Sym cobox_ayW
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayW :: t_aml
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_aml " FQL.hs:70:10-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aml := [String]
  Coercion: t_aml ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aml := [String]
setEvBind
  ev = cobox_ayW
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_aml
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
24[<C:0,F:0>] [W] cobox_ayW :: t_aml
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amp :: [String]
                                ~ t_amm [" a type equality [String]
                                                           ~
                                                           t_amm " FQL.hs:70:10-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amp :: [String]
                                 ~ t_amm [" a type equality [String]
                                                            ~
                                                            t_amm " FQL.hs:70:10-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amp :: [String] ~ t_amm [" a type equality [String]
                                                       ~
                                                       t_amm " FQL.hs:70:10-36] (CNonCanonical)
canEvNC:eq
  [String]
  t_amm
can_eq_nc
  [W] cobox_amp :: [String] ~ t_amm
  [String]
  [String]
  t_amm
  t_amm
canEqTyVar
  t_amm
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayX :: t_amm ~ [String]
setEvBind
  ev = cobox_amp
  tm  = CO Sym cobox_ayX
rewriteEqEvidence
  [W] cobox_amp :: [String] ~ t_amm
  t_amm
  [String]
  Sym cobox_ayX
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayX :: t_amm
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_amm " FQL.hs:70:10-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_amm := [String]
  Coercion: t_amm ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amm := [String]
setEvBind
  ev = cobox_ayX
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_amm
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
25[<C:0,F:0>] [W] cobox_ayX :: t_amm
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amq :: Int ~ t_amn [" a type equality Int
                                                               ~
                                                               t_amn " FQL.hs:70:10-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amq :: Int ~ t_amn [" a type equality Int
                                                                ~
                                                                t_amn " FQL.hs:70:10-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amq :: Int ~ t_amn [" a type equality Int
                                                  ~
                                                  t_amn " FQL.hs:70:10-36] (CNonCanonical)
canEvNC:eq
  Int
  t_amn
can_eq_nc
  [W] cobox_amq :: Int ~ t_amn
  Int
  Int
  t_amn
  t_amn
canEqTyVar
  t_amn
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayY :: t_amn ~ Int
setEvBind
  ev = cobox_amq
  tm  = CO Sym cobox_ayY
rewriteEqEvidence
  [W] cobox_amq :: Int ~ t_amn
  t_amn
  Int
  Sym cobox_ayY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayY :: t_amn ~ Int [" a type equality Int
                                                                ~
                                                                t_amn " FQL.hs:70:10-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_amn := Int
  Coercion: t_amn ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amn := Int
setEvBind
  ev = cobox_ayY
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_amn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
26[<C:0,F:0>] [W] cobox_ayY :: t_amn ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amu :: [String]
                                ~ t_amr [" a type equality [String]
                                                           ~
                                                           t_amr " FQL.hs:65:20-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amu :: [String]
                                 ~ t_amr [" a type equality [String]
                                                            ~
                                                            t_amr " FQL.hs:65:20-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amu :: [String] ~ t_amr [" a type equality [String]
                                                       ~
                                                       t_amr " FQL.hs:65:20-48] (CNonCanonical)
canEvNC:eq
  [String]
  t_amr
can_eq_nc
  [W] cobox_amu :: [String] ~ t_amr
  [String]
  [String]
  t_amr
  t_amr
canEqTyVar
  t_amr
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ayZ :: t_amr ~ [String]
setEvBind
  ev = cobox_amu
  tm  = CO Sym cobox_ayZ
rewriteEqEvidence
  [W] cobox_amu :: [String] ~ t_amr
  t_amr
  [String]
  Sym cobox_ayZ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayZ :: t_amr
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_amr " FQL.hs:65:20-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_amr := [String]
  Coercion: t_amr ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amr := [String]
setEvBind
  ev = cobox_ayZ
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_amr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
27[<C:0,F:0>] [W] cobox_ayZ :: t_amr
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amv :: [String]
                                ~ t_ams [" a type equality [String]
                                                           ~
                                                           t_ams " FQL.hs:65:20-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amv :: [String]
                                 ~ t_ams [" a type equality [String]
                                                            ~
                                                            t_ams " FQL.hs:65:20-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amv :: [String] ~ t_ams [" a type equality [String]
                                                       ~
                                                       t_ams " FQL.hs:65:20-48] (CNonCanonical)
canEvNC:eq
  [String]
  t_ams
can_eq_nc
  [W] cobox_amv :: [String] ~ t_ams
  [String]
  [String]
  t_ams
  t_ams
canEqTyVar
  t_ams
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az0 :: t_ams ~ [String]
setEvBind
  ev = cobox_amv
  tm  = CO Sym cobox_az0
rewriteEqEvidence
  [W] cobox_amv :: [String] ~ t_ams
  t_ams
  [String]
  Sym cobox_az0
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az0 :: t_ams
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_ams " FQL.hs:65:20-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_ams := [String]
  Coercion: t_ams ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ams := [String]
setEvBind
  ev = cobox_az0
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_ams
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
28[<C:0,F:0>] [W] cobox_az0 :: t_ams
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amw :: [Int]
                                ~ t_amt [" a type equality [Int]
                                                           ~
                                                           t_amt " FQL.hs:65:20-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amw :: [Int]
                                 ~ t_amt [" a type equality [Int]
                                                            ~
                                                            t_amt " FQL.hs:65:20-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amw :: [Int] ~ t_amt [" a type equality [Int]
                                                    ~
                                                    t_amt " FQL.hs:65:20-48] (CNonCanonical)
canEvNC:eq
  [Int]
  t_amt
can_eq_nc
  [W] cobox_amw :: [Int] ~ t_amt
  [Int]
  [Int]
  t_amt
  t_amt
canEqTyVar
  t_amt
  [Int]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az1 :: t_amt ~ [Int]
setEvBind
  ev = cobox_amw
  tm  = CO Sym cobox_az1
rewriteEqEvidence
  [W] cobox_amw :: [Int] ~ t_amt
  t_amt
  [Int]
  Sym cobox_az1
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az1 :: t_amt
                                 ~ [Int] [" a type equality [Int]
                                                            ~
                                                            t_amt " FQL.hs:65:20-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_amt := [Int]
  Coercion: t_amt ~ [Int]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amt := [Int]
setEvBind
  ev = cobox_az1
  tm  = CO <[Int]>_N
kickOutRewritable
  tv =  t_amt
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
29[<C:0,F:0>] [W] cobox_az1 :: t_amt ~ [Int]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amA :: [String]
                                ~ t_amx [" a type equality [String]
                                                           ~
                                                           t_amx " FQL.hs:60:12-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amA :: [String]
                                 ~ t_amx [" a type equality [String]
                                                            ~
                                                            t_amx " FQL.hs:60:12-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amA :: [String] ~ t_amx [" a type equality [String]
                                                       ~
                                                       t_amx " FQL.hs:60:12-37] (CNonCanonical)
canEvNC:eq
  [String]
  t_amx
can_eq_nc
  [W] cobox_amA :: [String] ~ t_amx
  [String]
  [String]
  t_amx
  t_amx
canEqTyVar
  t_amx
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az2 :: t_amx ~ [String]
setEvBind
  ev = cobox_amA
  tm  = CO Sym cobox_az2
rewriteEqEvidence
  [W] cobox_amA :: [String] ~ t_amx
  t_amx
  [String]
  Sym cobox_az2
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az2 :: t_amx
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_amx " FQL.hs:60:12-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_amx := [String]
  Coercion: t_amx ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amx := [String]
setEvBind
  ev = cobox_az2
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_amx
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
30[<C:0,F:0>] [W] cobox_az2 :: t_amx
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amB :: Table
                                ~ t_amy [" a type equality Table
                                                           ~
                                                           t_amy " FQL.hs:60:12-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amB :: Table
                                 ~ t_amy [" a type equality Table
                                                            ~
                                                            t_amy " FQL.hs:60:12-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amB :: Table ~ t_amy [" a type equality Table
                                                    ~
                                                    t_amy " FQL.hs:60:12-37] (CNonCanonical)
canEvNC:eq
  Table
  t_amy
can_eq_nc
  [W] cobox_amB :: Table ~ t_amy
  Table
  Table
  t_amy
  t_amy
can_eq_nc
  [W] cobox_amB :: Table ~ t_amy
  [[String]]
  Table
  t_amy
  t_amy
canEqTyVar
  t_amy
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az3 :: t_amy ~ Table
setEvBind
  ev = cobox_amB
  tm  = CO Sym cobox_az3
rewriteEqEvidence
  [W] cobox_amB :: Table ~ t_amy
  t_amy
  Table
  Sym cobox_az3
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az3 :: t_amy
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amy " FQL.hs:60:12-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_amy := Table
  Coercion: t_amy ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amy := Table
setEvBind
  ev = cobox_az3
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
31[<C:0,F:0>] [W] cobox_az3 :: t_amy ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amC :: Table
                                ~ t_amz [" a type equality Table
                                                           ~
                                                           t_amz " FQL.hs:60:12-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amC :: Table
                                 ~ t_amz [" a type equality Table
                                                            ~
                                                            t_amz " FQL.hs:60:12-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amC :: Table ~ t_amz [" a type equality Table
                                                    ~
                                                    t_amz " FQL.hs:60:12-37] (CNonCanonical)
canEvNC:eq
  Table
  t_amz
can_eq_nc
  [W] cobox_amC :: Table ~ t_amz
  Table
  Table
  t_amz
  t_amz
can_eq_nc
  [W] cobox_amC :: Table ~ t_amz
  [[String]]
  Table
  t_amz
  t_amz
canEqTyVar
  t_amz
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az4 :: t_amz ~ Table
setEvBind
  ev = cobox_amC
  tm  = CO Sym cobox_az4
rewriteEqEvidence
  [W] cobox_amC :: Table ~ t_amz
  t_amz
  Table
  Sym cobox_az4
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az4 :: t_amz
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amz " FQL.hs:60:12-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_amz := Table
  Coercion: t_amz ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amz := Table
setEvBind
  ev = cobox_az4
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
32[<C:0,F:0>] [W] cobox_az4 :: t_amz ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amG :: [Int]
                                ~ t_amD [" a type equality [Int]
                                                           ~
                                                           t_amD " FQL.hs:53:15-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amG :: [Int]
                                 ~ t_amD [" a type equality [Int]
                                                            ~
                                                            t_amD " FQL.hs:53:15-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amG :: [Int] ~ t_amD [" a type equality [Int]
                                                    ~
                                                    t_amD " FQL.hs:53:15-41] (CNonCanonical)
canEvNC:eq
  [Int]
  t_amD
can_eq_nc
  [W] cobox_amG :: [Int] ~ t_amD
  [Int]
  [Int]
  t_amD
  t_amD
canEqTyVar
  t_amD
  [Int]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az5 :: t_amD ~ [Int]
setEvBind
  ev = cobox_amG
  tm  = CO Sym cobox_az5
rewriteEqEvidence
  [W] cobox_amG :: [Int] ~ t_amD
  t_amD
  [Int]
  Sym cobox_az5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az5 :: t_amD
                                 ~ [Int] [" a type equality [Int]
                                                            ~
                                                            t_amD " FQL.hs:53:15-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_amD := [Int]
  Coercion: t_amD ~ [Int]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amD := [Int]
setEvBind
  ev = cobox_az5
  tm  = CO <[Int]>_N
kickOutRewritable
  tv =  t_amD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
33[<C:0,F:0>] [W] cobox_az5 :: t_amD ~ [Int]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amH :: [String]
                                ~ t_amE [" a type equality [String]
                                                           ~
                                                           t_amE " FQL.hs:53:15-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amH :: [String]
                                 ~ t_amE [" a type equality [String]
                                                            ~
                                                            t_amE " FQL.hs:53:15-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amH :: [String] ~ t_amE [" a type equality [String]
                                                       ~
                                                       t_amE " FQL.hs:53:15-41] (CNonCanonical)
canEvNC:eq
  [String]
  t_amE
can_eq_nc
  [W] cobox_amH :: [String] ~ t_amE
  [String]
  [String]
  t_amE
  t_amE
canEqTyVar
  t_amE
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az6 :: t_amE ~ [String]
setEvBind
  ev = cobox_amH
  tm  = CO Sym cobox_az6
rewriteEqEvidence
  [W] cobox_amH :: [String] ~ t_amE
  t_amE
  [String]
  Sym cobox_az6
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az6 :: t_amE
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_amE " FQL.hs:53:15-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_amE := [String]
  Coercion: t_amE ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amE := [String]
setEvBind
  ev = cobox_az6
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_amE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
34[<C:0,F:0>] [W] cobox_az6 :: t_amE
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amI :: String
                                ~ t_amF [" a type equality String
                                                           ~
                                                           t_amF " FQL.hs:53:15-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amI :: String
                                 ~ t_amF [" a type equality String
                                                            ~
                                                            t_amF " FQL.hs:53:15-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amI :: String ~ t_amF [" a type equality String
                                                     ~
                                                     t_amF " FQL.hs:53:15-41] (CNonCanonical)
canEvNC:eq
  String
  t_amF
can_eq_nc
  [W] cobox_amI :: String ~ t_amF
  String
  String
  t_amF
  t_amF
can_eq_nc
  [W] cobox_amI :: String ~ t_amF
  [Char]
  String
  t_amF
  t_amF
canEqTyVar
  t_amF
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az7 :: t_amF ~ String
setEvBind
  ev = cobox_amI
  tm  = CO Sym cobox_az7
rewriteEqEvidence
  [W] cobox_amI :: String ~ t_amF
  t_amF
  String
  Sym cobox_az7
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az7 :: t_amF
                                 ~ String [" a type equality String
                                                             ~
                                                             t_amF " FQL.hs:53:15-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_amF := String
  Coercion: t_amF ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amF := String
setEvBind
  ev = cobox_az7
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_amF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
35[<C:0,F:0>] [W] cobox_az7 :: t_amF ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amL :: Table
                                ~ t_amJ [" a type equality Table
                                                           ~
                                                           t_amJ " FQL.hs:49:17-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amL :: Table
                                 ~ t_amJ [" a type equality Table
                                                            ~
                                                            t_amJ " FQL.hs:49:17-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amL :: Table ~ t_amJ [" a type equality Table
                                                    ~
                                                    t_amJ " FQL.hs:49:17-33] (CNonCanonical)
canEvNC:eq
  Table
  t_amJ
can_eq_nc
  [W] cobox_amL :: Table ~ t_amJ
  Table
  Table
  t_amJ
  t_amJ
can_eq_nc
  [W] cobox_amL :: Table ~ t_amJ
  [[String]]
  Table
  t_amJ
  t_amJ
canEqTyVar
  t_amJ
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az8 :: t_amJ ~ Table
setEvBind
  ev = cobox_amL
  tm  = CO Sym cobox_az8
rewriteEqEvidence
  [W] cobox_amL :: Table ~ t_amJ
  t_amJ
  Table
  Sym cobox_az8
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az8 :: t_amJ
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amJ " FQL.hs:49:17-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_amJ := Table
  Coercion: t_amJ ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amJ := Table
setEvBind
  ev = cobox_az8
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
36[<C:0,F:0>] [W] cobox_az8 :: t_amJ ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amM :: [String]
                                ~ t_amK [" a type equality [String]
                                                           ~
                                                           t_amK " FQL.hs:49:17-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amM :: [String]
                                 ~ t_amK [" a type equality [String]
                                                            ~
                                                            t_amK " FQL.hs:49:17-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amM :: [String] ~ t_amK [" a type equality [String]
                                                       ~
                                                       t_amK " FQL.hs:49:17-33] (CNonCanonical)
canEvNC:eq
  [String]
  t_amK
can_eq_nc
  [W] cobox_amM :: [String] ~ t_amK
  [String]
  [String]
  t_amK
  t_amK
canEqTyVar
  t_amK
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_az9 :: t_amK ~ [String]
setEvBind
  ev = cobox_amM
  tm  = CO Sym cobox_az9
rewriteEqEvidence
  [W] cobox_amM :: [String] ~ t_amK
  t_amK
  [String]
  Sym cobox_az9
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_az9 :: t_amK
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_amK " FQL.hs:49:17-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_amK := [String]
  Coercion: t_amK ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amK := [String]
setEvBind
  ev = cobox_az9
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_amK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
37[<C:0,F:0>] [W] cobox_az9 :: t_amK
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amP :: Table
                                ~ t_amN [" a type equality Table
                                                           ~
                                                           t_amN " FQL.hs:44:17-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amP :: Table
                                 ~ t_amN [" a type equality Table
                                                            ~
                                                            t_amN " FQL.hs:44:17-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amP :: Table ~ t_amN [" a type equality Table
                                                    ~
                                                    t_amN " FQL.hs:44:17-30] (CNonCanonical)
canEvNC:eq
  Table
  t_amN
can_eq_nc
  [W] cobox_amP :: Table ~ t_amN
  Table
  Table
  t_amN
  t_amN
can_eq_nc
  [W] cobox_amP :: Table ~ t_amN
  [[String]]
  Table
  t_amN
  t_amN
canEqTyVar
  t_amN
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aza :: t_amN ~ Table
setEvBind
  ev = cobox_amP
  tm  = CO Sym cobox_aza
rewriteEqEvidence
  [W] cobox_amP :: Table ~ t_amN
  t_amN
  Table
  Sym cobox_aza
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aza :: t_amN
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amN " FQL.hs:44:17-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amN := Table
  Coercion: t_amN ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amN := Table
setEvBind
  ev = cobox_aza
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
38[<C:0,F:0>] [W] cobox_aza :: t_amN ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amQ :: [Int]
                                ~ t_amO [" a type equality [Int]
                                                           ~
                                                           t_amO " FQL.hs:44:17-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amQ :: [Int]
                                 ~ t_amO [" a type equality [Int]
                                                            ~
                                                            t_amO " FQL.hs:44:17-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amQ :: [Int] ~ t_amO [" a type equality [Int]
                                                    ~
                                                    t_amO " FQL.hs:44:17-30] (CNonCanonical)
canEvNC:eq
  [Int]
  t_amO
can_eq_nc
  [W] cobox_amQ :: [Int] ~ t_amO
  [Int]
  [Int]
  t_amO
  t_amO
canEqTyVar
  t_amO
  [Int]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azb :: t_amO ~ [Int]
setEvBind
  ev = cobox_amQ
  tm  = CO Sym cobox_azb
rewriteEqEvidence
  [W] cobox_amQ :: [Int] ~ t_amO
  t_amO
  [Int]
  Sym cobox_azb
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azb :: t_amO
                                 ~ [Int] [" a type equality [Int]
                                                            ~
                                                            t_amO " FQL.hs:44:17-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amO := [Int]
  Coercion: t_amO ~ [Int]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amO := [Int]
setEvBind
  ev = cobox_azb
  tm  = CO <[Int]>_N
kickOutRewritable
  tv =  t_amO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
39[<C:0,F:0>] [W] cobox_azb :: t_amO ~ [Int]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amT :: Table
                                ~ t_amR [" a type equality Table
                                                           ~
                                                           t_amR " FQL.hs:37:21-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amT :: Table
                                 ~ t_amR [" a type equality Table
                                                            ~
                                                            t_amR " FQL.hs:37:21-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amT :: Table ~ t_amR [" a type equality Table
                                                    ~
                                                    t_amR " FQL.hs:37:21-37] (CNonCanonical)
canEvNC:eq
  Table
  t_amR
can_eq_nc
  [W] cobox_amT :: Table ~ t_amR
  Table
  Table
  t_amR
  t_amR
can_eq_nc
  [W] cobox_amT :: Table ~ t_amR
  [[String]]
  Table
  t_amR
  t_amR
canEqTyVar
  t_amR
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azc :: t_amR ~ Table
setEvBind
  ev = cobox_amT
  tm  = CO Sym cobox_azc
rewriteEqEvidence
  [W] cobox_amT :: Table ~ t_amR
  t_amR
  Table
  Sym cobox_azc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azc :: t_amR
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amR " FQL.hs:37:21-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_amR := Table
  Coercion: t_amR ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amR := Table
setEvBind
  ev = cobox_azc
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
40[<C:0,F:0>] [W] cobox_azc :: t_amR ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amU :: [String]
                                ~ t_amS [" a type equality [String]
                                                           ~
                                                           t_amS " FQL.hs:37:21-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amU :: [String]
                                 ~ t_amS [" a type equality [String]
                                                            ~
                                                            t_amS " FQL.hs:37:21-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amU :: [String] ~ t_amS [" a type equality [String]
                                                       ~
                                                       t_amS " FQL.hs:37:21-37] (CNonCanonical)
canEvNC:eq
  [String]
  t_amS
can_eq_nc
  [W] cobox_amU :: [String] ~ t_amS
  [String]
  [String]
  t_amS
  t_amS
canEqTyVar
  t_amS
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azd :: t_amS ~ [String]
setEvBind
  ev = cobox_amU
  tm  = CO Sym cobox_azd
rewriteEqEvidence
  [W] cobox_amU :: [String] ~ t_amS
  t_amS
  [String]
  Sym cobox_azd
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azd :: t_amS
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_amS " FQL.hs:37:21-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_amS := [String]
  Coercion: t_amS ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amS := [String]
setEvBind
  ev = cobox_azd
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_amS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
41[<C:0,F:0>] [W] cobox_azd :: t_amS
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amX :: Table
                                ~ t_amV [" a type equality Table
                                                           ~
                                                           t_amV " FQL.hs:33:15-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amX :: Table
                                 ~ t_amV [" a type equality Table
                                                            ~
                                                            t_amV " FQL.hs:33:15-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amX :: Table ~ t_amV [" a type equality Table
                                                    ~
                                                    t_amV " FQL.hs:33:15-29] (CNonCanonical)
canEvNC:eq
  Table
  t_amV
can_eq_nc
  [W] cobox_amX :: Table ~ t_amV
  Table
  Table
  t_amV
  t_amV
can_eq_nc
  [W] cobox_amX :: Table ~ t_amV
  [[String]]
  Table
  t_amV
  t_amV
canEqTyVar
  t_amV
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aze :: t_amV ~ Table
setEvBind
  ev = cobox_amX
  tm  = CO Sym cobox_aze
rewriteEqEvidence
  [W] cobox_amX :: Table ~ t_amV
  t_amV
  Table
  Sym cobox_aze
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aze :: t_amV
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amV " FQL.hs:33:15-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_amV := Table
  Coercion: t_amV ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amV := Table
setEvBind
  ev = cobox_aze
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
42[<C:0,F:0>] [W] cobox_aze :: t_amV ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amY :: String
                                ~ t_amW [" a type equality String
                                                           ~
                                                           t_amW " FQL.hs:33:15-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amY :: String
                                 ~ t_amW [" a type equality String
                                                            ~
                                                            t_amW " FQL.hs:33:15-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amY :: String ~ t_amW [" a type equality String
                                                     ~
                                                     t_amW " FQL.hs:33:15-29] (CNonCanonical)
canEvNC:eq
  String
  t_amW
can_eq_nc
  [W] cobox_amY :: String ~ t_amW
  String
  String
  t_amW
  t_amW
can_eq_nc
  [W] cobox_amY :: String ~ t_amW
  [Char]
  String
  t_amW
  t_amW
canEqTyVar
  t_amW
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azf :: t_amW ~ String
setEvBind
  ev = cobox_amY
  tm  = CO Sym cobox_azf
rewriteEqEvidence
  [W] cobox_amY :: String ~ t_amW
  t_amW
  String
  Sym cobox_azf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azf :: t_amW
                                 ~ String [" a type equality String
                                                             ~
                                                             t_amW " FQL.hs:33:15-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_amW := String
  Coercion: t_amW ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amW := String
setEvBind
  ev = cobox_azf
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_amW
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
43[<C:0,F:0>] [W] cobox_azf :: t_amW ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an0 :: Table
                                ~ t_amZ [" a type equality Table
                                                           ~
                                                           t_amZ " FQL.hs:20:13-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an0 :: Table
                                 ~ t_amZ [" a type equality Table
                                                            ~
                                                            t_amZ " FQL.hs:20:13-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an0 :: Table ~ t_amZ [" a type equality Table
                                                    ~
                                                    t_amZ " FQL.hs:20:13-17] (CNonCanonical)
canEvNC:eq
  Table
  t_amZ
can_eq_nc
  [W] cobox_an0 :: Table ~ t_amZ
  Table
  Table
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_an0 :: Table ~ t_amZ
  [[String]]
  Table
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azg :: t_amZ ~ Table
setEvBind
  ev = cobox_an0
  tm  = CO Sym cobox_azg
rewriteEqEvidence
  [W] cobox_an0 :: Table ~ t_amZ
  t_amZ
  Table
  Sym cobox_azg
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azg :: t_amZ
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_amZ " FQL.hs:20:13-17] (CTyEqCan)
Sneaky unification:
  Unifies: t_amZ := Table
  Coercion: t_amZ ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amZ := Table
setEvBind
  ev = cobox_azg
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_amZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
44[<C:0,F:0>] [W] cobox_azg :: t_amZ ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an2 :: Table
                                ~ t_an1 [" a type equality Table
                                                           ~
                                                           t_an1 " FQL.hs:7:14-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an2 :: Table
                                 ~ t_an1 [" a type equality Table
                                                            ~
                                                            t_an1 " FQL.hs:7:14-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an2 :: Table ~ t_an1 [" a type equality Table
                                                    ~
                                                    t_an1 " FQL.hs:7:14-18] (CNonCanonical)
canEvNC:eq
  Table
  t_an1
can_eq_nc
  [W] cobox_an2 :: Table ~ t_an1
  Table
  Table
  t_an1
  t_an1
can_eq_nc
  [W] cobox_an2 :: Table ~ t_an1
  [[String]]
  Table
  t_an1
  t_an1
canEqTyVar
  t_an1
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azh :: t_an1 ~ Table
setEvBind
  ev = cobox_an2
  tm  = CO Sym cobox_azh
rewriteEqEvidence
  [W] cobox_an2 :: Table ~ t_an1
  t_an1
  Table
  Sym cobox_azh
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azh :: t_an1
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_an1 " FQL.hs:7:14-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_an1 := Table
  Coercion: t_an1 ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an1 := Table
setEvBind
  ev = cobox_azh
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_an1
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
45[<C:0,F:0>] [W] cobox_azh :: t_an1 ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an6 :: String
                                ~ t_an3 [" a type equality String
                                                           ~
                                                           t_an3 " FQL.hs:5:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an6 :: String
                                 ~ t_an3 [" a type equality String
                                                            ~
                                                            t_an3 " FQL.hs:5:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an6 :: String ~ t_an3 [" a type equality String
                                                     ~
                                                     t_an3 " FQL.hs:5:18-41] (CNonCanonical)
canEvNC:eq
  String
  t_an3
can_eq_nc
  [W] cobox_an6 :: String ~ t_an3
  String
  String
  t_an3
  t_an3
can_eq_nc
  [W] cobox_an6 :: String ~ t_an3
  [Char]
  String
  t_an3
  t_an3
canEqTyVar
  t_an3
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azi :: t_an3 ~ String
setEvBind
  ev = cobox_an6
  tm  = CO Sym cobox_azi
rewriteEqEvidence
  [W] cobox_an6 :: String ~ t_an3
  t_an3
  String
  Sym cobox_azi
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azi :: t_an3
                                 ~ String [" a type equality String
                                                             ~
                                                             t_an3 " FQL.hs:5:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_an3 := String
  Coercion: t_an3 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an3 := String
setEvBind
  ev = cobox_azi
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_an3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
46[<C:0,F:0>] [W] cobox_azi :: t_an3 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an7 :: String
                                ~ t_an4 [" a type equality String
                                                           ~
                                                           t_an4 " FQL.hs:5:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an7 :: String
                                 ~ t_an4 [" a type equality String
                                                            ~
                                                            t_an4 " FQL.hs:5:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an7 :: String ~ t_an4 [" a type equality String
                                                     ~
                                                     t_an4 " FQL.hs:5:18-41] (CNonCanonical)
canEvNC:eq
  String
  t_an4
can_eq_nc
  [W] cobox_an7 :: String ~ t_an4
  String
  String
  t_an4
  t_an4
can_eq_nc
  [W] cobox_an7 :: String ~ t_an4
  [Char]
  String
  t_an4
  t_an4
canEqTyVar
  t_an4
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azj :: t_an4 ~ String
setEvBind
  ev = cobox_an7
  tm  = CO Sym cobox_azj
rewriteEqEvidence
  [W] cobox_an7 :: String ~ t_an4
  t_an4
  String
  Sym cobox_azj
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azj :: t_an4
                                 ~ String [" a type equality String
                                                             ~
                                                             t_an4 " FQL.hs:5:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_an4 := String
  Coercion: t_an4 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an4 := String
setEvBind
  ev = cobox_azj
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_an4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
47[<C:0,F:0>] [W] cobox_azj :: t_an4 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an8 :: Bool ~ t_an5 [" a type equality Bool
                                                                ~
                                                                t_an5 " FQL.hs:5:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an8 :: Bool ~ t_an5 [" a type equality Bool
                                                                 ~
                                                                 t_an5 " FQL.hs:5:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an8 :: Bool ~ t_an5 [" a type equality Bool
                                                   ~
                                                   t_an5 " FQL.hs:5:18-41] (CNonCanonical)
canEvNC:eq
  Bool
  t_an5
can_eq_nc
  [W] cobox_an8 :: Bool ~ t_an5
  Bool
  Bool
  t_an5
  t_an5
canEqTyVar
  t_an5
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azk :: t_an5 ~ Bool
setEvBind
  ev = cobox_an8
  tm  = CO Sym cobox_azk
rewriteEqEvidence
  [W] cobox_an8 :: Bool ~ t_an5
  t_an5
  Bool
  Sym cobox_azk
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azk :: t_an5 ~ Bool [" a type equality Bool
                                                                 ~
                                                                 t_an5 " FQL.hs:5:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_an5 := Bool
  Coercion: t_an5 ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an5 := Bool
setEvBind
  ev = cobox_azk
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_an5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
48[<C:0,F:0>] [W] cobox_azk :: t_an5 ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anb :: [t_ana]
                                ~ t_alB [" a type equality [t_ana]
                                                           ~
                                                           t_alB " FQL.hs:110:15-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anb :: [t_ana]
                                 ~ t_alB [" a type equality [t_ana]
                                                            ~
                                                            t_alB " FQL.hs:110:15-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anb :: [t_ana] ~ t_alB [" a type equality [t_ana]
                                                      ~
                                                      t_alB " FQL.hs:110:15-18] (CNonCanonical)
canEvNC:eq
  [t_ana]
  t_alB
can_eq_nc
  [W] cobox_anb :: [t_ana] ~ t_alB
  [t_ana]
  [t_ana]
  t_alB
  t_alB
canEqTyVar
  t_alB
  [t_ana]
  Is-swapped
Following bound tyvar t_alB = Table
newWantedEvVar/cache miss [W] cobox_azl :: Table ~ [t_ana]
setEvBind
  ev = cobox_anb
  tm  = CO Sym cobox_azl
rewriteEqEvidence
  [W] cobox_anb :: [t_ana] ~ t_alB
  Table
  [t_ana]
  Sym cobox_azl
canEqTyVar2
  t_alB
  [t_ana]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_azl :: Table ~ [t_ana]
  Table
  Table
  [t_ana]
  [t_ana]
can_eq_nc
  [W] cobox_azl :: Table ~ [t_ana]
  [[String]]
  Table
  [t_ana]
  [t_ana]
newWantedEvVar/cache miss [W] cobox_azm :: [String] ~ t_ana
setEvBind
  ev = cobox_azl
  tm  = CO [cobox_azm]_N
canEvNC:eq
  [String]
  t_ana
can_eq_nc
  [W] cobox_azm :: [String] ~ t_ana
  [String]
  [String]
  t_ana
  t_ana
canEqTyVar
  t_ana
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azn :: t_ana ~ [String]
setEvBind
  ev = cobox_azm
  tm  = CO Sym cobox_azn
rewriteEqEvidence
  [W] cobox_azm :: [String] ~ t_ana
  t_ana
  [String]
  Sym cobox_azn
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azn :: t_ana
                                 ~ [String] [" a type equality [t_ana]
                                                               ~
                                                               t_alB " FQL.hs:110:15-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_ana := [String]
  Coercion: t_ana ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ana := [String]
setEvBind
  ev = cobox_azn
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_ana
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
49[<C:0,F:0>] [W] cobox_azn :: t_ana
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_and :: [t_anc]
                                ~ t_alC [" a type equality [t_anc]
                                                           ~
                                                           t_alC " FQL.hs:110:22-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_and :: [t_anc]
                                 ~ t_alC [" a type equality [t_anc]
                                                            ~
                                                            t_alC " FQL.hs:110:22-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_and :: [t_anc] ~ t_alC [" a type equality [t_anc]
                                                      ~
                                                      t_alC " FQL.hs:110:22-25] (CNonCanonical)
canEvNC:eq
  [t_anc]
  t_alC
can_eq_nc
  [W] cobox_and :: [t_anc] ~ t_alC
  [t_anc]
  [t_anc]
  t_alC
  t_alC
canEqTyVar
  t_alC
  [t_anc]
  Is-swapped
Following bound tyvar t_alC = Table
newWantedEvVar/cache miss [W] cobox_azo :: Table ~ [t_anc]
setEvBind
  ev = cobox_and
  tm  = CO Sym cobox_azo
rewriteEqEvidence
  [W] cobox_and :: [t_anc] ~ t_alC
  Table
  [t_anc]
  Sym cobox_azo
canEqTyVar2
  t_alC
  [t_anc]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_azo :: Table ~ [t_anc]
  Table
  Table
  [t_anc]
  [t_anc]
can_eq_nc
  [W] cobox_azo :: Table ~ [t_anc]
  [[String]]
  Table
  [t_anc]
  [t_anc]
newWantedEvVar/cache miss [W] cobox_azp :: [String] ~ t_anc
setEvBind
  ev = cobox_azo
  tm  = CO [cobox_azp]_N
canEvNC:eq
  [String]
  t_anc
can_eq_nc
  [W] cobox_azp :: [String] ~ t_anc
  [String]
  [String]
  t_anc
  t_anc
canEqTyVar
  t_anc
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azq :: t_anc ~ [String]
setEvBind
  ev = cobox_azp
  tm  = CO Sym cobox_azq
rewriteEqEvidence
  [W] cobox_azp :: [String] ~ t_anc
  t_anc
  [String]
  Sym cobox_azq
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azq :: t_anc
                                 ~ [String] [" a type equality [t_anc]
                                                               ~
                                                               t_alC " FQL.hs:110:22-25] (CTyEqCan)
Sneaky unification:
  Unifies: t_anc := [String]
  Coercion: t_anc ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_anc := [String]
setEvBind
  ev = cobox_azq
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_anc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
50[<C:0,F:0>] [W] cobox_azq :: t_anc
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anh :: Int ~ t_ane [" a type equality Int
                                                               ~
                                                               t_ane " FQL.hs:112:40-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anh :: Int ~ t_ane [" a type equality Int
                                                                ~
                                                                t_ane " FQL.hs:112:40-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anh :: Int ~ t_ane [" a type equality Int
                                                  ~
                                                  t_ane " FQL.hs:112:40-48] (CNonCanonical)
canEvNC:eq
  Int
  t_ane
can_eq_nc
  [W] cobox_anh :: Int ~ t_ane
  Int
  Int
  t_ane
  t_ane
canEqTyVar
  t_ane
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azr :: t_ane ~ Int
setEvBind
  ev = cobox_anh
  tm  = CO Sym cobox_azr
rewriteEqEvidence
  [W] cobox_anh :: Int ~ t_ane
  t_ane
  Int
  Sym cobox_azr
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azr :: t_ane ~ Int [" a type equality Int
                                                                ~
                                                                t_ane " FQL.hs:112:40-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_ane := Int
  Coercion: t_ane ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ane := Int
setEvBind
  ev = cobox_azr
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_ane
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
51[<C:0,F:0>] [W] cobox_azr :: t_ane ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ani :: [t_anc]
                                ~ [a_ang] [" a type equality [t_anc]
                                                             ~
                                                             [a_ang] " FQL.hs:112:47-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ani :: [t_anc]
                                 ~ [a_ang] [" a type equality [t_anc]
                                                              ~
                                                              [a_ang] " FQL.hs:112:47-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ani :: [t_anc] ~ [a_ang] [" a type equality [t_anc]
                                                        ~
                                                        [a_ang] " FQL.hs:112:47-48] (CNonCanonical)
canEvNC:eq
  [t_anc]
  [a_ang]
can_eq_nc
  [W] cobox_ani :: [t_anc] ~ [a_ang]
  [t_anc]
  [t_anc]
  [a_ang]
  [a_ang]
newWantedEvVar/cache miss [W] cobox_azs :: t_anc ~ a_ang
setEvBind
  ev = cobox_ani
  tm  = CO [cobox_azs]_N
canEvNC:eq
  t_anc
  a_ang
can_eq_nc
  [W] cobox_azs :: t_anc ~ a_ang
  t_anc
  t_anc
  a_ang
  a_ang
canEqTyVar
  t_anc
  a_ang
  Not-swapped
Following bound tyvar t_anc = [String]
canEqTyVar2
  t_anc
  a_ang
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_azs :: [String] ~ a_ang
  [String]
  [String]
  a_ang
  a_ang
canEqTyVar
  a_ang
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azt :: a_ang ~ [String]
setEvBind
  ev = cobox_azs
  tm  = CO Sym cobox_azt
rewriteEqEvidence
  [W] cobox_azs :: [String] ~ a_ang
  a_ang
  [String]
  Sym cobox_azt
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azt :: a_ang
                                 ~ [String] [" a type equality [t_anc]
                                                               ~
                                                               [a_ang] " FQL.hs:112:47-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_ang := [String]
  Coercion: a_ang ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ang := [String]
setEvBind
  ev = cobox_azt
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_ang
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
52[<C:0,F:0>] [W] cobox_azt :: a_ang
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anl :: Int ~ t_anj [" a type equality Int
                                                               ~
                                                               t_anj " FQL.hs:111:40-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anl :: Int ~ t_anj [" a type equality Int
                                                                ~
                                                                t_anj " FQL.hs:111:40-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anl :: Int ~ t_anj [" a type equality Int
                                                  ~
                                                  t_anj " FQL.hs:111:40-48] (CNonCanonical)
canEvNC:eq
  Int
  t_anj
can_eq_nc
  [W] cobox_anl :: Int ~ t_anj
  Int
  Int
  t_anj
  t_anj
canEqTyVar
  t_anj
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azu :: t_anj ~ Int
setEvBind
  ev = cobox_anl
  tm  = CO Sym cobox_azu
rewriteEqEvidence
  [W] cobox_anl :: Int ~ t_anj
  t_anj
  Int
  Sym cobox_azu
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azu :: t_anj ~ Int [" a type equality Int
                                                                ~
                                                                t_anj " FQL.hs:111:40-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_anj := Int
  Coercion: t_anj ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anj := Int
setEvBind
  ev = cobox_azu
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_anj
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
53[<C:0,F:0>] [W] cobox_azu :: t_anj ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anm :: [t_ana]
                                ~ [a_ank] [" a type equality [t_ana]
                                                             ~
                                                             [a_ank] " FQL.hs:111:47-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anm :: [t_ana]
                                 ~ [a_ank] [" a type equality [t_ana]
                                                              ~
                                                              [a_ank] " FQL.hs:111:47-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anm :: [t_ana] ~ [a_ank] [" a type equality [t_ana]
                                                        ~
                                                        [a_ank] " FQL.hs:111:47-48] (CNonCanonical)
canEvNC:eq
  [t_ana]
  [a_ank]
can_eq_nc
  [W] cobox_anm :: [t_ana] ~ [a_ank]
  [t_ana]
  [t_ana]
  [a_ank]
  [a_ank]
newWantedEvVar/cache miss [W] cobox_azv :: t_ana ~ a_ank
setEvBind
  ev = cobox_anm
  tm  = CO [cobox_azv]_N
canEvNC:eq
  t_ana
  a_ank
can_eq_nc
  [W] cobox_azv :: t_ana ~ a_ank
  t_ana
  t_ana
  a_ank
  a_ank
canEqTyVar
  t_ana
  a_ank
  Not-swapped
Following bound tyvar t_ana = [String]
canEqTyVar2
  t_ana
  a_ank
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_azv :: [String] ~ a_ank
  [String]
  [String]
  a_ank
  a_ank
canEqTyVar
  a_ank
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azw :: a_ank ~ [String]
setEvBind
  ev = cobox_azv
  tm  = CO Sym cobox_azw
rewriteEqEvidence
  [W] cobox_azv :: [String] ~ a_ank
  a_ank
  [String]
  Sym cobox_azw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azw :: a_ank
                                 ~ [String] [" a type equality [t_ana]
                                                               ~
                                                               [a_ank] " FQL.hs:111:47-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_ank := [String]
  Coercion: a_ank ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ank := [String]
setEvBind
  ev = cobox_azw
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_ank
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
54[<C:0,F:0>] [W] cobox_azw :: a_ank
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ant :: [c_ans]
                                ~ t_alD [" a type equality [c_ans]
                                                           ~
                                                           t_alD " FQL.hs:110:30-107] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ant :: [c_ans]
                                 ~ t_alD [" a type equality [c_ans]
                                                            ~
                                                            t_alD " FQL.hs:110:30-107] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ant :: [c_ans] ~ t_alD [" a type equality [c_ans]
                                                      ~
                                                      t_alD " FQL.hs:110:30-107] (CNonCanonical)
canEvNC:eq
  [c_ans]
  t_alD
can_eq_nc
  [W] cobox_ant :: [c_ans] ~ t_alD
  [c_ans]
  [c_ans]
  t_alD
  t_alD
canEqTyVar
  t_alD
  [c_ans]
  Is-swapped
Following bound tyvar t_alD = Table
newWantedEvVar/cache miss [W] cobox_azx :: Table ~ [c_ans]
setEvBind
  ev = cobox_ant
  tm  = CO Sym cobox_azx
rewriteEqEvidence
  [W] cobox_ant :: [c_ans] ~ t_alD
  Table
  [c_ans]
  Sym cobox_azx
canEqTyVar2
  t_alD
  [c_ans]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_azx :: Table ~ [c_ans]
  Table
  Table
  [c_ans]
  [c_ans]
can_eq_nc
  [W] cobox_azx :: Table ~ [c_ans]
  [[String]]
  Table
  [c_ans]
  [c_ans]
newWantedEvVar/cache miss [W] cobox_azy :: [String] ~ c_ans
setEvBind
  ev = cobox_azx
  tm  = CO [cobox_azy]_N
canEvNC:eq
  [String]
  c_ans
can_eq_nc
  [W] cobox_azy :: [String] ~ c_ans
  [String]
  [String]
  c_ans
  c_ans
canEqTyVar
  c_ans
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azz :: c_ans ~ [String]
setEvBind
  ev = cobox_azy
  tm  = CO Sym cobox_azz
rewriteEqEvidence
  [W] cobox_azy :: [String] ~ c_ans
  c_ans
  [String]
  Sym cobox_azz
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azz :: c_ans
                                 ~ [String] [" a type equality [c_ans]
                                                               ~
                                                               t_alD " FQL.hs:110:30-107] (CTyEqCan)
Sneaky unification:
  Unifies: c_ans := [String]
  Coercion: c_ans ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind c_ans := [String]
setEvBind
  ev = cobox_azz
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  c_ans
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
55[<C:0,F:0>] [W] cobox_azz :: c_ans
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                                ~ (a_anq -> b_anr -> c_ans) [" a type equality [a_anv]
                                                                               -> [a_anv] -> [a_anv]
                                                                               ~
                                                                               a_anq
                                                                               -> b_anr
                                                                               -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                                 ~ (a_anq -> b_anr -> c_ans) [" a type equality [a_anv]
                                                                                -> [a_anv]
                                                                                -> [a_anv]
                                                                                ~
                                                                                a_anq
                                                                                -> b_anr
                                                                                -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                   ~ (a_anq -> b_anr -> c_ans) [" a type equality [a_anv]
                                                                  -> [a_anv] -> [a_anv]
                                                                  ~
                                                                  a_anq
                                                                  -> b_anr
                                                                  -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
canEvNC:eq
  [a_anv] -> [a_anv] -> [a_anv]
  a_anq -> b_anr -> c_ans
can_eq_nc
  [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                   ~ (a_anq -> b_anr -> c_ans)
  [a_anv] -> [a_anv] -> [a_anv]
  [a_anv] -> [a_anv] -> [a_anv]
  a_anq -> b_anr -> c_ans
  a_anq -> b_anr -> c_ans
newWantedEvVar/cache miss [W] cobox_azA :: [a_anv] ~ a_anq
newWantedEvVar/cache miss
  [W] cobox_azB :: ([a_anv] -> [a_anv]) ~ (b_anr -> c_ans)
setEvBind
  ev = cobox_anw
  tm  = CO cobox_azA -> cobox_azB
canEvNC:eq
  [a_anv]
  a_anq
can_eq_nc
  [W] cobox_azA :: [a_anv] ~ a_anq
  [a_anv]
  [a_anv]
  a_anq
  a_anq
canEqTyVar
  a_anq
  [a_anv]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azC :: a_anq ~ [a_anv]
setEvBind
  ev = cobox_azA
  tm  = CO Sym cobox_azC
rewriteEqEvidence
  [W] cobox_azA :: [a_anv] ~ a_anq
  a_anq
  [a_anv]
  Sym cobox_azC
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azC :: a_anq
                                 ~ [a_anv] [" a type equality [a_anv] -> [a_anv] -> [a_anv]
                                                              ~
                                                              a_anq
                                                              -> b_anr
                                                              -> c_ans " FQL.hs:110:38-41] (CTyEqCan)
Sneaky unification:
  Unifies: a_anq := [a_anv]
  Coercion: a_anq ~ [a_anv]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anq := [a_anv]
setEvBind
  ev = cobox_azC
  tm  = CO <[a_anv]>_N
kickOutRewritable
  tv =  a_anq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
56[<C:0,F:0>] [W] cobox_azC :: a_anq
                               ~ [a_anv]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_azB :: ([a_anv] -> [a_anv])
                                ~ (b_anr -> c_ans) [" a type equality [a_anv] -> [a_anv] -> [a_anv]
                                                                      ~
                                                                      a_anq
                                                                      -> b_anr
                                                                      -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_azB :: ([a_anv] -> [a_anv])
                                 ~ (b_anr -> c_ans) [" a type equality [a_anv] -> [a_anv] -> [a_anv]
                                                                       ~
                                                                       a_anq
                                                                       -> b_anr
                                                                       -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_azB :: ([a_anv] -> [a_anv])
                   ~ (b_anr -> c_ans) [" a type equality [a_anv] -> [a_anv] -> [a_anv]
                                                         ~
                                                         a_anq
                                                         -> b_anr
                                                         -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
canEvNC:eq
  [a_anv] -> [a_anv]
  b_anr -> c_ans
can_eq_nc
  [W] cobox_azB :: ([a_anv] -> [a_anv]) ~ (b_anr -> c_ans)
  [a_anv] -> [a_anv]
  [a_anv] -> [a_anv]
  b_anr -> c_ans
  b_anr -> c_ans
newWantedEvVar/cache miss [W] cobox_azD :: [a_anv] ~ b_anr
newWantedEvVar/cache miss [W] cobox_azE :: [a_anv] ~ c_ans
setEvBind
  ev = cobox_azB
  tm  = CO cobox_azD -> cobox_azE
canEvNC:eq
  [a_anv]
  b_anr
can_eq_nc
  [W] cobox_azD :: [a_anv] ~ b_anr
  [a_anv]
  [a_anv]
  b_anr
  b_anr
canEqTyVar
  b_anr
  [a_anv]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azF :: b_anr ~ [a_anv]
setEvBind
  ev = cobox_azD
  tm  = CO Sym cobox_azF
rewriteEqEvidence
  [W] cobox_azD :: [a_anv] ~ b_anr
  b_anr
  [a_anv]
  Sym cobox_azF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azF :: b_anr
                                 ~ [a_anv] [" a type equality [a_anv] -> [a_anv] -> [a_anv]
                                                              ~
                                                              a_anq
                                                              -> b_anr
                                                              -> c_ans " FQL.hs:110:38-41] (CTyEqCan)
Sneaky unification:
  Unifies: b_anr := [a_anv]
  Coercion: b_anr ~ [a_anv]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_anr := [a_anv]
setEvBind
  ev = cobox_azF
  tm  = CO <[a_anv]>_N
kickOutRewritable
  tv =  b_anr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
57[<C:0,F:0>] [W] cobox_azF :: b_anr
                               ~ [a_anv]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_azE :: [a_anv]
                                ~ c_ans [" a type equality [a_anv] -> [a_anv] -> [a_anv]
                                                           ~
                                                           a_anq
                                                           -> b_anr
                                                           -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_azE :: [a_anv]
                                 ~ c_ans [" a type equality [a_anv] -> [a_anv] -> [a_anv]
                                                            ~
                                                            a_anq
                                                            -> b_anr
                                                            -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_azE :: [a_anv] ~ c_ans [" a type equality [a_anv]
                                                      -> [a_anv] -> [a_anv]
                                                      ~
                                                      a_anq
                                                      -> b_anr
                                                      -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
canEvNC:eq
  [a_anv]
  c_ans
can_eq_nc
  [W] cobox_azE :: [a_anv] ~ c_ans
  [a_anv]
  [a_anv]
  c_ans
  c_ans
canEqTyVar
  c_ans
  [a_anv]
  Is-swapped
Following bound tyvar c_ans = [String]
newWantedEvVar/cache miss [W] cobox_azG :: [String] ~ [a_anv]
setEvBind
  ev = cobox_azE
  tm  = CO Sym cobox_azG
rewriteEqEvidence
  [W] cobox_azE :: [a_anv] ~ c_ans
  [String]
  [a_anv]
  Sym cobox_azG
canEqTyVar2
  c_ans
  [a_anv]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_azG :: [String] ~ [a_anv]
  [String]
  [String]
  [a_anv]
  [a_anv]
newWantedEvVar/cache miss [W] cobox_azH :: String ~ a_anv
setEvBind
  ev = cobox_azG
  tm  = CO [cobox_azH]_N
canEvNC:eq
  String
  a_anv
can_eq_nc
  [W] cobox_azH :: String ~ a_anv
  String
  String
  a_anv
  a_anv
can_eq_nc
  [W] cobox_azH :: String ~ a_anv
  [Char]
  String
  a_anv
  a_anv
canEqTyVar
  a_anv
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azI :: a_anv ~ String
setEvBind
  ev = cobox_azH
  tm  = CO Sym cobox_azI
rewriteEqEvidence
  [W] cobox_azH :: String ~ a_anv
  a_anv
  String
  Sym cobox_azI
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azI :: a_anv
                                 ~ String [" a type equality [a_anv] -> [a_anv] -> [a_anv]
                                                             ~
                                                             a_anq
                                                             -> b_anr
                                                             -> c_ans " FQL.hs:110:38-41] (CTyEqCan)
Sneaky unification:
  Unifies: a_anv := String
  Coercion: a_anv ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anv := String
setEvBind
  ev = cobox_azI
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_anv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
58[<C:0,F:0>] [W] cobox_azI :: a_anv ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_any :: [a_anx]
                                ~ [a_anq] [" a type equality [a_anx]
                                                             ~
                                                             [a_anq] " FQL.hs:110:44-76] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_any :: [a_anx]
                                 ~ [a_anq] [" a type equality [a_anx]
                                                              ~
                                                              [a_anq] " FQL.hs:110:44-76] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_any :: [a_anx] ~ [a_anq] [" a type equality [a_anx]
                                                        ~
                                                        [a_anq] " FQL.hs:110:44-76] (CNonCanonical)
canEvNC:eq
  [a_anx]
  [a_anq]
can_eq_nc
  [W] cobox_any :: [a_anx] ~ [a_anq]
  [a_anx]
  [a_anx]
  [a_anq]
  [a_anq]
newWantedEvVar/cache miss [W] cobox_azJ :: a_anx ~ a_anq
setEvBind
  ev = cobox_any
  tm  = CO [cobox_azJ]_N
canEvNC:eq
  a_anx
  a_anq
can_eq_nc
  [W] cobox_azJ :: a_anx ~ a_anq
  a_anx
  a_anx
  a_anq
  a_anq
canEqTyVar
  a_anx
  a_anq
  Not-swapped
Following bound tyvar a_anq = [a_anv]
Following bound tyvar a_anv = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azJ :: a_anx
                                 ~ [String] [" a type equality [a_anx]
                                                               ~
                                                               [a_anq] " FQL.hs:110:44-76] (CTyEqCan)
Sneaky unification:
  Unifies: a_anx := [String]
  Coercion: a_anx ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anx := [String]
setEvBind
  ev = cobox_azJ
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_anx
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
59[<C:0,F:0>] [W] cobox_azJ :: a_anx
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anz :: t_ana
                                ~ a_anx [" a type equality t_ana
                                                           ~
                                                           a_anx " FQL.hs:110:44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anz :: t_ana
                                 ~ a_anx [" a type equality t_ana
                                                            ~
                                                            a_anx " FQL.hs:110:44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anz :: t_ana ~ a_anx [" a type equality t_ana
                                                    ~
                                                    a_anx " FQL.hs:110:44] (CNonCanonical)
canEvNC:eq
  t_ana
  a_anx
can_eq_nc
  [W] cobox_anz :: t_ana ~ a_anx
  t_ana
  t_ana
  a_anx
  a_anx
canEqTyVar
  t_ana
  a_anx
  Not-swapped
Following bound tyvar t_ana = [String]
canEqTyVar2
  t_ana
  a_anx
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_anz :: [String] ~ a_anx
  [String]
  [String]
  a_anx
  a_anx
canEqTyVar
  a_anx
  [String]
  Is-swapped
Following bound tyvar a_anx = [String]
newWantedEvVar/cache miss [W] cobox_azK :: [String] ~ [String]
setEvBind
  ev = cobox_anz
  tm  = CO Sym cobox_azK
rewriteEqEvidence
  [W] cobox_anz :: [String] ~ a_anx
  [String]
  [String]
  Sym cobox_azK
canEqTyVar2
  a_anx
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_azK :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_azL :: String ~ String
setEvBind
  ev = cobox_azK
  tm  = CO [cobox_azL]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_azL :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_azL :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_azL :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_azM :: Char ~ Char
setEvBind
  ev = cobox_azL
  tm  = CO [cobox_azM]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_azM :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_azM
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anC :: [a_anB]
                                ~ [a_anx] [" a type equality [a_anB]
                                                             ~
                                                             [a_anx] " FQL.hs:110:47-75] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anC :: [a_anB]
                                 ~ [a_anx] [" a type equality [a_anB]
                                                              ~
                                                              [a_anx] " FQL.hs:110:47-75] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anC :: [a_anB] ~ [a_anx] [" a type equality [a_anB]
                                                        ~
                                                        [a_anx] " FQL.hs:110:47-75] (CNonCanonical)
canEvNC:eq
  [a_anB]
  [a_anx]
can_eq_nc
  [W] cobox_anC :: [a_anB] ~ [a_anx]
  [a_anB]
  [a_anB]
  [a_anx]
  [a_anx]
newWantedEvVar/cache miss [W] cobox_azN :: a_anB ~ a_anx
setEvBind
  ev = cobox_anC
  tm  = CO [cobox_azN]_N
canEvNC:eq
  a_anB
  a_anx
can_eq_nc
  [W] cobox_azN :: a_anB ~ a_anx
  a_anB
  a_anB
  a_anx
  a_anx
canEqTyVar
  a_anB
  a_anx
  Not-swapped
Following bound tyvar a_anx = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azN :: a_anB
                                 ~ [String] [" a type equality [a_anB]
                                                               ~
                                                               [a_anx] " FQL.hs:110:47-75] (CTyEqCan)
Sneaky unification:
  Unifies: a_anB := [String]
  Coercion: a_anB ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anB := [String]
setEvBind
  ev = cobox_azN
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_anB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
61[<C:0,F:0>] [W] cobox_azN :: a_anB
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anH :: [b_anG]
                                ~ [[a_anB]] [" a type equality [b_anG]
                                                               ~
                                                               [[a_anB]] " FQL.hs:110:55-74] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anH :: [b_anG]
                                 ~ [[a_anB]] [" a type equality [b_anG]
                                                                ~
                                                                [[a_anB]] " FQL.hs:110:55-74] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anH :: [b_anG] ~ [[a_anB]] [" a type equality [b_anG]
                                                          ~
                                                          [[a_anB]] " FQL.hs:110:55-74] (CNonCanonical)
canEvNC:eq
  [b_anG]
  [[a_anB]]
can_eq_nc
  [W] cobox_anH :: [b_anG] ~ [[a_anB]]
  [b_anG]
  [b_anG]
  [[a_anB]]
  [[a_anB]]
newWantedEvVar/cache miss [W] cobox_azO :: b_anG ~ [a_anB]
setEvBind
  ev = cobox_anH
  tm  = CO [cobox_azO]_N
canEvNC:eq
  b_anG
  [a_anB]
can_eq_nc
  [W] cobox_azO :: b_anG ~ [a_anB]
  b_anG
  b_anG
  [a_anB]
  [a_anB]
canEqTyVar
  b_anG
  [a_anB]
  Not-swapped
Following bound tyvar a_anB = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azO :: b_anG
                                 ~ [[String]] [" a type equality [b_anG]
                                                                 ~
                                                                 [[a_anB]] " FQL.hs:110:55-74] (CTyEqCan)
Sneaky unification:
  Unifies: b_anG := [[String]]
  Coercion: b_anG ~ [[String]]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_anG := [[String]]
setEvBind
  ev = cobox_azO
  tm  = CO <[[String]]>_N
kickOutRewritable
  tv =  b_anG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
62[<C:0,F:0>] [W] cobox_azO :: b_anG
                               ~ [[String]]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anK :: (a_anJ -> [a_anJ])
                                ~ (a_anF -> b_anG) [" a type equality a_anJ -> [a_anJ]
                                                                      ~
                                                                      a_anF
                                                                      -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anK :: (a_anJ -> [a_anJ])
                                 ~ (a_anF -> b_anG) [" a type equality a_anJ -> [a_anJ]
                                                                       ~
                                                                       a_anF
                                                                       -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anK :: (a_anJ -> [a_anJ])
                   ~ (a_anF -> b_anG) [" a type equality a_anJ -> [a_anJ]
                                                         ~
                                                         a_anF
                                                         -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
canEvNC:eq
  a_anJ -> [a_anJ]
  a_anF -> b_anG
can_eq_nc
  [W] cobox_anK :: (a_anJ -> [a_anJ]) ~ (a_anF -> b_anG)
  a_anJ -> [a_anJ]
  a_anJ -> [a_anJ]
  a_anF -> b_anG
  a_anF -> b_anG
newWantedEvVar/cache miss [W] cobox_azP :: a_anJ ~ a_anF
newWantedEvVar/cache miss [W] cobox_azQ :: [a_anJ] ~ b_anG
setEvBind
  ev = cobox_anK
  tm  = CO cobox_azP -> cobox_azQ
canEvNC:eq
  a_anJ
  a_anF
can_eq_nc
  [W] cobox_azP :: a_anJ ~ a_anF
  a_anJ
  a_anJ
  a_anF
  a_anF
canEqTyVar
  a_anJ
  a_anF
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azP :: a_anJ
                                 ~ a_anF [" a type equality a_anJ -> [a_anJ]
                                                            ~
                                                            a_anF
                                                            -> b_anG " FQL.hs:110:60-70] (CTyEqCan)
Sneaky unification:
  Unifies: a_anF := a_anJ
  Coercion: a_anF ~ a_anJ
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anF := a_anJ
setEvBind
  ev = cobox_azP
  tm  = CO <a_anJ>_N
kickOutRewritable
  tv =  a_anF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
63[<C:0,F:0>] [W] cobox_azP :: a_anJ ~ a_anF: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_azQ :: [a_anJ]
                                ~ b_anG [" a type equality a_anJ -> [a_anJ]
                                                           ~
                                                           a_anF
                                                           -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_azQ :: [a_anJ]
                                 ~ b_anG [" a type equality a_anJ -> [a_anJ]
                                                            ~
                                                            a_anF
                                                            -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_azQ :: [a_anJ] ~ b_anG [" a type equality a_anJ
                                                      -> [a_anJ]
                                                      ~
                                                      a_anF
                                                      -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
canEvNC:eq
  [a_anJ]
  b_anG
can_eq_nc
  [W] cobox_azQ :: [a_anJ] ~ b_anG
  [a_anJ]
  [a_anJ]
  b_anG
  b_anG
canEqTyVar
  b_anG
  [a_anJ]
  Is-swapped
Following bound tyvar b_anG = [[String]]
newWantedEvVar/cache miss [W] cobox_azR :: [[String]] ~ [a_anJ]
setEvBind
  ev = cobox_azQ
  tm  = CO Sym cobox_azR
rewriteEqEvidence
  [W] cobox_azQ :: [a_anJ] ~ b_anG
  [[String]]
  [a_anJ]
  Sym cobox_azR
canEqTyVar2
  b_anG
  [a_anJ]
  Is-swapped
  [[String]]
  <[[String]]>_N
can_eq_nc
  [W] cobox_azR :: [[String]] ~ [a_anJ]
  [[String]]
  [[String]]
  [a_anJ]
  [a_anJ]
newWantedEvVar/cache miss [W] cobox_azS :: [String] ~ a_anJ
setEvBind
  ev = cobox_azR
  tm  = CO [cobox_azS]_N
canEvNC:eq
  [String]
  a_anJ
can_eq_nc
  [W] cobox_azS :: [String] ~ a_anJ
  [String]
  [String]
  a_anJ
  a_anJ
canEqTyVar
  a_anJ
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_azT :: a_anJ ~ [String]
setEvBind
  ev = cobox_azS
  tm  = CO Sym cobox_azT
rewriteEqEvidence
  [W] cobox_azS :: [String] ~ a_anJ
  a_anJ
  [String]
  Sym cobox_azT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azT :: a_anJ
                                 ~ [String] [" a type equality a_anJ -> [a_anJ]
                                                               ~
                                                               a_anF
                                                               -> b_anG " FQL.hs:110:60-70] (CTyEqCan)
Sneaky unification:
  Unifies: a_anJ := [String]
  Coercion: a_anJ ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anJ := [String]
setEvBind
  ev = cobox_azT
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_anJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
64[<C:0,F:0>] [W] cobox_azT :: a_anJ
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anL :: t_ane ~ Int [" a type equality t_ane
                                                               ~
                                                               Int " FQL.hs:110:70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anL :: t_ane ~ Int [" a type equality t_ane
                                                                ~
                                                                Int " FQL.hs:110:70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anL :: t_ane ~ Int [" a type equality t_ane
                                                  ~
                                                  Int " FQL.hs:110:70] (CNonCanonical)
canEvNC:eq
  t_ane
  Int
can_eq_nc
  [W] cobox_anL :: t_ane ~ Int
  t_ane
  t_ane
  Int
  Int
canEqTyVar
  t_ane
  Int
  Not-swapped
Following bound tyvar t_ane = Int
canEqTyVar2
  t_ane
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_anL :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_anL
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anM :: [t_ana]
                                ~ [a_anF] [" a type equality [t_ana]
                                                             ~
                                                             [a_anF] " FQL.hs:110:73-74] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anM :: [t_ana]
                                 ~ [a_anF] [" a type equality [t_ana]
                                                              ~
                                                              [a_anF] " FQL.hs:110:73-74] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anM :: [t_ana] ~ [a_anF] [" a type equality [t_ana]
                                                        ~
                                                        [a_anF] " FQL.hs:110:73-74] (CNonCanonical)
canEvNC:eq
  [t_ana]
  [a_anF]
can_eq_nc
  [W] cobox_anM :: [t_ana] ~ [a_anF]
  [t_ana]
  [t_ana]
  [a_anF]
  [a_anF]
newWantedEvVar/cache miss [W] cobox_azU :: t_ana ~ a_anF
setEvBind
  ev = cobox_anM
  tm  = CO [cobox_azU]_N
canEvNC:eq
  t_ana
  a_anF
can_eq_nc
  [W] cobox_azU :: t_ana ~ a_anF
  t_ana
  t_ana
  a_anF
  a_anF
canEqTyVar
  t_ana
  a_anF
  Not-swapped
Following bound tyvar t_ana = [String]
canEqTyVar2
  t_ana
  a_anF
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_azU :: [String] ~ a_anF
  [String]
  [String]
  a_anF
  a_anF
canEqTyVar
  a_anF
  [String]
  Is-swapped
Following bound tyvar a_anF = a_anJ
newWantedEvVar/cache miss [W] cobox_azV :: a_anJ ~ [String]
setEvBind
  ev = cobox_azU
  tm  = CO Sym cobox_azV
rewriteEqEvidence
  [W] cobox_azU :: [String] ~ a_anF
  a_anJ
  [String]
  Sym cobox_azV
canEqTyVar2
  a_anF
  [String]
  Is-swapped
  a_anJ
  <a_anJ>_N
can_eq_nc
  [W] cobox_azV :: a_anJ ~ [String]
  a_anJ
  a_anJ
  [String]
  [String]
canEqTyVar
  a_anJ
  [String]
  Not-swapped
Following bound tyvar a_anJ = [String]
canEqTyVar2
  a_anJ
  [String]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_azV :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_azW :: String ~ String
setEvBind
  ev = cobox_azV
  tm  = CO [cobox_azW]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_azW :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_azW :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_azW :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_azX :: Char ~ Char
setEvBind
  ev = cobox_azW
  tm  = CO [cobox_azX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_azX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_azX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anO :: [a_anN]
                                ~ [b_anr] [" a type equality [a_anN]
                                                             ~
                                                             [b_anr] " FQL.hs:110:80-106] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anO :: [a_anN]
                                 ~ [b_anr] [" a type equality [a_anN]
                                                              ~
                                                              [b_anr] " FQL.hs:110:80-106] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anO :: [a_anN] ~ [b_anr] [" a type equality [a_anN]
                                                        ~
                                                        [b_anr] " FQL.hs:110:80-106] (CNonCanonical)
canEvNC:eq
  [a_anN]
  [b_anr]
can_eq_nc
  [W] cobox_anO :: [a_anN] ~ [b_anr]
  [a_anN]
  [a_anN]
  [b_anr]
  [b_anr]
newWantedEvVar/cache miss [W] cobox_azY :: a_anN ~ b_anr
setEvBind
  ev = cobox_anO
  tm  = CO [cobox_azY]_N
canEvNC:eq
  a_anN
  b_anr
can_eq_nc
  [W] cobox_azY :: a_anN ~ b_anr
  a_anN
  a_anN
  b_anr
  b_anr
canEqTyVar
  a_anN
  b_anr
  Not-swapped
Following bound tyvar b_anr = [a_anv]
Following bound tyvar a_anv = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_azY :: a_anN
                                 ~ [String] [" a type equality [a_anN]
                                                               ~
                                                               [b_anr] " FQL.hs:110:80-106] (CTyEqCan)
Sneaky unification:
  Unifies: a_anN := [String]
  Coercion: a_anN ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anN := [String]
setEvBind
  ev = cobox_azY
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_anN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
67[<C:0,F:0>] [W] cobox_azY :: a_anN
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anP :: t_anc
                                ~ a_anN [" a type equality t_anc
                                                           ~
                                                           a_anN " FQL.hs:110:80] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anP :: t_anc
                                 ~ a_anN [" a type equality t_anc
                                                            ~
                                                            a_anN " FQL.hs:110:80] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anP :: t_anc ~ a_anN [" a type equality t_anc
                                                    ~
                                                    a_anN " FQL.hs:110:80] (CNonCanonical)
canEvNC:eq
  t_anc
  a_anN
can_eq_nc
  [W] cobox_anP :: t_anc ~ a_anN
  t_anc
  t_anc
  a_anN
  a_anN
canEqTyVar
  t_anc
  a_anN
  Not-swapped
Following bound tyvar t_anc = [String]
canEqTyVar2
  t_anc
  a_anN
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_anP :: [String] ~ a_anN
  [String]
  [String]
  a_anN
  a_anN
canEqTyVar
  a_anN
  [String]
  Is-swapped
Following bound tyvar a_anN = [String]
newWantedEvVar/cache miss [W] cobox_azZ :: [String] ~ [String]
setEvBind
  ev = cobox_anP
  tm  = CO Sym cobox_azZ
rewriteEqEvidence
  [W] cobox_anP :: [String] ~ a_anN
  [String]
  [String]
  Sym cobox_azZ
canEqTyVar2
  a_anN
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_azZ :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aA0 :: String ~ String
setEvBind
  ev = cobox_azZ
  tm  = CO [cobox_aA0]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aA0 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aA0 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aA0 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aA1 :: Char ~ Char
setEvBind
  ev = cobox_aA0
  tm  = CO [cobox_aA1]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aA1 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aA1
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anR :: [a_anQ]
                                ~ [a_anN] [" a type equality [a_anQ]
                                                             ~
                                                             [a_anN] " FQL.hs:110:83-105] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anR :: [a_anQ]
                                 ~ [a_anN] [" a type equality [a_anQ]
                                                              ~
                                                              [a_anN] " FQL.hs:110:83-105] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anR :: [a_anQ] ~ [a_anN] [" a type equality [a_anQ]
                                                        ~
                                                        [a_anN] " FQL.hs:110:83-105] (CNonCanonical)
canEvNC:eq
  [a_anQ]
  [a_anN]
can_eq_nc
  [W] cobox_anR :: [a_anQ] ~ [a_anN]
  [a_anQ]
  [a_anQ]
  [a_anN]
  [a_anN]
newWantedEvVar/cache miss [W] cobox_aA2 :: a_anQ ~ a_anN
setEvBind
  ev = cobox_anR
  tm  = CO [cobox_aA2]_N
canEvNC:eq
  a_anQ
  a_anN
can_eq_nc
  [W] cobox_aA2 :: a_anQ ~ a_anN
  a_anQ
  a_anQ
  a_anN
  a_anN
canEqTyVar
  a_anQ
  a_anN
  Not-swapped
Following bound tyvar a_anN = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aA2 :: a_anQ
                                 ~ [String] [" a type equality [a_anQ]
                                                               ~
                                                               [a_anN] " FQL.hs:110:83-105] (CTyEqCan)
Sneaky unification:
  Unifies: a_anQ := [String]
  Coercion: a_anQ ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anQ := [String]
setEvBind
  ev = cobox_aA2
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_anQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
69[<C:0,F:0>] [W] cobox_aA2 :: a_anQ
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anT :: [a_anS]
                                ~ [[a_anQ]] [" a type equality [a_anS]
                                                               ~
                                                               [[a_anQ]] " FQL.hs:110:91-104] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anT :: [a_anS]
                                 ~ [[a_anQ]] [" a type equality [a_anS]
                                                                ~
                                                                [[a_anQ]] " FQL.hs:110:91-104] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anT :: [a_anS] ~ [[a_anQ]] [" a type equality [a_anS]
                                                          ~
                                                          [[a_anQ]] " FQL.hs:110:91-104] (CNonCanonical)
canEvNC:eq
  [a_anS]
  [[a_anQ]]
can_eq_nc
  [W] cobox_anT :: [a_anS] ~ [[a_anQ]]
  [a_anS]
  [a_anS]
  [[a_anQ]]
  [[a_anQ]]
newWantedEvVar/cache miss [W] cobox_aA3 :: a_anS ~ [a_anQ]
setEvBind
  ev = cobox_anT
  tm  = CO [cobox_aA3]_N
canEvNC:eq
  a_anS
  [a_anQ]
can_eq_nc
  [W] cobox_aA3 :: a_anS ~ [a_anQ]
  a_anS
  a_anS
  [a_anQ]
  [a_anQ]
canEqTyVar
  a_anS
  [a_anQ]
  Not-swapped
Following bound tyvar a_anQ = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aA3 :: a_anS
                                 ~ [[String]] [" a type equality [a_anS]
                                                                 ~
                                                                 [[a_anQ]] " FQL.hs:110:91-104] (CTyEqCan)
Sneaky unification:
  Unifies: a_anS := [[String]]
  Coercion: a_anS ~ [[String]]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anS := [[String]]
setEvBind
  ev = cobox_aA3
  tm  = CO <[[String]]>_N
kickOutRewritable
  tv =  a_anS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
70[<C:0,F:0>] [W] cobox_aA3 :: a_anS
                               ~ [[String]]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anU :: t_anj ~ Int [" a type equality t_anj
                                                               ~
                                                               Int " FQL.hs:110:101] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anU :: t_anj ~ Int [" a type equality t_anj
                                                                ~
                                                                Int " FQL.hs:110:101] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anU :: t_anj ~ Int [" a type equality t_anj
                                                  ~
                                                  Int " FQL.hs:110:101] (CNonCanonical)
canEvNC:eq
  t_anj
  Int
can_eq_nc
  [W] cobox_anU :: t_anj ~ Int
  t_anj
  t_anj
  Int
  Int
canEqTyVar
  t_anj
  Int
  Not-swapped
Following bound tyvar t_anj = Int
canEqTyVar2
  t_anj
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_anU :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_anU
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anV :: [t_anc]
                                ~ a_anS [" a type equality [t_anc]
                                                           ~
                                                           a_anS " FQL.hs:110:103-104] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anV :: [t_anc]
                                 ~ a_anS [" a type equality [t_anc]
                                                            ~
                                                            a_anS " FQL.hs:110:103-104] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anV :: [t_anc] ~ a_anS [" a type equality [t_anc]
                                                      ~
                                                      a_anS " FQL.hs:110:103-104] (CNonCanonical)
canEvNC:eq
  [t_anc]
  a_anS
can_eq_nc
  [W] cobox_anV :: [t_anc] ~ a_anS
  [t_anc]
  [t_anc]
  a_anS
  a_anS
canEqTyVar
  a_anS
  [t_anc]
  Is-swapped
Following bound tyvar a_anS = [[String]]
newWantedEvVar/cache miss [W] cobox_aA4 :: [[String]] ~ [t_anc]
setEvBind
  ev = cobox_anV
  tm  = CO Sym cobox_aA4
rewriteEqEvidence
  [W] cobox_anV :: [t_anc] ~ a_anS
  [[String]]
  [t_anc]
  Sym cobox_aA4
canEqTyVar2
  a_anS
  [t_anc]
  Is-swapped
  [[String]]
  <[[String]]>_N
can_eq_nc
  [W] cobox_aA4 :: [[String]] ~ [t_anc]
  [[String]]
  [[String]]
  [t_anc]
  [t_anc]
newWantedEvVar/cache miss [W] cobox_aA5 :: [String] ~ t_anc
setEvBind
  ev = cobox_aA4
  tm  = CO [cobox_aA5]_N
canEvNC:eq
  [String]
  t_anc
can_eq_nc
  [W] cobox_aA5 :: [String] ~ t_anc
  [String]
  [String]
  t_anc
  t_anc
canEqTyVar
  t_anc
  [String]
  Is-swapped
Following bound tyvar t_anc = [String]
newWantedEvVar/cache miss [W] cobox_aA6 :: [String] ~ [String]
setEvBind
  ev = cobox_aA5
  tm  = CO Sym cobox_aA6
rewriteEqEvidence
  [W] cobox_aA5 :: [String] ~ t_anc
  [String]
  [String]
  Sym cobox_aA6
canEqTyVar2
  t_anc
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aA6 :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aA7 :: String ~ String
setEvBind
  ev = cobox_aA6
  tm  = CO [cobox_aA7]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aA7 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aA7 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aA7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aA8 :: Char ~ Char
setEvBind
  ev = cobox_aA7
  tm  = CO [cobox_aA8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aA8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aA8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anZ :: t_alY
                                ~ (t_anX -> t_anY) [" a type equality t_alY
                                                                      ~
                                                                      t_anX
                                                                      -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anZ :: t_alY
                                 ~ (t_anX -> t_anY) [" a type equality t_alY
                                                                       ~
                                                                       t_anX
                                                                       -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anZ :: t_alY ~ (t_anX -> t_anY) [" a type equality t_alY
                                                               ~
                                                               t_anX
                                                               -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
canEvNC:eq
  t_alY
  t_anX -> t_anY
can_eq_nc
  [W] cobox_anZ :: t_alY ~ (t_anX -> t_anY)
  t_alY
  t_alY
  t_anX -> t_anY
  t_anX -> t_anY
canEqTyVar
  t_alY
  t_anX -> t_anY
  Not-swapped
Following bound tyvar t_alY = String -> Bool
canEqTyVar2
  t_alY
  t_anX -> t_anY
  Not-swapped
  String -> Bool
  <String -> Bool>_N
can_eq_nc
  [W] cobox_anZ :: (String -> Bool) ~ (t_anX -> t_anY)
  String -> Bool
  String -> Bool
  t_anX -> t_anY
  t_anX -> t_anY
newWantedEvVar/cache miss [W] cobox_aA9 :: String ~ t_anX
newWantedEvVar/cache miss [W] cobox_aAa :: Bool ~ t_anY
setEvBind
  ev = cobox_anZ
  tm  = CO cobox_aA9 -> cobox_aAa
canEvNC:eq
  String
  t_anX
can_eq_nc
  [W] cobox_aA9 :: String ~ t_anX
  String
  String
  t_anX
  t_anX
can_eq_nc
  [W] cobox_aA9 :: String ~ t_anX
  [Char]
  String
  t_anX
  t_anX
canEqTyVar
  t_anX
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aAb :: t_anX ~ String
setEvBind
  ev = cobox_aA9
  tm  = CO Sym cobox_aAb
rewriteEqEvidence
  [W] cobox_aA9 :: String ~ t_anX
  t_anX
  String
  Sym cobox_aAb
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAb :: t_anX
                                 ~ String [" a type equality t_alY
                                                             ~
                                                             t_anX
                                                             -> t_anY " FQL.hs:90:28-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_anX := String
  Coercion: t_anX ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anX := String
setEvBind
  ev = cobox_aAb
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_anX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
73[<C:0,F:0>] [W] cobox_aAb :: t_anX ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aAa :: Bool ~ t_anY [" a type equality t_alY
                                                                ~
                                                                t_anX
                                                                -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aAa :: Bool
                                 ~ t_anY [" a type equality t_alY
                                                            ~
                                                            t_anX
                                                            -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aAa :: Bool ~ t_anY [" a type equality t_alY
                                                   ~
                                                   t_anX -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
canEvNC:eq
  Bool
  t_anY
can_eq_nc
  [W] cobox_aAa :: Bool ~ t_anY
  Bool
  Bool
  t_anY
  t_anY
canEqTyVar
  t_anY
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aAc :: t_anY ~ Bool
setEvBind
  ev = cobox_aAa
  tm  = CO Sym cobox_aAc
rewriteEqEvidence
  [W] cobox_aAa :: Bool ~ t_anY
  t_anY
  Bool
  Sym cobox_aAc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAc :: t_anY
                                 ~ Bool [" a type equality t_alY
                                                           ~
                                                           t_anX
                                                           -> t_anY " FQL.hs:90:28-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_anY := Bool
  Coercion: t_anY ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anY := Bool
setEvBind
  ev = cobox_aAc
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_anY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
74[<C:0,F:0>] [W] cobox_aAc :: t_anY ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao0 :: t_anY
                                ~ t_am0 [" a type equality t_anY
                                                           ~
                                                           t_am0 " FQL.hs:90:28-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao0 :: t_anY
                                 ~ t_am0 [" a type equality t_anY
                                                            ~
                                                            t_am0 " FQL.hs:90:28-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao0 :: t_anY ~ t_am0 [" a type equality t_anY
                                                    ~
                                                    t_am0 " FQL.hs:90:28-48] (CNonCanonical)
canEvNC:eq
  t_anY
  t_am0
can_eq_nc
  [W] cobox_ao0 :: t_anY ~ t_am0
  t_anY
  t_anY
  t_am0
  t_am0
canEqTyVar
  t_anY
  t_am0
  Not-swapped
Following bound tyvar t_anY = Bool
canEqTyVar2
  t_anY
  t_am0
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_ao0 :: Bool ~ t_am0
  Bool
  Bool
  t_am0
  t_am0
canEqTyVar
  t_am0
  Bool
  Is-swapped
Following bound tyvar t_am0 = Bool
newWantedEvVar/cache miss [W] cobox_aAd :: Bool ~ Bool
setEvBind
  ev = cobox_ao0
  tm  = CO Sym cobox_aAd
rewriteEqEvidence
  [W] cobox_ao0 :: Bool ~ t_am0
  Bool
  Bool
  Sym cobox_aAd
canEqTyVar2
  t_am0
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aAd :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aAd
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao3 :: a_ao2
                                ~ t_anX [" a type equality a_ao2
                                                           ~
                                                           t_anX " FQL.hs:90:34-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao3 :: a_ao2
                                 ~ t_anX [" a type equality a_ao2
                                                            ~
                                                            t_anX " FQL.hs:90:34-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao3 :: a_ao2 ~ t_anX [" a type equality a_ao2
                                                    ~
                                                    t_anX " FQL.hs:90:34-47] (CNonCanonical)
canEvNC:eq
  a_ao2
  t_anX
can_eq_nc
  [W] cobox_ao3 :: a_ao2 ~ t_anX
  a_ao2
  a_ao2
  t_anX
  t_anX
canEqTyVar
  a_ao2
  t_anX
  Not-swapped
Following bound tyvar t_anX = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ao3 :: a_ao2
                                 ~ String [" a type equality a_ao2
                                                             ~
                                                             t_anX " FQL.hs:90:34-47] (CTyEqCan)
Sneaky unification:
  Unifies: a_ao2 := String
  Coercion: a_ao2 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ao2 := String
setEvBind
  ev = cobox_ao3
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_ao2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
76[<C:0,F:0>] [W] cobox_ao3 :: a_ao2 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao4 :: t_alZ
                                ~ [a_ao2] [" a type equality t_alZ
                                                             ~
                                                             [a_ao2] " FQL.hs:90:34-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao4 :: t_alZ
                                 ~ [a_ao2] [" a type equality t_alZ
                                                              ~
                                                              [a_ao2] " FQL.hs:90:34-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao4 :: t_alZ ~ [a_ao2] [" a type equality t_alZ
                                                      ~
                                                      [a_ao2] " FQL.hs:90:34-37] (CNonCanonical)
canEvNC:eq
  t_alZ
  [a_ao2]
can_eq_nc
  [W] cobox_ao4 :: t_alZ ~ [a_ao2]
  t_alZ
  t_alZ
  [a_ao2]
  [a_ao2]
canEqTyVar
  t_alZ
  [a_ao2]
  Not-swapped
Following bound tyvar t_alZ = [String]
canEqTyVar2
  t_alZ
  [a_ao2]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_ao4 :: [String] ~ [a_ao2]
  [String]
  [String]
  [a_ao2]
  [a_ao2]
newWantedEvVar/cache miss [W] cobox_aAe :: String ~ a_ao2
setEvBind
  ev = cobox_ao4
  tm  = CO [cobox_aAe]_N
canEvNC:eq
  String
  a_ao2
can_eq_nc
  [W] cobox_aAe :: String ~ a_ao2
  String
  String
  a_ao2
  a_ao2
can_eq_nc
  [W] cobox_aAe :: String ~ a_ao2
  [Char]
  String
  a_ao2
  a_ao2
canEqTyVar
  a_ao2
  [Char]
  Is-swapped
Following bound tyvar a_ao2 = String
newWantedEvVar/cache miss [W] cobox_aAf :: String ~ String
setEvBind
  ev = cobox_aAe
  tm  = CO Sym cobox_aAf
rewriteEqEvidence
  [W] cobox_aAe :: String ~ a_ao2
  String
  String
  Sym cobox_aAf
canEqTyVar2
  a_ao2
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aAf :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aAf :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aAg :: Char ~ Char
setEvBind
  ev = cobox_aAf
  tm  = CO [cobox_aAg]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aAg :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aAg
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao5 :: t_alX ~ Int [" a type equality t_alX
                                                               ~
                                                               Int " FQL.hs:90:42-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao5 :: t_alX ~ Int [" a type equality t_alX
                                                                ~
                                                                Int " FQL.hs:90:42-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao5 :: t_alX ~ Int [" a type equality t_alX
                                                  ~
                                                  Int " FQL.hs:90:42-47] (CNonCanonical)
canEvNC:eq
  t_alX
  Int
can_eq_nc
  [W] cobox_ao5 :: t_alX ~ Int
  t_alX
  t_alX
  Int
  Int
canEqTyVar
  t_alX
  Int
  Not-swapped
Following bound tyvar t_alX = Int
canEqTyVar2
  t_alX
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_ao5 :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_ao5
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao9 :: [a_ao8]
                                ~ t_am8 [" a type equality [a_ao8]
                                                           ~
                                                           t_am8 " FQL.hs:86:32-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao9 :: [a_ao8]
                                 ~ t_am8 [" a type equality [a_ao8]
                                                            ~
                                                            t_am8 " FQL.hs:86:32-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao9 :: [a_ao8] ~ t_am8 [" a type equality [a_ao8]
                                                      ~
                                                      t_am8 " FQL.hs:86:32-65] (CNonCanonical)
canEvNC:eq
  [a_ao8]
  t_am8
can_eq_nc
  [W] cobox_ao9 :: [a_ao8] ~ t_am8
  [a_ao8]
  [a_ao8]
  t_am8
  t_am8
canEqTyVar
  t_am8
  [a_ao8]
  Is-swapped
Following bound tyvar t_am8 = Table
newWantedEvVar/cache miss [W] cobox_aAh :: Table ~ [a_ao8]
setEvBind
  ev = cobox_ao9
  tm  = CO Sym cobox_aAh
rewriteEqEvidence
  [W] cobox_ao9 :: [a_ao8] ~ t_am8
  Table
  [a_ao8]
  Sym cobox_aAh
canEqTyVar2
  t_am8
  [a_ao8]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aAh :: Table ~ [a_ao8]
  Table
  Table
  [a_ao8]
  [a_ao8]
can_eq_nc
  [W] cobox_aAh :: Table ~ [a_ao8]
  [[String]]
  Table
  [a_ao8]
  [a_ao8]
newWantedEvVar/cache miss [W] cobox_aAi :: [String] ~ a_ao8
setEvBind
  ev = cobox_aAh
  tm  = CO [cobox_aAi]_N
canEvNC:eq
  [String]
  a_ao8
can_eq_nc
  [W] cobox_aAi :: [String] ~ a_ao8
  [String]
  [String]
  a_ao8
  a_ao8
canEqTyVar
  a_ao8
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aAj :: a_ao8 ~ [String]
setEvBind
  ev = cobox_aAi
  tm  = CO Sym cobox_aAj
rewriteEqEvidence
  [W] cobox_aAi :: [String] ~ a_ao8
  a_ao8
  [String]
  Sym cobox_aAj
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAj :: a_ao8
                                 ~ [String] [" a type equality [a_ao8]
                                                               ~
                                                               t_am8 " FQL.hs:86:32-65] (CTyEqCan)
Sneaky unification:
  Unifies: a_ao8 := [String]
  Coercion: a_ao8 ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ao8 := [String]
setEvBind
  ev = cobox_aAj
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_ao8
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
79[<C:0,F:0>] [W] cobox_aAj :: a_ao8
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoa :: (t_alZ -> t_am0)
                                ~ (a_ao8 -> Bool) [" a type equality t_alZ -> t_am0
                                                                     ~
                                                                     a_ao8
                                                                     -> Bool " FQL.hs:86:40-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoa :: (t_alZ -> t_am0)
                                 ~ (a_ao8 -> Bool) [" a type equality t_alZ -> t_am0
                                                                      ~
                                                                      a_ao8
                                                                      -> Bool " FQL.hs:86:40-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoa :: (t_alZ -> t_am0)
                   ~ (a_ao8 -> Bool) [" a type equality t_alZ -> t_am0
                                                        ~
                                                        a_ao8
                                                        -> Bool " FQL.hs:86:40-58] (CNonCanonical)
canEvNC:eq
  t_alZ -> t_am0
  a_ao8 -> Bool
can_eq_nc
  [W] cobox_aoa :: (t_alZ -> t_am0) ~ (a_ao8 -> Bool)
  t_alZ -> t_am0
  t_alZ -> t_am0
  a_ao8 -> Bool
  a_ao8 -> Bool
newWantedEvVar/cache miss [W] cobox_aAk :: t_alZ ~ a_ao8
newWantedEvVar/cache miss [W] cobox_aAl :: t_am0 ~ Bool
setEvBind
  ev = cobox_aoa
  tm  = CO cobox_aAk -> cobox_aAl
canEvNC:eq
  t_alZ
  a_ao8
can_eq_nc
  [W] cobox_aAk :: t_alZ ~ a_ao8
  t_alZ
  t_alZ
  a_ao8
  a_ao8
canEqTyVar
  t_alZ
  a_ao8
  Not-swapped
Following bound tyvar t_alZ = [String]
canEqTyVar2
  t_alZ
  a_ao8
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aAk :: [String] ~ a_ao8
  [String]
  [String]
  a_ao8
  a_ao8
canEqTyVar
  a_ao8
  [String]
  Is-swapped
Following bound tyvar a_ao8 = [String]
newWantedEvVar/cache miss [W] cobox_aAm :: [String] ~ [String]
setEvBind
  ev = cobox_aAk
  tm  = CO Sym cobox_aAm
rewriteEqEvidence
  [W] cobox_aAk :: [String] ~ a_ao8
  [String]
  [String]
  Sym cobox_aAm
canEqTyVar2
  a_ao8
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aAm :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aAn :: String ~ String
setEvBind
  ev = cobox_aAm
  tm  = CO [cobox_aAn]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aAn :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aAn :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aAn :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aAo :: Char ~ Char
setEvBind
  ev = cobox_aAn
  tm  = CO [cobox_aAo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aAo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aAo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aAl :: t_am0 ~ Bool [" a type equality t_alZ
                                                                -> t_am0
                                                                ~
                                                                a_ao8
                                                                -> Bool " FQL.hs:86:40-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aAl :: t_am0
                                 ~ Bool [" a type equality t_alZ -> t_am0
                                                           ~
                                                           a_ao8
                                                           -> Bool " FQL.hs:86:40-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aAl :: t_am0 ~ Bool [" a type equality t_alZ -> t_am0
                                                   ~
                                                   a_ao8 -> Bool " FQL.hs:86:40-58] (CNonCanonical)
canEvNC:eq
  t_am0
  Bool
can_eq_nc
  [W] cobox_aAl :: t_am0 ~ Bool
  t_am0
  t_am0
  Bool
  Bool
canEqTyVar
  t_am0
  Bool
  Not-swapped
Following bound tyvar t_am0 = Bool
canEqTyVar2
  t_am0
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aAl :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aAl
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aob :: t_am5
                                ~ t_alX [" a type equality t_am5
                                                           ~
                                                           t_alX " FQL.hs:86:48-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aob :: t_am5
                                 ~ t_alX [" a type equality t_am5
                                                            ~
                                                            t_alX " FQL.hs:86:48-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aob :: t_am5 ~ t_alX [" a type equality t_am5
                                                    ~
                                                    t_alX " FQL.hs:86:48-53] (CNonCanonical)
canEvNC:eq
  t_am5
  t_alX
can_eq_nc
  [W] cobox_aob :: t_am5 ~ t_alX
  t_am5
  t_am5
  t_alX
  t_alX
canEqTyVar
  t_am5
  t_alX
  Not-swapped
Following bound tyvar t_am5 = Int
canEqTyVar2
  t_am5
  t_alX
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aob :: Int ~ t_alX
  Int
  Int
  t_alX
  t_alX
canEqTyVar
  t_alX
  Int
  Is-swapped
Following bound tyvar t_alX = Int
newWantedEvVar/cache miss [W] cobox_aAp :: Int ~ Int
setEvBind
  ev = cobox_aob
  tm  = CO Sym cobox_aAp
rewriteEqEvidence
  [W] cobox_aob :: Int ~ t_alX
  Int
  Int
  Sym cobox_aAp
canEqTyVar2
  t_alX
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aAp :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aAp
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoc :: t_am6
                                ~ t_alY [" a type equality t_am6
                                                           ~
                                                           t_alY " FQL.hs:86:55-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoc :: t_am6
                                 ~ t_alY [" a type equality t_am6
                                                            ~
                                                            t_alY " FQL.hs:86:55-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoc :: t_am6 ~ t_alY [" a type equality t_am6
                                                    ~
                                                    t_alY " FQL.hs:86:55-58] (CNonCanonical)
canEvNC:eq
  t_am6
  t_alY
can_eq_nc
  [W] cobox_aoc :: t_am6 ~ t_alY
  t_am6
  t_am6
  t_alY
  t_alY
canEqTyVar
  t_am6
  t_alY
  Not-swapped
Following bound tyvar t_am6 = String -> Bool
canEqTyVar2
  t_am6
  t_alY
  Not-swapped
  String -> Bool
  <String -> Bool>_N
can_eq_nc
  [W] cobox_aoc :: (String -> Bool) ~ t_alY
  String -> Bool
  String -> Bool
  t_alY
  t_alY
canEqTyVar
  t_alY
  String -> Bool
  Is-swapped
Following bound tyvar t_alY = String -> Bool
newWantedEvVar/cache miss
  [W] cobox_aAq :: (String -> Bool) ~ (String -> Bool)
setEvBind
  ev = cobox_aoc
  tm  = CO Sym cobox_aAq
rewriteEqEvidence
  [W] cobox_aoc :: (String -> Bool) ~ t_alY
  String -> Bool
  String -> Bool
  Sym cobox_aAq
canEqTyVar2
  t_alY
  String -> Bool
  Is-swapped
  String -> Bool
  <String -> Bool>_N
can_eq_nc
  [W] cobox_aAq :: (String -> Bool) ~ (String -> Bool)
  String -> Bool
  String -> Bool
  String -> Bool
  String -> Bool
newWantedEvVar/cache miss [W] cobox_aAr :: String ~ String
newWantedEvVar/cache miss [W] cobox_aAs :: Bool ~ Bool
setEvBind
  ev = cobox_aAq
  tm  = CO cobox_aAr -> cobox_aAs
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aAr :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aAr :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aAr :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aAt :: Char ~ Char
setEvBind
  ev = cobox_aAr
  tm  = CO [cobox_aAt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aAt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aAt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aAs :: Bool ~ Bool [" a type equality t_am6
                                                               ~
                                                               t_alY " FQL.hs:86:55-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aAs :: Bool ~ Bool [" a type equality t_am6
                                                                ~
                                                                t_alY " FQL.hs:86:55-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aAs :: Bool ~ Bool [" a type equality t_am6
                                                  ~
                                                  t_alY " FQL.hs:86:55-58] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aAs :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aAs
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aod :: t_am7
                                ~ [a_ao8] [" a type equality t_am7
                                                             ~
                                                             [a_ao8] " FQL.hs:86:61-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aod :: t_am7
                                 ~ [a_ao8] [" a type equality t_am7
                                                              ~
                                                              [a_ao8] " FQL.hs:86:61-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aod :: t_am7 ~ [a_ao8] [" a type equality t_am7
                                                      ~
                                                      [a_ao8] " FQL.hs:86:61-65] (CNonCanonical)
canEvNC:eq
  t_am7
  [a_ao8]
can_eq_nc
  [W] cobox_aod :: t_am7 ~ [a_ao8]
  t_am7
  t_am7
  [a_ao8]
  [a_ao8]
canEqTyVar
  t_am7
  [a_ao8]
  Not-swapped
Following bound tyvar t_am7 = Table
canEqTyVar2
  t_am7
  [a_ao8]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aod :: Table ~ [a_ao8]
  Table
  Table
  [a_ao8]
  [a_ao8]
can_eq_nc
  [W] cobox_aod :: Table ~ [a_ao8]
  [[String]]
  Table
  [a_ao8]
  [a_ao8]
newWantedEvVar/cache miss [W] cobox_aAu :: [String] ~ a_ao8
setEvBind
  ev = cobox_aod
  tm  = CO [cobox_aAu]_N
canEvNC:eq
  [String]
  a_ao8
can_eq_nc
  [W] cobox_aAu :: [String] ~ a_ao8
  [String]
  [String]
  a_ao8
  a_ao8
canEqTyVar
  a_ao8
  [String]
  Is-swapped
Following bound tyvar a_ao8 = [String]
newWantedEvVar/cache miss [W] cobox_aAv :: [String] ~ [String]
setEvBind
  ev = cobox_aAu
  tm  = CO Sym cobox_aAv
rewriteEqEvidence
  [W] cobox_aAu :: [String] ~ a_ao8
  [String]
  [String]
  Sym cobox_aAv
canEqTyVar2
  a_ao8
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aAv :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aAw :: String ~ String
setEvBind
  ev = cobox_aAv
  tm  = CO [cobox_aAw]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aAw :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aAw :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aAw :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aAx :: Char ~ Char
setEvBind
  ev = cobox_aAw
  tm  = CO [cobox_aAx]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aAx :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aAx
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoj :: t_aof
                                ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                               ~
                                                                               t_aog
                                                                               -> t_aoh
                                                                               -> t_aoi " FQL.hs:56:27-76] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoj :: t_aof
                                 ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                                ~
                                                                                t_aog
                                                                                -> t_aoh
                                                                                -> t_aoi " FQL.hs:56:27-76] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoj :: t_aof
                   ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                  ~
                                                                  t_aog
                                                                  -> t_aoh
                                                                  -> t_aoi " FQL.hs:56:27-76] (CNonCanonical)
canEvNC:eq
  t_aof
  t_aog -> t_aoh -> t_aoi
can_eq_nc
  [W] cobox_aoj :: t_aof ~ (t_aog -> t_aoh -> t_aoi)
  t_aof
  t_aof
  t_aog -> t_aoh -> t_aoi
  t_aog -> t_aoh -> t_aoi
canEqTyVar
  t_aof
  t_aog -> t_aoh -> t_aoi
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aoj :: t_aof
                                 ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                                ~
                                                                                t_aog
                                                                                -> t_aoh
                                                                                -> t_aoi " FQL.hs:56:27-76] (CTyEqCan)
Sneaky unification:
  Unifies: t_aof := t_aog -> t_aoh -> t_aoi
  Coercion: t_aof ~ (t_aog -> t_aoh -> t_aoi)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aof := t_aog -> t_aoh -> t_aoi
setEvBind
  ev = cobox_aoj
  tm  = CO <t_aog -> t_aoh -> t_aoi>_N
kickOutRewritable
  tv =  t_aof
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
86[<C:0,F:0>] [W] cobox_aoj :: t_aof
                               ~ (t_aog -> t_aoh -> t_aoi): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aol :: [a_aok]
                                ~ t_aoi [" a type equality [a_aok]
                                                           ~
                                                           t_aoi " FQL.hs:56:42-76] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aol :: [a_aok]
                                 ~ t_aoi [" a type equality [a_aok]
                                                            ~
                                                            t_aoi " FQL.hs:56:42-76] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aol :: [a_aok] ~ t_aoi [" a type equality [a_aok]
                                                      ~
                                                      t_aoi " FQL.hs:56:42-76] (CNonCanonical)
canEvNC:eq
  [a_aok]
  t_aoi
can_eq_nc
  [W] cobox_aol :: [a_aok] ~ t_aoi
  [a_aok]
  [a_aok]
  t_aoi
  t_aoi
canEqTyVar
  t_aoi
  [a_aok]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aAy :: t_aoi ~ [a_aok]
setEvBind
  ev = cobox_aol
  tm  = CO Sym cobox_aAy
rewriteEqEvidence
  [W] cobox_aol :: [a_aok] ~ t_aoi
  t_aoi
  [a_aok]
  Sym cobox_aAy
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAy :: t_aoi
                                 ~ [a_aok] [" a type equality [a_aok]
                                                              ~
                                                              t_aoi " FQL.hs:56:42-76] (CTyEqCan)
Sneaky unification:
  Unifies: t_aoi := [a_aok]
  Coercion: t_aoi ~ [a_aok]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aoi := [a_aok]
setEvBind
  ev = cobox_aAy
  tm  = CO <[a_aok]>_N
kickOutRewritable
  tv =  t_aoi
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
87[<C:0,F:0>] [W] cobox_aAy :: t_aoi
                               ~ [a_aok]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aom :: [Char]
                                ~ [a_aok] [" a type equality [Char]
                                                             ~
                                                             [a_aok] " FQL.hs:56:42-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aom :: [Char]
                                 ~ [a_aok] [" a type equality [Char]
                                                              ~
                                                              [a_aok] " FQL.hs:56:42-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aom :: [Char] ~ [a_aok] [" a type equality [Char]
                                                       ~
                                                       [a_aok] " FQL.hs:56:42-44] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aok]
can_eq_nc
  [W] cobox_aom :: [Char] ~ [a_aok]
  [Char]
  [Char]
  [a_aok]
  [a_aok]
newWantedEvVar/cache miss [W] cobox_aAz :: Char ~ a_aok
setEvBind
  ev = cobox_aom
  tm  = CO [cobox_aAz]_N
canEvNC:eq
  Char
  a_aok
can_eq_nc
  [W] cobox_aAz :: Char ~ a_aok
  Char
  Char
  a_aok
  a_aok
canEqTyVar
  a_aok
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aAA :: a_aok ~ Char
setEvBind
  ev = cobox_aAz
  tm  = CO Sym cobox_aAA
rewriteEqEvidence
  [W] cobox_aAz :: Char ~ a_aok
  a_aok
  Char
  Sym cobox_aAA
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAA :: a_aok
                                 ~ Char [" a type equality [Char]
                                                           ~
                                                           [a_aok] " FQL.hs:56:42-44] (CTyEqCan)
Sneaky unification:
  Unifies: a_aok := Char
  Coercion: a_aok ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aok := Char
setEvBind
  ev = cobox_aAA
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aok
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
88[<C:0,F:0>] [W] cobox_aAA :: a_aok ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aop :: [a_aoo]
                                ~ [a_aok] [" a type equality [a_aoo]
                                                             ~
                                                             [a_aok] " FQL.hs:56:49-76] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aop :: [a_aoo]
                                 ~ [a_aok] [" a type equality [a_aoo]
                                                              ~
                                                              [a_aok] " FQL.hs:56:49-76] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aop :: [a_aoo] ~ [a_aok] [" a type equality [a_aoo]
                                                        ~
                                                        [a_aok] " FQL.hs:56:49-76] (CNonCanonical)
canEvNC:eq
  [a_aoo]
  [a_aok]
can_eq_nc
  [W] cobox_aop :: [a_aoo] ~ [a_aok]
  [a_aoo]
  [a_aoo]
  [a_aok]
  [a_aok]
newWantedEvVar/cache miss [W] cobox_aAB :: a_aoo ~ a_aok
setEvBind
  ev = cobox_aop
  tm  = CO [cobox_aAB]_N
canEvNC:eq
  a_aoo
  a_aok
can_eq_nc
  [W] cobox_aAB :: a_aoo ~ a_aok
  a_aoo
  a_aoo
  a_aok
  a_aok
canEqTyVar
  a_aoo
  a_aok
  Not-swapped
Following bound tyvar a_aok = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAB :: a_aoo
                                 ~ Char [" a type equality [a_aoo]
                                                           ~
                                                           [a_aok] " FQL.hs:56:49-76] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoo := Char
  Coercion: a_aoo ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoo := Char
setEvBind
  ev = cobox_aAB
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aoo
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
89[<C:0,F:0>] [W] cobox_aAB :: a_aoo ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                               ~
                                                               Int " FQL.hs:56:54-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                                ~
                                                                Int " FQL.hs:56:54-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                  ~
                                                  Int " FQL.hs:56:54-56] (CNonCanonical)
canEvNC:eq
  t_aog
  Int
can_eq_nc
  [W] cobox_aoq :: t_aog ~ Int
  t_aog
  t_aog
  Int
  Int
canEqTyVar
  t_aog
  Int
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                                ~
                                                                Int " FQL.hs:56:54-56] (CTyEqCan)
Sneaky unification:
  Unifies: t_aog := Int
  Coercion: t_aog ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aog := Int
setEvBind
  ev = cobox_aoq
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aog
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
90[<C:0,F:0>] [W] cobox_aoq :: t_aog ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aos :: [a_aor]
                                ~ [a_aoo] [" a type equality [a_aor]
                                                             ~
                                                             [a_aoo] " FQL.hs:56:59-75] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aos :: [a_aor]
                                 ~ [a_aoo] [" a type equality [a_aor]
                                                              ~
                                                              [a_aoo] " FQL.hs:56:59-75] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aos :: [a_aor] ~ [a_aoo] [" a type equality [a_aor]
                                                        ~
                                                        [a_aoo] " FQL.hs:56:59-75] (CNonCanonical)
canEvNC:eq
  [a_aor]
  [a_aoo]
can_eq_nc
  [W] cobox_aos :: [a_aor] ~ [a_aoo]
  [a_aor]
  [a_aor]
  [a_aoo]
  [a_aoo]
newWantedEvVar/cache miss [W] cobox_aAC :: a_aor ~ a_aoo
setEvBind
  ev = cobox_aos
  tm  = CO [cobox_aAC]_N
canEvNC:eq
  a_aor
  a_aoo
can_eq_nc
  [W] cobox_aAC :: a_aor ~ a_aoo
  a_aor
  a_aor
  a_aoo
  a_aoo
canEqTyVar
  a_aor
  a_aoo
  Not-swapped
Following bound tyvar a_aoo = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAC :: a_aor
                                 ~ Char [" a type equality [a_aor]
                                                           ~
                                                           [a_aoo] " FQL.hs:56:59-75] (CTyEqCan)
Sneaky unification:
  Unifies: a_aor := Char
  Coercion: a_aor ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aor := Char
setEvBind
  ev = cobox_aAC
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aor
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
91[<C:0,F:0>] [W] cobox_aAC :: a_aor ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aot :: t_aoh
                                ~ [a_aor] [" a type equality t_aoh
                                                             ~
                                                             [a_aor] " FQL.hs:56:59-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aot :: t_aoh
                                 ~ [a_aor] [" a type equality t_aoh
                                                              ~
                                                              [a_aor] " FQL.hs:56:59-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aot :: t_aoh ~ [a_aor] [" a type equality t_aoh
                                                      ~
                                                      [a_aor] " FQL.hs:56:59-61] (CNonCanonical)
canEvNC:eq
  t_aoh
  [a_aor]
can_eq_nc
  [W] cobox_aot :: t_aoh ~ [a_aor]
  t_aoh
  t_aoh
  [a_aor]
  [a_aor]
canEqTyVar
  t_aoh
  [a_aor]
  Not-swapped
Following bound tyvar a_aor = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aot :: t_aoh
                                 ~ [Char] [" a type equality t_aoh
                                                             ~
                                                             [a_aor] " FQL.hs:56:59-61] (CTyEqCan)
Sneaky unification:
  Unifies: t_aoh := [Char]
  Coercion: t_aoh ~ [Char]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aoh := [Char]
setEvBind
  ev = cobox_aot
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  t_aoh
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
92[<C:0,F:0>] [W] cobox_aot :: t_aoh ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aow :: [a_aov]
                                ~ [a_aor] [" a type equality [a_aov]
                                                             ~
                                                             [a_aor] " FQL.hs:56:66-75] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aow :: [a_aov]
                                 ~ [a_aor] [" a type equality [a_aov]
                                                              ~
                                                              [a_aor] " FQL.hs:56:66-75] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aow :: [a_aov] ~ [a_aor] [" a type equality [a_aov]
                                                        ~
                                                        [a_aor] " FQL.hs:56:66-75] (CNonCanonical)
canEvNC:eq
  [a_aov]
  [a_aor]
can_eq_nc
  [W] cobox_aow :: [a_aov] ~ [a_aor]
  [a_aov]
  [a_aov]
  [a_aor]
  [a_aor]
newWantedEvVar/cache miss [W] cobox_aAD :: a_aov ~ a_aor
setEvBind
  ev = cobox_aow
  tm  = CO [cobox_aAD]_N
canEvNC:eq
  a_aov
  a_aor
can_eq_nc
  [W] cobox_aAD :: a_aov ~ a_aor
  a_aov
  a_aov
  a_aor
  a_aor
canEqTyVar
  a_aov
  a_aor
  Not-swapped
Following bound tyvar a_aor = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAD :: a_aov
                                 ~ Char [" a type equality [a_aov]
                                                           ~
                                                           [a_aor] " FQL.hs:56:66-75] (CTyEqCan)
Sneaky unification:
  Unifies: a_aov := Char
  Coercion: a_aov ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aov := Char
setEvBind
  ev = cobox_aAD
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aov
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
93[<C:0,F:0>] [W] cobox_aAD :: a_aov ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aox :: Char ~ a_aov [" a type equality Char
                                                                ~
                                                                a_aov " FQL.hs:56:73-75] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aox :: Char ~ a_aov [" a type equality Char
                                                                 ~
                                                                 a_aov " FQL.hs:56:73-75] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aox :: Char ~ a_aov [" a type equality Char
                                                   ~
                                                   a_aov " FQL.hs:56:73-75] (CNonCanonical)
canEvNC:eq
  Char
  a_aov
can_eq_nc
  [W] cobox_aox :: Char ~ a_aov
  Char
  Char
  a_aov
  a_aov
canEqTyVar
  a_aov
  Char
  Is-swapped
Following bound tyvar a_aov = Char
newWantedEvVar/cache miss [W] cobox_aAE :: Char ~ Char
setEvBind
  ev = cobox_aox
  tm  = CO Sym cobox_aAE
rewriteEqEvidence
  [W] cobox_aox :: Char ~ a_aov
  Char
  Char
  Sym cobox_aAE
canEqTyVar2
  a_aov
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aAE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aAE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoz :: [a_aoy]
                                ~ t_amF [" a type equality [a_aoy]
                                                           ~
                                                           t_amF " FQL.hs:54:21-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoz :: [a_aoy]
                                 ~ t_amF [" a type equality [a_aoy]
                                                            ~
                                                            t_amF " FQL.hs:54:21-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoz :: [a_aoy] ~ t_amF [" a type equality [a_aoy]
                                                      ~
                                                      t_amF " FQL.hs:54:21-55] (CNonCanonical)
canEvNC:eq
  [a_aoy]
  t_amF
can_eq_nc
  [W] cobox_aoz :: [a_aoy] ~ t_amF
  [a_aoy]
  [a_aoy]
  t_amF
  t_amF
canEqTyVar
  t_amF
  [a_aoy]
  Is-swapped
Following bound tyvar t_amF = String
newWantedEvVar/cache miss [W] cobox_aAF :: String ~ [a_aoy]
setEvBind
  ev = cobox_aoz
  tm  = CO Sym cobox_aAF
rewriteEqEvidence
  [W] cobox_aoz :: [a_aoy] ~ t_amF
  String
  [a_aoy]
  Sym cobox_aAF
canEqTyVar2
  t_amF
  [a_aoy]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aAF :: String ~ [a_aoy]
  String
  String
  [a_aoy]
  [a_aoy]
can_eq_nc
  [W] cobox_aAF :: String ~ [a_aoy]
  [Char]
  String
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_aAG :: Char ~ a_aoy
setEvBind
  ev = cobox_aAF
  tm  = CO [cobox_aAG]_N
canEvNC:eq
  Char
  a_aoy
can_eq_nc
  [W] cobox_aAG :: Char ~ a_aoy
  Char
  Char
  a_aoy
  a_aoy
canEqTyVar
  a_aoy
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aAH :: a_aoy ~ Char
setEvBind
  ev = cobox_aAG
  tm  = CO Sym cobox_aAH
rewriteEqEvidence
  [W] cobox_aAG :: Char ~ a_aoy
  a_aoy
  Char
  Sym cobox_aAH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAH :: a_aoy
                                 ~ Char [" a type equality [a_aoy]
                                                           ~
                                                           t_amF " FQL.hs:54:21-55] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoy := Char
  Coercion: a_aoy ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoy := Char
setEvBind
  ev = cobox_aAH
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aoy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
95[<C:0,F:0>] [W] cobox_aAH :: a_aoy ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoB :: [a_aoA]
                                ~ [a_aoy] [" a type equality [a_aoA]
                                                             ~
                                                             [a_aoy] " FQL.hs:54:21-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoB :: [a_aoA]
                                 ~ [a_aoy] [" a type equality [a_aoA]
                                                              ~
                                                              [a_aoy] " FQL.hs:54:21-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoB :: [a_aoA] ~ [a_aoy] [" a type equality [a_aoA]
                                                        ~
                                                        [a_aoy] " FQL.hs:54:21-48] (CNonCanonical)
canEvNC:eq
  [a_aoA]
  [a_aoy]
can_eq_nc
  [W] cobox_aoB :: [a_aoA] ~ [a_aoy]
  [a_aoA]
  [a_aoA]
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_aAI :: a_aoA ~ a_aoy
setEvBind
  ev = cobox_aoB
  tm  = CO [cobox_aAI]_N
canEvNC:eq
  a_aoA
  a_aoy
can_eq_nc
  [W] cobox_aAI :: a_aoA ~ a_aoy
  a_aoA
  a_aoA
  a_aoy
  a_aoy
canEqTyVar
  a_aoA
  a_aoy
  Not-swapped
Following bound tyvar a_aoy = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAI :: a_aoA
                                 ~ Char [" a type equality [a_aoA]
                                                           ~
                                                           [a_aoy] " FQL.hs:54:21-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoA := Char
  Coercion: a_aoA ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoA := Char
setEvBind
  ev = cobox_aAI
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aoA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
96[<C:0,F:0>] [W] cobox_aAI :: a_aoA ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoF :: [c_aoE]
                                ~ [[a_aoA]] [" a type equality [c_aoE]
                                                               ~
                                                               [[a_aoA]] " FQL.hs:54:29-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoF :: [c_aoE]
                                 ~ [[a_aoA]] [" a type equality [c_aoE]
                                                                ~
                                                                [[a_aoA]] " FQL.hs:54:29-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoF :: [c_aoE] ~ [[a_aoA]] [" a type equality [c_aoE]
                                                          ~
                                                          [[a_aoA]] " FQL.hs:54:29-47] (CNonCanonical)
canEvNC:eq
  [c_aoE]
  [[a_aoA]]
can_eq_nc
  [W] cobox_aoF :: [c_aoE] ~ [[a_aoA]]
  [c_aoE]
  [c_aoE]
  [[a_aoA]]
  [[a_aoA]]
newWantedEvVar/cache miss [W] cobox_aAJ :: c_aoE ~ [a_aoA]
setEvBind
  ev = cobox_aoF
  tm  = CO [cobox_aAJ]_N
canEvNC:eq
  c_aoE
  [a_aoA]
can_eq_nc
  [W] cobox_aAJ :: c_aoE ~ [a_aoA]
  c_aoE
  c_aoE
  [a_aoA]
  [a_aoA]
canEqTyVar
  c_aoE
  [a_aoA]
  Not-swapped
Following bound tyvar a_aoA = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAJ :: c_aoE
                                 ~ [Char] [" a type equality [c_aoE]
                                                             ~
                                                             [[a_aoA]] " FQL.hs:54:29-47] (CTyEqCan)
Sneaky unification:
  Unifies: c_aoE := [Char]
  Coercion: c_aoE ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind c_aoE := [Char]
setEvBind
  ev = cobox_aAJ
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  c_aoE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
97[<C:0,F:0>] [W] cobox_aAJ :: c_aoE ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoG :: t_aof
                                ~ (a_aoC -> b_aoD -> c_aoE) [" a type equality t_aof
                                                                               ~
                                                                               a_aoC
                                                                               -> b_aoD
                                                                               -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoG :: t_aof
                                 ~ (a_aoC -> b_aoD -> c_aoE) [" a type equality t_aof
                                                                                ~
                                                                                a_aoC
                                                                                -> b_aoD
                                                                                -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoG :: t_aof
                   ~ (a_aoC -> b_aoD -> c_aoE) [" a type equality t_aof
                                                                  ~
                                                                  a_aoC
                                                                  -> b_aoD
                                                                  -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
canEvNC:eq
  t_aof
  a_aoC -> b_aoD -> c_aoE
can_eq_nc
  [W] cobox_aoG :: t_aof ~ (a_aoC -> b_aoD -> c_aoE)
  t_aof
  t_aof
  a_aoC -> b_aoD -> c_aoE
  a_aoC -> b_aoD -> c_aoE
canEqTyVar
  t_aof
  a_aoC -> b_aoD -> c_aoE
  Not-swapped
Following bound tyvar t_aof = t_aog -> t_aoh -> t_aoi
canEqTyVar2
  t_aof
  a_aoC -> b_aoD -> c_aoE
  Not-swapped
  t_aog -> t_aoh -> t_aoi
  <t_aog -> t_aoh -> t_aoi>_N
can_eq_nc
  [W] cobox_aoG :: (t_aog -> t_aoh -> t_aoi)
                   ~ (a_aoC -> b_aoD -> c_aoE)
  t_aog -> t_aoh -> t_aoi
  t_aog -> t_aoh -> t_aoi
  a_aoC -> b_aoD -> c_aoE
  a_aoC -> b_aoD -> c_aoE
newWantedEvVar/cache miss [W] cobox_aAK :: t_aog ~ a_aoC
newWantedEvVar/cache miss
  [W] cobox_aAL :: (t_aoh -> t_aoi) ~ (b_aoD -> c_aoE)
setEvBind
  ev = cobox_aoG
  tm  = CO cobox_aAK -> cobox_aAL
canEvNC:eq
  t_aog
  a_aoC
can_eq_nc
  [W] cobox_aAK :: t_aog ~ a_aoC
  t_aog
  t_aog
  a_aoC
  a_aoC
canEqTyVar
  t_aog
  a_aoC
  Not-swapped
Following bound tyvar t_aog = Int
canEqTyVar2
  t_aog
  a_aoC
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aAK :: Int ~ a_aoC
  Int
  Int
  a_aoC
  a_aoC
canEqTyVar
  a_aoC
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aAM :: a_aoC ~ Int
setEvBind
  ev = cobox_aAK
  tm  = CO Sym cobox_aAM
rewriteEqEvidence
  [W] cobox_aAK :: Int ~ a_aoC
  a_aoC
  Int
  Sym cobox_aAM
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAM :: a_aoC ~ Int [" a type equality t_aof
                                                                ~
                                                                a_aoC
                                                                -> b_aoD
                                                                -> c_aoE " FQL.hs:54:37-40] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoC := Int
  Coercion: a_aoC ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoC := Int
setEvBind
  ev = cobox_aAM
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aoC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
98[<C:0,F:0>] [W] cobox_aAM :: a_aoC ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aAL :: (t_aoh -> t_aoi)
                                ~ (b_aoD -> c_aoE) [" a type equality t_aof
                                                                      ~
                                                                      a_aoC
                                                                      -> b_aoD
                                                                      -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aAL :: (t_aoh -> t_aoi)
                                 ~ (b_aoD -> c_aoE) [" a type equality t_aof
                                                                       ~
                                                                       a_aoC
                                                                       -> b_aoD
                                                                       -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aAL :: (t_aoh -> t_aoi)
                   ~ (b_aoD -> c_aoE) [" a type equality t_aof
                                                         ~
                                                         a_aoC
                                                         -> b_aoD
                                                         -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
canEvNC:eq
  t_aoh -> t_aoi
  b_aoD -> c_aoE
can_eq_nc
  [W] cobox_aAL :: (t_aoh -> t_aoi) ~ (b_aoD -> c_aoE)
  t_aoh -> t_aoi
  t_aoh -> t_aoi
  b_aoD -> c_aoE
  b_aoD -> c_aoE
newWantedEvVar/cache miss [W] cobox_aAN :: t_aoh ~ b_aoD
newWantedEvVar/cache miss [W] cobox_aAO :: t_aoi ~ c_aoE
setEvBind
  ev = cobox_aAL
  tm  = CO cobox_aAN -> cobox_aAO
canEvNC:eq
  t_aoh
  b_aoD
can_eq_nc
  [W] cobox_aAN :: t_aoh ~ b_aoD
  t_aoh
  t_aoh
  b_aoD
  b_aoD
canEqTyVar
  t_aoh
  b_aoD
  Not-swapped
Following bound tyvar t_aoh = [Char]
canEqTyVar2
  t_aoh
  b_aoD
  Not-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aAN :: [Char] ~ b_aoD
  [Char]
  [Char]
  b_aoD
  b_aoD
canEqTyVar
  b_aoD
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aAP :: b_aoD ~ [Char]
setEvBind
  ev = cobox_aAN
  tm  = CO Sym cobox_aAP
rewriteEqEvidence
  [W] cobox_aAN :: [Char] ~ b_aoD
  b_aoD
  [Char]
  Sym cobox_aAP
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aAP :: b_aoD
                                 ~ [Char] [" a type equality t_aof
                                                             ~
                                                             a_aoC
                                                             -> b_aoD
                                                             -> c_aoE " FQL.hs:54:37-40] (CTyEqCan)
Sneaky unification:
  Unifies: b_aoD := [Char]
  Coercion: b_aoD ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aoD := [Char]
setEvBind
  ev = cobox_aAP
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  b_aoD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
99[<C:0,F:0>] [W] cobox_aAP :: b_aoD ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aAO :: t_aoi
                                ~ c_aoE [" a type equality t_aof
                                                           ~
                                                           a_aoC
                                                           -> b_aoD
                                                           -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aAO :: t_aoi
                                 ~ c_aoE [" a type equality t_aof
                                                            ~
                                                            a_aoC
                                                            -> b_aoD
                                                            -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aAO :: t_aoi ~ c_aoE [" a type equality t_aof
                                                    ~
                                                    a_aoC
                                                    -> b_aoD
                                                    -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
canEvNC:eq
  t_aoi
  c_aoE
can_eq_nc
  [W] cobox_aAO :: t_aoi ~ c_aoE
  t_aoi
  t_aoi
  c_aoE
  c_aoE
canEqTyVar
  t_aoi
  c_aoE
  Not-swapped
Following bound tyvar t_aoi = [a_aok]
canEqTyVar2
  t_aoi
  c_aoE
  Not-swapped
  [a_aok]
  <[a_aok]>_N
can_eq_nc
  [W] cobox_aAO :: [a_aok] ~ c_aoE
  [a_aok]
  [a_aok]
  c_aoE
  c_aoE
canEqTyVar
  c_aoE
  [a_aok]
  Is-swapped
Following bound tyvar c_aoE = [Char]
newWantedEvVar/cache miss [W] cobox_aAQ :: [Char] ~ [a_aok]
setEvBind
  ev = cobox_aAO
  tm  = CO Sym cobox_aAQ
rewriteEqEvidence
  [W] cobox_aAO :: [a_aok] ~ c_aoE
  [Char]
  [a_aok]
  Sym cobox_aAQ
canEqTyVar2
  c_aoE
  [a_aok]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aAQ :: [Char] ~ [a_aok]
  [Char]
  [Char]
  [a_aok]
  [a_aok]
newWantedEvVar/cache miss [W] cobox_aAR :: Char ~ a_aok
setEvBind
  ev = cobox_aAQ
  tm  = CO [cobox_aAR]_N
canEvNC:eq
  Char
  a_aok
can_eq_nc
  [W] cobox_aAR :: Char ~ a_aok
  Char
  Char
  a_aok
  a_aok
canEqTyVar
  a_aok
  Char
  Is-swapped
Following bound tyvar a_aok = Char
newWantedEvVar/cache miss [W] cobox_aAS :: Char ~ Char
setEvBind
  ev = cobox_aAR
  tm  = CO Sym cobox_aAS
rewriteEqEvidence
  [W] cobox_aAR :: Char ~ a_aok
  Char
  Char
  Sym cobox_aAS
canEqTyVar2
  a_aok
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aAS :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aAS
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoH :: t_amD
                                ~ [a_aoC] [" a type equality t_amD
                                                             ~
                                                             [a_aoC] " FQL.hs:54:42-43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoH :: t_amD
                                 ~ [a_aoC] [" a type equality t_amD
                                                              ~
                                                              [a_aoC] " FQL.hs:54:42-43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoH :: t_amD ~ [a_aoC] [" a type equality t_amD
                                                      ~
                                                      [a_aoC] " FQL.hs:54:42-43] (CNonCanonical)
canEvNC:eq
  t_amD
  [a_aoC]
can_eq_nc
  [W] cobox_aoH :: t_amD ~ [a_aoC]
  t_amD
  t_amD
  [a_aoC]
  [a_aoC]
canEqTyVar
  t_amD
  [a_aoC]
  Not-swapped
Following bound tyvar t_amD = [Int]
canEqTyVar2
  t_amD
  [a_aoC]
  Not-swapped
  [Int]
  <[Int]>_N
can_eq_nc
  [W] cobox_aoH :: [Int] ~ [a_aoC]
  [Int]
  [Int]
  [a_aoC]
  [a_aoC]
newWantedEvVar/cache miss [W] cobox_aAT :: Int ~ a_aoC
setEvBind
  ev = cobox_aoH
  tm  = CO [cobox_aAT]_N
canEvNC:eq
  Int
  a_aoC
can_eq_nc
  [W] cobox_aAT :: Int ~ a_aoC
  Int
  Int
  a_aoC
  a_aoC
canEqTyVar
  a_aoC
  Int
  Is-swapped
Following bound tyvar a_aoC = Int
newWantedEvVar/cache miss [W] cobox_aAU :: Int ~ Int
setEvBind
  ev = cobox_aAT
  tm  = CO Sym cobox_aAU
rewriteEqEvidence
  [W] cobox_aAT :: Int ~ a_aoC
  Int
  Int
  Sym cobox_aAU
canEqTyVar2
  a_aoC
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aAU :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aAU
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoI :: t_amE
                                ~ [b_aoD] [" a type equality t_amE
                                                             ~
                                                             [b_aoD] " FQL.hs:54:45-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoI :: t_amE
                                 ~ [b_aoD] [" a type equality t_amE
                                                              ~
                                                              [b_aoD] " FQL.hs:54:45-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoI :: t_amE ~ [b_aoD] [" a type equality t_amE
                                                      ~
                                                      [b_aoD] " FQL.hs:54:45-47] (CNonCanonical)
canEvNC:eq
  t_amE
  [b_aoD]
can_eq_nc
  [W] cobox_aoI :: t_amE ~ [b_aoD]
  t_amE
  t_amE
  [b_aoD]
  [b_aoD]
canEqTyVar
  t_amE
  [b_aoD]
  Not-swapped
Following bound tyvar t_amE = [String]
canEqTyVar2
  t_amE
  [b_aoD]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aoI :: [String] ~ [b_aoD]
  [String]
  [String]
  [b_aoD]
  [b_aoD]
newWantedEvVar/cache miss [W] cobox_aAV :: String ~ b_aoD
setEvBind
  ev = cobox_aoI
  tm  = CO [cobox_aAV]_N
canEvNC:eq
  String
  b_aoD
can_eq_nc
  [W] cobox_aAV :: String ~ b_aoD
  String
  String
  b_aoD
  b_aoD
can_eq_nc
  [W] cobox_aAV :: String ~ b_aoD
  [Char]
  String
  b_aoD
  b_aoD
canEqTyVar
  b_aoD
  [Char]
  Is-swapped
Following bound tyvar b_aoD = [Char]
newWantedEvVar/cache miss [W] cobox_aAW :: [Char] ~ String
setEvBind
  ev = cobox_aAV
  tm  = CO Sym cobox_aAW
rewriteEqEvidence
  [W] cobox_aAV :: String ~ b_aoD
  [Char]
  String
  Sym cobox_aAW
canEqTyVar2
  b_aoD
  [Char]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aAW :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aAX :: Char ~ Char
setEvBind
  ev = cobox_aAW
  tm  = CO [cobox_aAX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aAX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aAX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoJ :: [Char]
                                ~ [a_aoy] [" a type equality [Char]
                                                             ~
                                                             [a_aoy] " FQL.hs:54:53-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoJ :: [Char]
                                 ~ [a_aoy] [" a type equality [Char]
                                                              ~
                                                              [a_aoy] " FQL.hs:54:53-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoJ :: [Char] ~ [a_aoy] [" a type equality [Char]
                                                       ~
                                                       [a_aoy] " FQL.hs:54:53-55] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aoy]
can_eq_nc
  [W] cobox_aoJ :: [Char] ~ [a_aoy]
  [Char]
  [Char]
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_aAY :: Char ~ a_aoy
setEvBind
  ev = cobox_aoJ
  tm  = CO [cobox_aAY]_N
canEvNC:eq
  Char
  a_aoy
can_eq_nc
  [W] cobox_aAY :: Char ~ a_aoy
  Char
  Char
  a_aoy
  a_aoy
canEqTyVar
  a_aoy
  Char
  Is-swapped
Following bound tyvar a_aoy = Char
newWantedEvVar/cache miss [W] cobox_aAZ :: Char ~ Char
setEvBind
  ev = cobox_aAY
  tm  = CO Sym cobox_aAZ
rewriteEqEvidence
  [W] cobox_aAY :: Char ~ a_aoy
  Char
  Char
  Sym cobox_aAZ
canEqTyVar2
  a_aoy
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aAZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aAZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoN :: [b_aoM]
                                ~ t_amO [" a type equality [b_aoM]
                                                           ~
                                                           t_amO " FQL.hs:45:22-63] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoN :: [b_aoM]
                                 ~ t_amO [" a type equality [b_aoM]
                                                            ~
                                                            t_amO " FQL.hs:45:22-63] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoN :: [b_aoM] ~ t_amO [" a type equality [b_aoM]
                                                      ~
                                                      t_amO " FQL.hs:45:22-63] (CNonCanonical)
canEvNC:eq
  [b_aoM]
  t_amO
can_eq_nc
  [W] cobox_aoN :: [b_aoM] ~ t_amO
  [b_aoM]
  [b_aoM]
  t_amO
  t_amO
canEqTyVar
  t_amO
  [b_aoM]
  Is-swapped
Following bound tyvar t_amO = [Int]
newWantedEvVar/cache miss [W] cobox_aB0 :: [Int] ~ [b_aoM]
setEvBind
  ev = cobox_aoN
  tm  = CO Sym cobox_aB0
rewriteEqEvidence
  [W] cobox_aoN :: [b_aoM] ~ t_amO
  [Int]
  [b_aoM]
  Sym cobox_aB0
canEqTyVar2
  t_amO
  [b_aoM]
  Is-swapped
  [Int]
  <[Int]>_N
can_eq_nc
  [W] cobox_aB0 :: [Int] ~ [b_aoM]
  [Int]
  [Int]
  [b_aoM]
  [b_aoM]
newWantedEvVar/cache miss [W] cobox_aB1 :: Int ~ b_aoM
setEvBind
  ev = cobox_aB0
  tm  = CO [cobox_aB1]_N
canEvNC:eq
  Int
  b_aoM
can_eq_nc
  [W] cobox_aB1 :: Int ~ b_aoM
  Int
  Int
  b_aoM
  b_aoM
canEqTyVar
  b_aoM
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aB2 :: b_aoM ~ Int
setEvBind
  ev = cobox_aB1
  tm  = CO Sym cobox_aB2
rewriteEqEvidence
  [W] cobox_aB1 :: Int ~ b_aoM
  b_aoM
  Int
  Sym cobox_aB2
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aB2 :: b_aoM
                                 ~ Int [" a type equality [b_aoM]
                                                          ~
                                                          t_amO " FQL.hs:45:22-63] (CTyEqCan)
Sneaky unification:
  Unifies: b_aoM := Int
  Coercion: b_aoM ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aoM := Int
setEvBind
  ev = cobox_aB2
  tm  = CO <Int>_N
kickOutRewritable
  tv =  b_aoM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
104[<C:0,F:0>] [W] cobox_aB2 :: b_aoM ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoU :: (a_aoT -> c_aoS)
                                ~ (a_aoL -> b_aoM) [" a type equality a_aoT -> c_aoS
                                                                      ~
                                                                      a_aoL
                                                                      -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoU :: (a_aoT -> c_aoS)
                                 ~ (a_aoL -> b_aoM) [" a type equality a_aoT -> c_aoS
                                                                       ~
                                                                       a_aoL
                                                                       -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoU :: (a_aoT -> c_aoS)
                   ~ (a_aoL -> b_aoM) [" a type equality a_aoT -> c_aoS
                                                         ~
                                                         a_aoL
                                                         -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
canEvNC:eq
  a_aoT -> c_aoS
  a_aoL -> b_aoM
can_eq_nc
  [W] cobox_aoU :: (a_aoT -> c_aoS) ~ (a_aoL -> b_aoM)
  a_aoT -> c_aoS
  a_aoT -> c_aoS
  a_aoL -> b_aoM
  a_aoL -> b_aoM
newWantedEvVar/cache miss [W] cobox_aB3 :: a_aoT ~ a_aoL
newWantedEvVar/cache miss [W] cobox_aB4 :: c_aoS ~ b_aoM
setEvBind
  ev = cobox_aoU
  tm  = CO cobox_aB3 -> cobox_aB4
canEvNC:eq
  a_aoT
  a_aoL
can_eq_nc
  [W] cobox_aB3 :: a_aoT ~ a_aoL
  a_aoT
  a_aoT
  a_aoL
  a_aoL
canEqTyVar
  a_aoT
  a_aoL
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aB3 :: a_aoT
                                 ~ a_aoL [" a type equality a_aoT -> c_aoS
                                                            ~
                                                            a_aoL
                                                            -> b_aoM " FQL.hs:45:27-44] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoL := a_aoT
  Coercion: a_aoL ~ a_aoT
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoL := a_aoT
setEvBind
  ev = cobox_aB3
  tm  = CO <a_aoT>_N
kickOutRewritable
  tv =  a_aoL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
105[<C:0,F:0>] [W] cobox_aB3 :: a_aoT ~ a_aoL: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aB4 :: c_aoS
                                ~ b_aoM [" a type equality a_aoT -> c_aoS
                                                           ~
                                                           a_aoL
                                                           -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aB4 :: c_aoS
                                 ~ b_aoM [" a type equality a_aoT -> c_aoS
                                                            ~
                                                            a_aoL
                                                            -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aB4 :: c_aoS ~ b_aoM [" a type equality a_aoT -> c_aoS
                                                    ~
                                                    a_aoL
                                                    -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
canEvNC:eq
  c_aoS
  b_aoM
can_eq_nc
  [W] cobox_aB4 :: c_aoS ~ b_aoM
  c_aoS
  c_aoS
  b_aoM
  b_aoM
canEqTyVar
  c_aoS
  b_aoM
  Not-swapped
Following bound tyvar b_aoM = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aB4 :: c_aoS ~ Int [" a type equality a_aoT
                                                                -> c_aoS
                                                                ~
                                                                a_aoL
                                                                -> b_aoM " FQL.hs:45:27-44] (CTyEqCan)
Sneaky unification:
  Unifies: c_aoS := Int
  Coercion: c_aoS ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind c_aoS := Int
setEvBind
  ev = cobox_aB4
  tm  = CO <Int>_N
kickOutRewritable
  tv =  c_aoS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
106[<C:0,F:0>] [W] cobox_aB4 :: c_aoS ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as0 :: ([a_arY] -> a_arY)
                                ~ (b_aoR -> c_aoS) [" a type equality [a_arY] -> a_arY
                                                                      ~
                                                                      b_aoR
                                                                      -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as0 :: ([a_arY] -> a_arY)
                                 ~ (b_aoR -> c_aoS) [" a type equality [a_arY] -> a_arY
                                                                       ~
                                                                       b_aoR
                                                                       -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as0 :: ([a_arY] -> a_arY)
                   ~ (b_aoR -> c_aoS) [" a type equality [a_arY] -> a_arY
                                                         ~
                                                         b_aoR
                                                         -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
canEvNC:eq
  [a_arY] -> a_arY
  b_aoR -> c_aoS
can_eq_nc
  [W] cobox_as0 :: ([a_arY] -> a_arY) ~ (b_aoR -> c_aoS)
  [a_arY] -> a_arY
  [a_arY] -> a_arY
  b_aoR -> c_aoS
  b_aoR -> c_aoS
newWantedEvVar/cache miss [W] cobox_aB5 :: [a_arY] ~ b_aoR
newWantedEvVar/cache miss [W] cobox_aB6 :: a_arY ~ c_aoS
setEvBind
  ev = cobox_as0
  tm  = CO cobox_aB5 -> cobox_aB6
canEvNC:eq
  [a_arY]
  b_aoR
can_eq_nc
  [W] cobox_aB5 :: [a_arY] ~ b_aoR
  [a_arY]
  [a_arY]
  b_aoR
  b_aoR
canEqTyVar
  b_aoR
  [a_arY]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aB7 :: b_aoR ~ [a_arY]
setEvBind
  ev = cobox_aB5
  tm  = CO Sym cobox_aB7
rewriteEqEvidence
  [W] cobox_aB5 :: [a_arY] ~ b_aoR
  b_aoR
  [a_arY]
  Sym cobox_aB7
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aB7 :: b_aoR
                                 ~ [a_arY] [" a type equality [a_arY] -> a_arY
                                                              ~
                                                              b_aoR
                                                              -> c_aoS " FQL.hs:45:27-33] (CTyEqCan)
Sneaky unification:
  Unifies: b_aoR := [a_arY]
  Coercion: b_aoR ~ [a_arY]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aoR := [a_arY]
setEvBind
  ev = cobox_aB7
  tm  = CO <[a_arY]>_N
kickOutRewritable
  tv =  b_aoR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
107[<C:0,F:0>] [W] cobox_aB7 :: b_aoR
                                ~ [a_arY]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aB6 :: a_arY
                                ~ c_aoS [" a type equality [a_arY] -> a_arY
                                                           ~
                                                           b_aoR
                                                           -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aB6 :: a_arY
                                 ~ c_aoS [" a type equality [a_arY] -> a_arY
                                                            ~
                                                            b_aoR
                                                            -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aB6 :: a_arY ~ c_aoS [" a type equality [a_arY] -> a_arY
                                                    ~
                                                    b_aoR
                                                    -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
canEvNC:eq
  a_arY
  c_aoS
can_eq_nc
  [W] cobox_aB6 :: a_arY ~ c_aoS
  a_arY
  a_arY
  c_aoS
  c_aoS
canEqTyVar
  a_arY
  c_aoS
  Not-swapped
Following bound tyvar c_aoS = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aB6 :: a_arY
                                 ~ Int [" a type equality [a_arY] -> a_arY
                                                          ~
                                                          b_aoR
                                                          -> c_aoS " FQL.hs:45:27-33] (CTyEqCan)
Sneaky unification:
  Unifies: a_arY := Int
  Coercion: a_arY ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_arY := Int
setEvBind
  ev = cobox_aB6
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_arY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
108[<C:0,F:0>] [W] cobox_aB6 :: a_arY ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as3 :: ([a_as1] -> [b_as2])
                                ~ (a_aoT -> b_aoR) [" a type equality [a_as1] -> [b_as2]
                                                                      ~
                                                                      a_aoT
                                                                      -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as3 :: ([a_as1] -> [b_as2])
                                 ~ (a_aoT -> b_aoR) [" a type equality [a_as1] -> [b_as2]
                                                                       ~
                                                                       a_aoT
                                                                       -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as3 :: ([a_as1] -> [b_as2])
                   ~ (a_aoT -> b_aoR) [" a type equality [a_as1] -> [b_as2]
                                                         ~
                                                         a_aoT
                                                         -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
canEvNC:eq
  [a_as1] -> [b_as2]
  a_aoT -> b_aoR
can_eq_nc
  [W] cobox_as3 :: ([a_as1] -> [b_as2]) ~ (a_aoT -> b_aoR)
  [a_as1] -> [b_as2]
  [a_as1] -> [b_as2]
  a_aoT -> b_aoR
  a_aoT -> b_aoR
newWantedEvVar/cache miss [W] cobox_aB8 :: [a_as1] ~ a_aoT
newWantedEvVar/cache miss [W] cobox_aB9 :: [b_as2] ~ b_aoR
setEvBind
  ev = cobox_as3
  tm  = CO cobox_aB8 -> cobox_aB9
canEvNC:eq
  [a_as1]
  a_aoT
can_eq_nc
  [W] cobox_aB8 :: [a_as1] ~ a_aoT
  [a_as1]
  [a_as1]
  a_aoT
  a_aoT
canEqTyVar
  a_aoT
  [a_as1]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBa :: a_aoT ~ [a_as1]
setEvBind
  ev = cobox_aB8
  tm  = CO Sym cobox_aBa
rewriteEqEvidence
  [W] cobox_aB8 :: [a_as1] ~ a_aoT
  a_aoT
  [a_as1]
  Sym cobox_aBa
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBa :: a_aoT
                                 ~ [a_as1] [" a type equality [a_as1] -> [b_as2]
                                                              ~
                                                              a_aoT
                                                              -> b_aoR " FQL.hs:45:35-44] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoT := [a_as1]
  Coercion: a_aoT ~ [a_as1]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoT := [a_as1]
setEvBind
  ev = cobox_aBa
  tm  = CO <[a_as1]>_N
kickOutRewritable
  tv =  a_aoT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
109[<C:0,F:0>] [W] cobox_aBa :: a_aoT
                                ~ [a_as1]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aB9 :: [b_as2]
                                ~ b_aoR [" a type equality [a_as1] -> [b_as2]
                                                           ~
                                                           a_aoT
                                                           -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aB9 :: [b_as2]
                                 ~ b_aoR [" a type equality [a_as1] -> [b_as2]
                                                            ~
                                                            a_aoT
                                                            -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aB9 :: [b_as2] ~ b_aoR [" a type equality [a_as1]
                                                      -> [b_as2]
                                                      ~
                                                      a_aoT
                                                      -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
canEvNC:eq
  [b_as2]
  b_aoR
can_eq_nc
  [W] cobox_aB9 :: [b_as2] ~ b_aoR
  [b_as2]
  [b_as2]
  b_aoR
  b_aoR
canEqTyVar
  b_aoR
  [b_as2]
  Is-swapped
Following bound tyvar b_aoR = [a_arY]
newWantedEvVar/cache miss [W] cobox_aBb :: [a_arY] ~ [b_as2]
setEvBind
  ev = cobox_aB9
  tm  = CO Sym cobox_aBb
rewriteEqEvidence
  [W] cobox_aB9 :: [b_as2] ~ b_aoR
  [a_arY]
  [b_as2]
  Sym cobox_aBb
canEqTyVar2
  b_aoR
  [b_as2]
  Is-swapped
  [a_arY]
  <[a_arY]>_N
can_eq_nc
  [W] cobox_aBb :: [a_arY] ~ [b_as2]
  [a_arY]
  [a_arY]
  [b_as2]
  [b_as2]
newWantedEvVar/cache miss [W] cobox_aBc :: a_arY ~ b_as2
setEvBind
  ev = cobox_aBb
  tm  = CO [cobox_aBc]_N
canEvNC:eq
  a_arY
  b_as2
can_eq_nc
  [W] cobox_aBc :: a_arY ~ b_as2
  a_arY
  a_arY
  b_as2
  b_as2
canEqTyVar
  a_arY
  b_as2
  Not-swapped
Following bound tyvar a_arY = Int
canEqTyVar2
  a_arY
  b_as2
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aBc :: Int ~ b_as2
  Int
  Int
  b_as2
  b_as2
canEqTyVar
  b_as2
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBd :: b_as2 ~ Int
setEvBind
  ev = cobox_aBc
  tm  = CO Sym cobox_aBd
rewriteEqEvidence
  [W] cobox_aBc :: Int ~ b_as2
  b_as2
  Int
  Sym cobox_aBd
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBd :: b_as2
                                 ~ Int [" a type equality [a_as1] -> [b_as2]
                                                          ~
                                                          a_aoT
                                                          -> b_aoR " FQL.hs:45:35-44] (CTyEqCan)
Sneaky unification:
  Unifies: b_as2 := Int
  Coercion: b_as2 ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_as2 := Int
setEvBind
  ev = cobox_aBd
  tm  = CO <Int>_N
kickOutRewritable
  tv =  b_as2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
110[<C:0,F:0>] [W] cobox_aBd :: b_as2 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as5 :: ([a_as4] -> Int)
                                ~ (a_as1 -> b_as2) [" a type equality [a_as4] -> Int
                                                                      ~
                                                                      a_as1
                                                                      -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as5 :: ([a_as4] -> Int)
                                 ~ (a_as1 -> b_as2) [" a type equality [a_as4] -> Int
                                                                       ~
                                                                       a_as1
                                                                       -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as5 :: ([a_as4] -> Int)
                   ~ (a_as1 -> b_as2) [" a type equality [a_as4] -> Int
                                                         ~
                                                         a_as1
                                                         -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
canEvNC:eq
  [a_as4] -> Int
  a_as1 -> b_as2
can_eq_nc
  [W] cobox_as5 :: ([a_as4] -> Int) ~ (a_as1 -> b_as2)
  [a_as4] -> Int
  [a_as4] -> Int
  a_as1 -> b_as2
  a_as1 -> b_as2
newWantedEvVar/cache miss [W] cobox_aBe :: [a_as4] ~ a_as1
newWantedEvVar/cache miss [W] cobox_aBf :: Int ~ b_as2
setEvBind
  ev = cobox_as5
  tm  = CO cobox_aBe -> cobox_aBf
canEvNC:eq
  [a_as4]
  a_as1
can_eq_nc
  [W] cobox_aBe :: [a_as4] ~ a_as1
  [a_as4]
  [a_as4]
  a_as1
  a_as1
canEqTyVar
  a_as1
  [a_as4]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBg :: a_as1 ~ [a_as4]
setEvBind
  ev = cobox_aBe
  tm  = CO Sym cobox_aBg
rewriteEqEvidence
  [W] cobox_aBe :: [a_as4] ~ a_as1
  a_as1
  [a_as4]
  Sym cobox_aBg
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBg :: a_as1
                                 ~ [a_as4] [" a type equality [a_as4] -> Int
                                                              ~
                                                              a_as1
                                                              -> b_as2 " FQL.hs:45:39-44] (CTyEqCan)
Sneaky unification:
  Unifies: a_as1 := [a_as4]
  Coercion: a_as1 ~ [a_as4]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_as1 := [a_as4]
setEvBind
  ev = cobox_aBg
  tm  = CO <[a_as4]>_N
kickOutRewritable
  tv =  a_as1
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
111[<C:0,F:0>] [W] cobox_aBg :: a_as1
                                ~ [a_as4]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBf :: Int
                                ~ b_as2 [" a type equality [a_as4] -> Int
                                                           ~
                                                           a_as1
                                                           -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBf :: Int
                                 ~ b_as2 [" a type equality [a_as4] -> Int
                                                            ~
                                                            a_as1
                                                            -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBf :: Int ~ b_as2 [" a type equality [a_as4] -> Int
                                                  ~
                                                  a_as1 -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
canEvNC:eq
  Int
  b_as2
can_eq_nc
  [W] cobox_aBf :: Int ~ b_as2
  Int
  Int
  b_as2
  b_as2
canEqTyVar
  b_as2
  Int
  Is-swapped
Following bound tyvar b_as2 = Int
newWantedEvVar/cache miss [W] cobox_aBh :: Int ~ Int
setEvBind
  ev = cobox_aBf
  tm  = CO Sym cobox_aBh
rewriteEqEvidence
  [W] cobox_aBf :: Int ~ b_as2
  Int
  Int
  Sym cobox_aBh
canEqTyVar2
  b_as2
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aBh :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aBh
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as8 :: [[a_as7]]
                                ~ [a_aoL] [" a type equality [[a_as7]]
                                                             ~
                                                             [a_aoL] " FQL.hs:45:48-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as8 :: [[a_as7]]
                                 ~ [a_aoL] [" a type equality [[a_as7]]
                                                              ~
                                                              [a_aoL] " FQL.hs:45:48-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as8 :: [[a_as7]] ~ [a_aoL] [" a type equality [[a_as7]]
                                                          ~
                                                          [a_aoL] " FQL.hs:45:48-62] (CNonCanonical)
canEvNC:eq
  [[a_as7]]
  [a_aoL]
can_eq_nc
  [W] cobox_as8 :: [[a_as7]] ~ [a_aoL]
  [[a_as7]]
  [[a_as7]]
  [a_aoL]
  [a_aoL]
newWantedEvVar/cache miss [W] cobox_aBi :: [a_as7] ~ a_aoL
setEvBind
  ev = cobox_as8
  tm  = CO [cobox_aBi]_N
canEvNC:eq
  [a_as7]
  a_aoL
can_eq_nc
  [W] cobox_aBi :: [a_as7] ~ a_aoL
  [a_as7]
  [a_as7]
  a_aoL
  a_aoL
canEqTyVar
  a_aoL
  [a_as7]
  Is-swapped
Following bound tyvar a_aoL = a_aoT
newWantedEvVar/cache miss [W] cobox_aBj :: a_aoT ~ [a_as7]
setEvBind
  ev = cobox_aBi
  tm  = CO Sym cobox_aBj
rewriteEqEvidence
  [W] cobox_aBi :: [a_as7] ~ a_aoL
  a_aoT
  [a_as7]
  Sym cobox_aBj
canEqTyVar2
  a_aoL
  [a_as7]
  Is-swapped
  a_aoT
  <a_aoT>_N
can_eq_nc
  [W] cobox_aBj :: a_aoT ~ [a_as7]
  a_aoT
  a_aoT
  [a_as7]
  [a_as7]
canEqTyVar
  a_aoT
  [a_as7]
  Not-swapped
Following bound tyvar a_aoT = [a_as1]
canEqTyVar2
  a_aoT
  [a_as7]
  Not-swapped
  [a_as1]
  <[a_as1]>_N
can_eq_nc
  [W] cobox_aBj :: [a_as1] ~ [a_as7]
  [a_as1]
  [a_as1]
  [a_as7]
  [a_as7]
newWantedEvVar/cache miss [W] cobox_aBk :: a_as1 ~ a_as7
setEvBind
  ev = cobox_aBj
  tm  = CO [cobox_aBk]_N
canEvNC:eq
  a_as1
  a_as7
can_eq_nc
  [W] cobox_aBk :: a_as1 ~ a_as7
  a_as1
  a_as1
  a_as7
  a_as7
canEqTyVar
  a_as1
  a_as7
  Not-swapped
Following bound tyvar a_as1 = [a_as4]
canEqTyVar2
  a_as1
  a_as7
  Not-swapped
  [a_as4]
  <[a_as4]>_N
can_eq_nc
  [W] cobox_aBk :: [a_as4] ~ a_as7
  [a_as4]
  [a_as4]
  a_as7
  a_as7
canEqTyVar
  a_as7
  [a_as4]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBl :: a_as7 ~ [a_as4]
setEvBind
  ev = cobox_aBk
  tm  = CO Sym cobox_aBl
rewriteEqEvidence
  [W] cobox_aBk :: [a_as4] ~ a_as7
  a_as7
  [a_as4]
  Sym cobox_aBl
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBl :: a_as7
                                 ~ [a_as4] [" a type equality [[a_as7]]
                                                              ~
                                                              [a_aoL] " FQL.hs:45:48-62] (CTyEqCan)
Sneaky unification:
  Unifies: a_as7 := [a_as4]
  Coercion: a_as7 ~ [a_as4]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_as7 := [a_as4]
setEvBind
  ev = cobox_aBl
  tm  = CO <[a_as4]>_N
kickOutRewritable
  tv =  a_as7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
113[<C:0,F:0>] [W] cobox_aBl :: a_as7
                                ~ [a_as4]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as9 :: t_amN
                                ~ [[a_as7]] [" a type equality t_amN
                                                               ~
                                                               [[a_as7]] " FQL.hs:45:58-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as9 :: t_amN
                                 ~ [[a_as7]] [" a type equality t_amN
                                                                ~
                                                                [[a_as7]] " FQL.hs:45:58-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as9 :: t_amN ~ [[a_as7]] [" a type equality t_amN
                                                        ~
                                                        [[a_as7]] " FQL.hs:45:58-62] (CNonCanonical)
canEvNC:eq
  t_amN
  [[a_as7]]
can_eq_nc
  [W] cobox_as9 :: t_amN ~ [[a_as7]]
  t_amN
  t_amN
  [[a_as7]]
  [[a_as7]]
canEqTyVar
  t_amN
  [[a_as7]]
  Not-swapped
Following bound tyvar t_amN = Table
canEqTyVar2
  t_amN
  [[a_as7]]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_as9 :: Table ~ [[a_as7]]
  Table
  Table
  [[a_as7]]
  [[a_as7]]
can_eq_nc
  [W] cobox_as9 :: Table ~ [[a_as7]]
  [[String]]
  Table
  [[a_as7]]
  [[a_as7]]
newWantedEvVar/cache miss [W] cobox_aBm :: [String] ~ [a_as7]
setEvBind
  ev = cobox_as9
  tm  = CO [cobox_aBm]_N
canEvNC:eq
  [String]
  [a_as7]
can_eq_nc
  [W] cobox_aBm :: [String] ~ [a_as7]
  [String]
  [String]
  [a_as7]
  [a_as7]
newWantedEvVar/cache miss [W] cobox_aBn :: String ~ a_as7
setEvBind
  ev = cobox_aBm
  tm  = CO [cobox_aBn]_N
canEvNC:eq
  String
  a_as7
can_eq_nc
  [W] cobox_aBn :: String ~ a_as7
  String
  String
  a_as7
  a_as7
can_eq_nc
  [W] cobox_aBn :: String ~ a_as7
  [Char]
  String
  a_as7
  a_as7
canEqTyVar
  a_as7
  [Char]
  Is-swapped
Following bound tyvar a_as7 = [a_as4]
newWantedEvVar/cache miss [W] cobox_aBo :: [a_as4] ~ String
setEvBind
  ev = cobox_aBn
  tm  = CO Sym cobox_aBo
rewriteEqEvidence
  [W] cobox_aBn :: String ~ a_as7
  [a_as4]
  String
  Sym cobox_aBo
canEqTyVar2
  a_as7
  [Char]
  Is-swapped
  [a_as4]
  <[a_as4]>_N
can_eq_nc
  [W] cobox_aBo :: [a_as4] ~ String
  [a_as4]
  [a_as4]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aBp :: a_as4 ~ Char
setEvBind
  ev = cobox_aBo
  tm  = CO [cobox_aBp]_N
canEvNC:eq
  a_as4
  Char
can_eq_nc
  [W] cobox_aBp :: a_as4 ~ Char
  a_as4
  a_as4
  Char
  Char
canEqTyVar
  a_as4
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBp :: a_as4
                                 ~ Char [" a type equality t_amN
                                                           ~
                                                           [[a_as7]] " FQL.hs:45:58-62] (CTyEqCan)
Sneaky unification:
  Unifies: a_as4 := Char
  Coercion: a_as4 ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_as4 := Char
setEvBind
  ev = cobox_aBp
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_as4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
114[<C:0,F:0>] [W] cobox_aBp :: a_as4 ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asd :: [b_asc]
                                ~ t_amK [" a type equality [b_asc]
                                                           ~
                                                           t_amK " FQL.hs:50:22-64] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asd :: [b_asc]
                                 ~ t_amK [" a type equality [b_asc]
                                                            ~
                                                            t_amK " FQL.hs:50:22-64] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asd :: [b_asc] ~ t_amK [" a type equality [b_asc]
                                                      ~
                                                      t_amK " FQL.hs:50:22-64] (CNonCanonical)
canEvNC:eq
  [b_asc]
  t_amK
can_eq_nc
  [W] cobox_asd :: [b_asc] ~ t_amK
  [b_asc]
  [b_asc]
  t_amK
  t_amK
canEqTyVar
  t_amK
  [b_asc]
  Is-swapped
Following bound tyvar t_amK = [String]
newWantedEvVar/cache miss [W] cobox_aBq :: [String] ~ [b_asc]
setEvBind
  ev = cobox_asd
  tm  = CO Sym cobox_aBq
rewriteEqEvidence
  [W] cobox_asd :: [b_asc] ~ t_amK
  [String]
  [b_asc]
  Sym cobox_aBq
canEqTyVar2
  t_amK
  [b_asc]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aBq :: [String] ~ [b_asc]
  [String]
  [String]
  [b_asc]
  [b_asc]
newWantedEvVar/cache miss [W] cobox_aBr :: String ~ b_asc
setEvBind
  ev = cobox_aBq
  tm  = CO [cobox_aBr]_N
canEvNC:eq
  String
  b_asc
can_eq_nc
  [W] cobox_aBr :: String ~ b_asc
  String
  String
  b_asc
  b_asc
can_eq_nc
  [W] cobox_aBr :: String ~ b_asc
  [Char]
  String
  b_asc
  b_asc
canEqTyVar
  b_asc
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBs :: b_asc ~ String
setEvBind
  ev = cobox_aBr
  tm  = CO Sym cobox_aBs
rewriteEqEvidence
  [W] cobox_aBr :: String ~ b_asc
  b_asc
  String
  Sym cobox_aBs
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBs :: b_asc
                                 ~ String [" a type equality [b_asc]
                                                             ~
                                                             t_amK " FQL.hs:50:22-64] (CTyEqCan)
Sneaky unification:
  Unifies: b_asc := String
  Coercion: b_asc ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_asc := String
setEvBind
  ev = cobox_aBs
  tm  = CO <String>_N
kickOutRewritable
  tv =  b_asc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
115[<C:0,F:0>] [W] cobox_aBs :: b_asc
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ase :: (t_amE -> t_amF)
                                ~ (a_asb -> b_asc) [" a type equality t_amE -> t_amF
                                                                      ~
                                                                      a_asb
                                                                      -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ase :: (t_amE -> t_amF)
                                 ~ (a_asb -> b_asc) [" a type equality t_amE -> t_amF
                                                                       ~
                                                                       a_asb
                                                                       -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ase :: (t_amE -> t_amF)
                   ~ (a_asb -> b_asc) [" a type equality t_amE -> t_amF
                                                         ~
                                                         a_asb
                                                         -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
canEvNC:eq
  t_amE -> t_amF
  a_asb -> b_asc
can_eq_nc
  [W] cobox_ase :: (t_amE -> t_amF) ~ (a_asb -> b_asc)
  t_amE -> t_amF
  t_amE -> t_amF
  a_asb -> b_asc
  a_asb -> b_asc
newWantedEvVar/cache miss [W] cobox_aBt :: t_amE ~ a_asb
newWantedEvVar/cache miss [W] cobox_aBu :: t_amF ~ b_asc
setEvBind
  ev = cobox_ase
  tm  = CO cobox_aBt -> cobox_aBu
canEvNC:eq
  t_amE
  a_asb
can_eq_nc
  [W] cobox_aBt :: t_amE ~ a_asb
  t_amE
  t_amE
  a_asb
  a_asb
canEqTyVar
  t_amE
  a_asb
  Not-swapped
Following bound tyvar t_amE = [String]
canEqTyVar2
  t_amE
  a_asb
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aBt :: [String] ~ a_asb
  [String]
  [String]
  a_asb
  a_asb
canEqTyVar
  a_asb
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBv :: a_asb ~ [String]
setEvBind
  ev = cobox_aBt
  tm  = CO Sym cobox_aBv
rewriteEqEvidence
  [W] cobox_aBt :: [String] ~ a_asb
  a_asb
  [String]
  Sym cobox_aBv
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBv :: a_asb
                                 ~ [String] [" a type equality t_amE -> t_amF
                                                               ~
                                                               a_asb
                                                               -> b_asc " FQL.hs:50:27-57] (CTyEqCan)
Sneaky unification:
  Unifies: a_asb := [String]
  Coercion: a_asb ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asb := [String]
setEvBind
  ev = cobox_aBv
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_asb
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
116[<C:0,F:0>] [W] cobox_aBv :: a_asb
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBu :: t_amF
                                ~ b_asc [" a type equality t_amE -> t_amF
                                                           ~
                                                           a_asb
                                                           -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBu :: t_amF
                                 ~ b_asc [" a type equality t_amE -> t_amF
                                                            ~
                                                            a_asb
                                                            -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBu :: t_amF ~ b_asc [" a type equality t_amE -> t_amF
                                                    ~
                                                    a_asb
                                                    -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
canEvNC:eq
  t_amF
  b_asc
can_eq_nc
  [W] cobox_aBu :: t_amF ~ b_asc
  t_amF
  t_amF
  b_asc
  b_asc
canEqTyVar
  t_amF
  b_asc
  Not-swapped
Following bound tyvar t_amF = String
canEqTyVar2
  t_amF
  b_asc
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aBu :: String ~ b_asc
  String
  String
  b_asc
  b_asc
can_eq_nc
  [W] cobox_aBu :: String ~ b_asc
  [Char]
  String
  b_asc
  b_asc
canEqTyVar
  b_asc
  [Char]
  Is-swapped
Following bound tyvar b_asc = String
newWantedEvVar/cache miss [W] cobox_aBw :: String ~ String
setEvBind
  ev = cobox_aBu
  tm  = CO Sym cobox_aBw
rewriteEqEvidence
  [W] cobox_aBu :: String ~ b_asc
  String
  String
  Sym cobox_aBw
canEqTyVar2
  b_asc
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aBw :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aBw :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aBx :: Char ~ Char
setEvBind
  ev = cobox_aBw
  tm  = CO [cobox_aBx]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aBx :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aBx
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asf :: t_amO
                                ~ t_amD [" a type equality t_amO
                                                           ~
                                                           t_amD " FQL.hs:50:39-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asf :: t_amO
                                 ~ t_amD [" a type equality t_amO
                                                            ~
                                                            t_amD " FQL.hs:50:39-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asf :: t_amO ~ t_amD [" a type equality t_amO
                                                    ~
                                                    t_amD " FQL.hs:50:39-56] (CNonCanonical)
canEvNC:eq
  t_amO
  t_amD
can_eq_nc
  [W] cobox_asf :: t_amO ~ t_amD
  t_amO
  t_amO
  t_amD
  t_amD
canEqTyVar
  t_amO
  t_amD
  Not-swapped
Following bound tyvar t_amO = [Int]
canEqTyVar2
  t_amO
  t_amD
  Not-swapped
  [Int]
  <[Int]>_N
can_eq_nc
  [W] cobox_asf :: [Int] ~ t_amD
  [Int]
  [Int]
  t_amD
  t_amD
canEqTyVar
  t_amD
  [Int]
  Is-swapped
Following bound tyvar t_amD = [Int]
newWantedEvVar/cache miss [W] cobox_aBy :: [Int] ~ [Int]
setEvBind
  ev = cobox_asf
  tm  = CO Sym cobox_aBy
rewriteEqEvidence
  [W] cobox_asf :: [Int] ~ t_amD
  [Int]
  [Int]
  Sym cobox_aBy
canEqTyVar2
  t_amD
  [Int]
  Is-swapped
  [Int]
  <[Int]>_N
can_eq_nc
  [W] cobox_aBy :: [Int] ~ [Int]
  [Int]
  [Int]
  [Int]
  [Int]
newWantedEvVar/cache miss [W] cobox_aBz :: Int ~ Int
setEvBind
  ev = cobox_aBy
  tm  = CO [cobox_aBz]_N
canEvNC:eq
  Int
  Int
can_eq_nc
  [W] cobox_aBz :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aBz
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asg :: t_amJ
                                ~ t_amN [" a type equality t_amJ
                                                           ~
                                                           t_amN " FQL.hs:50:52-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asg :: t_amJ
                                 ~ t_amN [" a type equality t_amJ
                                                            ~
                                                            t_amN " FQL.hs:50:52-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asg :: t_amJ ~ t_amN [" a type equality t_amJ
                                                    ~
                                                    t_amN " FQL.hs:50:52-56] (CNonCanonical)
canEvNC:eq
  t_amJ
  t_amN
can_eq_nc
  [W] cobox_asg :: t_amJ ~ t_amN
  t_amJ
  t_amJ
  t_amN
  t_amN
canEqTyVar
  t_amJ
  t_amN
  Not-swapped
Following bound tyvar t_amJ = Table
canEqTyVar2
  t_amJ
  t_amN
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_asg :: Table ~ t_amN
  Table
  Table
  t_amN
  t_amN
can_eq_nc
  [W] cobox_asg :: Table ~ t_amN
  [[String]]
  Table
  t_amN
  t_amN
canEqTyVar
  t_amN
  [[String]]
  Is-swapped
Following bound tyvar t_amN = Table
newWantedEvVar/cache miss [W] cobox_aBA :: Table ~ Table
setEvBind
  ev = cobox_asg
  tm  = CO Sym cobox_aBA
rewriteEqEvidence
  [W] cobox_asg :: Table ~ t_amN
  Table
  Table
  Sym cobox_aBA
canEqTyVar2
  t_amN
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aBA :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_aBA :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_aBB :: [String] ~ [String]
setEvBind
  ev = cobox_aBA
  tm  = CO [cobox_aBB]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_aBB :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aBC :: String ~ String
setEvBind
  ev = cobox_aBB
  tm  = CO [cobox_aBC]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aBC :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aBC :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aBC :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aBD :: Char ~ Char
setEvBind
  ev = cobox_aBC
  tm  = CO [cobox_aBD]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aBD :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aBD
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ash :: t_amJ
                                ~ [a_asb] [" a type equality t_amJ
                                                             ~
                                                             [a_asb] " FQL.hs:50:60-64] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ash :: t_amJ
                                 ~ [a_asb] [" a type equality t_amJ
                                                              ~
                                                              [a_asb] " FQL.hs:50:60-64] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ash :: t_amJ ~ [a_asb] [" a type equality t_amJ
                                                      ~
                                                      [a_asb] " FQL.hs:50:60-64] (CNonCanonical)
canEvNC:eq
  t_amJ
  [a_asb]
can_eq_nc
  [W] cobox_ash :: t_amJ ~ [a_asb]
  t_amJ
  t_amJ
  [a_asb]
  [a_asb]
canEqTyVar
  t_amJ
  [a_asb]
  Not-swapped
Following bound tyvar t_amJ = Table
canEqTyVar2
  t_amJ
  [a_asb]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_ash :: Table ~ [a_asb]
  Table
  Table
  [a_asb]
  [a_asb]
can_eq_nc
  [W] cobox_ash :: Table ~ [a_asb]
  [[String]]
  Table
  [a_asb]
  [a_asb]
newWantedEvVar/cache miss [W] cobox_aBE :: [String] ~ a_asb
setEvBind
  ev = cobox_ash
  tm  = CO [cobox_aBE]_N
canEvNC:eq
  [String]
  a_asb
can_eq_nc
  [W] cobox_aBE :: [String] ~ a_asb
  [String]
  [String]
  a_asb
  a_asb
canEqTyVar
  a_asb
  [String]
  Is-swapped
Following bound tyvar a_asb = [String]
newWantedEvVar/cache miss [W] cobox_aBF :: [String] ~ [String]
setEvBind
  ev = cobox_aBE
  tm  = CO Sym cobox_aBF
rewriteEqEvidence
  [W] cobox_aBE :: [String] ~ a_asb
  [String]
  [String]
  Sym cobox_aBF
canEqTyVar2
  a_asb
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aBF :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aBG :: String ~ String
setEvBind
  ev = cobox_aBF
  tm  = CO [cobox_aBG]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aBG :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aBG :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aBG :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aBH :: Char ~ Char
setEvBind
  ev = cobox_aBG
  tm  = CO [cobox_aBH]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aBH :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aBH
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ask :: t_amK
                                ~ t_asj [" a type equality t_amK
                                                           ~
                                                           t_asj " FQL.hs:40:37-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ask :: t_amK
                                 ~ t_asj [" a type equality t_amK
                                                            ~
                                                            t_asj " FQL.hs:40:37-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ask :: t_amK ~ t_asj [" a type equality t_amK
                                                    ~
                                                    t_asj " FQL.hs:40:37-54] (CNonCanonical)
canEvNC:eq
  t_amK
  t_asj
can_eq_nc
  [W] cobox_ask :: t_amK ~ t_asj
  t_amK
  t_amK
  t_asj
  t_asj
canEqTyVar
  t_amK
  t_asj
  Not-swapped
Following bound tyvar t_amK = [String]
canEqTyVar2
  t_amK
  t_asj
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_ask :: [String] ~ t_asj
  [String]
  [String]
  t_asj
  t_asj
canEqTyVar
  t_asj
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBI :: t_asj ~ [String]
setEvBind
  ev = cobox_ask
  tm  = CO Sym cobox_aBI
rewriteEqEvidence
  [W] cobox_ask :: [String] ~ t_asj
  t_asj
  [String]
  Sym cobox_aBI
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBI :: t_asj
                                 ~ [String] [" a type equality t_amK
                                                               ~
                                                               t_asj " FQL.hs:40:37-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_asj := [String]
  Coercion: t_asj ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_asj := [String]
setEvBind
  ev = cobox_aBI
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_asj
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
121[<C:0,F:0>] [W] cobox_aBI :: t_asj
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asl :: t_amR
                                ~ t_amJ [" a type equality t_amR
                                                           ~
                                                           t_amJ " FQL.hs:40:50-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asl :: t_amR
                                 ~ t_amJ [" a type equality t_amR
                                                            ~
                                                            t_amJ " FQL.hs:40:50-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asl :: t_amR ~ t_amJ [" a type equality t_amR
                                                    ~
                                                    t_amJ " FQL.hs:40:50-54] (CNonCanonical)
canEvNC:eq
  t_amR
  t_amJ
can_eq_nc
  [W] cobox_asl :: t_amR ~ t_amJ
  t_amR
  t_amR
  t_amJ
  t_amJ
canEqTyVar
  t_amR
  t_amJ
  Not-swapped
Following bound tyvar t_amR = Table
canEqTyVar2
  t_amR
  t_amJ
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_asl :: Table ~ t_amJ
  Table
  Table
  t_amJ
  t_amJ
can_eq_nc
  [W] cobox_asl :: Table ~ t_amJ
  [[String]]
  Table
  t_amJ
  t_amJ
canEqTyVar
  t_amJ
  [[String]]
  Is-swapped
Following bound tyvar t_amJ = Table
newWantedEvVar/cache miss [W] cobox_aBJ :: Table ~ Table
setEvBind
  ev = cobox_asl
  tm  = CO Sym cobox_aBJ
rewriteEqEvidence
  [W] cobox_asl :: Table ~ t_amJ
  Table
  Table
  Sym cobox_aBJ
canEqTyVar2
  t_amJ
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aBJ :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_aBJ :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_aBK :: [String] ~ [String]
setEvBind
  ev = cobox_aBJ
  tm  = CO [cobox_aBK]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_aBK :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aBL :: String ~ String
setEvBind
  ev = cobox_aBK
  tm  = CO [cobox_aBL]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aBL :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aBL :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aBL :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aBM :: Char ~ Char
setEvBind
  ev = cobox_aBL
  tm  = CO [cobox_aBM]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aBM :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aBM
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asr :: b_asq
                                ~ t_asm [" a type equality b_asq
                                                           ~
                                                           t_asm " FQL.hs:39:38-104] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asr :: b_asq
                                 ~ t_asm [" a type equality b_asq
                                                            ~
                                                            t_asm " FQL.hs:39:38-104] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asr :: b_asq ~ t_asm [" a type equality b_asq
                                                    ~
                                                    t_asm " FQL.hs:39:38-104] (CNonCanonical)
canEvNC:eq
  b_asq
  t_asm
can_eq_nc
  [W] cobox_asr :: b_asq ~ t_asm
  b_asq
  b_asq
  t_asm
  t_asm
canEqTyVar
  b_asq
  t_asm
  Not-swapped
newWantedEvVar/cache miss [W] cobox_aBN :: t_asm ~ b_asq
setEvBind
  ev = cobox_asr
  tm  = CO Sym cobox_aBN
rewriteEqEvidence
  [W] cobox_asr :: b_asq ~ t_asm
  t_asm
  b_asq
  Sym cobox_aBN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBN :: t_asm
                                 ~ b_asq [" a type equality b_asq
                                                            ~
                                                            t_asm " FQL.hs:39:38-104] (CTyEqCan)
Sneaky unification:
  Unifies: t_asm := b_asq
  Coercion: t_asm ~ b_asq
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_asm := b_asq
setEvBind
  ev = cobox_aBN
  tm  = CO <b_asq>_N
kickOutRewritable
  tv =  t_asm
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
123[<C:0,F:0>] [W] cobox_aBN :: t_asm ~ b_asq: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ast :: ([a_ass] -> [a_ass])
                                ~ (b_asq -> b_asq) [" a type equality [a_ass] -> [a_ass]
                                                                      ~
                                                                      b_asq
                                                                      -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ast :: ([a_ass] -> [a_ass])
                                 ~ (b_asq -> b_asq) [" a type equality [a_ass] -> [a_ass]
                                                                       ~
                                                                       b_asq
                                                                       -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ast :: ([a_ass] -> [a_ass])
                   ~ (b_asq -> b_asq) [" a type equality [a_ass] -> [a_ass]
                                                         ~
                                                         b_asq
                                                         -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
canEvNC:eq
  [a_ass] -> [a_ass]
  b_asq -> b_asq
can_eq_nc
  [W] cobox_ast :: ([a_ass] -> [a_ass]) ~ (b_asq -> b_asq)
  [a_ass] -> [a_ass]
  [a_ass] -> [a_ass]
  b_asq -> b_asq
  b_asq -> b_asq
newWantedEvVar/cache miss [W] cobox_aBO :: [a_ass] ~ b_asq
newWantedEvVar/cache miss [W] cobox_aBP :: [a_ass] ~ b_asq
setEvBind
  ev = cobox_ast
  tm  = CO cobox_aBO -> cobox_aBP
canEvNC:eq
  [a_ass]
  b_asq
can_eq_nc
  [W] cobox_aBO :: [a_ass] ~ b_asq
  [a_ass]
  [a_ass]
  b_asq
  b_asq
canEqTyVar
  b_asq
  [a_ass]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBQ :: b_asq ~ [a_ass]
setEvBind
  ev = cobox_aBO
  tm  = CO Sym cobox_aBQ
rewriteEqEvidence
  [W] cobox_aBO :: [a_ass] ~ b_asq
  b_asq
  [a_ass]
  Sym cobox_aBQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBQ :: b_asq
                                 ~ [a_ass] [" a type equality [a_ass] -> [a_ass]
                                                              ~
                                                              b_asq
                                                              -> b_asq " FQL.hs:39:50-78] (CTyEqCan)
Sneaky unification:
  Unifies: b_asq := [a_ass]
  Coercion: b_asq ~ [a_ass]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_asq := [a_ass]
setEvBind
  ev = cobox_aBQ
  tm  = CO <[a_ass]>_N
kickOutRewritable
  tv =  b_asq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
124[<C:0,F:0>] [W] cobox_aBQ :: b_asq
                                ~ [a_ass]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBP :: [a_ass]
                                ~ b_asq [" a type equality [a_ass] -> [a_ass]
                                                           ~
                                                           b_asq
                                                           -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBP :: [a_ass]
                                 ~ b_asq [" a type equality [a_ass] -> [a_ass]
                                                            ~
                                                            b_asq
                                                            -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBP :: [a_ass] ~ b_asq [" a type equality [a_ass]
                                                      -> [a_ass]
                                                      ~
                                                      b_asq
                                                      -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
canEvNC:eq
  [a_ass]
  b_asq
can_eq_nc
  [W] cobox_aBP :: [a_ass] ~ b_asq
  [a_ass]
  [a_ass]
  b_asq
  b_asq
canEqTyVar
  b_asq
  [a_ass]
  Is-swapped
Following bound tyvar b_asq = [a_ass]
newWantedEvVar/cache miss [W] cobox_aBR :: [a_ass] ~ [a_ass]
setEvBind
  ev = cobox_aBP
  tm  = CO Sym cobox_aBR
rewriteEqEvidence
  [W] cobox_aBP :: [a_ass] ~ b_asq
  [a_ass]
  [a_ass]
  Sym cobox_aBR
canEqTyVar2
  b_asq
  [a_ass]
  Is-swapped
  [a_ass]
  <[a_ass]>_N
can_eq_nc
  [W] cobox_aBR :: [a_ass] ~ [a_ass]
  [a_ass]
  [a_ass]
  [a_ass]
  [a_ass]
newWantedEvVar/cache miss [W] cobox_aBS :: a_ass ~ a_ass
setEvBind
  ev = cobox_aBR
  tm  = CO [cobox_aBS]_N
canEvNC:eq
  a_ass
  a_ass
can_eq_nc
  [W] cobox_aBS :: a_ass ~ a_ass
  a_ass
  a_ass
  a_ass
  a_ass
canEqTyVar
  a_ass
  a_ass
  Not-swapped
setEvBind
  ev = cobox_aBS
  tm  = CO <a_ass>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asv :: [a_asu]
                                ~ [a_ass] [" a type equality [a_asu]
                                                             ~
                                                             [a_ass] " FQL.hs:39:56-77] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asv :: [a_asu]
                                 ~ [a_ass] [" a type equality [a_asu]
                                                              ~
                                                              [a_ass] " FQL.hs:39:56-77] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asv :: [a_asu] ~ [a_ass] [" a type equality [a_asu]
                                                        ~
                                                        [a_ass] " FQL.hs:39:56-77] (CNonCanonical)
canEvNC:eq
  [a_asu]
  [a_ass]
can_eq_nc
  [W] cobox_asv :: [a_asu] ~ [a_ass]
  [a_asu]
  [a_asu]
  [a_ass]
  [a_ass]
newWantedEvVar/cache miss [W] cobox_aBT :: a_asu ~ a_ass
setEvBind
  ev = cobox_asv
  tm  = CO [cobox_aBT]_N
canEvNC:eq
  a_asu
  a_ass
can_eq_nc
  [W] cobox_aBT :: a_asu ~ a_ass
  a_asu
  a_asu
  a_ass
  a_ass
canEqTyVar
  a_asu
  a_ass
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBT :: a_asu
                                 ~ a_ass [" a type equality [a_asu]
                                                            ~
                                                            [a_ass] " FQL.hs:39:56-77] (CTyEqCan)
Sneaky unification:
  Unifies: a_ass := a_asu
  Coercion: a_ass ~ a_asu
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ass := a_asu
setEvBind
  ev = cobox_aBT
  tm  = CO <a_asu>_N
kickOutRewritable
  tv =  a_ass
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
126[<C:0,F:0>] [W] cobox_aBT :: a_asu ~ a_ass: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asw :: [Char]
                                ~ [a_asu] [" a type equality [Char]
                                                             ~
                                                             [a_asu] " FQL.hs:39:56-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asw :: [Char]
                                 ~ [a_asu] [" a type equality [Char]
                                                              ~
                                                              [a_asu] " FQL.hs:39:56-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asw :: [Char] ~ [a_asu] [" a type equality [Char]
                                                       ~
                                                       [a_asu] " FQL.hs:39:56-58] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_asu]
can_eq_nc
  [W] cobox_asw :: [Char] ~ [a_asu]
  [Char]
  [Char]
  [a_asu]
  [a_asu]
newWantedEvVar/cache miss [W] cobox_aBU :: Char ~ a_asu
setEvBind
  ev = cobox_asw
  tm  = CO [cobox_aBU]_N
canEvNC:eq
  Char
  a_asu
can_eq_nc
  [W] cobox_aBU :: Char ~ a_asu
  Char
  Char
  a_asu
  a_asu
canEqTyVar
  a_asu
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aBV :: a_asu ~ Char
setEvBind
  ev = cobox_aBU
  tm  = CO Sym cobox_aBV
rewriteEqEvidence
  [W] cobox_aBU :: Char ~ a_asu
  a_asu
  Char
  Sym cobox_aBV
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBV :: a_asu
                                 ~ Char [" a type equality [Char]
                                                           ~
                                                           [a_asu] " FQL.hs:39:56-58] (CTyEqCan)
Sneaky unification:
  Unifies: a_asu := Char
  Coercion: a_asu ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asu := Char
setEvBind
  ev = cobox_aBV
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_asu
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
127[<C:0,F:0>] [W] cobox_aBV :: a_asu ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asy :: [a_asx]
                                ~ [a_asu] [" a type equality [a_asx]
                                                             ~
                                                             [a_asu] " FQL.hs:39:63-77] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asy :: [a_asx]
                                 ~ [a_asu] [" a type equality [a_asx]
                                                              ~
                                                              [a_asu] " FQL.hs:39:63-77] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asy :: [a_asx] ~ [a_asu] [" a type equality [a_asx]
                                                        ~
                                                        [a_asu] " FQL.hs:39:63-77] (CNonCanonical)
canEvNC:eq
  [a_asx]
  [a_asu]
can_eq_nc
  [W] cobox_asy :: [a_asx] ~ [a_asu]
  [a_asx]
  [a_asx]
  [a_asu]
  [a_asu]
newWantedEvVar/cache miss [W] cobox_aBW :: a_asx ~ a_asu
setEvBind
  ev = cobox_asy
  tm  = CO [cobox_aBW]_N
canEvNC:eq
  a_asx
  a_asu
can_eq_nc
  [W] cobox_aBW :: a_asx ~ a_asu
  a_asx
  a_asx
  a_asu
  a_asu
canEqTyVar
  a_asx
  a_asu
  Not-swapped
Following bound tyvar a_asu = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aBW :: a_asx
                                 ~ Char [" a type equality [a_asx]
                                                           ~
                                                           [a_asu] " FQL.hs:39:63-77] (CTyEqCan)
Sneaky unification:
  Unifies: a_asx := Char
  Coercion: a_asx ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asx := Char
setEvBind
  ev = cobox_aBW
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_asx
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
128[<C:0,F:0>] [W] cobox_aBW :: a_asx ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                               ~
                                                               Int " FQL.hs:39:73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                                ~
                                                                Int " FQL.hs:39:73] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                  ~
                                                  Int " FQL.hs:39:73] (CNonCanonical)
canEvNC:eq
  a_asp
  Int
can_eq_nc
  [W] cobox_asz :: a_asp ~ Int
  a_asp
  a_asp
  Int
  Int
canEqTyVar
  a_asp
  Int
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                                ~
                                                                Int " FQL.hs:39:73] (CTyEqCan)
Sneaky unification:
  Unifies: a_asp := Int
  Coercion: a_asp ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asp := Int
setEvBind
  ev = cobox_asz
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_asp
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
129[<C:0,F:0>] [W] cobox_asz :: a_asp ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asA :: Char ~ a_asx [" a type equality Char
                                                                ~
                                                                a_asx " FQL.hs:39:75-77] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asA :: Char ~ a_asx [" a type equality Char
                                                                 ~
                                                                 a_asx " FQL.hs:39:75-77] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asA :: Char ~ a_asx [" a type equality Char
                                                   ~
                                                   a_asx " FQL.hs:39:75-77] (CNonCanonical)
canEvNC:eq
  Char
  a_asx
can_eq_nc
  [W] cobox_asA :: Char ~ a_asx
  Char
  Char
  a_asx
  a_asx
canEqTyVar
  a_asx
  Char
  Is-swapped
Following bound tyvar a_asx = Char
newWantedEvVar/cache miss [W] cobox_aBX :: Char ~ Char
setEvBind
  ev = cobox_asA
  tm  = CO Sym cobox_aBX
rewriteEqEvidence
  [W] cobox_asA :: Char ~ a_asx
  Char
  Char
  Sym cobox_aBX
canEqTyVar2
  a_asx
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aBX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aBX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asB :: [Char]
                                ~ b_asq [" a type equality [Char]
                                                           ~
                                                           b_asq " FQL.hs:39:81-83] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asB :: [Char]
                                 ~ b_asq [" a type equality [Char]
                                                            ~
                                                            b_asq " FQL.hs:39:81-83] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asB :: [Char] ~ b_asq [" a type equality [Char]
                                                     ~
                                                     b_asq " FQL.hs:39:81-83] (CNonCanonical)
canEvNC:eq
  [Char]
  b_asq
can_eq_nc
  [W] cobox_asB :: [Char] ~ b_asq
  [Char]
  [Char]
  b_asq
  b_asq
canEqTyVar
  b_asq
  [Char]
  Is-swapped
Following bound tyvar b_asq = [a_ass]
newWantedEvVar/cache miss [W] cobox_aBY :: [a_ass] ~ [Char]
setEvBind
  ev = cobox_asB
  tm  = CO Sym cobox_aBY
rewriteEqEvidence
  [W] cobox_asB :: [Char] ~ b_asq
  [a_ass]
  [Char]
  Sym cobox_aBY
canEqTyVar2
  b_asq
  [Char]
  Is-swapped
  [a_ass]
  <[a_ass]>_N
can_eq_nc
  [W] cobox_aBY :: [a_ass] ~ [Char]
  [a_ass]
  [a_ass]
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aBZ :: a_ass ~ Char
setEvBind
  ev = cobox_aBY
  tm  = CO [cobox_aBZ]_N
canEvNC:eq
  a_ass
  Char
can_eq_nc
  [W] cobox_aBZ :: a_ass ~ Char
  a_ass
  a_ass
  Char
  Char
canEqTyVar
  a_ass
  Char
  Not-swapped
Following bound tyvar a_ass = a_asu
canEqTyVar2
  a_ass
  Char
  Not-swapped
  a_asu
  <a_asu>_N
can_eq_nc
  [W] cobox_aBZ :: a_asu ~ Char
  a_asu
  a_asu
  Char
  Char
canEqTyVar
  a_asu
  Char
  Not-swapped
Following bound tyvar a_asu = Char
canEqTyVar2
  a_asu
  Char
  Not-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aBZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aBZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asC :: t_amO
                                ~ [a_asp] [" a type equality t_amO
                                                             ~
                                                             [a_asp] " FQL.hs:39:86-103] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asC :: t_amO
                                 ~ [a_asp] [" a type equality t_amO
                                                              ~
                                                              [a_asp] " FQL.hs:39:86-103] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asC :: t_amO ~ [a_asp] [" a type equality t_amO
                                                      ~
                                                      [a_asp] " FQL.hs:39:86-103] (CNonCanonical)
canEvNC:eq
  t_amO
  [a_asp]
can_eq_nc
  [W] cobox_asC :: t_amO ~ [a_asp]
  t_amO
  t_amO
  [a_asp]
  [a_asp]
canEqTyVar
  t_amO
  [a_asp]
  Not-swapped
Following bound tyvar t_amO = [Int]
canEqTyVar2
  t_amO
  [a_asp]
  Not-swapped
  [Int]
  <[Int]>_N
can_eq_nc
  [W] cobox_asC :: [Int] ~ [a_asp]
  [Int]
  [Int]
  [a_asp]
  [a_asp]
newWantedEvVar/cache miss [W] cobox_aC0 :: Int ~ a_asp
setEvBind
  ev = cobox_asC
  tm  = CO [cobox_aC0]_N
canEvNC:eq
  Int
  a_asp
can_eq_nc
  [W] cobox_aC0 :: Int ~ a_asp
  Int
  Int
  a_asp
  a_asp
canEqTyVar
  a_asp
  Int
  Is-swapped
Following bound tyvar a_asp = Int
newWantedEvVar/cache miss [W] cobox_aC1 :: Int ~ Int
setEvBind
  ev = cobox_aC0
  tm  = CO Sym cobox_aC1
rewriteEqEvidence
  [W] cobox_aC0 :: Int ~ a_asp
  Int
  Int
  Sym cobox_aC1
canEqTyVar2
  a_asp
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aC1 :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aC1
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asD :: t_amR
                                ~ t_amN [" a type equality t_amR
                                                           ~
                                                           t_amN " FQL.hs:39:99-103] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asD :: t_amR
                                 ~ t_amN [" a type equality t_amR
                                                            ~
                                                            t_amN " FQL.hs:39:99-103] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asD :: t_amR ~ t_amN [" a type equality t_amR
                                                    ~
                                                    t_amN " FQL.hs:39:99-103] (CNonCanonical)
canEvNC:eq
  t_amR
  t_amN
can_eq_nc
  [W] cobox_asD :: t_amR ~ t_amN
  t_amR
  t_amR
  t_amN
  t_amN
canEqTyVar
  t_amR
  t_amN
  Not-swapped
Following bound tyvar t_amR = Table
canEqTyVar2
  t_amR
  t_amN
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_asD :: Table ~ t_amN
  Table
  Table
  t_amN
  t_amN
can_eq_nc
  [W] cobox_asD :: Table ~ t_amN
  [[String]]
  Table
  t_amN
  t_amN
canEqTyVar
  t_amN
  [[String]]
  Is-swapped
Following bound tyvar t_amN = Table
newWantedEvVar/cache miss [W] cobox_aC2 :: Table ~ Table
setEvBind
  ev = cobox_asD
  tm  = CO Sym cobox_aC2
rewriteEqEvidence
  [W] cobox_asD :: Table ~ t_amN
  Table
  Table
  Sym cobox_aC2
canEqTyVar2
  t_amN
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aC2 :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_aC2 :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_aC3 :: [String] ~ [String]
setEvBind
  ev = cobox_aC2
  tm  = CO [cobox_aC3]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_aC3 :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aC4 :: String ~ String
setEvBind
  ev = cobox_aC3
  tm  = CO [cobox_aC4]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aC4 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aC4 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aC4 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aC5 :: Char ~ Char
setEvBind
  ev = cobox_aC4
  tm  = CO [cobox_aC5]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aC5 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aC5
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asF :: [a_asE]
                                ~ t_amS [" a type equality [a_asE]
                                                           ~
                                                           t_amS " FQL.hs:38:26-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asF :: [a_asE]
                                 ~ t_amS [" a type equality [a_asE]
                                                            ~
                                                            t_amS " FQL.hs:38:26-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asF :: [a_asE] ~ t_amS [" a type equality [a_asE]
                                                      ~
                                                      t_amS " FQL.hs:38:26-65] (CNonCanonical)
canEvNC:eq
  [a_asE]
  t_amS
can_eq_nc
  [W] cobox_asF :: [a_asE] ~ t_amS
  [a_asE]
  [a_asE]
  t_amS
  t_amS
canEqTyVar
  t_amS
  [a_asE]
  Is-swapped
Following bound tyvar t_amS = [String]
newWantedEvVar/cache miss [W] cobox_aC6 :: [String] ~ [a_asE]
setEvBind
  ev = cobox_asF
  tm  = CO Sym cobox_aC6
rewriteEqEvidence
  [W] cobox_asF :: [a_asE] ~ t_amS
  [String]
  [a_asE]
  Sym cobox_aC6
canEqTyVar2
  t_amS
  [a_asE]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aC6 :: [String] ~ [a_asE]
  [String]
  [String]
  [a_asE]
  [a_asE]
newWantedEvVar/cache miss [W] cobox_aC7 :: String ~ a_asE
setEvBind
  ev = cobox_aC6
  tm  = CO [cobox_aC7]_N
canEvNC:eq
  String
  a_asE
can_eq_nc
  [W] cobox_aC7 :: String ~ a_asE
  String
  String
  a_asE
  a_asE
can_eq_nc
  [W] cobox_aC7 :: String ~ a_asE
  [Char]
  String
  a_asE
  a_asE
canEqTyVar
  a_asE
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aC8 :: a_asE ~ String
setEvBind
  ev = cobox_aC7
  tm  = CO Sym cobox_aC8
rewriteEqEvidence
  [W] cobox_aC7 :: String ~ a_asE
  a_asE
  String
  Sym cobox_aC8
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aC8 :: a_asE
                                 ~ String [" a type equality [a_asE]
                                                             ~
                                                             t_amS " FQL.hs:38:26-65] (CTyEqCan)
Sneaky unification:
  Unifies: a_asE := String
  Coercion: a_asE ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asE := String
setEvBind
  ev = cobox_aC8
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_asE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
134[<C:0,F:0>] [W] cobox_aC8 :: a_asE
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asG :: t_asm
                                ~ a_asE [" a type equality t_asm
                                                           ~
                                                           a_asE " FQL.hs:38:26-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asG :: t_asm
                                 ~ a_asE [" a type equality t_asm
                                                            ~
                                                            a_asE " FQL.hs:38:26-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asG :: t_asm ~ a_asE [" a type equality t_asm
                                                    ~
                                                    a_asE " FQL.hs:38:26-28] (CNonCanonical)
canEvNC:eq
  t_asm
  a_asE
can_eq_nc
  [W] cobox_asG :: t_asm ~ a_asE
  t_asm
  t_asm
  a_asE
  a_asE
canEqTyVar
  t_asm
  a_asE
  Not-swapped
Following bound tyvar t_asm = b_asq
canEqTyVar2
  t_asm
  a_asE
  Not-swapped
  b_asq
  <b_asq>_N
can_eq_nc
  [W] cobox_asG :: b_asq ~ a_asE
  b_asq
  b_asq
  a_asE
  a_asE
canEqTyVar
  b_asq
  a_asE
  Not-swapped
Following bound tyvar b_asq = [a_ass]
canEqTyVar2
  b_asq
  a_asE
  Not-swapped
  [a_ass]
  <[a_ass]>_N
can_eq_nc
  [W] cobox_asG :: [a_ass] ~ a_asE
  [a_ass]
  [a_ass]
  a_asE
  a_asE
canEqTyVar
  a_asE
  [a_ass]
  Is-swapped
Following bound tyvar a_asE = String
newWantedEvVar/cache miss [W] cobox_aC9 :: String ~ [a_ass]
setEvBind
  ev = cobox_asG
  tm  = CO Sym cobox_aC9
rewriteEqEvidence
  [W] cobox_asG :: [a_ass] ~ a_asE
  String
  [a_ass]
  Sym cobox_aC9
canEqTyVar2
  a_asE
  [a_ass]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aC9 :: String ~ [a_ass]
  String
  String
  [a_ass]
  [a_ass]
can_eq_nc
  [W] cobox_aC9 :: String ~ [a_ass]
  [Char]
  String
  [a_ass]
  [a_ass]
newWantedEvVar/cache miss [W] cobox_aCa :: Char ~ a_ass
setEvBind
  ev = cobox_aC9
  tm  = CO [cobox_aCa]_N
canEvNC:eq
  Char
  a_ass
can_eq_nc
  [W] cobox_aCa :: Char ~ a_ass
  Char
  Char
  a_ass
  a_ass
canEqTyVar
  a_ass
  Char
  Is-swapped
Following bound tyvar a_ass = a_asu
newWantedEvVar/cache miss [W] cobox_aCb :: a_asu ~ Char
setEvBind
  ev = cobox_aCa
  tm  = CO Sym cobox_aCb
rewriteEqEvidence
  [W] cobox_aCa :: Char ~ a_ass
  a_asu
  Char
  Sym cobox_aCb
canEqTyVar2
  a_ass
  Char
  Is-swapped
  a_asu
  <a_asu>_N
can_eq_nc
  [W] cobox_aCb :: a_asu ~ Char
  a_asu
  a_asu
  Char
  Char
canEqTyVar
  a_asu
  Char
  Not-swapped
Following bound tyvar a_asu = Char
canEqTyVar2
  a_asu
  Char
  Not-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aCb :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCb
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asI :: [a_asH]
                                ~ [a_asE] [" a type equality [a_asH]
                                                             ~
                                                             [a_asE] " FQL.hs:38:32-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asI :: [a_asH]
                                 ~ [a_asE] [" a type equality [a_asH]
                                                              ~
                                                              [a_asE] " FQL.hs:38:32-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asI :: [a_asH] ~ [a_asE] [" a type equality [a_asH]
                                                        ~
                                                        [a_asE] " FQL.hs:38:32-65] (CNonCanonical)
canEvNC:eq
  [a_asH]
  [a_asE]
can_eq_nc
  [W] cobox_asI :: [a_asH] ~ [a_asE]
  [a_asH]
  [a_asH]
  [a_asE]
  [a_asE]
newWantedEvVar/cache miss [W] cobox_aCc :: a_asH ~ a_asE
setEvBind
  ev = cobox_asI
  tm  = CO [cobox_aCc]_N
canEvNC:eq
  a_asH
  a_asE
can_eq_nc
  [W] cobox_aCc :: a_asH ~ a_asE
  a_asH
  a_asH
  a_asE
  a_asE
canEqTyVar
  a_asH
  a_asE
  Not-swapped
Following bound tyvar a_asE = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCc :: a_asH
                                 ~ String [" a type equality [a_asH]
                                                             ~
                                                             [a_asE] " FQL.hs:38:32-65] (CTyEqCan)
Sneaky unification:
  Unifies: a_asH := String
  Coercion: a_asH ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asH := String
setEvBind
  ev = cobox_aCc
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_asH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
136[<C:0,F:0>] [W] cobox_aCc :: a_asH
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asL :: a_asK
                                ~ a_asH [" a type equality a_asK
                                                           ~
                                                           a_asH " FQL.hs:38:32-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asL :: a_asK
                                 ~ a_asH [" a type equality a_asK
                                                            ~
                                                            a_asH " FQL.hs:38:32-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asL :: a_asK ~ a_asH [" a type equality a_asK
                                                    ~
                                                    a_asH " FQL.hs:38:32-39] (CNonCanonical)
canEvNC:eq
  a_asK
  a_asH
can_eq_nc
  [W] cobox_asL :: a_asK ~ a_asH
  a_asK
  a_asK
  a_asH
  a_asH
canEqTyVar
  a_asK
  a_asH
  Not-swapped
Following bound tyvar a_asH = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asL :: a_asK
                                 ~ String [" a type equality a_asK
                                                             ~
                                                             a_asH " FQL.hs:38:32-39] (CTyEqCan)
Sneaky unification:
  Unifies: a_asK := String
  Coercion: a_asK ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asK := String
setEvBind
  ev = cobox_asL
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_asK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
137[<C:0,F:0>] [W] cobox_asL :: a_asK
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asM :: t_asj
                                ~ [a_asK] [" a type equality t_asj
                                                             ~
                                                             [a_asK] " FQL.hs:38:37-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asM :: t_asj
                                 ~ [a_asK] [" a type equality t_asj
                                                              ~
                                                              [a_asK] " FQL.hs:38:37-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asM :: t_asj ~ [a_asK] [" a type equality t_asj
                                                      ~
                                                      [a_asK] " FQL.hs:38:37-38] (CNonCanonical)
canEvNC:eq
  t_asj
  [a_asK]
can_eq_nc
  [W] cobox_asM :: t_asj ~ [a_asK]
  t_asj
  t_asj
  [a_asK]
  [a_asK]
canEqTyVar
  t_asj
  [a_asK]
  Not-swapped
Following bound tyvar t_asj = [String]
canEqTyVar2
  t_asj
  [a_asK]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_asM :: [String] ~ [a_asK]
  [String]
  [String]
  [a_asK]
  [a_asK]
newWantedEvVar/cache miss [W] cobox_aCd :: String ~ a_asK
setEvBind
  ev = cobox_asM
  tm  = CO [cobox_aCd]_N
canEvNC:eq
  String
  a_asK
can_eq_nc
  [W] cobox_aCd :: String ~ a_asK
  String
  String
  a_asK
  a_asK
can_eq_nc
  [W] cobox_aCd :: String ~ a_asK
  [Char]
  String
  a_asK
  a_asK
canEqTyVar
  a_asK
  [Char]
  Is-swapped
Following bound tyvar a_asK = String
newWantedEvVar/cache miss [W] cobox_aCe :: String ~ String
setEvBind
  ev = cobox_aCd
  tm  = CO Sym cobox_aCe
rewriteEqEvidence
  [W] cobox_aCd :: String ~ a_asK
  String
  String
  Sym cobox_aCe
canEqTyVar2
  a_asK
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCe :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aCe :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aCf :: Char ~ Char
setEvBind
  ev = cobox_aCe
  tm  = CO [cobox_aCf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asO :: [a_asN]
                                ~ [a_asH] [" a type equality [a_asN]
                                                             ~
                                                             [a_asH] " FQL.hs:38:43-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asO :: [a_asN]
                                 ~ [a_asH] [" a type equality [a_asN]
                                                              ~
                                                              [a_asH] " FQL.hs:38:43-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asO :: [a_asN] ~ [a_asH] [" a type equality [a_asN]
                                                        ~
                                                        [a_asH] " FQL.hs:38:43-65] (CNonCanonical)
canEvNC:eq
  [a_asN]
  [a_asH]
can_eq_nc
  [W] cobox_asO :: [a_asN] ~ [a_asH]
  [a_asN]
  [a_asN]
  [a_asH]
  [a_asH]
newWantedEvVar/cache miss [W] cobox_aCg :: a_asN ~ a_asH
setEvBind
  ev = cobox_asO
  tm  = CO [cobox_aCg]_N
canEvNC:eq
  a_asN
  a_asH
can_eq_nc
  [W] cobox_aCg :: a_asN ~ a_asH
  a_asN
  a_asN
  a_asH
  a_asH
canEqTyVar
  a_asN
  a_asH
  Not-swapped
Following bound tyvar a_asH = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCg :: a_asN
                                 ~ String [" a type equality [a_asN]
                                                             ~
                                                             [a_asH] " FQL.hs:38:43-65] (CTyEqCan)
Sneaky unification:
  Unifies: a_asN := String
  Coercion: a_asN ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asN := String
setEvBind
  ev = cobox_aCg
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_asN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
139[<C:0,F:0>] [W] cobox_aCg :: a_asN
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asP :: t_asm
                                ~ a_asN [" a type equality t_asm
                                                           ~
                                                           a_asN " FQL.hs:38:43-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asP :: t_asm
                                 ~ a_asN [" a type equality t_asm
                                                            ~
                                                            a_asN " FQL.hs:38:43-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asP :: t_asm ~ a_asN [" a type equality t_asm
                                                    ~
                                                    a_asN " FQL.hs:38:43-45] (CNonCanonical)
canEvNC:eq
  t_asm
  a_asN
can_eq_nc
  [W] cobox_asP :: t_asm ~ a_asN
  t_asm
  t_asm
  a_asN
  a_asN
canEqTyVar
  t_asm
  a_asN
  Not-swapped
Following bound tyvar t_asm = b_asq
canEqTyVar2
  t_asm
  a_asN
  Not-swapped
  b_asq
  <b_asq>_N
can_eq_nc
  [W] cobox_asP :: b_asq ~ a_asN
  b_asq
  b_asq
  a_asN
  a_asN
canEqTyVar
  b_asq
  a_asN
  Not-swapped
Following bound tyvar b_asq = [a_ass]
canEqTyVar2
  b_asq
  a_asN
  Not-swapped
  [a_ass]
  <[a_ass]>_N
can_eq_nc
  [W] cobox_asP :: [a_ass] ~ a_asN
  [a_ass]
  [a_ass]
  a_asN
  a_asN
canEqTyVar
  a_asN
  [a_ass]
  Is-swapped
Following bound tyvar a_asN = String
newWantedEvVar/cache miss [W] cobox_aCh :: String ~ [a_ass]
setEvBind
  ev = cobox_asP
  tm  = CO Sym cobox_aCh
rewriteEqEvidence
  [W] cobox_asP :: [a_ass] ~ a_asN
  String
  [a_ass]
  Sym cobox_aCh
canEqTyVar2
  a_asN
  [a_ass]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCh :: String ~ [a_ass]
  String
  String
  [a_ass]
  [a_ass]
can_eq_nc
  [W] cobox_aCh :: String ~ [a_ass]
  [Char]
  String
  [a_ass]
  [a_ass]
newWantedEvVar/cache miss [W] cobox_aCi :: Char ~ a_ass
setEvBind
  ev = cobox_aCh
  tm  = CO [cobox_aCi]_N
canEvNC:eq
  Char
  a_ass
can_eq_nc
  [W] cobox_aCi :: Char ~ a_ass
  Char
  Char
  a_ass
  a_ass
canEqTyVar
  a_ass
  Char
  Is-swapped
Following bound tyvar a_ass = a_asu
newWantedEvVar/cache miss [W] cobox_aCj :: a_asu ~ Char
setEvBind
  ev = cobox_aCi
  tm  = CO Sym cobox_aCj
rewriteEqEvidence
  [W] cobox_aCi :: Char ~ a_ass
  a_asu
  Char
  Sym cobox_aCj
canEqTyVar2
  a_ass
  Char
  Is-swapped
  a_asu
  <a_asu>_N
can_eq_nc
  [W] cobox_aCj :: a_asu ~ Char
  a_asu
  a_asu
  Char
  Char
canEqTyVar
  a_asu
  Char
  Not-swapped
Following bound tyvar a_asu = Char
canEqTyVar2
  a_asu
  Char
  Not-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aCj :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCj
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asR :: [a_asQ]
                                ~ [a_asN] [" a type equality [a_asQ]
                                                             ~
                                                             [a_asN] " FQL.hs:38:49-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asR :: [a_asQ]
                                 ~ [a_asN] [" a type equality [a_asQ]
                                                              ~
                                                              [a_asN] " FQL.hs:38:49-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asR :: [a_asQ] ~ [a_asN] [" a type equality [a_asQ]
                                                        ~
                                                        [a_asN] " FQL.hs:38:49-65] (CNonCanonical)
canEvNC:eq
  [a_asQ]
  [a_asN]
can_eq_nc
  [W] cobox_asR :: [a_asQ] ~ [a_asN]
  [a_asQ]
  [a_asQ]
  [a_asN]
  [a_asN]
newWantedEvVar/cache miss [W] cobox_aCk :: a_asQ ~ a_asN
setEvBind
  ev = cobox_asR
  tm  = CO [cobox_aCk]_N
canEvNC:eq
  a_asQ
  a_asN
can_eq_nc
  [W] cobox_aCk :: a_asQ ~ a_asN
  a_asQ
  a_asQ
  a_asN
  a_asN
canEqTyVar
  a_asQ
  a_asN
  Not-swapped
Following bound tyvar a_asN = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCk :: a_asQ
                                 ~ String [" a type equality [a_asQ]
                                                             ~
                                                             [a_asN] " FQL.hs:38:49-65] (CTyEqCan)
Sneaky unification:
  Unifies: a_asQ := String
  Coercion: a_asQ ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asQ := String
setEvBind
  ev = cobox_aCk
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_asQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
141[<C:0,F:0>] [W] cobox_aCk :: a_asQ
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asU :: [a_asT]
                                ~ [a_asQ] [" a type equality [a_asT]
                                                             ~
                                                             [a_asQ] " FQL.hs:38:49-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asU :: [a_asT]
                                 ~ [a_asQ] [" a type equality [a_asT]
                                                              ~
                                                              [a_asQ] " FQL.hs:38:49-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asU :: [a_asT] ~ [a_asQ] [" a type equality [a_asT]
                                                        ~
                                                        [a_asQ] " FQL.hs:38:49-56] (CNonCanonical)
canEvNC:eq
  [a_asT]
  [a_asQ]
can_eq_nc
  [W] cobox_asU :: [a_asT] ~ [a_asQ]
  [a_asT]
  [a_asT]
  [a_asQ]
  [a_asQ]
newWantedEvVar/cache miss [W] cobox_aCl :: a_asT ~ a_asQ
setEvBind
  ev = cobox_asU
  tm  = CO [cobox_aCl]_N
canEvNC:eq
  a_asT
  a_asQ
can_eq_nc
  [W] cobox_aCl :: a_asT ~ a_asQ
  a_asT
  a_asT
  a_asQ
  a_asQ
canEqTyVar
  a_asT
  a_asQ
  Not-swapped
Following bound tyvar a_asQ = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCl :: a_asT
                                 ~ String [" a type equality [a_asT]
                                                             ~
                                                             [a_asQ] " FQL.hs:38:49-56] (CTyEqCan)
Sneaky unification:
  Unifies: a_asT := String
  Coercion: a_asT ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asT := String
setEvBind
  ev = cobox_aCl
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_asT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
142[<C:0,F:0>] [W] cobox_aCl :: a_asT
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asV :: t_asj
                                ~ [a_asT] [" a type equality t_asj
                                                             ~
                                                             [a_asT] " FQL.hs:38:54-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asV :: t_asj
                                 ~ [a_asT] [" a type equality t_asj
                                                              ~
                                                              [a_asT] " FQL.hs:38:54-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asV :: t_asj ~ [a_asT] [" a type equality t_asj
                                                      ~
                                                      [a_asT] " FQL.hs:38:54-55] (CNonCanonical)
canEvNC:eq
  t_asj
  [a_asT]
can_eq_nc
  [W] cobox_asV :: t_asj ~ [a_asT]
  t_asj
  t_asj
  [a_asT]
  [a_asT]
canEqTyVar
  t_asj
  [a_asT]
  Not-swapped
Following bound tyvar t_asj = [String]
canEqTyVar2
  t_asj
  [a_asT]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_asV :: [String] ~ [a_asT]
  [String]
  [String]
  [a_asT]
  [a_asT]
newWantedEvVar/cache miss [W] cobox_aCm :: String ~ a_asT
setEvBind
  ev = cobox_asV
  tm  = CO [cobox_aCm]_N
canEvNC:eq
  String
  a_asT
can_eq_nc
  [W] cobox_aCm :: String ~ a_asT
  String
  String
  a_asT
  a_asT
can_eq_nc
  [W] cobox_aCm :: String ~ a_asT
  [Char]
  String
  a_asT
  a_asT
canEqTyVar
  a_asT
  [Char]
  Is-swapped
Following bound tyvar a_asT = String
newWantedEvVar/cache miss [W] cobox_aCn :: String ~ String
setEvBind
  ev = cobox_aCm
  tm  = CO Sym cobox_aCn
rewriteEqEvidence
  [W] cobox_aCm :: String ~ a_asT
  String
  String
  Sym cobox_aCn
canEqTyVar2
  a_asT
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCn :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aCn :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aCo :: Char ~ Char
setEvBind
  ev = cobox_aCn
  tm  = CO [cobox_aCo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asW :: t_asm
                                ~ a_asQ [" a type equality t_asm
                                                           ~
                                                           a_asQ " FQL.hs:38:62-64] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asW :: t_asm
                                 ~ a_asQ [" a type equality t_asm
                                                            ~
                                                            a_asQ " FQL.hs:38:62-64] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asW :: t_asm ~ a_asQ [" a type equality t_asm
                                                    ~
                                                    a_asQ " FQL.hs:38:62-64] (CNonCanonical)
canEvNC:eq
  t_asm
  a_asQ
can_eq_nc
  [W] cobox_asW :: t_asm ~ a_asQ
  t_asm
  t_asm
  a_asQ
  a_asQ
canEqTyVar
  t_asm
  a_asQ
  Not-swapped
Following bound tyvar t_asm = b_asq
canEqTyVar2
  t_asm
  a_asQ
  Not-swapped
  b_asq
  <b_asq>_N
can_eq_nc
  [W] cobox_asW :: b_asq ~ a_asQ
  b_asq
  b_asq
  a_asQ
  a_asQ
canEqTyVar
  b_asq
  a_asQ
  Not-swapped
Following bound tyvar b_asq = [a_ass]
canEqTyVar2
  b_asq
  a_asQ
  Not-swapped
  [a_ass]
  <[a_ass]>_N
can_eq_nc
  [W] cobox_asW :: [a_ass] ~ a_asQ
  [a_ass]
  [a_ass]
  a_asQ
  a_asQ
canEqTyVar
  a_asQ
  [a_ass]
  Is-swapped
Following bound tyvar a_asQ = String
newWantedEvVar/cache miss [W] cobox_aCp :: String ~ [a_ass]
setEvBind
  ev = cobox_asW
  tm  = CO Sym cobox_aCp
rewriteEqEvidence
  [W] cobox_asW :: [a_ass] ~ a_asQ
  String
  [a_ass]
  Sym cobox_aCp
canEqTyVar2
  a_asQ
  [a_ass]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCp :: String ~ [a_ass]
  String
  String
  [a_ass]
  [a_ass]
can_eq_nc
  [W] cobox_aCp :: String ~ [a_ass]
  [Char]
  String
  [a_ass]
  [a_ass]
newWantedEvVar/cache miss [W] cobox_aCq :: Char ~ a_ass
setEvBind
  ev = cobox_aCp
  tm  = CO [cobox_aCq]_N
canEvNC:eq
  Char
  a_ass
can_eq_nc
  [W] cobox_aCq :: Char ~ a_ass
  Char
  Char
  a_ass
  a_ass
canEqTyVar
  a_ass
  Char
  Is-swapped
Following bound tyvar a_ass = a_asu
newWantedEvVar/cache miss [W] cobox_aCr :: a_asu ~ Char
setEvBind
  ev = cobox_aCq
  tm  = CO Sym cobox_aCr
rewriteEqEvidence
  [W] cobox_aCq :: Char ~ a_ass
  a_asu
  Char
  Sym cobox_aCr
canEqTyVar2
  a_ass
  Char
  Is-swapped
  a_asu
  <a_asu>_N
can_eq_nc
  [W] cobox_aCr :: a_asu ~ Char
  a_asu
  a_asu
  Char
  Char
canEqTyVar
  a_asu
  Char
  Not-swapped
Following bound tyvar a_asu = Char
canEqTyVar2
  a_asu
  Char
  Not-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aCr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_at1 :: (a_at0 -> c_asZ)
                                ~ (t_amV -> t_amW) [" a type equality a_at0 -> c_asZ
                                                                      ~
                                                                      t_amV
                                                                      -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_at1 :: (a_at0 -> c_asZ)
                                 ~ (t_amV -> t_amW) [" a type equality a_at0 -> c_asZ
                                                                       ~
                                                                       t_amV
                                                                       -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_at1 :: (a_at0 -> c_asZ)
                   ~ (t_amV -> t_amW) [" a type equality a_at0 -> c_asZ
                                                         ~
                                                         t_amV
                                                         -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
canEvNC:eq
  a_at0 -> c_asZ
  t_amV -> t_amW
can_eq_nc
  [W] cobox_at1 :: (a_at0 -> c_asZ) ~ (t_amV -> t_amW)
  a_at0 -> c_asZ
  a_at0 -> c_asZ
  t_amV -> t_amW
  t_amV -> t_amW
newWantedEvVar/cache miss [W] cobox_aCs :: a_at0 ~ t_amV
newWantedEvVar/cache miss [W] cobox_aCt :: c_asZ ~ t_amW
setEvBind
  ev = cobox_at1
  tm  = CO cobox_aCs -> cobox_aCt
canEvNC:eq
  a_at0
  t_amV
can_eq_nc
  [W] cobox_aCs :: a_at0 ~ t_amV
  a_at0
  a_at0
  t_amV
  t_amV
canEqTyVar
  a_at0
  t_amV
  Not-swapped
Following bound tyvar t_amV = Table
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCs :: a_at0
                                 ~ Table [" a type equality a_at0 -> c_asZ
                                                            ~
                                                            t_amV
                                                            -> t_amW " FQL.hs:34:14-37] (CTyEqCan)
Sneaky unification:
  Unifies: a_at0 := Table
  Coercion: a_at0 ~ Table
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_at0 := Table
setEvBind
  ev = cobox_aCs
  tm  = CO <Table>_N
kickOutRewritable
  tv =  a_at0
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
145[<C:0,F:0>] [W] cobox_aCs :: a_at0 ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCt :: c_asZ
                                ~ t_amW [" a type equality a_at0 -> c_asZ
                                                           ~
                                                           t_amV
                                                           -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCt :: c_asZ
                                 ~ t_amW [" a type equality a_at0 -> c_asZ
                                                            ~
                                                            t_amV
                                                            -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCt :: c_asZ ~ t_amW [" a type equality a_at0 -> c_asZ
                                                    ~
                                                    t_amV
                                                    -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
canEvNC:eq
  c_asZ
  t_amW
can_eq_nc
  [W] cobox_aCt :: c_asZ ~ t_amW
  c_asZ
  c_asZ
  t_amW
  t_amW
canEqTyVar
  c_asZ
  t_amW
  Not-swapped
Following bound tyvar t_amW = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCt :: c_asZ
                                 ~ String [" a type equality a_at0 -> c_asZ
                                                             ~
                                                             t_amV
                                                             -> t_amW " FQL.hs:34:14-37] (CTyEqCan)
Sneaky unification:
  Unifies: c_asZ := String
  Coercion: c_asZ ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind c_asZ := String
setEvBind
  ev = cobox_aCt
  tm  = CO <String>_N
kickOutRewritable
  tv =  c_asZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
146[<C:0,F:0>] [W] cobox_aCt :: c_asZ
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_at2 :: ([String] -> String)
                                ~ (b_asY -> c_asZ) [" a type equality [String] -> String
                                                                      ~
                                                                      b_asY
                                                                      -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_at2 :: ([String] -> String)
                                 ~ (b_asY -> c_asZ) [" a type equality [String] -> String
                                                                       ~
                                                                       b_asY
                                                                       -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_at2 :: ([String] -> String)
                   ~ (b_asY -> c_asZ) [" a type equality [String] -> String
                                                         ~
                                                         b_asY
                                                         -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
canEvNC:eq
  [String] -> String
  b_asY -> c_asZ
can_eq_nc
  [W] cobox_at2 :: ([String] -> String) ~ (b_asY -> c_asZ)
  [String] -> String
  [String] -> String
  b_asY -> c_asZ
  b_asY -> c_asZ
newWantedEvVar/cache miss [W] cobox_aCu :: [String] ~ b_asY
newWantedEvVar/cache miss [W] cobox_aCv :: String ~ c_asZ
setEvBind
  ev = cobox_at2
  tm  = CO cobox_aCu -> cobox_aCv
canEvNC:eq
  [String]
  b_asY
can_eq_nc
  [W] cobox_aCu :: [String] ~ b_asY
  [String]
  [String]
  b_asY
  b_asY
canEqTyVar
  b_asY
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aCw :: b_asY ~ [String]
setEvBind
  ev = cobox_aCu
  tm  = CO Sym cobox_aCw
rewriteEqEvidence
  [W] cobox_aCu :: [String] ~ b_asY
  b_asY
  [String]
  Sym cobox_aCw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCw :: b_asY
                                 ~ [String] [" a type equality [String] -> String
                                                               ~
                                                               b_asY
                                                               -> c_asZ " FQL.hs:34:14-20] (CTyEqCan)
Sneaky unification:
  Unifies: b_asY := [String]
  Coercion: b_asY ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_asY := [String]
setEvBind
  ev = cobox_aCw
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  b_asY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
147[<C:0,F:0>] [W] cobox_aCw :: b_asY
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCv :: String
                                ~ c_asZ [" a type equality [String] -> String
                                                           ~
                                                           b_asY
                                                           -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCv :: String
                                 ~ c_asZ [" a type equality [String] -> String
                                                            ~
                                                            b_asY
                                                            -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCv :: String ~ c_asZ [" a type equality [String]
                                                     -> String
                                                     ~
                                                     b_asY
                                                     -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
canEvNC:eq
  String
  c_asZ
can_eq_nc
  [W] cobox_aCv :: String ~ c_asZ
  String
  String
  c_asZ
  c_asZ
can_eq_nc
  [W] cobox_aCv :: String ~ c_asZ
  [Char]
  String
  c_asZ
  c_asZ
canEqTyVar
  c_asZ
  [Char]
  Is-swapped
Following bound tyvar c_asZ = String
newWantedEvVar/cache miss [W] cobox_aCx :: String ~ String
setEvBind
  ev = cobox_aCv
  tm  = CO Sym cobox_aCx
rewriteEqEvidence
  [W] cobox_aCv :: String ~ c_asZ
  String
  String
  Sym cobox_aCx
canEqTyVar2
  c_asZ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCx :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aCx :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aCy :: Char ~ Char
setEvBind
  ev = cobox_aCx
  tm  = CO [cobox_aCy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_at3 :: (t_amR -> t_amS)
                                ~ (a_at0 -> b_asY) [" a type equality t_amR -> t_amS
                                                                      ~
                                                                      a_at0
                                                                      -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_at3 :: (t_amR -> t_amS)
                                 ~ (a_at0 -> b_asY) [" a type equality t_amR -> t_amS
                                                                       ~
                                                                       a_at0
                                                                       -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_at3 :: (t_amR -> t_amS)
                   ~ (a_at0 -> b_asY) [" a type equality t_amR -> t_amS
                                                         ~
                                                         a_at0
                                                         -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
canEvNC:eq
  t_amR -> t_amS
  a_at0 -> b_asY
can_eq_nc
  [W] cobox_at3 :: (t_amR -> t_amS) ~ (a_at0 -> b_asY)
  t_amR -> t_amS
  t_amR -> t_amS
  a_at0 -> b_asY
  a_at0 -> b_asY
newWantedEvVar/cache miss [W] cobox_aCz :: t_amR ~ a_at0
newWantedEvVar/cache miss [W] cobox_aCA :: t_amS ~ b_asY
setEvBind
  ev = cobox_at3
  tm  = CO cobox_aCz -> cobox_aCA
canEvNC:eq
  t_amR
  a_at0
can_eq_nc
  [W] cobox_aCz :: t_amR ~ a_at0
  t_amR
  t_amR
  a_at0
  a_at0
canEqTyVar
  t_amR
  a_at0
  Not-swapped
Following bound tyvar t_amR = Table
canEqTyVar2
  t_amR
  a_at0
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aCz :: Table ~ a_at0
  Table
  Table
  a_at0
  a_at0
can_eq_nc
  [W] cobox_aCz :: Table ~ a_at0
  [[String]]
  Table
  a_at0
  a_at0
canEqTyVar
  a_at0
  [[String]]
  Is-swapped
Following bound tyvar a_at0 = Table
newWantedEvVar/cache miss [W] cobox_aCB :: Table ~ Table
setEvBind
  ev = cobox_aCz
  tm  = CO Sym cobox_aCB
rewriteEqEvidence
  [W] cobox_aCz :: Table ~ a_at0
  Table
  Table
  Sym cobox_aCB
canEqTyVar2
  a_at0
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aCB :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_aCB :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_aCC :: [String] ~ [String]
setEvBind
  ev = cobox_aCB
  tm  = CO [cobox_aCC]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_aCC :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aCD :: String ~ String
setEvBind
  ev = cobox_aCC
  tm  = CO [cobox_aCD]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aCD :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aCD :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aCD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aCE :: Char ~ Char
setEvBind
  ev = cobox_aCD
  tm  = CO [cobox_aCE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCA :: t_amS
                                ~ b_asY [" a type equality t_amR -> t_amS
                                                           ~
                                                           a_at0
                                                           -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCA :: t_amS
                                 ~ b_asY [" a type equality t_amR -> t_amS
                                                            ~
                                                            a_at0
                                                            -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCA :: t_amS ~ b_asY [" a type equality t_amR -> t_amS
                                                    ~
                                                    a_at0
                                                    -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
canEvNC:eq
  t_amS
  b_asY
can_eq_nc
  [W] cobox_aCA :: t_amS ~ b_asY
  t_amS
  t_amS
  b_asY
  b_asY
canEqTyVar
  t_amS
  b_asY
  Not-swapped
Following bound tyvar t_amS = [String]
canEqTyVar2
  t_amS
  b_asY
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aCA :: [String] ~ b_asY
  [String]
  [String]
  b_asY
  b_asY
canEqTyVar
  b_asY
  [String]
  Is-swapped
Following bound tyvar b_asY = [String]
newWantedEvVar/cache miss [W] cobox_aCF :: [String] ~ [String]
setEvBind
  ev = cobox_aCA
  tm  = CO Sym cobox_aCF
rewriteEqEvidence
  [W] cobox_aCA :: [String] ~ b_asY
  [String]
  [String]
  Sym cobox_aCF
canEqTyVar2
  b_asY
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aCF :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aCG :: String ~ String
setEvBind
  ev = cobox_aCF
  tm  = CO [cobox_aCG]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aCG :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aCG :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aCG :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aCH :: Char ~ Char
setEvBind
  ev = cobox_aCG
  tm  = CO [cobox_aCH]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCH :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCH
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_at6 :: [t_at5]
                                ~ t_amZ [" a type equality [t_at5]
                                                           ~
                                                           t_amZ " FQL.hs:(22,3)-(29,3)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_at6 :: [t_at5]
                                 ~ t_amZ [" a type equality [t_at5]
                                                            ~
                                                            t_amZ " FQL.hs:(22,3)-(29,3)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_at6 :: [t_at5] ~ t_amZ [" a type equality [t_at5]
                                                      ~
                                                      t_amZ " FQL.hs:(22,3)-(29,3)] (CNonCanonical)
canEvNC:eq
  [t_at5]
  t_amZ
can_eq_nc
  [W] cobox_at6 :: [t_at5] ~ t_amZ
  [t_at5]
  [t_at5]
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [t_at5]
  Is-swapped
Following bound tyvar t_amZ = Table
newWantedEvVar/cache miss [W] cobox_aCI :: Table ~ [t_at5]
setEvBind
  ev = cobox_at6
  tm  = CO Sym cobox_aCI
rewriteEqEvidence
  [W] cobox_at6 :: [t_at5] ~ t_amZ
  Table
  [t_at5]
  Sym cobox_aCI
canEqTyVar2
  t_amZ
  [t_at5]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aCI :: Table ~ [t_at5]
  Table
  Table
  [t_at5]
  [t_at5]
can_eq_nc
  [W] cobox_aCI :: Table ~ [t_at5]
  [[String]]
  Table
  [t_at5]
  [t_at5]
newWantedEvVar/cache miss [W] cobox_aCJ :: [String] ~ t_at5
setEvBind
  ev = cobox_aCI
  tm  = CO [cobox_aCJ]_N
canEvNC:eq
  [String]
  t_at5
can_eq_nc
  [W] cobox_aCJ :: [String] ~ t_at5
  [String]
  [String]
  t_at5
  t_at5
canEqTyVar
  t_at5
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aCK :: t_at5 ~ [String]
setEvBind
  ev = cobox_aCJ
  tm  = CO Sym cobox_aCK
rewriteEqEvidence
  [W] cobox_aCJ :: [String] ~ t_at5
  t_at5
  [String]
  Sym cobox_aCK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCK :: t_at5
                                 ~ [String] [" a type equality [t_at5]
                                                               ~
                                                               t_amZ " FQL.hs:(22,3)-(29,3)] (CTyEqCan)
Sneaky unification:
  Unifies: t_at5 := [String]
  Coercion: t_at5 ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_at5 := [String]
setEvBind
  ev = cobox_aCK
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_at5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
151[<C:0,F:0>] [W] cobox_aCK :: t_at5
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_at8 :: [t_at7]
                                ~ t_at5 [" a type equality [t_at7]
                                                           ~
                                                           t_at5 " FQL.hs:22:5-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_at8 :: [t_at7]
                                 ~ t_at5 [" a type equality [t_at7]
                                                            ~
                                                            t_at5 " FQL.hs:22:5-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_at8 :: [t_at7] ~ t_at5 [" a type equality [t_at7]
                                                      ~
                                                      t_at5 " FQL.hs:22:5-44] (CNonCanonical)
canEvNC:eq
  [t_at7]
  t_at5
can_eq_nc
  [W] cobox_at8 :: [t_at7] ~ t_at5
  [t_at7]
  [t_at7]
  t_at5
  t_at5
canEqTyVar
  t_at5
  [t_at7]
  Is-swapped
Following bound tyvar t_at5 = [String]
newWantedEvVar/cache miss [W] cobox_aCL :: [String] ~ [t_at7]
setEvBind
  ev = cobox_at8
  tm  = CO Sym cobox_aCL
rewriteEqEvidence
  [W] cobox_at8 :: [t_at7] ~ t_at5
  [String]
  [t_at7]
  Sym cobox_aCL
canEqTyVar2
  t_at5
  [t_at7]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aCL :: [String] ~ [t_at7]
  [String]
  [String]
  [t_at7]
  [t_at7]
newWantedEvVar/cache miss [W] cobox_aCM :: String ~ t_at7
setEvBind
  ev = cobox_aCL
  tm  = CO [cobox_aCM]_N
canEvNC:eq
  String
  t_at7
can_eq_nc
  [W] cobox_aCM :: String ~ t_at7
  String
  String
  t_at7
  t_at7
can_eq_nc
  [W] cobox_aCM :: String ~ t_at7
  [Char]
  String
  t_at7
  t_at7
canEqTyVar
  t_at7
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aCN :: t_at7 ~ String
setEvBind
  ev = cobox_aCM
  tm  = CO Sym cobox_aCN
rewriteEqEvidence
  [W] cobox_aCM :: String ~ t_at7
  t_at7
  String
  Sym cobox_aCN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCN :: t_at7
                                 ~ String [" a type equality [t_at7]
                                                             ~
                                                             t_at5 " FQL.hs:22:5-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_at7 := String
  Coercion: t_at7 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_at7 := String
setEvBind
  ev = cobox_aCN
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_at7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
152[<C:0,F:0>] [W] cobox_aCN :: t_at7
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_at9 :: [Char]
                                ~ t_at7 [" a type equality [Char]
                                                           ~
                                                           t_at7 " FQL.hs:22:6-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_at9 :: [Char]
                                 ~ t_at7 [" a type equality [Char]
                                                            ~
                                                            t_at7 " FQL.hs:22:6-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_at9 :: [Char] ~ t_at7 [" a type equality [Char]
                                                     ~
                                                     t_at7 " FQL.hs:22:6-27] (CNonCanonical)
canEvNC:eq
  [Char]
  t_at7
can_eq_nc
  [W] cobox_at9 :: [Char] ~ t_at7
  [Char]
  [Char]
  t_at7
  t_at7
canEqTyVar
  t_at7
  [Char]
  Is-swapped
Following bound tyvar t_at7 = String
newWantedEvVar/cache miss [W] cobox_aCO :: String ~ [Char]
setEvBind
  ev = cobox_at9
  tm  = CO Sym cobox_aCO
rewriteEqEvidence
  [W] cobox_at9 :: [Char] ~ t_at7
  String
  [Char]
  Sym cobox_aCO
canEqTyVar2
  t_at7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCO :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aCO :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aCP :: Char ~ Char
setEvBind
  ev = cobox_aCO
  tm  = CO [cobox_aCP]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCP :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCP
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ata :: [Char]
                                ~ t_at7 [" a type equality [Char]
                                                           ~
                                                           t_at7 " FQL.hs:22:30-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ata :: [Char]
                                 ~ t_at7 [" a type equality [Char]
                                                            ~
                                                            t_at7 " FQL.hs:22:30-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ata :: [Char] ~ t_at7 [" a type equality [Char]
                                                     ~
                                                     t_at7 " FQL.hs:22:30-35] (CNonCanonical)
canEvNC:eq
  [Char]
  t_at7
can_eq_nc
  [W] cobox_ata :: [Char] ~ t_at7
  [Char]
  [Char]
  t_at7
  t_at7
canEqTyVar
  t_at7
  [Char]
  Is-swapped
Following bound tyvar t_at7 = String
newWantedEvVar/cache miss [W] cobox_aCQ :: String ~ [Char]
setEvBind
  ev = cobox_ata
  tm  = CO Sym cobox_aCQ
rewriteEqEvidence
  [W] cobox_ata :: [Char] ~ t_at7
  String
  [Char]
  Sym cobox_aCQ
canEqTyVar2
  t_at7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCQ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aCQ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aCR :: Char ~ Char
setEvBind
  ev = cobox_aCQ
  tm  = CO [cobox_aCR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atb :: [Char]
                                ~ t_at7 [" a type equality [Char]
                                                           ~
                                                           t_at7 " FQL.hs:22:38-43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atb :: [Char]
                                 ~ t_at7 [" a type equality [Char]
                                                            ~
                                                            t_at7 " FQL.hs:22:38-43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atb :: [Char] ~ t_at7 [" a type equality [Char]
                                                     ~
                                                     t_at7 " FQL.hs:22:38-43] (CNonCanonical)
canEvNC:eq
  [Char]
  t_at7
can_eq_nc
  [W] cobox_atb :: [Char] ~ t_at7
  [Char]
  [Char]
  t_at7
  t_at7
canEqTyVar
  t_at7
  [Char]
  Is-swapped
Following bound tyvar t_at7 = String
newWantedEvVar/cache miss [W] cobox_aCS :: String ~ [Char]
setEvBind
  ev = cobox_atb
  tm  = CO Sym cobox_aCS
rewriteEqEvidence
  [W] cobox_atb :: [Char] ~ t_at7
  String
  [Char]
  Sym cobox_aCS
canEqTyVar2
  t_at7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCS :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aCS :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aCT :: Char ~ Char
setEvBind
  ev = cobox_aCS
  tm  = CO [cobox_aCT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atd :: [t_atc]
                                ~ t_at5 [" a type equality [t_atc]
                                                           ~
                                                           t_at5 " FQL.hs:23:5-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atd :: [t_atc]
                                 ~ t_at5 [" a type equality [t_atc]
                                                            ~
                                                            t_at5 " FQL.hs:23:5-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atd :: [t_atc] ~ t_at5 [" a type equality [t_atc]
                                                      ~
                                                      t_at5 " FQL.hs:23:5-56] (CNonCanonical)
canEvNC:eq
  [t_atc]
  t_at5
can_eq_nc
  [W] cobox_atd :: [t_atc] ~ t_at5
  [t_atc]
  [t_atc]
  t_at5
  t_at5
canEqTyVar
  t_at5
  [t_atc]
  Is-swapped
Following bound tyvar t_at5 = [String]
newWantedEvVar/cache miss [W] cobox_aCU :: [String] ~ [t_atc]
setEvBind
  ev = cobox_atd
  tm  = CO Sym cobox_aCU
rewriteEqEvidence
  [W] cobox_atd :: [t_atc] ~ t_at5
  [String]
  [t_atc]
  Sym cobox_aCU
canEqTyVar2
  t_at5
  [t_atc]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aCU :: [String] ~ [t_atc]
  [String]
  [String]
  [t_atc]
  [t_atc]
newWantedEvVar/cache miss [W] cobox_aCV :: String ~ t_atc
setEvBind
  ev = cobox_aCU
  tm  = CO [cobox_aCV]_N
canEvNC:eq
  String
  t_atc
can_eq_nc
  [W] cobox_aCV :: String ~ t_atc
  String
  String
  t_atc
  t_atc
can_eq_nc
  [W] cobox_aCV :: String ~ t_atc
  [Char]
  String
  t_atc
  t_atc
canEqTyVar
  t_atc
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aCW :: t_atc ~ String
setEvBind
  ev = cobox_aCV
  tm  = CO Sym cobox_aCW
rewriteEqEvidence
  [W] cobox_aCV :: String ~ t_atc
  t_atc
  String
  Sym cobox_aCW
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aCW :: t_atc
                                 ~ String [" a type equality [t_atc]
                                                             ~
                                                             t_at5 " FQL.hs:23:5-56] (CTyEqCan)
Sneaky unification:
  Unifies: t_atc := String
  Coercion: t_atc ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atc := String
setEvBind
  ev = cobox_aCW
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
156[<C:0,F:0>] [W] cobox_aCW :: t_atc
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ate :: [Char]
                                ~ t_atc [" a type equality [Char]
                                                           ~
                                                           t_atc " FQL.hs:23:6-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ate :: [Char]
                                 ~ t_atc [" a type equality [Char]
                                                            ~
                                                            t_atc " FQL.hs:23:6-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ate :: [Char] ~ t_atc [" a type equality [Char]
                                                     ~
                                                     t_atc " FQL.hs:23:6-31] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atc
can_eq_nc
  [W] cobox_ate :: [Char] ~ t_atc
  [Char]
  [Char]
  t_atc
  t_atc
canEqTyVar
  t_atc
  [Char]
  Is-swapped
Following bound tyvar t_atc = String
newWantedEvVar/cache miss [W] cobox_aCX :: String ~ [Char]
setEvBind
  ev = cobox_ate
  tm  = CO Sym cobox_aCX
rewriteEqEvidence
  [W] cobox_ate :: [Char] ~ t_atc
  String
  [Char]
  Sym cobox_aCX
canEqTyVar2
  t_atc
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCX :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aCX :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aCY :: Char ~ Char
setEvBind
  ev = cobox_aCX
  tm  = CO [cobox_aCY]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aCY :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aCY
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atf :: [Char]
                                ~ t_atc [" a type equality [Char]
                                                           ~
                                                           t_atc " FQL.hs:23:34-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atf :: [Char]
                                 ~ t_atc [" a type equality [Char]
                                                            ~
                                                            t_atc " FQL.hs:23:34-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atf :: [Char] ~ t_atc [" a type equality [Char]
                                                     ~
                                                     t_atc " FQL.hs:23:34-44] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atc
can_eq_nc
  [W] cobox_atf :: [Char] ~ t_atc
  [Char]
  [Char]
  t_atc
  t_atc
canEqTyVar
  t_atc
  [Char]
  Is-swapped
Following bound tyvar t_atc = String
newWantedEvVar/cache miss [W] cobox_aCZ :: String ~ [Char]
setEvBind
  ev = cobox_atf
  tm  = CO Sym cobox_aCZ
rewriteEqEvidence
  [W] cobox_atf :: [Char] ~ t_atc
  String
  [Char]
  Sym cobox_aCZ
canEqTyVar2
  t_atc
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aCZ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aCZ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aD0 :: Char ~ Char
setEvBind
  ev = cobox_aCZ
  tm  = CO [cobox_aD0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aD0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aD0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atg :: [Char]
                                ~ t_atc [" a type equality [Char]
                                                           ~
                                                           t_atc " FQL.hs:23:47-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atg :: [Char]
                                 ~ t_atc [" a type equality [Char]
                                                            ~
                                                            t_atc " FQL.hs:23:47-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atg :: [Char] ~ t_atc [" a type equality [Char]
                                                     ~
                                                     t_atc " FQL.hs:23:47-55] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atc
can_eq_nc
  [W] cobox_atg :: [Char] ~ t_atc
  [Char]
  [Char]
  t_atc
  t_atc
canEqTyVar
  t_atc
  [Char]
  Is-swapped
Following bound tyvar t_atc = String
newWantedEvVar/cache miss [W] cobox_aD1 :: String ~ [Char]
setEvBind
  ev = cobox_atg
  tm  = CO Sym cobox_aD1
rewriteEqEvidence
  [W] cobox_atg :: [Char] ~ t_atc
  String
  [Char]
  Sym cobox_aD1
canEqTyVar2
  t_atc
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aD1 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aD1 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aD2 :: Char ~ Char
setEvBind
  ev = cobox_aD1
  tm  = CO [cobox_aD2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aD2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aD2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ati :: [t_ath]
                                ~ t_at5 [" a type equality [t_ath]
                                                           ~
                                                           t_at5 " FQL.hs:24:5-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ati :: [t_ath]
                                 ~ t_at5 [" a type equality [t_ath]
                                                            ~
                                                            t_at5 " FQL.hs:24:5-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ati :: [t_ath] ~ t_at5 [" a type equality [t_ath]
                                                      ~
                                                      t_at5 " FQL.hs:24:5-46] (CNonCanonical)
canEvNC:eq
  [t_ath]
  t_at5
can_eq_nc
  [W] cobox_ati :: [t_ath] ~ t_at5
  [t_ath]
  [t_ath]
  t_at5
  t_at5
canEqTyVar
  t_at5
  [t_ath]
  Is-swapped
Following bound tyvar t_at5 = [String]
newWantedEvVar/cache miss [W] cobox_aD3 :: [String] ~ [t_ath]
setEvBind
  ev = cobox_ati
  tm  = CO Sym cobox_aD3
rewriteEqEvidence
  [W] cobox_ati :: [t_ath] ~ t_at5
  [String]
  [t_ath]
  Sym cobox_aD3
canEqTyVar2
  t_at5
  [t_ath]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aD3 :: [String] ~ [t_ath]
  [String]
  [String]
  [t_ath]
  [t_ath]
newWantedEvVar/cache miss [W] cobox_aD4 :: String ~ t_ath
setEvBind
  ev = cobox_aD3
  tm  = CO [cobox_aD4]_N
canEvNC:eq
  String
  t_ath
can_eq_nc
  [W] cobox_aD4 :: String ~ t_ath
  String
  String
  t_ath
  t_ath
can_eq_nc
  [W] cobox_aD4 :: String ~ t_ath
  [Char]
  String
  t_ath
  t_ath
canEqTyVar
  t_ath
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aD5 :: t_ath ~ String
setEvBind
  ev = cobox_aD4
  tm  = CO Sym cobox_aD5
rewriteEqEvidence
  [W] cobox_aD4 :: String ~ t_ath
  t_ath
  String
  Sym cobox_aD5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aD5 :: t_ath
                                 ~ String [" a type equality [t_ath]
                                                             ~
                                                             t_at5 " FQL.hs:24:5-46] (CTyEqCan)
Sneaky unification:
  Unifies: t_ath := String
  Coercion: t_ath ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ath := String
setEvBind
  ev = cobox_aD5
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ath
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
160[<C:0,F:0>] [W] cobox_aD5 :: t_ath
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atj :: [Char]
                                ~ t_ath [" a type equality [Char]
                                                           ~
                                                           t_ath " FQL.hs:24:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atj :: [Char]
                                 ~ t_ath [" a type equality [Char]
                                                            ~
                                                            t_ath " FQL.hs:24:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atj :: [Char] ~ t_ath [" a type equality [Char]
                                                     ~
                                                     t_ath " FQL.hs:24:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ath
can_eq_nc
  [W] cobox_atj :: [Char] ~ t_ath
  [Char]
  [Char]
  t_ath
  t_ath
canEqTyVar
  t_ath
  [Char]
  Is-swapped
Following bound tyvar t_ath = String
newWantedEvVar/cache miss [W] cobox_aD6 :: String ~ [Char]
setEvBind
  ev = cobox_atj
  tm  = CO Sym cobox_aD6
rewriteEqEvidence
  [W] cobox_atj :: [Char] ~ t_ath
  String
  [Char]
  Sym cobox_aD6
canEqTyVar2
  t_ath
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aD6 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aD6 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aD7 :: Char ~ Char
setEvBind
  ev = cobox_aD6
  tm  = CO [cobox_aD7]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aD7 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aD7
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atk :: [Char]
                                ~ t_ath [" a type equality [Char]
                                                           ~
                                                           t_ath " FQL.hs:24:28-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atk :: [Char]
                                 ~ t_ath [" a type equality [Char]
                                                            ~
                                                            t_ath " FQL.hs:24:28-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atk :: [Char] ~ t_ath [" a type equality [Char]
                                                     ~
                                                     t_ath " FQL.hs:24:28-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ath
can_eq_nc
  [W] cobox_atk :: [Char] ~ t_ath
  [Char]
  [Char]
  t_ath
  t_ath
canEqTyVar
  t_ath
  [Char]
  Is-swapped
Following bound tyvar t_ath = String
newWantedEvVar/cache miss [W] cobox_aD8 :: String ~ [Char]
setEvBind
  ev = cobox_atk
  tm  = CO Sym cobox_aD8
rewriteEqEvidence
  [W] cobox_atk :: [Char] ~ t_ath
  String
  [Char]
  Sym cobox_aD8
canEqTyVar2
  t_ath
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aD8 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aD8 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aD9 :: Char ~ Char
setEvBind
  ev = cobox_aD8
  tm  = CO [cobox_aD9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aD9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aD9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atl :: [Char]
                                ~ t_ath [" a type equality [Char]
                                                           ~
                                                           t_ath " FQL.hs:24:40-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atl :: [Char]
                                 ~ t_ath [" a type equality [Char]
                                                            ~
                                                            t_ath " FQL.hs:24:40-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atl :: [Char] ~ t_ath [" a type equality [Char]
                                                     ~
                                                     t_ath " FQL.hs:24:40-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ath
can_eq_nc
  [W] cobox_atl :: [Char] ~ t_ath
  [Char]
  [Char]
  t_ath
  t_ath
canEqTyVar
  t_ath
  [Char]
  Is-swapped
Following bound tyvar t_ath = String
newWantedEvVar/cache miss [W] cobox_aDa :: String ~ [Char]
setEvBind
  ev = cobox_atl
  tm  = CO Sym cobox_aDa
rewriteEqEvidence
  [W] cobox_atl :: [Char] ~ t_ath
  String
  [Char]
  Sym cobox_aDa
canEqTyVar2
  t_ath
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDa :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDa :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDb :: Char ~ Char
setEvBind
  ev = cobox_aDa
  tm  = CO [cobox_aDb]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDb :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDb
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atn :: [t_atm]
                                ~ t_at5 [" a type equality [t_atm]
                                                           ~
                                                           t_at5 " FQL.hs:25:5-51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atn :: [t_atm]
                                 ~ t_at5 [" a type equality [t_atm]
                                                            ~
                                                            t_at5 " FQL.hs:25:5-51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atn :: [t_atm] ~ t_at5 [" a type equality [t_atm]
                                                      ~
                                                      t_at5 " FQL.hs:25:5-51] (CNonCanonical)
canEvNC:eq
  [t_atm]
  t_at5
can_eq_nc
  [W] cobox_atn :: [t_atm] ~ t_at5
  [t_atm]
  [t_atm]
  t_at5
  t_at5
canEqTyVar
  t_at5
  [t_atm]
  Is-swapped
Following bound tyvar t_at5 = [String]
newWantedEvVar/cache miss [W] cobox_aDc :: [String] ~ [t_atm]
setEvBind
  ev = cobox_atn
  tm  = CO Sym cobox_aDc
rewriteEqEvidence
  [W] cobox_atn :: [t_atm] ~ t_at5
  [String]
  [t_atm]
  Sym cobox_aDc
canEqTyVar2
  t_at5
  [t_atm]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aDc :: [String] ~ [t_atm]
  [String]
  [String]
  [t_atm]
  [t_atm]
newWantedEvVar/cache miss [W] cobox_aDd :: String ~ t_atm
setEvBind
  ev = cobox_aDc
  tm  = CO [cobox_aDd]_N
canEvNC:eq
  String
  t_atm
can_eq_nc
  [W] cobox_aDd :: String ~ t_atm
  String
  String
  t_atm
  t_atm
can_eq_nc
  [W] cobox_aDd :: String ~ t_atm
  [Char]
  String
  t_atm
  t_atm
canEqTyVar
  t_atm
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aDe :: t_atm ~ String
setEvBind
  ev = cobox_aDd
  tm  = CO Sym cobox_aDe
rewriteEqEvidence
  [W] cobox_aDd :: String ~ t_atm
  t_atm
  String
  Sym cobox_aDe
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aDe :: t_atm
                                 ~ String [" a type equality [t_atm]
                                                             ~
                                                             t_at5 " FQL.hs:25:5-51] (CTyEqCan)
Sneaky unification:
  Unifies: t_atm := String
  Coercion: t_atm ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atm := String
setEvBind
  ev = cobox_aDe
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atm
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
164[<C:0,F:0>] [W] cobox_aDe :: t_atm
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ato :: [Char]
                                ~ t_atm [" a type equality [Char]
                                                           ~
                                                           t_atm " FQL.hs:25:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ato :: [Char]
                                 ~ t_atm [" a type equality [Char]
                                                            ~
                                                            t_atm " FQL.hs:25:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ato :: [Char] ~ t_atm [" a type equality [Char]
                                                     ~
                                                     t_atm " FQL.hs:25:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atm
can_eq_nc
  [W] cobox_ato :: [Char] ~ t_atm
  [Char]
  [Char]
  t_atm
  t_atm
canEqTyVar
  t_atm
  [Char]
  Is-swapped
Following bound tyvar t_atm = String
newWantedEvVar/cache miss [W] cobox_aDf :: String ~ [Char]
setEvBind
  ev = cobox_ato
  tm  = CO Sym cobox_aDf
rewriteEqEvidence
  [W] cobox_ato :: [Char] ~ t_atm
  String
  [Char]
  Sym cobox_aDf
canEqTyVar2
  t_atm
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDf :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDf :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDg :: Char ~ Char
setEvBind
  ev = cobox_aDf
  tm  = CO [cobox_aDg]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDg :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDg
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atp :: [Char]
                                ~ t_atm [" a type equality [Char]
                                                           ~
                                                           t_atm " FQL.hs:25:28-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atp :: [Char]
                                 ~ t_atm [" a type equality [Char]
                                                            ~
                                                            t_atm " FQL.hs:25:28-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atp :: [Char] ~ t_atm [" a type equality [Char]
                                                     ~
                                                     t_atm " FQL.hs:25:28-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atm
can_eq_nc
  [W] cobox_atp :: [Char] ~ t_atm
  [Char]
  [Char]
  t_atm
  t_atm
canEqTyVar
  t_atm
  [Char]
  Is-swapped
Following bound tyvar t_atm = String
newWantedEvVar/cache miss [W] cobox_aDh :: String ~ [Char]
setEvBind
  ev = cobox_atp
  tm  = CO Sym cobox_aDh
rewriteEqEvidence
  [W] cobox_atp :: [Char] ~ t_atm
  String
  [Char]
  Sym cobox_aDh
canEqTyVar2
  t_atm
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDh :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDh :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDi :: Char ~ Char
setEvBind
  ev = cobox_aDh
  tm  = CO [cobox_aDi]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDi :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDi
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atq :: [Char]
                                ~ t_atm [" a type equality [Char]
                                                           ~
                                                           t_atm " FQL.hs:25:40-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atq :: [Char]
                                 ~ t_atm [" a type equality [Char]
                                                            ~
                                                            t_atm " FQL.hs:25:40-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atq :: [Char] ~ t_atm [" a type equality [Char]
                                                     ~
                                                     t_atm " FQL.hs:25:40-50] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atm
can_eq_nc
  [W] cobox_atq :: [Char] ~ t_atm
  [Char]
  [Char]
  t_atm
  t_atm
canEqTyVar
  t_atm
  [Char]
  Is-swapped
Following bound tyvar t_atm = String
newWantedEvVar/cache miss [W] cobox_aDj :: String ~ [Char]
setEvBind
  ev = cobox_atq
  tm  = CO Sym cobox_aDj
rewriteEqEvidence
  [W] cobox_atq :: [Char] ~ t_atm
  String
  [Char]
  Sym cobox_aDj
canEqTyVar2
  t_atm
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDj :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDj :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDk :: Char ~ Char
setEvBind
  ev = cobox_aDj
  tm  = CO [cobox_aDk]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ats :: [t_atr]
                                ~ t_at5 [" a type equality [t_atr]
                                                           ~
                                                           t_at5 " FQL.hs:26:5-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ats :: [t_atr]
                                 ~ t_at5 [" a type equality [t_atr]
                                                            ~
                                                            t_at5 " FQL.hs:26:5-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ats :: [t_atr] ~ t_at5 [" a type equality [t_atr]
                                                      ~
                                                      t_at5 " FQL.hs:26:5-59] (CNonCanonical)
canEvNC:eq
  [t_atr]
  t_at5
can_eq_nc
  [W] cobox_ats :: [t_atr] ~ t_at5
  [t_atr]
  [t_atr]
  t_at5
  t_at5
canEqTyVar
  t_at5
  [t_atr]
  Is-swapped
Following bound tyvar t_at5 = [String]
newWantedEvVar/cache miss [W] cobox_aDl :: [String] ~ [t_atr]
setEvBind
  ev = cobox_ats
  tm  = CO Sym cobox_aDl
rewriteEqEvidence
  [W] cobox_ats :: [t_atr] ~ t_at5
  [String]
  [t_atr]
  Sym cobox_aDl
canEqTyVar2
  t_at5
  [t_atr]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aDl :: [String] ~ [t_atr]
  [String]
  [String]
  [t_atr]
  [t_atr]
newWantedEvVar/cache miss [W] cobox_aDm :: String ~ t_atr
setEvBind
  ev = cobox_aDl
  tm  = CO [cobox_aDm]_N
canEvNC:eq
  String
  t_atr
can_eq_nc
  [W] cobox_aDm :: String ~ t_atr
  String
  String
  t_atr
  t_atr
can_eq_nc
  [W] cobox_aDm :: String ~ t_atr
  [Char]
  String
  t_atr
  t_atr
canEqTyVar
  t_atr
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aDn :: t_atr ~ String
setEvBind
  ev = cobox_aDm
  tm  = CO Sym cobox_aDn
rewriteEqEvidence
  [W] cobox_aDm :: String ~ t_atr
  t_atr
  String
  Sym cobox_aDn
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aDn :: t_atr
                                 ~ String [" a type equality [t_atr]
                                                             ~
                                                             t_at5 " FQL.hs:26:5-59] (CTyEqCan)
Sneaky unification:
  Unifies: t_atr := String
  Coercion: t_atr ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atr := String
setEvBind
  ev = cobox_aDn
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
168[<C:0,F:0>] [W] cobox_aDn :: t_atr
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_att :: [Char]
                                ~ t_atr [" a type equality [Char]
                                                           ~
                                                           t_atr " FQL.hs:26:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_att :: [Char]
                                 ~ t_atr [" a type equality [Char]
                                                            ~
                                                            t_atr " FQL.hs:26:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_att :: [Char] ~ t_atr [" a type equality [Char]
                                                     ~
                                                     t_atr " FQL.hs:26:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atr
can_eq_nc
  [W] cobox_att :: [Char] ~ t_atr
  [Char]
  [Char]
  t_atr
  t_atr
canEqTyVar
  t_atr
  [Char]
  Is-swapped
Following bound tyvar t_atr = String
newWantedEvVar/cache miss [W] cobox_aDo :: String ~ [Char]
setEvBind
  ev = cobox_att
  tm  = CO Sym cobox_aDo
rewriteEqEvidence
  [W] cobox_att :: [Char] ~ t_atr
  String
  [Char]
  Sym cobox_aDo
canEqTyVar2
  t_atr
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDo :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDo :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDp :: Char ~ Char
setEvBind
  ev = cobox_aDo
  tm  = CO [cobox_aDp]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDp :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDp
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atu :: [Char]
                                ~ t_atr [" a type equality [Char]
                                                           ~
                                                           t_atr " FQL.hs:26:28-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atu :: [Char]
                                 ~ t_atr [" a type equality [Char]
                                                            ~
                                                            t_atr " FQL.hs:26:28-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atu :: [Char] ~ t_atr [" a type equality [Char]
                                                     ~
                                                     t_atr " FQL.hs:26:28-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atr
can_eq_nc
  [W] cobox_atu :: [Char] ~ t_atr
  [Char]
  [Char]
  t_atr
  t_atr
canEqTyVar
  t_atr
  [Char]
  Is-swapped
Following bound tyvar t_atr = String
newWantedEvVar/cache miss [W] cobox_aDq :: String ~ [Char]
setEvBind
  ev = cobox_atu
  tm  = CO Sym cobox_aDq
rewriteEqEvidence
  [W] cobox_atu :: [Char] ~ t_atr
  String
  [Char]
  Sym cobox_aDq
canEqTyVar2
  t_atr
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDq :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDq :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDr :: Char ~ Char
setEvBind
  ev = cobox_aDq
  tm  = CO [cobox_aDr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atv :: [Char]
                                ~ t_atr [" a type equality [Char]
                                                           ~
                                                           t_atr " FQL.hs:26:48-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atv :: [Char]
                                 ~ t_atr [" a type equality [Char]
                                                            ~
                                                            t_atr " FQL.hs:26:48-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atv :: [Char] ~ t_atr [" a type equality [Char]
                                                     ~
                                                     t_atr " FQL.hs:26:48-58] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atr
can_eq_nc
  [W] cobox_atv :: [Char] ~ t_atr
  [Char]
  [Char]
  t_atr
  t_atr
canEqTyVar
  t_atr
  [Char]
  Is-swapped
Following bound tyvar t_atr = String
newWantedEvVar/cache miss [W] cobox_aDs :: String ~ [Char]
setEvBind
  ev = cobox_atv
  tm  = CO Sym cobox_aDs
rewriteEqEvidence
  [W] cobox_atv :: [Char] ~ t_atr
  String
  [Char]
  Sym cobox_aDs
canEqTyVar2
  t_atr
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDs :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDs :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDt :: Char ~ Char
setEvBind
  ev = cobox_aDs
  tm  = CO [cobox_aDt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atx :: [t_atw]
                                ~ t_at5 [" a type equality [t_atw]
                                                           ~
                                                           t_at5 " FQL.hs:27:5-66] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atx :: [t_atw]
                                 ~ t_at5 [" a type equality [t_atw]
                                                            ~
                                                            t_at5 " FQL.hs:27:5-66] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atx :: [t_atw] ~ t_at5 [" a type equality [t_atw]
                                                      ~
                                                      t_at5 " FQL.hs:27:5-66] (CNonCanonical)
canEvNC:eq
  [t_atw]
  t_at5
can_eq_nc
  [W] cobox_atx :: [t_atw] ~ t_at5
  [t_atw]
  [t_atw]
  t_at5
  t_at5
canEqTyVar
  t_at5
  [t_atw]
  Is-swapped
Following bound tyvar t_at5 = [String]
newWantedEvVar/cache miss [W] cobox_aDu :: [String] ~ [t_atw]
setEvBind
  ev = cobox_atx
  tm  = CO Sym cobox_aDu
rewriteEqEvidence
  [W] cobox_atx :: [t_atw] ~ t_at5
  [String]
  [t_atw]
  Sym cobox_aDu
canEqTyVar2
  t_at5
  [t_atw]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aDu :: [String] ~ [t_atw]
  [String]
  [String]
  [t_atw]
  [t_atw]
newWantedEvVar/cache miss [W] cobox_aDv :: String ~ t_atw
setEvBind
  ev = cobox_aDu
  tm  = CO [cobox_aDv]_N
canEvNC:eq
  String
  t_atw
can_eq_nc
  [W] cobox_aDv :: String ~ t_atw
  String
  String
  t_atw
  t_atw
can_eq_nc
  [W] cobox_aDv :: String ~ t_atw
  [Char]
  String
  t_atw
  t_atw
canEqTyVar
  t_atw
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aDw :: t_atw ~ String
setEvBind
  ev = cobox_aDv
  tm  = CO Sym cobox_aDw
rewriteEqEvidence
  [W] cobox_aDv :: String ~ t_atw
  t_atw
  String
  Sym cobox_aDw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aDw :: t_atw
                                 ~ String [" a type equality [t_atw]
                                                             ~
                                                             t_at5 " FQL.hs:27:5-66] (CTyEqCan)
Sneaky unification:
  Unifies: t_atw := String
  Coercion: t_atw ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atw := String
setEvBind
  ev = cobox_aDw
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
172[<C:0,F:0>] [W] cobox_aDw :: t_atw
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aty :: [Char]
                                ~ t_atw [" a type equality [Char]
                                                           ~
                                                           t_atw " FQL.hs:27:6-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aty :: [Char]
                                 ~ t_atw [" a type equality [Char]
                                                            ~
                                                            t_atw " FQL.hs:27:6-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aty :: [Char] ~ t_atw [" a type equality [Char]
                                                     ~
                                                     t_atw " FQL.hs:27:6-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atw
can_eq_nc
  [W] cobox_aty :: [Char] ~ t_atw
  [Char]
  [Char]
  t_atw
  t_atw
canEqTyVar
  t_atw
  [Char]
  Is-swapped
Following bound tyvar t_atw = String
newWantedEvVar/cache miss [W] cobox_aDx :: String ~ [Char]
setEvBind
  ev = cobox_aty
  tm  = CO Sym cobox_aDx
rewriteEqEvidence
  [W] cobox_aty :: [Char] ~ t_atw
  String
  [Char]
  Sym cobox_aDx
canEqTyVar2
  t_atw
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDx :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDx :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDy :: Char ~ Char
setEvBind
  ev = cobox_aDx
  tm  = CO [cobox_aDy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atz :: [Char]
                                ~ t_atw [" a type equality [Char]
                                                           ~
                                                           t_atw " FQL.hs:27:35-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atz :: [Char]
                                 ~ t_atw [" a type equality [Char]
                                                            ~
                                                            t_atw " FQL.hs:27:35-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atz :: [Char] ~ t_atw [" a type equality [Char]
                                                     ~
                                                     t_atw " FQL.hs:27:35-52] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atw
can_eq_nc
  [W] cobox_atz :: [Char] ~ t_atw
  [Char]
  [Char]
  t_atw
  t_atw
canEqTyVar
  t_atw
  [Char]
  Is-swapped
Following bound tyvar t_atw = String
newWantedEvVar/cache miss [W] cobox_aDz :: String ~ [Char]
setEvBind
  ev = cobox_atz
  tm  = CO Sym cobox_aDz
rewriteEqEvidence
  [W] cobox_atz :: [Char] ~ t_atw
  String
  [Char]
  Sym cobox_aDz
canEqTyVar2
  t_atw
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDz :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDz :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDA :: Char ~ Char
setEvBind
  ev = cobox_aDz
  tm  = CO [cobox_aDA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atA :: [Char]
                                ~ t_atw [" a type equality [Char]
                                                           ~
                                                           t_atw " FQL.hs:27:55-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atA :: [Char]
                                 ~ t_atw [" a type equality [Char]
                                                            ~
                                                            t_atw " FQL.hs:27:55-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atA :: [Char] ~ t_atw [" a type equality [Char]
                                                     ~
                                                     t_atw " FQL.hs:27:55-65] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atw
can_eq_nc
  [W] cobox_atA :: [Char] ~ t_atw
  [Char]
  [Char]
  t_atw
  t_atw
canEqTyVar
  t_atw
  [Char]
  Is-swapped
Following bound tyvar t_atw = String
newWantedEvVar/cache miss [W] cobox_aDB :: String ~ [Char]
setEvBind
  ev = cobox_atA
  tm  = CO Sym cobox_aDB
rewriteEqEvidence
  [W] cobox_atA :: [Char] ~ t_atw
  String
  [Char]
  Sym cobox_aDB
canEqTyVar2
  t_atw
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDB :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDB :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDC :: Char ~ Char
setEvBind
  ev = cobox_aDB
  tm  = CO [cobox_aDC]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDC :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDC
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atC :: [t_atB]
                                ~ t_at5 [" a type equality [t_atB]
                                                           ~
                                                           t_at5 " FQL.hs:28:5-63] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atC :: [t_atB]
                                 ~ t_at5 [" a type equality [t_atB]
                                                            ~
                                                            t_at5 " FQL.hs:28:5-63] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atC :: [t_atB] ~ t_at5 [" a type equality [t_atB]
                                                      ~
                                                      t_at5 " FQL.hs:28:5-63] (CNonCanonical)
canEvNC:eq
  [t_atB]
  t_at5
can_eq_nc
  [W] cobox_atC :: [t_atB] ~ t_at5
  [t_atB]
  [t_atB]
  t_at5
  t_at5
canEqTyVar
  t_at5
  [t_atB]
  Is-swapped
Following bound tyvar t_at5 = [String]
newWantedEvVar/cache miss [W] cobox_aDD :: [String] ~ [t_atB]
setEvBind
  ev = cobox_atC
  tm  = CO Sym cobox_aDD
rewriteEqEvidence
  [W] cobox_atC :: [t_atB] ~ t_at5
  [String]
  [t_atB]
  Sym cobox_aDD
canEqTyVar2
  t_at5
  [t_atB]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aDD :: [String] ~ [t_atB]
  [String]
  [String]
  [t_atB]
  [t_atB]
newWantedEvVar/cache miss [W] cobox_aDE :: String ~ t_atB
setEvBind
  ev = cobox_aDD
  tm  = CO [cobox_aDE]_N
canEvNC:eq
  String
  t_atB
can_eq_nc
  [W] cobox_aDE :: String ~ t_atB
  String
  String
  t_atB
  t_atB
can_eq_nc
  [W] cobox_aDE :: String ~ t_atB
  [Char]
  String
  t_atB
  t_atB
canEqTyVar
  t_atB
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aDF :: t_atB ~ String
setEvBind
  ev = cobox_aDE
  tm  = CO Sym cobox_aDF
rewriteEqEvidence
  [W] cobox_aDE :: String ~ t_atB
  t_atB
  String
  Sym cobox_aDF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aDF :: t_atB
                                 ~ String [" a type equality [t_atB]
                                                             ~
                                                             t_at5 " FQL.hs:28:5-63] (CTyEqCan)
Sneaky unification:
  Unifies: t_atB := String
  Coercion: t_atB ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atB := String
setEvBind
  ev = cobox_aDF
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
176[<C:0,F:0>] [W] cobox_aDF :: t_atB
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atD :: [Char]
                                ~ t_atB [" a type equality [Char]
                                                           ~
                                                           t_atB " FQL.hs:28:6-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atD :: [Char]
                                 ~ t_atB [" a type equality [Char]
                                                            ~
                                                            t_atB " FQL.hs:28:6-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atD :: [Char] ~ t_atB [" a type equality [Char]
                                                     ~
                                                     t_atB " FQL.hs:28:6-40] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atB
can_eq_nc
  [W] cobox_atD :: [Char] ~ t_atB
  [Char]
  [Char]
  t_atB
  t_atB
canEqTyVar
  t_atB
  [Char]
  Is-swapped
Following bound tyvar t_atB = String
newWantedEvVar/cache miss [W] cobox_aDG :: String ~ [Char]
setEvBind
  ev = cobox_atD
  tm  = CO Sym cobox_aDG
rewriteEqEvidence
  [W] cobox_atD :: [Char] ~ t_atB
  String
  [Char]
  Sym cobox_aDG
canEqTyVar2
  t_atB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDG :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDG :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDH :: Char ~ Char
setEvBind
  ev = cobox_aDG
  tm  = CO [cobox_aDH]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDH :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDH
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atE :: [Char]
                                ~ t_atB [" a type equality [Char]
                                                           ~
                                                           t_atB " FQL.hs:28:43-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atE :: [Char]
                                 ~ t_atB [" a type equality [Char]
                                                            ~
                                                            t_atB " FQL.hs:28:43-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atE :: [Char] ~ t_atB [" a type equality [Char]
                                                     ~
                                                     t_atB " FQL.hs:28:43-50] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atB
can_eq_nc
  [W] cobox_atE :: [Char] ~ t_atB
  [Char]
  [Char]
  t_atB
  t_atB
canEqTyVar
  t_atB
  [Char]
  Is-swapped
Following bound tyvar t_atB = String
newWantedEvVar/cache miss [W] cobox_aDI :: String ~ [Char]
setEvBind
  ev = cobox_atE
  tm  = CO Sym cobox_aDI
rewriteEqEvidence
  [W] cobox_atE :: [Char] ~ t_atB
  String
  [Char]
  Sym cobox_aDI
canEqTyVar2
  t_atB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDI :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDI :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDJ :: Char ~ Char
setEvBind
  ev = cobox_aDI
  tm  = CO [cobox_aDJ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDJ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDJ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atF :: [Char]
                                ~ t_atB [" a type equality [Char]
                                                           ~
                                                           t_atB " FQL.hs:28:53-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atF :: [Char]
                                 ~ t_atB [" a type equality [Char]
                                                            ~
                                                            t_atB " FQL.hs:28:53-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atF :: [Char] ~ t_atB [" a type equality [Char]
                                                     ~
                                                     t_atB " FQL.hs:28:53-62] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atB
can_eq_nc
  [W] cobox_atF :: [Char] ~ t_atB
  [Char]
  [Char]
  t_atB
  t_atB
canEqTyVar
  t_atB
  [Char]
  Is-swapped
Following bound tyvar t_atB = String
newWantedEvVar/cache miss [W] cobox_aDK :: String ~ [Char]
setEvBind
  ev = cobox_atF
  tm  = CO Sym cobox_aDK
rewriteEqEvidence
  [W] cobox_atF :: [Char] ~ t_atB
  String
  [Char]
  Sym cobox_aDK
canEqTyVar2
  t_atB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDK :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDK :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDL :: Char ~ Char
setEvBind
  ev = cobox_aDK
  tm  = CO [cobox_aDL]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDL :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDL
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atI :: [t_atH]
                                ~ t_an1 [" a type equality [t_atH]
                                                           ~
                                                           t_an1 " FQL.hs:(9,3)-(18,3)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atI :: [t_atH]
                                 ~ t_an1 [" a type equality [t_atH]
                                                            ~
                                                            t_an1 " FQL.hs:(9,3)-(18,3)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atI :: [t_atH] ~ t_an1 [" a type equality [t_atH]
                                                      ~
                                                      t_an1 " FQL.hs:(9,3)-(18,3)] (CNonCanonical)
canEvNC:eq
  [t_atH]
  t_an1
can_eq_nc
  [W] cobox_atI :: [t_atH] ~ t_an1
  [t_atH]
  [t_atH]
  t_an1
  t_an1
canEqTyVar
  t_an1
  [t_atH]
  Is-swapped
Following bound tyvar t_an1 = Table
newWantedEvVar/cache miss [W] cobox_aDM :: Table ~ [t_atH]
setEvBind
  ev = cobox_atI
  tm  = CO Sym cobox_aDM
rewriteEqEvidence
  [W] cobox_atI :: [t_atH] ~ t_an1
  Table
  [t_atH]
  Sym cobox_aDM
canEqTyVar2
  t_an1
  [t_atH]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aDM :: Table ~ [t_atH]
  Table
  Table
  [t_atH]
  [t_atH]
can_eq_nc
  [W] cobox_aDM :: Table ~ [t_atH]
  [[String]]
  Table
  [t_atH]
  [t_atH]
newWantedEvVar/cache miss [W] cobox_aDN :: [String] ~ t_atH
setEvBind
  ev = cobox_aDM
  tm  = CO [cobox_aDN]_N
canEvNC:eq
  [String]
  t_atH
can_eq_nc
  [W] cobox_aDN :: [String] ~ t_atH
  [String]
  [String]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aDO :: t_atH ~ [String]
setEvBind
  ev = cobox_aDN
  tm  = CO Sym cobox_aDO
rewriteEqEvidence
  [W] cobox_aDN :: [String] ~ t_atH
  t_atH
  [String]
  Sym cobox_aDO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aDO :: t_atH
                                 ~ [String] [" a type equality [t_atH]
                                                               ~
                                                               t_an1 " FQL.hs:(9,3)-(18,3)] (CTyEqCan)
Sneaky unification:
  Unifies: t_atH := [String]
  Coercion: t_atH ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atH := [String]
setEvBind
  ev = cobox_aDO
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_atH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
180[<C:0,F:0>] [W] cobox_aDO :: t_atH
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atK :: [t_atJ]
                                ~ t_atH [" a type equality [t_atJ]
                                                           ~
                                                           t_atH " FQL.hs:9:5-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atK :: [t_atJ]
                                 ~ t_atH [" a type equality [t_atJ]
                                                            ~
                                                            t_atH " FQL.hs:9:5-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atK :: [t_atJ] ~ t_atH [" a type equality [t_atJ]
                                                      ~
                                                      t_atH " FQL.hs:9:5-40] (CNonCanonical)
canEvNC:eq
  [t_atJ]
  t_atH
can_eq_nc
  [W] cobox_atK :: [t_atJ] ~ t_atH
  [t_atJ]
  [t_atJ]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_atJ]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aDP :: [String] ~ [t_atJ]
setEvBind
  ev = cobox_atK
  tm  = CO Sym cobox_aDP
rewriteEqEvidence
  [W] cobox_atK :: [t_atJ] ~ t_atH
  [String]
  [t_atJ]
  Sym cobox_aDP
canEqTyVar2
  t_atH
  [t_atJ]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aDP :: [String] ~ [t_atJ]
  [String]
  [String]
  [t_atJ]
  [t_atJ]
newWantedEvVar/cache miss [W] cobox_aDQ :: String ~ t_atJ
setEvBind
  ev = cobox_aDP
  tm  = CO [cobox_aDQ]_N
canEvNC:eq
  String
  t_atJ
can_eq_nc
  [W] cobox_aDQ :: String ~ t_atJ
  String
  String
  t_atJ
  t_atJ
can_eq_nc
  [W] cobox_aDQ :: String ~ t_atJ
  [Char]
  String
  t_atJ
  t_atJ
canEqTyVar
  t_atJ
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aDR :: t_atJ ~ String
setEvBind
  ev = cobox_aDQ
  tm  = CO Sym cobox_aDR
rewriteEqEvidence
  [W] cobox_aDQ :: String ~ t_atJ
  t_atJ
  String
  Sym cobox_aDR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aDR :: t_atJ
                                 ~ String [" a type equality [t_atJ]
                                                             ~
                                                             t_atH " FQL.hs:9:5-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_atJ := String
  Coercion: t_atJ ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atJ := String
setEvBind
  ev = cobox_aDR
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
181[<C:0,F:0>] [W] cobox_aDR :: t_atJ
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atL :: [Char]
                                ~ t_atJ [" a type equality [Char]
                                                           ~
                                                           t_atJ " FQL.hs:9:6-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atL :: [Char]
                                 ~ t_atJ [" a type equality [Char]
                                                            ~
                                                            t_atJ " FQL.hs:9:6-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atL :: [Char] ~ t_atJ [" a type equality [Char]
                                                     ~
                                                     t_atJ " FQL.hs:9:6-15] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atJ
can_eq_nc
  [W] cobox_atL :: [Char] ~ t_atJ
  [Char]
  [Char]
  t_atJ
  t_atJ
canEqTyVar
  t_atJ
  [Char]
  Is-swapped
Following bound tyvar t_atJ = String
newWantedEvVar/cache miss [W] cobox_aDS :: String ~ [Char]
setEvBind
  ev = cobox_atL
  tm  = CO Sym cobox_aDS
rewriteEqEvidence
  [W] cobox_atL :: [Char] ~ t_atJ
  String
  [Char]
  Sym cobox_aDS
canEqTyVar2
  t_atJ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDS :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDS :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDT :: Char ~ Char
setEvBind
  ev = cobox_aDS
  tm  = CO [cobox_aDT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atM :: [Char]
                                ~ t_atJ [" a type equality [Char]
                                                           ~
                                                           t_atJ " FQL.hs:9:18-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atM :: [Char]
                                 ~ t_atJ [" a type equality [Char]
                                                            ~
                                                            t_atJ " FQL.hs:9:18-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atM :: [Char] ~ t_atJ [" a type equality [Char]
                                                     ~
                                                     t_atJ " FQL.hs:9:18-39] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atJ
can_eq_nc
  [W] cobox_atM :: [Char] ~ t_atJ
  [Char]
  [Char]
  t_atJ
  t_atJ
canEqTyVar
  t_atJ
  [Char]
  Is-swapped
Following bound tyvar t_atJ = String
newWantedEvVar/cache miss [W] cobox_aDU :: String ~ [Char]
setEvBind
  ev = cobox_atM
  tm  = CO Sym cobox_aDU
rewriteEqEvidence
  [W] cobox_atM :: [Char] ~ t_atJ
  String
  [Char]
  Sym cobox_aDU
canEqTyVar2
  t_atJ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDU :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDU :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aDV :: Char ~ Char
setEvBind
  ev = cobox_aDU
  tm  = CO [cobox_aDV]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aDV :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aDV
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atO :: [t_atN]
                                ~ t_atH [" a type equality [t_atN]
                                                           ~
                                                           t_atH " FQL.hs:10:5-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atO :: [t_atN]
                                 ~ t_atH [" a type equality [t_atN]
                                                            ~
                                                            t_atH " FQL.hs:10:5-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atO :: [t_atN] ~ t_atH [" a type equality [t_atN]
                                                      ~
                                                      t_atH " FQL.hs:10:5-42] (CNonCanonical)
canEvNC:eq
  [t_atN]
  t_atH
can_eq_nc
  [W] cobox_atO :: [t_atN] ~ t_atH
  [t_atN]
  [t_atN]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_atN]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aDW :: [String] ~ [t_atN]
setEvBind
  ev = cobox_atO
  tm  = CO Sym cobox_aDW
rewriteEqEvidence
  [W] cobox_atO :: [t_atN] ~ t_atH
  [String]
  [t_atN]
  Sym cobox_aDW
canEqTyVar2
  t_atH
  [t_atN]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aDW :: [String] ~ [t_atN]
  [String]
  [String]
  [t_atN]
  [t_atN]
newWantedEvVar/cache miss [W] cobox_aDX :: String ~ t_atN
setEvBind
  ev = cobox_aDW
  tm  = CO [cobox_aDX]_N
canEvNC:eq
  String
  t_atN
can_eq_nc
  [W] cobox_aDX :: String ~ t_atN
  String
  String
  t_atN
  t_atN
can_eq_nc
  [W] cobox_aDX :: String ~ t_atN
  [Char]
  String
  t_atN
  t_atN
canEqTyVar
  t_atN
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aDY :: t_atN ~ String
setEvBind
  ev = cobox_aDX
  tm  = CO Sym cobox_aDY
rewriteEqEvidence
  [W] cobox_aDX :: String ~ t_atN
  t_atN
  String
  Sym cobox_aDY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aDY :: t_atN
                                 ~ String [" a type equality [t_atN]
                                                             ~
                                                             t_atH " FQL.hs:10:5-42] (CTyEqCan)
Sneaky unification:
  Unifies: t_atN := String
  Coercion: t_atN ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atN := String
setEvBind
  ev = cobox_aDY
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
184[<C:0,F:0>] [W] cobox_aDY :: t_atN
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atP :: [Char]
                                ~ t_atN [" a type equality [Char]
                                                           ~
                                                           t_atN " FQL.hs:10:6-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atP :: [Char]
                                 ~ t_atN [" a type equality [Char]
                                                            ~
                                                            t_atN " FQL.hs:10:6-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atP :: [Char] ~ t_atN [" a type equality [Char]
                                                     ~
                                                     t_atN " FQL.hs:10:6-13] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atN
can_eq_nc
  [W] cobox_atP :: [Char] ~ t_atN
  [Char]
  [Char]
  t_atN
  t_atN
canEqTyVar
  t_atN
  [Char]
  Is-swapped
Following bound tyvar t_atN = String
newWantedEvVar/cache miss [W] cobox_aDZ :: String ~ [Char]
setEvBind
  ev = cobox_atP
  tm  = CO Sym cobox_aDZ
rewriteEqEvidence
  [W] cobox_atP :: [Char] ~ t_atN
  String
  [Char]
  Sym cobox_aDZ
canEqTyVar2
  t_atN
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aDZ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aDZ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aE0 :: Char ~ Char
setEvBind
  ev = cobox_aDZ
  tm  = CO [cobox_aE0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aE0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aE0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atQ :: [Char]
                                ~ t_atN [" a type equality [Char]
                                                           ~
                                                           t_atN " FQL.hs:10:16-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atQ :: [Char]
                                 ~ t_atN [" a type equality [Char]
                                                            ~
                                                            t_atN " FQL.hs:10:16-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atQ :: [Char] ~ t_atN [" a type equality [Char]
                                                     ~
                                                     t_atN " FQL.hs:10:16-41] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atN
can_eq_nc
  [W] cobox_atQ :: [Char] ~ t_atN
  [Char]
  [Char]
  t_atN
  t_atN
canEqTyVar
  t_atN
  [Char]
  Is-swapped
Following bound tyvar t_atN = String
newWantedEvVar/cache miss [W] cobox_aE1 :: String ~ [Char]
setEvBind
  ev = cobox_atQ
  tm  = CO Sym cobox_aE1
rewriteEqEvidence
  [W] cobox_atQ :: [Char] ~ t_atN
  String
  [Char]
  Sym cobox_aE1
canEqTyVar2
  t_atN
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aE1 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aE1 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aE2 :: Char ~ Char
setEvBind
  ev = cobox_aE1
  tm  = CO [cobox_aE2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aE2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aE2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atS :: [t_atR]
                                ~ t_atH [" a type equality [t_atR]
                                                           ~
                                                           t_atH " FQL.hs:11:5-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atS :: [t_atR]
                                 ~ t_atH [" a type equality [t_atR]
                                                            ~
                                                            t_atH " FQL.hs:11:5-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atS :: [t_atR] ~ t_atH [" a type equality [t_atR]
                                                      ~
                                                      t_atH " FQL.hs:11:5-33] (CNonCanonical)
canEvNC:eq
  [t_atR]
  t_atH
can_eq_nc
  [W] cobox_atS :: [t_atR] ~ t_atH
  [t_atR]
  [t_atR]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_atR]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aE3 :: [String] ~ [t_atR]
setEvBind
  ev = cobox_atS
  tm  = CO Sym cobox_aE3
rewriteEqEvidence
  [W] cobox_atS :: [t_atR] ~ t_atH
  [String]
  [t_atR]
  Sym cobox_aE3
canEqTyVar2
  t_atH
  [t_atR]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aE3 :: [String] ~ [t_atR]
  [String]
  [String]
  [t_atR]
  [t_atR]
newWantedEvVar/cache miss [W] cobox_aE4 :: String ~ t_atR
setEvBind
  ev = cobox_aE3
  tm  = CO [cobox_aE4]_N
canEvNC:eq
  String
  t_atR
can_eq_nc
  [W] cobox_aE4 :: String ~ t_atR
  String
  String
  t_atR
  t_atR
can_eq_nc
  [W] cobox_aE4 :: String ~ t_atR
  [Char]
  String
  t_atR
  t_atR
canEqTyVar
  t_atR
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aE5 :: t_atR ~ String
setEvBind
  ev = cobox_aE4
  tm  = CO Sym cobox_aE5
rewriteEqEvidence
  [W] cobox_aE4 :: String ~ t_atR
  t_atR
  String
  Sym cobox_aE5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aE5 :: t_atR
                                 ~ String [" a type equality [t_atR]
                                                             ~
                                                             t_atH " FQL.hs:11:5-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_atR := String
  Coercion: t_atR ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atR := String
setEvBind
  ev = cobox_aE5
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
187[<C:0,F:0>] [W] cobox_aE5 :: t_atR
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atT :: [Char]
                                ~ t_atR [" a type equality [Char]
                                                           ~
                                                           t_atR " FQL.hs:11:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atT :: [Char]
                                 ~ t_atR [" a type equality [Char]
                                                            ~
                                                            t_atR " FQL.hs:11:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atT :: [Char] ~ t_atR [" a type equality [Char]
                                                     ~
                                                     t_atR " FQL.hs:11:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atR
can_eq_nc
  [W] cobox_atT :: [Char] ~ t_atR
  [Char]
  [Char]
  t_atR
  t_atR
canEqTyVar
  t_atR
  [Char]
  Is-swapped
Following bound tyvar t_atR = String
newWantedEvVar/cache miss [W] cobox_aE6 :: String ~ [Char]
setEvBind
  ev = cobox_atT
  tm  = CO Sym cobox_aE6
rewriteEqEvidence
  [W] cobox_atT :: [Char] ~ t_atR
  String
  [Char]
  Sym cobox_aE6
canEqTyVar2
  t_atR
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aE6 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aE6 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aE7 :: Char ~ Char
setEvBind
  ev = cobox_aE6
  tm  = CO [cobox_aE7]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aE7 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aE7
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atU :: [Char]
                                ~ t_atR [" a type equality [Char]
                                                           ~
                                                           t_atR " FQL.hs:11:13-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atU :: [Char]
                                 ~ t_atR [" a type equality [Char]
                                                            ~
                                                            t_atR " FQL.hs:11:13-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atU :: [Char] ~ t_atR [" a type equality [Char]
                                                     ~
                                                     t_atR " FQL.hs:11:13-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atR
can_eq_nc
  [W] cobox_atU :: [Char] ~ t_atR
  [Char]
  [Char]
  t_atR
  t_atR
canEqTyVar
  t_atR
  [Char]
  Is-swapped
Following bound tyvar t_atR = String
newWantedEvVar/cache miss [W] cobox_aE8 :: String ~ [Char]
setEvBind
  ev = cobox_atU
  tm  = CO Sym cobox_aE8
rewriteEqEvidence
  [W] cobox_atU :: [Char] ~ t_atR
  String
  [Char]
  Sym cobox_aE8
canEqTyVar2
  t_atR
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aE8 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aE8 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aE9 :: Char ~ Char
setEvBind
  ev = cobox_aE8
  tm  = CO [cobox_aE9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aE9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aE9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atW :: [t_atV]
                                ~ t_atH [" a type equality [t_atV]
                                                           ~
                                                           t_atH " FQL.hs:12:5-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atW :: [t_atV]
                                 ~ t_atH [" a type equality [t_atV]
                                                            ~
                                                            t_atH " FQL.hs:12:5-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atW :: [t_atV] ~ t_atH [" a type equality [t_atV]
                                                      ~
                                                      t_atH " FQL.hs:12:5-33] (CNonCanonical)
canEvNC:eq
  [t_atV]
  t_atH
can_eq_nc
  [W] cobox_atW :: [t_atV] ~ t_atH
  [t_atV]
  [t_atV]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_atV]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aEa :: [String] ~ [t_atV]
setEvBind
  ev = cobox_atW
  tm  = CO Sym cobox_aEa
rewriteEqEvidence
  [W] cobox_atW :: [t_atV] ~ t_atH
  [String]
  [t_atV]
  Sym cobox_aEa
canEqTyVar2
  t_atH
  [t_atV]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aEa :: [String] ~ [t_atV]
  [String]
  [String]
  [t_atV]
  [t_atV]
newWantedEvVar/cache miss [W] cobox_aEb :: String ~ t_atV
setEvBind
  ev = cobox_aEa
  tm  = CO [cobox_aEb]_N
canEvNC:eq
  String
  t_atV
can_eq_nc
  [W] cobox_aEb :: String ~ t_atV
  String
  String
  t_atV
  t_atV
can_eq_nc
  [W] cobox_aEb :: String ~ t_atV
  [Char]
  String
  t_atV
  t_atV
canEqTyVar
  t_atV
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aEc :: t_atV ~ String
setEvBind
  ev = cobox_aEb
  tm  = CO Sym cobox_aEc
rewriteEqEvidence
  [W] cobox_aEb :: String ~ t_atV
  t_atV
  String
  Sym cobox_aEc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEc :: t_atV
                                 ~ String [" a type equality [t_atV]
                                                             ~
                                                             t_atH " FQL.hs:12:5-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_atV := String
  Coercion: t_atV ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atV := String
setEvBind
  ev = cobox_aEc
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
190[<C:0,F:0>] [W] cobox_aEc :: t_atV
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atX :: [Char]
                                ~ t_atV [" a type equality [Char]
                                                           ~
                                                           t_atV " FQL.hs:12:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atX :: [Char]
                                 ~ t_atV [" a type equality [Char]
                                                            ~
                                                            t_atV " FQL.hs:12:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atX :: [Char] ~ t_atV [" a type equality [Char]
                                                     ~
                                                     t_atV " FQL.hs:12:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atV
can_eq_nc
  [W] cobox_atX :: [Char] ~ t_atV
  [Char]
  [Char]
  t_atV
  t_atV
canEqTyVar
  t_atV
  [Char]
  Is-swapped
Following bound tyvar t_atV = String
newWantedEvVar/cache miss [W] cobox_aEd :: String ~ [Char]
setEvBind
  ev = cobox_atX
  tm  = CO Sym cobox_aEd
rewriteEqEvidence
  [W] cobox_atX :: [Char] ~ t_atV
  String
  [Char]
  Sym cobox_aEd
canEqTyVar2
  t_atV
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEd :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEd :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEe :: Char ~ Char
setEvBind
  ev = cobox_aEd
  tm  = CO [cobox_aEe]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEe :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEe
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_atY :: [Char]
                                ~ t_atV [" a type equality [Char]
                                                           ~
                                                           t_atV " FQL.hs:12:13-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_atY :: [Char]
                                 ~ t_atV [" a type equality [Char]
                                                            ~
                                                            t_atV " FQL.hs:12:13-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_atY :: [Char] ~ t_atV [" a type equality [Char]
                                                     ~
                                                     t_atV " FQL.hs:12:13-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atV
can_eq_nc
  [W] cobox_atY :: [Char] ~ t_atV
  [Char]
  [Char]
  t_atV
  t_atV
canEqTyVar
  t_atV
  [Char]
  Is-swapped
Following bound tyvar t_atV = String
newWantedEvVar/cache miss [W] cobox_aEf :: String ~ [Char]
setEvBind
  ev = cobox_atY
  tm  = CO Sym cobox_aEf
rewriteEqEvidence
  [W] cobox_atY :: [Char] ~ t_atV
  String
  [Char]
  Sym cobox_aEf
canEqTyVar2
  t_atV
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEf :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEf :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEg :: Char ~ Char
setEvBind
  ev = cobox_aEf
  tm  = CO [cobox_aEg]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEg :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEg
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_au0 :: [t_atZ]
                                ~ t_atH [" a type equality [t_atZ]
                                                           ~
                                                           t_atH " FQL.hs:13:5-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_au0 :: [t_atZ]
                                 ~ t_atH [" a type equality [t_atZ]
                                                            ~
                                                            t_atH " FQL.hs:13:5-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_au0 :: [t_atZ] ~ t_atH [" a type equality [t_atZ]
                                                      ~
                                                      t_atH " FQL.hs:13:5-34] (CNonCanonical)
canEvNC:eq
  [t_atZ]
  t_atH
can_eq_nc
  [W] cobox_au0 :: [t_atZ] ~ t_atH
  [t_atZ]
  [t_atZ]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_atZ]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aEh :: [String] ~ [t_atZ]
setEvBind
  ev = cobox_au0
  tm  = CO Sym cobox_aEh
rewriteEqEvidence
  [W] cobox_au0 :: [t_atZ] ~ t_atH
  [String]
  [t_atZ]
  Sym cobox_aEh
canEqTyVar2
  t_atH
  [t_atZ]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aEh :: [String] ~ [t_atZ]
  [String]
  [String]
  [t_atZ]
  [t_atZ]
newWantedEvVar/cache miss [W] cobox_aEi :: String ~ t_atZ
setEvBind
  ev = cobox_aEh
  tm  = CO [cobox_aEi]_N
canEvNC:eq
  String
  t_atZ
can_eq_nc
  [W] cobox_aEi :: String ~ t_atZ
  String
  String
  t_atZ
  t_atZ
can_eq_nc
  [W] cobox_aEi :: String ~ t_atZ
  [Char]
  String
  t_atZ
  t_atZ
canEqTyVar
  t_atZ
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aEj :: t_atZ ~ String
setEvBind
  ev = cobox_aEi
  tm  = CO Sym cobox_aEj
rewriteEqEvidence
  [W] cobox_aEi :: String ~ t_atZ
  t_atZ
  String
  Sym cobox_aEj
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEj :: t_atZ
                                 ~ String [" a type equality [t_atZ]
                                                             ~
                                                             t_atH " FQL.hs:13:5-34] (CTyEqCan)
Sneaky unification:
  Unifies: t_atZ := String
  Coercion: t_atZ ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_atZ := String
setEvBind
  ev = cobox_aEj
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_atZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
193[<C:0,F:0>] [W] cobox_aEj :: t_atZ
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_au1 :: [Char]
                                ~ t_atZ [" a type equality [Char]
                                                           ~
                                                           t_atZ " FQL.hs:13:6-11] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_au1 :: [Char]
                                 ~ t_atZ [" a type equality [Char]
                                                            ~
                                                            t_atZ " FQL.hs:13:6-11] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_au1 :: [Char] ~ t_atZ [" a type equality [Char]
                                                     ~
                                                     t_atZ " FQL.hs:13:6-11] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atZ
can_eq_nc
  [W] cobox_au1 :: [Char] ~ t_atZ
  [Char]
  [Char]
  t_atZ
  t_atZ
canEqTyVar
  t_atZ
  [Char]
  Is-swapped
Following bound tyvar t_atZ = String
newWantedEvVar/cache miss [W] cobox_aEk :: String ~ [Char]
setEvBind
  ev = cobox_au1
  tm  = CO Sym cobox_aEk
rewriteEqEvidence
  [W] cobox_au1 :: [Char] ~ t_atZ
  String
  [Char]
  Sym cobox_aEk
canEqTyVar2
  t_atZ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEk :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEk :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEl :: Char ~ Char
setEvBind
  ev = cobox_aEk
  tm  = CO [cobox_aEl]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEl :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEl
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_au2 :: [Char]
                                ~ t_atZ [" a type equality [Char]
                                                           ~
                                                           t_atZ " FQL.hs:13:14-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_au2 :: [Char]
                                 ~ t_atZ [" a type equality [Char]
                                                            ~
                                                            t_atZ " FQL.hs:13:14-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_au2 :: [Char] ~ t_atZ [" a type equality [Char]
                                                     ~
                                                     t_atZ " FQL.hs:13:14-33] (CNonCanonical)
canEvNC:eq
  [Char]
  t_atZ
can_eq_nc
  [W] cobox_au2 :: [Char] ~ t_atZ
  [Char]
  [Char]
  t_atZ
  t_atZ
canEqTyVar
  t_atZ
  [Char]
  Is-swapped
Following bound tyvar t_atZ = String
newWantedEvVar/cache miss [W] cobox_aEm :: String ~ [Char]
setEvBind
  ev = cobox_au2
  tm  = CO Sym cobox_aEm
rewriteEqEvidence
  [W] cobox_au2 :: [Char] ~ t_atZ
  String
  [Char]
  Sym cobox_aEm
canEqTyVar2
  t_atZ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEm :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEm :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEn :: Char ~ Char
setEvBind
  ev = cobox_aEm
  tm  = CO [cobox_aEn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_au4 :: [t_au3]
                                ~ t_atH [" a type equality [t_au3]
                                                           ~
                                                           t_atH " FQL.hs:14:5-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_au4 :: [t_au3]
                                 ~ t_atH [" a type equality [t_au3]
                                                            ~
                                                            t_atH " FQL.hs:14:5-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_au4 :: [t_au3] ~ t_atH [" a type equality [t_au3]
                                                      ~
                                                      t_atH " FQL.hs:14:5-38] (CNonCanonical)
canEvNC:eq
  [t_au3]
  t_atH
can_eq_nc
  [W] cobox_au4 :: [t_au3] ~ t_atH
  [t_au3]
  [t_au3]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_au3]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aEo :: [String] ~ [t_au3]
setEvBind
  ev = cobox_au4
  tm  = CO Sym cobox_aEo
rewriteEqEvidence
  [W] cobox_au4 :: [t_au3] ~ t_atH
  [String]
  [t_au3]
  Sym cobox_aEo
canEqTyVar2
  t_atH
  [t_au3]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aEo :: [String] ~ [t_au3]
  [String]
  [String]
  [t_au3]
  [t_au3]
newWantedEvVar/cache miss [W] cobox_aEp :: String ~ t_au3
setEvBind
  ev = cobox_aEo
  tm  = CO [cobox_aEp]_N
canEvNC:eq
  String
  t_au3
can_eq_nc
  [W] cobox_aEp :: String ~ t_au3
  String
  String
  t_au3
  t_au3
can_eq_nc
  [W] cobox_aEp :: String ~ t_au3
  [Char]
  String
  t_au3
  t_au3
canEqTyVar
  t_au3
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aEq :: t_au3 ~ String
setEvBind
  ev = cobox_aEp
  tm  = CO Sym cobox_aEq
rewriteEqEvidence
  [W] cobox_aEp :: String ~ t_au3
  t_au3
  String
  Sym cobox_aEq
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEq :: t_au3
                                 ~ String [" a type equality [t_au3]
                                                             ~
                                                             t_atH " FQL.hs:14:5-38] (CTyEqCan)
Sneaky unification:
  Unifies: t_au3 := String
  Coercion: t_au3 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_au3 := String
setEvBind
  ev = cobox_aEq
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_au3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
196[<C:0,F:0>] [W] cobox_aEq :: t_au3
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_au5 :: [Char]
                                ~ t_au3 [" a type equality [Char]
                                                           ~
                                                           t_au3 " FQL.hs:14:6-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_au5 :: [Char]
                                 ~ t_au3 [" a type equality [Char]
                                                            ~
                                                            t_au3 " FQL.hs:14:6-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_au5 :: [Char] ~ t_au3 [" a type equality [Char]
                                                     ~
                                                     t_au3 " FQL.hs:14:6-15] (CNonCanonical)
canEvNC:eq
  [Char]
  t_au3
can_eq_nc
  [W] cobox_au5 :: [Char] ~ t_au3
  [Char]
  [Char]
  t_au3
  t_au3
canEqTyVar
  t_au3
  [Char]
  Is-swapped
Following bound tyvar t_au3 = String
newWantedEvVar/cache miss [W] cobox_aEr :: String ~ [Char]
setEvBind
  ev = cobox_au5
  tm  = CO Sym cobox_aEr
rewriteEqEvidence
  [W] cobox_au5 :: [Char] ~ t_au3
  String
  [Char]
  Sym cobox_aEr
canEqTyVar2
  t_au3
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEr :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEr :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEs :: Char ~ Char
setEvBind
  ev = cobox_aEr
  tm  = CO [cobox_aEs]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEs :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEs
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_au6 :: [Char]
                                ~ t_au3 [" a type equality [Char]
                                                           ~
                                                           t_au3 " FQL.hs:14:18-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_au6 :: [Char]
                                 ~ t_au3 [" a type equality [Char]
                                                            ~
                                                            t_au3 " FQL.hs:14:18-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_au6 :: [Char] ~ t_au3 [" a type equality [Char]
                                                     ~
                                                     t_au3 " FQL.hs:14:18-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_au3
can_eq_nc
  [W] cobox_au6 :: [Char] ~ t_au3
  [Char]
  [Char]
  t_au3
  t_au3
canEqTyVar
  t_au3
  [Char]
  Is-swapped
Following bound tyvar t_au3 = String
newWantedEvVar/cache miss [W] cobox_aEt :: String ~ [Char]
setEvBind
  ev = cobox_au6
  tm  = CO Sym cobox_aEt
rewriteEqEvidence
  [W] cobox_au6 :: [Char] ~ t_au3
  String
  [Char]
  Sym cobox_aEt
canEqTyVar2
  t_au3
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEt :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEt :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEu :: Char ~ Char
setEvBind
  ev = cobox_aEt
  tm  = CO [cobox_aEu]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEu :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEu
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_au8 :: [t_au7]
                                ~ t_atH [" a type equality [t_au7]
                                                           ~
                                                           t_atH " FQL.hs:15:5-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_au8 :: [t_au7]
                                 ~ t_atH [" a type equality [t_au7]
                                                            ~
                                                            t_atH " FQL.hs:15:5-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_au8 :: [t_au7] ~ t_atH [" a type equality [t_au7]
                                                      ~
                                                      t_atH " FQL.hs:15:5-46] (CNonCanonical)
canEvNC:eq
  [t_au7]
  t_atH
can_eq_nc
  [W] cobox_au8 :: [t_au7] ~ t_atH
  [t_au7]
  [t_au7]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_au7]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aEv :: [String] ~ [t_au7]
setEvBind
  ev = cobox_au8
  tm  = CO Sym cobox_aEv
rewriteEqEvidence
  [W] cobox_au8 :: [t_au7] ~ t_atH
  [String]
  [t_au7]
  Sym cobox_aEv
canEqTyVar2
  t_atH
  [t_au7]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aEv :: [String] ~ [t_au7]
  [String]
  [String]
  [t_au7]
  [t_au7]
newWantedEvVar/cache miss [W] cobox_aEw :: String ~ t_au7
setEvBind
  ev = cobox_aEv
  tm  = CO [cobox_aEw]_N
canEvNC:eq
  String
  t_au7
can_eq_nc
  [W] cobox_aEw :: String ~ t_au7
  String
  String
  t_au7
  t_au7
can_eq_nc
  [W] cobox_aEw :: String ~ t_au7
  [Char]
  String
  t_au7
  t_au7
canEqTyVar
  t_au7
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aEx :: t_au7 ~ String
setEvBind
  ev = cobox_aEw
  tm  = CO Sym cobox_aEx
rewriteEqEvidence
  [W] cobox_aEw :: String ~ t_au7
  t_au7
  String
  Sym cobox_aEx
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEx :: t_au7
                                 ~ String [" a type equality [t_au7]
                                                             ~
                                                             t_atH " FQL.hs:15:5-46] (CTyEqCan)
Sneaky unification:
  Unifies: t_au7 := String
  Coercion: t_au7 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_au7 := String
setEvBind
  ev = cobox_aEx
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_au7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
199[<C:0,F:0>] [W] cobox_aEx :: t_au7
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_au9 :: [Char]
                                ~ t_au7 [" a type equality [Char]
                                                           ~
                                                           t_au7 " FQL.hs:15:6-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_au9 :: [Char]
                                 ~ t_au7 [" a type equality [Char]
                                                            ~
                                                            t_au7 " FQL.hs:15:6-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_au9 :: [Char] ~ t_au7 [" a type equality [Char]
                                                     ~
                                                     t_au7 " FQL.hs:15:6-16] (CNonCanonical)
canEvNC:eq
  [Char]
  t_au7
can_eq_nc
  [W] cobox_au9 :: [Char] ~ t_au7
  [Char]
  [Char]
  t_au7
  t_au7
canEqTyVar
  t_au7
  [Char]
  Is-swapped
Following bound tyvar t_au7 = String
newWantedEvVar/cache miss [W] cobox_aEy :: String ~ [Char]
setEvBind
  ev = cobox_au9
  tm  = CO Sym cobox_aEy
rewriteEqEvidence
  [W] cobox_au9 :: [Char] ~ t_au7
  String
  [Char]
  Sym cobox_aEy
canEqTyVar2
  t_au7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEy :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEy :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEz :: Char ~ Char
setEvBind
  ev = cobox_aEy
  tm  = CO [cobox_aEz]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aua :: [Char]
                                ~ t_au7 [" a type equality [Char]
                                                           ~
                                                           t_au7 " FQL.hs:15:19-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aua :: [Char]
                                 ~ t_au7 [" a type equality [Char]
                                                            ~
                                                            t_au7 " FQL.hs:15:19-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aua :: [Char] ~ t_au7 [" a type equality [Char]
                                                     ~
                                                     t_au7 " FQL.hs:15:19-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_au7
can_eq_nc
  [W] cobox_aua :: [Char] ~ t_au7
  [Char]
  [Char]
  t_au7
  t_au7
canEqTyVar
  t_au7
  [Char]
  Is-swapped
Following bound tyvar t_au7 = String
newWantedEvVar/cache miss [W] cobox_aEA :: String ~ [Char]
setEvBind
  ev = cobox_aua
  tm  = CO Sym cobox_aEA
rewriteEqEvidence
  [W] cobox_aua :: [Char] ~ t_au7
  String
  [Char]
  Sym cobox_aEA
canEqTyVar2
  t_au7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEA :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEA :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEB :: Char ~ Char
setEvBind
  ev = cobox_aEA
  tm  = CO [cobox_aEB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_auc :: [t_aub]
                                ~ t_atH [" a type equality [t_aub]
                                                           ~
                                                           t_atH " FQL.hs:16:5-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_auc :: [t_aub]
                                 ~ t_atH [" a type equality [t_aub]
                                                            ~
                                                            t_atH " FQL.hs:16:5-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_auc :: [t_aub] ~ t_atH [" a type equality [t_aub]
                                                      ~
                                                      t_atH " FQL.hs:16:5-54] (CNonCanonical)
canEvNC:eq
  [t_aub]
  t_atH
can_eq_nc
  [W] cobox_auc :: [t_aub] ~ t_atH
  [t_aub]
  [t_aub]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_aub]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aEC :: [String] ~ [t_aub]
setEvBind
  ev = cobox_auc
  tm  = CO Sym cobox_aEC
rewriteEqEvidence
  [W] cobox_auc :: [t_aub] ~ t_atH
  [String]
  [t_aub]
  Sym cobox_aEC
canEqTyVar2
  t_atH
  [t_aub]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aEC :: [String] ~ [t_aub]
  [String]
  [String]
  [t_aub]
  [t_aub]
newWantedEvVar/cache miss [W] cobox_aED :: String ~ t_aub
setEvBind
  ev = cobox_aEC
  tm  = CO [cobox_aED]_N
canEvNC:eq
  String
  t_aub
can_eq_nc
  [W] cobox_aED :: String ~ t_aub
  String
  String
  t_aub
  t_aub
can_eq_nc
  [W] cobox_aED :: String ~ t_aub
  [Char]
  String
  t_aub
  t_aub
canEqTyVar
  t_aub
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aEE :: t_aub ~ String
setEvBind
  ev = cobox_aED
  tm  = CO Sym cobox_aEE
rewriteEqEvidence
  [W] cobox_aED :: String ~ t_aub
  t_aub
  String
  Sym cobox_aEE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEE :: t_aub
                                 ~ String [" a type equality [t_aub]
                                                             ~
                                                             t_atH " FQL.hs:16:5-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_aub := String
  Coercion: t_aub ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aub := String
setEvBind
  ev = cobox_aEE
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aub
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
202[<C:0,F:0>] [W] cobox_aEE :: t_aub
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aud :: [Char]
                                ~ t_aub [" a type equality [Char]
                                                           ~
                                                           t_aub " FQL.hs:16:6-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aud :: [Char]
                                 ~ t_aub [" a type equality [Char]
                                                            ~
                                                            t_aub " FQL.hs:16:6-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aud :: [Char] ~ t_aub [" a type equality [Char]
                                                     ~
                                                     t_aub " FQL.hs:16:6-16] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aub
can_eq_nc
  [W] cobox_aud :: [Char] ~ t_aub
  [Char]
  [Char]
  t_aub
  t_aub
canEqTyVar
  t_aub
  [Char]
  Is-swapped
Following bound tyvar t_aub = String
newWantedEvVar/cache miss [W] cobox_aEF :: String ~ [Char]
setEvBind
  ev = cobox_aud
  tm  = CO Sym cobox_aEF
rewriteEqEvidence
  [W] cobox_aud :: [Char] ~ t_aub
  String
  [Char]
  Sym cobox_aEF
canEqTyVar2
  t_aub
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEF :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEF :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEG :: Char ~ Char
setEvBind
  ev = cobox_aEF
  tm  = CO [cobox_aEG]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEG :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEG
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aue :: [Char]
                                ~ t_aub [" a type equality [Char]
                                                           ~
                                                           t_aub " FQL.hs:16:19-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aue :: [Char]
                                 ~ t_aub [" a type equality [Char]
                                                            ~
                                                            t_aub " FQL.hs:16:19-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aue :: [Char] ~ t_aub [" a type equality [Char]
                                                     ~
                                                     t_aub " FQL.hs:16:19-53] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aub
can_eq_nc
  [W] cobox_aue :: [Char] ~ t_aub
  [Char]
  [Char]
  t_aub
  t_aub
canEqTyVar
  t_aub
  [Char]
  Is-swapped
Following bound tyvar t_aub = String
newWantedEvVar/cache miss [W] cobox_aEH :: String ~ [Char]
setEvBind
  ev = cobox_aue
  tm  = CO Sym cobox_aEH
rewriteEqEvidence
  [W] cobox_aue :: [Char] ~ t_aub
  String
  [Char]
  Sym cobox_aEH
canEqTyVar2
  t_aub
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEH :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEH :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEI :: Char ~ Char
setEvBind
  ev = cobox_aEH
  tm  = CO [cobox_aEI]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEI :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEI
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aug :: [t_auf]
                                ~ t_atH [" a type equality [t_auf]
                                                           ~
                                                           t_atH " FQL.hs:17:5-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aug :: [t_auf]
                                 ~ t_atH [" a type equality [t_auf]
                                                            ~
                                                            t_atH " FQL.hs:17:5-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aug :: [t_auf] ~ t_atH [" a type equality [t_auf]
                                                      ~
                                                      t_atH " FQL.hs:17:5-48] (CNonCanonical)
canEvNC:eq
  [t_auf]
  t_atH
can_eq_nc
  [W] cobox_aug :: [t_auf] ~ t_atH
  [t_auf]
  [t_auf]
  t_atH
  t_atH
canEqTyVar
  t_atH
  [t_auf]
  Is-swapped
Following bound tyvar t_atH = [String]
newWantedEvVar/cache miss [W] cobox_aEJ :: [String] ~ [t_auf]
setEvBind
  ev = cobox_aug
  tm  = CO Sym cobox_aEJ
rewriteEqEvidence
  [W] cobox_aug :: [t_auf] ~ t_atH
  [String]
  [t_auf]
  Sym cobox_aEJ
canEqTyVar2
  t_atH
  [t_auf]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aEJ :: [String] ~ [t_auf]
  [String]
  [String]
  [t_auf]
  [t_auf]
newWantedEvVar/cache miss [W] cobox_aEK :: String ~ t_auf
setEvBind
  ev = cobox_aEJ
  tm  = CO [cobox_aEK]_N
canEvNC:eq
  String
  t_auf
can_eq_nc
  [W] cobox_aEK :: String ~ t_auf
  String
  String
  t_auf
  t_auf
can_eq_nc
  [W] cobox_aEK :: String ~ t_auf
  [Char]
  String
  t_auf
  t_auf
canEqTyVar
  t_auf
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aEL :: t_auf ~ String
setEvBind
  ev = cobox_aEK
  tm  = CO Sym cobox_aEL
rewriteEqEvidence
  [W] cobox_aEK :: String ~ t_auf
  t_auf
  String
  Sym cobox_aEL
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEL :: t_auf
                                 ~ String [" a type equality [t_auf]
                                                             ~
                                                             t_atH " FQL.hs:17:5-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_auf := String
  Coercion: t_auf ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_auf := String
setEvBind
  ev = cobox_aEL
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_auf
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
205[<C:0,F:0>] [W] cobox_aEL :: t_auf
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_auh :: [Char]
                                ~ t_auf [" a type equality [Char]
                                                           ~
                                                           t_auf " FQL.hs:17:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_auh :: [Char]
                                 ~ t_auf [" a type equality [Char]
                                                            ~
                                                            t_auf " FQL.hs:17:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_auh :: [Char] ~ t_auf [" a type equality [Char]
                                                     ~
                                                     t_auf " FQL.hs:17:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_auf
can_eq_nc
  [W] cobox_auh :: [Char] ~ t_auf
  [Char]
  [Char]
  t_auf
  t_auf
canEqTyVar
  t_auf
  [Char]
  Is-swapped
Following bound tyvar t_auf = String
newWantedEvVar/cache miss [W] cobox_aEM :: String ~ [Char]
setEvBind
  ev = cobox_auh
  tm  = CO Sym cobox_aEM
rewriteEqEvidence
  [W] cobox_auh :: [Char] ~ t_auf
  String
  [Char]
  Sym cobox_aEM
canEqTyVar2
  t_auf
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEM :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEM :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEN :: Char ~ Char
setEvBind
  ev = cobox_aEM
  tm  = CO [cobox_aEN]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aui :: [Char]
                                ~ t_auf [" a type equality [Char]
                                                           ~
                                                           t_auf " FQL.hs:17:13-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aui :: [Char]
                                 ~ t_auf [" a type equality [Char]
                                                            ~
                                                            t_auf " FQL.hs:17:13-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aui :: [Char] ~ t_auf [" a type equality [Char]
                                                     ~
                                                     t_auf " FQL.hs:17:13-47] (CNonCanonical)
canEvNC:eq
  [Char]
  t_auf
can_eq_nc
  [W] cobox_aui :: [Char] ~ t_auf
  [Char]
  [Char]
  t_auf
  t_auf
canEqTyVar
  t_auf
  [Char]
  Is-swapped
Following bound tyvar t_auf = String
newWantedEvVar/cache miss [W] cobox_aEO :: String ~ [Char]
setEvBind
  ev = cobox_aui
  tm  = CO Sym cobox_aEO
rewriteEqEvidence
  [W] cobox_aui :: [Char] ~ t_auf
  String
  [Char]
  Sym cobox_aEO
canEqTyVar2
  t_auf
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEO :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aEO :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aEP :: Char ~ Char
setEvBind
  ev = cobox_aEO
  tm  = CO [cobox_aEP]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEP :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEP
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aul :: a_auk
                                ~ (t_an3 -> t_an4 -> t_an5) [" a type equality a_auk
                                                                               ~
                                                                               t_an3
                                                                               -> t_an4
                                                                               -> t_an5 " FQL.hs:6:12-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aul :: a_auk
                                 ~ (t_an3 -> t_an4 -> t_an5) [" a type equality a_auk
                                                                                ~
                                                                                t_an3
                                                                                -> t_an4
                                                                                -> t_an5 " FQL.hs:6:12-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aul :: a_auk
                   ~ (t_an3 -> t_an4 -> t_an5) [" a type equality a_auk
                                                                  ~
                                                                  t_an3
                                                                  -> t_an4
                                                                  -> t_an5 " FQL.hs:6:12-20] (CNonCanonical)
canEvNC:eq
  a_auk
  t_an3 -> t_an4 -> t_an5
can_eq_nc
  [W] cobox_aul :: a_auk ~ (t_an3 -> t_an4 -> t_an5)
  a_auk
  a_auk
  t_an3 -> t_an4 -> t_an5
  t_an3 -> t_an4 -> t_an5
canEqTyVar
  a_auk
  t_an3 -> t_an4 -> t_an5
  Not-swapped
Following bound tyvar t_an3 = String
Following bound tyvar t_an4 = String
Following bound tyvar t_an5 = Bool
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aul :: a_auk
                                 ~ (String -> String -> Bool) [" a type equality a_auk
                                                                                 ~
                                                                                 t_an3
                                                                                 -> t_an4
                                                                                 -> t_an5 " FQL.hs:6:12-20] (CTyEqCan)
Sneaky unification:
  Unifies: a_auk := String -> String -> Bool
  Coercion: a_auk ~ (String -> String -> Bool)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind a_auk := String -> String -> Bool
setEvBind
  ev = cobox_aul
  tm  = CO <String -> String -> Bool>_N
kickOutRewritable
  tv =  a_auk
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
208[<C:0,F:0>] [W] cobox_aul :: a_auk
                                ~ (String -> String -> Bool): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_auo :: [t_aun]
                                ~ t_amm [" a type equality [t_aun]
                                                           ~
                                                           t_amm " FQL.hs:71:13-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_auo :: [t_aun]
                                 ~ t_amm [" a type equality [t_aun]
                                                            ~
                                                            t_amm " FQL.hs:71:13-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_auo :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                      ~
                                                      t_amm " FQL.hs:71:13-18] (CNonCanonical)
canEvNC:eq
  [t_aun]
  t_amm
can_eq_nc
  [W] cobox_auo :: [t_aun] ~ t_amm
  [t_aun]
  [t_aun]
  t_amm
  t_amm
canEqTyVar
  t_amm
  [t_aun]
  Is-swapped
Following bound tyvar t_amm = [String]
newWantedEvVar/cache miss [W] cobox_aEQ :: [String] ~ [t_aun]
setEvBind
  ev = cobox_auo
  tm  = CO Sym cobox_aEQ
rewriteEqEvidence
  [W] cobox_auo :: [t_aun] ~ t_amm
  [String]
  [t_aun]
  Sym cobox_aEQ
canEqTyVar2
  t_amm
  [t_aun]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aEQ :: [String] ~ [t_aun]
  [String]
  [String]
  [t_aun]
  [t_aun]
newWantedEvVar/cache miss [W] cobox_aER :: String ~ t_aun
setEvBind
  ev = cobox_aEQ
  tm  = CO [cobox_aER]_N
canEvNC:eq
  String
  t_aun
can_eq_nc
  [W] cobox_aER :: String ~ t_aun
  String
  String
  t_aun
  t_aun
can_eq_nc
  [W] cobox_aER :: String ~ t_aun
  [Char]
  String
  t_aun
  t_aun
canEqTyVar
  t_aun
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aES :: t_aun ~ String
setEvBind
  ev = cobox_aER
  tm  = CO Sym cobox_aES
rewriteEqEvidence
  [W] cobox_aER :: String ~ t_aun
  t_aun
  String
  Sym cobox_aES
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aES :: t_aun
                                 ~ String [" a type equality [t_aun]
                                                             ~
                                                             t_amm " FQL.hs:71:13-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aun := String
  Coercion: t_aun ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aun := String
setEvBind
  ev = cobox_aES
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aun
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
209[<C:0,F:0>] [W] cobox_aES :: t_aun
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aup :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " FQL.hs:71:23-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aup :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " FQL.hs:71:23-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aup :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " FQL.hs:71:23-49] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aup :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aup
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aus :: [b_aur]
                                ~ [Bool] [" a type equality [b_aur]
                                                            ~
                                                            [Bool] " FQL.hs:71:27-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aus :: [b_aur]
                                 ~ [Bool] [" a type equality [b_aur]
                                                             ~
                                                             [Bool] " FQL.hs:71:27-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aus :: [b_aur] ~ [Bool] [" a type equality [b_aur]
                                                       ~
                                                       [Bool] " FQL.hs:71:27-48] (CNonCanonical)
canEvNC:eq
  [b_aur]
  [Bool]
can_eq_nc
  [W] cobox_aus :: [b_aur] ~ [Bool]
  [b_aur]
  [b_aur]
  [Bool]
  [Bool]
newWantedEvVar/cache miss [W] cobox_aET :: b_aur ~ Bool
setEvBind
  ev = cobox_aus
  tm  = CO [cobox_aET]_N
canEvNC:eq
  b_aur
  Bool
can_eq_nc
  [W] cobox_aET :: b_aur ~ Bool
  b_aur
  b_aur
  Bool
  Bool
canEqTyVar
  b_aur
  Bool
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aET :: b_aur
                                 ~ Bool [" a type equality [b_aur]
                                                           ~
                                                           [Bool] " FQL.hs:71:27-48] (CTyEqCan)
Sneaky unification:
  Unifies: b_aur := Bool
  Coercion: b_aur ~ Bool
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aur := Bool
setEvBind
  ev = cobox_aET
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  b_aur
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
211[<C:0,F:0>] [W] cobox_aET :: b_aur ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aut :: (t_an4 -> t_an5)
                                ~ (a_auq -> b_aur) [" a type equality t_an4 -> t_an5
                                                                      ~
                                                                      a_auq
                                                                      -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aut :: (t_an4 -> t_an5)
                                 ~ (a_auq -> b_aur) [" a type equality t_an4 -> t_an5
                                                                       ~
                                                                       a_auq
                                                                       -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aut :: (t_an4 -> t_an5)
                   ~ (a_auq -> b_aur) [" a type equality t_an4 -> t_an5
                                                         ~
                                                         a_auq
                                                         -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
canEvNC:eq
  t_an4 -> t_an5
  a_auq -> b_aur
can_eq_nc
  [W] cobox_aut :: (t_an4 -> t_an5) ~ (a_auq -> b_aur)
  t_an4 -> t_an5
  t_an4 -> t_an5
  a_auq -> b_aur
  a_auq -> b_aur
newWantedEvVar/cache miss [W] cobox_aEU :: t_an4 ~ a_auq
newWantedEvVar/cache miss [W] cobox_aEV :: t_an5 ~ b_aur
setEvBind
  ev = cobox_aut
  tm  = CO cobox_aEU -> cobox_aEV
canEvNC:eq
  t_an4
  a_auq
can_eq_nc
  [W] cobox_aEU :: t_an4 ~ a_auq
  t_an4
  t_an4
  a_auq
  a_auq
canEqTyVar
  t_an4
  a_auq
  Not-swapped
Following bound tyvar t_an4 = String
canEqTyVar2
  t_an4
  a_auq
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEU :: String ~ a_auq
  String
  String
  a_auq
  a_auq
can_eq_nc
  [W] cobox_aEU :: String ~ a_auq
  [Char]
  String
  a_auq
  a_auq
canEqTyVar
  a_auq
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aEW :: a_auq ~ String
setEvBind
  ev = cobox_aEU
  tm  = CO Sym cobox_aEW
rewriteEqEvidence
  [W] cobox_aEU :: String ~ a_auq
  a_auq
  String
  Sym cobox_aEW
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEW :: a_auq
                                 ~ String [" a type equality t_an4 -> t_an5
                                                             ~
                                                             a_auq
                                                             -> b_aur " FQL.hs:71:32-42] (CTyEqCan)
Sneaky unification:
  Unifies: a_auq := String
  Coercion: a_auq ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_auq := String
setEvBind
  ev = cobox_aEW
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_auq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
212[<C:0,F:0>] [W] cobox_aEW :: a_auq
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEV :: t_an5
                                ~ b_aur [" a type equality t_an4 -> t_an5
                                                           ~
                                                           a_auq
                                                           -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEV :: t_an5
                                 ~ b_aur [" a type equality t_an4 -> t_an5
                                                            ~
                                                            a_auq
                                                            -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEV :: t_an5 ~ b_aur [" a type equality t_an4 -> t_an5
                                                    ~
                                                    a_auq
                                                    -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
canEvNC:eq
  t_an5
  b_aur
can_eq_nc
  [W] cobox_aEV :: t_an5 ~ b_aur
  t_an5
  t_an5
  b_aur
  b_aur
canEqTyVar
  t_an5
  b_aur
  Not-swapped
Following bound tyvar t_an5 = Bool
canEqTyVar2
  t_an5
  b_aur
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aEV :: Bool ~ b_aur
  Bool
  Bool
  b_aur
  b_aur
canEqTyVar
  b_aur
  Bool
  Is-swapped
Following bound tyvar b_aur = Bool
newWantedEvVar/cache miss [W] cobox_aEX :: Bool ~ Bool
setEvBind
  ev = cobox_aEV
  tm  = CO Sym cobox_aEX
rewriteEqEvidence
  [W] cobox_aEV :: Bool ~ b_aur
  Bool
  Bool
  Sym cobox_aEX
canEqTyVar2
  b_aur
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aEX :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aEX
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_auu :: t_aun
                                ~ t_an3 [" a type equality t_aun
                                                           ~
                                                           t_an3 " FQL.hs:71:41-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_auu :: t_aun
                                 ~ t_an3 [" a type equality t_aun
                                                            ~
                                                            t_an3 " FQL.hs:71:41-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_auu :: t_aun ~ t_an3 [" a type equality t_aun
                                                    ~
                                                    t_an3 " FQL.hs:71:41-42] (CNonCanonical)
canEvNC:eq
  t_aun
  t_an3
can_eq_nc
  [W] cobox_auu :: t_aun ~ t_an3
  t_aun
  t_aun
  t_an3
  t_an3
canEqTyVar
  t_aun
  t_an3
  Not-swapped
Following bound tyvar t_aun = String
canEqTyVar2
  t_aun
  t_an3
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_auu :: String ~ t_an3
  String
  String
  t_an3
  t_an3
can_eq_nc
  [W] cobox_auu :: String ~ t_an3
  [Char]
  String
  t_an3
  t_an3
canEqTyVar
  t_an3
  [Char]
  Is-swapped
Following bound tyvar t_an3 = String
newWantedEvVar/cache miss [W] cobox_aEY :: String ~ String
setEvBind
  ev = cobox_auu
  tm  = CO Sym cobox_aEY
rewriteEqEvidence
  [W] cobox_auu :: String ~ t_an3
  String
  String
  Sym cobox_aEY
canEqTyVar2
  t_an3
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEY :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aEY :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aEZ :: Char ~ Char
setEvBind
  ev = cobox_aEY
  tm  = CO [cobox_aEZ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aEZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aEZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_auv :: t_aml
                                ~ [a_auq] [" a type equality t_aml
                                                             ~
                                                             [a_auq] " FQL.hs:71:45-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_auv :: t_aml
                                 ~ [a_auq] [" a type equality t_aml
                                                              ~
                                                              [a_auq] " FQL.hs:71:45-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_auv :: t_aml ~ [a_auq] [" a type equality t_aml
                                                      ~
                                                      [a_auq] " FQL.hs:71:45-48] (CNonCanonical)
canEvNC:eq
  t_aml
  [a_auq]
can_eq_nc
  [W] cobox_auv :: t_aml ~ [a_auq]
  t_aml
  t_aml
  [a_auq]
  [a_auq]
canEqTyVar
  t_aml
  [a_auq]
  Not-swapped
Following bound tyvar t_aml = [String]
canEqTyVar2
  t_aml
  [a_auq]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_auv :: [String] ~ [a_auq]
  [String]
  [String]
  [a_auq]
  [a_auq]
newWantedEvVar/cache miss [W] cobox_aF0 :: String ~ a_auq
setEvBind
  ev = cobox_auv
  tm  = CO [cobox_aF0]_N
canEvNC:eq
  String
  a_auq
can_eq_nc
  [W] cobox_aF0 :: String ~ a_auq
  String
  String
  a_auq
  a_auq
can_eq_nc
  [W] cobox_aF0 :: String ~ a_auq
  [Char]
  String
  a_auq
  a_auq
canEqTyVar
  a_auq
  [Char]
  Is-swapped
Following bound tyvar a_auq = String
newWantedEvVar/cache miss [W] cobox_aF1 :: String ~ String
setEvBind
  ev = cobox_aF0
  tm  = CO Sym cobox_aF1
rewriteEqEvidence
  [W] cobox_aF0 :: String ~ a_auq
  String
  String
  Sym cobox_aF1
canEqTyVar2
  a_auq
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aF1 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aF1 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aF2 :: Char ~ Char
setEvBind
  ev = cobox_aF1
  tm  = CO [cobox_aF2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aF2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aF2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awE :: (Integer -> a_awC)
                                ~ (Integer -> t_amn) [" a type equality Integer -> a_awC
                                                                        ~
                                                                        Integer
                                                                        -> t_amn " FQL.hs:71:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awE :: (Integer -> a_awC)
                                 ~ (Integer -> t_amn) [" a type equality Integer -> a_awC
                                                                         ~
                                                                         Integer
                                                                         -> t_amn " FQL.hs:71:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awE :: (Integer -> a_awC)
                   ~ (Integer -> t_amn) [" a type equality Integer -> a_awC
                                                           ~
                                                           Integer
                                                           -> t_amn " FQL.hs:71:53] (CNonCanonical)
canEvNC:eq
  Integer -> a_awC
  Integer -> t_amn
can_eq_nc
  [W] cobox_awE :: (Integer -> a_awC) ~ (Integer -> t_amn)
  Integer -> a_awC
  Integer -> a_awC
  Integer -> t_amn
  Integer -> t_amn
newWantedEvVar/cache miss [W] cobox_aF3 :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aF4 :: a_awC ~ t_amn
setEvBind
  ev = cobox_awE
  tm  = CO cobox_aF3 -> cobox_aF4
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aF3 :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aF3
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF4 :: a_awC
                                ~ t_amn [" a type equality Integer -> a_awC
                                                           ~
                                                           Integer
                                                           -> t_amn " FQL.hs:71:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF4 :: a_awC
                                 ~ t_amn [" a type equality Integer -> a_awC
                                                            ~
                                                            Integer
                                                            -> t_amn " FQL.hs:71:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF4 :: a_awC ~ t_amn [" a type equality Integer -> a_awC
                                                    ~
                                                    Integer -> t_amn " FQL.hs:71:53] (CNonCanonical)
canEvNC:eq
  a_awC
  t_amn
can_eq_nc
  [W] cobox_aF4 :: a_awC ~ t_amn
  a_awC
  a_awC
  t_amn
  t_amn
canEqTyVar
  a_awC
  t_amn
  Not-swapped
Following bound tyvar t_amn = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aF4 :: a_awC
                                 ~ Int [" a type equality Integer -> a_awC
                                                          ~
                                                          Integer
                                                          -> t_amn " FQL.hs:71:53] (CTyEqCan)
Sneaky unification:
  Unifies: a_awC := Int
  Coercion: a_awC ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_awC := Int
setEvBind
  ev = cobox_aF4
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_awC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
217[<C:0,F:0>] [W] cobox_aF4 :: a_awC ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awF :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " FQL.hs:72:23-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awF :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " FQL.hs:72:23-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awF :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " FQL.hs:72:23-31] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_awF :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_awF
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awI :: a_awG
                                ~ t_amn [" a type equality a_awG
                                                           ~
                                                           t_amn " FQL.hs:72:53-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awI :: a_awG
                                 ~ t_amn [" a type equality a_awG
                                                            ~
                                                            t_amn " FQL.hs:72:53-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awI :: a_awG ~ t_amn [" a type equality a_awG
                                                    ~
                                                    t_amn " FQL.hs:72:53-70] (CNonCanonical)
canEvNC:eq
  a_awG
  t_amn
can_eq_nc
  [W] cobox_awI :: a_awG ~ t_amn
  a_awG
  a_awG
  t_amn
  t_amn
canEqTyVar
  a_awG
  t_amn
  Not-swapped
Following bound tyvar t_amn = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awI :: a_awG ~ Int [" a type equality a_awG
                                                                ~
                                                                t_amn " FQL.hs:72:53-70] (CTyEqCan)
Sneaky unification:
  Unifies: a_awG := Int
  Coercion: a_awG ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_awG := Int
setEvBind
  ev = cobox_awI
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_awG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
219[<C:0,F:0>] [W] cobox_awI :: a_awG ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awL :: (Integer -> a_awJ)
                                ~ (Integer -> a_awG) [" a type equality Integer -> a_awJ
                                                                        ~
                                                                        Integer
                                                                        -> a_awG " FQL.hs:72:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awL :: (Integer -> a_awJ)
                                 ~ (Integer -> a_awG) [" a type equality Integer -> a_awJ
                                                                         ~
                                                                         Integer
                                                                         -> a_awG " FQL.hs:72:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awL :: (Integer -> a_awJ)
                   ~ (Integer -> a_awG) [" a type equality Integer -> a_awJ
                                                           ~
                                                           Integer
                                                           -> a_awG " FQL.hs:72:53] (CNonCanonical)
canEvNC:eq
  Integer -> a_awJ
  Integer -> a_awG
can_eq_nc
  [W] cobox_awL :: (Integer -> a_awJ) ~ (Integer -> a_awG)
  Integer -> a_awJ
  Integer -> a_awJ
  Integer -> a_awG
  Integer -> a_awG
newWantedEvVar/cache miss [W] cobox_aF5 :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aF6 :: a_awJ ~ a_awG
setEvBind
  ev = cobox_awL
  tm  = CO cobox_aF5 -> cobox_aF6
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aF5 :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aF5
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF6 :: a_awJ
                                ~ a_awG [" a type equality Integer -> a_awJ
                                                           ~
                                                           Integer
                                                           -> a_awG " FQL.hs:72:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF6 :: a_awJ
                                 ~ a_awG [" a type equality Integer -> a_awJ
                                                            ~
                                                            Integer
                                                            -> a_awG " FQL.hs:72:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF6 :: a_awJ ~ a_awG [" a type equality Integer -> a_awJ
                                                    ~
                                                    Integer -> a_awG " FQL.hs:72:53] (CNonCanonical)
canEvNC:eq
  a_awJ
  a_awG
can_eq_nc
  [W] cobox_aF6 :: a_awJ ~ a_awG
  a_awJ
  a_awJ
  a_awG
  a_awG
canEqTyVar
  a_awJ
  a_awG
  Not-swapped
Following bound tyvar a_awG = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aF6 :: a_awJ
                                 ~ Int [" a type equality Integer -> a_awJ
                                                          ~
                                                          Integer
                                                          -> a_awG " FQL.hs:72:53] (CTyEqCan)
Sneaky unification:
  Unifies: a_awJ := Int
  Coercion: a_awJ ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_awJ := Int
setEvBind
  ev = cobox_aF6
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_awJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
221[<C:0,F:0>] [W] cobox_aF6 :: a_awJ ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awM :: t_amn
                                ~ a_awG [" a type equality t_amn
                                                           ~
                                                           a_awG " FQL.hs:72:57-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awM :: t_amn
                                 ~ a_awG [" a type equality t_amn
                                                            ~
                                                            a_awG " FQL.hs:72:57-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awM :: t_amn ~ a_awG [" a type equality t_amn
                                                    ~
                                                    a_awG " FQL.hs:72:57-70] (CNonCanonical)
canEvNC:eq
  t_amn
  a_awG
can_eq_nc
  [W] cobox_awM :: t_amn ~ a_awG
  t_amn
  t_amn
  a_awG
  a_awG
canEqTyVar
  t_amn
  a_awG
  Not-swapped
Following bound tyvar t_amn = Int
canEqTyVar2
  t_amn
  a_awG
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_awM :: Int ~ a_awG
  Int
  Int
  a_awG
  a_awG
canEqTyVar
  a_awG
  Int
  Is-swapped
Following bound tyvar a_awG = Int
newWantedEvVar/cache miss [W] cobox_aF7 :: Int ~ Int
setEvBind
  ev = cobox_awM
  tm  = CO Sym cobox_aF7
rewriteEqEvidence
  [W] cobox_awM :: Int ~ a_awG
  Int
  Int
  Sym cobox_aF7
canEqTyVar2
  a_awG
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aF7 :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aF7
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awN :: t_aml
                                ~ t_aml [" a type equality t_aml
                                                           ~
                                                           t_aml " FQL.hs:72:63-66] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awN :: t_aml
                                 ~ t_aml [" a type equality t_aml
                                                            ~
                                                            t_aml " FQL.hs:72:63-66] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awN :: t_aml ~ t_aml [" a type equality t_aml
                                                    ~
                                                    t_aml " FQL.hs:72:63-66] (CNonCanonical)
canEvNC:eq
  t_aml
  t_aml
can_eq_nc
  [W] cobox_awN :: t_aml ~ t_aml
  t_aml
  t_aml
  t_aml
  t_aml
canEqTyVar
  t_aml
  t_aml
  Not-swapped
Following bound tyvar t_aml = [String]
canEqTyVar2
  t_aml
  t_aml
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_awN :: [String] ~ t_aml
  [String]
  [String]
  t_aml
  t_aml
canEqTyVar
  t_aml
  [String]
  Is-swapped
Following bound tyvar t_aml = [String]
newWantedEvVar/cache miss [W] cobox_aF8 :: [String] ~ [String]
setEvBind
  ev = cobox_awN
  tm  = CO Sym cobox_aF8
rewriteEqEvidence
  [W] cobox_awN :: [String] ~ t_aml
  [String]
  [String]
  Sym cobox_aF8
canEqTyVar2
  t_aml
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aF8 :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aF9 :: String ~ String
setEvBind
  ev = cobox_aF8
  tm  = CO [cobox_aF9]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aF9 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aF9 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aF9 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aFa :: Char ~ Char
setEvBind
  ev = cobox_aF9
  tm  = CO [cobox_aFa]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aFa :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aFa
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awO :: [t_aun]
                                ~ t_amm [" a type equality [t_aun]
                                                           ~
                                                           t_amm " FQL.hs:72:68-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awO :: [t_aun]
                                 ~ t_amm [" a type equality [t_aun]
                                                            ~
                                                            t_amm " FQL.hs:72:68-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awO :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                      ~
                                                      t_amm " FQL.hs:72:68-70] (CNonCanonical)
canEvNC:eq
  [t_aun]
  t_amm
can_eq_nc
  [W] cobox_awO :: [t_aun] ~ t_amm
  [t_aun]
  [t_aun]
  t_amm
  t_amm
canEqTyVar
  t_amm
  [t_aun]
  Is-swapped
Following bound tyvar t_amm = [String]
newWantedEvVar/cache miss [W] cobox_aFb :: [String] ~ [t_aun]
setEvBind
  ev = cobox_awO
  tm  = CO Sym cobox_aFb
rewriteEqEvidence
  [W] cobox_awO :: [t_aun] ~ t_amm
  [String]
  [t_aun]
  Sym cobox_aFb
canEqTyVar2
  t_amm
  [t_aun]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aFb :: [String] ~ [t_aun]
  [String]
  [String]
  [t_aun]
  [t_aun]
newWantedEvVar/cache miss [W] cobox_aFc :: String ~ t_aun
setEvBind
  ev = cobox_aFb
  tm  = CO [cobox_aFc]_N
canEvNC:eq
  String
  t_aun
can_eq_nc
  [W] cobox_aFc :: String ~ t_aun
  String
  String
  t_aun
  t_aun
can_eq_nc
  [W] cobox_aFc :: String ~ t_aun
  [Char]
  String
  t_aun
  t_aun
canEqTyVar
  t_aun
  [Char]
  Is-swapped
Following bound tyvar t_aun = String
newWantedEvVar/cache miss [W] cobox_aFd :: String ~ String
setEvBind
  ev = cobox_aFc
  tm  = CO Sym cobox_aFd
rewriteEqEvidence
  [W] cobox_aFc :: String ~ t_aun
  String
  String
  Sym cobox_aFd
canEqTyVar2
  t_aun
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aFd :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aFd :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aFe :: Char ~ Char
setEvBind
  ev = cobox_aFd
  tm  = CO [cobox_aFe]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aFe :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aFe
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awS :: [b_awR]
                                ~ t_amt [" a type equality [b_awR]
                                                           ~
                                                           t_amt " FQL.hs:66:34-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awS :: [b_awR]
                                 ~ t_amt [" a type equality [b_awR]
                                                            ~
                                                            t_amt " FQL.hs:66:34-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awS :: [b_awR] ~ t_amt [" a type equality [b_awR]
                                                      ~
                                                      t_amt " FQL.hs:66:34-68] (CNonCanonical)
canEvNC:eq
  [b_awR]
  t_amt
can_eq_nc
  [W] cobox_awS :: [b_awR] ~ t_amt
  [b_awR]
  [b_awR]
  t_amt
  t_amt
canEqTyVar
  t_amt
  [b_awR]
  Is-swapped
Following bound tyvar t_amt = [Int]
newWantedEvVar/cache miss [W] cobox_aFf :: [Int] ~ [b_awR]
setEvBind
  ev = cobox_awS
  tm  = CO Sym cobox_aFf
rewriteEqEvidence
  [W] cobox_awS :: [b_awR] ~ t_amt
  [Int]
  [b_awR]
  Sym cobox_aFf
canEqTyVar2
  t_amt
  [b_awR]
  Is-swapped
  [Int]
  <[Int]>_N
can_eq_nc
  [W] cobox_aFf :: [Int] ~ [b_awR]
  [Int]
  [Int]
  [b_awR]
  [b_awR]
newWantedEvVar/cache miss [W] cobox_aFg :: Int ~ b_awR
setEvBind
  ev = cobox_aFf
  tm  = CO [cobox_aFg]_N
canEvNC:eq
  Int
  b_awR
can_eq_nc
  [W] cobox_aFg :: Int ~ b_awR
  Int
  Int
  b_awR
  b_awR
canEqTyVar
  b_awR
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFh :: b_awR ~ Int
setEvBind
  ev = cobox_aFg
  tm  = CO Sym cobox_aFh
rewriteEqEvidence
  [W] cobox_aFg :: Int ~ b_awR
  b_awR
  Int
  Sym cobox_aFh
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFh :: b_awR
                                 ~ Int [" a type equality [b_awR]
                                                          ~
                                                          t_amt " FQL.hs:66:34-68] (CTyEqCan)
Sneaky unification:
  Unifies: b_awR := Int
  Coercion: b_awR ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_awR := Int
setEvBind
  ev = cobox_aFh
  tm  = CO <Int>_N
kickOutRewritable
  tv =  b_awR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
225[<C:0,F:0>] [W] cobox_aFh :: b_awR ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awT :: t_amn
                                ~ b_awR [" a type equality t_amn
                                                           ~
                                                           b_awR " FQL.hs:66:44-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awT :: t_amn
                                 ~ b_awR [" a type equality t_amn
                                                            ~
                                                            b_awR " FQL.hs:66:44-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awT :: t_amn ~ b_awR [" a type equality t_amn
                                                    ~
                                                    b_awR " FQL.hs:66:44-62] (CNonCanonical)
canEvNC:eq
  t_amn
  b_awR
can_eq_nc
  [W] cobox_awT :: t_amn ~ b_awR
  t_amn
  t_amn
  b_awR
  b_awR
canEqTyVar
  t_amn
  b_awR
  Not-swapped
Following bound tyvar t_amn = Int
canEqTyVar2
  t_amn
  b_awR
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_awT :: Int ~ b_awR
  Int
  Int
  b_awR
  b_awR
canEqTyVar
  b_awR
  Int
  Is-swapped
Following bound tyvar b_awR = Int
newWantedEvVar/cache miss [W] cobox_aFi :: Int ~ Int
setEvBind
  ev = cobox_awT
  tm  = CO Sym cobox_aFi
rewriteEqEvidence
  [W] cobox_awT :: Int ~ b_awR
  Int
  Int
  Sym cobox_aFi
canEqTyVar2
  b_awR
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aFi :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aFi
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awV :: [t_awU]
                                ~ t_aml [" a type equality [t_awU]
                                                           ~
                                                           t_aml " FQL.hs:66:50-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awV :: [t_awU]
                                 ~ t_aml [" a type equality [t_awU]
                                                            ~
                                                            t_aml " FQL.hs:66:50-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awV :: [t_awU] ~ t_aml [" a type equality [t_awU]
                                                      ~
                                                      t_aml " FQL.hs:66:50-52] (CNonCanonical)
canEvNC:eq
  [t_awU]
  t_aml
can_eq_nc
  [W] cobox_awV :: [t_awU] ~ t_aml
  [t_awU]
  [t_awU]
  t_aml
  t_aml
canEqTyVar
  t_aml
  [t_awU]
  Is-swapped
Following bound tyvar t_aml = [String]
newWantedEvVar/cache miss [W] cobox_aFj :: [String] ~ [t_awU]
setEvBind
  ev = cobox_awV
  tm  = CO Sym cobox_aFj
rewriteEqEvidence
  [W] cobox_awV :: [t_awU] ~ t_aml
  [String]
  [t_awU]
  Sym cobox_aFj
canEqTyVar2
  t_aml
  [t_awU]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aFj :: [String] ~ [t_awU]
  [String]
  [String]
  [t_awU]
  [t_awU]
newWantedEvVar/cache miss [W] cobox_aFk :: String ~ t_awU
setEvBind
  ev = cobox_aFj
  tm  = CO [cobox_aFk]_N
canEvNC:eq
  String
  t_awU
can_eq_nc
  [W] cobox_aFk :: String ~ t_awU
  String
  String
  t_awU
  t_awU
can_eq_nc
  [W] cobox_aFk :: String ~ t_awU
  [Char]
  String
  t_awU
  t_awU
canEqTyVar
  t_awU
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFl :: t_awU ~ String
setEvBind
  ev = cobox_aFk
  tm  = CO Sym cobox_aFl
rewriteEqEvidence
  [W] cobox_aFk :: String ~ t_awU
  t_awU
  String
  Sym cobox_aFl
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFl :: t_awU
                                 ~ String [" a type equality [t_awU]
                                                             ~
                                                             t_aml " FQL.hs:66:50-52] (CTyEqCan)
Sneaky unification:
  Unifies: t_awU := String
  Coercion: t_awU ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_awU := String
setEvBind
  ev = cobox_aFl
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_awU
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
227[<C:0,F:0>] [W] cobox_aFl :: t_awU
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awW :: a_awQ
                                ~ t_awU [" a type equality a_awQ
                                                           ~
                                                           t_awU " FQL.hs:66:51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awW :: a_awQ
                                 ~ t_awU [" a type equality a_awQ
                                                            ~
                                                            t_awU " FQL.hs:66:51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awW :: a_awQ ~ t_awU [" a type equality a_awQ
                                                    ~
                                                    t_awU " FQL.hs:66:51] (CNonCanonical)
canEvNC:eq
  a_awQ
  t_awU
can_eq_nc
  [W] cobox_awW :: a_awQ ~ t_awU
  a_awQ
  a_awQ
  t_awU
  t_awU
canEqTyVar
  a_awQ
  t_awU
  Not-swapped
Following bound tyvar t_awU = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awW :: a_awQ
                                 ~ String [" a type equality a_awQ
                                                             ~
                                                             t_awU " FQL.hs:66:51] (CTyEqCan)
Sneaky unification:
  Unifies: a_awQ := String
  Coercion: a_awQ ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_awQ := String
setEvBind
  ev = cobox_awW
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_awQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
228[<C:0,F:0>] [W] cobox_awW :: a_awQ
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awX :: t_amr
                                ~ t_amm [" a type equality t_amr
                                                           ~
                                                           t_amm " FQL.hs:66:54-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awX :: t_amr
                                 ~ t_amm [" a type equality t_amr
                                                            ~
                                                            t_amm " FQL.hs:66:54-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awX :: t_amr ~ t_amm [" a type equality t_amr
                                                    ~
                                                    t_amm " FQL.hs:66:54-62] (CNonCanonical)
canEvNC:eq
  t_amr
  t_amm
can_eq_nc
  [W] cobox_awX :: t_amr ~ t_amm
  t_amr
  t_amr
  t_amm
  t_amm
canEqTyVar
  t_amr
  t_amm
  Not-swapped
Following bound tyvar t_amr = [String]
canEqTyVar2
  t_amr
  t_amm
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_awX :: [String] ~ t_amm
  [String]
  [String]
  t_amm
  t_amm
canEqTyVar
  t_amm
  [String]
  Is-swapped
Following bound tyvar t_amm = [String]
newWantedEvVar/cache miss [W] cobox_aFm :: [String] ~ [String]
setEvBind
  ev = cobox_awX
  tm  = CO Sym cobox_aFm
rewriteEqEvidence
  [W] cobox_awX :: [String] ~ t_amm
  [String]
  [String]
  Sym cobox_aFm
canEqTyVar2
  t_amm
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aFm :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aFn :: String ~ String
setEvBind
  ev = cobox_aFm
  tm  = CO [cobox_aFn]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aFn :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aFn :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aFn :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aFo :: Char ~ Char
setEvBind
  ev = cobox_aFn
  tm  = CO [cobox_aFo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aFo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aFo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awY :: t_ams
                                ~ [a_awQ] [" a type equality t_ams
                                                             ~
                                                             [a_awQ] " FQL.hs:66:65-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awY :: t_ams
                                 ~ [a_awQ] [" a type equality t_ams
                                                              ~
                                                              [a_awQ] " FQL.hs:66:65-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awY :: t_ams ~ [a_awQ] [" a type equality t_ams
                                                      ~
                                                      [a_awQ] " FQL.hs:66:65-68] (CNonCanonical)
canEvNC:eq
  t_ams
  [a_awQ]
can_eq_nc
  [W] cobox_awY :: t_ams ~ [a_awQ]
  t_ams
  t_ams
  [a_awQ]
  [a_awQ]
canEqTyVar
  t_ams
  [a_awQ]
  Not-swapped
Following bound tyvar t_ams = [String]
canEqTyVar2
  t_ams
  [a_awQ]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_awY :: [String] ~ [a_awQ]
  [String]
  [String]
  [a_awQ]
  [a_awQ]
newWantedEvVar/cache miss [W] cobox_aFp :: String ~ a_awQ
setEvBind
  ev = cobox_awY
  tm  = CO [cobox_aFp]_N
canEvNC:eq
  String
  a_awQ
can_eq_nc
  [W] cobox_aFp :: String ~ a_awQ
  String
  String
  a_awQ
  a_awQ
can_eq_nc
  [W] cobox_aFp :: String ~ a_awQ
  [Char]
  String
  a_awQ
  a_awQ
canEqTyVar
  a_awQ
  [Char]
  Is-swapped
Following bound tyvar a_awQ = String
newWantedEvVar/cache miss [W] cobox_aFq :: String ~ String
setEvBind
  ev = cobox_aFp
  tm  = CO Sym cobox_aFq
rewriteEqEvidence
  [W] cobox_aFp :: String ~ a_awQ
  String
  String
  Sym cobox_aFq
canEqTyVar2
  a_awQ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aFq :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aFq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aFr :: Char ~ Char
setEvBind
  ev = cobox_aFq
  tm  = CO [cobox_aFr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aFr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aFr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ax1 :: [[a_ax0]]
                                ~ t_amz [" a type equality [[a_ax0]]
                                                           ~
                                                           t_amz " FQL.hs:61:23-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ax1 :: [[a_ax0]]
                                 ~ t_amz [" a type equality [[a_ax0]]
                                                            ~
                                                            t_amz " FQL.hs:61:23-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ax1 :: [[a_ax0]] ~ t_amz [" a type equality [[a_ax0]]
                                                        ~
                                                        t_amz " FQL.hs:61:23-96] (CNonCanonical)
canEvNC:eq
  [[a_ax0]]
  t_amz
can_eq_nc
  [W] cobox_ax1 :: [[a_ax0]] ~ t_amz
  [[a_ax0]]
  [[a_ax0]]
  t_amz
  t_amz
canEqTyVar
  t_amz
  [[a_ax0]]
  Is-swapped
Following bound tyvar t_amz = Table
newWantedEvVar/cache miss [W] cobox_aFs :: Table ~ [[a_ax0]]
setEvBind
  ev = cobox_ax1
  tm  = CO Sym cobox_aFs
rewriteEqEvidence
  [W] cobox_ax1 :: [[a_ax0]] ~ t_amz
  Table
  [[a_ax0]]
  Sym cobox_aFs
canEqTyVar2
  t_amz
  [[a_ax0]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aFs :: Table ~ [[a_ax0]]
  Table
  Table
  [[a_ax0]]
  [[a_ax0]]
can_eq_nc
  [W] cobox_aFs :: Table ~ [[a_ax0]]
  [[String]]
  Table
  [[a_ax0]]
  [[a_ax0]]
newWantedEvVar/cache miss [W] cobox_aFt :: [String] ~ [a_ax0]
setEvBind
  ev = cobox_aFs
  tm  = CO [cobox_aFt]_N
canEvNC:eq
  [String]
  [a_ax0]
can_eq_nc
  [W] cobox_aFt :: [String] ~ [a_ax0]
  [String]
  [String]
  [a_ax0]
  [a_ax0]
newWantedEvVar/cache miss [W] cobox_aFu :: String ~ a_ax0
setEvBind
  ev = cobox_aFt
  tm  = CO [cobox_aFu]_N
canEvNC:eq
  String
  a_ax0
can_eq_nc
  [W] cobox_aFu :: String ~ a_ax0
  String
  String
  a_ax0
  a_ax0
can_eq_nc
  [W] cobox_aFu :: String ~ a_ax0
  [Char]
  String
  a_ax0
  a_ax0
canEqTyVar
  a_ax0
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFv :: a_ax0 ~ String
setEvBind
  ev = cobox_aFu
  tm  = CO Sym cobox_aFv
rewriteEqEvidence
  [W] cobox_aFu :: String ~ a_ax0
  a_ax0
  String
  Sym cobox_aFv
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFv :: a_ax0
                                 ~ String [" a type equality [[a_ax0]]
                                                             ~
                                                             t_amz " FQL.hs:61:23-96] (CTyEqCan)
Sneaky unification:
  Unifies: a_ax0 := String
  Coercion: a_ax0 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ax0 := String
setEvBind
  ev = cobox_aFv
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_ax0
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
231[<C:0,F:0>] [W] cobox_aFv :: a_ax0
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ax4 :: [b_ax3]
                                ~ [[a_ax0]] [" a type equality [b_ax3]
                                                               ~
                                                               [[a_ax0]] " FQL.hs:61:34-95] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ax4 :: [b_ax3]
                                 ~ [[a_ax0]] [" a type equality [b_ax3]
                                                                ~
                                                                [[a_ax0]] " FQL.hs:61:34-95] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ax4 :: [b_ax3] ~ [[a_ax0]] [" a type equality [b_ax3]
                                                          ~
                                                          [[a_ax0]] " FQL.hs:61:34-95] (CNonCanonical)
canEvNC:eq
  [b_ax3]
  [[a_ax0]]
can_eq_nc
  [W] cobox_ax4 :: [b_ax3] ~ [[a_ax0]]
  [b_ax3]
  [b_ax3]
  [[a_ax0]]
  [[a_ax0]]
newWantedEvVar/cache miss [W] cobox_aFw :: b_ax3 ~ [a_ax0]
setEvBind
  ev = cobox_ax4
  tm  = CO [cobox_aFw]_N
canEvNC:eq
  b_ax3
  [a_ax0]
can_eq_nc
  [W] cobox_aFw :: b_ax3 ~ [a_ax0]
  b_ax3
  b_ax3
  [a_ax0]
  [a_ax0]
canEqTyVar
  b_ax3
  [a_ax0]
  Not-swapped
Following bound tyvar a_ax0 = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFw :: b_ax3
                                 ~ [String] [" a type equality [b_ax3]
                                                               ~
                                                               [[a_ax0]] " FQL.hs:61:34-95] (CTyEqCan)
Sneaky unification:
  Unifies: b_ax3 := [String]
  Coercion: b_ax3 ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_ax3 := [String]
setEvBind
  ev = cobox_aFw
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  b_ax3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
232[<C:0,F:0>] [W] cobox_aFw :: b_ax3
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ax6 :: (Int -> a_ax5)
                                ~ (a_ax2 -> b_ax3) [" a type equality Int -> a_ax5
                                                                      ~
                                                                      a_ax2
                                                                      -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ax6 :: (Int -> a_ax5)
                                 ~ (a_ax2 -> b_ax3) [" a type equality Int -> a_ax5
                                                                       ~
                                                                       a_ax2
                                                                       -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ax6 :: (Int -> a_ax5)
                   ~ (a_ax2 -> b_ax3) [" a type equality Int -> a_ax5
                                                         ~
                                                         a_ax2
                                                         -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
canEvNC:eq
  Int -> a_ax5
  a_ax2 -> b_ax3
can_eq_nc
  [W] cobox_ax6 :: (Int -> a_ax5) ~ (a_ax2 -> b_ax3)
  Int -> a_ax5
  Int -> a_ax5
  a_ax2 -> b_ax3
  a_ax2 -> b_ax3
newWantedEvVar/cache miss [W] cobox_aFx :: Int ~ a_ax2
newWantedEvVar/cache miss [W] cobox_aFy :: a_ax5 ~ b_ax3
setEvBind
  ev = cobox_ax6
  tm  = CO cobox_aFx -> cobox_aFy
canEvNC:eq
  Int
  a_ax2
can_eq_nc
  [W] cobox_aFx :: Int ~ a_ax2
  Int
  Int
  a_ax2
  a_ax2
canEqTyVar
  a_ax2
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFz :: a_ax2 ~ Int
setEvBind
  ev = cobox_aFx
  tm  = CO Sym cobox_aFz
rewriteEqEvidence
  [W] cobox_aFx :: Int ~ a_ax2
  a_ax2
  Int
  Sym cobox_aFz
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFz :: a_ax2 ~ Int [" a type equality Int
                                                                -> a_ax5
                                                                ~
                                                                a_ax2
                                                                -> b_ax3 " FQL.hs:61:39-58] (CTyEqCan)
Sneaky unification:
  Unifies: a_ax2 := Int
  Coercion: a_ax2 ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ax2 := Int
setEvBind
  ev = cobox_aFz
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_ax2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
233[<C:0,F:0>] [W] cobox_aFz :: a_ax2 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFy :: a_ax5 ~ b_ax3 [" a type equality Int
                                                                 -> a_ax5
                                                                 ~
                                                                 a_ax2
                                                                 -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFy :: a_ax5 ~ b_ax3 [" a type equality Int
                                                                  -> a_ax5
                                                                  ~
                                                                  a_ax2
                                                                  -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFy :: a_ax5 ~ b_ax3 [" a type equality Int -> a_ax5
                                                    ~
                                                    a_ax2
                                                    -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
canEvNC:eq
  a_ax5
  b_ax3
can_eq_nc
  [W] cobox_aFy :: a_ax5 ~ b_ax3
  a_ax5
  a_ax5
  b_ax3
  b_ax3
canEqTyVar
  a_ax5
  b_ax3
  Not-swapped
Following bound tyvar b_ax3 = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFy :: a_ax5
                                 ~ [String] [" a type equality Int -> a_ax5
                                                               ~
                                                               a_ax2
                                                               -> b_ax3 " FQL.hs:61:39-58] (CTyEqCan)
Sneaky unification:
  Unifies: a_ax5 := [String]
  Coercion: a_ax5 ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ax5 := [String]
setEvBind
  ev = cobox_aFy
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_ax5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
234[<C:0,F:0>] [W] cobox_aFy :: a_ax5
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ax8 :: [[a_ax7]]
                                ~ [a_ax5] [" a type equality [[a_ax7]]
                                                             ~
                                                             [a_ax5] " FQL.hs:61:40-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ax8 :: [[a_ax7]]
                                 ~ [a_ax5] [" a type equality [[a_ax7]]
                                                              ~
                                                              [a_ax5] " FQL.hs:61:40-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ax8 :: [[a_ax7]] ~ [a_ax5] [" a type equality [[a_ax7]]
                                                          ~
                                                          [a_ax5] " FQL.hs:61:40-54] (CNonCanonical)
canEvNC:eq
  [[a_ax7]]
  [a_ax5]
can_eq_nc
  [W] cobox_ax8 :: [[a_ax7]] ~ [a_ax5]
  [[a_ax7]]
  [[a_ax7]]
  [a_ax5]
  [a_ax5]
newWantedEvVar/cache miss [W] cobox_aFA :: [a_ax7] ~ a_ax5
setEvBind
  ev = cobox_ax8
  tm  = CO [cobox_aFA]_N
canEvNC:eq
  [a_ax7]
  a_ax5
can_eq_nc
  [W] cobox_aFA :: [a_ax7] ~ a_ax5
  [a_ax7]
  [a_ax7]
  a_ax5
  a_ax5
canEqTyVar
  a_ax5
  [a_ax7]
  Is-swapped
Following bound tyvar a_ax5 = [String]
newWantedEvVar/cache miss [W] cobox_aFB :: [String] ~ [a_ax7]
setEvBind
  ev = cobox_aFA
  tm  = CO Sym cobox_aFB
rewriteEqEvidence
  [W] cobox_aFA :: [a_ax7] ~ a_ax5
  [String]
  [a_ax7]
  Sym cobox_aFB
canEqTyVar2
  a_ax5
  [a_ax7]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aFB :: [String] ~ [a_ax7]
  [String]
  [String]
  [a_ax7]
  [a_ax7]
newWantedEvVar/cache miss [W] cobox_aFC :: String ~ a_ax7
setEvBind
  ev = cobox_aFB
  tm  = CO [cobox_aFC]_N
canEvNC:eq
  String
  a_ax7
can_eq_nc
  [W] cobox_aFC :: String ~ a_ax7
  String
  String
  a_ax7
  a_ax7
can_eq_nc
  [W] cobox_aFC :: String ~ a_ax7
  [Char]
  String
  a_ax7
  a_ax7
canEqTyVar
  a_ax7
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFD :: a_ax7 ~ String
setEvBind
  ev = cobox_aFC
  tm  = CO Sym cobox_aFD
rewriteEqEvidence
  [W] cobox_aFC :: String ~ a_ax7
  a_ax7
  String
  Sym cobox_aFD
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFD :: a_ax7
                                 ~ String [" a type equality [[a_ax7]]
                                                             ~
                                                             [a_ax5] " FQL.hs:61:40-54] (CTyEqCan)
Sneaky unification:
  Unifies: a_ax7 := String
  Coercion: a_ax7 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ax7 := String
setEvBind
  ev = cobox_aFD
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_ax7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
235[<C:0,F:0>] [W] cobox_aFD :: a_ax7
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ax9 :: t_amy
                                ~ [[a_ax7]] [" a type equality t_amy
                                                               ~
                                                               [[a_ax7]] " FQL.hs:61:50-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ax9 :: t_amy
                                 ~ [[a_ax7]] [" a type equality t_amy
                                                                ~
                                                                [[a_ax7]] " FQL.hs:61:50-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ax9 :: t_amy ~ [[a_ax7]] [" a type equality t_amy
                                                        ~
                                                        [[a_ax7]] " FQL.hs:61:50-54] (CNonCanonical)
canEvNC:eq
  t_amy
  [[a_ax7]]
can_eq_nc
  [W] cobox_ax9 :: t_amy ~ [[a_ax7]]
  t_amy
  t_amy
  [[a_ax7]]
  [[a_ax7]]
canEqTyVar
  t_amy
  [[a_ax7]]
  Not-swapped
Following bound tyvar t_amy = Table
canEqTyVar2
  t_amy
  [[a_ax7]]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_ax9 :: Table ~ [[a_ax7]]
  Table
  Table
  [[a_ax7]]
  [[a_ax7]]
can_eq_nc
  [W] cobox_ax9 :: Table ~ [[a_ax7]]
  [[String]]
  Table
  [[a_ax7]]
  [[a_ax7]]
newWantedEvVar/cache miss [W] cobox_aFE :: [String] ~ [a_ax7]
setEvBind
  ev = cobox_ax9
  tm  = CO [cobox_aFE]_N
canEvNC:eq
  [String]
  [a_ax7]
can_eq_nc
  [W] cobox_aFE :: [String] ~ [a_ax7]
  [String]
  [String]
  [a_ax7]
  [a_ax7]
newWantedEvVar/cache miss [W] cobox_aFF :: String ~ a_ax7
setEvBind
  ev = cobox_aFE
  tm  = CO [cobox_aFF]_N
canEvNC:eq
  String
  a_ax7
can_eq_nc
  [W] cobox_aFF :: String ~ a_ax7
  String
  String
  a_ax7
  a_ax7
can_eq_nc
  [W] cobox_aFF :: String ~ a_ax7
  [Char]
  String
  a_ax7
  a_ax7
canEqTyVar
  a_ax7
  [Char]
  Is-swapped
Following bound tyvar a_ax7 = String
newWantedEvVar/cache miss [W] cobox_aFG :: String ~ String
setEvBind
  ev = cobox_aFF
  tm  = CO Sym cobox_aFG
rewriteEqEvidence
  [W] cobox_aFF :: String ~ a_ax7
  String
  String
  Sym cobox_aFG
canEqTyVar2
  a_ax7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aFG :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aFG :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aFH :: Char ~ Char
setEvBind
  ev = cobox_aFG
  tm  = CO [cobox_aFH]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aFH :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aFH
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axa :: t_amt
                                ~ [a_ax2] [" a type equality t_amt
                                                             ~
                                                             [a_ax2] " FQL.hs:61:62-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axa :: t_amt
                                 ~ [a_ax2] [" a type equality t_amt
                                                              ~
                                                              [a_ax2] " FQL.hs:61:62-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axa :: t_amt ~ [a_ax2] [" a type equality t_amt
                                                      ~
                                                      [a_ax2] " FQL.hs:61:62-94] (CNonCanonical)
canEvNC:eq
  t_amt
  [a_ax2]
can_eq_nc
  [W] cobox_axa :: t_amt ~ [a_ax2]
  t_amt
  t_amt
  [a_ax2]
  [a_ax2]
canEqTyVar
  t_amt
  [a_ax2]
  Not-swapped
Following bound tyvar t_amt = [Int]
canEqTyVar2
  t_amt
  [a_ax2]
  Not-swapped
  [Int]
  <[Int]>_N
can_eq_nc
  [W] cobox_axa :: [Int] ~ [a_ax2]
  [Int]
  [Int]
  [a_ax2]
  [a_ax2]
newWantedEvVar/cache miss [W] cobox_aFI :: Int ~ a_ax2
setEvBind
  ev = cobox_axa
  tm  = CO [cobox_aFI]_N
canEvNC:eq
  Int
  a_ax2
can_eq_nc
  [W] cobox_aFI :: Int ~ a_ax2
  Int
  Int
  a_ax2
  a_ax2
canEqTyVar
  a_ax2
  Int
  Is-swapped
Following bound tyvar a_ax2 = Int
newWantedEvVar/cache miss [W] cobox_aFJ :: Int ~ Int
setEvBind
  ev = cobox_aFI
  tm  = CO Sym cobox_aFJ
rewriteEqEvidence
  [W] cobox_aFI :: Int ~ a_ax2
  Int
  Int
  Sym cobox_aFJ
canEqTyVar2
  a_ax2
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aFJ :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aFJ
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axc :: a_axb
                                ~ t_amr [" a type equality a_axb
                                                           ~
                                                           t_amr " FQL.hs:61:79-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axc :: a_axb
                                 ~ t_amr [" a type equality a_axb
                                                            ~
                                                            t_amr " FQL.hs:61:79-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axc :: a_axb ~ t_amr [" a type equality a_axb
                                                    ~
                                                    t_amr " FQL.hs:61:79-88] (CNonCanonical)
canEvNC:eq
  a_axb
  t_amr
can_eq_nc
  [W] cobox_axc :: a_axb ~ t_amr
  a_axb
  a_axb
  t_amr
  t_amr
canEqTyVar
  a_axb
  t_amr
  Not-swapped
Following bound tyvar t_amr = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_axc :: a_axb
                                 ~ [String] [" a type equality a_axb
                                                               ~
                                                               t_amr " FQL.hs:61:79-88] (CTyEqCan)
Sneaky unification:
  Unifies: a_axb := [String]
  Coercion: a_axb ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axb := [String]
setEvBind
  ev = cobox_axc
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_axb
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
238[<C:0,F:0>] [W] cobox_axc :: a_axb
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axd :: t_amy
                                ~ [a_axb] [" a type equality t_amy
                                                             ~
                                                             [a_axb] " FQL.hs:61:84-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axd :: t_amy
                                 ~ [a_axb] [" a type equality t_amy
                                                              ~
                                                              [a_axb] " FQL.hs:61:84-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axd :: t_amy ~ [a_axb] [" a type equality t_amy
                                                      ~
                                                      [a_axb] " FQL.hs:61:84-88] (CNonCanonical)
canEvNC:eq
  t_amy
  [a_axb]
can_eq_nc
  [W] cobox_axd :: t_amy ~ [a_axb]
  t_amy
  t_amy
  [a_axb]
  [a_axb]
canEqTyVar
  t_amy
  [a_axb]
  Not-swapped
Following bound tyvar t_amy = Table
canEqTyVar2
  t_amy
  [a_axb]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axd :: Table ~ [a_axb]
  Table
  Table
  [a_axb]
  [a_axb]
can_eq_nc
  [W] cobox_axd :: Table ~ [a_axb]
  [[String]]
  Table
  [a_axb]
  [a_axb]
newWantedEvVar/cache miss [W] cobox_aFK :: [String] ~ a_axb
setEvBind
  ev = cobox_axd
  tm  = CO [cobox_aFK]_N
canEvNC:eq
  [String]
  a_axb
can_eq_nc
  [W] cobox_aFK :: [String] ~ a_axb
  [String]
  [String]
  a_axb
  a_axb
canEqTyVar
  a_axb
  [String]
  Is-swapped
Following bound tyvar a_axb = [String]
newWantedEvVar/cache miss [W] cobox_aFL :: [String] ~ [String]
setEvBind
  ev = cobox_aFK
  tm  = CO Sym cobox_aFL
rewriteEqEvidence
  [W] cobox_aFK :: [String] ~ a_axb
  [String]
  [String]
  Sym cobox_aFL
canEqTyVar2
  a_axb
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aFL :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aFM :: String ~ String
setEvBind
  ev = cobox_aFL
  tm  = CO [cobox_aFM]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aFM :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aFM :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aFM :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aFN :: Char ~ Char
setEvBind
  ev = cobox_aFM
  tm  = CO [cobox_aFN]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aFN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aFN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axe :: t_amx
                                ~ t_ams [" a type equality t_amx
                                                           ~
                                                           t_ams " FQL.hs:61:91-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axe :: t_amx
                                 ~ t_ams [" a type equality t_amx
                                                            ~
                                                            t_ams " FQL.hs:61:91-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axe :: t_amx ~ t_ams [" a type equality t_amx
                                                    ~
                                                    t_ams " FQL.hs:61:91-94] (CNonCanonical)
canEvNC:eq
  t_amx
  t_ams
can_eq_nc
  [W] cobox_axe :: t_amx ~ t_ams
  t_amx
  t_amx
  t_ams
  t_ams
canEqTyVar
  t_amx
  t_ams
  Not-swapped
Following bound tyvar t_amx = [String]
canEqTyVar2
  t_amx
  t_ams
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_axe :: [String] ~ t_ams
  [String]
  [String]
  t_ams
  t_ams
canEqTyVar
  t_ams
  [String]
  Is-swapped
Following bound tyvar t_ams = [String]
newWantedEvVar/cache miss [W] cobox_aFO :: [String] ~ [String]
setEvBind
  ev = cobox_axe
  tm  = CO Sym cobox_aFO
rewriteEqEvidence
  [W] cobox_axe :: [String] ~ t_ams
  [String]
  [String]
  Sym cobox_aFO
canEqTyVar2
  t_ams
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aFO :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aFP :: String ~ String
setEvBind
  ev = cobox_aFO
  tm  = CO [cobox_aFP]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aFP :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aFP :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aFP :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aFQ :: Char ~ Char
setEvBind
  ev = cobox_aFP
  tm  = CO [cobox_aFQ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aFQ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aFQ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axh :: [a_axg]
                                ~ t_amg [" a type equality [a_axg]
                                                           ~
                                                           t_amg " FQL.hs:79:28-100] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axh :: [a_axg]
                                 ~ t_amg [" a type equality [a_axg]
                                                            ~
                                                            t_amg " FQL.hs:79:28-100] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axh :: [a_axg] ~ t_amg [" a type equality [a_axg]
                                                      ~
                                                      t_amg " FQL.hs:79:28-100] (CNonCanonical)
canEvNC:eq
  [a_axg]
  t_amg
can_eq_nc
  [W] cobox_axh :: [a_axg] ~ t_amg
  [a_axg]
  [a_axg]
  t_amg
  t_amg
canEqTyVar
  t_amg
  [a_axg]
  Is-swapped
Following bound tyvar t_amg = Table
newWantedEvVar/cache miss [W] cobox_aFR :: Table ~ [a_axg]
setEvBind
  ev = cobox_axh
  tm  = CO Sym cobox_aFR
rewriteEqEvidence
  [W] cobox_axh :: [a_axg] ~ t_amg
  Table
  [a_axg]
  Sym cobox_aFR
canEqTyVar2
  t_amg
  [a_axg]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aFR :: Table ~ [a_axg]
  Table
  Table
  [a_axg]
  [a_axg]
can_eq_nc
  [W] cobox_aFR :: Table ~ [a_axg]
  [[String]]
  Table
  [a_axg]
  [a_axg]
newWantedEvVar/cache miss [W] cobox_aFS :: [String] ~ a_axg
setEvBind
  ev = cobox_aFR
  tm  = CO [cobox_aFS]_N
canEvNC:eq
  [String]
  a_axg
can_eq_nc
  [W] cobox_aFS :: [String] ~ a_axg
  [String]
  [String]
  a_axg
  a_axg
canEqTyVar
  a_axg
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFT :: a_axg ~ [String]
setEvBind
  ev = cobox_aFS
  tm  = CO Sym cobox_aFT
rewriteEqEvidence
  [W] cobox_aFS :: [String] ~ a_axg
  a_axg
  [String]
  Sym cobox_aFT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFT :: a_axg
                                 ~ [String] [" a type equality [a_axg]
                                                               ~
                                                               t_amg " FQL.hs:79:28-100] (CTyEqCan)
Sneaky unification:
  Unifies: a_axg := [String]
  Coercion: a_axg ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axg := [String]
setEvBind
  ev = cobox_aFT
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_axg
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
241[<C:0,F:0>] [W] cobox_aFT :: a_axg
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axj :: a_axi
                                ~ a_axg [" a type equality a_axi
                                                           ~
                                                           a_axg " FQL.hs:79:29-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axj :: a_axi
                                 ~ a_axg [" a type equality a_axi
                                                            ~
                                                            a_axg " FQL.hs:79:29-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axj :: a_axi ~ a_axg [" a type equality a_axi
                                                    ~
                                                    a_axg " FQL.hs:79:29-38] (CNonCanonical)
canEvNC:eq
  a_axi
  a_axg
can_eq_nc
  [W] cobox_axj :: a_axi ~ a_axg
  a_axi
  a_axi
  a_axg
  a_axg
canEqTyVar
  a_axi
  a_axg
  Not-swapped
Following bound tyvar a_axg = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_axj :: a_axi
                                 ~ [String] [" a type equality a_axi
                                                               ~
                                                               a_axg " FQL.hs:79:29-38] (CTyEqCan)
Sneaky unification:
  Unifies: a_axi := [String]
  Coercion: a_axi ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axi := [String]
setEvBind
  ev = cobox_axj
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_axi
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
242[<C:0,F:0>] [W] cobox_axj :: a_axi
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axk :: t_amf
                                ~ [a_axi] [" a type equality t_amf
                                                             ~
                                                             [a_axi] " FQL.hs:79:34-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axk :: t_amf
                                 ~ [a_axi] [" a type equality t_amf
                                                              ~
                                                              [a_axi] " FQL.hs:79:34-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axk :: t_amf ~ [a_axi] [" a type equality t_amf
                                                      ~
                                                      [a_axi] " FQL.hs:79:34-38] (CNonCanonical)
canEvNC:eq
  t_amf
  [a_axi]
can_eq_nc
  [W] cobox_axk :: t_amf ~ [a_axi]
  t_amf
  t_amf
  [a_axi]
  [a_axi]
canEqTyVar
  t_amf
  [a_axi]
  Not-swapped
Following bound tyvar t_amf = Table
canEqTyVar2
  t_amf
  [a_axi]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axk :: Table ~ [a_axi]
  Table
  Table
  [a_axi]
  [a_axi]
can_eq_nc
  [W] cobox_axk :: Table ~ [a_axi]
  [[String]]
  Table
  [a_axi]
  [a_axi]
newWantedEvVar/cache miss [W] cobox_aFU :: [String] ~ a_axi
setEvBind
  ev = cobox_axk
  tm  = CO [cobox_aFU]_N
canEvNC:eq
  [String]
  a_axi
can_eq_nc
  [W] cobox_aFU :: [String] ~ a_axi
  [String]
  [String]
  a_axi
  a_axi
canEqTyVar
  a_axi
  [String]
  Is-swapped
Following bound tyvar a_axi = [String]
newWantedEvVar/cache miss [W] cobox_aFV :: [String] ~ [String]
setEvBind
  ev = cobox_aFU
  tm  = CO Sym cobox_aFV
rewriteEqEvidence
  [W] cobox_aFU :: [String] ~ a_axi
  [String]
  [String]
  Sym cobox_aFV
canEqTyVar2
  a_axi
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aFV :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aFW :: String ~ String
setEvBind
  ev = cobox_aFV
  tm  = CO [cobox_aFW]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aFW :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aFW :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aFW :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aFX :: Char ~ Char
setEvBind
  ev = cobox_aFW
  tm  = CO [cobox_aFX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aFX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aFX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axl :: t_am8
                                ~ [a_axg] [" a type equality t_am8
                                                             ~
                                                             [a_axg] " FQL.hs:79:44-99] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axl :: t_am8
                                 ~ [a_axg] [" a type equality t_am8
                                                              ~
                                                              [a_axg] " FQL.hs:79:44-99] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axl :: t_am8 ~ [a_axg] [" a type equality t_am8
                                                      ~
                                                      [a_axg] " FQL.hs:79:44-99] (CNonCanonical)
canEvNC:eq
  t_am8
  [a_axg]
can_eq_nc
  [W] cobox_axl :: t_am8 ~ [a_axg]
  t_am8
  t_am8
  [a_axg]
  [a_axg]
canEqTyVar
  t_am8
  [a_axg]
  Not-swapped
Following bound tyvar t_am8 = Table
canEqTyVar2
  t_am8
  [a_axg]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axl :: Table ~ [a_axg]
  Table
  Table
  [a_axg]
  [a_axg]
can_eq_nc
  [W] cobox_axl :: Table ~ [a_axg]
  [[String]]
  Table
  [a_axg]
  [a_axg]
newWantedEvVar/cache miss [W] cobox_aFY :: [String] ~ a_axg
setEvBind
  ev = cobox_axl
  tm  = CO [cobox_aFY]_N
canEvNC:eq
  [String]
  a_axg
can_eq_nc
  [W] cobox_aFY :: [String] ~ a_axg
  [String]
  [String]
  a_axg
  a_axg
canEqTyVar
  a_axg
  [String]
  Is-swapped
Following bound tyvar a_axg = [String]
newWantedEvVar/cache miss [W] cobox_aFZ :: [String] ~ [String]
setEvBind
  ev = cobox_aFY
  tm  = CO Sym cobox_aFZ
rewriteEqEvidence
  [W] cobox_aFY :: [String] ~ a_axg
  [String]
  [String]
  Sym cobox_aFZ
canEqTyVar2
  a_axg
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aFZ :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aG0 :: String ~ String
setEvBind
  ev = cobox_aFZ
  tm  = CO [cobox_aG0]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aG0 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aG0 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aG0 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aG1 :: Char ~ Char
setEvBind
  ev = cobox_aG0
  tm  = CO [cobox_aG1]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aG1 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aG1
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axm :: t_amn
                                ~ t_am5 [" a type equality t_amn
                                                           ~
                                                           t_am5 " FQL.hs:79:56-80] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axm :: t_amn
                                 ~ t_am5 [" a type equality t_amn
                                                            ~
                                                            t_am5 " FQL.hs:79:56-80] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axm :: t_amn ~ t_am5 [" a type equality t_amn
                                                    ~
                                                    t_am5 " FQL.hs:79:56-80] (CNonCanonical)
canEvNC:eq
  t_amn
  t_am5
can_eq_nc
  [W] cobox_axm :: t_amn ~ t_am5
  t_amn
  t_amn
  t_am5
  t_am5
canEqTyVar
  t_amn
  t_am5
  Not-swapped
Following bound tyvar t_amn = Int
canEqTyVar2
  t_amn
  t_am5
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_axm :: Int ~ t_am5
  Int
  Int
  t_am5
  t_am5
canEqTyVar
  t_am5
  Int
  Is-swapped
Following bound tyvar t_am5 = Int
newWantedEvVar/cache miss [W] cobox_aG2 :: Int ~ Int
setEvBind
  ev = cobox_axm
  tm  = CO Sym cobox_aG2
rewriteEqEvidence
  [W] cobox_axm :: Int ~ t_am5
  Int
  Int
  Sym cobox_aG2
canEqTyVar2
  t_am5
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aG2 :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aG2
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axo :: a_axn
                                ~ t_aml [" a type equality a_axn
                                                           ~
                                                           t_aml " FQL.hs:79:63-72] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axo :: a_axn
                                 ~ t_aml [" a type equality a_axn
                                                            ~
                                                            t_aml " FQL.hs:79:63-72] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axo :: a_axn ~ t_aml [" a type equality a_axn
                                                    ~
                                                    t_aml " FQL.hs:79:63-72] (CNonCanonical)
canEvNC:eq
  a_axn
  t_aml
can_eq_nc
  [W] cobox_axo :: a_axn ~ t_aml
  a_axn
  a_axn
  t_aml
  t_aml
canEqTyVar
  a_axn
  t_aml
  Not-swapped
Following bound tyvar t_aml = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_axo :: a_axn
                                 ~ [String] [" a type equality a_axn
                                                               ~
                                                               t_aml " FQL.hs:79:63-72] (CTyEqCan)
Sneaky unification:
  Unifies: a_axn := [String]
  Coercion: a_axn ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axn := [String]
setEvBind
  ev = cobox_axo
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_axn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
246[<C:0,F:0>] [W] cobox_axo :: a_axn
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axp :: t_amf
                                ~ [a_axn] [" a type equality t_amf
                                                             ~
                                                             [a_axn] " FQL.hs:79:68-72] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axp :: t_amf
                                 ~ [a_axn] [" a type equality t_amf
                                                              ~
                                                              [a_axn] " FQL.hs:79:68-72] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axp :: t_amf ~ [a_axn] [" a type equality t_amf
                                                      ~
                                                      [a_axn] " FQL.hs:79:68-72] (CNonCanonical)
canEvNC:eq
  t_amf
  [a_axn]
can_eq_nc
  [W] cobox_axp :: t_amf ~ [a_axn]
  t_amf
  t_amf
  [a_axn]
  [a_axn]
canEqTyVar
  t_amf
  [a_axn]
  Not-swapped
Following bound tyvar t_amf = Table
canEqTyVar2
  t_amf
  [a_axn]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axp :: Table ~ [a_axn]
  Table
  Table
  [a_axn]
  [a_axn]
can_eq_nc
  [W] cobox_axp :: Table ~ [a_axn]
  [[String]]
  Table
  [a_axn]
  [a_axn]
newWantedEvVar/cache miss [W] cobox_aG3 :: [String] ~ a_axn
setEvBind
  ev = cobox_axp
  tm  = CO [cobox_aG3]_N
canEvNC:eq
  [String]
  a_axn
can_eq_nc
  [W] cobox_aG3 :: [String] ~ a_axn
  [String]
  [String]
  a_axn
  a_axn
canEqTyVar
  a_axn
  [String]
  Is-swapped
Following bound tyvar a_axn = [String]
newWantedEvVar/cache miss [W] cobox_aG4 :: [String] ~ [String]
setEvBind
  ev = cobox_aG3
  tm  = CO Sym cobox_aG4
rewriteEqEvidence
  [W] cobox_aG3 :: [String] ~ a_axn
  [String]
  [String]
  Sym cobox_aG4
canEqTyVar2
  a_axn
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aG4 :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aG5 :: String ~ String
setEvBind
  ev = cobox_aG4
  tm  = CO [cobox_aG5]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aG5 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aG5 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aG5 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aG6 :: Char ~ Char
setEvBind
  ev = cobox_aG5
  tm  = CO [cobox_aG6]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aG6 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aG6
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axq :: t_amd
                                ~ t_amm [" a type equality t_amd
                                                           ~
                                                           t_amm " FQL.hs:79:75-80] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axq :: t_amd
                                 ~ t_amm [" a type equality t_amd
                                                            ~
                                                            t_amm " FQL.hs:79:75-80] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axq :: t_amd ~ t_amm [" a type equality t_amd
                                                    ~
                                                    t_amm " FQL.hs:79:75-80] (CNonCanonical)
canEvNC:eq
  t_amd
  t_amm
can_eq_nc
  [W] cobox_axq :: t_amd ~ t_amm
  t_amd
  t_amd
  t_amm
  t_amm
canEqTyVar
  t_amd
  t_amm
  Not-swapped
Following bound tyvar t_amd = String
canEqTyVar2
  t_amd
  t_amm
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_axq :: String ~ t_amm
  String
  String
  t_amm
  t_amm
can_eq_nc
  [W] cobox_axq :: String ~ t_amm
  [Char]
  String
  t_amm
  t_amm
canEqTyVar
  t_amm
  [Char]
  Is-swapped
Following bound tyvar t_amm = [String]
newWantedEvVar/cache miss [W] cobox_aG7 :: [String] ~ String
setEvBind
  ev = cobox_axq
  tm  = CO Sym cobox_aG7
rewriteEqEvidence
  [W] cobox_axq :: String ~ t_amm
  [String]
  String
  Sym cobox_aG7
canEqTyVar2
  t_amm
  [Char]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aG7 :: [String] ~ String
  [String]
  [String]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aG8 :: String ~ Char
setEvBind
  ev = cobox_aG7
  tm  = CO [cobox_aG8]_N
canEvNC:eq
  String
  Char
can_eq_nc
  [W] cobox_aG8 :: String ~ Char
  String
  String
  Char
  Char
can_eq_nc
  [W] cobox_aG8 :: String ~ Char
  [Char]
  String
  Char
  Char
Emit insoluble
  [W] cobox_aG8 :: [Char] ~ Char [" a type equality t_amd
                                                    ~
                                                    t_amm " FQL.hs:79:75-80] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axr :: t_ame
                                ~ t_am6 [" a type equality t_ame
                                                           ~
                                                           t_am6 " FQL.hs:79:83-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axr :: t_ame
                                 ~ t_am6 [" a type equality t_ame
                                                            ~
                                                            t_am6 " FQL.hs:79:83-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axr :: t_ame ~ t_am6 [" a type equality t_ame
                                                    ~
                                                    t_am6 " FQL.hs:79:83-86] (CNonCanonical)
canEvNC:eq
  t_ame
  t_am6
can_eq_nc
  [W] cobox_axr :: t_ame ~ t_am6
  t_ame
  t_ame
  t_am6
  t_am6
canEqTyVar
  t_ame
  t_am6
  Not-swapped
Following bound tyvar t_ame = String -> Bool
canEqTyVar2
  t_ame
  t_am6
  Not-swapped
  String -> Bool
  <String -> Bool>_N
can_eq_nc
  [W] cobox_axr :: (String -> Bool) ~ t_am6
  String -> Bool
  String -> Bool
  t_am6
  t_am6
canEqTyVar
  t_am6
  String -> Bool
  Is-swapped
Following bound tyvar t_am6 = String -> Bool
newWantedEvVar/cache miss
  [W] cobox_aG9 :: (String -> Bool) ~ (String -> Bool)
setEvBind
  ev = cobox_axr
  tm  = CO Sym cobox_aG9
rewriteEqEvidence
  [W] cobox_axr :: (String -> Bool) ~ t_am6
  String -> Bool
  String -> Bool
  Sym cobox_aG9
canEqTyVar2
  t_am6
  String -> Bool
  Is-swapped
  String -> Bool
  <String -> Bool>_N
can_eq_nc
  [W] cobox_aG9 :: (String -> Bool) ~ (String -> Bool)
  String -> Bool
  String -> Bool
  String -> Bool
  String -> Bool
newWantedEvVar/cache miss [W] cobox_aGa :: String ~ String
newWantedEvVar/cache miss [W] cobox_aGb :: Bool ~ Bool
setEvBind
  ev = cobox_aG9
  tm  = CO cobox_aGa -> cobox_aGb
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGa :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGa :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGa :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGc :: Char ~ Char
setEvBind
  ev = cobox_aGa
  tm  = CO [cobox_aGc]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGc :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGc
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGb :: Bool ~ Bool [" a type equality t_ame
                                                               ~
                                                               t_am6 " FQL.hs:79:83-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGb :: Bool ~ Bool [" a type equality t_ame
                                                                ~
                                                                t_am6 " FQL.hs:79:83-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGb :: Bool ~ Bool [" a type equality t_ame
                                                  ~
                                                  t_am6 " FQL.hs:79:83-86] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aGb :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aGb
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axt :: [a_axs]
                                ~ t_am7 [" a type equality [a_axs]
                                                           ~
                                                           t_am7 " FQL.hs:79:89-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axt :: [a_axs]
                                 ~ t_am7 [" a type equality [a_axs]
                                                            ~
                                                            t_am7 " FQL.hs:79:89-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axt :: [a_axs] ~ t_am7 [" a type equality [a_axs]
                                                      ~
                                                      t_am7 " FQL.hs:79:89-98] (CNonCanonical)
canEvNC:eq
  [a_axs]
  t_am7
can_eq_nc
  [W] cobox_axt :: [a_axs] ~ t_am7
  [a_axs]
  [a_axs]
  t_am7
  t_am7
canEqTyVar
  t_am7
  [a_axs]
  Is-swapped
Following bound tyvar t_am7 = Table
newWantedEvVar/cache miss [W] cobox_aGd :: Table ~ [a_axs]
setEvBind
  ev = cobox_axt
  tm  = CO Sym cobox_aGd
rewriteEqEvidence
  [W] cobox_axt :: [a_axs] ~ t_am7
  Table
  [a_axs]
  Sym cobox_aGd
canEqTyVar2
  t_am7
  [a_axs]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aGd :: Table ~ [a_axs]
  Table
  Table
  [a_axs]
  [a_axs]
can_eq_nc
  [W] cobox_aGd :: Table ~ [a_axs]
  [[String]]
  Table
  [a_axs]
  [a_axs]
newWantedEvVar/cache miss [W] cobox_aGe :: [String] ~ a_axs
setEvBind
  ev = cobox_aGd
  tm  = CO [cobox_aGe]_N
canEvNC:eq
  [String]
  a_axs
can_eq_nc
  [W] cobox_aGe :: [String] ~ a_axs
  [String]
  [String]
  a_axs
  a_axs
canEqTyVar
  a_axs
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aGf :: a_axs ~ [String]
setEvBind
  ev = cobox_aGe
  tm  = CO Sym cobox_aGf
rewriteEqEvidence
  [W] cobox_aGe :: [String] ~ a_axs
  a_axs
  [String]
  Sym cobox_aGf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGf :: a_axs
                                 ~ [String] [" a type equality [a_axs]
                                                               ~
                                                               t_am7 " FQL.hs:79:89-98] (CTyEqCan)
Sneaky unification:
  Unifies: a_axs := [String]
  Coercion: a_axs ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axs := [String]
setEvBind
  ev = cobox_aGf
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_axs
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
251[<C:0,F:0>] [W] cobox_aGf :: a_axs
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axu :: t_amf
                                ~ [a_axs] [" a type equality t_amf
                                                             ~
                                                             [a_axs] " FQL.hs:79:94-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axu :: t_amf
                                 ~ [a_axs] [" a type equality t_amf
                                                              ~
                                                              [a_axs] " FQL.hs:79:94-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axu :: t_amf ~ [a_axs] [" a type equality t_amf
                                                      ~
                                                      [a_axs] " FQL.hs:79:94-98] (CNonCanonical)
canEvNC:eq
  t_amf
  [a_axs]
can_eq_nc
  [W] cobox_axu :: t_amf ~ [a_axs]
  t_amf
  t_amf
  [a_axs]
  [a_axs]
canEqTyVar
  t_amf
  [a_axs]
  Not-swapped
Following bound tyvar t_amf = Table
canEqTyVar2
  t_amf
  [a_axs]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axu :: Table ~ [a_axs]
  Table
  Table
  [a_axs]
  [a_axs]
can_eq_nc
  [W] cobox_axu :: Table ~ [a_axs]
  [[String]]
  Table
  [a_axs]
  [a_axs]
newWantedEvVar/cache miss [W] cobox_aGg :: [String] ~ a_axs
setEvBind
  ev = cobox_axu
  tm  = CO [cobox_aGg]_N
canEvNC:eq
  [String]
  a_axs
can_eq_nc
  [W] cobox_aGg :: [String] ~ a_axs
  [String]
  [String]
  a_axs
  a_axs
canEqTyVar
  a_axs
  [String]
  Is-swapped
Following bound tyvar a_axs = [String]
newWantedEvVar/cache miss [W] cobox_aGh :: [String] ~ [String]
setEvBind
  ev = cobox_aGg
  tm  = CO Sym cobox_aGh
rewriteEqEvidence
  [W] cobox_aGg :: [String] ~ a_axs
  [String]
  [String]
  Sym cobox_aGh
canEqTyVar2
  a_axs
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aGh :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aGi :: String ~ String
setEvBind
  ev = cobox_aGh
  tm  = CO [cobox_aGi]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGi :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGi :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGi :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGj :: Char ~ Char
setEvBind
  ev = cobox_aGi
  tm  = CO [cobox_aGj]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGj :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGj
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axx :: [a_axw]
                                ~ t_alL [" a type equality [a_axw]
                                                           ~
                                                           t_alL " FQL.hs:105:27-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axx :: [a_axw]
                                 ~ t_alL [" a type equality [a_axw]
                                                            ~
                                                            t_alL " FQL.hs:105:27-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axx :: [a_axw] ~ t_alL [" a type equality [a_axw]
                                                      ~
                                                      t_alL " FQL.hs:105:27-88] (CNonCanonical)
canEvNC:eq
  [a_axw]
  t_alL
can_eq_nc
  [W] cobox_axx :: [a_axw] ~ t_alL
  [a_axw]
  [a_axw]
  t_alL
  t_alL
canEqTyVar
  t_alL
  [a_axw]
  Is-swapped
Following bound tyvar t_alL = Table
newWantedEvVar/cache miss [W] cobox_aGk :: Table ~ [a_axw]
setEvBind
  ev = cobox_axx
  tm  = CO Sym cobox_aGk
rewriteEqEvidence
  [W] cobox_axx :: [a_axw] ~ t_alL
  Table
  [a_axw]
  Sym cobox_aGk
canEqTyVar2
  t_alL
  [a_axw]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aGk :: Table ~ [a_axw]
  Table
  Table
  [a_axw]
  [a_axw]
can_eq_nc
  [W] cobox_aGk :: Table ~ [a_axw]
  [[String]]
  Table
  [a_axw]
  [a_axw]
newWantedEvVar/cache miss [W] cobox_aGl :: [String] ~ a_axw
setEvBind
  ev = cobox_aGk
  tm  = CO [cobox_aGl]_N
canEvNC:eq
  [String]
  a_axw
can_eq_nc
  [W] cobox_aGl :: [String] ~ a_axw
  [String]
  [String]
  a_axw
  a_axw
canEqTyVar
  a_axw
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aGm :: a_axw ~ [String]
setEvBind
  ev = cobox_aGl
  tm  = CO Sym cobox_aGm
rewriteEqEvidence
  [W] cobox_aGl :: [String] ~ a_axw
  a_axw
  [String]
  Sym cobox_aGm
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGm :: a_axw
                                 ~ [String] [" a type equality [a_axw]
                                                               ~
                                                               t_alL " FQL.hs:105:27-88] (CTyEqCan)
Sneaky unification:
  Unifies: a_axw := [String]
  Coercion: a_axw ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axw := [String]
setEvBind
  ev = cobox_aGm
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_axw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
253[<C:0,F:0>] [W] cobox_aGm :: a_axw
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axy :: t_an5 ~ Bool [" a type equality t_an5
                                                                ~
                                                                Bool " FQL.hs:105:40-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axy :: t_an5
                                 ~ Bool [" a type equality t_an5
                                                           ~
                                                           Bool " FQL.hs:105:40-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axy :: t_an5 ~ Bool [" a type equality t_an5
                                                   ~
                                                   Bool " FQL.hs:105:40-61] (CNonCanonical)
canEvNC:eq
  t_an5
  Bool
can_eq_nc
  [W] cobox_axy :: t_an5 ~ Bool
  t_an5
  t_an5
  Bool
  Bool
canEqTyVar
  t_an5
  Bool
  Not-swapped
Following bound tyvar t_an5 = Bool
canEqTyVar2
  t_an5
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_axy :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_axy
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axA :: a_axz
                                ~ t_an3 [" a type equality a_axz
                                                           ~
                                                           t_an3 " FQL.hs:105:50-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axA :: a_axz
                                 ~ t_an3 [" a type equality a_axz
                                                            ~
                                                            t_an3 " FQL.hs:105:50-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axA :: a_axz ~ t_an3 [" a type equality a_axz
                                                    ~
                                                    t_an3 " FQL.hs:105:50-53] (CNonCanonical)
canEvNC:eq
  a_axz
  t_an3
can_eq_nc
  [W] cobox_axA :: a_axz ~ t_an3
  a_axz
  a_axz
  t_an3
  t_an3
canEqTyVar
  a_axz
  t_an3
  Not-swapped
Following bound tyvar t_an3 = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_axA :: a_axz
                                 ~ String [" a type equality a_axz
                                                             ~
                                                             t_an3 " FQL.hs:105:50-53] (CTyEqCan)
Sneaky unification:
  Unifies: a_axz := String
  Coercion: a_axz ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axz := String
setEvBind
  ev = cobox_axA
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_axz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
255[<C:0,F:0>] [W] cobox_axA :: a_axz
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axB :: a_axw
                                ~ [a_axz] [" a type equality a_axw
                                                             ~
                                                             [a_axz] " FQL.hs:105:50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axB :: a_axw
                                 ~ [a_axz] [" a type equality a_axw
                                                              ~
                                                              [a_axz] " FQL.hs:105:50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axB :: a_axw ~ [a_axz] [" a type equality a_axw
                                                      ~
                                                      [a_axz] " FQL.hs:105:50] (CNonCanonical)
canEvNC:eq
  a_axw
  [a_axz]
can_eq_nc
  [W] cobox_axB :: a_axw ~ [a_axz]
  a_axw
  a_axw
  [a_axz]
  [a_axz]
canEqTyVar
  a_axw
  [a_axz]
  Not-swapped
Following bound tyvar a_axw = [String]
canEqTyVar2
  a_axw
  [a_axz]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_axB :: [String] ~ [a_axz]
  [String]
  [String]
  [a_axz]
  [a_axz]
newWantedEvVar/cache miss [W] cobox_aGn :: String ~ a_axz
setEvBind
  ev = cobox_axB
  tm  = CO [cobox_aGn]_N
canEvNC:eq
  String
  a_axz
can_eq_nc
  [W] cobox_aGn :: String ~ a_axz
  String
  String
  a_axz
  a_axz
can_eq_nc
  [W] cobox_aGn :: String ~ a_axz
  [Char]
  String
  a_axz
  a_axz
canEqTyVar
  a_axz
  [Char]
  Is-swapped
Following bound tyvar a_axz = String
newWantedEvVar/cache miss [W] cobox_aGo :: String ~ String
setEvBind
  ev = cobox_aGn
  tm  = CO Sym cobox_aGo
rewriteEqEvidence
  [W] cobox_aGn :: String ~ a_axz
  String
  String
  Sym cobox_aGo
canEqTyVar2
  a_axz
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aGo :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aGo :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGp :: Char ~ Char
setEvBind
  ev = cobox_aGo
  tm  = CO [cobox_aGp]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGp :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGp
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axC :: t_alJ ~ Int [" a type equality t_alJ
                                                               ~
                                                               Int " FQL.hs:105:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axC :: t_alJ ~ Int [" a type equality t_alJ
                                                                ~
                                                                Int " FQL.hs:105:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axC :: t_alJ ~ Int [" a type equality t_alJ
                                                  ~
                                                  Int " FQL.hs:105:53] (CNonCanonical)
canEvNC:eq
  t_alJ
  Int
can_eq_nc
  [W] cobox_axC :: t_alJ ~ Int
  t_alJ
  t_alJ
  Int
  Int
canEqTyVar
  t_alJ
  Int
  Not-swapped
Following bound tyvar t_alJ = Int
canEqTyVar2
  t_alJ
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_axC :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_axC
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axE :: a_axD
                                ~ t_an4 [" a type equality a_axD
                                                           ~
                                                           t_an4 " FQL.hs:105:57-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axE :: a_axD
                                 ~ t_an4 [" a type equality a_axD
                                                            ~
                                                            t_an4 " FQL.hs:105:57-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axE :: a_axD ~ t_an4 [" a type equality a_axD
                                                    ~
                                                    t_an4 " FQL.hs:105:57-60] (CNonCanonical)
canEvNC:eq
  a_axD
  t_an4
can_eq_nc
  [W] cobox_axE :: a_axD ~ t_an4
  a_axD
  a_axD
  t_an4
  t_an4
canEqTyVar
  a_axD
  t_an4
  Not-swapped
Following bound tyvar t_an4 = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_axE :: a_axD
                                 ~ String [" a type equality a_axD
                                                             ~
                                                             t_an4 " FQL.hs:105:57-60] (CTyEqCan)
Sneaky unification:
  Unifies: a_axD := String
  Coercion: a_axD ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axD := String
setEvBind
  ev = cobox_axE
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_axD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
258[<C:0,F:0>] [W] cobox_axE :: a_axD
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axF :: a_axw
                                ~ [a_axD] [" a type equality a_axw
                                                             ~
                                                             [a_axD] " FQL.hs:105:57] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axF :: a_axw
                                 ~ [a_axD] [" a type equality a_axw
                                                              ~
                                                              [a_axD] " FQL.hs:105:57] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axF :: a_axw ~ [a_axD] [" a type equality a_axw
                                                      ~
                                                      [a_axD] " FQL.hs:105:57] (CNonCanonical)
canEvNC:eq
  a_axw
  [a_axD]
can_eq_nc
  [W] cobox_axF :: a_axw ~ [a_axD]
  a_axw
  a_axw
  [a_axD]
  [a_axD]
canEqTyVar
  a_axw
  [a_axD]
  Not-swapped
Following bound tyvar a_axw = [String]
canEqTyVar2
  a_axw
  [a_axD]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_axF :: [String] ~ [a_axD]
  [String]
  [String]
  [a_axD]
  [a_axD]
newWantedEvVar/cache miss [W] cobox_aGq :: String ~ a_axD
setEvBind
  ev = cobox_axF
  tm  = CO [cobox_aGq]_N
canEvNC:eq
  String
  a_axD
can_eq_nc
  [W] cobox_aGq :: String ~ a_axD
  String
  String
  a_axD
  a_axD
can_eq_nc
  [W] cobox_aGq :: String ~ a_axD
  [Char]
  String
  a_axD
  a_axD
canEqTyVar
  a_axD
  [Char]
  Is-swapped
Following bound tyvar a_axD = String
newWantedEvVar/cache miss [W] cobox_aGr :: String ~ String
setEvBind
  ev = cobox_aGq
  tm  = CO Sym cobox_aGr
rewriteEqEvidence
  [W] cobox_aGq :: String ~ a_axD
  String
  String
  Sym cobox_aGr
canEqTyVar2
  a_axD
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aGr :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aGr :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGs :: Char ~ Char
setEvBind
  ev = cobox_aGr
  tm  = CO [cobox_aGs]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGs :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGs
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axG :: t_alK ~ Int [" a type equality t_alK
                                                               ~
                                                               Int " FQL.hs:105:60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axG :: t_alK ~ Int [" a type equality t_alK
                                                                ~
                                                                Int " FQL.hs:105:60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axG :: t_alK ~ Int [" a type equality t_alK
                                                  ~
                                                  Int " FQL.hs:105:60] (CNonCanonical)
canEvNC:eq
  t_alK
  Int
can_eq_nc
  [W] cobox_axG :: t_alK ~ Int
  t_alK
  t_alK
  Int
  Int
canEqTyVar
  t_alK
  Int
  Not-swapped
Following bound tyvar t_alK = Int
canEqTyVar2
  t_alK
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_axG :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_axG
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axH :: t_alD
                                ~ [a_axw] [" a type equality t_alD
                                                             ~
                                                             [a_axw] " FQL.hs:105:65-87] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axH :: t_alD
                                 ~ [a_axw] [" a type equality t_alD
                                                              ~
                                                              [a_axw] " FQL.hs:105:65-87] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axH :: t_alD ~ [a_axw] [" a type equality t_alD
                                                      ~
                                                      [a_axw] " FQL.hs:105:65-87] (CNonCanonical)
canEvNC:eq
  t_alD
  [a_axw]
can_eq_nc
  [W] cobox_axH :: t_alD ~ [a_axw]
  t_alD
  t_alD
  [a_axw]
  [a_axw]
canEqTyVar
  t_alD
  [a_axw]
  Not-swapped
Following bound tyvar t_alD = Table
canEqTyVar2
  t_alD
  [a_axw]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axH :: Table ~ [a_axw]
  Table
  Table
  [a_axw]
  [a_axw]
can_eq_nc
  [W] cobox_axH :: Table ~ [a_axw]
  [[String]]
  Table
  [a_axw]
  [a_axw]
newWantedEvVar/cache miss [W] cobox_aGt :: [String] ~ a_axw
setEvBind
  ev = cobox_axH
  tm  = CO [cobox_aGt]_N
canEvNC:eq
  [String]
  a_axw
can_eq_nc
  [W] cobox_aGt :: [String] ~ a_axw
  [String]
  [String]
  a_axw
  a_axw
canEqTyVar
  a_axw
  [String]
  Is-swapped
Following bound tyvar a_axw = [String]
newWantedEvVar/cache miss [W] cobox_aGu :: [String] ~ [String]
setEvBind
  ev = cobox_aGt
  tm  = CO Sym cobox_aGu
rewriteEqEvidence
  [W] cobox_aGt :: [String] ~ a_axw
  [String]
  [String]
  Sym cobox_aGu
canEqTyVar2
  a_axw
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aGu :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aGv :: String ~ String
setEvBind
  ev = cobox_aGu
  tm  = CO [cobox_aGv]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGv :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGv :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGv :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGw :: Char ~ Char
setEvBind
  ev = cobox_aGv
  tm  = CO [cobox_aGw]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axI :: t_alH
                                ~ t_alB [" a type equality t_alH
                                                           ~
                                                           t_alB " FQL.hs:105:78-81] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axI :: t_alH
                                 ~ t_alB [" a type equality t_alH
                                                            ~
                                                            t_alB " FQL.hs:105:78-81] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axI :: t_alH ~ t_alB [" a type equality t_alH
                                                    ~
                                                    t_alB " FQL.hs:105:78-81] (CNonCanonical)
canEvNC:eq
  t_alH
  t_alB
can_eq_nc
  [W] cobox_axI :: t_alH ~ t_alB
  t_alH
  t_alH
  t_alB
  t_alB
canEqTyVar
  t_alH
  t_alB
  Not-swapped
Following bound tyvar t_alH = Table
canEqTyVar2
  t_alH
  t_alB
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axI :: Table ~ t_alB
  Table
  Table
  t_alB
  t_alB
can_eq_nc
  [W] cobox_axI :: Table ~ t_alB
  [[String]]
  Table
  t_alB
  t_alB
canEqTyVar
  t_alB
  [[String]]
  Is-swapped
Following bound tyvar t_alB = Table
newWantedEvVar/cache miss [W] cobox_aGx :: Table ~ Table
setEvBind
  ev = cobox_axI
  tm  = CO Sym cobox_aGx
rewriteEqEvidence
  [W] cobox_axI :: Table ~ t_alB
  Table
  Table
  Sym cobox_aGx
canEqTyVar2
  t_alB
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aGx :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_aGx :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_aGy :: [String] ~ [String]
setEvBind
  ev = cobox_aGx
  tm  = CO [cobox_aGy]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_aGy :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aGz :: String ~ String
setEvBind
  ev = cobox_aGy
  tm  = CO [cobox_aGz]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGz :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGz :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGz :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGA :: Char ~ Char
setEvBind
  ev = cobox_aGz
  tm  = CO [cobox_aGA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axJ :: t_alI
                                ~ t_alC [" a type equality t_alI
                                                           ~
                                                           t_alC " FQL.hs:105:83-87] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axJ :: t_alI
                                 ~ t_alC [" a type equality t_alI
                                                            ~
                                                            t_alC " FQL.hs:105:83-87] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axJ :: t_alI ~ t_alC [" a type equality t_alI
                                                    ~
                                                    t_alC " FQL.hs:105:83-87] (CNonCanonical)
canEvNC:eq
  t_alI
  t_alC
can_eq_nc
  [W] cobox_axJ :: t_alI ~ t_alC
  t_alI
  t_alI
  t_alC
  t_alC
canEqTyVar
  t_alI
  t_alC
  Not-swapped
Following bound tyvar t_alI = Table
canEqTyVar2
  t_alI
  t_alC
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axJ :: Table ~ t_alC
  Table
  Table
  t_alC
  t_alC
can_eq_nc
  [W] cobox_axJ :: Table ~ t_alC
  [[String]]
  Table
  t_alC
  t_alC
canEqTyVar
  t_alC
  [[String]]
  Is-swapped
Following bound tyvar t_alC = Table
newWantedEvVar/cache miss [W] cobox_aGB :: Table ~ Table
setEvBind
  ev = cobox_axJ
  tm  = CO Sym cobox_aGB
rewriteEqEvidence
  [W] cobox_axJ :: Table ~ t_alC
  Table
  Table
  Sym cobox_aGB
canEqTyVar2
  t_alC
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aGB :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_aGB :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_aGC :: [String] ~ [String]
setEvBind
  ev = cobox_aGB
  tm  = CO [cobox_aGC]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_aGC :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aGD :: String ~ String
setEvBind
  ev = cobox_aGC
  tm  = CO [cobox_aGD]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGD :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGD :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGE :: Char ~ Char
setEvBind
  ev = cobox_aGD
  tm  = CO [cobox_aGE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axO :: a_axM
                                ~ t_axL [" a type equality a_axM
                                                           ~
                                                           t_axL " FQL.hs:99:30-81] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axO :: a_axM
                                 ~ t_axL [" a type equality a_axM
                                                            ~
                                                            t_axL " FQL.hs:99:30-81] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axO :: a_axM ~ t_axL [" a type equality a_axM
                                                    ~
                                                    t_axL " FQL.hs:99:30-81] (CNonCanonical)
canEvNC:eq
  a_axM
  t_axL
can_eq_nc
  [W] cobox_axO :: a_axM ~ t_axL
  a_axM
  a_axM
  t_axL
  t_axL
canEqTyVar
  a_axM
  t_axL
  Not-swapped
newWantedEvVar/cache miss [W] cobox_aGF :: t_axL ~ a_axM
setEvBind
  ev = cobox_axO
  tm  = CO Sym cobox_aGF
rewriteEqEvidence
  [W] cobox_axO :: a_axM ~ t_axL
  t_axL
  a_axM
  Sym cobox_aGF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGF :: t_axL
                                 ~ a_axM [" a type equality a_axM
                                                            ~
                                                            t_axL " FQL.hs:99:30-81] (CTyEqCan)
Sneaky unification:
  Unifies: t_axL := a_axM
  Coercion: t_axL ~ a_axM
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_axL := a_axM
setEvBind
  ev = cobox_aGF
  tm  = CO <a_axM>_N
kickOutRewritable
  tv =  t_axL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
264[<C:0,F:0>] [W] cobox_aGF :: t_axL ~ a_axM: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axP :: t_amn
                                ~ a_axM [" a type equality t_amn
                                                           ~
                                                           a_axM " FQL.hs:99:30-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axP :: t_amn
                                 ~ a_axM [" a type equality t_amn
                                                            ~
                                                            a_axM " FQL.hs:99:30-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axP :: t_amn ~ a_axM [" a type equality t_amn
                                                    ~
                                                    a_axM " FQL.hs:99:30-60] (CNonCanonical)
canEvNC:eq
  t_amn
  a_axM
can_eq_nc
  [W] cobox_axP :: t_amn ~ a_axM
  t_amn
  t_amn
  a_axM
  a_axM
canEqTyVar
  t_amn
  a_axM
  Not-swapped
Following bound tyvar t_amn = Int
canEqTyVar2
  t_amn
  a_axM
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_axP :: Int ~ a_axM
  Int
  Int
  a_axM
  a_axM
canEqTyVar
  a_axM
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aGG :: a_axM ~ Int
setEvBind
  ev = cobox_axP
  tm  = CO Sym cobox_aGG
rewriteEqEvidence
  [W] cobox_axP :: Int ~ a_axM
  a_axM
  Int
  Sym cobox_aGG
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGG :: a_axM ~ Int [" a type equality t_amn
                                                                ~
                                                                a_axM " FQL.hs:99:30-60] (CTyEqCan)
Sneaky unification:
  Unifies: a_axM := Int
  Coercion: a_axM ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axM := Int
setEvBind
  ev = cobox_aGG
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_axM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
265[<C:0,F:0>] [W] cobox_aGG :: a_axM ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axR :: a_axQ
                                ~ t_aml [" a type equality a_axQ
                                                           ~
                                                           t_aml " FQL.hs:99:37-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axR :: a_axQ
                                 ~ t_aml [" a type equality a_axQ
                                                            ~
                                                            t_aml " FQL.hs:99:37-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axR :: a_axQ ~ t_aml [" a type equality a_axQ
                                                    ~
                                                    t_aml " FQL.hs:99:37-45] (CNonCanonical)
canEvNC:eq
  a_axQ
  t_aml
can_eq_nc
  [W] cobox_axR :: a_axQ ~ t_aml
  a_axQ
  a_axQ
  t_aml
  t_aml
canEqTyVar
  a_axQ
  t_aml
  Not-swapped
Following bound tyvar t_aml = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_axR :: a_axQ
                                 ~ [String] [" a type equality a_axQ
                                                               ~
                                                               t_aml " FQL.hs:99:37-45] (CTyEqCan)
Sneaky unification:
  Unifies: a_axQ := [String]
  Coercion: a_axQ ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axQ := [String]
setEvBind
  ev = cobox_axR
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_axQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
266[<C:0,F:0>] [W] cobox_axR :: a_axQ
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axS :: t_alR
                                ~ [a_axQ] [" a type equality t_alR
                                                             ~
                                                             [a_axQ] " FQL.hs:99:42-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axS :: t_alR
                                 ~ [a_axQ] [" a type equality t_alR
                                                              ~
                                                              [a_axQ] " FQL.hs:99:42-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axS :: t_alR ~ [a_axQ] [" a type equality t_alR
                                                      ~
                                                      [a_axQ] " FQL.hs:99:42-45] (CNonCanonical)
canEvNC:eq
  t_alR
  [a_axQ]
can_eq_nc
  [W] cobox_axS :: t_alR ~ [a_axQ]
  t_alR
  t_alR
  [a_axQ]
  [a_axQ]
canEqTyVar
  t_alR
  [a_axQ]
  Not-swapped
Following bound tyvar t_alR = Table
canEqTyVar2
  t_alR
  [a_axQ]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axS :: Table ~ [a_axQ]
  Table
  Table
  [a_axQ]
  [a_axQ]
can_eq_nc
  [W] cobox_axS :: Table ~ [a_axQ]
  [[String]]
  Table
  [a_axQ]
  [a_axQ]
newWantedEvVar/cache miss [W] cobox_aGH :: [String] ~ a_axQ
setEvBind
  ev = cobox_axS
  tm  = CO [cobox_aGH]_N
canEvNC:eq
  [String]
  a_axQ
can_eq_nc
  [W] cobox_aGH :: [String] ~ a_axQ
  [String]
  [String]
  a_axQ
  a_axQ
canEqTyVar
  a_axQ
  [String]
  Is-swapped
Following bound tyvar a_axQ = [String]
newWantedEvVar/cache miss [W] cobox_aGI :: [String] ~ [String]
setEvBind
  ev = cobox_aGH
  tm  = CO Sym cobox_aGI
rewriteEqEvidence
  [W] cobox_aGH :: [String] ~ a_axQ
  [String]
  [String]
  Sym cobox_aGI
canEqTyVar2
  a_axQ
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aGI :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aGJ :: String ~ String
setEvBind
  ev = cobox_aGI
  tm  = CO [cobox_aGJ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGJ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGJ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGJ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGK :: Char ~ Char
setEvBind
  ev = cobox_aGJ
  tm  = CO [cobox_aGK]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axU :: a_axT
                                ~ t_amm [" a type equality a_axT
                                                           ~
                                                           t_amm " FQL.hs:99:50-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axU :: a_axT
                                 ~ t_amm [" a type equality a_axT
                                                            ~
                                                            t_amm " FQL.hs:99:50-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axU :: a_axT ~ t_amm [" a type equality a_axT
                                                    ~
                                                    t_amm " FQL.hs:99:50-59] (CNonCanonical)
canEvNC:eq
  a_axT
  t_amm
can_eq_nc
  [W] cobox_axU :: a_axT ~ t_amm
  a_axT
  a_axT
  t_amm
  t_amm
canEqTyVar
  a_axT
  t_amm
  Not-swapped
Following bound tyvar t_amm = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_axU :: a_axT
                                 ~ [String] [" a type equality a_axT
                                                               ~
                                                               t_amm " FQL.hs:99:50-59] (CTyEqCan)
Sneaky unification:
  Unifies: a_axT := [String]
  Coercion: a_axT ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axT := [String]
setEvBind
  ev = cobox_axU
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_axT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
268[<C:0,F:0>] [W] cobox_axU :: a_axT
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axV :: t_alS
                                ~ [a_axT] [" a type equality t_alS
                                                             ~
                                                             [a_axT] " FQL.hs:99:55-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axV :: t_alS
                                 ~ [a_axT] [" a type equality t_alS
                                                              ~
                                                              [a_axT] " FQL.hs:99:55-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axV :: t_alS ~ [a_axT] [" a type equality t_alS
                                                      ~
                                                      [a_axT] " FQL.hs:99:55-59] (CNonCanonical)
canEvNC:eq
  t_alS
  [a_axT]
can_eq_nc
  [W] cobox_axV :: t_alS ~ [a_axT]
  t_alS
  t_alS
  [a_axT]
  [a_axT]
canEqTyVar
  t_alS
  [a_axT]
  Not-swapped
Following bound tyvar t_alS = Table
canEqTyVar2
  t_alS
  [a_axT]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_axV :: Table ~ [a_axT]
  Table
  Table
  [a_axT]
  [a_axT]
can_eq_nc
  [W] cobox_axV :: Table ~ [a_axT]
  [[String]]
  Table
  [a_axT]
  [a_axT]
newWantedEvVar/cache miss [W] cobox_aGL :: [String] ~ a_axT
setEvBind
  ev = cobox_axV
  tm  = CO [cobox_aGL]_N
canEvNC:eq
  [String]
  a_axT
can_eq_nc
  [W] cobox_aGL :: [String] ~ a_axT
  [String]
  [String]
  a_axT
  a_axT
canEqTyVar
  a_axT
  [String]
  Is-swapped
Following bound tyvar a_axT = [String]
newWantedEvVar/cache miss [W] cobox_aGM :: [String] ~ [String]
setEvBind
  ev = cobox_aGL
  tm  = CO Sym cobox_aGM
rewriteEqEvidence
  [W] cobox_aGL :: [String] ~ a_axT
  [String]
  [String]
  Sym cobox_aGM
canEqTyVar2
  a_axT
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aGM :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aGN :: String ~ String
setEvBind
  ev = cobox_aGM
  tm  = CO [cobox_aGN]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGN :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGN :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGN :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGO :: Char ~ Char
setEvBind
  ev = cobox_aGN
  tm  = CO [cobox_aGO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axX :: Int ~ a_axM [" a type equality Int
                                                               ~
                                                               a_axM " FQL.hs:99:64-81] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axX :: Int ~ a_axM [" a type equality Int
                                                                ~
                                                                a_axM " FQL.hs:99:64-81] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axX :: Int ~ a_axM [" a type equality Int
                                                  ~
                                                  a_axM " FQL.hs:99:64-81] (CNonCanonical)
canEvNC:eq
  Int
  a_axM
can_eq_nc
  [W] cobox_axX :: Int ~ a_axM
  Int
  Int
  a_axM
  a_axM
canEqTyVar
  a_axM
  Int
  Is-swapped
Following bound tyvar a_axM = Int
newWantedEvVar/cache miss [W] cobox_aGP :: Int ~ Int
setEvBind
  ev = cobox_axX
  tm  = CO Sym cobox_aGP
rewriteEqEvidence
  [W] cobox_axX :: Int ~ a_axM
  Int
  Int
  Sym cobox_aGP
canEqTyVar2
  a_axM
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aGP :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aGP
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_axZ :: a_axY
                                ~ [a_axW] [" a type equality a_axY
                                                             ~
                                                             [a_axW] " FQL.hs:99:72-80] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_axZ :: a_axY
                                 ~ [a_axW] [" a type equality a_axY
                                                              ~
                                                              [a_axW] " FQL.hs:99:72-80] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_axZ :: a_axY ~ [a_axW] [" a type equality a_axY
                                                      ~
                                                      [a_axW] " FQL.hs:99:72-80] (CNonCanonical)
canEvNC:eq
  a_axY
  [a_axW]
can_eq_nc
  [W] cobox_axZ :: a_axY ~ [a_axW]
  a_axY
  a_axY
  [a_axW]
  [a_axW]
canEqTyVar
  a_axY
  [a_axW]
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_axZ :: a_axY
                                 ~ [a_axW] [" a type equality a_axY
                                                              ~
                                                              [a_axW] " FQL.hs:99:72-80] (CTyEqCan)
Sneaky unification:
  Unifies: a_axY := [a_axW]
  Coercion: a_axY ~ [a_axW]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axY := [a_axW]
setEvBind
  ev = cobox_axZ
  tm  = CO <[a_axW]>_N
kickOutRewritable
  tv =  a_axY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
271[<C:0,F:0>] [W] cobox_axZ :: a_axY
                                ~ [a_axW]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ay0 :: t_alR
                                ~ [a_axY] [" a type equality t_alR
                                                             ~
                                                             [a_axY] " FQL.hs:99:77-80] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ay0 :: t_alR
                                 ~ [a_axY] [" a type equality t_alR
                                                              ~
                                                              [a_axY] " FQL.hs:99:77-80] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ay0 :: t_alR ~ [a_axY] [" a type equality t_alR
                                                      ~
                                                      [a_axY] " FQL.hs:99:77-80] (CNonCanonical)
canEvNC:eq
  t_alR
  [a_axY]
can_eq_nc
  [W] cobox_ay0 :: t_alR ~ [a_axY]
  t_alR
  t_alR
  [a_axY]
  [a_axY]
canEqTyVar
  t_alR
  [a_axY]
  Not-swapped
Following bound tyvar t_alR = Table
canEqTyVar2
  t_alR
  [a_axY]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_ay0 :: Table ~ [a_axY]
  Table
  Table
  [a_axY]
  [a_axY]
can_eq_nc
  [W] cobox_ay0 :: Table ~ [a_axY]
  [[String]]
  Table
  [a_axY]
  [a_axY]
newWantedEvVar/cache miss [W] cobox_aGQ :: [String] ~ a_axY
setEvBind
  ev = cobox_ay0
  tm  = CO [cobox_aGQ]_N
canEvNC:eq
  [String]
  a_axY
can_eq_nc
  [W] cobox_aGQ :: [String] ~ a_axY
  [String]
  [String]
  a_axY
  a_axY
canEqTyVar
  a_axY
  [String]
  Is-swapped
Following bound tyvar a_axY = [a_axW]
newWantedEvVar/cache miss [W] cobox_aGR :: [a_axW] ~ [String]
setEvBind
  ev = cobox_aGQ
  tm  = CO Sym cobox_aGR
rewriteEqEvidence
  [W] cobox_aGQ :: [String] ~ a_axY
  [a_axW]
  [String]
  Sym cobox_aGR
canEqTyVar2
  a_axY
  [String]
  Is-swapped
  [a_axW]
  <[a_axW]>_N
can_eq_nc
  [W] cobox_aGR :: [a_axW] ~ [String]
  [a_axW]
  [a_axW]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aGS :: a_axW ~ String
setEvBind
  ev = cobox_aGR
  tm  = CO [cobox_aGS]_N
canEvNC:eq
  a_axW
  String
can_eq_nc
  [W] cobox_aGS :: a_axW ~ String
  a_axW
  a_axW
  String
  String
can_eq_nc
  [W] cobox_aGS :: a_axW ~ String
  a_axW
  a_axW
  [Char]
  String
canEqTyVar
  a_axW
  [Char]
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGS :: a_axW
                                 ~ String [" a type equality t_alR
                                                             ~
                                                             [a_axY] " FQL.hs:99:77-80] (CTyEqCan)
Sneaky unification:
  Unifies: a_axW := String
  Coercion: a_axW ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_axW := String
setEvBind
  ev = cobox_aGS
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_axW
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
272[<C:0,F:0>] [W] cobox_aGS :: a_axW
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ay2 :: t_amn
                                ~ t_ay1 [" a type equality t_amn
                                                           ~
                                                           t_ay1 " FQL.hs:98:30-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ay2 :: t_amn
                                 ~ t_ay1 [" a type equality t_amn
                                                            ~
                                                            t_ay1 " FQL.hs:98:30-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ay2 :: t_amn ~ t_ay1 [" a type equality t_amn
                                                    ~
                                                    t_ay1 " FQL.hs:98:30-59] (CNonCanonical)
canEvNC:eq
  t_amn
  t_ay1
can_eq_nc
  [W] cobox_ay2 :: t_amn ~ t_ay1
  t_amn
  t_amn
  t_ay1
  t_ay1
canEqTyVar
  t_amn
  t_ay1
  Not-swapped
Following bound tyvar t_amn = Int
canEqTyVar2
  t_amn
  t_ay1
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_ay2 :: Int ~ t_ay1
  Int
  Int
  t_ay1
  t_ay1
canEqTyVar
  t_ay1
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aGT :: t_ay1 ~ Int
setEvBind
  ev = cobox_ay2
  tm  = CO Sym cobox_aGT
rewriteEqEvidence
  [W] cobox_ay2 :: Int ~ t_ay1
  t_ay1
  Int
  Sym cobox_aGT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGT :: t_ay1 ~ Int [" a type equality t_amn
                                                                ~
                                                                t_ay1 " FQL.hs:98:30-59] (CTyEqCan)
Sneaky unification:
  Unifies: t_ay1 := Int
  Coercion: t_ay1 ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ay1 := Int
setEvBind
  ev = cobox_aGT
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_ay1
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
273[<C:0,F:0>] [W] cobox_aGT :: t_ay1 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ay4 :: a_ay3
                                ~ t_aml [" a type equality a_ay3
                                                           ~
                                                           t_aml " FQL.hs:98:37-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ay4 :: a_ay3
                                 ~ t_aml [" a type equality a_ay3
                                                            ~
                                                            t_aml " FQL.hs:98:37-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ay4 :: a_ay3 ~ t_aml [" a type equality a_ay3
                                                    ~
                                                    t_aml " FQL.hs:98:37-46] (CNonCanonical)
canEvNC:eq
  a_ay3
  t_aml
can_eq_nc
  [W] cobox_ay4 :: a_ay3 ~ t_aml
  a_ay3
  a_ay3
  t_aml
  t_aml
canEqTyVar
  a_ay3
  t_aml
  Not-swapped
Following bound tyvar t_aml = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ay4 :: a_ay3
                                 ~ [String] [" a type equality a_ay3
                                                               ~
                                                               t_aml " FQL.hs:98:37-46] (CTyEqCan)
Sneaky unification:
  Unifies: a_ay3 := [String]
  Coercion: a_ay3 ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ay3 := [String]
setEvBind
  ev = cobox_ay4
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_ay3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
274[<C:0,F:0>] [W] cobox_ay4 :: a_ay3
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ay5 :: t_alS
                                ~ [a_ay3] [" a type equality t_alS
                                                             ~
                                                             [a_ay3] " FQL.hs:98:42-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ay5 :: t_alS
                                 ~ [a_ay3] [" a type equality t_alS
                                                              ~
                                                              [a_ay3] " FQL.hs:98:42-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ay5 :: t_alS ~ [a_ay3] [" a type equality t_alS
                                                      ~
                                                      [a_ay3] " FQL.hs:98:42-46] (CNonCanonical)
canEvNC:eq
  t_alS
  [a_ay3]
can_eq_nc
  [W] cobox_ay5 :: t_alS ~ [a_ay3]
  t_alS
  t_alS
  [a_ay3]
  [a_ay3]
canEqTyVar
  t_alS
  [a_ay3]
  Not-swapped
Following bound tyvar t_alS = Table
canEqTyVar2
  t_alS
  [a_ay3]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_ay5 :: Table ~ [a_ay3]
  Table
  Table
  [a_ay3]
  [a_ay3]
can_eq_nc
  [W] cobox_ay5 :: Table ~ [a_ay3]
  [[String]]
  Table
  [a_ay3]
  [a_ay3]
newWantedEvVar/cache miss [W] cobox_aGU :: [String] ~ a_ay3
setEvBind
  ev = cobox_ay5
  tm  = CO [cobox_aGU]_N
canEvNC:eq
  [String]
  a_ay3
can_eq_nc
  [W] cobox_aGU :: [String] ~ a_ay3
  [String]
  [String]
  a_ay3
  a_ay3
canEqTyVar
  a_ay3
  [String]
  Is-swapped
Following bound tyvar a_ay3 = [String]
newWantedEvVar/cache miss [W] cobox_aGV :: [String] ~ [String]
setEvBind
  ev = cobox_aGU
  tm  = CO Sym cobox_aGV
rewriteEqEvidence
  [W] cobox_aGU :: [String] ~ a_ay3
  [String]
  [String]
  Sym cobox_aGV
canEqTyVar2
  a_ay3
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aGV :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aGW :: String ~ String
setEvBind
  ev = cobox_aGV
  tm  = CO [cobox_aGW]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGW :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGW :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGW :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGX :: Char ~ Char
setEvBind
  ev = cobox_aGW
  tm  = CO [cobox_aGX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ay7 :: a_ay6
                                ~ t_amm [" a type equality a_ay6
                                                           ~
                                                           t_amm " FQL.hs:98:50-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ay7 :: a_ay6
                                 ~ t_amm [" a type equality a_ay6
                                                            ~
                                                            t_amm " FQL.hs:98:50-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ay7 :: a_ay6 ~ t_amm [" a type equality a_ay6
                                                    ~
                                                    t_amm " FQL.hs:98:50-58] (CNonCanonical)
canEvNC:eq
  a_ay6
  t_amm
can_eq_nc
  [W] cobox_ay7 :: a_ay6 ~ t_amm
  a_ay6
  a_ay6
  t_amm
  t_amm
canEqTyVar
  a_ay6
  t_amm
  Not-swapped
Following bound tyvar t_amm = [String]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ay7 :: a_ay6
                                 ~ [String] [" a type equality a_ay6
                                                               ~
                                                               t_amm " FQL.hs:98:50-58] (CTyEqCan)
Sneaky unification:
  Unifies: a_ay6 := [String]
  Coercion: a_ay6 ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ay6 := [String]
setEvBind
  ev = cobox_ay7
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_ay6
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
276[<C:0,F:0>] [W] cobox_ay7 :: a_ay6
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ay8 :: t_alR
                                ~ [a_ay6] [" a type equality t_alR
                                                             ~
                                                             [a_ay6] " FQL.hs:98:55-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ay8 :: t_alR
                                 ~ [a_ay6] [" a type equality t_alR
                                                              ~
                                                              [a_ay6] " FQL.hs:98:55-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ay8 :: t_alR ~ [a_ay6] [" a type equality t_alR
                                                      ~
                                                      [a_ay6] " FQL.hs:98:55-58] (CNonCanonical)
canEvNC:eq
  t_alR
  [a_ay6]
can_eq_nc
  [W] cobox_ay8 :: t_alR ~ [a_ay6]
  t_alR
  t_alR
  [a_ay6]
  [a_ay6]
canEqTyVar
  t_alR
  [a_ay6]
  Not-swapped
Following bound tyvar t_alR = Table
canEqTyVar2
  t_alR
  [a_ay6]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_ay8 :: Table ~ [a_ay6]
  Table
  Table
  [a_ay6]
  [a_ay6]
can_eq_nc
  [W] cobox_ay8 :: Table ~ [a_ay6]
  [[String]]
  Table
  [a_ay6]
  [a_ay6]
newWantedEvVar/cache miss [W] cobox_aGY :: [String] ~ a_ay6
setEvBind
  ev = cobox_ay8
  tm  = CO [cobox_aGY]_N
canEvNC:eq
  [String]
  a_ay6
can_eq_nc
  [W] cobox_aGY :: [String] ~ a_ay6
  [String]
  [String]
  a_ay6
  a_ay6
canEqTyVar
  a_ay6
  [String]
  Is-swapped
Following bound tyvar a_ay6 = [String]
newWantedEvVar/cache miss [W] cobox_aGZ :: [String] ~ [String]
setEvBind
  ev = cobox_aGY
  tm  = CO Sym cobox_aGZ
rewriteEqEvidence
  [W] cobox_aGY :: [String] ~ a_ay6
  [String]
  [String]
  Sym cobox_aGZ
canEqTyVar2
  a_ay6
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aGZ :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aH0 :: String ~ String
setEvBind
  ev = cobox_aGZ
  tm  = CO [cobox_aH0]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aH0 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aH0 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aH0 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aH1 :: Char ~ Char
setEvBind
  ev = cobox_aH0
  tm  = CO [cobox_aH1]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aH1 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aH1
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayb :: [b_aya]
                                ~ t_alT [" a type equality [b_aya]
                                                           ~
                                                           t_alT " FQL.hs:97:20-82] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayb :: [b_aya]
                                 ~ t_alT [" a type equality [b_aya]
                                                            ~
                                                            t_alT " FQL.hs:97:20-82] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayb :: [b_aya] ~ t_alT [" a type equality [b_aya]
                                                      ~
                                                      t_alT " FQL.hs:97:20-82] (CNonCanonical)
canEvNC:eq
  [b_aya]
  t_alT
can_eq_nc
  [W] cobox_ayb :: [b_aya] ~ t_alT
  [b_aya]
  [b_aya]
  t_alT
  t_alT
canEqTyVar
  t_alT
  [b_aya]
  Is-swapped
Following bound tyvar t_alT = Table
newWantedEvVar/cache miss [W] cobox_aH2 :: Table ~ [b_aya]
setEvBind
  ev = cobox_ayb
  tm  = CO Sym cobox_aH2
rewriteEqEvidence
  [W] cobox_ayb :: [b_aya] ~ t_alT
  Table
  [b_aya]
  Sym cobox_aH2
canEqTyVar2
  t_alT
  [b_aya]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aH2 :: Table ~ [b_aya]
  Table
  Table
  [b_aya]
  [b_aya]
can_eq_nc
  [W] cobox_aH2 :: Table ~ [b_aya]
  [[String]]
  Table
  [b_aya]
  [b_aya]
newWantedEvVar/cache miss [W] cobox_aH3 :: [String] ~ b_aya
setEvBind
  ev = cobox_aH2
  tm  = CO [cobox_aH3]_N
canEvNC:eq
  [String]
  b_aya
can_eq_nc
  [W] cobox_aH3 :: [String] ~ b_aya
  [String]
  [String]
  b_aya
  b_aya
canEqTyVar
  b_aya
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aH4 :: b_aya ~ [String]
setEvBind
  ev = cobox_aH3
  tm  = CO Sym cobox_aH4
rewriteEqEvidence
  [W] cobox_aH3 :: [String] ~ b_aya
  b_aya
  [String]
  Sym cobox_aH4
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aH4 :: b_aya
                                 ~ [String] [" a type equality [b_aya]
                                                               ~
                                                               t_alT " FQL.hs:97:20-82] (CTyEqCan)
Sneaky unification:
  Unifies: b_aya := [String]
  Coercion: b_aya ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aya := [String]
setEvBind
  ev = cobox_aH4
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  b_aya
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
278[<C:0,F:0>] [W] cobox_aH4 :: b_aya
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayd :: [a_ayc]
                                ~ b_aya [" a type equality [a_ayc]
                                                           ~
                                                           b_aya " FQL.hs:97:30-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayd :: [a_ayc]
                                 ~ b_aya [" a type equality [a_ayc]
                                                            ~
                                                            b_aya " FQL.hs:97:30-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayd :: [a_ayc] ~ b_aya [" a type equality [a_ayc]
                                                      ~
                                                      b_aya " FQL.hs:97:30-55] (CNonCanonical)
canEvNC:eq
  [a_ayc]
  b_aya
can_eq_nc
  [W] cobox_ayd :: [a_ayc] ~ b_aya
  [a_ayc]
  [a_ayc]
  b_aya
  b_aya
canEqTyVar
  b_aya
  [a_ayc]
  Is-swapped
Following bound tyvar b_aya = [String]
newWantedEvVar/cache miss [W] cobox_aH5 :: [String] ~ [a_ayc]
setEvBind
  ev = cobox_ayd
  tm  = CO Sym cobox_aH5
rewriteEqEvidence
  [W] cobox_ayd :: [a_ayc] ~ b_aya
  [String]
  [a_ayc]
  Sym cobox_aH5
canEqTyVar2
  b_aya
  [a_ayc]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aH5 :: [String] ~ [a_ayc]
  [String]
  [String]
  [a_ayc]
  [a_ayc]
newWantedEvVar/cache miss [W] cobox_aH6 :: String ~ a_ayc
setEvBind
  ev = cobox_aH5
  tm  = CO [cobox_aH6]_N
canEvNC:eq
  String
  a_ayc
can_eq_nc
  [W] cobox_aH6 :: String ~ a_ayc
  String
  String
  a_ayc
  a_ayc
can_eq_nc
  [W] cobox_aH6 :: String ~ a_ayc
  [Char]
  String
  a_ayc
  a_ayc
canEqTyVar
  a_ayc
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aH7 :: a_ayc ~ String
setEvBind
  ev = cobox_aH6
  tm  = CO Sym cobox_aH7
rewriteEqEvidence
  [W] cobox_aH6 :: String ~ a_ayc
  a_ayc
  String
  Sym cobox_aH7
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aH7 :: a_ayc
                                 ~ String [" a type equality [a_ayc]
                                                             ~
                                                             b_aya " FQL.hs:97:30-55] (CTyEqCan)
Sneaky unification:
  Unifies: a_ayc := String
  Coercion: a_ayc ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ayc := String
setEvBind
  ev = cobox_aH7
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_ayc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
279[<C:0,F:0>] [W] cobox_aH7 :: a_ayc
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayf :: [a_aye]
                                ~ [a_ayc] [" a type equality [a_aye]
                                                             ~
                                                             [a_ayc] " FQL.hs:97:30-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayf :: [a_aye]
                                 ~ [a_ayc] [" a type equality [a_aye]
                                                              ~
                                                              [a_ayc] " FQL.hs:97:30-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayf :: [a_aye] ~ [a_ayc] [" a type equality [a_aye]
                                                        ~
                                                        [a_ayc] " FQL.hs:97:30-37] (CNonCanonical)
canEvNC:eq
  [a_aye]
  [a_ayc]
can_eq_nc
  [W] cobox_ayf :: [a_aye] ~ [a_ayc]
  [a_aye]
  [a_aye]
  [a_ayc]
  [a_ayc]
newWantedEvVar/cache miss [W] cobox_aH8 :: a_aye ~ a_ayc
setEvBind
  ev = cobox_ayf
  tm  = CO [cobox_aH8]_N
canEvNC:eq
  a_aye
  a_ayc
can_eq_nc
  [W] cobox_aH8 :: a_aye ~ a_ayc
  a_aye
  a_aye
  a_ayc
  a_ayc
canEqTyVar
  a_aye
  a_ayc
  Not-swapped
Following bound tyvar a_ayc = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aH8 :: a_aye
                                 ~ String [" a type equality [a_aye]
                                                             ~
                                                             [a_ayc] " FQL.hs:97:30-37] (CTyEqCan)
Sneaky unification:
  Unifies: a_aye := String
  Coercion: a_aye ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aye := String
setEvBind
  ev = cobox_aH8
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aye
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
280[<C:0,F:0>] [W] cobox_aH8 :: a_aye
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayg :: t_axL ~ Int [" a type equality t_axL
                                                               ~
                                                               Int " FQL.hs:97:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayg :: t_axL ~ Int [" a type equality t_axL
                                                                ~
                                                                Int " FQL.hs:97:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayg :: t_axL ~ Int [" a type equality t_axL
                                                  ~
                                                  Int " FQL.hs:97:35] (CNonCanonical)
canEvNC:eq
  t_axL
  Int
can_eq_nc
  [W] cobox_ayg :: t_axL ~ Int
  t_axL
  t_axL
  Int
  Int
canEqTyVar
  t_axL
  Int
  Not-swapped
Following bound tyvar t_axL = a_axM
canEqTyVar2
  t_axL
  Int
  Not-swapped
  a_axM
  <a_axM>_N
can_eq_nc
  [W] cobox_ayg :: a_axM ~ Int
  a_axM
  a_axM
  Int
  Int
canEqTyVar
  a_axM
  Int
  Not-swapped
Following bound tyvar a_axM = Int
canEqTyVar2
  a_axM
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_ayg :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_ayg
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayh :: a_ay9
                                ~ [a_aye] [" a type equality a_ay9
                                                             ~
                                                             [a_aye] " FQL.hs:97:37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayh :: a_ay9
                                 ~ [a_aye] [" a type equality a_ay9
                                                              ~
                                                              [a_aye] " FQL.hs:97:37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayh :: a_ay9 ~ [a_aye] [" a type equality a_ay9
                                                      ~
                                                      [a_aye] " FQL.hs:97:37] (CNonCanonical)
canEvNC:eq
  a_ay9
  [a_aye]
can_eq_nc
  [W] cobox_ayh :: a_ay9 ~ [a_aye]
  a_ay9
  a_ay9
  [a_aye]
  [a_aye]
canEqTyVar
  a_ay9
  [a_aye]
  Not-swapped
Following bound tyvar a_aye = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayh :: a_ay9
                                 ~ [String] [" a type equality a_ay9
                                                               ~
                                                               [a_aye] " FQL.hs:97:37] (CTyEqCan)
Sneaky unification:
  Unifies: a_ay9 := [String]
  Coercion: a_ay9 ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ay9 := [String]
setEvBind
  ev = cobox_ayh
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  a_ay9
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
282[<C:0,F:0>] [W] cobox_ayh :: a_ay9
                                ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayk :: [a_ayj]
                                ~ [a_ayc] [" a type equality [a_ayj]
                                                             ~
                                                             [a_ayc] " FQL.hs:97:43-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayk :: [a_ayj]
                                 ~ [a_ayc] [" a type equality [a_ayj]
                                                              ~
                                                              [a_ayc] " FQL.hs:97:43-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayk :: [a_ayj] ~ [a_ayc] [" a type equality [a_ayj]
                                                        ~
                                                        [a_ayc] " FQL.hs:97:43-54] (CNonCanonical)
canEvNC:eq
  [a_ayj]
  [a_ayc]
can_eq_nc
  [W] cobox_ayk :: [a_ayj] ~ [a_ayc]
  [a_ayj]
  [a_ayj]
  [a_ayc]
  [a_ayc]
newWantedEvVar/cache miss [W] cobox_aH9 :: a_ayj ~ a_ayc
setEvBind
  ev = cobox_ayk
  tm  = CO [cobox_aH9]_N
canEvNC:eq
  a_ayj
  a_ayc
can_eq_nc
  [W] cobox_aH9 :: a_ayj ~ a_ayc
  a_ayj
  a_ayj
  a_ayc
  a_ayc
canEqTyVar
  a_ayj
  a_ayc
  Not-swapped
Following bound tyvar a_ayc = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aH9 :: a_ayj
                                 ~ String [" a type equality [a_ayj]
                                                             ~
                                                             [a_ayc] " FQL.hs:97:43-54] (CTyEqCan)
Sneaky unification:
  Unifies: a_ayj := String
  Coercion: a_ayj ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ayj := String
setEvBind
  ev = cobox_aH9
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_ayj
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
283[<C:0,F:0>] [W] cobox_aH9 :: a_ayj
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                               ~
                                                               Int " FQL.hs:97:49-51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                                ~
                                                                Int " FQL.hs:97:49-51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                  ~
                                                  Int " FQL.hs:97:49-51] (CNonCanonical)
canEvNC:eq
  a_ayl
  Int
can_eq_nc
  [W] cobox_ayn :: a_ayl ~ Int
  a_ayl
  a_ayl
  Int
  Int
canEqTyVar
  a_ayl
  Int
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                                ~
                                                                Int " FQL.hs:97:49-51] (CTyEqCan)
Sneaky unification:
  Unifies: a_ayl := Int
  Coercion: a_ayl ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ayl := Int
setEvBind
  ev = cobox_ayn
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_ayl
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
284[<C:0,F:0>] [W] cobox_ayn :: a_ayl ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayo :: t_axL
                                ~ a_ayl [" a type equality t_axL
                                                           ~
                                                           a_ayl " FQL.hs:97:49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayo :: t_axL
                                 ~ a_ayl [" a type equality t_axL
                                                            ~
                                                            a_ayl " FQL.hs:97:49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayo :: t_axL ~ a_ayl [" a type equality t_axL
                                                    ~
                                                    a_ayl " FQL.hs:97:49] (CNonCanonical)
canEvNC:eq
  t_axL
  a_ayl
can_eq_nc
  [W] cobox_ayo :: t_axL ~ a_ayl
  t_axL
  t_axL
  a_ayl
  a_ayl
canEqTyVar
  t_axL
  a_ayl
  Not-swapped
Following bound tyvar t_axL = a_axM
canEqTyVar2
  t_axL
  a_ayl
  Not-swapped
  a_axM
  <a_axM>_N
can_eq_nc
  [W] cobox_ayo :: a_axM ~ a_ayl
  a_axM
  a_axM
  a_ayl
  a_ayl
canEqTyVar
  a_axM
  a_ayl
  Not-swapped
Following bound tyvar a_axM = Int
canEqTyVar2
  a_axM
  a_ayl
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_ayo :: Int ~ a_ayl
  Int
  Int
  a_ayl
  a_ayl
canEqTyVar
  a_ayl
  Int
  Is-swapped
Following bound tyvar a_ayl = Int
newWantedEvVar/cache miss [W] cobox_aHa :: Int ~ Int
setEvBind
  ev = cobox_ayo
  tm  = CO Sym cobox_aHa
rewriteEqEvidence
  [W] cobox_ayo :: Int ~ a_ayl
  Int
  Int
  Sym cobox_aHa
canEqTyVar2
  a_ayl
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aHa :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aHa
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayr :: (Integer -> a_ayp)
                                ~ (Integer -> a_ayl) [" a type equality Integer -> a_ayp
                                                                        ~
                                                                        Integer
                                                                        -> a_ayl " FQL.hs:97:51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayr :: (Integer -> a_ayp)
                                 ~ (Integer -> a_ayl) [" a type equality Integer -> a_ayp
                                                                         ~
                                                                         Integer
                                                                         -> a_ayl " FQL.hs:97:51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayr :: (Integer -> a_ayp)
                   ~ (Integer -> a_ayl) [" a type equality Integer -> a_ayp
                                                           ~
                                                           Integer
                                                           -> a_ayl " FQL.hs:97:51] (CNonCanonical)
canEvNC:eq
  Integer -> a_ayp
  Integer -> a_ayl
can_eq_nc
  [W] cobox_ayr :: (Integer -> a_ayp) ~ (Integer -> a_ayl)
  Integer -> a_ayp
  Integer -> a_ayp
  Integer -> a_ayl
  Integer -> a_ayl
newWantedEvVar/cache miss [W] cobox_aHb :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aHc :: a_ayp ~ a_ayl
setEvBind
  ev = cobox_ayr
  tm  = CO cobox_aHb -> cobox_aHc
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aHb :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aHb
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHc :: a_ayp
                                ~ a_ayl [" a type equality Integer -> a_ayp
                                                           ~
                                                           Integer
                                                           -> a_ayl " FQL.hs:97:51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHc :: a_ayp
                                 ~ a_ayl [" a type equality Integer -> a_ayp
                                                            ~
                                                            Integer
                                                            -> a_ayl " FQL.hs:97:51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHc :: a_ayp ~ a_ayl [" a type equality Integer -> a_ayp
                                                    ~
                                                    Integer -> a_ayl " FQL.hs:97:51] (CNonCanonical)
canEvNC:eq
  a_ayp
  a_ayl
can_eq_nc
  [W] cobox_aHc :: a_ayp ~ a_ayl
  a_ayp
  a_ayp
  a_ayl
  a_ayl
canEqTyVar
  a_ayp
  a_ayl
  Not-swapped
Following bound tyvar a_ayl = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aHc :: a_ayp
                                 ~ Int [" a type equality Integer -> a_ayp
                                                          ~
                                                          Integer
                                                          -> a_ayl " FQL.hs:97:51] (CTyEqCan)
Sneaky unification:
  Unifies: a_ayp := Int
  Coercion: a_ayp ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ayp := Int
setEvBind
  ev = cobox_aHc
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_ayp
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
287[<C:0,F:0>] [W] cobox_aHc :: a_ayp ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ays :: a_ay9
                                ~ [a_ayj] [" a type equality a_ay9
                                                             ~
                                                             [a_ayj] " FQL.hs:97:54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ays :: a_ay9
                                 ~ [a_ayj] [" a type equality a_ay9
                                                              ~
                                                              [a_ayj] " FQL.hs:97:54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ays :: a_ay9 ~ [a_ayj] [" a type equality a_ay9
                                                      ~
                                                      [a_ayj] " FQL.hs:97:54] (CNonCanonical)
canEvNC:eq
  a_ay9
  [a_ayj]
can_eq_nc
  [W] cobox_ays :: a_ay9 ~ [a_ayj]
  a_ay9
  a_ay9
  [a_ayj]
  [a_ayj]
canEqTyVar
  a_ay9
  [a_ayj]
  Not-swapped
Following bound tyvar a_ay9 = [String]
canEqTyVar2
  a_ay9
  [a_ayj]
  Not-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_ays :: [String] ~ [a_ayj]
  [String]
  [String]
  [a_ayj]
  [a_ayj]
newWantedEvVar/cache miss [W] cobox_aHd :: String ~ a_ayj
setEvBind
  ev = cobox_ays
  tm  = CO [cobox_aHd]_N
canEvNC:eq
  String
  a_ayj
can_eq_nc
  [W] cobox_aHd :: String ~ a_ayj
  String
  String
  a_ayj
  a_ayj
can_eq_nc
  [W] cobox_aHd :: String ~ a_ayj
  [Char]
  String
  a_ayj
  a_ayj
canEqTyVar
  a_ayj
  [Char]
  Is-swapped
Following bound tyvar a_ayj = String
newWantedEvVar/cache miss [W] cobox_aHe :: String ~ String
setEvBind
  ev = cobox_aHd
  tm  = CO Sym cobox_aHe
rewriteEqEvidence
  [W] cobox_aHd :: String ~ a_ayj
  String
  String
  Sym cobox_aHe
canEqTyVar2
  a_ayj
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aHe :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aHe :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHf :: Char ~ Char
setEvBind
  ev = cobox_aHe
  tm  = CO [cobox_aHf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayt :: t_alL
                                ~ [a_ay9] [" a type equality t_alL
                                                             ~
                                                             [a_ay9] " FQL.hs:97:59-81] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayt :: t_alL
                                 ~ [a_ay9] [" a type equality t_alL
                                                              ~
                                                              [a_ay9] " FQL.hs:97:59-81] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayt :: t_alL ~ [a_ay9] [" a type equality t_alL
                                                      ~
                                                      [a_ay9] " FQL.hs:97:59-81] (CNonCanonical)
canEvNC:eq
  t_alL
  [a_ay9]
can_eq_nc
  [W] cobox_ayt :: t_alL ~ [a_ay9]
  t_alL
  t_alL
  [a_ay9]
  [a_ay9]
canEqTyVar
  t_alL
  [a_ay9]
  Not-swapped
Following bound tyvar t_alL = Table
canEqTyVar2
  t_alL
  [a_ay9]
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_ayt :: Table ~ [a_ay9]
  Table
  Table
  [a_ay9]
  [a_ay9]
can_eq_nc
  [W] cobox_ayt :: Table ~ [a_ay9]
  [[String]]
  Table
  [a_ay9]
  [a_ay9]
newWantedEvVar/cache miss [W] cobox_aHg :: [String] ~ a_ay9
setEvBind
  ev = cobox_ayt
  tm  = CO [cobox_aHg]_N
canEvNC:eq
  [String]
  a_ay9
can_eq_nc
  [W] cobox_aHg :: [String] ~ a_ay9
  [String]
  [String]
  a_ay9
  a_ay9
canEqTyVar
  a_ay9
  [String]
  Is-swapped
Following bound tyvar a_ay9 = [String]
newWantedEvVar/cache miss [W] cobox_aHh :: [String] ~ [String]
setEvBind
  ev = cobox_aHg
  tm  = CO Sym cobox_aHh
rewriteEqEvidence
  [W] cobox_aHg :: [String] ~ a_ay9
  [String]
  [String]
  Sym cobox_aHh
canEqTyVar2
  a_ay9
  [String]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aHh :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aHi :: String ~ String
setEvBind
  ev = cobox_aHh
  tm  = CO [cobox_aHi]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHi :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHi :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHi :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHj :: Char ~ Char
setEvBind
  ev = cobox_aHi
  tm  = CO [cobox_aHj]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHj :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHj
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayu :: t_alR
                                ~ t_alH [" a type equality t_alR
                                                           ~
                                                           t_alH " FQL.hs:97:68-71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayu :: t_alR
                                 ~ t_alH [" a type equality t_alR
                                                            ~
                                                            t_alH " FQL.hs:97:68-71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayu :: t_alR ~ t_alH [" a type equality t_alR
                                                    ~
                                                    t_alH " FQL.hs:97:68-71] (CNonCanonical)
canEvNC:eq
  t_alR
  t_alH
can_eq_nc
  [W] cobox_ayu :: t_alR ~ t_alH
  t_alR
  t_alR
  t_alH
  t_alH
canEqTyVar
  t_alR
  t_alH
  Not-swapped
Following bound tyvar t_alR = Table
canEqTyVar2
  t_alR
  t_alH
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_ayu :: Table ~ t_alH
  Table
  Table
  t_alH
  t_alH
can_eq_nc
  [W] cobox_ayu :: Table ~ t_alH
  [[String]]
  Table
  t_alH
  t_alH
canEqTyVar
  t_alH
  [[String]]
  Is-swapped
Following bound tyvar t_alH = Table
newWantedEvVar/cache miss [W] cobox_aHk :: Table ~ Table
setEvBind
  ev = cobox_ayu
  tm  = CO Sym cobox_aHk
rewriteEqEvidence
  [W] cobox_ayu :: Table ~ t_alH
  Table
  Table
  Sym cobox_aHk
canEqTyVar2
  t_alH
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aHk :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_aHk :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_aHl :: [String] ~ [String]
setEvBind
  ev = cobox_aHk
  tm  = CO [cobox_aHl]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_aHl :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aHm :: String ~ String
setEvBind
  ev = cobox_aHl
  tm  = CO [cobox_aHm]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHm :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHm :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHm :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHn :: Char ~ Char
setEvBind
  ev = cobox_aHm
  tm  = CO [cobox_aHn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayv :: t_alS
                                ~ t_alI [" a type equality t_alS
                                                           ~
                                                           t_alI " FQL.hs:97:73-77] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayv :: t_alS
                                 ~ t_alI [" a type equality t_alS
                                                            ~
                                                            t_alI " FQL.hs:97:73-77] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayv :: t_alS ~ t_alI [" a type equality t_alS
                                                    ~
                                                    t_alI " FQL.hs:97:73-77] (CNonCanonical)
canEvNC:eq
  t_alS
  t_alI
can_eq_nc
  [W] cobox_ayv :: t_alS ~ t_alI
  t_alS
  t_alS
  t_alI
  t_alI
canEqTyVar
  t_alS
  t_alI
  Not-swapped
Following bound tyvar t_alS = Table
canEqTyVar2
  t_alS
  t_alI
  Not-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_ayv :: Table ~ t_alI
  Table
  Table
  t_alI
  t_alI
can_eq_nc
  [W] cobox_ayv :: Table ~ t_alI
  [[String]]
  Table
  t_alI
  t_alI
canEqTyVar
  t_alI
  [[String]]
  Is-swapped
Following bound tyvar t_alI = Table
newWantedEvVar/cache miss [W] cobox_aHo :: Table ~ Table
setEvBind
  ev = cobox_ayv
  tm  = CO Sym cobox_aHo
rewriteEqEvidence
  [W] cobox_ayv :: Table ~ t_alI
  Table
  Table
  Sym cobox_aHo
canEqTyVar2
  t_alI
  [[String]]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_aHo :: Table ~ Table
  Table
  Table
  [[String]]
  Table
can_eq_nc
  [W] cobox_aHo :: Table ~ Table
  [[String]]
  Table
  [[String]]
  Table
newWantedEvVar/cache miss [W] cobox_aHp :: [String] ~ [String]
setEvBind
  ev = cobox_aHo
  tm  = CO [cobox_aHp]_N
canEvNC:eq
  [String]
  [String]
can_eq_nc
  [W] cobox_aHp :: [String] ~ [String]
  [String]
  [String]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aHq :: String ~ String
setEvBind
  ev = cobox_aHp
  tm  = CO [cobox_aHq]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHq :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHq :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHr :: Char ~ Char
setEvBind
  ev = cobox_aHq
  tm  = CO [cobox_aHr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayw :: t_ay1
                                ~ t_alJ [" a type equality t_ay1
                                                           ~
                                                           t_alJ " FQL.hs:97:79] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayw :: t_ay1
                                 ~ t_alJ [" a type equality t_ay1
                                                            ~
                                                            t_alJ " FQL.hs:97:79] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayw :: t_ay1 ~ t_alJ [" a type equality t_ay1
                                                    ~
                                                    t_alJ " FQL.hs:97:79] (CNonCanonical)
canEvNC:eq
  t_ay1
  t_alJ
can_eq_nc
  [W] cobox_ayw :: t_ay1 ~ t_alJ
  t_ay1
  t_ay1
  t_alJ
  t_alJ
canEqTyVar
  t_ay1
  t_alJ
  Not-swapped
Following bound tyvar t_ay1 = Int
canEqTyVar2
  t_ay1
  t_alJ
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_ayw :: Int ~ t_alJ
  Int
  Int
  t_alJ
  t_alJ
canEqTyVar
  t_alJ
  Int
  Is-swapped
Following bound tyvar t_alJ = Int
newWantedEvVar/cache miss [W] cobox_aHs :: Int ~ Int
setEvBind
  ev = cobox_ayw
  tm  = CO Sym cobox_aHs
rewriteEqEvidence
  [W] cobox_ayw :: Int ~ t_alJ
  Int
  Int
  Sym cobox_aHs
canEqTyVar2
  t_alJ
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aHs :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aHs
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ayx :: t_axL
                                ~ t_alK [" a type equality t_axL
                                                           ~
                                                           t_alK " FQL.hs:97:81] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ayx :: t_axL
                                 ~ t_alK [" a type equality t_axL
                                                            ~
                                                            t_alK " FQL.hs:97:81] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ayx :: t_axL ~ t_alK [" a type equality t_axL
                                                    ~
                                                    t_alK " FQL.hs:97:81] (CNonCanonical)
canEvNC:eq
  t_axL
  t_alK
can_eq_nc
  [W] cobox_ayx :: t_axL ~ t_alK
  t_axL
  t_axL
  t_alK
  t_alK
canEqTyVar
  t_axL
  t_alK
  Not-swapped
Following bound tyvar t_axL = a_axM
canEqTyVar2
  t_axL
  t_alK
  Not-swapped
  a_axM
  <a_axM>_N
can_eq_nc
  [W] cobox_ayx :: a_axM ~ t_alK
  a_axM
  a_axM
  t_alK
  t_alK
canEqTyVar
  a_axM
  t_alK
  Not-swapped
Following bound tyvar a_axM = Int
canEqTyVar2
  a_axM
  t_alK
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_ayx :: Int ~ t_alK
  Int
  Int
  t_alK
  t_alK
canEqTyVar
  t_alK
  Int
  Is-swapped
Following bound tyvar t_alK = Int
newWantedEvVar/cache miss [W] cobox_aHt :: Int ~ Int
setEvBind
  ev = cobox_ayx
  tm  = CO Sym cobox_aHt
rewriteEqEvidence
  [W] cobox_ayx :: Int ~ t_alK
  Int
  Int
  Sym cobox_aHt
canEqTyVar2
  t_alK
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aHt :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aHt
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dOrd_arZ :: Ord
                                  a_arY [" a use of ‘maximum’ " FQL.hs:45:27-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dOrd_arZ :: Ord
                                   a_arY [" a use of ‘maximum’ " FQL.hs:45:27-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dOrd_arZ :: Ord
                     a_arY [" a use of ‘maximum’ " FQL.hs:45:27-33] (CNonCanonical)
canEvNC:cls Ord [a_arY]
Following bound tyvar a_arY = Int
canClass
  [W] $dOrd_arZ :: Ord a_arY Ord [a_arY]
  Ord Int
  Just [W] $dOrd_arZ :: Ord Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dOrd_arZ :: Ord
                                   Int [" a use of ‘maximum’ " FQL.hs:45:27-33] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dOrd_arZ :: Ord
                                   Int [" a use of ‘maximum’ " FQL.hs:45:27-33] (CDictCan)
doTopReact
  [W] $dOrd_arZ :: Ord
                     Int [" a use of ‘maximum’ " FQL.hs:45:27-33] (CDictCan)
matchClassInst
  pred = Ord Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries:
          Irreds:
          Insolubles = {[W] cobox_aG8 :: [Char]
                                         ~ Char [" a type equality t_amd
                                                                   ~
                                                                   t_amm " FQL.hs:79:75-80] (CNonCanonical)}
          Solved dicts 0
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Ord Int
  witness GHC.Classes.$fOrdInt Ord Int
updSolvedSetTcs: [W] $dOrd_arZ :: Ord Int
doTopReact/found nullary instance for $dOrd_arZ
setEvBind
  ev = $dOrd_arZ
  tm  = GHC.Classes.$fOrdInt @[] []
294[<C:0,F:0>] [W] $dOrd_arZ :: Ord
                                  Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 1
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_awD :: Num
                                  a_awC [" the literal ‘0’ " FQL.hs:71:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 1
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_awD :: Num
                                   a_awC [" the literal ‘0’ " FQL.hs:71:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_awD :: Num
                     a_awC [" the literal ‘0’ " FQL.hs:71:53] (CNonCanonical)
canEvNC:cls Num [a_awC]
Following bound tyvar a_awC = Int
canClass
  [W] $dNum_awD :: Num a_awC Num [a_awC]
  Num Int
  Just [W] $dNum_awD :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_awD :: Num
                                   Int [" the literal ‘0’ " FQL.hs:71:53] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_awD :: Num
                                   Int [" the literal ‘0’ " FQL.hs:71:53] (CDictCan)
doTopReact
  [W] $dNum_awD :: Num
                     Int [" the literal ‘0’ " FQL.hs:71:53] (CDictCan)
matchClassInst
  pred = Num Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries:
          Irreds:
          Insolubles = {[W] cobox_aG8 :: [Char]
                                         ~ Char [" a type equality t_amd
                                                                   ~
                                                                   t_amm " FQL.hs:79:75-80] (CNonCanonical)}
          Solved dicts 1
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Num Int
  witness GHC.Num.$fNumInt Num Int
updSolvedSetTcs: [W] $dNum_awD :: Num Int
doTopReact/found nullary instance for $dNum_awD
setEvBind
  ev = $dNum_awD
  tm  = GHC.Num.$fNumInt @[] []
295[<C:0,F:0>] [W] $dNum_awD :: Num
                                  Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_awH :: Num
                                  a_awG [" a use of ‘+’ " FQL.hs:72:55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_awH :: Num
                                   a_awG [" a use of ‘+’ " FQL.hs:72:55] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_awH :: Num
                     a_awG [" a use of ‘+’ " FQL.hs:72:55] (CNonCanonical)
canEvNC:cls Num [a_awG]
Following bound tyvar a_awG = Int
canClass
  [W] $dNum_awH :: Num a_awG Num [a_awG]
  Num Int
  Just [W] $dNum_awH :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_awH :: Num
                                   Int [" a use of ‘+’ " FQL.hs:72:55] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_awH :: Num
                                   Int [" a use of ‘+’ " FQL.hs:72:55] (CDictCan)
doTopReact
  [W] $dNum_awH :: Num Int [" a use of ‘+’ " FQL.hs:72:55] (CDictCan)
setEvBind
  ev = $dNum_awH
  tm  = $dNum_awD
296[<C:0,F:0>] [W] $dNum_awH :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_awK :: Num
                                  a_awJ [" the literal ‘1’ " FQL.hs:72:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_awK :: Num
                                   a_awJ [" the literal ‘1’ " FQL.hs:72:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_awK :: Num
                     a_awJ [" the literal ‘1’ " FQL.hs:72:53] (CNonCanonical)
canEvNC:cls Num [a_awJ]
Following bound tyvar a_awJ = Int
canClass
  [W] $dNum_awK :: Num a_awJ Num [a_awJ]
  Num Int
  Just [W] $dNum_awK :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_awK :: Num
                                   Int [" the literal ‘1’ " FQL.hs:72:53] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_awK :: Num
                                   Int [" the literal ‘1’ " FQL.hs:72:53] (CDictCan)
doTopReact
  [W] $dNum_awK :: Num
                     Int [" the literal ‘1’ " FQL.hs:72:53] (CDictCan)
setEvBind
  ev = $dNum_awK
  tm  = $dNum_awD
297[<C:0,F:0>] [W] $dNum_awK :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_axN :: Num
                                  a_axM [" a use of ‘+’ " FQL.hs:99:62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_axN :: Num
                                   a_axM [" a use of ‘+’ " FQL.hs:99:62] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_axN :: Num
                     a_axM [" a use of ‘+’ " FQL.hs:99:62] (CNonCanonical)
canEvNC:cls Num [a_axM]
Following bound tyvar a_axM = Int
canClass
  [W] $dNum_axN :: Num a_axM Num [a_axM]
  Num Int
  Just [W] $dNum_axN :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_axN :: Num
                                   Int [" a use of ‘+’ " FQL.hs:99:62] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_axN :: Num
                                   Int [" a use of ‘+’ " FQL.hs:99:62] (CDictCan)
doTopReact
  [W] $dNum_axN :: Num Int [" a use of ‘+’ " FQL.hs:99:62] (CDictCan)
setEvBind
  ev = $dNum_axN
  tm  = $dNum_awD
298[<C:0,F:0>] [W] $dNum_axN :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aym :: Num
                                  a_ayl [" a use of ‘+’ " FQL.hs:97:50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aym :: Num
                                   a_ayl [" a use of ‘+’ " FQL.hs:97:50] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aym :: Num
                     a_ayl [" a use of ‘+’ " FQL.hs:97:50] (CNonCanonical)
canEvNC:cls Num [a_ayl]
Following bound tyvar a_ayl = Int
canClass
  [W] $dNum_aym :: Num a_ayl Num [a_ayl]
  Num Int
  Just [W] $dNum_aym :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aym :: Num
                                   Int [" a use of ‘+’ " FQL.hs:97:50] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aym :: Num
                                   Int [" a use of ‘+’ " FQL.hs:97:50] (CDictCan)
doTopReact
  [W] $dNum_aym :: Num Int [" a use of ‘+’ " FQL.hs:97:50] (CDictCan)
setEvBind
  ev = $dNum_aym
  tm  = $dNum_awD
299[<C:0,F:0>] [W] $dNum_aym :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_ayq :: Num
                                  a_ayp [" the literal ‘1’ " FQL.hs:97:51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_ayq :: Num
                                   a_ayp [" the literal ‘1’ " FQL.hs:97:51] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_ayq :: Num
                     a_ayp [" the literal ‘1’ " FQL.hs:97:51] (CNonCanonical)
canEvNC:cls Num [a_ayp]
Following bound tyvar a_ayp = Int
canClass
  [W] $dNum_ayq :: Num a_ayp Num [a_ayp]
  Num Int
  Just [W] $dNum_ayq :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_ayq :: Num
                                   Int [" the literal ‘1’ " FQL.hs:97:51] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_ayq :: Num
                                   Int [" the literal ‘1’ " FQL.hs:97:51] (CDictCan)
doTopReact
  [W] $dNum_ayq :: Num
                     Int [" the literal ‘1’ " FQL.hs:97:51] (CDictCan)
setEvBind
  ev = $dNum_ayq
  tm  = $dNum_awD
300[<C:0,F:0>] [W] $dNum_ayq :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: [Char]
                                              ~ Char [" a type equality t_amd
                                                                        ~
                                                                        t_amm " FQL.hs:79:75-80] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
solveFlats end } {}
simpl_loop, iteration 1
solveWanteds }
  unsolved_flats   = {}
  unsolved_implics = {}
  current evbinds  = {cobox_alE = CO Sym cobox_ayz,
                      cobox_alF = CO Sym cobox_ayA, cobox_alG = CO Sym cobox_ayB,
                      cobox_alM = CO Sym cobox_ayC, cobox_alN = CO Sym cobox_ayD,
                      cobox_alO = CO Sym cobox_ayE, cobox_alP = CO Sym cobox_ayF,
                      cobox_alQ = CO Sym cobox_ayG, cobox_alU = CO Sym cobox_ayH,
                      cobox_alV = CO Sym cobox_ayI, cobox_alW = CO Sym cobox_ayJ,
                      cobox_am1 = CO Sym cobox_ayK, cobox_am2 = CO Sym cobox_ayL,
                      cobox_am3 = CO Sym cobox_ayM, cobox_am4 = CO Sym cobox_ayN,
                      cobox_am9 = CO Sym cobox_ayO, cobox_ama = CO Sym cobox_ayP,
                      cobox_amb = CO Sym cobox_ayQ, cobox_amc = CO Sym cobox_ayR,
                      cobox_amh = CO Sym cobox_ayS, cobox_ami = CO Sym cobox_ayT,
                      cobox_amj = CO Sym cobox_ayU, cobox_amk = CO Sym cobox_ayV,
                      cobox_amo = CO Sym cobox_ayW, cobox_amp = CO Sym cobox_ayX,
                      cobox_amq = CO Sym cobox_ayY, cobox_amu = CO Sym cobox_ayZ,
                      cobox_amv = CO Sym cobox_az0, cobox_amw = CO Sym cobox_az1,
                      cobox_amA = CO Sym cobox_az2, cobox_amB = CO Sym cobox_az3,
                      cobox_amC = CO Sym cobox_az4, cobox_amG = CO Sym cobox_az5,
                      cobox_amH = CO Sym cobox_az6, cobox_amI = CO Sym cobox_az7,
                      cobox_amL = CO Sym cobox_az8, cobox_amM = CO Sym cobox_az9,
                      cobox_amP = CO Sym cobox_aza, cobox_amQ = CO Sym cobox_azb,
                      cobox_amT = CO Sym cobox_azc, cobox_amU = CO Sym cobox_azd,
                      cobox_amX = CO Sym cobox_aze, cobox_amY = CO Sym cobox_azf,
                      cobox_an0 = CO Sym cobox_azg, cobox_an2 = CO Sym cobox_azh,
                      cobox_an6 = CO Sym cobox_azi, cobox_an7 = CO Sym cobox_azj,
                      cobox_an8 = CO Sym cobox_azk, cobox_anb = CO Sym cobox_azl,
                      cobox_and = CO Sym cobox_azo, cobox_anh = CO Sym cobox_azr,
                      cobox_ani = CO [cobox_azs]_N, cobox_anl = CO Sym cobox_azu,
                      cobox_anm = CO [cobox_azv]_N, cobox_ant = CO Sym cobox_azx,
                      cobox_anw = CO cobox_azA -> cobox_azB,
                      cobox_any = CO [cobox_azJ]_N, cobox_anz = CO Sym cobox_azK,
                      cobox_anC = CO [cobox_azN]_N, cobox_anH = CO [cobox_azO]_N,
                      cobox_anK = CO cobox_azP -> cobox_azQ, cobox_anL = CO <Int>_N,
                      cobox_anM = CO [cobox_azU]_N, cobox_anO = CO [cobox_azY]_N,
                      cobox_anP = CO Sym cobox_azZ, cobox_anR = CO [cobox_aA2]_N,
                      cobox_anT = CO [cobox_aA3]_N, cobox_anU = CO <Int>_N,
                      cobox_anV = CO Sym cobox_aA4,
                      cobox_anZ = CO cobox_aA9 -> cobox_aAa,
                      cobox_ao0 = CO Sym cobox_aAd, cobox_ao3 = CO <String>_N,
                      cobox_ao4 = CO [cobox_aAe]_N, cobox_ao5 = CO <Int>_N,
                      cobox_ao9 = CO Sym cobox_aAh,
                      cobox_aoa = CO cobox_aAk -> cobox_aAl,
                      cobox_aob = CO Sym cobox_aAp, cobox_aoc = CO Sym cobox_aAq,
                      cobox_aod = CO [cobox_aAu]_N,
                      cobox_aoj = CO <t_aog -> t_aoh -> t_aoi>_N,
                      cobox_aol = CO Sym cobox_aAy, cobox_aom = CO [cobox_aAz]_N,
                      cobox_aop = CO [cobox_aAB]_N, cobox_aoq = CO <Int>_N,
                      cobox_aos = CO [cobox_aAC]_N, cobox_aot = CO <[Char]>_N,
                      cobox_aow = CO [cobox_aAD]_N, cobox_aox = CO Sym cobox_aAE,
                      cobox_aoz = CO Sym cobox_aAF, cobox_aoB = CO [cobox_aAI]_N,
                      cobox_aoF = CO [cobox_aAJ]_N,
                      cobox_aoG = CO cobox_aAK -> cobox_aAL,
                      cobox_aoH = CO [cobox_aAT]_N, cobox_aoI = CO [cobox_aAV]_N,
                      cobox_aoJ = CO [cobox_aAY]_N, cobox_aoN = CO Sym cobox_aB0,
                      cobox_aoU = CO cobox_aB3 -> cobox_aB4,
                      $dOrd_arZ = GHC.Classes.$fOrdInt @[] [],
                      cobox_as0 = CO cobox_aB5 -> cobox_aB6,
                      cobox_as3 = CO cobox_aB8 -> cobox_aB9,
                      cobox_as5 = CO cobox_aBe -> cobox_aBf,
                      cobox_as8 = CO [cobox_aBi]_N, cobox_as9 = CO [cobox_aBm]_N,
                      cobox_asd = CO Sym cobox_aBq,
                      cobox_ase = CO cobox_aBt -> cobox_aBu,
                      cobox_asf = CO Sym cobox_aBy, cobox_asg = CO Sym cobox_aBA,
                      cobox_ash = CO [cobox_aBE]_N, cobox_ask = CO Sym cobox_aBI,
                      cobox_asl = CO Sym cobox_aBJ, cobox_asr = CO Sym cobox_aBN,
                      cobox_ast = CO cobox_aBO -> cobox_aBP,
                      cobox_asv = CO [cobox_aBT]_N, cobox_asw = CO [cobox_aBU]_N,
                      cobox_asy = CO [cobox_aBW]_N, cobox_asz = CO <Int>_N,
                      cobox_asA = CO Sym cobox_aBX, cobox_asB = CO Sym cobox_aBY,
                      cobox_asC = CO [cobox_aC0]_N, cobox_asD = CO Sym cobox_aC2,
                      cobox_asF = CO Sym cobox_aC6, cobox_asG = CO Sym cobox_aC9,
                      cobox_asI = CO [cobox_aCc]_N, cobox_asL = CO <String>_N,
                      cobox_asM = CO [cobox_aCd]_N, cobox_asO = CO [cobox_aCg]_N,
                      cobox_asP = CO Sym cobox_aCh, cobox_asR = CO [cobox_aCk]_N,
                      cobox_asU = CO [cobox_aCl]_N, cobox_asV = CO [cobox_aCm]_N,
                      cobox_asW = CO Sym cobox_aCp,
                      cobox_at1 = CO cobox_aCs -> cobox_aCt,
                      cobox_at2 = CO cobox_aCu -> cobox_aCv,
                      cobox_at3 = CO cobox_aCz -> cobox_aCA,
                      cobox_at6 = CO Sym cobox_aCI, cobox_at8 = CO Sym cobox_aCL,
                      cobox_at9 = CO Sym cobox_aCO, cobox_ata = CO Sym cobox_aCQ,
                      cobox_atb = CO Sym cobox_aCS, cobox_atd = CO Sym cobox_aCU,
                      cobox_ate = CO Sym cobox_aCX, cobox_atf = CO Sym cobox_aCZ,
                      cobox_atg = CO Sym cobox_aD1, cobox_ati = CO Sym cobox_aD3,
                      cobox_atj = CO Sym cobox_aD6, cobox_atk = CO Sym cobox_aD8,
                      cobox_atl = CO Sym cobox_aDa, cobox_atn = CO Sym cobox_aDc,
                      cobox_ato = CO Sym cobox_aDf, cobox_atp = CO Sym cobox_aDh,
                      cobox_atq = CO Sym cobox_aDj, cobox_ats = CO Sym cobox_aDl,
                      cobox_att = CO Sym cobox_aDo, cobox_atu = CO Sym cobox_aDq,
                      cobox_atv = CO Sym cobox_aDs, cobox_atx = CO Sym cobox_aDu,
                      cobox_aty = CO Sym cobox_aDx, cobox_atz = CO Sym cobox_aDz,
                      cobox_atA = CO Sym cobox_aDB, cobox_atC = CO Sym cobox_aDD,
                      cobox_atD = CO Sym cobox_aDG, cobox_atE = CO Sym cobox_aDI,
                      cobox_atF = CO Sym cobox_aDK, cobox_atI = CO Sym cobox_aDM,
                      cobox_atK = CO Sym cobox_aDP, cobox_atL = CO Sym cobox_aDS,
                      cobox_atM = CO Sym cobox_aDU, cobox_atO = CO Sym cobox_aDW,
                      cobox_atP = CO Sym cobox_aDZ, cobox_atQ = CO Sym cobox_aE1,
                      cobox_atS = CO Sym cobox_aE3, cobox_atT = CO Sym cobox_aE6,
                      cobox_atU = CO Sym cobox_aE8, cobox_atW = CO Sym cobox_aEa,
                      cobox_atX = CO Sym cobox_aEd, cobox_atY = CO Sym cobox_aEf,
                      cobox_au0 = CO Sym cobox_aEh, cobox_au1 = CO Sym cobox_aEk,
                      cobox_au2 = CO Sym cobox_aEm, cobox_au4 = CO Sym cobox_aEo,
                      cobox_au5 = CO Sym cobox_aEr, cobox_au6 = CO Sym cobox_aEt,
                      cobox_au8 = CO Sym cobox_aEv, cobox_au9 = CO Sym cobox_aEy,
                      cobox_aua = CO Sym cobox_aEA, cobox_auc = CO Sym cobox_aEC,
                      cobox_aud = CO Sym cobox_aEF, cobox_aue = CO Sym cobox_aEH,
                      cobox_aug = CO Sym cobox_aEJ, cobox_auh = CO Sym cobox_aEM,
                      cobox_aui = CO Sym cobox_aEO,
                      cobox_aul = CO <String -> String -> Bool>_N,
                      cobox_auo = CO Sym cobox_aEQ, cobox_aup = CO <Bool>_N,
                      cobox_aus = CO [cobox_aET]_N,
                      cobox_aut = CO cobox_aEU -> cobox_aEV,
                      cobox_auu = CO Sym cobox_aEY, cobox_auv = CO [cobox_aF0]_N,
                      $dNum_awD = GHC.Num.$fNumInt @[] [],
                      cobox_awE = CO cobox_aF3 -> cobox_aF4, cobox_awF = CO <Bool>_N,
                      $dNum_awH = $dNum_awD, cobox_awI = CO <Int>_N,
                      $dNum_awK = $dNum_awD, cobox_awL = CO cobox_aF5 -> cobox_aF6,
                      cobox_awM = CO Sym cobox_aF7, cobox_awN = CO Sym cobox_aF8,
                      cobox_awO = CO Sym cobox_aFb, cobox_awS = CO Sym cobox_aFf,
                      cobox_awT = CO Sym cobox_aFi, cobox_awV = CO Sym cobox_aFj,
                      cobox_awW = CO <String>_N, cobox_awX = CO Sym cobox_aFm,
                      cobox_awY = CO [cobox_aFp]_N, cobox_ax1 = CO Sym cobox_aFs,
                      cobox_ax4 = CO [cobox_aFw]_N,
                      cobox_ax6 = CO cobox_aFx -> cobox_aFy,
                      cobox_ax8 = CO [cobox_aFA]_N, cobox_ax9 = CO [cobox_aFE]_N,
                      cobox_axa = CO [cobox_aFI]_N, cobox_axc = CO <[String]>_N,
                      cobox_axd = CO [cobox_aFK]_N, cobox_axe = CO Sym cobox_aFO,
                      cobox_axh = CO Sym cobox_aFR, cobox_axj = CO <[String]>_N,
                      cobox_axk = CO [cobox_aFU]_N, cobox_axl = CO [cobox_aFY]_N,
                      cobox_axm = CO Sym cobox_aG2, cobox_axo = CO <[String]>_N,
                      cobox_axp = CO [cobox_aG3]_N, cobox_axq = CO Sym cobox_aG7,
                      cobox_axr = CO Sym cobox_aG9, cobox_axt = CO Sym cobox_aGd,
                      cobox_axu = CO [cobox_aGg]_N, cobox_axx = CO Sym cobox_aGk,
                      cobox_axy = CO <Bool>_N, cobox_axA = CO <String>_N,
                      cobox_axB = CO [cobox_aGn]_N, cobox_axC = CO <Int>_N,
                      cobox_axE = CO <String>_N, cobox_axF = CO [cobox_aGq]_N,
                      cobox_axG = CO <Int>_N, cobox_axH = CO [cobox_aGt]_N,
                      cobox_axI = CO Sym cobox_aGx, cobox_axJ = CO Sym cobox_aGB,
                      $dNum_axN = $dNum_awD, cobox_axO = CO Sym cobox_aGF,
                      cobox_axP = CO Sym cobox_aGG, cobox_axR = CO <[String]>_N,
                      cobox_axS = CO [cobox_aGH]_N, cobox_axU = CO <[String]>_N,
                      cobox_axV = CO [cobox_aGL]_N, cobox_axX = CO Sym cobox_aGP,
                      cobox_axZ = CO <[a_axW]>_N, cobox_ay0 = CO [cobox_aGQ]_N,
                      cobox_ay2 = CO Sym cobox_aGT, cobox_ay4 = CO <[String]>_N,
                      cobox_ay5 = CO [cobox_aGU]_N, cobox_ay7 = CO <[String]>_N,
                      cobox_ay8 = CO [cobox_aGY]_N, cobox_ayb = CO Sym cobox_aH2,
                      cobox_ayd = CO Sym cobox_aH5, cobox_ayf = CO [cobox_aH8]_N,
                      cobox_ayg = CO <Int>_N, cobox_ayh = CO <[String]>_N,
                      cobox_ayk = CO [cobox_aH9]_N, $dNum_aym = $dNum_awD,
                      cobox_ayn = CO <Int>_N, cobox_ayo = CO Sym cobox_aHa,
                      $dNum_ayq = $dNum_awD, cobox_ayr = CO cobox_aHb -> cobox_aHc,
                      cobox_ays = CO [cobox_aHd]_N, cobox_ayt = CO [cobox_aHg]_N,
                      cobox_ayu = CO Sym cobox_aHk, cobox_ayv = CO Sym cobox_aHo,
                      cobox_ayw = CO Sym cobox_aHs, cobox_ayx = CO Sym cobox_aHt,
                      cobox_ayz = CO <Table>_N, cobox_ayA = CO <Table>_N,
                      cobox_ayB = CO <Table>_N, cobox_ayC = CO <Table>_N,
                      cobox_ayD = CO <Table>_N, cobox_ayE = CO <Int>_N,
                      cobox_ayF = CO <Int>_N, cobox_ayG = CO <Table>_N,
                      cobox_ayH = CO <Table>_N, cobox_ayI = CO <Table>_N,
                      cobox_ayJ = CO <Table>_N, cobox_ayK = CO <Int>_N,
                      cobox_ayL = CO <String -> Bool>_N, cobox_ayM = CO <[String]>_N,
                      cobox_ayN = CO <Bool>_N, cobox_ayO = CO <Int>_N,
                      cobox_ayP = CO <String -> Bool>_N, cobox_ayQ = CO <Table>_N,
                      cobox_ayR = CO <Table>_N, cobox_ayS = CO <String>_N,
                      cobox_ayT = CO <String -> Bool>_N, cobox_ayU = CO <Table>_N,
                      cobox_ayV = CO <Table>_N, cobox_ayW = CO <[String]>_N,
                      cobox_ayX = CO <[String]>_N, cobox_ayY = CO <Int>_N,
                      cobox_ayZ = CO <[String]>_N, cobox_az0 = CO <[String]>_N,
                      cobox_az1 = CO <[Int]>_N, cobox_az2 = CO <[String]>_N,
                      cobox_az3 = CO <Table>_N, cobox_az4 = CO <Table>_N,
                      cobox_az5 = CO <[Int]>_N, cobox_az6 = CO <[String]>_N,
                      cobox_az7 = CO <String>_N, cobox_az8 = CO <Table>_N,
                      cobox_az9 = CO <[String]>_N, cobox_aza = CO <Table>_N,
                      cobox_azb = CO <[Int]>_N, cobox_azc = CO <Table>_N,
                      cobox_azd = CO <[String]>_N, cobox_aze = CO <Table>_N,
                      cobox_azf = CO <String>_N, cobox_azg = CO <Table>_N,
                      cobox_azh = CO <Table>_N, cobox_azi = CO <String>_N,
                      cobox_azj = CO <String>_N, cobox_azk = CO <Bool>_N,
                      cobox_azl = CO [cobox_azm]_N, cobox_azm = CO Sym cobox_azn,
                      cobox_azn = CO <[String]>_N, cobox_azo = CO [cobox_azp]_N,
                      cobox_azp = CO Sym cobox_azq, cobox_azq = CO <[String]>_N,
                      cobox_azr = CO <Int>_N, cobox_azs = CO Sym cobox_azt,
                      cobox_azt = CO <[String]>_N, cobox_azu = CO <Int>_N,
                      cobox_azv = CO Sym cobox_azw, cobox_azw = CO <[String]>_N,
                      cobox_azx = CO [cobox_azy]_N, cobox_azy = CO Sym cobox_azz,
                      cobox_azz = CO <[String]>_N, cobox_azA = CO Sym cobox_azC,
                      cobox_azB = CO cobox_azD -> cobox_azE, cobox_azC = CO <[a_anv]>_N,
                      cobox_azD = CO Sym cobox_azF, cobox_azE = CO Sym cobox_azG,
                      cobox_azF = CO <[a_anv]>_N, cobox_azG = CO [cobox_azH]_N,
                      cobox_azH = CO Sym cobox_azI, cobox_azI = CO <String>_N,
                      cobox_azJ = CO <[String]>_N, cobox_azK = CO [cobox_azL]_N,
                      cobox_azL = CO [cobox_azM]_N, cobox_azM = CO <Char>_N,
                      cobox_azN = CO <[String]>_N, cobox_azO = CO <[[String]]>_N,
                      cobox_azP = CO <a_anJ>_N, cobox_azQ = CO Sym cobox_azR,
                      cobox_azR = CO [cobox_azS]_N, cobox_azS = CO Sym cobox_azT,
                      cobox_azT = CO <[String]>_N, cobox_azU = CO Sym cobox_azV,
                      cobox_azV = CO [cobox_azW]_N, cobox_azW = CO [cobox_azX]_N,
                      cobox_azX = CO <Char>_N, cobox_azY = CO <[String]>_N,
                      cobox_azZ = CO [cobox_aA0]_N, cobox_aA0 = CO [cobox_aA1]_N,
                      cobox_aA1 = CO <Char>_N, cobox_aA2 = CO <[String]>_N,
                      cobox_aA3 = CO <[[String]]>_N, cobox_aA4 = CO [cobox_aA5]_N,
                      cobox_aA5 = CO Sym cobox_aA6, cobox_aA6 = CO [cobox_aA7]_N,
                      cobox_aA7 = CO [cobox_aA8]_N, cobox_aA8 = CO <Char>_N,
                      cobox_aA9 = CO Sym cobox_aAb, cobox_aAa = CO Sym cobox_aAc,
                      cobox_aAb = CO <String>_N, cobox_aAc = CO <Bool>_N,
                      cobox_aAd = CO <Bool>_N, cobox_aAe = CO Sym cobox_aAf,
                      cobox_aAf = CO [cobox_aAg]_N, cobox_aAg = CO <Char>_N,
                      cobox_aAh = CO [cobox_aAi]_N, cobox_aAi = CO Sym cobox_aAj,
                      cobox_aAj = CO <[String]>_N, cobox_aAk = CO Sym cobox_aAm,
                      cobox_aAl = CO <Bool>_N, cobox_aAm = CO [cobox_aAn]_N,
                      cobox_aAn = CO [cobox_aAo]_N, cobox_aAo = CO <Char>_N,
                      cobox_aAp = CO <Int>_N, cobox_aAq = CO cobox_aAr -> cobox_aAs,
                      cobox_aAr = CO [cobox_aAt]_N, cobox_aAs = CO <Bool>_N,
                      cobox_aAt = CO <Char>_N, cobox_aAu = CO Sym cobox_aAv,
                      cobox_aAv = CO [cobox_aAw]_N, cobox_aAw = CO [cobox_aAx]_N,
                      cobox_aAx = CO <Char>_N, cobox_aAy = CO <[a_aok]>_N,
                      cobox_aAz = CO Sym cobox_aAA, cobox_aAA = CO <Char>_N,
                      cobox_aAB = CO <Char>_N, cobox_aAC = CO <Char>_N,
                      cobox_aAD = CO <Char>_N, cobox_aAE = CO <Char>_N,
                      cobox_aAF = CO [cobox_aAG]_N, cobox_aAG = CO Sym cobox_aAH,
                      cobox_aAH = CO <Char>_N, cobox_aAI = CO <Char>_N,
                      cobox_aAJ = CO <[Char]>_N, cobox_aAK = CO Sym cobox_aAM,
                      cobox_aAL = CO cobox_aAN -> cobox_aAO, cobox_aAM = CO <Int>_N,
                      cobox_aAN = CO Sym cobox_aAP, cobox_aAO = CO Sym cobox_aAQ,
                      cobox_aAP = CO <[Char]>_N, cobox_aAQ = CO [cobox_aAR]_N,
                      cobox_aAR = CO Sym cobox_aAS, cobox_aAS = CO <Char>_N,
                      cobox_aAT = CO Sym cobox_aAU, cobox_aAU = CO <Int>_N,
                      cobox_aAV = CO Sym cobox_aAW, cobox_aAW = CO [cobox_aAX]_N,
                      cobox_aAX = CO <Char>_N, cobox_aAY = CO Sym cobox_aAZ,
                      cobox_aAZ = CO <Char>_N, cobox_aB0 = CO [cobox_aB1]_N,
                      cobox_aB1 = CO Sym cobox_aB2, cobox_aB2 = CO <Int>_N,
                      cobox_aB3 = CO <a_aoT>_N, cobox_aB4 = CO <Int>_N,
                      cobox_aB5 = CO Sym cobox_aB7, cobox_aB6 = CO <Int>_N,
                      cobox_aB7 = CO <[a_arY]>_N, cobox_aB8 = CO Sym cobox_aBa,
                      cobox_aB9 = CO Sym cobox_aBb, cobox_aBa = CO <[a_as1]>_N,
                      cobox_aBb = CO [cobox_aBc]_N, cobox_aBc = CO Sym cobox_aBd,
                      cobox_aBd = CO <Int>_N, cobox_aBe = CO Sym cobox_aBg,
                      cobox_aBf = CO Sym cobox_aBh, cobox_aBg = CO <[a_as4]>_N,
                      cobox_aBh = CO <Int>_N, cobox_aBi = CO Sym cobox_aBj,
                      cobox_aBj = CO [cobox_aBk]_N, cobox_aBk = CO Sym cobox_aBl,
                      cobox_aBl = CO <[a_as4]>_N, cobox_aBm = CO [cobox_aBn]_N,
                      cobox_aBn = CO Sym cobox_aBo, cobox_aBo = CO [cobox_aBp]_N,
                      cobox_aBp = CO <Char>_N, cobox_aBq = CO [cobox_aBr]_N,
                      cobox_aBr = CO Sym cobox_aBs, cobox_aBs = CO <String>_N,
                      cobox_aBt = CO Sym cobox_aBv, cobox_aBu = CO Sym cobox_aBw,
                      cobox_aBv = CO <[String]>_N, cobox_aBw = CO [cobox_aBx]_N,
                      cobox_aBx = CO <Char>_N, cobox_aBy = CO [cobox_aBz]_N,
                      cobox_aBz = CO <Int>_N, cobox_aBA = CO [cobox_aBB]_N,
                      cobox_aBB = CO [cobox_aBC]_N, cobox_aBC = CO [cobox_aBD]_N,
                      cobox_aBD = CO <Char>_N, cobox_aBE = CO Sym cobox_aBF,
                      cobox_aBF = CO [cobox_aBG]_N, cobox_aBG = CO [cobox_aBH]_N,
                      cobox_aBH = CO <Char>_N, cobox_aBI = CO <[String]>_N,
                      cobox_aBJ = CO [cobox_aBK]_N, cobox_aBK = CO [cobox_aBL]_N,
                      cobox_aBL = CO [cobox_aBM]_N, cobox_aBM = CO <Char>_N,
                      cobox_aBN = CO <b_asq>_N, cobox_aBO = CO Sym cobox_aBQ,
                      cobox_aBP = CO Sym cobox_aBR, cobox_aBQ = CO <[a_ass]>_N,
                      cobox_aBR = CO [cobox_aBS]_N, cobox_aBS = CO <a_ass>_N,
                      cobox_aBT = CO <a_asu>_N, cobox_aBU = CO Sym cobox_aBV,
                      cobox_aBV = CO <Char>_N, cobox_aBW = CO <Char>_N,
                      cobox_aBX = CO <Char>_N, cobox_aBY = CO [cobox_aBZ]_N,
                      cobox_aBZ = CO <Char>_N, cobox_aC0 = CO Sym cobox_aC1,
                      cobox_aC1 = CO <Int>_N, cobox_aC2 = CO [cobox_aC3]_N,
                      cobox_aC3 = CO [cobox_aC4]_N, cobox_aC4 = CO [cobox_aC5]_N,
                      cobox_aC5 = CO <Char>_N, cobox_aC6 = CO [cobox_aC7]_N,
                      cobox_aC7 = CO Sym cobox_aC8, cobox_aC8 = CO <String>_N,
                      cobox_aC9 = CO [cobox_aCa]_N, cobox_aCa = CO Sym cobox_aCb,
                      cobox_aCb = CO <Char>_N, cobox_aCc = CO <String>_N,
                      cobox_aCd = CO Sym cobox_aCe, cobox_aCe = CO [cobox_aCf]_N,
                      cobox_aCf = CO <Char>_N, cobox_aCg = CO <String>_N,
                      cobox_aCh = CO [cobox_aCi]_N, cobox_aCi = CO Sym cobox_aCj,
                      cobox_aCj = CO <Char>_N, cobox_aCk = CO <String>_N,
                      cobox_aCl = CO <String>_N, cobox_aCm = CO Sym cobox_aCn,
                      cobox_aCn = CO [cobox_aCo]_N, cobox_aCo = CO <Char>_N,
                      cobox_aCp = CO [cobox_aCq]_N, cobox_aCq = CO Sym cobox_aCr,
                      cobox_aCr = CO <Char>_N, cobox_aCs = CO <Table>_N,
                      cobox_aCt = CO <String>_N, cobox_aCu = CO Sym cobox_aCw,
                      cobox_aCv = CO Sym cobox_aCx, cobox_aCw = CO <[String]>_N,
                      cobox_aCx = CO [cobox_aCy]_N, cobox_aCy = CO <Char>_N,
                      cobox_aCz = CO Sym cobox_aCB, cobox_aCA = CO Sym cobox_aCF,
                      cobox_aCB = CO [cobox_aCC]_N, cobox_aCC = CO [cobox_aCD]_N,
                      cobox_aCD = CO [cobox_aCE]_N, cobox_aCE = CO <Char>_N,
                      cobox_aCF = CO [cobox_aCG]_N, cobox_aCG = CO [cobox_aCH]_N,
                      cobox_aCH = CO <Char>_N, cobox_aCI = CO [cobox_aCJ]_N,
                      cobox_aCJ = CO Sym cobox_aCK, cobox_aCK = CO <[String]>_N,
                      cobox_aCL = CO [cobox_aCM]_N, cobox_aCM = CO Sym cobox_aCN,
                      cobox_aCN = CO <String>_N, cobox_aCO = CO [cobox_aCP]_N,
                      cobox_aCP = CO <Char>_N, cobox_aCQ = CO [cobox_aCR]_N,
                      cobox_aCR = CO <Char>_N, cobox_aCS = CO [cobox_aCT]_N,
                      cobox_aCT = CO <Char>_N, cobox_aCU = CO [cobox_aCV]_N,
                      cobox_aCV = CO Sym cobox_aCW, cobox_aCW = CO <String>_N,
                      cobox_aCX = CO [cobox_aCY]_N, cobox_aCY = CO <Char>_N,
                      cobox_aCZ = CO [cobox_aD0]_N, cobox_aD0 = CO <Char>_N,
                      cobox_aD1 = CO [cobox_aD2]_N, cobox_aD2 = CO <Char>_N,
                      cobox_aD3 = CO [cobox_aD4]_N, cobox_aD4 = CO Sym cobox_aD5,
                      cobox_aD5 = CO <String>_N, cobox_aD6 = CO [cobox_aD7]_N,
                      cobox_aD7 = CO <Char>_N, cobox_aD8 = CO [cobox_aD9]_N,
                      cobox_aD9 = CO <Char>_N, cobox_aDa = CO [cobox_aDb]_N,
                      cobox_aDb = CO <Char>_N, cobox_aDc = CO [cobox_aDd]_N,
                      cobox_aDd = CO Sym cobox_aDe, cobox_aDe = CO <String>_N,
                      cobox_aDf = CO [cobox_aDg]_N, cobox_aDg = CO <Char>_N,
                      cobox_aDh = CO [cobox_aDi]_N, cobox_aDi = CO <Char>_N,
                      cobox_aDj = CO [cobox_aDk]_N, cobox_aDk = CO <Char>_N,
                      cobox_aDl = CO [cobox_aDm]_N, cobox_aDm = CO Sym cobox_aDn,
                      cobox_aDn = CO <String>_N, cobox_aDo = CO [cobox_aDp]_N,
                      cobox_aDp = CO <Char>_N, cobox_aDq = CO [cobox_aDr]_N,
                      cobox_aDr = CO <Char>_N, cobox_aDs = CO [cobox_aDt]_N,
                      cobox_aDt = CO <Char>_N, cobox_aDu = CO [cobox_aDv]_N,
                      cobox_aDv = CO Sym cobox_aDw, cobox_aDw = CO <String>_N,
                      cobox_aDx = CO [cobox_aDy]_N, cobox_aDy = CO <Char>_N,
                      cobox_aDz = CO [cobox_aDA]_N, cobox_aDA = CO <Char>_N,
                      cobox_aDB = CO [cobox_aDC]_N, cobox_aDC = CO <Char>_N,
                      cobox_aDD = CO [cobox_aDE]_N, cobox_aDE = CO Sym cobox_aDF,
                      cobox_aDF = CO <String>_N, cobox_aDG = CO [cobox_aDH]_N,
                      cobox_aDH = CO <Char>_N, cobox_aDI = CO [cobox_aDJ]_N,
                      cobox_aDJ = CO <Char>_N, cobox_aDK = CO [cobox_aDL]_N,
                      cobox_aDL = CO <Char>_N, cobox_aDM = CO [cobox_aDN]_N,
                      cobox_aDN = CO Sym cobox_aDO, cobox_aDO = CO <[String]>_N,
                      cobox_aDP = CO [cobox_aDQ]_N, cobox_aDQ = CO Sym cobox_aDR,
                      cobox_aDR = CO <String>_N, cobox_aDS = CO [cobox_aDT]_N,
                      cobox_aDT = CO <Char>_N, cobox_aDU = CO [cobox_aDV]_N,
                      cobox_aDV = CO <Char>_N, cobox_aDW = CO [cobox_aDX]_N,
                      cobox_aDX = CO Sym cobox_aDY, cobox_aDY = CO <String>_N,
                      cobox_aDZ = CO [cobox_aE0]_N, cobox_aE0 = CO <Char>_N,
                      cobox_aE1 = CO [cobox_aE2]_N, cobox_aE2 = CO <Char>_N,
                      cobox_aE3 = CO [cobox_aE4]_N, cobox_aE4 = CO Sym cobox_aE5,
                      cobox_aE5 = CO <String>_N, cobox_aE6 = CO [cobox_aE7]_N,
                      cobox_aE7 = CO <Char>_N, cobox_aE8 = CO [cobox_aE9]_N,
                      cobox_aE9 = CO <Char>_N, cobox_aEa = CO [cobox_aEb]_N,
                      cobox_aEb = CO Sym cobox_aEc, cobox_aEc = CO <String>_N,
                      cobox_aEd = CO [cobox_aEe]_N, cobox_aEe = CO <Char>_N,
                      cobox_aEf = CO [cobox_aEg]_N, cobox_aEg = CO <Char>_N,
                      cobox_aEh = CO [cobox_aEi]_N, cobox_aEi = CO Sym cobox_aEj,
                      cobox_aEj = CO <String>_N, cobox_aEk = CO [cobox_aEl]_N,
                      cobox_aEl = CO <Char>_N, cobox_aEm = CO [cobox_aEn]_N,
                      cobox_aEn = CO <Char>_N, cobox_aEo = CO [cobox_aEp]_N,
                      cobox_aEp = CO Sym cobox_aEq, cobox_aEq = CO <String>_N,
                      cobox_aEr = CO [cobox_aEs]_N, cobox_aEs = CO <Char>_N,
                      cobox_aEt = CO [cobox_aEu]_N, cobox_aEu = CO <Char>_N,
                      cobox_aEv = CO [cobox_aEw]_N, cobox_aEw = CO Sym cobox_aEx,
                      cobox_aEx = CO <String>_N, cobox_aEy = CO [cobox_aEz]_N,
                      cobox_aEz = CO <Char>_N, cobox_aEA = CO [cobox_aEB]_N,
                      cobox_aEB = CO <Char>_N, cobox_aEC = CO [cobox_aED]_N,
                      cobox_aED = CO Sym cobox_aEE, cobox_aEE = CO <String>_N,
                      cobox_aEF = CO [cobox_aEG]_N, cobox_aEG = CO <Char>_N,
                      cobox_aEH = CO [cobox_aEI]_N, cobox_aEI = CO <Char>_N,
                      cobox_aEJ = CO [cobox_aEK]_N, cobox_aEK = CO Sym cobox_aEL,
                      cobox_aEL = CO <String>_N, cobox_aEM = CO [cobox_aEN]_N,
                      cobox_aEN = CO <Char>_N, cobox_aEO = CO [cobox_aEP]_N,
                      cobox_aEP = CO <Char>_N, cobox_aEQ = CO [cobox_aER]_N,
                      cobox_aER = CO Sym cobox_aES, cobox_aES = CO <String>_N,
                      cobox_aET = CO <Bool>_N, cobox_aEU = CO Sym cobox_aEW,
                      cobox_aEV = CO Sym cobox_aEX, cobox_aEW = CO <String>_N,
                      cobox_aEX = CO <Bool>_N, cobox_aEY = CO [cobox_aEZ]_N,
                      cobox_aEZ = CO <Char>_N, cobox_aF0 = CO Sym cobox_aF1,
                      cobox_aF1 = CO [cobox_aF2]_N, cobox_aF2 = CO <Char>_N,
                      cobox_aF3 = CO <Integer>_N, cobox_aF4 = CO <Int>_N,
                      cobox_aF5 = CO <Integer>_N, cobox_aF6 = CO <Int>_N,
                      cobox_aF7 = CO <Int>_N, cobox_aF8 = CO [cobox_aF9]_N,
                      cobox_aF9 = CO [cobox_aFa]_N, cobox_aFa = CO <Char>_N,
                      cobox_aFb = CO [cobox_aFc]_N, cobox_aFc = CO Sym cobox_aFd,
                      cobox_aFd = CO [cobox_aFe]_N, cobox_aFe = CO <Char>_N,
                      cobox_aFf = CO [cobox_aFg]_N, cobox_aFg = CO Sym cobox_aFh,
                      cobox_aFh = CO <Int>_N, cobox_aFi = CO <Int>_N,
                      cobox_aFj = CO [cobox_aFk]_N, cobox_aFk = CO Sym cobox_aFl,
                      cobox_aFl = CO <String>_N, cobox_aFm = CO [cobox_aFn]_N,
                      cobox_aFn = CO [cobox_aFo]_N, cobox_aFo = CO <Char>_N,
                      cobox_aFp = CO Sym cobox_aFq, cobox_aFq = CO [cobox_aFr]_N,
                      cobox_aFr = CO <Char>_N, cobox_aFs = CO [cobox_aFt]_N,
                      cobox_aFt = CO [cobox_aFu]_N, cobox_aFu = CO Sym cobox_aFv,
                      cobox_aFv = CO <String>_N, cobox_aFw = CO <[String]>_N,
                      cobox_aFx = CO Sym cobox_aFz, cobox_aFy = CO <[String]>_N,
                      cobox_aFz = CO <Int>_N, cobox_aFA = CO Sym cobox_aFB,
                      cobox_aFB = CO [cobox_aFC]_N, cobox_aFC = CO Sym cobox_aFD,
                      cobox_aFD = CO <String>_N, cobox_aFE = CO [cobox_aFF]_N,
                      cobox_aFF = CO Sym cobox_aFG, cobox_aFG = CO [cobox_aFH]_N,
                      cobox_aFH = CO <Char>_N, cobox_aFI = CO Sym cobox_aFJ,
                      cobox_aFJ = CO <Int>_N, cobox_aFK = CO Sym cobox_aFL,
                      cobox_aFL = CO [cobox_aFM]_N, cobox_aFM = CO [cobox_aFN]_N,
                      cobox_aFN = CO <Char>_N, cobox_aFO = CO [cobox_aFP]_N,
                      cobox_aFP = CO [cobox_aFQ]_N, cobox_aFQ = CO <Char>_N,
                      cobox_aFR = CO [cobox_aFS]_N, cobox_aFS = CO Sym cobox_aFT,
                      cobox_aFT = CO <[String]>_N, cobox_aFU = CO Sym cobox_aFV,
                      cobox_aFV = CO [cobox_aFW]_N, cobox_aFW = CO [cobox_aFX]_N,
                      cobox_aFX = CO <Char>_N, cobox_aFY = CO Sym cobox_aFZ,
                      cobox_aFZ = CO [cobox_aG0]_N, cobox_aG0 = CO [cobox_aG1]_N,
                      cobox_aG1 = CO <Char>_N, cobox_aG2 = CO <Int>_N,
                      cobox_aG3 = CO Sym cobox_aG4, cobox_aG4 = CO [cobox_aG5]_N,
                      cobox_aG5 = CO [cobox_aG6]_N, cobox_aG6 = CO <Char>_N,
                      cobox_aG7 = CO [cobox_aG8]_N,
                      cobox_aG9 = CO cobox_aGa -> cobox_aGb,
                      cobox_aGa = CO [cobox_aGc]_N, cobox_aGb = CO <Bool>_N,
                      cobox_aGc = CO <Char>_N, cobox_aGd = CO [cobox_aGe]_N,
                      cobox_aGe = CO Sym cobox_aGf, cobox_aGf = CO <[String]>_N,
                      cobox_aGg = CO Sym cobox_aGh, cobox_aGh = CO [cobox_aGi]_N,
                      cobox_aGi = CO [cobox_aGj]_N, cobox_aGj = CO <Char>_N,
                      cobox_aGk = CO [cobox_aGl]_N, cobox_aGl = CO Sym cobox_aGm,
                      cobox_aGm = CO <[String]>_N, cobox_aGn = CO Sym cobox_aGo,
                      cobox_aGo = CO [cobox_aGp]_N, cobox_aGp = CO <Char>_N,
                      cobox_aGq = CO Sym cobox_aGr, cobox_aGr = CO [cobox_aGs]_N,
                      cobox_aGs = CO <Char>_N, cobox_aGt = CO Sym cobox_aGu,
                      cobox_aGu = CO [cobox_aGv]_N, cobox_aGv = CO [cobox_aGw]_N,
                      cobox_aGw = CO <Char>_N, cobox_aGx = CO [cobox_aGy]_N,
                      cobox_aGy = CO [cobox_aGz]_N, cobox_aGz = CO [cobox_aGA]_N,
                      cobox_aGA = CO <Char>_N, cobox_aGB = CO [cobox_aGC]_N,
                      cobox_aGC = CO [cobox_aGD]_N, cobox_aGD = CO [cobox_aGE]_N,
                      cobox_aGE = CO <Char>_N, cobox_aGF = CO <a_axM>_N,
                      cobox_aGG = CO <Int>_N, cobox_aGH = CO Sym cobox_aGI,
                      cobox_aGI = CO [cobox_aGJ]_N, cobox_aGJ = CO [cobox_aGK]_N,
                      cobox_aGK = CO <Char>_N, cobox_aGL = CO Sym cobox_aGM,
                      cobox_aGM = CO [cobox_aGN]_N, cobox_aGN = CO [cobox_aGO]_N,
                      cobox_aGO = CO <Char>_N, cobox_aGP = CO <Int>_N,
                      cobox_aGQ = CO Sym cobox_aGR, cobox_aGR = CO [cobox_aGS]_N,
                      cobox_aGS = CO <String>_N, cobox_aGT = CO <Int>_N,
                      cobox_aGU = CO Sym cobox_aGV, cobox_aGV = CO [cobox_aGW]_N,
                      cobox_aGW = CO [cobox_aGX]_N, cobox_aGX = CO <Char>_N,
                      cobox_aGY = CO Sym cobox_aGZ, cobox_aGZ = CO [cobox_aH0]_N,
                      cobox_aH0 = CO [cobox_aH1]_N, cobox_aH1 = CO <Char>_N,
                      cobox_aH2 = CO [cobox_aH3]_N, cobox_aH3 = CO Sym cobox_aH4,
                      cobox_aH4 = CO <[String]>_N, cobox_aH5 = CO [cobox_aH6]_N,
                      cobox_aH6 = CO Sym cobox_aH7, cobox_aH7 = CO <String>_N,
                      cobox_aH8 = CO <String>_N, cobox_aH9 = CO <String>_N,
                      cobox_aHa = CO <Int>_N, cobox_aHb = CO <Integer>_N,
                      cobox_aHc = CO <Int>_N, cobox_aHd = CO Sym cobox_aHe,
                      cobox_aHe = CO [cobox_aHf]_N, cobox_aHf = CO <Char>_N,
                      cobox_aHg = CO Sym cobox_aHh, cobox_aHh = CO [cobox_aHi]_N,
                      cobox_aHi = CO [cobox_aHj]_N, cobox_aHj = CO <Char>_N,
                      cobox_aHk = CO [cobox_aHl]_N, cobox_aHl = CO [cobox_aHm]_N,
                      cobox_aHm = CO [cobox_aHn]_N, cobox_aHn = CO <Char>_N,
                      cobox_aHo = CO [cobox_aHp]_N, cobox_aHp = CO [cobox_aHq]_N,
                      cobox_aHq = CO [cobox_aHr]_N, cobox_aHr = CO <Char>_N,
                      cobox_aHs = CO <Int>_N, cobox_aHt = CO <Int>_N}
  current tybinds  = (t_alB, Table)
                     (t_alC, Table)
                     (t_alD, Table)
                     (t_alH, Table)
                     (t_alI, Table)
                     (t_alJ, Int)
                     (t_alK, Int)
                     (t_alL, Table)
                     (t_alR, Table)
                     (t_alS, Table)
                     (t_alT, Table)
                     (t_alX, Int)
                     (t_alY, String -> Bool)
                     (t_alZ, [String])
                     (t_am0, Bool)
                     (t_am5, Int)
                     (t_am6, String -> Bool)
                     (t_am7, Table)
                     (t_am8, Table)
                     (t_amd, String)
                     (t_ame, String -> Bool)
                     (t_amf, Table)
                     (t_amg, Table)
                     (t_aml, [String])
                     (t_amm, [String])
                     (t_amn, Int)
                     (t_amr, [String])
                     (t_ams, [String])
                     (t_amt, [Int])
                     (t_amx, [String])
                     (t_amy, Table)
                     (t_amz, Table)
                     (t_amD, [Int])
                     (t_amE, [String])
                     (t_amF, String)
                     (t_amJ, Table)
                     (t_amK, [String])
                     (t_amN, Table)
                     (t_amO, [Int])
                     (t_amR, Table)
                     (t_amS, [String])
                     (t_amV, Table)
                     (t_amW, String)
                     (t_amZ, Table)
                     (t_an1, Table)
                     (t_an3, String)
                     (t_an4, String)
                     (t_an5, Bool)
                     (t_ana, [String])
                     (t_anc, [String])
                     (t_ane, Int)
                     (a_ang, [String])
                     (t_anj, Int)
                     (a_ank, [String])
                     (a_anq, [a_anv])
                     (b_anr, [a_anv])
                     (c_ans, [String])
                     (a_anv, String)
                     (a_anx, [String])
                     (a_anB, [String])
                     (a_anF, a_anJ)
                     (b_anG, [[String]])
                     (a_anJ, [String])
                     (a_anN, [String])
                     (a_anQ, [String])
                     (a_anS, [[String]])
                     (t_anX, String)
                     (t_anY, Bool)
                     (a_ao2, String)
                     (a_ao8, [String])
                     (t_aof, t_aog -> t_aoh -> t_aoi)
                     (t_aog, Int)
                     (t_aoh, [Char])
                     (t_aoi, [a_aok])
                     (a_aok, Char)
                     (a_aoo, Char)
                     (a_aor, Char)
                     (a_aov, Char)
                     (a_aoy, Char)
                     (a_aoA, Char)
                     (a_aoC, Int)
                     (b_aoD, [Char])
                     (c_aoE, [Char])
                     (a_aoL, a_aoT)
                     (b_aoM, Int)
                     (b_aoR, [a_arY])
                     (c_aoS, Int)
                     (a_aoT, [a_as1])
                     (a_arY, Int)
                     (a_as1, [a_as4])
                     (b_as2, Int)
                     (a_as4, Char)
                     (a_as7, [a_as4])
                     (a_asb, [String])
                     (b_asc, String)
                     (t_asj, [String])
                     (t_asm, b_asq)
                     (a_asp, Int)
                     (b_asq, [a_ass])
                     (a_ass, a_asu)
                     (a_asu, Char)
                     (a_asx, Char)
                     (a_asE, String)
                     (a_asH, String)
                     (a_asK, String)
                     (a_asN, String)
                     (a_asQ, String)
                     (a_asT, String)
                     (b_asY, [String])
                     (c_asZ, String)
                     (a_at0, Table)
                     (t_at5, [String])
                     (t_at7, String)
                     (t_atc, String)
                     (t_ath, String)
                     (t_atm, String)
                     (t_atr, String)
                     (t_atw, String)
                     (t_atB, String)
                     (t_atH, [String])
                     (t_atJ, String)
                     (t_atN, String)
                     (t_atR, String)
                     (t_atV, String)
                     (t_atZ, String)
                     (t_au3, String)
                     (t_au7, String)
                     (t_aub, String)
                     (t_auf, String)
                     (a_auk, String -> String -> Bool)
                     (t_aun, String)
                     (a_auq, String)
                     (b_aur, Bool)
                     (a_awC, Int)
                     (a_awG, Int)
                     (a_awJ, Int)
                     (a_awQ, String)
                     (b_awR, Int)
                     (t_awU, String)
                     (a_ax0, String)
                     (a_ax2, Int)
                     (b_ax3, [String])
                     (a_ax5, [String])
                     (a_ax7, String)
                     (a_axb, [String])
                     (a_axg, [String])
                     (a_axi, [String])
                     (a_axn, [String])
                     (a_axs, [String])
                     (a_axw, [String])
                     (a_axz, String)
                     (a_axD, String)
                     (t_axL, a_axM)
                     (a_axM, Int)
                     (a_axQ, [String])
                     (a_axT, [String])
                     (a_axW, String)
                     (a_axY, [a_axW])
                     (t_ay1, Int)
                     (a_ay3, [String])
                     (a_ay6, [String])
                     (a_ay9, [String])
                     (b_aya, [String])
                     (a_ayc, String)
                     (a_aye, String)
                     (a_ayj, String)
                     (a_ayl, Int)
                     (a_ayp, Int)
  final wc = WC {wc_insol = [W] cobox_aG8 :: [Char]
                                             ~ Char [" a type equality t_amd
                                                                       ~
                                                                       t_amm " FQL.hs:79:75-80] (CNonCanonical)}
writeMetaTyVar t_alB := Table
writeMetaTyVar t_alC := Table
writeMetaTyVar t_alD := Table
writeMetaTyVar t_alH := Table
writeMetaTyVar t_alI := Table
writeMetaTyVar t_alJ := Int
writeMetaTyVar t_alK := Int
writeMetaTyVar t_alL := Table
writeMetaTyVar t_alR := Table
writeMetaTyVar t_alS := Table
writeMetaTyVar t_alT := Table
writeMetaTyVar t_alX := Int
writeMetaTyVar t_alY := String -> Bool
writeMetaTyVar t_alZ := [String]
writeMetaTyVar t_am0 := Bool
writeMetaTyVar t_am5 := Int
writeMetaTyVar t_am6 := String -> Bool
writeMetaTyVar t_am7 := Table
writeMetaTyVar t_am8 := Table
writeMetaTyVar t_amd := String
writeMetaTyVar t_ame := String -> Bool
writeMetaTyVar t_amf := Table
writeMetaTyVar t_amg := Table
writeMetaTyVar t_aml := [String]
writeMetaTyVar t_amm := [String]
writeMetaTyVar t_amn := Int
writeMetaTyVar t_amr := [String]
writeMetaTyVar t_ams := [String]
writeMetaTyVar t_amt := [Int]
writeMetaTyVar t_amx := [String]
writeMetaTyVar t_amy := Table
writeMetaTyVar t_amz := Table
writeMetaTyVar t_amD := [Int]
writeMetaTyVar t_amE := [String]
writeMetaTyVar t_amF := String
writeMetaTyVar t_amJ := Table
writeMetaTyVar t_amK := [String]
writeMetaTyVar t_amN := Table
writeMetaTyVar t_amO := [Int]
writeMetaTyVar t_amR := Table
writeMetaTyVar t_amS := [String]
writeMetaTyVar t_amV := Table
writeMetaTyVar t_amW := String
writeMetaTyVar t_amZ := Table
writeMetaTyVar t_an1 := Table
writeMetaTyVar t_an3 := String
writeMetaTyVar t_an4 := String
writeMetaTyVar t_an5 := Bool
writeMetaTyVar t_ana := [String]
writeMetaTyVar t_anc := [String]
writeMetaTyVar t_ane := Int
writeMetaTyVar a_ang := [String]
writeMetaTyVar t_anj := Int
writeMetaTyVar a_ank := [String]
writeMetaTyVar a_anq := [a_anv]
writeMetaTyVar b_anr := [a_anv]
writeMetaTyVar c_ans := [String]
writeMetaTyVar a_anv := String
writeMetaTyVar a_anx := [String]
writeMetaTyVar a_anB := [String]
writeMetaTyVar a_anF := a_anJ
writeMetaTyVar b_anG := [[String]]
writeMetaTyVar a_anJ := [String]
writeMetaTyVar a_anN := [String]
writeMetaTyVar a_anQ := [String]
writeMetaTyVar a_anS := [[String]]
writeMetaTyVar t_anX := String
writeMetaTyVar t_anY := Bool
writeMetaTyVar a_ao2 := String
writeMetaTyVar a_ao8 := [String]
writeMetaTyVar t_aof := t_aog -> t_aoh -> t_aoi
writeMetaTyVar t_aog := Int
writeMetaTyVar t_aoh := [Char]
writeMetaTyVar t_aoi := [a_aok]
writeMetaTyVar a_aok := Char
writeMetaTyVar a_aoo := Char
writeMetaTyVar a_aor := Char
writeMetaTyVar a_aov := Char
writeMetaTyVar a_aoy := Char
writeMetaTyVar a_aoA := Char
writeMetaTyVar a_aoC := Int
writeMetaTyVar b_aoD := [Char]
writeMetaTyVar c_aoE := [Char]
writeMetaTyVar a_aoL := a_aoT
writeMetaTyVar b_aoM := Int
writeMetaTyVar b_aoR := [a_arY]
writeMetaTyVar c_aoS := Int
writeMetaTyVar a_aoT := [a_as1]
writeMetaTyVar a_arY := Int
writeMetaTyVar a_as1 := [a_as4]
writeMetaTyVar b_as2 := Int
writeMetaTyVar a_as4 := Char
writeMetaTyVar a_as7 := [a_as4]
writeMetaTyVar a_asb := [String]
writeMetaTyVar b_asc := String
writeMetaTyVar t_asj := [String]
writeMetaTyVar t_asm := b_asq
writeMetaTyVar a_asp := Int
writeMetaTyVar b_asq := [a_ass]
writeMetaTyVar a_ass := a_asu
writeMetaTyVar a_asu := Char
writeMetaTyVar a_asx := Char
writeMetaTyVar a_asE := String
writeMetaTyVar a_asH := String
writeMetaTyVar a_asK := String
writeMetaTyVar a_asN := String
writeMetaTyVar a_asQ := String
writeMetaTyVar a_asT := String
writeMetaTyVar b_asY := [String]
writeMetaTyVar c_asZ := String
writeMetaTyVar a_at0 := Table
writeMetaTyVar t_at5 := [String]
writeMetaTyVar t_at7 := String
writeMetaTyVar t_atc := String
writeMetaTyVar t_ath := String
writeMetaTyVar t_atm := String
writeMetaTyVar t_atr := String
writeMetaTyVar t_atw := String
writeMetaTyVar t_atB := String
writeMetaTyVar t_atH := [String]
writeMetaTyVar t_atJ := String
writeMetaTyVar t_atN := String
writeMetaTyVar t_atR := String
writeMetaTyVar t_atV := String
writeMetaTyVar t_atZ := String
writeMetaTyVar t_au3 := String
writeMetaTyVar t_au7 := String
writeMetaTyVar t_aub := String
writeMetaTyVar t_auf := String
writeMetaTyVar a_auk := String -> String -> Bool
writeMetaTyVar t_aun := String
writeMetaTyVar a_auq := String
writeMetaTyVar b_aur := Bool
writeMetaTyVar a_awC := Int
writeMetaTyVar a_awG := Int
writeMetaTyVar a_awJ := Int
writeMetaTyVar a_awQ := String
writeMetaTyVar b_awR := Int
writeMetaTyVar t_awU := String
writeMetaTyVar a_ax0 := String
writeMetaTyVar a_ax2 := Int
writeMetaTyVar b_ax3 := [String]
writeMetaTyVar a_ax5 := [String]
writeMetaTyVar a_ax7 := String
writeMetaTyVar a_axb := [String]
writeMetaTyVar a_axg := [String]
writeMetaTyVar a_axi := [String]
writeMetaTyVar a_axn := [String]
writeMetaTyVar a_axs := [String]
writeMetaTyVar a_axw := [String]
writeMetaTyVar a_axz := String
writeMetaTyVar a_axD := String
writeMetaTyVar t_axL := a_axM
writeMetaTyVar a_axM := Int
writeMetaTyVar a_axQ := [String]
writeMetaTyVar a_axT := [String]
writeMetaTyVar a_axW := String
writeMetaTyVar a_axY := [a_axW]
writeMetaTyVar t_ay1 := Int
writeMetaTyVar a_ay3 := [String]
writeMetaTyVar a_ay6 := [String]
writeMetaTyVar a_ay9 := [String]
writeMetaTyVar b_aya := [String]
writeMetaTyVar a_ayc := String
writeMetaTyVar a_aye := String
writeMetaTyVar a_ayj := String
writeMetaTyVar a_ayl := Int
writeMetaTyVar a_ayp := Int
Constraint solver steps = 300
End simplifyTop }
reportUnsolved {
reportUnsolved (before unflattening)
  WC {wc_insol = [W] cobox_aG8 :: [Char]
                                  ~ Char [" a type equality t_amd
                                                            ~
                                                            t_amm " FQL.hs:79:75-80] (CNonCanonical)}
reportUnsolved (after unflattening):
  WC {wc_insol = [W] cobox_aG8 :: [Char]
                                  ~ Char [" a type equality t_amd
                                                            ~
                                                            t_amm " FQL.hs:79:75-80] (CNonCanonical)}
reportFlats
  Flats = {}
  Suppress = False
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {[W] cobox_aG8 :: [Char] ~ Char [" a type equality t_amd
                                                             ~
                                                             t_amm " FQL.hs:79:75-80] (CNonCanonical)}
  Suppress = False
tryReporters {
  [[W] cobox_aG8 :: [Char] ~ Char [" a type equality t_amd
                                                     ~
                                                     t_amm " FQL.hs:79:75-80] (CNonCanonical)]
tryReporters: yes
  Utterly wrong [[W] cobox_aG8 :: [Char]
                                  ~ Char [" a type equality t_amd
                                                            ~
                                                            t_amm " FQL.hs:79:75-80] (CNonCanonical)]
relevantBindings
  [table, test, string, select, project, selectColumnNrs, colno,
   eqString, compilers, locaties, writeTable, insertEmptyLines,
   lineOutTable, columnLength, lineOutRow, selectRows, rowTest,
   crossProduct]
Adding error:
  FQL.hs:79:75:
      Couldn't match type ‘[Char]’ with ‘Char’
      Expected type: [String]
        Actual type: String
      In the second argument of ‘colno’, namely ‘string’
      In the first argument of ‘selectRows’, namely
        ‘(colno (head table) string)’
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {}
  Suppress = True
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportUnsolved }
InstEnvs (External) {
  instance Control.Applicative.Alternative []
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus m =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance (Control.Arrow.ArrowZero a, Control.Arrow.ArrowPlus a) =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.ArrowPlus a =>
           Control.Applicative.Alternative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Enum GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Enum (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Enum Float -- Defined in ‘GHC.Float’
  instance Enum Double -- Defined in ‘GHC.Float’
  instance Eq Integer -- Defined in ‘integer-gmp:GHC.Integer.Type’
  instance Eq a => Eq [a] -- Defined in ‘GHC.Classes’
  instance Eq GHC.Types.Word -- Defined in ‘GHC.Classes’
  instance Eq Ordering -- Defined in ‘GHC.Classes’
  instance Eq Int -- Defined in ‘GHC.Classes’
  instance Eq Float -- Defined in ‘GHC.Classes’
  instance Eq Double -- Defined in ‘GHC.Classes’
  instance Eq Char -- Defined in ‘GHC.Classes’
  instance Eq Bool -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m, Eq n, Eq o) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m, Eq n) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j) =>
           Eq (a, b, c, d, e, f, g, h, i, j)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i) =>
           Eq (a, b, c, d, e, f, g, h, i)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h) =>
           Eq (a, b, c, d, e, f, g, h)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g) =>
           Eq (a, b, c, d, e, f, g)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f) =>
           Eq (a, b, c, d, e, f)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e) => Eq (a, b, c, d, e)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d) => Eq (a, b, c, d)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c) => Eq (a, b, c)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b) => Eq (a, b) -- Defined in ‘GHC.Classes’
  instance Eq () -- Defined in ‘GHC.Classes’
  instance Eq a => Eq (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Eq a => Eq (GHC.Real.Ratio a) -- Defined in ‘GHC.Real’
  instance Floating Float -- Defined in ‘GHC.Float’
  instance Floating Double -- Defined in ‘GHC.Float’
  instance Integral a => Fractional (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Fractional Float -- Defined in ‘GHC.Float’
  instance Fractional Double -- Defined in ‘GHC.Float’
  instance Integral GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral Integer -- Defined in ‘GHC.Real’
  instance Integral Int -- Defined in ‘GHC.Real’
  instance Monad m => Monad (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Monad [] -- Defined in ‘GHC.Base’
  instance Monad IO -- Defined in ‘GHC.Base’
  instance Monad ((->) r) -- Defined in ‘GHC.Base’
  instance Functor Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m => Functor (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Functor (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Functor (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Functor [] -- Defined in ‘GHC.Base’
  instance Functor IO -- Defined in ‘GHC.Base’
  instance Functor ((->) r) -- Defined in ‘GHC.Base’
  instance Functor ((,) a) -- Defined in ‘GHC.Base’
  instance Num GHC.Types.Word -- Defined in ‘GHC.Num’
  instance Num Integer -- Defined in ‘GHC.Num’
  instance Num Int -- Defined in ‘GHC.Num’
  instance Integral a => Num (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Num Float -- Defined in ‘GHC.Float’
  instance Num Double -- Defined in ‘GHC.Float’
  instance Ord Integer -- Defined in ‘integer-gmp:GHC.Integer.Type’
  instance Ord a => Ord [a] -- Defined in ‘GHC.Classes’
  instance Ord GHC.Types.Word -- Defined in ‘GHC.Classes’
  instance Ord Ordering -- Defined in ‘GHC.Classes’
  instance Ord Int -- Defined in ‘GHC.Classes’
  instance Ord Float -- Defined in ‘GHC.Classes’
  instance Ord Double -- Defined in ‘GHC.Classes’
  instance Ord Char -- Defined in ‘GHC.Classes’
  instance Ord Bool -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m, Ord n) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j) =>
           Ord (a, b, c, d, e, f, g, h, i, j)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i) =>
           Ord (a, b, c, d, e, f, g, h, i)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g,
            Ord h) =>
           Ord (a, b, c, d, e, f, g, h)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g) =>
           Ord (a, b, c, d, e, f, g)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f) =>
           Ord (a, b, c, d, e, f)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e) => Ord (a, b, c, d, e)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d) => Ord (a, b, c, d)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c) => Ord (a, b, c)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b) => Ord (a, b) -- Defined in ‘GHC.Classes’
  instance Ord () -- Defined in ‘GHC.Classes’
  instance Ord a => Ord (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Integral a => Ord (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Read a => Read (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Real GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Real (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Real Integer -- Defined in ‘GHC.Real’
  instance Real Int -- Defined in ‘GHC.Real’
  instance Real Float -- Defined in ‘GHC.Float’
  instance Real Double -- Defined in ‘GHC.Float’
  instance RealFloat Float -- Defined in ‘GHC.Float’
  instance RealFloat Double -- Defined in ‘GHC.Float’
  instance Integral a => RealFrac (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance RealFrac Float -- Defined in ‘GHC.Float’
  instance RealFrac Double -- Defined in ‘GHC.Float’
  instance Show a => Show (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance (Integral a, Show a) => Show (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Show Float -- Defined in ‘GHC.Float’
  instance Show Double -- Defined in ‘GHC.Float’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Applicative
    -- Defined in ‘Control.Applicative’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Alternative
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus [] -- Defined in ‘Control.Monad’
  instance Control.Monad.MonadPlus Maybe
    -- Defined in ‘Control.Monad’
  instance Control.Applicative.Applicative []
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (GHC.ST.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             (base:Control.Monad.ST.Lazy.Imp.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Data.Proxy.Proxy
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative IO
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (Either e)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid m =>
           Control.Applicative.Applicative (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative ((->) a)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Control.Applicative.Applicative ((,) a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedMonad m a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedArrow a b c)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.Const a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0Const
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Data.Monoid.Monoid (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
End InstEnvs }
InstEnvs (Internal) {
End InstEnvs }
famInstEnvs (External) {
  type GHC.Generics.Rep Char
    ~ GHC.Generics.D1
        GHC.Generics.D_Char
        (GHC.Generics.C1
           GHC.Generics.C_Char
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Char)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Double
    ~ GHC.Generics.D1
        GHC.Generics.D_Double
        (GHC.Generics.C1
           GHC.Generics.C_Double
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Double)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Float
    ~ GHC.Generics.D1
        GHC.Generics.D_Float
        (GHC.Generics.C1
           GHC.Generics.C_Float
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Float)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Int
    ~ GHC.Generics.D1
        GHC.Generics.D_Int
        (GHC.Generics.C1
           GHC.Generics.C_Int
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Proxy.Proxy t)
    ~ GHC.Generics.D1
        GHC.Generics.D1Proxy
        (GHC.Generics.C1 GHC.Generics.C1_0Proxy GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f, g)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 g)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 f)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 e)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ()
    ~ GHC.Generics.D1
        GHC.Generics.D1()
        (GHC.Generics.C1 GHC.Generics.C1_0() GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Ordering
    ~ GHC.Generics.D1
        GHC.Generics.D1Ordering
        (GHC.Generics.C1 GHC.Generics.C1_0Ordering GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Ordering GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Ordering GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Bool
    ~ GHC.Generics.D1
        GHC.Generics.D1Bool
        (GHC.Generics.C1 GHC.Generics.C1_0Bool GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Bool GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Either a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Maybe a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep [a]
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 [a])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.U1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1U1
        (GHC.Generics.C1 GHC.Generics.C1_0U1 GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Par1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Par1
        (GHC.Generics.C1
           GHC.Generics.C1_0Par1
           (GHC.Generics.S1 GHC.Generics.S1_0_0Par1 (GHC.Generics.Rec0 p)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Rec1 f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Rec1
        (GHC.Generics.C1
           GHC.Generics.C1_0Rec1
           (GHC.Generics.S1
              GHC.Generics.S1_0_0Rec1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.K1 i c p)
    ~ GHC.Generics.D1
        GHC.Generics.D1K1
        (GHC.Generics.C1
           GHC.Generics.C1_0K1
           (GHC.Generics.S1 GHC.Generics.S1_0_0K1 (GHC.Generics.Rec0 c)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.M1 i c f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1M1
        (GHC.Generics.C1
           GHC.Generics.C1_0M1
           (GHC.Generics.S1 GHC.Generics.S1_0_0M1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:+:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:+:
        (GHC.Generics.C1
           GHC.Generics.C1_0:+:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p)))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1:+:
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:*:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:*:
        (GHC.Generics.C1
           GHC.Generics.C1_0:*:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p))
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:.:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:.:
        (GHC.Generics.C1
           GHC.Generics.C1_0:.:
           (GHC.Generics.S1
              GHC.Generics.S1_0_0:.: (GHC.Generics.Rec0 (f (g p)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Associativity
    ~ GHC.Generics.D1
        GHC.Generics.D1Associativity
        (GHC.Generics.C1 GHC.Generics.C1_0Associativity GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Associativity GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Associativity GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Fixity
    ~ GHC.Generics.D1
        GHC.Generics.D1Fixity
        (GHC.Generics.C1 GHC.Generics.C1_0Fixity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Fixity
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector
                               (GHC.Generics.Rec0 GHC.Generics.Associativity)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Arity
    ~ GHC.Generics.D1
        GHC.Generics.D1Arity
        (GHC.Generics.C1 GHC.Generics.C1_0Arity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Arity
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Monoid.Dual a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Endo a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Endo
        (GHC.Generics.C1
           Data.Monoid.C1_0Endo
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Endo (GHC.Generics.Rec0 (a -> a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.All
    ~ GHC.Generics.D1
        Data.Monoid.D1All
        (GHC.Generics.C1
           Data.Monoid.C1_0All
           (GHC.Generics.S1 Data.Monoid.S1_0_0All (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.Any
    ~ GHC.Generics.D1
        Data.Monoid.D1Any
        (GHC.Generics.C1
           Data.Monoid.C1_0Any
           (GHC.Generics.S1 Data.Monoid.S1_0_0Any (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Sum a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Product a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.First a)
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Last a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Last (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Control.Applicative.Const a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedMonad m a)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec0 (m a))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedArrow a b c)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow
              (GHC.Generics.Rec0 (a b c))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.ZipList a)
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec0 [a])))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 ((,,,,,,) a b c d e f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,,) a b c d e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,) a b c d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,) a b c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,) a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,) a)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 (Either a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Maybe
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 []
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec1 [])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Data.Monoid.Dual
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Sum
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Product
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.First
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Last
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1 Data.Monoid.S1_0_0Last (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 (Control.Applicative.Const a)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedMonad m)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec1 m)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedArrow a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow (GHC.Generics.Rec1 (a b))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 Control.Applicative.ZipList
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec1 [])))
    -- Defined in ‘Control.Applicative’
  type instance a Data.Type.Equality.== b
    ~ Data.Either.EqEither a b
    -- Defined in ‘Data.Either’
End famInstEnvs }
famInstEnvs (Internal) {
End famInstEnvs }
originalCts (simplifyTop)
  fvars =  [(alB, t_alB), (alC, t_alC), (alD, t_alD), (alH, t_alH),
            (alI, t_alI), (alJ, t_alJ), (alK, t_alK), (alL, t_alL),
            (alR, t_alR), (alS, t_alS), (alT, t_alT), (alX, t_alX),
            (alY, t_alY), (alZ, t_alZ), (am0, t_am0), (am5, t_am5),
            (am6, t_am6), (am7, t_am7), (am8, t_am8), (amd, t_amd),
            (ame, t_ame), (amf, t_amf), (amg, t_amg), (aml, t_aml),
            (amm, t_amm), (amn, t_amn), (amr, t_amr), (ams, t_ams),
            (amt, t_amt), (amx, t_amx), (amy, t_amy), (amz, t_amz),
            (amD, t_amD), (amE, t_amE), (amF, t_amF), (amJ, t_amJ),
            (amK, t_amK), (amN, t_amN), (amO, t_amO), (amR, t_amR),
            (amS, t_amS), (amV, t_amV), (amW, t_amW), (amZ, t_amZ),
            (an1, t_an1), (an3, t_an3), (an4, t_an4), (an5, t_an5),
            (ana, t_ana), (anc, t_anc), (ane, t_ane), (ang, a_ang),
            (anj, t_anj), (ank, a_ank), (anq, a_anq), (anr, b_anr),
            (ans, c_ans), (anv, a_anv), (anx, a_anx), (anB, a_anB),
            (anF, a_anF), (anG, b_anG), (anJ, a_anJ), (anN, a_anN),
            (anQ, a_anQ), (anS, a_anS), (anX, t_anX), (anY, t_anY),
            (ao2, a_ao2), (ao8, a_ao8), (aof, t_aof), (aog, t_aog),
            (aoh, t_aoh), (aoi, t_aoi), (aok, a_aok), (aoo, a_aoo),
            (aor, a_aor), (aov, a_aov), (aoy, a_aoy), (aoA, a_aoA),
            (aoC, a_aoC), (aoD, b_aoD), (aoE, c_aoE), (aoL, a_aoL),
            (aoM, b_aoM), (aoR, b_aoR), (aoS, c_aoS), (aoT, a_aoT),
            (arY, a_arY), (as1, a_as1), (as2, b_as2), (as4, a_as4),
            (as7, a_as7), (asb, a_asb), (asc, b_asc), (asj, t_asj),
            (asm, t_asm), (asp, a_asp), (asq, b_asq), (ass, a_ass),
            (asu, a_asu), (asx, a_asx), (asE, a_asE), (asH, a_asH),
            (asK, a_asK), (asN, a_asN), (asQ, a_asQ), (asT, a_asT),
            (asY, b_asY), (asZ, c_asZ), (at0, a_at0), (at5, t_at5),
            (at7, t_at7), (atc, t_atc), (ath, t_ath), (atm, t_atm),
            (atr, t_atr), (atw, t_atw), (atB, t_atB), (atH, t_atH),
            (atJ, t_atJ), (atN, t_atN), (atR, t_atR), (atV, t_atV),
            (atZ, t_atZ), (au3, t_au3), (au7, t_au7), (aub, t_aub),
            (auf, t_auf), (auk, a_auk), (aun, t_aun), (auq, a_auq),
            (aur, b_aur), (awC, a_awC), (awG, a_awG), (awJ, a_awJ),
            (awQ, a_awQ), (awR, b_awR), (awU, t_awU), (ax0, a_ax0),
            (ax2, a_ax2), (ax3, b_ax3), (ax5, a_ax5), (ax7, a_ax7),
            (axb, a_axb), (axg, a_axg), (axi, a_axi), (axn, a_axn),
            (axs, a_axs), (axw, a_axw), (axz, a_axz), (axD, a_axD),
            (axL, t_axL), (axM, a_axM), (axQ, a_axQ), (axT, a_axT),
            (axW, a_axW), (axY, a_axY), (ay1, t_ay1), (ay3, a_ay3),
            (ay6, a_ay6), (ay9, a_ay9), (aya, b_aya), (ayc, a_ayc),
            (aye, a_aye), (ayj, a_ayj), (ayl, a_ayl), (ayp, a_ayp)]
  wanted =  WC {wc_flat = [W] cobox_alE :: Table
                                           ~ t_alB [" a type equality Table
                                                                      ~
                                                                      t_alB " FQL.hs:109:17-39] (CNonCanonical)
                          [W] cobox_alF :: Table ~ t_alC [" a type equality Table
                                                                            ~
                                                                            t_alC " FQL.hs:109:17-39] (CNonCanonical)
                          [W] cobox_alG :: Table ~ t_alD [" a type equality Table
                                                                            ~
                                                                            t_alD " FQL.hs:109:17-39] (CNonCanonical)
                          [W] cobox_alM :: Table ~ t_alH [" a type equality Table
                                                                            ~
                                                                            t_alH " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alN :: Table ~ t_alI [" a type equality Table
                                                                            ~
                                                                            t_alI " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alO :: Int ~ t_alJ [" a type equality Int
                                                                          ~
                                                                          t_alJ " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alP :: Int ~ t_alK [" a type equality Int
                                                                          ~
                                                                          t_alK " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alQ :: Table ~ t_alL [" a type equality Table
                                                                            ~
                                                                            t_alL " FQL.hs:104:13-49] (CNonCanonical)
                          [W] cobox_alU :: Table ~ t_alR [" a type equality Table
                                                                            ~
                                                                            t_alR " FQL.hs:96:9-31] (CNonCanonical)
                          [W] cobox_alV :: Table ~ t_alS [" a type equality Table
                                                                            ~
                                                                            t_alS " FQL.hs:96:9-31] (CNonCanonical)
                          [W] cobox_alW :: Table ~ t_alT [" a type equality Table
                                                                            ~
                                                                            t_alT " FQL.hs:96:9-31] (CNonCanonical)
                          [W] cobox_am1 :: Int ~ t_alX [" a type equality Int
                                                                          ~
                                                                          t_alX " FQL.hs:89:12-54] (CNonCanonical)
                          [W] cobox_am2 :: (String -> Bool) ~ t_alY [" a type equality String
                                                                                       -> Bool
                                                                                       ~
                                                                                       t_alY " FQL.hs:89:12-54] (CNonCanonical)
                          [W] cobox_am3 :: [String] ~ t_alZ [" a type equality [String]
                                                                               ~
                                                                               t_alZ " FQL.hs:89:12-54] (CNonCanonical)
                          [W] cobox_am4 :: Bool ~ t_am0 [" a type equality Bool
                                                                           ~
                                                                           t_am0 " FQL.hs:89:12-54] (CNonCanonical)
                          [W] cobox_am9 :: Int ~ t_am5 [" a type equality Int
                                                                          ~
                                                                          t_am5 " FQL.hs:85:15-55] (CNonCanonical)
                          [W] cobox_ama :: (String -> Bool) ~ t_am6 [" a type equality String
                                                                                       -> Bool
                                                                                       ~
                                                                                       t_am6 " FQL.hs:85:15-55] (CNonCanonical)
                          [W] cobox_amb :: Table ~ t_am7 [" a type equality Table
                                                                            ~
                                                                            t_am7 " FQL.hs:85:15-55] (CNonCanonical)
                          [W] cobox_amc :: Table ~ t_am8 [" a type equality Table
                                                                            ~
                                                                            t_am8 " FQL.hs:85:15-55] (CNonCanonical)
                          [W] cobox_amh :: String ~ t_amd [" a type equality String
                                                                             ~
                                                                             t_amd " FQL.hs:78:11-54] (CNonCanonical)
                          [W] cobox_ami :: (String -> Bool) ~ t_ame [" a type equality String
                                                                                       -> Bool
                                                                                       ~
                                                                                       t_ame " FQL.hs:78:11-54] (CNonCanonical)
                          [W] cobox_amj :: Table ~ t_amf [" a type equality Table
                                                                            ~
                                                                            t_amf " FQL.hs:78:11-54] (CNonCanonical)
                          [W] cobox_amk :: Table ~ t_amg [" a type equality Table
                                                                            ~
                                                                            t_amg " FQL.hs:78:11-54] (CNonCanonical)
                          [W] cobox_amo :: [String] ~ t_aml [" a type equality [String]
                                                                               ~
                                                                               t_aml " FQL.hs:70:10-36] (CNonCanonical)
                          [W] cobox_amp :: [String] ~ t_amm [" a type equality [String]
                                                                               ~
                                                                               t_amm " FQL.hs:70:10-36] (CNonCanonical)
                          [W] cobox_amq :: Int ~ t_amn [" a type equality Int
                                                                          ~
                                                                          t_amn " FQL.hs:70:10-36] (CNonCanonical)
                          [W] cobox_amu :: [String] ~ t_amr [" a type equality [String]
                                                                               ~
                                                                               t_amr " FQL.hs:65:20-48] (CNonCanonical)
                          [W] cobox_amv :: [String] ~ t_ams [" a type equality [String]
                                                                               ~
                                                                               t_ams " FQL.hs:65:20-48] (CNonCanonical)
                          [W] cobox_amw :: [Int] ~ t_amt [" a type equality [Int]
                                                                            ~
                                                                            t_amt " FQL.hs:65:20-48] (CNonCanonical)
                          [W] cobox_amA :: [String] ~ t_amx [" a type equality [String]
                                                                               ~
                                                                               t_amx " FQL.hs:60:12-37] (CNonCanonical)
                          [W] cobox_amB :: Table ~ t_amy [" a type equality Table
                                                                            ~
                                                                            t_amy " FQL.hs:60:12-37] (CNonCanonical)
                          [W] cobox_amC :: Table ~ t_amz [" a type equality Table
                                                                            ~
                                                                            t_amz " FQL.hs:60:12-37] (CNonCanonical)
                          [W] cobox_amG :: [Int] ~ t_amD [" a type equality [Int]
                                                                            ~
                                                                            t_amD " FQL.hs:53:15-41] (CNonCanonical)
                          [W] cobox_amH :: [String] ~ t_amE [" a type equality [String]
                                                                               ~
                                                                               t_amE " FQL.hs:53:15-41] (CNonCanonical)
                          [W] cobox_amI :: String ~ t_amF [" a type equality String
                                                                             ~
                                                                             t_amF " FQL.hs:53:15-41] (CNonCanonical)
                          [W] cobox_amL :: Table ~ t_amJ [" a type equality Table
                                                                            ~
                                                                            t_amJ " FQL.hs:49:17-33] (CNonCanonical)
                          [W] cobox_amM :: [String] ~ t_amK [" a type equality [String]
                                                                               ~
                                                                               t_amK " FQL.hs:49:17-33] (CNonCanonical)
                          [W] cobox_amP :: Table ~ t_amN [" a type equality Table
                                                                            ~
                                                                            t_amN " FQL.hs:44:17-30] (CNonCanonical)
                          [W] cobox_amQ :: [Int] ~ t_amO [" a type equality [Int]
                                                                            ~
                                                                            t_amO " FQL.hs:44:17-30] (CNonCanonical)
                          [W] cobox_amT :: Table ~ t_amR [" a type equality Table
                                                                            ~
                                                                            t_amR " FQL.hs:37:21-37] (CNonCanonical)
                          [W] cobox_amU :: [String] ~ t_amS [" a type equality [String]
                                                                               ~
                                                                               t_amS " FQL.hs:37:21-37] (CNonCanonical)
                          [W] cobox_amX :: Table ~ t_amV [" a type equality Table
                                                                            ~
                                                                            t_amV " FQL.hs:33:15-29] (CNonCanonical)
                          [W] cobox_amY :: String ~ t_amW [" a type equality String
                                                                             ~
                                                                             t_amW " FQL.hs:33:15-29] (CNonCanonical)
                          [W] cobox_an0 :: Table ~ t_amZ [" a type equality Table
                                                                            ~
                                                                            t_amZ " FQL.hs:20:13-17] (CNonCanonical)
                          [W] cobox_an2 :: Table ~ t_an1 [" a type equality Table
                                                                            ~
                                                                            t_an1 " FQL.hs:7:14-18] (CNonCanonical)
                          [W] cobox_an6 :: String ~ t_an3 [" a type equality String
                                                                             ~
                                                                             t_an3 " FQL.hs:5:18-41] (CNonCanonical)
                          [W] cobox_an7 :: String ~ t_an4 [" a type equality String
                                                                             ~
                                                                             t_an4 " FQL.hs:5:18-41] (CNonCanonical)
                          [W] cobox_an8 :: Bool ~ t_an5 [" a type equality Bool
                                                                           ~
                                                                           t_an5 " FQL.hs:5:18-41] (CNonCanonical)
                          [W] cobox_anb :: [t_ana] ~ t_alB [" a type equality [t_ana]
                                                                              ~
                                                                              t_alB " FQL.hs:110:15-18] (CNonCanonical)
                          [W] cobox_and :: [t_anc] ~ t_alC [" a type equality [t_anc]
                                                                              ~
                                                                              t_alC " FQL.hs:110:22-25] (CNonCanonical)
                          [W] cobox_anh :: Int ~ t_ane [" a type equality Int
                                                                          ~
                                                                          t_ane " FQL.hs:112:40-48] (CNonCanonical)
                          [W] cobox_ani :: [t_anc] ~ [a_ang] [" a type equality [t_anc]
                                                                                ~
                                                                                [a_ang] " FQL.hs:112:47-48] (CNonCanonical)
                          [W] cobox_anl :: Int ~ t_anj [" a type equality Int
                                                                          ~
                                                                          t_anj " FQL.hs:111:40-48] (CNonCanonical)
                          [W] cobox_anm :: [t_ana] ~ [a_ank] [" a type equality [t_ana]
                                                                                ~
                                                                                [a_ank] " FQL.hs:111:47-48] (CNonCanonical)
                          [W] cobox_ant :: [c_ans] ~ t_alD [" a type equality [c_ans]
                                                                              ~
                                                                              t_alD " FQL.hs:110:30-107] (CNonCanonical)
                          [W] cobox_anw :: ([a_anv] -> [a_anv] -> [a_anv])
                                           ~ (a_anq -> b_anr -> c_ans) [" a type equality [a_anv]
                                                                                          -> [a_anv]
                                                                                          -> [a_anv]
                                                                                          ~
                                                                                          a_anq
                                                                                          -> b_anr
                                                                                          -> c_ans " FQL.hs:110:38-41] (CNonCanonical)
                          [W] cobox_any :: [a_anx] ~ [a_anq] [" a type equality [a_anx]
                                                                                ~
                                                                                [a_anq] " FQL.hs:110:44-76] (CNonCanonical)
                          [W] cobox_anz :: t_ana ~ a_anx [" a type equality t_ana
                                                                            ~
                                                                            a_anx " FQL.hs:110:44] (CNonCanonical)
                          [W] cobox_anC :: [a_anB] ~ [a_anx] [" a type equality [a_anB]
                                                                                ~
                                                                                [a_anx] " FQL.hs:110:47-75] (CNonCanonical)
                          [W] cobox_anH :: [b_anG] ~ [[a_anB]] [" a type equality [b_anG]
                                                                                  ~
                                                                                  [[a_anB]] " FQL.hs:110:55-74] (CNonCanonical)
                          [W] cobox_anK :: (a_anJ -> [a_anJ])
                                           ~ (a_anF -> b_anG) [" a type equality a_anJ -> [a_anJ]
                                                                                 ~
                                                                                 a_anF
                                                                                 -> b_anG " FQL.hs:110:60-70] (CNonCanonical)
                          [W] cobox_anL :: t_ane ~ Int [" a type equality t_ane
                                                                          ~
                                                                          Int " FQL.hs:110:70] (CNonCanonical)
                          [W] cobox_anM :: [t_ana] ~ [a_anF] [" a type equality [t_ana]
                                                                                ~
                                                                                [a_anF] " FQL.hs:110:73-74] (CNonCanonical)
                          [W] cobox_anO :: [a_anN] ~ [b_anr] [" a type equality [a_anN]
                                                                                ~
                                                                                [b_anr] " FQL.hs:110:80-106] (CNonCanonical)
                          [W] cobox_anP :: t_anc ~ a_anN [" a type equality t_anc
                                                                            ~
                                                                            a_anN " FQL.hs:110:80] (CNonCanonical)
                          [W] cobox_anR :: [a_anQ] ~ [a_anN] [" a type equality [a_anQ]
                                                                                ~
                                                                                [a_anN] " FQL.hs:110:83-105] (CNonCanonical)
                          [W] cobox_anT :: [a_anS] ~ [[a_anQ]] [" a type equality [a_anS]
                                                                                  ~
                                                                                  [[a_anQ]] " FQL.hs:110:91-104] (CNonCanonical)
                          [W] cobox_anU :: t_anj ~ Int [" a type equality t_anj
                                                                          ~
                                                                          Int " FQL.hs:110:101] (CNonCanonical)
                          [W] cobox_anV :: [t_anc] ~ a_anS [" a type equality [t_anc]
                                                                              ~
                                                                              a_anS " FQL.hs:110:103-104] (CNonCanonical)
                          [W] cobox_anZ :: t_alY ~ (t_anX -> t_anY) [" a type equality t_alY
                                                                                       ~
                                                                                       t_anX
                                                                                       -> t_anY " FQL.hs:90:28-48] (CNonCanonical)
                          [W] cobox_ao0 :: t_anY ~ t_am0 [" a type equality t_anY
                                                                            ~
                                                                            t_am0 " FQL.hs:90:28-48] (CNonCanonical)
                          [W] cobox_ao3 :: a_ao2 ~ t_anX [" a type equality a_ao2
                                                                            ~
                                                                            t_anX " FQL.hs:90:34-47] (CNonCanonical)
                          [W] cobox_ao4 :: t_alZ ~ [a_ao2] [" a type equality t_alZ
                                                                              ~
                                                                              [a_ao2] " FQL.hs:90:34-37] (CNonCanonical)
                          [W] cobox_ao5 :: t_alX ~ Int [" a type equality t_alX
                                                                          ~
                                                                          Int " FQL.hs:90:42-47] (CNonCanonical)
                          [W] cobox_ao9 :: [a_ao8] ~ t_am8 [" a type equality [a_ao8]
                                                                              ~
                                                                              t_am8 " FQL.hs:86:32-65] (CNonCanonical)
                          [W] cobox_aoa :: (t_alZ -> t_am0)
                                           ~ (a_ao8 -> Bool) [" a type equality t_alZ -> t_am0
                                                                                ~
                                                                                a_ao8
                                                                                -> Bool " FQL.hs:86:40-58] (CNonCanonical)
                          [W] cobox_aob :: t_am5 ~ t_alX [" a type equality t_am5
                                                                            ~
                                                                            t_alX " FQL.hs:86:48-53] (CNonCanonical)
                          [W] cobox_aoc :: t_am6 ~ t_alY [" a type equality t_am6
                                                                            ~
                                                                            t_alY " FQL.hs:86:55-58] (CNonCanonical)
                          [W] cobox_aod :: t_am7 ~ [a_ao8] [" a type equality t_am7
                                                                              ~
                                                                              [a_ao8] " FQL.hs:86:61-65] (CNonCanonical)
                          [W] cobox_aoj :: t_aof
                                           ~ (t_aog -> t_aoh -> t_aoi) [" a type equality t_aof
                                                                                          ~
                                                                                          t_aog
                                                                                          -> t_aoh
                                                                                          -> t_aoi " FQL.hs:56:27-76] (CNonCanonical)
                          [W] cobox_aol :: [a_aok] ~ t_aoi [" a type equality [a_aok]
                                                                              ~
                                                                              t_aoi " FQL.hs:56:42-76] (CNonCanonical)
                          [W] cobox_aom :: [Char] ~ [a_aok] [" a type equality [Char]
                                                                               ~
                                                                               [a_aok] " FQL.hs:56:42-44] (CNonCanonical)
                          [W] cobox_aop :: [a_aoo] ~ [a_aok] [" a type equality [a_aoo]
                                                                                ~
                                                                                [a_aok] " FQL.hs:56:49-76] (CNonCanonical)
                          [W] cobox_aoq :: t_aog ~ Int [" a type equality t_aog
                                                                          ~
                                                                          Int " FQL.hs:56:54-56] (CNonCanonical)
                          [W] cobox_aos :: [a_aor] ~ [a_aoo] [" a type equality [a_aor]
                                                                                ~
                                                                                [a_aoo] " FQL.hs:56:59-75] (CNonCanonical)
                          [W] cobox_aot :: t_aoh ~ [a_aor] [" a type equality t_aoh
                                                                              ~
                                                                              [a_aor] " FQL.hs:56:59-61] (CNonCanonical)
                          [W] cobox_aow :: [a_aov] ~ [a_aor] [" a type equality [a_aov]
                                                                                ~
                                                                                [a_aor] " FQL.hs:56:66-75] (CNonCanonical)
                          [W] cobox_aox :: Char ~ a_aov [" a type equality Char
                                                                           ~
                                                                           a_aov " FQL.hs:56:73-75] (CNonCanonical)
                          [W] cobox_aoz :: [a_aoy] ~ t_amF [" a type equality [a_aoy]
                                                                              ~
                                                                              t_amF " FQL.hs:54:21-55] (CNonCanonical)
                          [W] cobox_aoB :: [a_aoA] ~ [a_aoy] [" a type equality [a_aoA]
                                                                                ~
                                                                                [a_aoy] " FQL.hs:54:21-48] (CNonCanonical)
                          [W] cobox_aoF :: [c_aoE] ~ [[a_aoA]] [" a type equality [c_aoE]
                                                                                  ~
                                                                                  [[a_aoA]] " FQL.hs:54:29-47] (CNonCanonical)
                          [W] cobox_aoG :: t_aof
                                           ~ (a_aoC -> b_aoD -> c_aoE) [" a type equality t_aof
                                                                                          ~
                                                                                          a_aoC
                                                                                          -> b_aoD
                                                                                          -> c_aoE " FQL.hs:54:37-40] (CNonCanonical)
                          [W] cobox_aoH :: t_amD ~ [a_aoC] [" a type equality t_amD
                                                                              ~
                                                                              [a_aoC] " FQL.hs:54:42-43] (CNonCanonical)
                          [W] cobox_aoI :: t_amE ~ [b_aoD] [" a type equality t_amE
                                                                              ~
                                                                              [b_aoD] " FQL.hs:54:45-47] (CNonCanonical)
                          [W] cobox_aoJ :: [Char] ~ [a_aoy] [" a type equality [Char]
                                                                               ~
                                                                               [a_aoy] " FQL.hs:54:53-55] (CNonCanonical)
                          [W] cobox_aoN :: [b_aoM] ~ t_amO [" a type equality [b_aoM]
                                                                              ~
                                                                              t_amO " FQL.hs:45:22-63] (CNonCanonical)
                          [W] cobox_aoU :: (a_aoT -> c_aoS)
                                           ~ (a_aoL -> b_aoM) [" a type equality a_aoT -> c_aoS
                                                                                 ~
                                                                                 a_aoL
                                                                                 -> b_aoM " FQL.hs:45:27-44] (CNonCanonical)
                          [W] $dOrd_arZ :: Ord
                                             a_arY [" a use of ‘maximum’ " FQL.hs:45:27-33] (CNonCanonical)
                          [W] cobox_as0 :: ([a_arY] -> a_arY)
                                           ~ (b_aoR -> c_aoS) [" a type equality [a_arY] -> a_arY
                                                                                 ~
                                                                                 b_aoR
                                                                                 -> c_aoS " FQL.hs:45:27-33] (CNonCanonical)
                          [W] cobox_as3 :: ([a_as1] -> [b_as2])
                                           ~ (a_aoT -> b_aoR) [" a type equality [a_as1] -> [b_as2]
                                                                                 ~
                                                                                 a_aoT
                                                                                 -> b_aoR " FQL.hs:45:35-44] (CNonCanonical)
                          [W] cobox_as5 :: ([a_as4] -> Int)
                                           ~ (a_as1 -> b_as2) [" a type equality [a_as4] -> Int
                                                                                 ~
                                                                                 a_as1
                                                                                 -> b_as2 " FQL.hs:45:39-44] (CNonCanonical)
                          [W] cobox_as8 :: [[a_as7]] ~ [a_aoL] [" a type equality [[a_as7]]
                                                                                  ~
                                                                                  [a_aoL] " FQL.hs:45:48-62] (CNonCanonical)
                          [W] cobox_as9 :: t_amN ~ [[a_as7]] [" a type equality t_amN
                                                                                ~
                                                                                [[a_as7]] " FQL.hs:45:58-62] (CNonCanonical)
                          [W] cobox_asd :: [b_asc] ~ t_amK [" a type equality [b_asc]
                                                                              ~
                                                                              t_amK " FQL.hs:50:22-64] (CNonCanonical)
                          [W] cobox_ase :: (t_amE -> t_amF)
                                           ~ (a_asb -> b_asc) [" a type equality t_amE -> t_amF
                                                                                 ~
                                                                                 a_asb
                                                                                 -> b_asc " FQL.hs:50:27-57] (CNonCanonical)
                          [W] cobox_asf :: t_amO ~ t_amD [" a type equality t_amO
                                                                            ~
                                                                            t_amD " FQL.hs:50:39-56] (CNonCanonical)
                          [W] cobox_asg :: t_amJ ~ t_amN [" a type equality t_amJ
                                                                            ~
                                                                            t_amN " FQL.hs:50:52-56] (CNonCanonical)
                          [W] cobox_ash :: t_amJ ~ [a_asb] [" a type equality t_amJ
                                                                              ~
                                                                              [a_asb] " FQL.hs:50:60-64] (CNonCanonical)
                          [W] cobox_ask :: t_amK ~ t_asj [" a type equality t_amK
                                                                            ~
                                                                            t_asj " FQL.hs:40:37-54] (CNonCanonical)
                          [W] cobox_asl :: t_amR ~ t_amJ [" a type equality t_amR
                                                                            ~
                                                                            t_amJ " FQL.hs:40:50-54] (CNonCanonical)
                          [W] cobox_asr :: b_asq ~ t_asm [" a type equality b_asq
                                                                            ~
                                                                            t_asm " FQL.hs:39:38-104] (CNonCanonical)
                          [W] cobox_ast :: ([a_ass] -> [a_ass])
                                           ~ (b_asq -> b_asq) [" a type equality [a_ass] -> [a_ass]
                                                                                 ~
                                                                                 b_asq
                                                                                 -> b_asq " FQL.hs:39:50-78] (CNonCanonical)
                          [W] cobox_asv :: [a_asu] ~ [a_ass] [" a type equality [a_asu]
                                                                                ~
                                                                                [a_ass] " FQL.hs:39:56-77] (CNonCanonical)
                          [W] cobox_asw :: [Char] ~ [a_asu] [" a type equality [Char]
                                                                               ~
                                                                               [a_asu] " FQL.hs:39:56-58] (CNonCanonical)
                          [W] cobox_asy :: [a_asx] ~ [a_asu] [" a type equality [a_asx]
                                                                                ~
                                                                                [a_asu] " FQL.hs:39:63-77] (CNonCanonical)
                          [W] cobox_asz :: a_asp ~ Int [" a type equality a_asp
                                                                          ~
                                                                          Int " FQL.hs:39:73] (CNonCanonical)
                          [W] cobox_asA :: Char ~ a_asx [" a type equality Char
                                                                           ~
                                                                           a_asx " FQL.hs:39:75-77] (CNonCanonical)
                          [W] cobox_asB :: [Char] ~ b_asq [" a type equality [Char]
                                                                             ~
                                                                             b_asq " FQL.hs:39:81-83] (CNonCanonical)
                          [W] cobox_asC :: t_amO ~ [a_asp] [" a type equality t_amO
                                                                              ~
                                                                              [a_asp] " FQL.hs:39:86-103] (CNonCanonical)
                          [W] cobox_asD :: t_amR ~ t_amN [" a type equality t_amR
                                                                            ~
                                                                            t_amN " FQL.hs:39:99-103] (CNonCanonical)
                          [W] cobox_asF :: [a_asE] ~ t_amS [" a type equality [a_asE]
                                                                              ~
                                                                              t_amS " FQL.hs:38:26-65] (CNonCanonical)
                          [W] cobox_asG :: t_asm ~ a_asE [" a type equality t_asm
                                                                            ~
                                                                            a_asE " FQL.hs:38:26-28] (CNonCanonical)
                          [W] cobox_asI :: [a_asH] ~ [a_asE] [" a type equality [a_asH]
                                                                                ~
                                                                                [a_asE] " FQL.hs:38:32-65] (CNonCanonical)
                          [W] cobox_asL :: a_asK ~ a_asH [" a type equality a_asK
                                                                            ~
                                                                            a_asH " FQL.hs:38:32-39] (CNonCanonical)
                          [W] cobox_asM :: t_asj ~ [a_asK] [" a type equality t_asj
                                                                              ~
                                                                              [a_asK] " FQL.hs:38:37-38] (CNonCanonical)
                          [W] cobox_asO :: [a_asN] ~ [a_asH] [" a type equality [a_asN]
                                                                                ~
                                                                                [a_asH] " FQL.hs:38:43-65] (CNonCanonical)
                          [W] cobox_asP :: t_asm ~ a_asN [" a type equality t_asm
                                                                            ~
                                                                            a_asN " FQL.hs:38:43-45] (CNonCanonical)
                          [W] cobox_asR :: [a_asQ] ~ [a_asN] [" a type equality [a_asQ]
                                                                                ~
                                                                                [a_asN] " FQL.hs:38:49-65] (CNonCanonical)
                          [W] cobox_asU :: [a_asT] ~ [a_asQ] [" a type equality [a_asT]
                                                                                ~
                                                                                [a_asQ] " FQL.hs:38:49-56] (CNonCanonical)
                          [W] cobox_asV :: t_asj ~ [a_asT] [" a type equality t_asj
                                                                              ~
                                                                              [a_asT] " FQL.hs:38:54-55] (CNonCanonical)
                          [W] cobox_asW :: t_asm ~ a_asQ [" a type equality t_asm
                                                                            ~
                                                                            a_asQ " FQL.hs:38:62-64] (CNonCanonical)
                          [W] cobox_at1 :: (a_at0 -> c_asZ)
                                           ~ (t_amV -> t_amW) [" a type equality a_at0 -> c_asZ
                                                                                 ~
                                                                                 t_amV
                                                                                 -> t_amW " FQL.hs:34:14-37] (CNonCanonical)
                          [W] cobox_at2 :: ([String] -> String)
                                           ~ (b_asY -> c_asZ) [" a type equality [String] -> String
                                                                                 ~
                                                                                 b_asY
                                                                                 -> c_asZ " FQL.hs:34:14-20] (CNonCanonical)
                          [W] cobox_at3 :: (t_amR -> t_amS)
                                           ~ (a_at0 -> b_asY) [" a type equality t_amR -> t_amS
                                                                                 ~
                                                                                 a_at0
                                                                                 -> b_asY " FQL.hs:34:22-37] (CNonCanonical)
                          [W] cobox_at6 :: [t_at5] ~ t_amZ [" a type equality [t_at5]
                                                                              ~
                                                                              t_amZ " FQL.hs:(22,3)-(29,3)] (CNonCanonical)
                          [W] cobox_at8 :: [t_at7] ~ t_at5 [" a type equality [t_at7]
                                                                              ~
                                                                              t_at5 " FQL.hs:22:5-44] (CNonCanonical)
                          [W] cobox_at9 :: [Char] ~ t_at7 [" a type equality [Char]
                                                                             ~
                                                                             t_at7 " FQL.hs:22:6-27] (CNonCanonical)
                          [W] cobox_ata :: [Char] ~ t_at7 [" a type equality [Char]
                                                                             ~
                                                                             t_at7 " FQL.hs:22:30-35] (CNonCanonical)
                          [W] cobox_atb :: [Char] ~ t_at7 [" a type equality [Char]
                                                                             ~
                                                                             t_at7 " FQL.hs:22:38-43] (CNonCanonical)
                          [W] cobox_atd :: [t_atc] ~ t_at5 [" a type equality [t_atc]
                                                                              ~
                                                                              t_at5 " FQL.hs:23:5-56] (CNonCanonical)
                          [W] cobox_ate :: [Char] ~ t_atc [" a type equality [Char]
                                                                             ~
                                                                             t_atc " FQL.hs:23:6-31] (CNonCanonical)
                          [W] cobox_atf :: [Char] ~ t_atc [" a type equality [Char]
                                                                             ~
                                                                             t_atc " FQL.hs:23:34-44] (CNonCanonical)
                          [W] cobox_atg :: [Char] ~ t_atc [" a type equality [Char]
                                                                             ~
                                                                             t_atc " FQL.hs:23:47-55] (CNonCanonical)
                          [W] cobox_ati :: [t_ath] ~ t_at5 [" a type equality [t_ath]
                                                                              ~
                                                                              t_at5 " FQL.hs:24:5-46] (CNonCanonical)
                          [W] cobox_atj :: [Char] ~ t_ath [" a type equality [Char]
                                                                             ~
                                                                             t_ath " FQL.hs:24:6-25] (CNonCanonical)
                          [W] cobox_atk :: [Char] ~ t_ath [" a type equality [Char]
                                                                             ~
                                                                             t_ath " FQL.hs:24:28-37] (CNonCanonical)
                          [W] cobox_atl :: [Char] ~ t_ath [" a type equality [Char]
                                                                             ~
                                                                             t_ath " FQL.hs:24:40-45] (CNonCanonical)
                          [W] cobox_atn :: [t_atm] ~ t_at5 [" a type equality [t_atm]
                                                                              ~
                                                                              t_at5 " FQL.hs:25:5-51] (CNonCanonical)
                          [W] cobox_ato :: [Char] ~ t_atm [" a type equality [Char]
                                                                             ~
                                                                             t_atm " FQL.hs:25:6-25] (CNonCanonical)
                          [W] cobox_atp :: [Char] ~ t_atm [" a type equality [Char]
                                                                             ~
                                                                             t_atm " FQL.hs:25:28-37] (CNonCanonical)
                          [W] cobox_atq :: [Char] ~ t_atm [" a type equality [Char]
                                                                             ~
                                                                             t_atm " FQL.hs:25:40-50] (CNonCanonical)
                          [W] cobox_ats :: [t_atr] ~ t_at5 [" a type equality [t_atr]
                                                                              ~
                                                                              t_at5 " FQL.hs:26:5-59] (CNonCanonical)
                          [W] cobox_att :: [Char] ~ t_atr [" a type equality [Char]
                                                                             ~
                                                                             t_atr " FQL.hs:26:6-25] (CNonCanonical)
                          [W] cobox_atu :: [Char] ~ t_atr [" a type equality [Char]
                                                                             ~
                                                                             t_atr " FQL.hs:26:28-45] (CNonCanonical)
                          [W] cobox_atv :: [Char] ~ t_atr [" a type equality [Char]
                                                                             ~
                                                                             t_atr " FQL.hs:26:48-58] (CNonCanonical)
                          [W] cobox_atx :: [t_atw] ~ t_at5 [" a type equality [t_atw]
                                                                              ~
                                                                              t_at5 " FQL.hs:27:5-66] (CNonCanonical)
                          [W] cobox_aty :: [Char] ~ t_atw [" a type equality [Char]
                                                                             ~
                                                                             t_atw " FQL.hs:27:6-32] (CNonCanonical)
                          [W] cobox_atz :: [Char] ~ t_atw [" a type equality [Char]
                                                                             ~
                                                                             t_atw " FQL.hs:27:35-52] (CNonCanonical)
                          [W] cobox_atA :: [Char] ~ t_atw [" a type equality [Char]
                                                                             ~
                                                                             t_atw " FQL.hs:27:55-65] (CNonCanonical)
                          [W] cobox_atC :: [t_atB] ~ t_at5 [" a type equality [t_atB]
                                                                              ~
                                                                              t_at5 " FQL.hs:28:5-63] (CNonCanonical)
                          [W] cobox_atD :: [Char] ~ t_atB [" a type equality [Char]
                                                                             ~
                                                                             t_atB " FQL.hs:28:6-40] (CNonCanonical)
                          [W] cobox_atE :: [Char] ~ t_atB [" a type equality [Char]
                                                                             ~
                                                                             t_atB " FQL.hs:28:43-50] (CNonCanonical)
                          [W] cobox_atF :: [Char] ~ t_atB [" a type equality [Char]
                                                                             ~
                                                                             t_atB " FQL.hs:28:53-62] (CNonCanonical)
                          [W] cobox_atI :: [t_atH] ~ t_an1 [" a type equality [t_atH]
                                                                              ~
                                                                              t_an1 " FQL.hs:(9,3)-(18,3)] (CNonCanonical)
                          [W] cobox_atK :: [t_atJ] ~ t_atH [" a type equality [t_atJ]
                                                                              ~
                                                                              t_atH " FQL.hs:9:5-40] (CNonCanonical)
                          [W] cobox_atL :: [Char] ~ t_atJ [" a type equality [Char]
                                                                             ~
                                                                             t_atJ " FQL.hs:9:6-15] (CNonCanonical)
                          [W] cobox_atM :: [Char] ~ t_atJ [" a type equality [Char]
                                                                             ~
                                                                             t_atJ " FQL.hs:9:18-39] (CNonCanonical)
                          [W] cobox_atO :: [t_atN] ~ t_atH [" a type equality [t_atN]
                                                                              ~
                                                                              t_atH " FQL.hs:10:5-42] (CNonCanonical)
                          [W] cobox_atP :: [Char] ~ t_atN [" a type equality [Char]
                                                                             ~
                                                                             t_atN " FQL.hs:10:6-13] (CNonCanonical)
                          [W] cobox_atQ :: [Char] ~ t_atN [" a type equality [Char]
                                                                             ~
                                                                             t_atN " FQL.hs:10:16-41] (CNonCanonical)
                          [W] cobox_atS :: [t_atR] ~ t_atH [" a type equality [t_atR]
                                                                              ~
                                                                              t_atH " FQL.hs:11:5-33] (CNonCanonical)
                          [W] cobox_atT :: [Char] ~ t_atR [" a type equality [Char]
                                                                             ~
                                                                             t_atR " FQL.hs:11:6-10] (CNonCanonical)
                          [W] cobox_atU :: [Char] ~ t_atR [" a type equality [Char]
                                                                             ~
                                                                             t_atR " FQL.hs:11:13-32] (CNonCanonical)
                          [W] cobox_atW :: [t_atV] ~ t_atH [" a type equality [t_atV]
                                                                              ~
                                                                              t_atH " FQL.hs:12:5-33] (CNonCanonical)
                          [W] cobox_atX :: [Char] ~ t_atV [" a type equality [Char]
                                                                             ~
                                                                             t_atV " FQL.hs:12:6-10] (CNonCanonical)
                          [W] cobox_atY :: [Char] ~ t_atV [" a type equality [Char]
                                                                             ~
                                                                             t_atV " FQL.hs:12:13-32] (CNonCanonical)
                          [W] cobox_au0 :: [t_atZ] ~ t_atH [" a type equality [t_atZ]
                                                                              ~
                                                                              t_atH " FQL.hs:13:5-34] (CNonCanonical)
                          [W] cobox_au1 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                             ~
                                                                             t_atZ " FQL.hs:13:6-11] (CNonCanonical)
                          [W] cobox_au2 :: [Char] ~ t_atZ [" a type equality [Char]
                                                                             ~
                                                                             t_atZ " FQL.hs:13:14-33] (CNonCanonical)
                          [W] cobox_au4 :: [t_au3] ~ t_atH [" a type equality [t_au3]
                                                                              ~
                                                                              t_atH " FQL.hs:14:5-38] (CNonCanonical)
                          [W] cobox_au5 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                             ~
                                                                             t_au3 " FQL.hs:14:6-15] (CNonCanonical)
                          [W] cobox_au6 :: [Char] ~ t_au3 [" a type equality [Char]
                                                                             ~
                                                                             t_au3 " FQL.hs:14:18-37] (CNonCanonical)
                          [W] cobox_au8 :: [t_au7] ~ t_atH [" a type equality [t_au7]
                                                                              ~
                                                                              t_atH " FQL.hs:15:5-46] (CNonCanonical)
                          [W] cobox_au9 :: [Char] ~ t_au7 [" a type equality [Char]
                                                                             ~
                                                                             t_au7 " FQL.hs:15:6-16] (CNonCanonical)
                          [W] cobox_aua :: [Char] ~ t_au7 [" a type equality [Char]
                                                                             ~
                                                                             t_au7 " FQL.hs:15:19-45] (CNonCanonical)
                          [W] cobox_auc :: [t_aub] ~ t_atH [" a type equality [t_aub]
                                                                              ~
                                                                              t_atH " FQL.hs:16:5-54] (CNonCanonical)
                          [W] cobox_aud :: [Char] ~ t_aub [" a type equality [Char]
                                                                             ~
                                                                             t_aub " FQL.hs:16:6-16] (CNonCanonical)
                          [W] cobox_aue :: [Char] ~ t_aub [" a type equality [Char]
                                                                             ~
                                                                             t_aub " FQL.hs:16:19-53] (CNonCanonical)
                          [W] cobox_aug :: [t_auf] ~ t_atH [" a type equality [t_auf]
                                                                              ~
                                                                              t_atH " FQL.hs:17:5-48] (CNonCanonical)
                          [W] cobox_auh :: [Char] ~ t_auf [" a type equality [Char]
                                                                             ~
                                                                             t_auf " FQL.hs:17:6-10] (CNonCanonical)
                          [W] cobox_aui :: [Char] ~ t_auf [" a type equality [Char]
                                                                             ~
                                                                             t_auf " FQL.hs:17:13-47] (CNonCanonical)
                          [W] cobox_aul :: a_auk
                                           ~ (t_an3 -> t_an4 -> t_an5) [" a type equality a_auk
                                                                                          ~
                                                                                          t_an3
                                                                                          -> t_an4
                                                                                          -> t_an5 " FQL.hs:6:12-20] (CNonCanonical)
                          [W] cobox_auo :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                              ~
                                                                              t_amm " FQL.hs:71:13-18] (CNonCanonical)
                          [W] cobox_aup :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " FQL.hs:71:23-49] (CNonCanonical)
                          [W] cobox_aus :: [b_aur] ~ [Bool] [" a type equality [b_aur]
                                                                               ~
                                                                               [Bool] " FQL.hs:71:27-48] (CNonCanonical)
                          [W] cobox_aut :: (t_an4 -> t_an5)
                                           ~ (a_auq -> b_aur) [" a type equality t_an4 -> t_an5
                                                                                 ~
                                                                                 a_auq
                                                                                 -> b_aur " FQL.hs:71:32-42] (CNonCanonical)
                          [W] cobox_auu :: t_aun ~ t_an3 [" a type equality t_aun
                                                                            ~
                                                                            t_an3 " FQL.hs:71:41-42] (CNonCanonical)
                          [W] cobox_auv :: t_aml ~ [a_auq] [" a type equality t_aml
                                                                              ~
                                                                              [a_auq] " FQL.hs:71:45-48] (CNonCanonical)
                          [W] $dNum_awD :: Num
                                             a_awC [" the literal ‘0’ " FQL.hs:71:53] (CNonCanonical)
                          [W] cobox_awE :: (Integer -> a_awC)
                                           ~ (Integer -> t_amn) [" a type equality Integer -> a_awC
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_amn " FQL.hs:71:53] (CNonCanonical)
                          [W] cobox_awF :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " FQL.hs:72:23-31] (CNonCanonical)
                          [W] $dNum_awH :: Num
                                             a_awG [" a use of ‘+’ " FQL.hs:72:55] (CNonCanonical)
                          [W] cobox_awI :: a_awG ~ t_amn [" a type equality a_awG
                                                                            ~
                                                                            t_amn " FQL.hs:72:53-70] (CNonCanonical)
                          [W] $dNum_awK :: Num
                                             a_awJ [" the literal ‘1’ " FQL.hs:72:53] (CNonCanonical)
                          [W] cobox_awL :: (Integer -> a_awJ)
                                           ~ (Integer -> a_awG) [" a type equality Integer -> a_awJ
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_awG " FQL.hs:72:53] (CNonCanonical)
                          [W] cobox_awM :: t_amn ~ a_awG [" a type equality t_amn
                                                                            ~
                                                                            a_awG " FQL.hs:72:57-70] (CNonCanonical)
                          [W] cobox_awN :: t_aml ~ t_aml [" a type equality t_aml
                                                                            ~
                                                                            t_aml " FQL.hs:72:63-66] (CNonCanonical)
                          [W] cobox_awO :: [t_aun] ~ t_amm [" a type equality [t_aun]
                                                                              ~
                                                                              t_amm " FQL.hs:72:68-70] (CNonCanonical)
                          [W] cobox_awS :: [b_awR] ~ t_amt [" a type equality [b_awR]
                                                                              ~
                                                                              t_amt " FQL.hs:66:34-68] (CNonCanonical)
                          [W] cobox_awT :: t_amn ~ b_awR [" a type equality t_amn
                                                                            ~
                                                                            b_awR " FQL.hs:66:44-62] (CNonCanonical)
                          [W] cobox_awV :: [t_awU] ~ t_aml [" a type equality [t_awU]
                                                                              ~
                                                                              t_aml " FQL.hs:66:50-52] (CNonCanonical)
                          [W] cobox_awW :: a_awQ ~ t_awU [" a type equality a_awQ
                                                                            ~
                                                                            t_awU " FQL.hs:66:51] (CNonCanonical)
                          [W] cobox_awX :: t_amr ~ t_amm [" a type equality t_amr
                                                                            ~
                                                                            t_amm " FQL.hs:66:54-62] (CNonCanonical)
                          [W] cobox_awY :: t_ams ~ [a_awQ] [" a type equality t_ams
                                                                              ~
                                                                              [a_awQ] " FQL.hs:66:65-68] (CNonCanonical)
                          [W] cobox_ax1 :: [[a_ax0]] ~ t_amz [" a type equality [[a_ax0]]
                                                                                ~
                                                                                t_amz " FQL.hs:61:23-96] (CNonCanonical)
                          [W] cobox_ax4 :: [b_ax3] ~ [[a_ax0]] [" a type equality [b_ax3]
                                                                                  ~
                                                                                  [[a_ax0]] " FQL.hs:61:34-95] (CNonCanonical)
                          [W] cobox_ax6 :: (Int -> a_ax5)
                                           ~ (a_ax2 -> b_ax3) [" a type equality Int -> a_ax5
                                                                                 ~
                                                                                 a_ax2
                                                                                 -> b_ax3 " FQL.hs:61:39-58] (CNonCanonical)
                          [W] cobox_ax8 :: [[a_ax7]] ~ [a_ax5] [" a type equality [[a_ax7]]
                                                                                  ~
                                                                                  [a_ax5] " FQL.hs:61:40-54] (CNonCanonical)
                          [W] cobox_ax9 :: t_amy ~ [[a_ax7]] [" a type equality t_amy
                                                                                ~
                                                                                [[a_ax7]] " FQL.hs:61:50-54] (CNonCanonical)
                          [W] cobox_axa :: t_amt ~ [a_ax2] [" a type equality t_amt
                                                                              ~
                                                                              [a_ax2] " FQL.hs:61:62-94] (CNonCanonical)
                          [W] cobox_axc :: a_axb ~ t_amr [" a type equality a_axb
                                                                            ~
                                                                            t_amr " FQL.hs:61:79-88] (CNonCanonical)
                          [W] cobox_axd :: t_amy ~ [a_axb] [" a type equality t_amy
                                                                              ~
                                                                              [a_axb] " FQL.hs:61:84-88] (CNonCanonical)
                          [W] cobox_axe :: t_amx ~ t_ams [" a type equality t_amx
                                                                            ~
                                                                            t_ams " FQL.hs:61:91-94] (CNonCanonical)
                          [W] cobox_axh :: [a_axg] ~ t_amg [" a type equality [a_axg]
                                                                              ~
                                                                              t_amg " FQL.hs:79:28-100] (CNonCanonical)
                          [W] cobox_axj :: a_axi ~ a_axg [" a type equality a_axi
                                                                            ~
                                                                            a_axg " FQL.hs:79:29-38] (CNonCanonical)
                          [W] cobox_axk :: t_amf ~ [a_axi] [" a type equality t_amf
                                                                              ~
                                                                              [a_axi] " FQL.hs:79:34-38] (CNonCanonical)
                          [W] cobox_axl :: t_am8 ~ [a_axg] [" a type equality t_am8
                                                                              ~
                                                                              [a_axg] " FQL.hs:79:44-99] (CNonCanonical)
                          [W] cobox_axm :: t_amn ~ t_am5 [" a type equality t_amn
                                                                            ~
                                                                            t_am5 " FQL.hs:79:56-80] (CNonCanonical)
                          [W] cobox_axo :: a_axn ~ t_aml [" a type equality a_axn
                                                                            ~
                                                                            t_aml " FQL.hs:79:63-72] (CNonCanonical)
                          [W] cobox_axp :: t_amf ~ [a_axn] [" a type equality t_amf
                                                                              ~
                                                                              [a_axn] " FQL.hs:79:68-72] (CNonCanonical)
                          [W] cobox_axq :: t_amd ~ t_amm [" a type equality t_amd
                                                                            ~
                                                                            t_amm " FQL.hs:79:75-80] (CNonCanonical)
                          [W] cobox_axr :: t_ame ~ t_am6 [" a type equality t_ame
                                                                            ~
                                                                            t_am6 " FQL.hs:79:83-86] (CNonCanonical)
                          [W] cobox_axt :: [a_axs] ~ t_am7 [" a type equality [a_axs]
                                                                              ~
                                                                              t_am7 " FQL.hs:79:89-98] (CNonCanonical)
                          [W] cobox_axu :: t_amf ~ [a_axs] [" a type equality t_amf
                                                                              ~
                                                                              [a_axs] " FQL.hs:79:94-98] (CNonCanonical)
                          [W] cobox_axx :: [a_axw] ~ t_alL [" a type equality [a_axw]
                                                                              ~
                                                                              t_alL " FQL.hs:105:27-88] (CNonCanonical)
                          [W] cobox_axy :: t_an5 ~ Bool [" a type equality t_an5
                                                                           ~
                                                                           Bool " FQL.hs:105:40-61] (CNonCanonical)
                          [W] cobox_axA :: a_axz ~ t_an3 [" a type equality a_axz
                                                                            ~
                                                                            t_an3 " FQL.hs:105:50-53] (CNonCanonical)
                          [W] cobox_axB :: a_axw ~ [a_axz] [" a type equality a_axw
                                                                              ~
                                                                              [a_axz] " FQL.hs:105:50] (CNonCanonical)
                          [W] cobox_axC :: t_alJ ~ Int [" a type equality t_alJ
                                                                          ~
                                                                          Int " FQL.hs:105:53] (CNonCanonical)
                          [W] cobox_axE :: a_axD ~ t_an4 [" a type equality a_axD
                                                                            ~
                                                                            t_an4 " FQL.hs:105:57-60] (CNonCanonical)
                          [W] cobox_axF :: a_axw ~ [a_axD] [" a type equality a_axw
                                                                              ~
                                                                              [a_axD] " FQL.hs:105:57] (CNonCanonical)
                          [W] cobox_axG :: t_alK ~ Int [" a type equality t_alK
                                                                          ~
                                                                          Int " FQL.hs:105:60] (CNonCanonical)
                          [W] cobox_axH :: t_alD ~ [a_axw] [" a type equality t_alD
                                                                              ~
                                                                              [a_axw] " FQL.hs:105:65-87] (CNonCanonical)
                          [W] cobox_axI :: t_alH ~ t_alB [" a type equality t_alH
                                                                            ~
                                                                            t_alB " FQL.hs:105:78-81] (CNonCanonical)
                          [W] cobox_axJ :: t_alI ~ t_alC [" a type equality t_alI
                                                                            ~
                                                                            t_alC " FQL.hs:105:83-87] (CNonCanonical)
                          [W] $dNum_axN :: Num
                                             a_axM [" a use of ‘+’ " FQL.hs:99:62] (CNonCanonical)
                          [W] cobox_axO :: a_axM ~ t_axL [" a type equality a_axM
                                                                            ~
                                                                            t_axL " FQL.hs:99:30-81] (CNonCanonical)
                          [W] cobox_axP :: t_amn ~ a_axM [" a type equality t_amn
                                                                            ~
                                                                            a_axM " FQL.hs:99:30-60] (CNonCanonical)
                          [W] cobox_axR :: a_axQ ~ t_aml [" a type equality a_axQ
                                                                            ~
                                                                            t_aml " FQL.hs:99:37-45] (CNonCanonical)
                          [W] cobox_axS :: t_alR ~ [a_axQ] [" a type equality t_alR
                                                                              ~
                                                                              [a_axQ] " FQL.hs:99:42-45] (CNonCanonical)
                          [W] cobox_axU :: a_axT ~ t_amm [" a type equality a_axT
                                                                            ~
                                                                            t_amm " FQL.hs:99:50-59] (CNonCanonical)
                          [W] cobox_axV :: t_alS ~ [a_axT] [" a type equality t_alS
                                                                              ~
                                                                              [a_axT] " FQL.hs:99:55-59] (CNonCanonical)
                          [W] cobox_axX :: Int ~ a_axM [" a type equality Int
                                                                          ~
                                                                          a_axM " FQL.hs:99:64-81] (CNonCanonical)
                          [W] cobox_axZ :: a_axY ~ [a_axW] [" a type equality a_axY
                                                                              ~
                                                                              [a_axW] " FQL.hs:99:72-80] (CNonCanonical)
                          [W] cobox_ay0 :: t_alR ~ [a_axY] [" a type equality t_alR
                                                                              ~
                                                                              [a_axY] " FQL.hs:99:77-80] (CNonCanonical)
                          [W] cobox_ay2 :: t_amn ~ t_ay1 [" a type equality t_amn
                                                                            ~
                                                                            t_ay1 " FQL.hs:98:30-59] (CNonCanonical)
                          [W] cobox_ay4 :: a_ay3 ~ t_aml [" a type equality a_ay3
                                                                            ~
                                                                            t_aml " FQL.hs:98:37-46] (CNonCanonical)
                          [W] cobox_ay5 :: t_alS ~ [a_ay3] [" a type equality t_alS
                                                                              ~
                                                                              [a_ay3] " FQL.hs:98:42-46] (CNonCanonical)
                          [W] cobox_ay7 :: a_ay6 ~ t_amm [" a type equality a_ay6
                                                                            ~
                                                                            t_amm " FQL.hs:98:50-58] (CNonCanonical)
                          [W] cobox_ay8 :: t_alR ~ [a_ay6] [" a type equality t_alR
                                                                              ~
                                                                              [a_ay6] " FQL.hs:98:55-58] (CNonCanonical)
                          [W] cobox_ayb :: [b_aya] ~ t_alT [" a type equality [b_aya]
                                                                              ~
                                                                              t_alT " FQL.hs:97:20-82] (CNonCanonical)
                          [W] cobox_ayd :: [a_ayc] ~ b_aya [" a type equality [a_ayc]
                                                                              ~
                                                                              b_aya " FQL.hs:97:30-55] (CNonCanonical)
                          [W] cobox_ayf :: [a_aye] ~ [a_ayc] [" a type equality [a_aye]
                                                                                ~
                                                                                [a_ayc] " FQL.hs:97:30-37] (CNonCanonical)
                          [W] cobox_ayg :: t_axL ~ Int [" a type equality t_axL
                                                                          ~
                                                                          Int " FQL.hs:97:35] (CNonCanonical)
                          [W] cobox_ayh :: a_ay9 ~ [a_aye] [" a type equality a_ay9
                                                                              ~
                                                                              [a_aye] " FQL.hs:97:37] (CNonCanonical)
                          [W] cobox_ayk :: [a_ayj] ~ [a_ayc] [" a type equality [a_ayj]
                                                                                ~
                                                                                [a_ayc] " FQL.hs:97:43-54] (CNonCanonical)
                          [W] $dNum_aym :: Num
                                             a_ayl [" a use of ‘+’ " FQL.hs:97:50] (CNonCanonical)
                          [W] cobox_ayn :: a_ayl ~ Int [" a type equality a_ayl
                                                                          ~
                                                                          Int " FQL.hs:97:49-51] (CNonCanonical)
                          [W] cobox_ayo :: t_axL ~ a_ayl [" a type equality t_axL
                                                                            ~
                                                                            a_ayl " FQL.hs:97:49] (CNonCanonical)
                          [W] $dNum_ayq :: Num
                                             a_ayp [" the literal ‘1’ " FQL.hs:97:51] (CNonCanonical)
                          [W] cobox_ayr :: (Integer -> a_ayp)
                                           ~ (Integer -> a_ayl) [" a type equality Integer -> a_ayp
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_ayl " FQL.hs:97:51] (CNonCanonical)
                          [W] cobox_ays :: a_ay9 ~ [a_ayj] [" a type equality a_ay9
                                                                              ~
                                                                              [a_ayj] " FQL.hs:97:54] (CNonCanonical)
                          [W] cobox_ayt :: t_alL ~ [a_ay9] [" a type equality t_alL
                                                                              ~
                                                                              [a_ay9] " FQL.hs:97:59-81] (CNonCanonical)
                          [W] cobox_ayu :: t_alR ~ t_alH [" a type equality t_alR
                                                                            ~
                                                                            t_alH " FQL.hs:97:68-71] (CNonCanonical)
                          [W] cobox_ayv :: t_alS ~ t_alI [" a type equality t_alS
                                                                            ~
                                                                            t_alI " FQL.hs:97:73-77] (CNonCanonical)
                          [W] cobox_ayw :: t_ay1 ~ t_alJ [" a type equality t_ay1
                                                                            ~
                                                                            t_alJ " FQL.hs:97:79] (CNonCanonical)
                          [W] cobox_ayx :: t_axL ~ t_alK [" a type equality t_axL
                                                                            ~
                                                                            t_alK " FQL.hs:97:81] (CNonCanonical)}
Tc9

FQL.hs:79:75:
    Couldn't match type ‘[Char]’ with ‘Char’
    Expected type: [String]
      Actual type: String
    In the second argument of ‘colno’, namely ‘string’
    In the first argument of ‘selectRows’, namely
      ‘(colno (head table) string)’
