rn12
rn13
Tc2 (src)
Tc3
kcTyClGroup
  module Pretty
  type Doc = [String]
kcTyClGroup: initial kinds []
env2 []
kcd1 Doc []
tc_lhs_type:
  [String]
  Expected kind ‘k_ags’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_ags := *
kcd2 Doc
Generalise kind
  Doc
  k_ags
  []
  *
kcTyClGroup result [(Doc, *)]
tcTyAndCl generalized kinds [(Doc, *)]
tcTyAndCl-x type Doc = [String]
env2 []
env2 []
tc-syn
  Doc
  [(r8l, AThing *)]
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Doc’]
checkValidType [String] :: *
checkValidType done [String] :: *
env2 []
Adding instances:
addFamInsts
env2 []
tcDeriving
tcDeriving False
tcDeriving 1 []
Adding instances:
Tc3b
tcAmpMissingParentClassWarn/isInsts []
tcAmpMissingParentClassWarn/isInsts []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Monad.join []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.<*> []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.pure []
Tc4
Tc4a
env2 []
Tc5
tc_lhs_type:
  [Doc]
  Expected a type
tc_lhs_type:
  Doc
  Expected kind ‘*’
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Doc] -> Doc
Before unification
utype_defer
  cobox_amO
  [Doc]
  t_amM
  a type equality [Doc] ~ t_amM
  In the type signature for ‘verticaleLijst’:
    verticaleLijst :: [Doc] -> Doc
utype_defer
  cobox_amP
  Doc
  t_amN
  a type equality Doc ~ t_amN
  In the type signature for ‘verticaleLijst’:
    verticaleLijst :: [Doc] -> Doc
checkValidType t_amM -> t_amN :: *
checkValidType done t_amM -> t_amN :: *
tc_lhs_type:
  [Doc]
  Expected a type
tc_lhs_type:
  Doc
  Expected kind ‘*’
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Doc] -> Doc
Before unification
utype_defer
  cobox_amS
  [Doc]
  t_amQ
  a type equality [Doc] ~ t_amQ
  In the type signature for ‘utrechtseLijst’:
    utrechtseLijst :: [Doc] -> Doc
utype_defer
  cobox_amT
  Doc
  t_amR
  a type equality Doc ~ t_amR
  In the type signature for ‘utrechtseLijst’:
    utrechtseLijst :: [Doc] -> Doc
checkValidType t_amQ -> t_amR :: *
checkValidType done t_amQ -> t_amR :: *
tc_lhs_type:
  [Doc]
  Expected a type
tc_lhs_type:
  Doc
  Expected kind ‘*’
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Doc] -> Doc
Before unification
utype_defer
  cobox_amW
  [Doc]
  t_amU
  a type equality [Doc] ~ t_amU
  In the type signature for ‘haskellLijst’:
    haskellLijst :: [Doc] -> Doc
utype_defer
  cobox_amX
  Doc
  t_amV
  a type equality Doc ~ t_amV
  In the type signature for ‘haskellLijst’:
    haskellLijst :: [Doc] -> Doc
checkValidType t_amU -> t_amV :: *
checkValidType done t_amU -> t_amV :: *
tc_lhs_type:
  [Doc]
  Expected a type
tc_lhs_type:
  Doc
  Expected kind ‘*’
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Doc] -> Doc
Before unification
utype_defer
  cobox_an0
  [Doc]
  t_amY
  a type equality [Doc] ~ t_amY
  In the type signature for ‘kommaLijst’: kommaLijst :: [Doc] -> Doc
utype_defer
  cobox_an1
  Doc
  t_amZ
  a type equality Doc ~ t_amZ
  In the type signature for ‘kommaLijst’: kommaLijst :: [Doc] -> Doc
checkValidType t_amY -> t_amZ :: *
checkValidType done t_amY -> t_amZ :: *
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc -> Doc
  Expected a type
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Doc -> Doc -> Doc
Before unification
utype_defer
  cobox_an5
  Doc
  t_an2
  a type equality Doc ~ t_an2
  In the type signature for ‘<+>’: (<+>) :: Doc -> Doc -> Doc
utype_defer
  cobox_an6
  Doc
  t_an3
  a type equality Doc ~ t_an3
  In the type signature for ‘<+>’: (<+>) :: Doc -> Doc -> Doc
utype_defer
  cobox_an7
  Doc
  t_an4
  a type equality Doc ~ t_an4
  In the type signature for ‘<+>’: (<+>) :: Doc -> Doc -> Doc
checkValidType t_an2 -> t_an3 -> t_an4 :: *
checkValidType done t_an2 -> t_an3 -> t_an4 :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Int -> String
Before unification
utype_defer
  cobox_ana
  Int
  t_an8
  a type equality Int ~ t_an8
  In the type signature for ‘spaties’: spaties :: Int -> String
utype_defer
  cobox_anb
  String
  t_an9
  a type equality String ~ t_an9
  In the type signature for ‘spaties’: spaties :: Int -> String
checkValidType t_an8 -> t_an9 :: *
checkValidType done t_an8 -> t_an9 :: *
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  IO ()
  Expected a type
tc_lhs_type:
  IO
  Expected kind ‘k_anc’
lk1 IO
lk2 IO Type constructor ‘IO’
writeMetaTyVar k_anc := * -> *
tc_lhs_type:
  ()
  The first argument of ‘IO’ should have kind ‘*’
tcCheckHsTypeAndGen Doc -> IO ()
Before unification
utype_defer
  cobox_anm
  Doc
  t_ank
  a type equality Doc ~ t_ank
  In the type signature for ‘layout’: layout :: Doc -> IO ()
utype_defer
  cobox_ann
  IO ()
  t_anl
  a type equality IO () ~ t_anl
  In the type signature for ‘layout’: layout :: Doc -> IO ()
checkValidType t_ank -> t_anl :: *
checkValidType done t_ank -> t_anl :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Doc -> Doc
  Expected a type
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Int -> Doc -> Doc
Before unification
utype_defer
  cobox_anr
  Int
  t_ano
  a type equality Int ~ t_ano
  In the type signature for ‘springIn’: springIn :: Int -> Doc -> Doc
utype_defer
  cobox_ans
  Doc
  t_anp
  a type equality Doc ~ t_anp
  In the type signature for ‘springIn’: springIn :: Int -> Doc -> Doc
utype_defer
  cobox_ant
  Doc
  t_anq
  a type equality Doc ~ t_anq
  In the type signature for ‘springIn’: springIn :: Int -> Doc -> Doc
checkValidType t_ano -> t_anp -> t_anq :: *
checkValidType done t_ano -> t_anp -> t_anq :: *
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc -> Doc
  Expected a type
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Doc -> Doc -> Doc
Before unification
utype_defer
  cobox_anx
  Doc
  t_anu
  a type equality Doc ~ t_anu
  In the type signature for ‘<->’: (<->) :: Doc -> Doc -> Doc
utype_defer
  cobox_any
  Doc
  t_anv
  a type equality Doc ~ t_anv
  In the type signature for ‘<->’: (<->) :: Doc -> Doc -> Doc
utype_defer
  cobox_anz
  Doc
  t_anw
  a type equality Doc ~ t_anw
  In the type signature for ‘<->’: (<->) :: Doc -> Doc -> Doc
checkValidType t_anu -> t_anv -> t_anw :: *
checkValidType done t_anu -> t_anv -> t_anw :: *
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc -> Doc
  Expected a type
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Doc -> Doc -> Doc
Before unification
utype_defer
  cobox_anD
  Doc
  t_anA
  a type equality Doc ~ t_anA
  In the type signature for ‘<|>’: (<|>) :: Doc -> Doc -> Doc
utype_defer
  cobox_anE
  Doc
  t_anB
  a type equality Doc ~ t_anB
  In the type signature for ‘<|>’: (<|>) :: Doc -> Doc -> Doc
utype_defer
  cobox_anF
  Doc
  t_anC
  a type equality Doc ~ t_anC
  In the type signature for ‘<|>’: (<|>) :: Doc -> Doc -> Doc
checkValidType t_anA -> t_anB -> t_anC :: *
checkValidType done t_anA -> t_anB -> t_anC :: *
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen String -> Doc
Before unification
utype_defer
  cobox_anI
  String
  t_anG
  a type equality String ~ t_anG
  In the type signature for ‘tekst’: tekst :: String -> Doc
utype_defer
  cobox_anJ
  Doc
  t_anH
  a type equality Doc ~ t_anH
  In the type signature for ‘tekst’: tekst :: String -> Doc
checkValidType t_anG -> t_anH :: *
checkValidType done t_anG -> t_anH :: *
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Doc
Before unification
utype_defer
  cobox_anL
  Doc
  t_anK
  a type equality Doc ~ t_anK
  In the type signature for ‘leeg’: leeg :: Doc
checkValidType t_anK :: OpenKind
checkValidType done t_anK :: OpenKind
env2
  [(verticaleLijst,
    Identifier[verticaleLijst::t_amM -> t_amN, <NotTopLevel>]),
   (utrechtseLijst,
    Identifier[utrechtseLijst::t_amQ -> t_amR, <NotTopLevel>]),
   (haskellLijst,
    Identifier[haskellLijst::t_amU -> t_amV, <NotTopLevel>]),
   (kommaLijst,
    Identifier[kommaLijst::t_amY -> t_amZ, <NotTopLevel>]),
   (<+>, Identifier[<+>::t_an2 -> t_an3 -> t_an4, <NotTopLevel>]),
   (spaties, Identifier[spaties::t_an8 -> t_an9, <NotTopLevel>]),
   (layout, Identifier[layout::t_ank -> t_anl, <NotTopLevel>]),
   (springIn,
    Identifier[springIn::t_ano -> t_anp -> t_anq, <NotTopLevel>]),
   (<->, Identifier[<->::t_anu -> t_anv -> t_anw, <NotTopLevel>]),
   (<|>, Identifier[<|>::t_anA -> t_anB -> t_anC, <NotTopLevel>]),
   (tekst, Identifier[tekst::t_anG -> t_anH, <NotTopLevel>]),
   (leeg, Identifier[leeg::t_anK, <NotTopLevel>])]
------------------------------------------------
Bindings for { [spaties]
Generalisation plan
  CheckGen spaties :: t_an8 -> t_an9
                      []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  spaties
  t_an8 -> t_an9
tcMatchesFun
  spaties
  t_an8 -> t_an9
tcGen
env2 [(n, Identifier[n::t_an8, <NotTopLevel>])]
tcBody t_an9
Instantiating
  replicate with [a_anO]
                 []
utype_defer
  cobox_anP
  [a_anO]
  t_an9
  a type equality [a_anO] ~ t_an9
  In the expression: replicate n ' '
  In an equation for ‘spaties’: spaties n = replicate n ' '
tcPolyExprNC Int
tcGen
utype_defer
  cobox_anQ
  t_an8
  Int
  a type equality t_an8 ~ Int
  In the first argument of ‘replicate’, namely ‘n’
  In the expression: replicate n ' '
tcPolyExprNC a_anO
tcGen
utype_defer
  cobox_anR
  Char
  a_anO
  a type equality Char ~ a_anO
  In the second argument of ‘replicate’, namely ‘' '’
  In the expression: replicate n ' '
  In an equation for ‘spaties’: spaties n = replicate n ' '
addInlinePrags
  spaties
  []
csb2 [spaties]
} End of bindings for
  [spaties]
  NonRecursive
  spaties t_an8 -> t_an9
env2
  [(spaties, Identifier[spaties::t_an8 -> t_an9, <NotTopLevel>])]
------------------------------------------------
Bindings for { [layout]
Generalisation plan
  CheckGen layout :: t_ank -> t_anl
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  layout
  t_ank -> t_anl
tcMatchesFun
  layout
  t_ank -> t_anl
tcGen
env2 [(doc, Identifier[doc::t_ank, <NotTopLevel>])]
tcBody t_anl
utype_defer
  cobox_anT
  IO ()
  t_anl
  a type equality IO () ~ t_anl
  In the expression: putStr (unlines doc)
  In an equation for ‘layout’: layout doc = putStr (unlines doc)
tcPolyExprNC String
tcGen
utype_defer
  cobox_anU
  String
  String
  a type equality String ~ String
  In the first argument of ‘putStr’, namely ‘(unlines doc)’
  In the expression: putStr (unlines doc)
tcPolyExprNC [String]
tcGen
utype_defer
  cobox_anV
  t_ank
  [String]
  a type equality t_ank ~ [String]
  In the first argument of ‘unlines’, namely ‘doc’
  In the first argument of ‘putStr’, namely ‘(unlines doc)’
addInlinePrags
  layout
  []
csb2 [layout]
} End of bindings for
  [layout]
  NonRecursive
  layout t_ank -> t_anl
env2 [(layout, Identifier[layout::t_ank -> t_anl, <NotTopLevel>])]
------------------------------------------------
Bindings for { [springIn]
Generalisation plan
  CheckGen springIn :: t_ano -> t_anp -> t_anq
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  springIn
  t_ano -> t_anp -> t_anq
tcMatchesFun
  springIn
  t_ano -> t_anp -> t_anq
tcGen
env2 [(n, Identifier[n::t_ano, <NotTopLevel>])]
env2 [(regels, Identifier[regels::t_anp, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [spatiesErvoor]
Generalisation plan NoGen
addInlinePrags
  spatiesErvoor
  []
tcMatchesFun
  spatiesErvoor
  t_anX
tcGen
utype_defer
  cobox_ao0
  t_anX
  t_anY -> t_anZ
  a type equality t_anX ~ t_anY -> t_anZ
  In an equation for ‘springIn’:
      springIn n regels
        = map spatiesErvoor regels
        where
            spatiesErvoor regel = spaties n ++ regel
env2 [(regel, Identifier[regel::t_anY, <NotTopLevel>])]
tcBody t_anZ
Non Application rule (++)
Instantiating
  ++ with [a_ao2]
          []
utype_defer
  cobox_ao3
  [a_ao2]
  t_anZ
  a type equality [a_ao2] ~ t_anZ
  In the expression: spaties n ++ regel
  In an equation for ‘spatiesErvoor’:
      spatiesErvoor regel = spaties n ++ regel
  In an equation for ‘springIn’:
      springIn n regels
        = map spatiesErvoor regels
        where
            spatiesErvoor regel = spaties n ++ regel
tcPolyExprNC [a_ao2]
tcGen
utype_defer
  cobox_ao4
  t_an9
  [a_ao2]
  a type equality t_an9 ~ [a_ao2]
  In the first argument of ‘(++)’, namely ‘spaties n’
  In the expression: spaties n ++ regel
tcPolyExprNC t_an8
tcGen
utype_defer
  cobox_ao5
  t_ano
  t_an8
  a type equality t_ano ~ t_an8
  In the first argument of ‘spaties’, namely ‘n’
  In the first argument of ‘(++)’, namely ‘spaties n’
tcPolyExprNC [a_ao2]
tcGen
utype_defer
  cobox_ao6
  t_anY
  [a_ao2]
  a type equality t_anY ~ [a_ao2]
  In the second argument of ‘(++)’, namely ‘regel’
  In the expression: spaties n ++ regel
csb2 [spatiesErvoor]
} End of bindings for
  [spatiesErvoor]
  NonRecursive
  spatiesErvoor t_anX
env2
  [(spatiesErvoor, Identifier[spatiesErvoor::t_anX, <NotTopLevel>])]
tcBody t_anq
Instantiating
  map with [a_ao9, b_aoa]
           []
utype_defer
  cobox_aob
  [b_aoa]
  t_anq
  a type equality [b_aoa] ~ t_anq
  In the expression: map spatiesErvoor regels
  In an equation for ‘springIn’:
      springIn n regels
        = map spatiesErvoor regels
        where
            spatiesErvoor regel = spaties n ++ regel
tcPolyExprNC a_ao9 -> b_aoa
tcGen
utype_defer
  cobox_aoc
  t_anX
  a_ao9 -> b_aoa
  a type equality t_anX ~ a_ao9 -> b_aoa
  In the first argument of ‘map’, namely ‘spatiesErvoor’
  In the expression: map spatiesErvoor regels
tcPolyExprNC [a_ao9]
tcGen
utype_defer
  cobox_aod
  t_anp
  [a_ao9]
  a type equality t_anp ~ [a_ao9]
  In the second argument of ‘map’, namely ‘regels’
  In the expression: map spatiesErvoor regels
addInlinePrags
  springIn
  []
csb2 [springIn]
} End of bindings for
  [springIn]
  NonRecursive
  springIn t_ano -> t_anp -> t_anq
env2
  [(springIn,
    Identifier[springIn::t_ano -> t_anp -> t_anq, <NotTopLevel>])]
------------------------------------------------
Bindings for { [<->]
Generalisation plan
  CheckGen <-> :: t_anu -> t_anv -> t_anw
                  []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  <->
  t_anu -> t_anv -> t_anw
tcMatchesFun
  <->
  t_anu -> t_anv -> t_anw
tcGen
env2 [(boven, Identifier[boven::t_anu, <NotTopLevel>])]
env2 [(onder, Identifier[onder::t_anv, <NotTopLevel>])]
tcBody t_anw
Non Application rule (++)
Instantiating
  ++ with [a_aof]
          []
utype_defer
  cobox_aog
  [a_aof]
  t_anw
  a type equality [a_aof] ~ t_anw
  In the expression: boven ++ onder
  In an equation for ‘<->’: boven <-> onder = boven ++ onder
tcPolyExprNC [a_aof]
tcGen
utype_defer
  cobox_aoh
  t_anu
  [a_aof]
  a type equality t_anu ~ [a_aof]
  In the first argument of ‘(++)’, namely ‘boven’
  In the expression: boven ++ onder
tcPolyExprNC [a_aof]
tcGen
utype_defer
  cobox_aoi
  t_anv
  [a_aof]
  a type equality t_anv ~ [a_aof]
  In the second argument of ‘(++)’, namely ‘onder’
  In the expression: boven ++ onder
addInlinePrags
  <->
  []
csb2 [<->]
} End of bindings for
  [<->]
  NonRecursive
  <-> t_anu -> t_anv -> t_anw
env2
  [(<->, Identifier[<->::t_anu -> t_anv -> t_anw, <NotTopLevel>])]
------------------------------------------------
Bindings for { [<|>]
Generalisation plan
  CheckGen <|> :: t_anA -> t_anB -> t_anC
                  []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  <|>
  t_anA -> t_anB -> t_anC
tcMatchesFun
  <|>
  t_anA -> t_anB -> t_anC
tcGen
utype_defer
  cobox_aol
  [t_aok]
  t_anA
  a type equality [t_aok] ~ t_anA
  In the pattern: []
  In an equation for ‘<|>’: [] <|> rechts = rechts
tcConPat
  []
  []
  [t_aok]
  []
env2 [(rechts, Identifier[rechts::t_anB, <NotTopLevel>])]
tcBody t_anC
utype_defer
  cobox_aom
  t_anB
  t_anC
  a type equality t_anB ~ t_anC
  In the expression: rechts
  In an equation for ‘<|>’: [] <|> rechts = rechts
env2 [(links, Identifier[links::t_anA, <NotTopLevel>])]
utype_defer
  cobox_aoo
  [t_aon]
  t_anB
  a type equality [t_aon] ~ t_anB
  In the pattern: []
  In an equation for ‘<|>’: links <|> [] = links
tcConPat
  []
  []
  [t_aon]
  []
tcBody t_anC
utype_defer
  cobox_aop
  t_anA
  t_anC
  a type equality t_anA ~ t_anC
  In the expression: links
  In an equation for ‘<|>’: links <|> [] = links
env2 [(links, Identifier[links::t_anA, <NotTopLevel>])]
env2 [(rechts, Identifier[rechts::t_anB, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [inspringing]
Generalisation plan NoGen
addInlinePrags
  inspringing
  []
tcMatchesFun
  inspringing
  t_aoq
tcGen
tcBody t_aoq
Instantiating
  length with [a_aos]
              []
utype_defer
  cobox_aot
  Int
  t_aoq
  a type equality Int ~ t_aoq
  In the expression: length (last links)
  In an equation for ‘inspringing’: inspringing = length (last links)
tcPolyExprNC [a_aos]
tcGen
Instantiating
  last with [a_aov]
            []
utype_defer
  cobox_aow
  a_aov
  [a_aos]
  a type equality a_aov ~ [a_aos]
  In the first argument of ‘length’, namely ‘(last links)’
  In the expression: length (last links)
tcPolyExprNC [a_aov]
tcGen
utype_defer
  cobox_aox
  t_anA
  [a_aov]
  a type equality t_anA ~ [a_aov]
  In the first argument of ‘last’, namely ‘links’
  In the first argument of ‘length’, namely ‘(last links)’
csb2 [inspringing]
} End of bindings for
  [inspringing]
  NonRecursive
  inspringing t_aoq
env2 [(inspringing, Identifier[inspringing::t_aoq, <NotTopLevel>])]
tcBody t_anC
Non Application rule (++)
Instantiating
  ++ with [a_aoy]
          []
utype_defer
  cobox_aoz
  [a_aoy]
  t_anC
  a type equality [a_aoy] ~ t_anC
  In the expression:
    init links
    ++
      [last links ++ head rechts] ++ springIn inspringing (tail rechts)
  In an equation for ‘<|>’:
      links <|> rechts
        = init links
          ++
            [last links ++ head rechts] ++ springIn inspringing (tail rechts)
        where
            inspringing = length (last links)
tcPolyExprNC [a_aoy]
tcGen
Instantiating
  init with [a_aoB]
            []
utype_defer
  cobox_aoC
  [a_aoB]
  [a_aoy]
  a type equality [a_aoB] ~ [a_aoy]
  In the first argument of ‘(++)’, namely ‘init links’
  In the expression:
    init links
    ++
      [last links ++ head rechts] ++ springIn inspringing (tail rechts)
tcPolyExprNC [a_aoB]
tcGen
utype_defer
  cobox_aoD
  t_anA
  [a_aoB]
  a type equality t_anA ~ [a_aoB]
  In the first argument of ‘init’, namely ‘links’
  In the first argument of ‘(++)’, namely ‘init links’
tcPolyExprNC [a_aoy]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aoE]
          []
utype_defer
  cobox_aoF
  [a_aoE]
  [a_aoy]
  a type equality [a_aoE] ~ [a_aoy]
  In the second argument of ‘(++)’, namely
    ‘[last links ++ head rechts] ++ springIn inspringing (tail rechts)’
  In the expression:
    init links
    ++
      [last links ++ head rechts] ++ springIn inspringing (tail rechts)
  In an equation for ‘<|>’:
      links <|> rechts
        = init links
          ++
            [last links ++ head rechts] ++ springIn inspringing (tail rechts)
        where
            inspringing = length (last links)
tcPolyExprNC [a_aoE]
tcGen
tcPolyExpr a_aoE
tcPolyExprNC a_aoE
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aoG]
          []
utype_defer
  cobox_aoH
  [a_aoG]
  a_aoE
  a type equality [a_aoG] ~ a_aoE
  In the expression: last links ++ head rechts
  In the first argument of ‘(++)’, namely
    ‘[last links ++ head rechts]’
  In the second argument of ‘(++)’, namely
    ‘[last links ++ head rechts] ++ springIn inspringing (tail rechts)’
tcPolyExprNC [a_aoG]
tcGen
Instantiating
  last with [a_aoI]
            []
utype_defer
  cobox_aoJ
  a_aoI
  [a_aoG]
  a type equality a_aoI ~ [a_aoG]
  In the first argument of ‘(++)’, namely ‘last links’
  In the expression: last links ++ head rechts
tcPolyExprNC [a_aoI]
tcGen
utype_defer
  cobox_aoK
  t_anA
  [a_aoI]
  a type equality t_anA ~ [a_aoI]
  In the first argument of ‘last’, namely ‘links’
  In the first argument of ‘(++)’, namely ‘last links’
tcPolyExprNC [a_aoG]
tcGen
Instantiating
  head with [a_aoM]
            []
utype_defer
  cobox_aoN
  a_aoM
  [a_aoG]
  a type equality a_aoM ~ [a_aoG]
  In the second argument of ‘(++)’, namely ‘head rechts’
  In the expression: last links ++ head rechts
tcPolyExprNC [a_aoM]
tcGen
utype_defer
  cobox_aoO
  t_anB
  [a_aoM]
  a type equality t_anB ~ [a_aoM]
  In the first argument of ‘head’, namely ‘rechts’
  In the second argument of ‘(++)’, namely ‘head rechts’
tcPolyExprNC [a_aoE]
tcGen
utype_defer
  cobox_aoP
  t_anq
  [a_aoE]
  a type equality t_anq ~ [a_aoE]
  In the second argument of ‘(++)’, namely
    ‘springIn inspringing (tail rechts)’
  In the second argument of ‘(++)’, namely
    ‘[last links ++ head rechts] ++ springIn inspringing (tail rechts)’
tcPolyExprNC t_ano
tcGen
utype_defer
  cobox_aoQ
  t_aoq
  t_ano
  a type equality t_aoq ~ t_ano
  In the first argument of ‘springIn’, namely ‘inspringing’
  In the second argument of ‘(++)’, namely
    ‘springIn inspringing (tail rechts)’
tcPolyExprNC t_anp
tcGen
Instantiating
  tail with [a_aoS]
            []
utype_defer
  cobox_aoT
  [a_aoS]
  t_anp
  a type equality [a_aoS] ~ t_anp
  In the second argument of ‘springIn’, namely ‘(tail rechts)’
  In the second argument of ‘(++)’, namely
    ‘springIn inspringing (tail rechts)’
tcPolyExprNC [a_aoS]
tcGen
utype_defer
  cobox_aoU
  t_anB
  [a_aoS]
  a type equality t_anB ~ [a_aoS]
  In the first argument of ‘tail’, namely ‘rechts’
  In the second argument of ‘springIn’, namely ‘(tail rechts)’
addInlinePrags
  <|>
  []
csb2 [<|>]
} End of bindings for
  [<|>]
  NonRecursive
  <|> t_anA -> t_anB -> t_anC
env2
  [(<|>, Identifier[<|>::t_anA -> t_anB -> t_anC, <NotTopLevel>])]
------------------------------------------------
Bindings for { [<+>]
Generalisation plan
  CheckGen <+> :: t_an2 -> t_an3 -> t_an4
                  []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  <+>
  t_an2 -> t_an3 -> t_an4
tcMatchesFun
  <+>
  t_an2 -> t_an3 -> t_an4
tcGen
env2 [(doc1, Identifier[doc1::t_an2, <NotTopLevel>])]
env2 [(doc2, Identifier[doc2::t_an3, <NotTopLevel>])]
tcBody t_an4
Non Application rule (<|>)
utype_defer
  cobox_aoW
  t_anC
  t_an4
  a type equality t_anC ~ t_an4
  In the expression: doc1 <|> springIn 1 doc2
  In an equation for ‘<+>’: doc1 <+> doc2 = doc1 <|> springIn 1 doc2
tcPolyExprNC t_anA
tcGen
utype_defer
  cobox_aoX
  t_an2
  t_anA
  a type equality t_an2 ~ t_anA
  In the first argument of ‘(<|>)’, namely ‘doc1’
  In the expression: doc1 <|> springIn 1 doc2
tcPolyExprNC t_anB
tcGen
utype_defer
  cobox_aoY
  t_anq
  t_anB
  a type equality t_anq ~ t_anB
  In the second argument of ‘(<|>)’, namely ‘springIn 1 doc2’
  In the expression: doc1 <|> springIn 1 doc2
tcPolyExprNC t_ano
tcGen
Instantiating
  fromInteger with [a_aru]
                   [Num a_aru]
instCallConstraints [$dNum_arv]
utype_defer
  cobox_arw
  Integer -> a_aru
  Integer -> t_ano
  a type equality Integer -> a_aru ~ Integer -> t_ano
  In the first argument of ‘springIn’, namely ‘1’
  In the second argument of ‘(<|>)’, namely ‘springIn 1 doc2’
  In the expression: doc1 <|> springIn 1 doc2
tcPolyExprNC t_anp
tcGen
utype_defer
  cobox_arx
  t_an3
  t_anp
  a type equality t_an3 ~ t_anp
  In the second argument of ‘springIn’, namely ‘doc2’
  In the second argument of ‘(<|>)’, namely ‘springIn 1 doc2’
addInlinePrags
  <+>
  []
csb2 [<+>]
} End of bindings for
  [<+>]
  NonRecursive
  <+> t_an2 -> t_an3 -> t_an4
env2
  [(<+>, Identifier[<+>::t_an2 -> t_an3 -> t_an4, <NotTopLevel>])]
------------------------------------------------
Bindings for { [tekst]
Generalisation plan
  CheckGen tekst :: t_anG -> t_anH
                    []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  tekst
  t_anG -> t_anH
tcMatchesFun
  tekst
  t_anG -> t_anH
tcGen
env2 [(string, Identifier[string::t_anG, <NotTopLevel>])]
tcBody t_anH
utype_defer
  cobox_arA
  [t_arz]
  t_anH
  a type equality [t_arz] ~ t_anH
  In the expression: [string]
  In an equation for ‘tekst’: tekst string = [string]
tcPolyExpr t_arz
tcPolyExprNC t_arz
tcGen
utype_defer
  cobox_arB
  t_anG
  t_arz
  a type equality t_anG ~ t_arz
  In the expression: string
  In the expression: [string]
addInlinePrags
  tekst
  []
csb2 [tekst]
} End of bindings for
  [tekst]
  NonRecursive
  tekst t_anG -> t_anH
env2 [(tekst, Identifier[tekst::t_anG -> t_anH, <NotTopLevel>])]
------------------------------------------------
Bindings for { [leeg]
Generalisation plan
  CheckGen leeg :: t_anK
                   []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  leeg
  t_anK
tcMatchesFun
  leeg
  t_anK
tcGen
tcBody t_anK
utype_defer
  cobox_arE
  [t_arD]
  t_anK
  a type equality [t_arD] ~ t_anK
  In the expression: []
  In an equation for ‘leeg’: leeg = []
addInlinePrags
  leeg
  []
csb2 [leeg]
} End of bindings for
  [leeg]
  NonRecursive
  leeg t_anK
env2 [(leeg, Identifier[leeg::t_anK, <NotTopLevel>])]
tc_group rec
  kommaLijst [] = leeg
  kommaLijst [x] = x
  kommaLijst (x : xs) = x <|> tekst "," <+> kommaLijst xs
------------------------------------------------
Bindings for { [kommaLijst]
Generalisation plan
  CheckGen kommaLijst :: t_amY -> t_amZ
                         []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  kommaLijst
  t_amY -> t_amZ
tcMatchesFun
  kommaLijst
  t_amY -> t_amZ
tcGen
utype_defer
  cobox_arH
  [t_arG]
  t_amY
  a type equality [t_arG] ~ t_amY
  In the pattern: []
  In an equation for ‘kommaLijst’: kommaLijst [] = leeg
tcConPat
  []
  []
  [t_arG]
  []
tcBody t_amZ
utype_defer
  cobox_arI
  t_anK
  t_amZ
  a type equality t_anK ~ t_amZ
  In the expression: leeg
  In an equation for ‘kommaLijst’: kommaLijst [] = leeg
utype_defer
  cobox_arK
  [t_arJ]
  t_amY
  a type equality [t_arJ] ~ t_amY
  In the pattern: [x]
  In an equation for ‘kommaLijst’: kommaLijst [x] = x
env2 [(x, Identifier[x::t_arJ, <NotTopLevel>])]
tcBody t_amZ
utype_defer
  cobox_arL
  t_arJ
  t_amZ
  a type equality t_arJ ~ t_amZ
  In the expression: x
  In an equation for ‘kommaLijst’: kommaLijst [x] = x
utype_defer
  cobox_arN
  [t_arM]
  t_amY
  a type equality [t_arM] ~ t_amY
  In the pattern: x : xs
  In an equation for ‘kommaLijst’:
      kommaLijst (x : xs) = x <|> tekst "," <+> kommaLijst xs
tcConPat
  :
  []
  [t_arM]
  [t_arM, [t_arM]]
env2 [(x, Identifier[x::t_arM, <NotTopLevel>])]
env2 [(xs, Identifier[xs::[t_arM], <NotTopLevel>])]
tcBody t_amZ
Non Application rule (<+>)
utype_defer
  cobox_arO
  t_an4
  t_amZ
  a type equality t_an4 ~ t_amZ
  In the expression: x <|> tekst "," <+> kommaLijst xs
  In an equation for ‘kommaLijst’:
      kommaLijst (x : xs) = x <|> tekst "," <+> kommaLijst xs
tcPolyExprNC t_an2
tcGen
Non Application rule (<|>)
utype_defer
  cobox_arP
  t_anC
  t_an2
  a type equality t_anC ~ t_an2
  In the first argument of ‘(<+>)’, namely ‘x <|> tekst ","’
  In the expression: x <|> tekst "," <+> kommaLijst xs
  In an equation for ‘kommaLijst’:
      kommaLijst (x : xs) = x <|> tekst "," <+> kommaLijst xs
tcPolyExprNC t_anA
tcGen
utype_defer
  cobox_arQ
  t_arM
  t_anA
  a type equality t_arM ~ t_anA
  In the first argument of ‘(<|>)’, namely ‘x’
  In the first argument of ‘(<+>)’, namely ‘x <|> tekst ","’
tcPolyExprNC t_anB
tcGen
utype_defer
  cobox_arR
  t_anH
  t_anB
  a type equality t_anH ~ t_anB
  In the second argument of ‘(<|>)’, namely ‘tekst ","’
  In the first argument of ‘(<+>)’, namely ‘x <|> tekst ","’
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_arS
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘","’
  In the second argument of ‘(<|>)’, namely ‘tekst ","’
  In the first argument of ‘(<+>)’, namely ‘x <|> tekst ","’
tcPolyExprNC t_an3
tcGen
utype_defer
  cobox_arT
  t_amZ
  t_an3
  a type equality t_amZ ~ t_an3
  In the second argument of ‘(<+>)’, namely ‘kommaLijst xs’
  In the expression: x <|> tekst "," <+> kommaLijst xs
tcPolyExprNC t_amY
tcGen
utype_defer
  cobox_arU
  [t_arM]
  t_amY
  a type equality [t_arM] ~ t_amY
  In the first argument of ‘kommaLijst’, namely ‘xs’
  In the second argument of ‘(<+>)’, namely ‘kommaLijst xs’
addInlinePrags
  kommaLijst
  []
csb2 [kommaLijst]
} End of bindings for
  [kommaLijst]
  Recursive
  kommaLijst t_amY -> t_amZ
env2
  [(kommaLijst,
    Identifier[kommaLijst::t_amY -> t_amZ, <NotTopLevel>])]
------------------------------------------------
Bindings for { [haskellLijst]
Generalisation plan
  CheckGen haskellLijst :: t_amU -> t_amV
                           []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  haskellLijst
  t_amU -> t_amV
tcMatchesFun
  haskellLijst
  t_amU -> t_amV
tcGen
env2 [(docs, Identifier[docs::t_amU, <NotTopLevel>])]
tcBody t_amV
Non Application rule (<|>)
utype_defer
  cobox_arW
  t_anC
  t_amV
  a type equality t_anC ~ t_amV
  In the expression: tekst "[" <|> kommaLijst docs <|> tekst "]"
  In an equation for ‘haskellLijst’:
      haskellLijst docs = tekst "[" <|> kommaLijst docs <|> tekst "]"
tcPolyExprNC t_anA
tcGen
Non Application rule (<|>)
utype_defer
  cobox_arX
  t_anC
  t_anA
  a type equality t_anC ~ t_anA
  In the first argument of ‘(<|>)’, namely
    ‘tekst "[" <|> kommaLijst docs’
  In the expression: tekst "[" <|> kommaLijst docs <|> tekst "]"
  In an equation for ‘haskellLijst’:
      haskellLijst docs = tekst "[" <|> kommaLijst docs <|> tekst "]"
tcPolyExprNC t_anA
tcGen
utype_defer
  cobox_arY
  t_anH
  t_anA
  a type equality t_anH ~ t_anA
  In the first argument of ‘(<|>)’, namely ‘tekst "["’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "[" <|> kommaLijst docs’
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_arZ
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"["’
  In the first argument of ‘(<|>)’, namely ‘tekst "["’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "[" <|> kommaLijst docs’
tcPolyExprNC t_anB
tcGen
utype_defer
  cobox_as0
  t_amZ
  t_anB
  a type equality t_amZ ~ t_anB
  In the second argument of ‘(<|>)’, namely ‘kommaLijst docs’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "[" <|> kommaLijst docs’
tcPolyExprNC t_amY
tcGen
utype_defer
  cobox_as1
  t_amU
  t_amY
  a type equality t_amU ~ t_amY
  In the first argument of ‘kommaLijst’, namely ‘docs’
  In the second argument of ‘(<|>)’, namely ‘kommaLijst docs’
tcPolyExprNC t_anB
tcGen
utype_defer
  cobox_as2
  t_anH
  t_anB
  a type equality t_anH ~ t_anB
  In the second argument of ‘(<|>)’, namely ‘tekst "]"’
  In the expression: tekst "[" <|> kommaLijst docs <|> tekst "]"
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_as3
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"]"’
  In the second argument of ‘(<|>)’, namely ‘tekst "]"’
  In the expression: tekst "[" <|> kommaLijst docs <|> tekst "]"
addInlinePrags
  haskellLijst
  []
csb2 [haskellLijst]
} End of bindings for
  [haskellLijst]
  NonRecursive
  haskellLijst t_amU -> t_amV
env2
  [(haskellLijst,
    Identifier[haskellLijst::t_amU -> t_amV, <NotTopLevel>])]
------------------------------------------------
Bindings for { [verticaleLijst]
Generalisation plan
  CheckGen verticaleLijst :: t_amM -> t_amN
                             []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  verticaleLijst
  t_amM -> t_amN
tcMatchesFun
  verticaleLijst
  t_amM -> t_amN
tcGen
tcBody t_amM -> t_amN
Instantiating
  foldr with [a_as7, b_as8]
             []
utype_defer
  cobox_as9
  [a_as7] -> b_as8
  t_amM -> t_amN
  a type equality [a_as7] -> b_as8 ~ t_amM -> t_amN
  In the expression: foldr (<->) leeg
  In an equation for ‘verticaleLijst’:
      verticaleLijst = foldr (<->) leeg
tcPolyExprNC a_as7 -> b_as8 -> b_as8
tcGen
utype_defer
  cobox_asa
  t_anu -> t_anv -> t_anw
  a_as7 -> b_as8 -> b_as8
  a type equality t_anu -> t_anv -> t_anw ~ a_as7 -> b_as8 -> b_as8
  In the first argument of ‘foldr’, namely ‘(<->)’
  In the expression: foldr (<->) leeg
tcPolyExprNC b_as8
tcGen
utype_defer
  cobox_asb
  t_anK
  b_as8
  a type equality t_anK ~ b_as8
  In the second argument of ‘foldr’, namely ‘leeg’
  In the expression: foldr (<->) leeg
addInlinePrags
  verticaleLijst
  []
csb2 [verticaleLijst]
} End of bindings for
  [verticaleLijst]
  NonRecursive
  verticaleLijst t_amM -> t_amN
env2
  [(verticaleLijst,
    Identifier[verticaleLijst::t_amM -> t_amN, <NotTopLevel>])]
------------------------------------------------
Bindings for { [utrechtseLijst]
Generalisation plan
  CheckGen utrechtseLijst :: t_amQ -> t_amR
                             []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  utrechtseLijst
  t_amQ -> t_amR
tcMatchesFun
  utrechtseLijst
  t_amQ -> t_amR
tcGen
utype_defer
  cobox_ase
  [t_asd]
  t_amQ
  a type equality [t_asd] ~ t_amQ
  In the pattern: []
  In an equation for ‘utrechtseLijst’: utrechtseLijst [] = tekst "[]"
tcConPat
  []
  []
  [t_asd]
  []
tcBody t_amR
utype_defer
  cobox_asf
  t_anH
  t_amR
  a type equality t_anH ~ t_amR
  In the expression: tekst "[]"
  In an equation for ‘utrechtseLijst’: utrechtseLijst [] = tekst "[]"
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_asg
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"[]"’
  In the expression: tekst "[]"
  In an equation for ‘utrechtseLijst’: utrechtseLijst [] = tekst "[]"
utype_defer
  cobox_asi
  [t_ash]
  t_amQ
  a type equality [t_ash] ~ t_amQ
  In the pattern: doc : docs
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
tcConPat
  :
  []
  [t_ash]
  [t_ash, [t_ash]]
env2 [(doc, Identifier[doc::t_ash, <NotTopLevel>])]
env2 [(docs, Identifier[docs::[t_ash], <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [kommaErvoor]
Generalisation plan NoGen
addInlinePrags
  kommaErvoor
  []
tcMatchesFun
  kommaErvoor
  t_asj
tcGen
utype_defer
  cobox_asm
  t_asj
  t_ask -> t_asl
  a type equality t_asj ~ t_ask -> t_asl
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
env2 [(docc, Identifier[docc::t_ask, <NotTopLevel>])]
tcBody t_asl
Non Application rule (<+>)
utype_defer
  cobox_asn
  t_an4
  t_asl
  a type equality t_an4 ~ t_asl
  In the expression: tekst "," <+> docc
  In an equation for ‘kommaErvoor’:
      kommaErvoor docc = tekst "," <+> docc
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
tcPolyExprNC t_an2
tcGen
utype_defer
  cobox_aso
  t_anH
  t_an2
  a type equality t_anH ~ t_an2
  In the first argument of ‘(<+>)’, namely ‘tekst ","’
  In the expression: tekst "," <+> docc
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_asp
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘","’
  In the first argument of ‘(<+>)’, namely ‘tekst ","’
  In the expression: tekst "," <+> docc
tcPolyExprNC t_an3
tcGen
utype_defer
  cobox_asq
  t_ask
  t_an3
  a type equality t_ask ~ t_an3
  In the second argument of ‘(<+>)’, namely ‘docc’
  In the expression: tekst "," <+> docc
csb2 [kommaErvoor]
} End of bindings for
  [kommaErvoor]
  NonRecursive
  kommaErvoor t_asj
env2 [(kommaErvoor, Identifier[kommaErvoor::t_asj, <NotTopLevel>])]
tcBody t_amR
Non Application rule (<->)
utype_defer
  cobox_asr
  t_anw
  t_amR
  a type equality t_anw ~ t_amR
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
tcPolyExprNC t_anu
tcGen
Non Application rule (<->)
utype_defer
  cobox_ass
  t_anw
  t_anu
  a type equality t_anw ~ t_anu
  In the first argument of ‘(<->)’, namely
    ‘tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)’
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
tcPolyExprNC t_anu
tcGen
Non Application rule (<+>)
utype_defer
  cobox_ast
  t_an4
  t_anu
  a type equality t_an4 ~ t_anu
  In the first argument of ‘(<->)’, namely ‘tekst "[" <+> doc’
  In the first argument of ‘(<->)’, namely
    ‘tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)’
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
tcPolyExprNC t_an2
tcGen
utype_defer
  cobox_asu
  t_anH
  t_an2
  a type equality t_anH ~ t_an2
  In the first argument of ‘(<+>)’, namely ‘tekst "["’
  In the first argument of ‘(<->)’, namely ‘tekst "[" <+> doc’
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_asv
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"["’
  In the first argument of ‘(<+>)’, namely ‘tekst "["’
  In the first argument of ‘(<->)’, namely ‘tekst "[" <+> doc’
tcPolyExprNC t_an3
tcGen
utype_defer
  cobox_asw
  t_ash
  t_an3
  a type equality t_ash ~ t_an3
  In the second argument of ‘(<+>)’, namely ‘doc’
  In the first argument of ‘(<->)’, namely ‘tekst "[" <+> doc’
tcPolyExprNC t_anv
tcGen
utype_defer
  cobox_asx
  t_amN
  t_anv
  a type equality t_amN ~ t_anv
  In the second argument of ‘(<->)’, namely
    ‘verticaleLijst (map kommaErvoor docs)’
  In the first argument of ‘(<->)’, namely
    ‘tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)’
tcPolyExprNC t_amM
tcGen
Instantiating
  map with [a_asy, b_asz]
           []
utype_defer
  cobox_asA
  [b_asz]
  t_amM
  a type equality [b_asz] ~ t_amM
  In the first argument of ‘verticaleLijst’, namely
    ‘(map kommaErvoor docs)’
  In the second argument of ‘(<->)’, namely
    ‘verticaleLijst (map kommaErvoor docs)’
tcPolyExprNC a_asy -> b_asz
tcGen
utype_defer
  cobox_asB
  t_asj
  a_asy -> b_asz
  a type equality t_asj ~ a_asy -> b_asz
  In the first argument of ‘map’, namely ‘kommaErvoor’
  In the first argument of ‘verticaleLijst’, namely
    ‘(map kommaErvoor docs)’
tcPolyExprNC [a_asy]
tcGen
utype_defer
  cobox_asC
  [t_ash]
  [a_asy]
  a type equality [t_ash] ~ [a_asy]
  In the second argument of ‘map’, namely ‘docs’
  In the first argument of ‘verticaleLijst’, namely
    ‘(map kommaErvoor docs)’
tcPolyExprNC t_anv
tcGen
utype_defer
  cobox_asD
  t_anH
  t_anv
  a type equality t_anH ~ t_anv
  In the second argument of ‘(<->)’, namely ‘tekst "]"’
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_asE
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"]"’
  In the second argument of ‘(<->)’, namely ‘tekst "]"’
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
addInlinePrags
  utrechtseLijst
  []
csb2 [utrechtseLijst]
} End of bindings for
  [utrechtseLijst]
  NonRecursive
  utrechtseLijst t_amQ -> t_amR
env2
  [(utrechtseLijst,
    Identifier[utrechtseLijst::t_amQ -> t_amR, <NotTopLevel>])]
Tc6
env2 []
Tc7
End of tcVectDecls: LIE:
  WC {wc_flat = [W] cobox_amO :: [Doc]
                                 ~ t_amM [" a type equality [Doc]
                                                            ~
                                                            t_amM " Pretty.hs:162:19-30] (CNonCanonical)
                [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                ~
                                                                t_amN " Pretty.hs:162:19-30] (CNonCanonical)
                [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                                  ~
                                                                  t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
                [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                ~
                                                                t_amR " Pretty.hs:152:19-30] (CNonCanonical)
                [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                                  ~
                                                                  t_amU " Pretty.hs:148:17-28] (CNonCanonical)
                [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                ~
                                                                t_amV " Pretty.hs:148:17-28] (CNonCanonical)
                [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                                  ~
                                                                  t_amY " Pretty.hs:143:15-26] (CNonCanonical)
                [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                ~
                                                                t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
                [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                ~
                                                                t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                ~
                                                                t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                ~
                                                                t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                ~
                                                                t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
                [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                                   ~
                                                                   t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
                [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                ~
                                                                t_ank " Pretty.hs:94:13-24] (CNonCanonical)
                [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                                  ~
                                                                  t_anl " Pretty.hs:94:13-24] (CNonCanonical)
                [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                ~
                                                                t_ano " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                ~
                                                                t_anp " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                ~
                                                                t_anq " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                ~
                                                                t_anu " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                ~
                                                                t_anv " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                ~
                                                                t_anw " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                ~
                                                                t_anA " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                ~
                                                                t_anB " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                ~
                                                                t_anC " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                                   ~
                                                                   t_anG " Pretty.hs:32:13-25] (CNonCanonical)
                [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                ~
                                                                t_anH " Pretty.hs:32:13-25] (CNonCanonical)
                [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                ~
                                                                t_anK " Pretty.hs:25:13-15] (CNonCanonical)
                [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                                    ~
                                                                    t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
                [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                ~
                                                                Int " Pretty.hs:136:23] (CNonCanonical)
                [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                 ~
                                                                 a_anO " Pretty.hs:136:25-27] (CNonCanonical)
                [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                                  ~
                                                                  t_anl " Pretty.hs:131:5-24] (CNonCanonical)
                [W] cobox_anU :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " Pretty.hs:131:13-23] (CNonCanonical)
                [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                                     ~
                                                                     [String] " Pretty.hs:131:21-23] (CNonCanonical)
                [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                             ~
                                                                             t_anY
                                                                             -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
                [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                                    ~
                                                                    t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
                [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                                    ~
                                                                    [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
                [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                                  ~
                                                                  t_an8 " Pretty.hs:127:35] (CNonCanonical)
                [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                                    ~
                                                                    [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
                [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                                    ~
                                                                    t_anq " Pretty.hs:125:5-28] (CNonCanonical)
                [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                             ~
                                                                             a_ao9
                                                                             -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
                [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                                    ~
                                                                    [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
                [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                                    ~
                                                                    t_anw " Pretty.hs:121:5-18] (CNonCanonical)
                [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                                    ~
                                                                    [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
                [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                                    ~
                                                                    [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
                [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                                    ~
                                                                    t_anA " Pretty.hs:106:1-2] (CNonCanonical)
                [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                                  ~
                                                                  t_anC " Pretty.hs:107:5-10] (CNonCanonical)
                [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                                    ~
                                                                    t_anB " Pretty.hs:108:11-12] (CNonCanonical)
                [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                                  ~
                                                                  t_anC " Pretty.hs:109:5-9] (CNonCanonical)
                [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                ~
                                                                t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
                [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                                    ~
                                                                    [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
                [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                                    ~
                                                                    [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
                [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                                    ~
                                                                    t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
                [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                                      ~
                                                                      [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
                [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                                    ~
                                                                    [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
                [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                                      ~
                                                                      [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
                [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                                    ~
                                                                    a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
                [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                                    ~
                                                                    [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
                [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                                    ~
                                                                    [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
                [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                                    ~
                                                                    [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
                [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                                    ~
                                                                    [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
                [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                                    ~
                                                                    [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
                [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                                  ~
                                                                  t_ano " Pretty.hs:115:14-24] (CNonCanonical)
                [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                                    ~
                                                                    t_anp " Pretty.hs:115:27-37] (CNonCanonical)
                [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                                    ~
                                                                    [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
                [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                                  ~
                                                                  t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
                [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                                  ~
                                                                  t_anA " Pretty.hs:141:17-20] (CNonCanonical)
                [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                                  ~
                                                                  t_anB " Pretty.hs:141:26-40] (CNonCanonical)
                [W] $dNum_arv :: Num
                                   a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
                [W] cobox_arw :: (Integer -> a_aru)
                                 ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                         ~
                                                                         Integer
                                                                         -> t_ano " Pretty.hs:141:35] (CNonCanonical)
                [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                                  ~
                                                                  t_anp " Pretty.hs:141:37-40] (CNonCanonical)
                [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                                    ~
                                                                    t_anH " Pretty.hs:103:5-14] (CNonCanonical)
                [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                                  ~
                                                                  t_arz " Pretty.hs:103:7-12] (CNonCanonical)
                [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                                    ~
                                                                    t_anK " Pretty.hs:99:8-9] (CNonCanonical)
                [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                                    ~
                                                                    t_amY " Pretty.hs:144:12-13] (CNonCanonical)
                [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                                  ~
                                                                  t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
                [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                                    ~
                                                                    t_amY " Pretty.hs:145:12-14] (CNonCanonical)
                [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                                  ~
                                                                  t_amZ " Pretty.hs:145:18] (CNonCanonical)
                [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                    ~
                                                                    t_amY " Pretty.hs:146:13-16] (CNonCanonical)
                [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                                  ~
                                                                  t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
                [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                                  ~
                                                                  t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
                [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                                  ~
                                                                  t_anA " Pretty.hs:146:21] (CNonCanonical)
                [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                                  ~
                                                                  t_anB " Pretty.hs:146:27-35] (CNonCanonical)
                [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:146:33-35] (CNonCanonical)
                [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                                  ~
                                                                  t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
                [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                    ~
                                                                    t_amY " Pretty.hs:146:52-53] (CNonCanonical)
                [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                                  ~
                                                                  t_amV " Pretty.hs:150:5-47] (CNonCanonical)
                [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                                  ~
                                                                  t_anA " Pretty.hs:150:5-33] (CNonCanonical)
                [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                                  ~
                                                                  t_anA " Pretty.hs:150:5-13] (CNonCanonical)
                [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:150:11-13] (CNonCanonical)
                [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                                  ~
                                                                  t_anB " Pretty.hs:150:19-33] (CNonCanonical)
                [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                                  ~
                                                                  t_amY " Pretty.hs:150:30-33] (CNonCanonical)
                [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                                  ~
                                                                  t_anB " Pretty.hs:150:39-47] (CNonCanonical)
                [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:150:45-47] (CNonCanonical)
                [W] cobox_as9 :: ([a_as7] -> b_as8)
                                 ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                       ~
                                                                       t_amM
                                                                       -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
                [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                 ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                -> t_anv -> t_anw
                                                                                ~
                                                                                a_as7
                                                                                -> b_as8
                                                                                -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
                [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                                  ~
                                                                  b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
                [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                                    ~
                                                                    t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
                [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                                  ~
                                                                  t_amR " Pretty.hs:154:5-14] (CNonCanonical)
                [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:154:11-14] (CNonCanonical)
                [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                                    ~
                                                                    t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
                [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                             ~
                                                                             t_ask
                                                                             -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
                [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                                  ~
                                                                  t_asl " Pretty.hs:160:24-41] (CNonCanonical)
                [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                                  ~
                                                                  t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
                [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:160:30-32] (CNonCanonical)
                [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                                  ~
                                                                  t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
                [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                                  ~
                                                                  t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
                [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                                  ~
                                                                  t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
                [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                                  ~
                                                                  t_anu " Pretty.hs:156:6-22] (CNonCanonical)
                [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                                  ~
                                                                  t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
                [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:156:12-14] (CNonCanonical)
                [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                                  ~
                                                                  t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
                [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                                  ~
                                                                  t_anv " Pretty.hs:157:6-42] (CNonCanonical)
                [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                                    ~
                                                                    t_amM " Pretty.hs:157:22-41] (CNonCanonical)
                [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                             ~
                                                                             a_asy
                                                                             -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
                [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                                      ~
                                                                      [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
                [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                                  ~
                                                                  t_anv " Pretty.hs:158:6-14] (CNonCanonical)
                [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:158:12-14] (CNonCanonical)}
Tc7a
checkMain not Main Pretty
Tc8
simplifyTop {
  wanted =  WC {wc_flat = [W] cobox_amO :: [Doc]
                                           ~ t_amM [" a type equality [Doc]
                                                                      ~
                                                                      t_amM " Pretty.hs:162:19-30] (CNonCanonical)
                          [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                          ~
                                                                          t_amN " Pretty.hs:162:19-30] (CNonCanonical)
                          [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                                            ~
                                                                            t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
                          [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                          ~
                                                                          t_amR " Pretty.hs:152:19-30] (CNonCanonical)
                          [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                                            ~
                                                                            t_amU " Pretty.hs:148:17-28] (CNonCanonical)
                          [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                          ~
                                                                          t_amV " Pretty.hs:148:17-28] (CNonCanonical)
                          [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                                            ~
                                                                            t_amY " Pretty.hs:143:15-26] (CNonCanonical)
                          [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                          ~
                                                                          t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
                          [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                          ~
                                                                          t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
                          [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                          ~
                                                                          t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
                          [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                          ~
                                                                          t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
                          [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                          ~
                                                                          t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
                          [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                                             ~
                                                                             t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
                          [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                          ~
                                                                          t_ank " Pretty.hs:94:13-24] (CNonCanonical)
                          [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                                            ~
                                                                            t_anl " Pretty.hs:94:13-24] (CNonCanonical)
                          [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                          ~
                                                                          t_ano " Pretty.hs:83:13-29] (CNonCanonical)
                          [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                          ~
                                                                          t_anp " Pretty.hs:83:13-29] (CNonCanonical)
                          [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                          ~
                                                                          t_anq " Pretty.hs:83:13-29] (CNonCanonical)
                          [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                          ~
                                                                          t_anu " Pretty.hs:77:13-29] (CNonCanonical)
                          [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                          ~
                                                                          t_anv " Pretty.hs:77:13-29] (CNonCanonical)
                          [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                          ~
                                                                          t_anw " Pretty.hs:77:13-29] (CNonCanonical)
                          [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                          ~
                                                                          t_anA " Pretty.hs:55:13-29] (CNonCanonical)
                          [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                          ~
                                                                          t_anB " Pretty.hs:55:13-29] (CNonCanonical)
                          [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                          ~
                                                                          t_anC " Pretty.hs:55:13-29] (CNonCanonical)
                          [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                                             ~
                                                                             t_anG " Pretty.hs:32:13-25] (CNonCanonical)
                          [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                          ~
                                                                          t_anH " Pretty.hs:32:13-25] (CNonCanonical)
                          [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                          ~
                                                                          t_anK " Pretty.hs:25:13-15] (CNonCanonical)
                          [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                                              ~
                                                                              t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
                          [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                          ~
                                                                          Int " Pretty.hs:136:23] (CNonCanonical)
                          [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                           ~
                                                                           a_anO " Pretty.hs:136:25-27] (CNonCanonical)
                          [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                                            ~
                                                                            t_anl " Pretty.hs:131:5-24] (CNonCanonical)
                          [W] cobox_anU :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " Pretty.hs:131:13-23] (CNonCanonical)
                          [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                                               ~
                                                                               [String] " Pretty.hs:131:21-23] (CNonCanonical)
                          [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                                       ~
                                                                                       t_anY
                                                                                       -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
                          [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                                              ~
                                                                              t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
                          [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                                              ~
                                                                              [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
                          [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                                            ~
                                                                            t_an8 " Pretty.hs:127:35] (CNonCanonical)
                          [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                                              ~
                                                                              [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
                          [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                                              ~
                                                                              t_anq " Pretty.hs:125:5-28] (CNonCanonical)
                          [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                                       ~
                                                                                       a_ao9
                                                                                       -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
                          [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                                              ~
                                                                              [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
                          [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                                              ~
                                                                              t_anw " Pretty.hs:121:5-18] (CNonCanonical)
                          [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                                              ~
                                                                              [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
                          [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                                              ~
                                                                              [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
                          [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                                              ~
                                                                              t_anA " Pretty.hs:106:1-2] (CNonCanonical)
                          [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                                            ~
                                                                            t_anC " Pretty.hs:107:5-10] (CNonCanonical)
                          [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                                              ~
                                                                              t_anB " Pretty.hs:108:11-12] (CNonCanonical)
                          [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                                            ~
                                                                            t_anC " Pretty.hs:109:5-9] (CNonCanonical)
                          [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                          ~
                                                                          t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
                          [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                                              ~
                                                                              [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
                          [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                                              ~
                                                                              [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
                          [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                                              ~
                                                                              t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
                          [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                                                ~
                                                                                [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
                          [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                                              ~
                                                                              [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
                          [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                                                ~
                                                                                [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
                          [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                                              ~
                                                                              a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
                          [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                                              ~
                                                                              [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
                          [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                                              ~
                                                                              [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
                          [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                                              ~
                                                                              [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
                          [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                                              ~
                                                                              [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
                          [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                                              ~
                                                                              [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
                          [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                                            ~
                                                                            t_ano " Pretty.hs:115:14-24] (CNonCanonical)
                          [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                                              ~
                                                                              t_anp " Pretty.hs:115:27-37] (CNonCanonical)
                          [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                                              ~
                                                                              [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
                          [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                                            ~
                                                                            t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
                          [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                                            ~
                                                                            t_anA " Pretty.hs:141:17-20] (CNonCanonical)
                          [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                                            ~
                                                                            t_anB " Pretty.hs:141:26-40] (CNonCanonical)
                          [W] $dNum_arv :: Num
                                             a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
                          [W] cobox_arw :: (Integer -> a_aru)
                                           ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_ano " Pretty.hs:141:35] (CNonCanonical)
                          [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                                            ~
                                                                            t_anp " Pretty.hs:141:37-40] (CNonCanonical)
                          [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                                              ~
                                                                              t_anH " Pretty.hs:103:5-14] (CNonCanonical)
                          [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                                            ~
                                                                            t_arz " Pretty.hs:103:7-12] (CNonCanonical)
                          [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                                              ~
                                                                              t_anK " Pretty.hs:99:8-9] (CNonCanonical)
                          [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                                              ~
                                                                              t_amY " Pretty.hs:144:12-13] (CNonCanonical)
                          [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                                            ~
                                                                            t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
                          [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                                              ~
                                                                              t_amY " Pretty.hs:145:12-14] (CNonCanonical)
                          [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                                            ~
                                                                            t_amZ " Pretty.hs:145:18] (CNonCanonical)
                          [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                              ~
                                                                              t_amY " Pretty.hs:146:13-16] (CNonCanonical)
                          [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                                            ~
                                                                            t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
                          [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                                            ~
                                                                            t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
                          [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                                            ~
                                                                            t_anA " Pretty.hs:146:21] (CNonCanonical)
                          [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                                            ~
                                                                            t_anB " Pretty.hs:146:27-35] (CNonCanonical)
                          [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:146:33-35] (CNonCanonical)
                          [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                                            ~
                                                                            t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
                          [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                              ~
                                                                              t_amY " Pretty.hs:146:52-53] (CNonCanonical)
                          [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                                            ~
                                                                            t_amV " Pretty.hs:150:5-47] (CNonCanonical)
                          [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                                            ~
                                                                            t_anA " Pretty.hs:150:5-33] (CNonCanonical)
                          [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                                            ~
                                                                            t_anA " Pretty.hs:150:5-13] (CNonCanonical)
                          [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:150:11-13] (CNonCanonical)
                          [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                                            ~
                                                                            t_anB " Pretty.hs:150:19-33] (CNonCanonical)
                          [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                                            ~
                                                                            t_amY " Pretty.hs:150:30-33] (CNonCanonical)
                          [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                                            ~
                                                                            t_anB " Pretty.hs:150:39-47] (CNonCanonical)
                          [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:150:45-47] (CNonCanonical)
                          [W] cobox_as9 :: ([a_as7] -> b_as8)
                                           ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                                 ~
                                                                                 t_amM
                                                                                 -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
                          [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                           ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                          -> t_anv
                                                                                          -> t_anw
                                                                                          ~
                                                                                          a_as7
                                                                                          -> b_as8
                                                                                          -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
                          [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                                            ~
                                                                            b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
                          [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                                              ~
                                                                              t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
                          [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                                            ~
                                                                            t_amR " Pretty.hs:154:5-14] (CNonCanonical)
                          [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:154:11-14] (CNonCanonical)
                          [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                                              ~
                                                                              t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
                          [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                                       ~
                                                                                       t_ask
                                                                                       -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
                          [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                                            ~
                                                                            t_asl " Pretty.hs:160:24-41] (CNonCanonical)
                          [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                                            ~
                                                                            t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
                          [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:160:30-32] (CNonCanonical)
                          [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                                            ~
                                                                            t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
                          [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                                            ~
                                                                            t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
                          [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                                            ~
                                                                            t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
                          [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                                            ~
                                                                            t_anu " Pretty.hs:156:6-22] (CNonCanonical)
                          [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                                            ~
                                                                            t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
                          [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:156:12-14] (CNonCanonical)
                          [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                                            ~
                                                                            t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
                          [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                                            ~
                                                                            t_anv " Pretty.hs:157:6-42] (CNonCanonical)
                          [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                                              ~
                                                                              t_amM " Pretty.hs:157:22-41] (CNonCanonical)
                          [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                                       ~
                                                                                       a_asy
                                                                                       -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
                          [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                                                ~
                                                                                [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
                          [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                                            ~
                                                                            t_anv " Pretty.hs:158:6-14] (CNonCanonical)
                          [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:158:12-14] (CNonCanonical)}
solveWantedsTcMWithEvBinds
  wanted= WC {wc_flat = [W] cobox_amO :: [Doc]
                                         ~ t_amM [" a type equality [Doc]
                                                                    ~
                                                                    t_amM " Pretty.hs:162:19-30] (CNonCanonical)
                        [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                        ~
                                                                        t_amN " Pretty.hs:162:19-30] (CNonCanonical)
                        [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                                          ~
                                                                          t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
                        [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                        ~
                                                                        t_amR " Pretty.hs:152:19-30] (CNonCanonical)
                        [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                                          ~
                                                                          t_amU " Pretty.hs:148:17-28] (CNonCanonical)
                        [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                        ~
                                                                        t_amV " Pretty.hs:148:17-28] (CNonCanonical)
                        [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                                          ~
                                                                          t_amY " Pretty.hs:143:15-26] (CNonCanonical)
                        [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                        ~
                                                                        t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
                        [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                        ~
                                                                        t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
                        [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                        ~
                                                                        t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
                        [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                        ~
                                                                        t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
                        [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                        ~
                                                                        t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
                        [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                                           ~
                                                                           t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
                        [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                        ~
                                                                        t_ank " Pretty.hs:94:13-24] (CNonCanonical)
                        [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                                          ~
                                                                          t_anl " Pretty.hs:94:13-24] (CNonCanonical)
                        [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                        ~
                                                                        t_ano " Pretty.hs:83:13-29] (CNonCanonical)
                        [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                        ~
                                                                        t_anp " Pretty.hs:83:13-29] (CNonCanonical)
                        [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                        ~
                                                                        t_anq " Pretty.hs:83:13-29] (CNonCanonical)
                        [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                        ~
                                                                        t_anu " Pretty.hs:77:13-29] (CNonCanonical)
                        [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                        ~
                                                                        t_anv " Pretty.hs:77:13-29] (CNonCanonical)
                        [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                        ~
                                                                        t_anw " Pretty.hs:77:13-29] (CNonCanonical)
                        [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                        ~
                                                                        t_anA " Pretty.hs:55:13-29] (CNonCanonical)
                        [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                        ~
                                                                        t_anB " Pretty.hs:55:13-29] (CNonCanonical)
                        [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                        ~
                                                                        t_anC " Pretty.hs:55:13-29] (CNonCanonical)
                        [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                                           ~
                                                                           t_anG " Pretty.hs:32:13-25] (CNonCanonical)
                        [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                        ~
                                                                        t_anH " Pretty.hs:32:13-25] (CNonCanonical)
                        [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                        ~
                                                                        t_anK " Pretty.hs:25:13-15] (CNonCanonical)
                        [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                                            ~
                                                                            t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
                        [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                        ~
                                                                        Int " Pretty.hs:136:23] (CNonCanonical)
                        [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                         ~
                                                                         a_anO " Pretty.hs:136:25-27] (CNonCanonical)
                        [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                                          ~
                                                                          t_anl " Pretty.hs:131:5-24] (CNonCanonical)
                        [W] cobox_anU :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " Pretty.hs:131:13-23] (CNonCanonical)
                        [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                                             ~
                                                                             [String] " Pretty.hs:131:21-23] (CNonCanonical)
                        [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                                     ~
                                                                                     t_anY
                                                                                     -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
                        [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                                            ~
                                                                            t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
                        [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                                            ~
                                                                            [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
                        [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                                          ~
                                                                          t_an8 " Pretty.hs:127:35] (CNonCanonical)
                        [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                                            ~
                                                                            [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
                        [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                                            ~
                                                                            t_anq " Pretty.hs:125:5-28] (CNonCanonical)
                        [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                                     ~
                                                                                     a_ao9
                                                                                     -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
                        [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                                            ~
                                                                            [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
                        [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                                            ~
                                                                            t_anw " Pretty.hs:121:5-18] (CNonCanonical)
                        [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                                            ~
                                                                            [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
                        [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                                            ~
                                                                            [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
                        [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                                            ~
                                                                            t_anA " Pretty.hs:106:1-2] (CNonCanonical)
                        [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                                          ~
                                                                          t_anC " Pretty.hs:107:5-10] (CNonCanonical)
                        [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                                            ~
                                                                            t_anB " Pretty.hs:108:11-12] (CNonCanonical)
                        [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                                          ~
                                                                          t_anC " Pretty.hs:109:5-9] (CNonCanonical)
                        [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                        ~
                                                                        t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
                        [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                                            ~
                                                                            [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
                        [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                                            ~
                                                                            [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
                        [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                                            ~
                                                                            t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
                        [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                                              ~
                                                                              [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
                        [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                                            ~
                                                                            [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
                        [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                                              ~
                                                                              [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
                        [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                                            ~
                                                                            a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
                        [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                                            ~
                                                                            [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
                        [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                                            ~
                                                                            [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
                        [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                                            ~
                                                                            [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
                        [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                                            ~
                                                                            [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
                        [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                                            ~
                                                                            [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
                        [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                                          ~
                                                                          t_ano " Pretty.hs:115:14-24] (CNonCanonical)
                        [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                                            ~
                                                                            t_anp " Pretty.hs:115:27-37] (CNonCanonical)
                        [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                                            ~
                                                                            [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
                        [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                                          ~
                                                                          t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
                        [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                                          ~
                                                                          t_anA " Pretty.hs:141:17-20] (CNonCanonical)
                        [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                                          ~
                                                                          t_anB " Pretty.hs:141:26-40] (CNonCanonical)
                        [W] $dNum_arv :: Num
                                           a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
                        [W] cobox_arw :: (Integer -> a_aru)
                                         ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_ano " Pretty.hs:141:35] (CNonCanonical)
                        [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                                          ~
                                                                          t_anp " Pretty.hs:141:37-40] (CNonCanonical)
                        [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                                            ~
                                                                            t_anH " Pretty.hs:103:5-14] (CNonCanonical)
                        [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                                          ~
                                                                          t_arz " Pretty.hs:103:7-12] (CNonCanonical)
                        [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                                            ~
                                                                            t_anK " Pretty.hs:99:8-9] (CNonCanonical)
                        [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                                            ~
                                                                            t_amY " Pretty.hs:144:12-13] (CNonCanonical)
                        [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                                          ~
                                                                          t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
                        [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                                            ~
                                                                            t_amY " Pretty.hs:145:12-14] (CNonCanonical)
                        [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                                          ~
                                                                          t_amZ " Pretty.hs:145:18] (CNonCanonical)
                        [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                            ~
                                                                            t_amY " Pretty.hs:146:13-16] (CNonCanonical)
                        [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                                          ~
                                                                          t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
                        [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                                          ~
                                                                          t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
                        [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                                          ~
                                                                          t_anA " Pretty.hs:146:21] (CNonCanonical)
                        [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                                          ~
                                                                          t_anB " Pretty.hs:146:27-35] (CNonCanonical)
                        [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:146:33-35] (CNonCanonical)
                        [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                                          ~
                                                                          t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
                        [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                            ~
                                                                            t_amY " Pretty.hs:146:52-53] (CNonCanonical)
                        [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                                          ~
                                                                          t_amV " Pretty.hs:150:5-47] (CNonCanonical)
                        [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                                          ~
                                                                          t_anA " Pretty.hs:150:5-33] (CNonCanonical)
                        [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                                          ~
                                                                          t_anA " Pretty.hs:150:5-13] (CNonCanonical)
                        [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:150:11-13] (CNonCanonical)
                        [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                                          ~
                                                                          t_anB " Pretty.hs:150:19-33] (CNonCanonical)
                        [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                                          ~
                                                                          t_amY " Pretty.hs:150:30-33] (CNonCanonical)
                        [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                                          ~
                                                                          t_anB " Pretty.hs:150:39-47] (CNonCanonical)
                        [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:150:45-47] (CNonCanonical)
                        [W] cobox_as9 :: ([a_as7] -> b_as8)
                                         ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                               ~
                                                                               t_amM
                                                                               -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
                        [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                         ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                        -> t_anv
                                                                                        -> t_anw
                                                                                        ~
                                                                                        a_as7
                                                                                        -> b_as8
                                                                                        -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
                        [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                                          ~
                                                                          b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
                        [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                                            ~
                                                                            t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
                        [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                                          ~
                                                                          t_amR " Pretty.hs:154:5-14] (CNonCanonical)
                        [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:154:11-14] (CNonCanonical)
                        [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                                            ~
                                                                            t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
                        [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                                     ~
                                                                                     t_ask
                                                                                     -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
                        [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                                          ~
                                                                          t_asl " Pretty.hs:160:24-41] (CNonCanonical)
                        [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                                          ~
                                                                          t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
                        [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:160:30-32] (CNonCanonical)
                        [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                                          ~
                                                                          t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
                        [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                                          ~
                                                                          t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
                        [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                                          ~
                                                                          t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
                        [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                                          ~
                                                                          t_anu " Pretty.hs:156:6-22] (CNonCanonical)
                        [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                                          ~
                                                                          t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
                        [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:156:12-14] (CNonCanonical)
                        [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                                          ~
                                                                          t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
                        [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                                          ~
                                                                          t_anv " Pretty.hs:157:6-42] (CNonCanonical)
                        [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                                            ~
                                                                            t_amM " Pretty.hs:157:22-41] (CNonCanonical)
                        [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                                     ~
                                                                                     a_asy
                                                                                     -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
                        [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                                              ~
                                                                              [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
                        [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                                          ~
                                                                          t_anv " Pretty.hs:158:6-14] (CNonCanonical)
                        [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:158:12-14] (CNonCanonical)}
solveWanteds {
  WC {wc_flat = [W] cobox_amO :: [Doc]
                                 ~ t_amM [" a type equality [Doc]
                                                            ~
                                                            t_amM " Pretty.hs:162:19-30] (CNonCanonical)
                [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                ~
                                                                t_amN " Pretty.hs:162:19-30] (CNonCanonical)
                [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                                  ~
                                                                  t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
                [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                ~
                                                                t_amR " Pretty.hs:152:19-30] (CNonCanonical)
                [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                                  ~
                                                                  t_amU " Pretty.hs:148:17-28] (CNonCanonical)
                [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                ~
                                                                t_amV " Pretty.hs:148:17-28] (CNonCanonical)
                [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                                  ~
                                                                  t_amY " Pretty.hs:143:15-26] (CNonCanonical)
                [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                ~
                                                                t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
                [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                ~
                                                                t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                ~
                                                                t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                ~
                                                                t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                ~
                                                                t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
                [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                                   ~
                                                                   t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
                [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                ~
                                                                t_ank " Pretty.hs:94:13-24] (CNonCanonical)
                [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                                  ~
                                                                  t_anl " Pretty.hs:94:13-24] (CNonCanonical)
                [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                ~
                                                                t_ano " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                ~
                                                                t_anp " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                ~
                                                                t_anq " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                ~
                                                                t_anu " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                ~
                                                                t_anv " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                ~
                                                                t_anw " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                ~
                                                                t_anA " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                ~
                                                                t_anB " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                ~
                                                                t_anC " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                                   ~
                                                                   t_anG " Pretty.hs:32:13-25] (CNonCanonical)
                [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                ~
                                                                t_anH " Pretty.hs:32:13-25] (CNonCanonical)
                [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                ~
                                                                t_anK " Pretty.hs:25:13-15] (CNonCanonical)
                [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                                    ~
                                                                    t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
                [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                ~
                                                                Int " Pretty.hs:136:23] (CNonCanonical)
                [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                 ~
                                                                 a_anO " Pretty.hs:136:25-27] (CNonCanonical)
                [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                                  ~
                                                                  t_anl " Pretty.hs:131:5-24] (CNonCanonical)
                [W] cobox_anU :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " Pretty.hs:131:13-23] (CNonCanonical)
                [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                                     ~
                                                                     [String] " Pretty.hs:131:21-23] (CNonCanonical)
                [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                             ~
                                                                             t_anY
                                                                             -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
                [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                                    ~
                                                                    t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
                [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                                    ~
                                                                    [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
                [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                                  ~
                                                                  t_an8 " Pretty.hs:127:35] (CNonCanonical)
                [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                                    ~
                                                                    [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
                [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                                    ~
                                                                    t_anq " Pretty.hs:125:5-28] (CNonCanonical)
                [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                             ~
                                                                             a_ao9
                                                                             -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
                [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                                    ~
                                                                    [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
                [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                                    ~
                                                                    t_anw " Pretty.hs:121:5-18] (CNonCanonical)
                [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                                    ~
                                                                    [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
                [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                                    ~
                                                                    [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
                [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                                    ~
                                                                    t_anA " Pretty.hs:106:1-2] (CNonCanonical)
                [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                                  ~
                                                                  t_anC " Pretty.hs:107:5-10] (CNonCanonical)
                [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                                    ~
                                                                    t_anB " Pretty.hs:108:11-12] (CNonCanonical)
                [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                                  ~
                                                                  t_anC " Pretty.hs:109:5-9] (CNonCanonical)
                [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                ~
                                                                t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
                [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                                    ~
                                                                    [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
                [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                                    ~
                                                                    [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
                [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                                    ~
                                                                    t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
                [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                                      ~
                                                                      [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
                [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                                    ~
                                                                    [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
                [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                                      ~
                                                                      [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
                [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                                    ~
                                                                    a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
                [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                                    ~
                                                                    [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
                [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                                    ~
                                                                    [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
                [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                                    ~
                                                                    [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
                [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                                    ~
                                                                    [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
                [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                                    ~
                                                                    [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
                [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                                  ~
                                                                  t_ano " Pretty.hs:115:14-24] (CNonCanonical)
                [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                                    ~
                                                                    t_anp " Pretty.hs:115:27-37] (CNonCanonical)
                [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                                    ~
                                                                    [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
                [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                                  ~
                                                                  t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
                [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                                  ~
                                                                  t_anA " Pretty.hs:141:17-20] (CNonCanonical)
                [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                                  ~
                                                                  t_anB " Pretty.hs:141:26-40] (CNonCanonical)
                [W] $dNum_arv :: Num
                                   a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
                [W] cobox_arw :: (Integer -> a_aru)
                                 ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                         ~
                                                                         Integer
                                                                         -> t_ano " Pretty.hs:141:35] (CNonCanonical)
                [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                                  ~
                                                                  t_anp " Pretty.hs:141:37-40] (CNonCanonical)
                [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                                    ~
                                                                    t_anH " Pretty.hs:103:5-14] (CNonCanonical)
                [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                                  ~
                                                                  t_arz " Pretty.hs:103:7-12] (CNonCanonical)
                [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                                    ~
                                                                    t_anK " Pretty.hs:99:8-9] (CNonCanonical)
                [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                                    ~
                                                                    t_amY " Pretty.hs:144:12-13] (CNonCanonical)
                [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                                  ~
                                                                  t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
                [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                                    ~
                                                                    t_amY " Pretty.hs:145:12-14] (CNonCanonical)
                [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                                  ~
                                                                  t_amZ " Pretty.hs:145:18] (CNonCanonical)
                [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                    ~
                                                                    t_amY " Pretty.hs:146:13-16] (CNonCanonical)
                [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                                  ~
                                                                  t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
                [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                                  ~
                                                                  t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
                [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                                  ~
                                                                  t_anA " Pretty.hs:146:21] (CNonCanonical)
                [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                                  ~
                                                                  t_anB " Pretty.hs:146:27-35] (CNonCanonical)
                [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:146:33-35] (CNonCanonical)
                [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                                  ~
                                                                  t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
                [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                    ~
                                                                    t_amY " Pretty.hs:146:52-53] (CNonCanonical)
                [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                                  ~
                                                                  t_amV " Pretty.hs:150:5-47] (CNonCanonical)
                [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                                  ~
                                                                  t_anA " Pretty.hs:150:5-33] (CNonCanonical)
                [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                                  ~
                                                                  t_anA " Pretty.hs:150:5-13] (CNonCanonical)
                [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:150:11-13] (CNonCanonical)
                [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                                  ~
                                                                  t_anB " Pretty.hs:150:19-33] (CNonCanonical)
                [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                                  ~
                                                                  t_amY " Pretty.hs:150:30-33] (CNonCanonical)
                [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                                  ~
                                                                  t_anB " Pretty.hs:150:39-47] (CNonCanonical)
                [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:150:45-47] (CNonCanonical)
                [W] cobox_as9 :: ([a_as7] -> b_as8)
                                 ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                       ~
                                                                       t_amM
                                                                       -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
                [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                 ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                -> t_anv -> t_anw
                                                                                ~
                                                                                a_as7
                                                                                -> b_as8
                                                                                -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
                [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                                  ~
                                                                  b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
                [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                                    ~
                                                                    t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
                [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                                  ~
                                                                  t_amR " Pretty.hs:154:5-14] (CNonCanonical)
                [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:154:11-14] (CNonCanonical)
                [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                                    ~
                                                                    t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
                [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                             ~
                                                                             t_ask
                                                                             -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
                [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                                  ~
                                                                  t_asl " Pretty.hs:160:24-41] (CNonCanonical)
                [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                                  ~
                                                                  t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
                [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:160:30-32] (CNonCanonical)
                [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                                  ~
                                                                  t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
                [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                                  ~
                                                                  t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
                [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                                  ~
                                                                  t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
                [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                                  ~
                                                                  t_anu " Pretty.hs:156:6-22] (CNonCanonical)
                [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                                  ~
                                                                  t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
                [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:156:12-14] (CNonCanonical)
                [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                                  ~
                                                                  t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
                [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                                  ~
                                                                  t_anv " Pretty.hs:157:6-42] (CNonCanonical)
                [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                                    ~
                                                                    t_amM " Pretty.hs:157:22-41] (CNonCanonical)
                [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                             ~
                                                                             a_asy
                                                                             -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
                [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                                      ~
                                                                      [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
                [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                                  ~
                                                                  t_anv " Pretty.hs:158:6-14] (CNonCanonical)
                [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:158:12-14] (CNonCanonical)}
solveFlats {
Start solver pipeline {
  work item =  [W] cobox_amO :: [Doc]
                                ~ t_amM [" a type equality [Doc]
                                                           ~
                                                           t_amM " Pretty.hs:162:19-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amO :: [Doc]
                                 ~ t_amM [" a type equality [Doc]
                                                            ~
                                                            t_amM " Pretty.hs:162:19-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amO :: [Doc] ~ t_amM [" a type equality [Doc]
                                                    ~
                                                    t_amM " Pretty.hs:162:19-30] (CNonCanonical)
canEvNC:eq
  [Doc]
  t_amM
can_eq_nc
  [W] cobox_amO :: [Doc] ~ t_amM
  [Doc]
  [Doc]
  t_amM
  t_amM
canEqTyVar
  t_amM
  [Doc]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asG :: t_amM ~ [Doc]
setEvBind
  ev = cobox_amO
  tm  = CO Sym cobox_asG
rewriteEqEvidence
  [W] cobox_amO :: [Doc] ~ t_amM
  t_amM
  [Doc]
  Sym cobox_asG
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asG :: t_amM
                                 ~ [Doc] [" a type equality [Doc]
                                                            ~
                                                            t_amM " Pretty.hs:162:19-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amM := [Doc]
  Coercion: t_amM ~ [Doc]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amM := [Doc]
setEvBind
  ev = cobox_asG
  tm  = CO <[Doc]>_N
kickOutRewritable
  tv =  t_amM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
1[<C:0,F:0>] [W] cobox_asG :: t_amM ~ [Doc]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                               ~
                                                               t_amN " Pretty.hs:162:19-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                ~
                                                                t_amN " Pretty.hs:162:19-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                  ~
                                                  t_amN " Pretty.hs:162:19-30] (CNonCanonical)
canEvNC:eq
  Doc
  t_amN
can_eq_nc
  [W] cobox_amP :: Doc ~ t_amN
  Doc
  Doc
  t_amN
  t_amN
can_eq_nc
  [W] cobox_amP :: Doc ~ t_amN
  [String]
  Doc
  t_amN
  t_amN
canEqTyVar
  t_amN
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asH :: t_amN ~ Doc
setEvBind
  ev = cobox_amP
  tm  = CO Sym cobox_asH
rewriteEqEvidence
  [W] cobox_amP :: Doc ~ t_amN
  t_amN
  Doc
  Sym cobox_asH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asH :: t_amN ~ Doc [" a type equality Doc
                                                                ~
                                                                t_amN " Pretty.hs:162:19-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amN := Doc
  Coercion: t_amN ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amN := Doc
setEvBind
  ev = cobox_asH
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_amN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
2[<C:0,F:0>] [W] cobox_asH :: t_amN ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amS :: [Doc]
                                ~ t_amQ [" a type equality [Doc]
                                                           ~
                                                           t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amS :: [Doc]
                                 ~ t_amQ [" a type equality [Doc]
                                                            ~
                                                            t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                    ~
                                                    t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
canEvNC:eq
  [Doc]
  t_amQ
can_eq_nc
  [W] cobox_amS :: [Doc] ~ t_amQ
  [Doc]
  [Doc]
  t_amQ
  t_amQ
canEqTyVar
  t_amQ
  [Doc]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asI :: t_amQ ~ [Doc]
setEvBind
  ev = cobox_amS
  tm  = CO Sym cobox_asI
rewriteEqEvidence
  [W] cobox_amS :: [Doc] ~ t_amQ
  t_amQ
  [Doc]
  Sym cobox_asI
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asI :: t_amQ
                                 ~ [Doc] [" a type equality [Doc]
                                                            ~
                                                            t_amQ " Pretty.hs:152:19-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amQ := [Doc]
  Coercion: t_amQ ~ [Doc]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amQ := [Doc]
setEvBind
  ev = cobox_asI
  tm  = CO <[Doc]>_N
kickOutRewritable
  tv =  t_amQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
3[<C:0,F:0>] [W] cobox_asI :: t_amQ ~ [Doc]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                               ~
                                                               t_amR " Pretty.hs:152:19-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                ~
                                                                t_amR " Pretty.hs:152:19-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                  ~
                                                  t_amR " Pretty.hs:152:19-30] (CNonCanonical)
canEvNC:eq
  Doc
  t_amR
can_eq_nc
  [W] cobox_amT :: Doc ~ t_amR
  Doc
  Doc
  t_amR
  t_amR
can_eq_nc
  [W] cobox_amT :: Doc ~ t_amR
  [String]
  Doc
  t_amR
  t_amR
canEqTyVar
  t_amR
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asJ :: t_amR ~ Doc
setEvBind
  ev = cobox_amT
  tm  = CO Sym cobox_asJ
rewriteEqEvidence
  [W] cobox_amT :: Doc ~ t_amR
  t_amR
  Doc
  Sym cobox_asJ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asJ :: t_amR ~ Doc [" a type equality Doc
                                                                ~
                                                                t_amR " Pretty.hs:152:19-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amR := Doc
  Coercion: t_amR ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amR := Doc
setEvBind
  ev = cobox_asJ
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_amR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
4[<C:0,F:0>] [W] cobox_asJ :: t_amR ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amW :: [Doc]
                                ~ t_amU [" a type equality [Doc]
                                                           ~
                                                           t_amU " Pretty.hs:148:17-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amW :: [Doc]
                                 ~ t_amU [" a type equality [Doc]
                                                            ~
                                                            t_amU " Pretty.hs:148:17-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                    ~
                                                    t_amU " Pretty.hs:148:17-28] (CNonCanonical)
canEvNC:eq
  [Doc]
  t_amU
can_eq_nc
  [W] cobox_amW :: [Doc] ~ t_amU
  [Doc]
  [Doc]
  t_amU
  t_amU
canEqTyVar
  t_amU
  [Doc]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asK :: t_amU ~ [Doc]
setEvBind
  ev = cobox_amW
  tm  = CO Sym cobox_asK
rewriteEqEvidence
  [W] cobox_amW :: [Doc] ~ t_amU
  t_amU
  [Doc]
  Sym cobox_asK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asK :: t_amU
                                 ~ [Doc] [" a type equality [Doc]
                                                            ~
                                                            t_amU " Pretty.hs:148:17-28] (CTyEqCan)
Sneaky unification:
  Unifies: t_amU := [Doc]
  Coercion: t_amU ~ [Doc]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amU := [Doc]
setEvBind
  ev = cobox_asK
  tm  = CO <[Doc]>_N
kickOutRewritable
  tv =  t_amU
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
5[<C:0,F:0>] [W] cobox_asK :: t_amU ~ [Doc]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                               ~
                                                               t_amV " Pretty.hs:148:17-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                ~
                                                                t_amV " Pretty.hs:148:17-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                  ~
                                                  t_amV " Pretty.hs:148:17-28] (CNonCanonical)
canEvNC:eq
  Doc
  t_amV
can_eq_nc
  [W] cobox_amX :: Doc ~ t_amV
  Doc
  Doc
  t_amV
  t_amV
can_eq_nc
  [W] cobox_amX :: Doc ~ t_amV
  [String]
  Doc
  t_amV
  t_amV
canEqTyVar
  t_amV
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asL :: t_amV ~ Doc
setEvBind
  ev = cobox_amX
  tm  = CO Sym cobox_asL
rewriteEqEvidence
  [W] cobox_amX :: Doc ~ t_amV
  t_amV
  Doc
  Sym cobox_asL
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asL :: t_amV ~ Doc [" a type equality Doc
                                                                ~
                                                                t_amV " Pretty.hs:148:17-28] (CTyEqCan)
Sneaky unification:
  Unifies: t_amV := Doc
  Coercion: t_amV ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amV := Doc
setEvBind
  ev = cobox_asL
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_amV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
6[<C:0,F:0>] [W] cobox_asL :: t_amV ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an0 :: [Doc]
                                ~ t_amY [" a type equality [Doc]
                                                           ~
                                                           t_amY " Pretty.hs:143:15-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an0 :: [Doc]
                                 ~ t_amY [" a type equality [Doc]
                                                            ~
                                                            t_amY " Pretty.hs:143:15-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                    ~
                                                    t_amY " Pretty.hs:143:15-26] (CNonCanonical)
canEvNC:eq
  [Doc]
  t_amY
can_eq_nc
  [W] cobox_an0 :: [Doc] ~ t_amY
  [Doc]
  [Doc]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [Doc]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asM :: t_amY ~ [Doc]
setEvBind
  ev = cobox_an0
  tm  = CO Sym cobox_asM
rewriteEqEvidence
  [W] cobox_an0 :: [Doc] ~ t_amY
  t_amY
  [Doc]
  Sym cobox_asM
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asM :: t_amY
                                 ~ [Doc] [" a type equality [Doc]
                                                            ~
                                                            t_amY " Pretty.hs:143:15-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_amY := [Doc]
  Coercion: t_amY ~ [Doc]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amY := [Doc]
setEvBind
  ev = cobox_asM
  tm  = CO <[Doc]>_N
kickOutRewritable
  tv =  t_amY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
7[<C:0,F:0>] [W] cobox_asM :: t_amY ~ [Doc]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                               ~
                                                               t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                ~
                                                                t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                  ~
                                                  t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
canEvNC:eq
  Doc
  t_amZ
can_eq_nc
  [W] cobox_an1 :: Doc ~ t_amZ
  Doc
  Doc
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_an1 :: Doc ~ t_amZ
  [String]
  Doc
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asN :: t_amZ ~ Doc
setEvBind
  ev = cobox_an1
  tm  = CO Sym cobox_asN
rewriteEqEvidence
  [W] cobox_an1 :: Doc ~ t_amZ
  t_amZ
  Doc
  Sym cobox_asN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asN :: t_amZ ~ Doc [" a type equality Doc
                                                                ~
                                                                t_amZ " Pretty.hs:143:15-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_amZ := Doc
  Coercion: t_amZ ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amZ := Doc
setEvBind
  ev = cobox_asN
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_amZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
8[<C:0,F:0>] [W] cobox_asN :: t_amZ ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                               ~
                                                               t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                ~
                                                                t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                  ~
                                                  t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
canEvNC:eq
  Doc
  t_an2
can_eq_nc
  [W] cobox_an5 :: Doc ~ t_an2
  Doc
  Doc
  t_an2
  t_an2
can_eq_nc
  [W] cobox_an5 :: Doc ~ t_an2
  [String]
  Doc
  t_an2
  t_an2
canEqTyVar
  t_an2
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asO :: t_an2 ~ Doc
setEvBind
  ev = cobox_an5
  tm  = CO Sym cobox_asO
rewriteEqEvidence
  [W] cobox_an5 :: Doc ~ t_an2
  t_an2
  Doc
  Sym cobox_asO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asO :: t_an2 ~ Doc [" a type equality Doc
                                                                ~
                                                                t_an2 " Pretty.hs:140:10-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_an2 := Doc
  Coercion: t_an2 ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an2 := Doc
setEvBind
  ev = cobox_asO
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_an2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
9[<C:0,F:0>] [W] cobox_asO :: t_an2 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                               ~
                                                               t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                ~
                                                                t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                  ~
                                                  t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
canEvNC:eq
  Doc
  t_an3
can_eq_nc
  [W] cobox_an6 :: Doc ~ t_an3
  Doc
  Doc
  t_an3
  t_an3
can_eq_nc
  [W] cobox_an6 :: Doc ~ t_an3
  [String]
  Doc
  t_an3
  t_an3
canEqTyVar
  t_an3
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asP :: t_an3 ~ Doc
setEvBind
  ev = cobox_an6
  tm  = CO Sym cobox_asP
rewriteEqEvidence
  [W] cobox_an6 :: Doc ~ t_an3
  t_an3
  Doc
  Sym cobox_asP
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asP :: t_an3 ~ Doc [" a type equality Doc
                                                                ~
                                                                t_an3 " Pretty.hs:140:10-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_an3 := Doc
  Coercion: t_an3 ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an3 := Doc
setEvBind
  ev = cobox_asP
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_an3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
10[<C:0,F:0>] [W] cobox_asP :: t_an3 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                               ~
                                                               t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                ~
                                                                t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                  ~
                                                  t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
canEvNC:eq
  Doc
  t_an4
can_eq_nc
  [W] cobox_an7 :: Doc ~ t_an4
  Doc
  Doc
  t_an4
  t_an4
can_eq_nc
  [W] cobox_an7 :: Doc ~ t_an4
  [String]
  Doc
  t_an4
  t_an4
canEqTyVar
  t_an4
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asQ :: t_an4 ~ Doc
setEvBind
  ev = cobox_an7
  tm  = CO Sym cobox_asQ
rewriteEqEvidence
  [W] cobox_an7 :: Doc ~ t_an4
  t_an4
  Doc
  Sym cobox_asQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asQ :: t_an4 ~ Doc [" a type equality Doc
                                                                ~
                                                                t_an4 " Pretty.hs:140:10-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_an4 := Doc
  Coercion: t_an4 ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an4 := Doc
setEvBind
  ev = cobox_asQ
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_an4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
11[<C:0,F:0>] [W] cobox_asQ :: t_an4 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                               ~
                                                               t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                ~
                                                                t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                  ~
                                                  t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
canEvNC:eq
  Int
  t_an8
can_eq_nc
  [W] cobox_ana :: Int ~ t_an8
  Int
  Int
  t_an8
  t_an8
canEqTyVar
  t_an8
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asR :: t_an8 ~ Int
setEvBind
  ev = cobox_ana
  tm  = CO Sym cobox_asR
rewriteEqEvidence
  [W] cobox_ana :: Int ~ t_an8
  t_an8
  Int
  Sym cobox_asR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asR :: t_an8 ~ Int [" a type equality Int
                                                                ~
                                                                t_an8 " Pretty.hs:135:12-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_an8 := Int
  Coercion: t_an8 ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an8 := Int
setEvBind
  ev = cobox_asR
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_an8
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
12[<C:0,F:0>] [W] cobox_asR :: t_an8 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anb :: String
                                ~ t_an9 [" a type equality String
                                                           ~
                                                           t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anb :: String
                                 ~ t_an9 [" a type equality String
                                                            ~
                                                            t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                     ~
                                                     t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
canEvNC:eq
  String
  t_an9
can_eq_nc
  [W] cobox_anb :: String ~ t_an9
  String
  String
  t_an9
  t_an9
can_eq_nc
  [W] cobox_anb :: String ~ t_an9
  [Char]
  String
  t_an9
  t_an9
canEqTyVar
  t_an9
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asS :: t_an9 ~ String
setEvBind
  ev = cobox_anb
  tm  = CO Sym cobox_asS
rewriteEqEvidence
  [W] cobox_anb :: String ~ t_an9
  t_an9
  String
  Sym cobox_asS
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asS :: t_an9
                                 ~ String [" a type equality String
                                                             ~
                                                             t_an9 " Pretty.hs:135:12-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_an9 := String
  Coercion: t_an9 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an9 := String
setEvBind
  ev = cobox_asS
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_an9
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
13[<C:0,F:0>] [W] cobox_asS :: t_an9 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                               ~
                                                               t_ank " Pretty.hs:94:13-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                ~
                                                                t_ank " Pretty.hs:94:13-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                  ~
                                                  t_ank " Pretty.hs:94:13-24] (CNonCanonical)
canEvNC:eq
  Doc
  t_ank
can_eq_nc
  [W] cobox_anm :: Doc ~ t_ank
  Doc
  Doc
  t_ank
  t_ank
can_eq_nc
  [W] cobox_anm :: Doc ~ t_ank
  [String]
  Doc
  t_ank
  t_ank
canEqTyVar
  t_ank
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asT :: t_ank ~ Doc
setEvBind
  ev = cobox_anm
  tm  = CO Sym cobox_asT
rewriteEqEvidence
  [W] cobox_anm :: Doc ~ t_ank
  t_ank
  Doc
  Sym cobox_asT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asT :: t_ank ~ Doc [" a type equality Doc
                                                                ~
                                                                t_ank " Pretty.hs:94:13-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_ank := Doc
  Coercion: t_ank ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ank := Doc
setEvBind
  ev = cobox_asT
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_ank
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
14[<C:0,F:0>] [W] cobox_asT :: t_ank ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ann :: IO () ~ t_anl [" a type equality IO
                                                                   ()
                                                                 ~
                                                                 t_anl " Pretty.hs:94:13-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ann :: IO () ~ t_anl [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_anl " Pretty.hs:94:13-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                    ~
                                                    t_anl " Pretty.hs:94:13-24] (CNonCanonical)
canEvNC:eq
  IO ()
  t_anl
can_eq_nc
  [W] cobox_ann :: IO () ~ t_anl
  IO ()
  IO ()
  t_anl
  t_anl
canEqTyVar
  t_anl
  IO ()
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asU :: t_anl ~ IO ()
setEvBind
  ev = cobox_ann
  tm  = CO Sym cobox_asU
rewriteEqEvidence
  [W] cobox_ann :: IO () ~ t_anl
  t_anl
  IO ()
  Sym cobox_asU
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asU :: t_anl ~ IO () [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_anl " Pretty.hs:94:13-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_anl := IO ()
  Coercion: t_anl ~ IO ()
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anl := IO ()
setEvBind
  ev = cobox_asU
  tm  = CO <IO ()>_N
kickOutRewritable
  tv =  t_anl
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
15[<C:0,F:0>] [W] cobox_asU :: t_anl ~ IO (): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                               ~
                                                               t_ano " Pretty.hs:83:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                ~
                                                                t_ano " Pretty.hs:83:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                  ~
                                                  t_ano " Pretty.hs:83:13-29] (CNonCanonical)
canEvNC:eq
  Int
  t_ano
can_eq_nc
  [W] cobox_anr :: Int ~ t_ano
  Int
  Int
  t_ano
  t_ano
canEqTyVar
  t_ano
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asV :: t_ano ~ Int
setEvBind
  ev = cobox_anr
  tm  = CO Sym cobox_asV
rewriteEqEvidence
  [W] cobox_anr :: Int ~ t_ano
  t_ano
  Int
  Sym cobox_asV
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asV :: t_ano ~ Int [" a type equality Int
                                                                ~
                                                                t_ano " Pretty.hs:83:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_ano := Int
  Coercion: t_ano ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ano := Int
setEvBind
  ev = cobox_asV
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_ano
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
16[<C:0,F:0>] [W] cobox_asV :: t_ano ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                               ~
                                                               t_anp " Pretty.hs:83:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                ~
                                                                t_anp " Pretty.hs:83:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                  ~
                                                  t_anp " Pretty.hs:83:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anp
can_eq_nc
  [W] cobox_ans :: Doc ~ t_anp
  Doc
  Doc
  t_anp
  t_anp
can_eq_nc
  [W] cobox_ans :: Doc ~ t_anp
  [String]
  Doc
  t_anp
  t_anp
canEqTyVar
  t_anp
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asW :: t_anp ~ Doc
setEvBind
  ev = cobox_ans
  tm  = CO Sym cobox_asW
rewriteEqEvidence
  [W] cobox_ans :: Doc ~ t_anp
  t_anp
  Doc
  Sym cobox_asW
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asW :: t_anp ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anp " Pretty.hs:83:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anp := Doc
  Coercion: t_anp ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anp := Doc
setEvBind
  ev = cobox_asW
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anp
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
17[<C:0,F:0>] [W] cobox_asW :: t_anp ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                               ~
                                                               t_anq " Pretty.hs:83:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                ~
                                                                t_anq " Pretty.hs:83:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                  ~
                                                  t_anq " Pretty.hs:83:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anq
can_eq_nc
  [W] cobox_ant :: Doc ~ t_anq
  Doc
  Doc
  t_anq
  t_anq
can_eq_nc
  [W] cobox_ant :: Doc ~ t_anq
  [String]
  Doc
  t_anq
  t_anq
canEqTyVar
  t_anq
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asX :: t_anq ~ Doc
setEvBind
  ev = cobox_ant
  tm  = CO Sym cobox_asX
rewriteEqEvidence
  [W] cobox_ant :: Doc ~ t_anq
  t_anq
  Doc
  Sym cobox_asX
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asX :: t_anq ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anq " Pretty.hs:83:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anq := Doc
  Coercion: t_anq ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anq := Doc
setEvBind
  ev = cobox_asX
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
18[<C:0,F:0>] [W] cobox_asX :: t_anq ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                               ~
                                                               t_anu " Pretty.hs:77:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                ~
                                                                t_anu " Pretty.hs:77:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                  ~
                                                  t_anu " Pretty.hs:77:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anu
can_eq_nc
  [W] cobox_anx :: Doc ~ t_anu
  Doc
  Doc
  t_anu
  t_anu
can_eq_nc
  [W] cobox_anx :: Doc ~ t_anu
  [String]
  Doc
  t_anu
  t_anu
canEqTyVar
  t_anu
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asY :: t_anu ~ Doc
setEvBind
  ev = cobox_anx
  tm  = CO Sym cobox_asY
rewriteEqEvidence
  [W] cobox_anx :: Doc ~ t_anu
  t_anu
  Doc
  Sym cobox_asY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asY :: t_anu ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anu " Pretty.hs:77:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anu := Doc
  Coercion: t_anu ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anu := Doc
setEvBind
  ev = cobox_asY
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anu
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
19[<C:0,F:0>] [W] cobox_asY :: t_anu ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                               ~
                                                               t_anv " Pretty.hs:77:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                ~
                                                                t_anv " Pretty.hs:77:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                  ~
                                                  t_anv " Pretty.hs:77:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anv
can_eq_nc
  [W] cobox_any :: Doc ~ t_anv
  Doc
  Doc
  t_anv
  t_anv
can_eq_nc
  [W] cobox_any :: Doc ~ t_anv
  [String]
  Doc
  t_anv
  t_anv
canEqTyVar
  t_anv
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asZ :: t_anv ~ Doc
setEvBind
  ev = cobox_any
  tm  = CO Sym cobox_asZ
rewriteEqEvidence
  [W] cobox_any :: Doc ~ t_anv
  t_anv
  Doc
  Sym cobox_asZ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asZ :: t_anv ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anv " Pretty.hs:77:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anv := Doc
  Coercion: t_anv ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anv := Doc
setEvBind
  ev = cobox_asZ
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
20[<C:0,F:0>] [W] cobox_asZ :: t_anv ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                               ~
                                                               t_anw " Pretty.hs:77:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                ~
                                                                t_anw " Pretty.hs:77:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                  ~
                                                  t_anw " Pretty.hs:77:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anw
can_eq_nc
  [W] cobox_anz :: Doc ~ t_anw
  Doc
  Doc
  t_anw
  t_anw
can_eq_nc
  [W] cobox_anz :: Doc ~ t_anw
  [String]
  Doc
  t_anw
  t_anw
canEqTyVar
  t_anw
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at0 :: t_anw ~ Doc
setEvBind
  ev = cobox_anz
  tm  = CO Sym cobox_at0
rewriteEqEvidence
  [W] cobox_anz :: Doc ~ t_anw
  t_anw
  Doc
  Sym cobox_at0
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at0 :: t_anw ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anw " Pretty.hs:77:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anw := Doc
  Coercion: t_anw ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anw := Doc
setEvBind
  ev = cobox_at0
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
21[<C:0,F:0>] [W] cobox_at0 :: t_anw ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                               ~
                                                               t_anA " Pretty.hs:55:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                ~
                                                                t_anA " Pretty.hs:55:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                  ~
                                                  t_anA " Pretty.hs:55:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anA
can_eq_nc
  [W] cobox_anD :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_anD :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at1 :: t_anA ~ Doc
setEvBind
  ev = cobox_anD
  tm  = CO Sym cobox_at1
rewriteEqEvidence
  [W] cobox_anD :: Doc ~ t_anA
  t_anA
  Doc
  Sym cobox_at1
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at1 :: t_anA ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anA " Pretty.hs:55:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anA := Doc
  Coercion: t_anA ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anA := Doc
setEvBind
  ev = cobox_at1
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
22[<C:0,F:0>] [W] cobox_at1 :: t_anA ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                               ~
                                                               t_anB " Pretty.hs:55:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                ~
                                                                t_anB " Pretty.hs:55:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                  ~
                                                  t_anB " Pretty.hs:55:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anB
can_eq_nc
  [W] cobox_anE :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_anE :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at2 :: t_anB ~ Doc
setEvBind
  ev = cobox_anE
  tm  = CO Sym cobox_at2
rewriteEqEvidence
  [W] cobox_anE :: Doc ~ t_anB
  t_anB
  Doc
  Sym cobox_at2
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at2 :: t_anB ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anB " Pretty.hs:55:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anB := Doc
  Coercion: t_anB ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anB := Doc
setEvBind
  ev = cobox_at2
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
23[<C:0,F:0>] [W] cobox_at2 :: t_anB ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                               ~
                                                               t_anC " Pretty.hs:55:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                ~
                                                                t_anC " Pretty.hs:55:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                  ~
                                                  t_anC " Pretty.hs:55:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anC
can_eq_nc
  [W] cobox_anF :: Doc ~ t_anC
  Doc
  Doc
  t_anC
  t_anC
can_eq_nc
  [W] cobox_anF :: Doc ~ t_anC
  [String]
  Doc
  t_anC
  t_anC
canEqTyVar
  t_anC
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at3 :: t_anC ~ Doc
setEvBind
  ev = cobox_anF
  tm  = CO Sym cobox_at3
rewriteEqEvidence
  [W] cobox_anF :: Doc ~ t_anC
  t_anC
  Doc
  Sym cobox_at3
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at3 :: t_anC ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anC " Pretty.hs:55:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anC := Doc
  Coercion: t_anC ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anC := Doc
setEvBind
  ev = cobox_at3
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
24[<C:0,F:0>] [W] cobox_at3 :: t_anC ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anI :: String
                                ~ t_anG [" a type equality String
                                                           ~
                                                           t_anG " Pretty.hs:32:13-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anI :: String
                                 ~ t_anG [" a type equality String
                                                            ~
                                                            t_anG " Pretty.hs:32:13-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                     ~
                                                     t_anG " Pretty.hs:32:13-25] (CNonCanonical)
canEvNC:eq
  String
  t_anG
can_eq_nc
  [W] cobox_anI :: String ~ t_anG
  String
  String
  t_anG
  t_anG
can_eq_nc
  [W] cobox_anI :: String ~ t_anG
  [Char]
  String
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at4 :: t_anG ~ String
setEvBind
  ev = cobox_anI
  tm  = CO Sym cobox_at4
rewriteEqEvidence
  [W] cobox_anI :: String ~ t_anG
  t_anG
  String
  Sym cobox_at4
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at4 :: t_anG
                                 ~ String [" a type equality String
                                                             ~
                                                             t_anG " Pretty.hs:32:13-25] (CTyEqCan)
Sneaky unification:
  Unifies: t_anG := String
  Coercion: t_anG ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anG := String
setEvBind
  ev = cobox_at4
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_anG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
25[<C:0,F:0>] [W] cobox_at4 :: t_anG ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                               ~
                                                               t_anH " Pretty.hs:32:13-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                ~
                                                                t_anH " Pretty.hs:32:13-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                  ~
                                                  t_anH " Pretty.hs:32:13-25] (CNonCanonical)
canEvNC:eq
  Doc
  t_anH
can_eq_nc
  [W] cobox_anJ :: Doc ~ t_anH
  Doc
  Doc
  t_anH
  t_anH
can_eq_nc
  [W] cobox_anJ :: Doc ~ t_anH
  [String]
  Doc
  t_anH
  t_anH
canEqTyVar
  t_anH
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at5 :: t_anH ~ Doc
setEvBind
  ev = cobox_anJ
  tm  = CO Sym cobox_at5
rewriteEqEvidence
  [W] cobox_anJ :: Doc ~ t_anH
  t_anH
  Doc
  Sym cobox_at5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at5 :: t_anH ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anH " Pretty.hs:32:13-25] (CTyEqCan)
Sneaky unification:
  Unifies: t_anH := Doc
  Coercion: t_anH ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anH := Doc
setEvBind
  ev = cobox_at5
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
26[<C:0,F:0>] [W] cobox_at5 :: t_anH ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                               ~
                                                               t_anK " Pretty.hs:25:13-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                ~
                                                                t_anK " Pretty.hs:25:13-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                  ~
                                                  t_anK " Pretty.hs:25:13-15] (CNonCanonical)
canEvNC:eq
  Doc
  t_anK
can_eq_nc
  [W] cobox_anL :: Doc ~ t_anK
  Doc
  Doc
  t_anK
  t_anK
can_eq_nc
  [W] cobox_anL :: Doc ~ t_anK
  [String]
  Doc
  t_anK
  t_anK
canEqTyVar
  t_anK
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at6 :: t_anK ~ Doc
setEvBind
  ev = cobox_anL
  tm  = CO Sym cobox_at6
rewriteEqEvidence
  [W] cobox_anL :: Doc ~ t_anK
  t_anK
  Doc
  Sym cobox_at6
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at6 :: t_anK ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anK " Pretty.hs:25:13-15] (CTyEqCan)
Sneaky unification:
  Unifies: t_anK := Doc
  Coercion: t_anK ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anK := Doc
setEvBind
  ev = cobox_at6
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
27[<C:0,F:0>] [W] cobox_at6 :: t_anK ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anP :: [a_anO]
                                ~ t_an9 [" a type equality [a_anO]
                                                           ~
                                                           t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anP :: [a_anO]
                                 ~ t_an9 [" a type equality [a_anO]
                                                            ~
                                                            t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                      ~
                                                      t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
canEvNC:eq
  [a_anO]
  t_an9
can_eq_nc
  [W] cobox_anP :: [a_anO] ~ t_an9
  [a_anO]
  [a_anO]
  t_an9
  t_an9
canEqTyVar
  t_an9
  [a_anO]
  Is-swapped
Following bound tyvar t_an9 = String
newWantedEvVar/cache miss [W] cobox_at7 :: String ~ [a_anO]
setEvBind
  ev = cobox_anP
  tm  = CO Sym cobox_at7
rewriteEqEvidence
  [W] cobox_anP :: [a_anO] ~ t_an9
  String
  [a_anO]
  Sym cobox_at7
canEqTyVar2
  t_an9
  [a_anO]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_at7 :: String ~ [a_anO]
  String
  String
  [a_anO]
  [a_anO]
can_eq_nc
  [W] cobox_at7 :: String ~ [a_anO]
  [Char]
  String
  [a_anO]
  [a_anO]
newWantedEvVar/cache miss [W] cobox_at8 :: Char ~ a_anO
setEvBind
  ev = cobox_at7
  tm  = CO [cobox_at8]_N
canEvNC:eq
  Char
  a_anO
can_eq_nc
  [W] cobox_at8 :: Char ~ a_anO
  Char
  Char
  a_anO
  a_anO
canEqTyVar
  a_anO
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at9 :: a_anO ~ Char
setEvBind
  ev = cobox_at8
  tm  = CO Sym cobox_at9
rewriteEqEvidence
  [W] cobox_at8 :: Char ~ a_anO
  a_anO
  Char
  Sym cobox_at9
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at9 :: a_anO
                                 ~ Char [" a type equality [a_anO]
                                                           ~
                                                           t_an9 " Pretty.hs:136:13-27] (CTyEqCan)
Sneaky unification:
  Unifies: a_anO := Char
  Coercion: a_anO ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anO := Char
setEvBind
  ev = cobox_at9
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_anO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
28[<C:0,F:0>] [W] cobox_at9 :: a_anO ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                               ~
                                                               Int " Pretty.hs:136:23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                ~
                                                                Int " Pretty.hs:136:23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                  ~
                                                  Int " Pretty.hs:136:23] (CNonCanonical)
canEvNC:eq
  t_an8
  Int
can_eq_nc
  [W] cobox_anQ :: t_an8 ~ Int
  t_an8
  t_an8
  Int
  Int
canEqTyVar
  t_an8
  Int
  Not-swapped
Following bound tyvar t_an8 = Int
canEqTyVar2
  t_an8
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_anQ :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_anQ
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                ~
                                                                a_anO " Pretty.hs:136:25-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                 ~
                                                                 a_anO " Pretty.hs:136:25-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                   ~
                                                   a_anO " Pretty.hs:136:25-27] (CNonCanonical)
canEvNC:eq
  Char
  a_anO
can_eq_nc
  [W] cobox_anR :: Char ~ a_anO
  Char
  Char
  a_anO
  a_anO
canEqTyVar
  a_anO
  Char
  Is-swapped
Following bound tyvar a_anO = Char
newWantedEvVar/cache miss [W] cobox_ata :: Char ~ Char
setEvBind
  ev = cobox_anR
  tm  = CO Sym cobox_ata
rewriteEqEvidence
  [W] cobox_anR :: Char ~ a_anO
  Char
  Char
  Sym cobox_ata
canEqTyVar2
  a_anO
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_ata :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ata
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anT :: IO () ~ t_anl [" a type equality IO
                                                                   ()
                                                                 ~
                                                                 t_anl " Pretty.hs:131:5-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anT :: IO () ~ t_anl [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_anl " Pretty.hs:131:5-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                    ~
                                                    t_anl " Pretty.hs:131:5-24] (CNonCanonical)
canEvNC:eq
  IO ()
  t_anl
can_eq_nc
  [W] cobox_anT :: IO () ~ t_anl
  IO ()
  IO ()
  t_anl
  t_anl
canEqTyVar
  t_anl
  IO ()
  Is-swapped
Following bound tyvar t_anl = IO ()
newWantedEvVar/cache miss [W] cobox_atb :: IO () ~ IO ()
setEvBind
  ev = cobox_anT
  tm  = CO Sym cobox_atb
rewriteEqEvidence
  [W] cobox_anT :: IO () ~ t_anl
  IO ()
  IO ()
  Sym cobox_atb
canEqTyVar2
  t_anl
  IO ()
  Is-swapped
  IO ()
  <IO ()>_N
can_eq_nc
  [W] cobox_atb :: IO () ~ IO ()
  IO ()
  IO ()
  IO ()
  IO ()
newWantedEvVar/cache miss [W] cobox_atc :: () ~ ()
setEvBind
  ev = cobox_atb
  tm  = CO IO cobox_atc_N
canEvNC:eq
  ()
  ()
can_eq_nc
  [W] cobox_atc :: () ~ ()
  ()
  ()
  ()
  ()
setEvBind
  ev = cobox_atc
  tm  = CO <()>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anU :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " Pretty.hs:131:13-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anU :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " Pretty.hs:131:13-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anU :: String ~ String [" a type equality String
                                                      ~
                                                      String " Pretty.hs:131:13-23] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_anU :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_anU :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_anU :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atd :: Char ~ Char
setEvBind
  ev = cobox_anU
  tm  = CO [cobox_atd]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atd :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atd
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anV :: t_ank
                                ~ [String] [" a type equality t_ank
                                                              ~
                                                              [String] " Pretty.hs:131:21-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anV :: t_ank
                                 ~ [String] [" a type equality t_ank
                                                               ~
                                                               [String] " Pretty.hs:131:21-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                       ~
                                                       [String] " Pretty.hs:131:21-23] (CNonCanonical)
canEvNC:eq
  t_ank
  [String]
can_eq_nc
  [W] cobox_anV :: t_ank ~ [String]
  t_ank
  t_ank
  [String]
  [String]
canEqTyVar
  t_ank
  [String]
  Not-swapped
Following bound tyvar t_ank = Doc
canEqTyVar2
  t_ank
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_anV :: Doc ~ [String]
  Doc
  Doc
  [String]
  [String]
can_eq_nc
  [W] cobox_anV :: Doc ~ [String]
  [String]
  Doc
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_ate :: String ~ String
setEvBind
  ev = cobox_anV
  tm  = CO [cobox_ate]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_ate :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_ate :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_ate :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atf :: Char ~ Char
setEvBind
  ev = cobox_ate
  tm  = CO [cobox_atf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao0 :: t_anX
                                ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                      ~
                                                                      t_anY
                                                                      -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao0 :: t_anX
                                 ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                       ~
                                                                       t_anY
                                                                       -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                               ~
                                                               t_anY
                                                               -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
canEvNC:eq
  t_anX
  t_anY -> t_anZ
can_eq_nc
  [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ)
  t_anX
  t_anX
  t_anY -> t_anZ
  t_anY -> t_anZ
canEqTyVar
  t_anX
  t_anY -> t_anZ
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ao0 :: t_anX
                                 ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                       ~
                                                                       t_anY
                                                                       -> t_anZ " Pretty.hs:127:5-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_anX := t_anY -> t_anZ
  Coercion: t_anX ~ (t_anY -> t_anZ)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anX := t_anY -> t_anZ
setEvBind
  ev = cobox_ao0
  tm  = CO <t_anY -> t_anZ>_N
kickOutRewritable
  tv =  t_anX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
34[<C:0,F:0>] [W] cobox_ao0 :: t_anX
                               ~ (t_anY -> t_anZ): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao3 :: [a_ao2]
                                ~ t_anZ [" a type equality [a_ao2]
                                                           ~
                                                           t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao3 :: [a_ao2]
                                 ~ t_anZ [" a type equality [a_ao2]
                                                            ~
                                                            t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                      ~
                                                      t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
canEvNC:eq
  [a_ao2]
  t_anZ
can_eq_nc
  [W] cobox_ao3 :: [a_ao2] ~ t_anZ
  [a_ao2]
  [a_ao2]
  t_anZ
  t_anZ
canEqTyVar
  t_anZ
  [a_ao2]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atg :: t_anZ ~ [a_ao2]
setEvBind
  ev = cobox_ao3
  tm  = CO Sym cobox_atg
rewriteEqEvidence
  [W] cobox_ao3 :: [a_ao2] ~ t_anZ
  t_anZ
  [a_ao2]
  Sym cobox_atg
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atg :: t_anZ
                                 ~ [a_ao2] [" a type equality [a_ao2]
                                                              ~
                                                              t_anZ " Pretty.hs:127:27-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_anZ := [a_ao2]
  Coercion: t_anZ ~ [a_ao2]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anZ := [a_ao2]
setEvBind
  ev = cobox_atg
  tm  = CO <[a_ao2]>_N
kickOutRewritable
  tv =  t_anZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
35[<C:0,F:0>] [W] cobox_atg :: t_anZ
                               ~ [a_ao2]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao4 :: t_an9
                                ~ [a_ao2] [" a type equality t_an9
                                                             ~
                                                             [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao4 :: t_an9
                                 ~ [a_ao2] [" a type equality t_an9
                                                              ~
                                                              [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                      ~
                                                      [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
canEvNC:eq
  t_an9
  [a_ao2]
can_eq_nc
  [W] cobox_ao4 :: t_an9 ~ [a_ao2]
  t_an9
  t_an9
  [a_ao2]
  [a_ao2]
canEqTyVar
  t_an9
  [a_ao2]
  Not-swapped
Following bound tyvar t_an9 = String
canEqTyVar2
  t_an9
  [a_ao2]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_ao4 :: String ~ [a_ao2]
  String
  String
  [a_ao2]
  [a_ao2]
can_eq_nc
  [W] cobox_ao4 :: String ~ [a_ao2]
  [Char]
  String
  [a_ao2]
  [a_ao2]
newWantedEvVar/cache miss [W] cobox_ath :: Char ~ a_ao2
setEvBind
  ev = cobox_ao4
  tm  = CO [cobox_ath]_N
canEvNC:eq
  Char
  a_ao2
can_eq_nc
  [W] cobox_ath :: Char ~ a_ao2
  Char
  Char
  a_ao2
  a_ao2
canEqTyVar
  a_ao2
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ati :: a_ao2 ~ Char
setEvBind
  ev = cobox_ath
  tm  = CO Sym cobox_ati
rewriteEqEvidence
  [W] cobox_ath :: Char ~ a_ao2
  a_ao2
  Char
  Sym cobox_ati
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ati :: a_ao2
                                 ~ Char [" a type equality t_an9
                                                           ~
                                                           [a_ao2] " Pretty.hs:127:27-35] (CTyEqCan)
Sneaky unification:
  Unifies: a_ao2 := Char
  Coercion: a_ao2 ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ao2 := Char
setEvBind
  ev = cobox_ati
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_ao2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
36[<C:0,F:0>] [W] cobox_ati :: a_ao2 ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao5 :: t_ano
                                ~ t_an8 [" a type equality t_ano
                                                           ~
                                                           t_an8 " Pretty.hs:127:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao5 :: t_ano
                                 ~ t_an8 [" a type equality t_ano
                                                            ~
                                                            t_an8 " Pretty.hs:127:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                    ~
                                                    t_an8 " Pretty.hs:127:35] (CNonCanonical)
canEvNC:eq
  t_ano
  t_an8
can_eq_nc
  [W] cobox_ao5 :: t_ano ~ t_an8
  t_ano
  t_ano
  t_an8
  t_an8
canEqTyVar
  t_ano
  t_an8
  Not-swapped
Following bound tyvar t_ano = Int
canEqTyVar2
  t_ano
  t_an8
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_ao5 :: Int ~ t_an8
  Int
  Int
  t_an8
  t_an8
canEqTyVar
  t_an8
  Int
  Is-swapped
Following bound tyvar t_an8 = Int
newWantedEvVar/cache miss [W] cobox_atj :: Int ~ Int
setEvBind
  ev = cobox_ao5
  tm  = CO Sym cobox_atj
rewriteEqEvidence
  [W] cobox_ao5 :: Int ~ t_an8
  Int
  Int
  Sym cobox_atj
canEqTyVar2
  t_an8
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_atj :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_atj
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao6 :: t_anY
                                ~ [a_ao2] [" a type equality t_anY
                                                             ~
                                                             [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao6 :: t_anY
                                 ~ [a_ao2] [" a type equality t_anY
                                                              ~
                                                              [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                      ~
                                                      [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
canEvNC:eq
  t_anY
  [a_ao2]
can_eq_nc
  [W] cobox_ao6 :: t_anY ~ [a_ao2]
  t_anY
  t_anY
  [a_ao2]
  [a_ao2]
canEqTyVar
  t_anY
  [a_ao2]
  Not-swapped
Following bound tyvar a_ao2 = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ao6 :: t_anY
                                 ~ [Char] [" a type equality t_anY
                                                             ~
                                                             [a_ao2] " Pretty.hs:127:40-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_anY := [Char]
  Coercion: t_anY ~ [Char]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anY := [Char]
setEvBind
  ev = cobox_ao6
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  t_anY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
38[<C:0,F:0>] [W] cobox_ao6 :: t_anY ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aob :: [b_aoa]
                                ~ t_anq [" a type equality [b_aoa]
                                                           ~
                                                           t_anq " Pretty.hs:125:5-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aob :: [b_aoa]
                                 ~ t_anq [" a type equality [b_aoa]
                                                            ~
                                                            t_anq " Pretty.hs:125:5-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                      ~
                                                      t_anq " Pretty.hs:125:5-28] (CNonCanonical)
canEvNC:eq
  [b_aoa]
  t_anq
can_eq_nc
  [W] cobox_aob :: [b_aoa] ~ t_anq
  [b_aoa]
  [b_aoa]
  t_anq
  t_anq
canEqTyVar
  t_anq
  [b_aoa]
  Is-swapped
Following bound tyvar t_anq = Doc
newWantedEvVar/cache miss [W] cobox_atk :: Doc ~ [b_aoa]
setEvBind
  ev = cobox_aob
  tm  = CO Sym cobox_atk
rewriteEqEvidence
  [W] cobox_aob :: [b_aoa] ~ t_anq
  Doc
  [b_aoa]
  Sym cobox_atk
canEqTyVar2
  t_anq
  [b_aoa]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atk :: Doc ~ [b_aoa]
  Doc
  Doc
  [b_aoa]
  [b_aoa]
can_eq_nc
  [W] cobox_atk :: Doc ~ [b_aoa]
  [String]
  Doc
  [b_aoa]
  [b_aoa]
newWantedEvVar/cache miss [W] cobox_atl :: String ~ b_aoa
setEvBind
  ev = cobox_atk
  tm  = CO [cobox_atl]_N
canEvNC:eq
  String
  b_aoa
can_eq_nc
  [W] cobox_atl :: String ~ b_aoa
  String
  String
  b_aoa
  b_aoa
can_eq_nc
  [W] cobox_atl :: String ~ b_aoa
  [Char]
  String
  b_aoa
  b_aoa
canEqTyVar
  b_aoa
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atm :: b_aoa ~ String
setEvBind
  ev = cobox_atl
  tm  = CO Sym cobox_atm
rewriteEqEvidence
  [W] cobox_atl :: String ~ b_aoa
  b_aoa
  String
  Sym cobox_atm
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atm :: b_aoa
                                 ~ String [" a type equality [b_aoa]
                                                             ~
                                                             t_anq " Pretty.hs:125:5-28] (CTyEqCan)
Sneaky unification:
  Unifies: b_aoa := String
  Coercion: b_aoa ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aoa := String
setEvBind
  ev = cobox_atm
  tm  = CO <String>_N
kickOutRewritable
  tv =  b_aoa
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
39[<C:0,F:0>] [W] cobox_atm :: b_aoa ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoc :: t_anX
                                ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                      ~
                                                                      a_ao9
                                                                      -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoc :: t_anX
                                 ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                       ~
                                                                       a_ao9
                                                                       -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                               ~
                                                               a_ao9
                                                               -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
canEvNC:eq
  t_anX
  a_ao9 -> b_aoa
can_eq_nc
  [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa)
  t_anX
  t_anX
  a_ao9 -> b_aoa
  a_ao9 -> b_aoa
canEqTyVar
  t_anX
  a_ao9 -> b_aoa
  Not-swapped
Following bound tyvar t_anX = t_anY -> t_anZ
canEqTyVar2
  t_anX
  a_ao9 -> b_aoa
  Not-swapped
  t_anY -> t_anZ
  <t_anY -> t_anZ>_N
can_eq_nc
  [W] cobox_aoc :: (t_anY -> t_anZ) ~ (a_ao9 -> b_aoa)
  t_anY -> t_anZ
  t_anY -> t_anZ
  a_ao9 -> b_aoa
  a_ao9 -> b_aoa
newWantedEvVar/cache miss [W] cobox_atn :: t_anY ~ a_ao9
newWantedEvVar/cache miss [W] cobox_ato :: t_anZ ~ b_aoa
setEvBind
  ev = cobox_aoc
  tm  = CO cobox_atn -> cobox_ato
canEvNC:eq
  t_anY
  a_ao9
can_eq_nc
  [W] cobox_atn :: t_anY ~ a_ao9
  t_anY
  t_anY
  a_ao9
  a_ao9
canEqTyVar
  t_anY
  a_ao9
  Not-swapped
Following bound tyvar t_anY = [Char]
canEqTyVar2
  t_anY
  a_ao9
  Not-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_atn :: [Char] ~ a_ao9
  [Char]
  [Char]
  a_ao9
  a_ao9
canEqTyVar
  a_ao9
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atp :: a_ao9 ~ [Char]
setEvBind
  ev = cobox_atn
  tm  = CO Sym cobox_atp
rewriteEqEvidence
  [W] cobox_atn :: [Char] ~ a_ao9
  a_ao9
  [Char]
  Sym cobox_atp
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atp :: a_ao9
                                 ~ [Char] [" a type equality t_anX
                                                             ~
                                                             a_ao9
                                                             -> b_aoa " Pretty.hs:125:9-21] (CTyEqCan)
Sneaky unification:
  Unifies: a_ao9 := [Char]
  Coercion: a_ao9 ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ao9 := [Char]
setEvBind
  ev = cobox_atp
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  a_ao9
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
40[<C:0,F:0>] [W] cobox_atp :: a_ao9 ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ato :: t_anZ
                                ~ b_aoa [" a type equality t_anX
                                                           ~
                                                           a_ao9
                                                           -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ato :: t_anZ
                                 ~ b_aoa [" a type equality t_anX
                                                            ~
                                                            a_ao9
                                                            -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ato :: t_anZ ~ b_aoa [" a type equality t_anX
                                                    ~
                                                    a_ao9
                                                    -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
canEvNC:eq
  t_anZ
  b_aoa
can_eq_nc
  [W] cobox_ato :: t_anZ ~ b_aoa
  t_anZ
  t_anZ
  b_aoa
  b_aoa
canEqTyVar
  t_anZ
  b_aoa
  Not-swapped
Following bound tyvar t_anZ = [a_ao2]
canEqTyVar2
  t_anZ
  b_aoa
  Not-swapped
  [a_ao2]
  <[a_ao2]>_N
can_eq_nc
  [W] cobox_ato :: [a_ao2] ~ b_aoa
  [a_ao2]
  [a_ao2]
  b_aoa
  b_aoa
canEqTyVar
  b_aoa
  [a_ao2]
  Is-swapped
Following bound tyvar b_aoa = String
newWantedEvVar/cache miss [W] cobox_atq :: String ~ [a_ao2]
setEvBind
  ev = cobox_ato
  tm  = CO Sym cobox_atq
rewriteEqEvidence
  [W] cobox_ato :: [a_ao2] ~ b_aoa
  String
  [a_ao2]
  Sym cobox_atq
canEqTyVar2
  b_aoa
  [a_ao2]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_atq :: String ~ [a_ao2]
  String
  String
  [a_ao2]
  [a_ao2]
can_eq_nc
  [W] cobox_atq :: String ~ [a_ao2]
  [Char]
  String
  [a_ao2]
  [a_ao2]
newWantedEvVar/cache miss [W] cobox_atr :: Char ~ a_ao2
setEvBind
  ev = cobox_atq
  tm  = CO [cobox_atr]_N
canEvNC:eq
  Char
  a_ao2
can_eq_nc
  [W] cobox_atr :: Char ~ a_ao2
  Char
  Char
  a_ao2
  a_ao2
canEqTyVar
  a_ao2
  Char
  Is-swapped
Following bound tyvar a_ao2 = Char
newWantedEvVar/cache miss [W] cobox_ats :: Char ~ Char
setEvBind
  ev = cobox_atr
  tm  = CO Sym cobox_ats
rewriteEqEvidence
  [W] cobox_atr :: Char ~ a_ao2
  Char
  Char
  Sym cobox_ats
canEqTyVar2
  a_ao2
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_ats :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ats
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aod :: t_anp
                                ~ [a_ao9] [" a type equality t_anp
                                                             ~
                                                             [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aod :: t_anp
                                 ~ [a_ao9] [" a type equality t_anp
                                                              ~
                                                              [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                      ~
                                                      [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
canEvNC:eq
  t_anp
  [a_ao9]
can_eq_nc
  [W] cobox_aod :: t_anp ~ [a_ao9]
  t_anp
  t_anp
  [a_ao9]
  [a_ao9]
canEqTyVar
  t_anp
  [a_ao9]
  Not-swapped
Following bound tyvar t_anp = Doc
canEqTyVar2
  t_anp
  [a_ao9]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aod :: Doc ~ [a_ao9]
  Doc
  Doc
  [a_ao9]
  [a_ao9]
can_eq_nc
  [W] cobox_aod :: Doc ~ [a_ao9]
  [String]
  Doc
  [a_ao9]
  [a_ao9]
newWantedEvVar/cache miss [W] cobox_att :: String ~ a_ao9
setEvBind
  ev = cobox_aod
  tm  = CO [cobox_att]_N
canEvNC:eq
  String
  a_ao9
can_eq_nc
  [W] cobox_att :: String ~ a_ao9
  String
  String
  a_ao9
  a_ao9
can_eq_nc
  [W] cobox_att :: String ~ a_ao9
  [Char]
  String
  a_ao9
  a_ao9
canEqTyVar
  a_ao9
  [Char]
  Is-swapped
Following bound tyvar a_ao9 = [Char]
newWantedEvVar/cache miss [W] cobox_atu :: [Char] ~ String
setEvBind
  ev = cobox_att
  tm  = CO Sym cobox_atu
rewriteEqEvidence
  [W] cobox_att :: String ~ a_ao9
  [Char]
  String
  Sym cobox_atu
canEqTyVar2
  a_ao9
  [Char]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_atu :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atv :: Char ~ Char
setEvBind
  ev = cobox_atu
  tm  = CO [cobox_atv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aog :: [a_aof]
                                ~ t_anw [" a type equality [a_aof]
                                                           ~
                                                           t_anw " Pretty.hs:121:5-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aog :: [a_aof]
                                 ~ t_anw [" a type equality [a_aof]
                                                            ~
                                                            t_anw " Pretty.hs:121:5-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                      ~
                                                      t_anw " Pretty.hs:121:5-18] (CNonCanonical)
canEvNC:eq
  [a_aof]
  t_anw
can_eq_nc
  [W] cobox_aog :: [a_aof] ~ t_anw
  [a_aof]
  [a_aof]
  t_anw
  t_anw
canEqTyVar
  t_anw
  [a_aof]
  Is-swapped
Following bound tyvar t_anw = Doc
newWantedEvVar/cache miss [W] cobox_atw :: Doc ~ [a_aof]
setEvBind
  ev = cobox_aog
  tm  = CO Sym cobox_atw
rewriteEqEvidence
  [W] cobox_aog :: [a_aof] ~ t_anw
  Doc
  [a_aof]
  Sym cobox_atw
canEqTyVar2
  t_anw
  [a_aof]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atw :: Doc ~ [a_aof]
  Doc
  Doc
  [a_aof]
  [a_aof]
can_eq_nc
  [W] cobox_atw :: Doc ~ [a_aof]
  [String]
  Doc
  [a_aof]
  [a_aof]
newWantedEvVar/cache miss [W] cobox_atx :: String ~ a_aof
setEvBind
  ev = cobox_atw
  tm  = CO [cobox_atx]_N
canEvNC:eq
  String
  a_aof
can_eq_nc
  [W] cobox_atx :: String ~ a_aof
  String
  String
  a_aof
  a_aof
can_eq_nc
  [W] cobox_atx :: String ~ a_aof
  [Char]
  String
  a_aof
  a_aof
canEqTyVar
  a_aof
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aty :: a_aof ~ String
setEvBind
  ev = cobox_atx
  tm  = CO Sym cobox_aty
rewriteEqEvidence
  [W] cobox_atx :: String ~ a_aof
  a_aof
  String
  Sym cobox_aty
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aty :: a_aof
                                 ~ String [" a type equality [a_aof]
                                                             ~
                                                             t_anw " Pretty.hs:121:5-18] (CTyEqCan)
Sneaky unification:
  Unifies: a_aof := String
  Coercion: a_aof ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aof := String
setEvBind
  ev = cobox_aty
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aof
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
43[<C:0,F:0>] [W] cobox_aty :: a_aof ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoh :: t_anu
                                ~ [a_aof] [" a type equality t_anu
                                                             ~
                                                             [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoh :: t_anu
                                 ~ [a_aof] [" a type equality t_anu
                                                              ~
                                                              [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                      ~
                                                      [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
canEvNC:eq
  t_anu
  [a_aof]
can_eq_nc
  [W] cobox_aoh :: t_anu ~ [a_aof]
  t_anu
  t_anu
  [a_aof]
  [a_aof]
canEqTyVar
  t_anu
  [a_aof]
  Not-swapped
Following bound tyvar t_anu = Doc
canEqTyVar2
  t_anu
  [a_aof]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoh :: Doc ~ [a_aof]
  Doc
  Doc
  [a_aof]
  [a_aof]
can_eq_nc
  [W] cobox_aoh :: Doc ~ [a_aof]
  [String]
  Doc
  [a_aof]
  [a_aof]
newWantedEvVar/cache miss [W] cobox_atz :: String ~ a_aof
setEvBind
  ev = cobox_aoh
  tm  = CO [cobox_atz]_N
canEvNC:eq
  String
  a_aof
can_eq_nc
  [W] cobox_atz :: String ~ a_aof
  String
  String
  a_aof
  a_aof
can_eq_nc
  [W] cobox_atz :: String ~ a_aof
  [Char]
  String
  a_aof
  a_aof
canEqTyVar
  a_aof
  [Char]
  Is-swapped
Following bound tyvar a_aof = String
newWantedEvVar/cache miss [W] cobox_atA :: String ~ String
setEvBind
  ev = cobox_atz
  tm  = CO Sym cobox_atA
rewriteEqEvidence
  [W] cobox_atz :: String ~ a_aof
  String
  String
  Sym cobox_atA
canEqTyVar2
  a_aof
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_atA :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_atA :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atB :: Char ~ Char
setEvBind
  ev = cobox_atA
  tm  = CO [cobox_atB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoi :: t_anv
                                ~ [a_aof] [" a type equality t_anv
                                                             ~
                                                             [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoi :: t_anv
                                 ~ [a_aof] [" a type equality t_anv
                                                              ~
                                                              [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                      ~
                                                      [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
canEvNC:eq
  t_anv
  [a_aof]
can_eq_nc
  [W] cobox_aoi :: t_anv ~ [a_aof]
  t_anv
  t_anv
  [a_aof]
  [a_aof]
canEqTyVar
  t_anv
  [a_aof]
  Not-swapped
Following bound tyvar t_anv = Doc
canEqTyVar2
  t_anv
  [a_aof]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoi :: Doc ~ [a_aof]
  Doc
  Doc
  [a_aof]
  [a_aof]
can_eq_nc
  [W] cobox_aoi :: Doc ~ [a_aof]
  [String]
  Doc
  [a_aof]
  [a_aof]
newWantedEvVar/cache miss [W] cobox_atC :: String ~ a_aof
setEvBind
  ev = cobox_aoi
  tm  = CO [cobox_atC]_N
canEvNC:eq
  String
  a_aof
can_eq_nc
  [W] cobox_atC :: String ~ a_aof
  String
  String
  a_aof
  a_aof
can_eq_nc
  [W] cobox_atC :: String ~ a_aof
  [Char]
  String
  a_aof
  a_aof
canEqTyVar
  a_aof
  [Char]
  Is-swapped
Following bound tyvar a_aof = String
newWantedEvVar/cache miss [W] cobox_atD :: String ~ String
setEvBind
  ev = cobox_atC
  tm  = CO Sym cobox_atD
rewriteEqEvidence
  [W] cobox_atC :: String ~ a_aof
  String
  String
  Sym cobox_atD
canEqTyVar2
  a_aof
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_atD :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_atD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atE :: Char ~ Char
setEvBind
  ev = cobox_atD
  tm  = CO [cobox_atE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aol :: [t_aok]
                                ~ t_anA [" a type equality [t_aok]
                                                           ~
                                                           t_anA " Pretty.hs:106:1-2] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aol :: [t_aok]
                                 ~ t_anA [" a type equality [t_aok]
                                                            ~
                                                            t_anA " Pretty.hs:106:1-2] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                      ~
                                                      t_anA " Pretty.hs:106:1-2] (CNonCanonical)
canEvNC:eq
  [t_aok]
  t_anA
can_eq_nc
  [W] cobox_aol :: [t_aok] ~ t_anA
  [t_aok]
  [t_aok]
  t_anA
  t_anA
canEqTyVar
  t_anA
  [t_aok]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_atF :: Doc ~ [t_aok]
setEvBind
  ev = cobox_aol
  tm  = CO Sym cobox_atF
rewriteEqEvidence
  [W] cobox_aol :: [t_aok] ~ t_anA
  Doc
  [t_aok]
  Sym cobox_atF
canEqTyVar2
  t_anA
  [t_aok]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atF :: Doc ~ [t_aok]
  Doc
  Doc
  [t_aok]
  [t_aok]
can_eq_nc
  [W] cobox_atF :: Doc ~ [t_aok]
  [String]
  Doc
  [t_aok]
  [t_aok]
newWantedEvVar/cache miss [W] cobox_atG :: String ~ t_aok
setEvBind
  ev = cobox_atF
  tm  = CO [cobox_atG]_N
canEvNC:eq
  String
  t_aok
can_eq_nc
  [W] cobox_atG :: String ~ t_aok
  String
  String
  t_aok
  t_aok
can_eq_nc
  [W] cobox_atG :: String ~ t_aok
  [Char]
  String
  t_aok
  t_aok
canEqTyVar
  t_aok
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atH :: t_aok ~ String
setEvBind
  ev = cobox_atG
  tm  = CO Sym cobox_atH
rewriteEqEvidence
  [W] cobox_atG :: String ~ t_aok
  t_aok
  String
  Sym cobox_atH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atH :: t_aok
                                 ~ String [" a type equality [t_aok]
                                                             ~
                                                             t_anA " Pretty.hs:106:1-2] (CTyEqCan)
Sneaky unification:
  Unifies: t_aok := String
  Coercion: t_aok ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aok := String
setEvBind
  ev = cobox_atH
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aok
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
46[<C:0,F:0>] [W] cobox_atH :: t_aok ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aom :: t_anB
                                ~ t_anC [" a type equality t_anB
                                                           ~
                                                           t_anC " Pretty.hs:107:5-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aom :: t_anB
                                 ~ t_anC [" a type equality t_anB
                                                            ~
                                                            t_anC " Pretty.hs:107:5-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                    ~
                                                    t_anC " Pretty.hs:107:5-10] (CNonCanonical)
canEvNC:eq
  t_anB
  t_anC
can_eq_nc
  [W] cobox_aom :: t_anB ~ t_anC
  t_anB
  t_anB
  t_anC
  t_anC
canEqTyVar
  t_anB
  t_anC
  Not-swapped
Following bound tyvar t_anB = Doc
canEqTyVar2
  t_anB
  t_anC
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aom :: Doc ~ t_anC
  Doc
  Doc
  t_anC
  t_anC
can_eq_nc
  [W] cobox_aom :: Doc ~ t_anC
  [String]
  Doc
  t_anC
  t_anC
canEqTyVar
  t_anC
  [String]
  Is-swapped
Following bound tyvar t_anC = Doc
newWantedEvVar/cache miss [W] cobox_atI :: Doc ~ Doc
setEvBind
  ev = cobox_aom
  tm  = CO Sym cobox_atI
rewriteEqEvidence
  [W] cobox_aom :: Doc ~ t_anC
  Doc
  Doc
  Sym cobox_atI
canEqTyVar2
  t_anC
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atI :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_atI :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_atJ :: String ~ String
setEvBind
  ev = cobox_atI
  tm  = CO [cobox_atJ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_atJ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_atJ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_atJ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atK :: Char ~ Char
setEvBind
  ev = cobox_atJ
  tm  = CO [cobox_atK]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoo :: [t_aon]
                                ~ t_anB [" a type equality [t_aon]
                                                           ~
                                                           t_anB " Pretty.hs:108:11-12] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoo :: [t_aon]
                                 ~ t_anB [" a type equality [t_aon]
                                                            ~
                                                            t_anB " Pretty.hs:108:11-12] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                      ~
                                                      t_anB " Pretty.hs:108:11-12] (CNonCanonical)
canEvNC:eq
  [t_aon]
  t_anB
can_eq_nc
  [W] cobox_aoo :: [t_aon] ~ t_anB
  [t_aon]
  [t_aon]
  t_anB
  t_anB
canEqTyVar
  t_anB
  [t_aon]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_atL :: Doc ~ [t_aon]
setEvBind
  ev = cobox_aoo
  tm  = CO Sym cobox_atL
rewriteEqEvidence
  [W] cobox_aoo :: [t_aon] ~ t_anB
  Doc
  [t_aon]
  Sym cobox_atL
canEqTyVar2
  t_anB
  [t_aon]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atL :: Doc ~ [t_aon]
  Doc
  Doc
  [t_aon]
  [t_aon]
can_eq_nc
  [W] cobox_atL :: Doc ~ [t_aon]
  [String]
  Doc
  [t_aon]
  [t_aon]
newWantedEvVar/cache miss [W] cobox_atM :: String ~ t_aon
setEvBind
  ev = cobox_atL
  tm  = CO [cobox_atM]_N
canEvNC:eq
  String
  t_aon
can_eq_nc
  [W] cobox_atM :: String ~ t_aon
  String
  String
  t_aon
  t_aon
can_eq_nc
  [W] cobox_atM :: String ~ t_aon
  [Char]
  String
  t_aon
  t_aon
canEqTyVar
  t_aon
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atN :: t_aon ~ String
setEvBind
  ev = cobox_atM
  tm  = CO Sym cobox_atN
rewriteEqEvidence
  [W] cobox_atM :: String ~ t_aon
  t_aon
  String
  Sym cobox_atN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atN :: t_aon
                                 ~ String [" a type equality [t_aon]
                                                             ~
                                                             t_anB " Pretty.hs:108:11-12] (CTyEqCan)
Sneaky unification:
  Unifies: t_aon := String
  Coercion: t_aon ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aon := String
setEvBind
  ev = cobox_atN
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aon
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
48[<C:0,F:0>] [W] cobox_atN :: t_aon ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aop :: t_anA
                                ~ t_anC [" a type equality t_anA
                                                           ~
                                                           t_anC " Pretty.hs:109:5-9] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aop :: t_anA
                                 ~ t_anC [" a type equality t_anA
                                                            ~
                                                            t_anC " Pretty.hs:109:5-9] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                    ~
                                                    t_anC " Pretty.hs:109:5-9] (CNonCanonical)
canEvNC:eq
  t_anA
  t_anC
can_eq_nc
  [W] cobox_aop :: t_anA ~ t_anC
  t_anA
  t_anA
  t_anC
  t_anC
canEqTyVar
  t_anA
  t_anC
  Not-swapped
Following bound tyvar t_anA = Doc
canEqTyVar2
  t_anA
  t_anC
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aop :: Doc ~ t_anC
  Doc
  Doc
  t_anC
  t_anC
can_eq_nc
  [W] cobox_aop :: Doc ~ t_anC
  [String]
  Doc
  t_anC
  t_anC
canEqTyVar
  t_anC
  [String]
  Is-swapped
Following bound tyvar t_anC = Doc
newWantedEvVar/cache miss [W] cobox_atO :: Doc ~ Doc
setEvBind
  ev = cobox_aop
  tm  = CO Sym cobox_atO
rewriteEqEvidence
  [W] cobox_aop :: Doc ~ t_anC
  Doc
  Doc
  Sym cobox_atO
canEqTyVar2
  t_anC
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atO :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_atO :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_atP :: String ~ String
setEvBind
  ev = cobox_atO
  tm  = CO [cobox_atP]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_atP :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_atP :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_atP :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atQ :: Char ~ Char
setEvBind
  ev = cobox_atP
  tm  = CO [cobox_atQ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atQ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atQ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                               ~
                                                               t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                ~
                                                                t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                  ~
                                                  t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
canEvNC:eq
  Int
  t_aoq
can_eq_nc
  [W] cobox_aot :: Int ~ t_aoq
  Int
  Int
  t_aoq
  t_aoq
canEqTyVar
  t_aoq
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atR :: t_aoq ~ Int
setEvBind
  ev = cobox_aot
  tm  = CO Sym cobox_atR
rewriteEqEvidence
  [W] cobox_aot :: Int ~ t_aoq
  t_aoq
  Int
  Sym cobox_atR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atR :: t_aoq ~ Int [" a type equality Int
                                                                ~
                                                                t_aoq " Pretty.hs:117:19-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_aoq := Int
  Coercion: t_aoq ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aoq := Int
setEvBind
  ev = cobox_atR
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aoq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
50[<C:0,F:0>] [W] cobox_atR :: t_aoq ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aow :: a_aov
                                ~ [a_aos] [" a type equality a_aov
                                                             ~
                                                             [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aow :: a_aov
                                 ~ [a_aos] [" a type equality a_aov
                                                              ~
                                                              [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                      ~
                                                      [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
canEvNC:eq
  a_aov
  [a_aos]
can_eq_nc
  [W] cobox_aow :: a_aov ~ [a_aos]
  a_aov
  a_aov
  [a_aos]
  [a_aos]
canEqTyVar
  a_aov
  [a_aos]
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aow :: a_aov
                                 ~ [a_aos] [" a type equality a_aov
                                                              ~
                                                              [a_aos] " Pretty.hs:117:27-36] (CTyEqCan)
Sneaky unification:
  Unifies: a_aov := [a_aos]
  Coercion: a_aov ~ [a_aos]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aov := [a_aos]
setEvBind
  ev = cobox_aow
  tm  = CO <[a_aos]>_N
kickOutRewritable
  tv =  a_aov
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
51[<C:0,F:0>] [W] cobox_aow :: a_aov
                               ~ [a_aos]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aox :: t_anA
                                ~ [a_aov] [" a type equality t_anA
                                                             ~
                                                             [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aox :: t_anA
                                 ~ [a_aov] [" a type equality t_anA
                                                              ~
                                                              [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                      ~
                                                      [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
canEvNC:eq
  t_anA
  [a_aov]
can_eq_nc
  [W] cobox_aox :: t_anA ~ [a_aov]
  t_anA
  t_anA
  [a_aov]
  [a_aov]
canEqTyVar
  t_anA
  [a_aov]
  Not-swapped
Following bound tyvar t_anA = Doc
canEqTyVar2
  t_anA
  [a_aov]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aox :: Doc ~ [a_aov]
  Doc
  Doc
  [a_aov]
  [a_aov]
can_eq_nc
  [W] cobox_aox :: Doc ~ [a_aov]
  [String]
  Doc
  [a_aov]
  [a_aov]
newWantedEvVar/cache miss [W] cobox_atS :: String ~ a_aov
setEvBind
  ev = cobox_aox
  tm  = CO [cobox_atS]_N
canEvNC:eq
  String
  a_aov
can_eq_nc
  [W] cobox_atS :: String ~ a_aov
  String
  String
  a_aov
  a_aov
can_eq_nc
  [W] cobox_atS :: String ~ a_aov
  [Char]
  String
  a_aov
  a_aov
canEqTyVar
  a_aov
  [Char]
  Is-swapped
Following bound tyvar a_aov = [a_aos]
newWantedEvVar/cache miss [W] cobox_atT :: [a_aos] ~ String
setEvBind
  ev = cobox_atS
  tm  = CO Sym cobox_atT
rewriteEqEvidence
  [W] cobox_atS :: String ~ a_aov
  [a_aos]
  String
  Sym cobox_atT
canEqTyVar2
  a_aov
  [Char]
  Is-swapped
  [a_aos]
  <[a_aos]>_N
can_eq_nc
  [W] cobox_atT :: [a_aos] ~ String
  [a_aos]
  [a_aos]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atU :: a_aos ~ Char
setEvBind
  ev = cobox_atT
  tm  = CO [cobox_atU]_N
canEvNC:eq
  a_aos
  Char
can_eq_nc
  [W] cobox_atU :: a_aos ~ Char
  a_aos
  a_aos
  Char
  Char
canEqTyVar
  a_aos
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atU :: a_aos
                                 ~ Char [" a type equality t_anA
                                                           ~
                                                           [a_aov] " Pretty.hs:117:32-36] (CTyEqCan)
Sneaky unification:
  Unifies: a_aos := Char
  Coercion: a_aos ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aos := Char
setEvBind
  ev = cobox_atU
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aos
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
52[<C:0,F:0>] [W] cobox_atU :: a_aos ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoz :: [a_aoy]
                                ~ t_anC [" a type equality [a_aoy]
                                                           ~
                                                           t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoz :: [a_aoy]
                                 ~ t_anC [" a type equality [a_aoy]
                                                            ~
                                                            t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                      ~
                                                      t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
canEvNC:eq
  [a_aoy]
  t_anC
can_eq_nc
  [W] cobox_aoz :: [a_aoy] ~ t_anC
  [a_aoy]
  [a_aoy]
  t_anC
  t_anC
canEqTyVar
  t_anC
  [a_aoy]
  Is-swapped
Following bound tyvar t_anC = Doc
newWantedEvVar/cache miss [W] cobox_atV :: Doc ~ [a_aoy]
setEvBind
  ev = cobox_aoz
  tm  = CO Sym cobox_atV
rewriteEqEvidence
  [W] cobox_aoz :: [a_aoy] ~ t_anC
  Doc
  [a_aoy]
  Sym cobox_atV
canEqTyVar2
  t_anC
  [a_aoy]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atV :: Doc ~ [a_aoy]
  Doc
  Doc
  [a_aoy]
  [a_aoy]
can_eq_nc
  [W] cobox_atV :: Doc ~ [a_aoy]
  [String]
  Doc
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_atW :: String ~ a_aoy
setEvBind
  ev = cobox_atV
  tm  = CO [cobox_atW]_N
canEvNC:eq
  String
  a_aoy
can_eq_nc
  [W] cobox_atW :: String ~ a_aoy
  String
  String
  a_aoy
  a_aoy
can_eq_nc
  [W] cobox_atW :: String ~ a_aoy
  [Char]
  String
  a_aoy
  a_aoy
canEqTyVar
  a_aoy
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atX :: a_aoy ~ String
setEvBind
  ev = cobox_atW
  tm  = CO Sym cobox_atX
rewriteEqEvidence
  [W] cobox_atW :: String ~ a_aoy
  a_aoy
  String
  Sym cobox_atX
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atX :: a_aoy
                                 ~ String [" a type equality [a_aoy]
                                                             ~
                                                             t_anC " Pretty.hs:(111,5)-(115,38)] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoy := String
  Coercion: a_aoy ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoy := String
setEvBind
  ev = cobox_atX
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aoy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
53[<C:0,F:0>] [W] cobox_atX :: a_aoy ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoC :: [a_aoB]
                                ~ [a_aoy] [" a type equality [a_aoB]
                                                             ~
                                                             [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoC :: [a_aoB]
                                 ~ [a_aoy] [" a type equality [a_aoB]
                                                              ~
                                                              [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                        ~
                                                        [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
canEvNC:eq
  [a_aoB]
  [a_aoy]
can_eq_nc
  [W] cobox_aoC :: [a_aoB] ~ [a_aoy]
  [a_aoB]
  [a_aoB]
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_atY :: a_aoB ~ a_aoy
setEvBind
  ev = cobox_aoC
  tm  = CO [cobox_atY]_N
canEvNC:eq
  a_aoB
  a_aoy
can_eq_nc
  [W] cobox_atY :: a_aoB ~ a_aoy
  a_aoB
  a_aoB
  a_aoy
  a_aoy
canEqTyVar
  a_aoB
  a_aoy
  Not-swapped
Following bound tyvar a_aoy = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atY :: a_aoB
                                 ~ String [" a type equality [a_aoB]
                                                             ~
                                                             [a_aoy] " Pretty.hs:111:5-14] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoB := String
  Coercion: a_aoB ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoB := String
setEvBind
  ev = cobox_atY
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aoB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
54[<C:0,F:0>] [W] cobox_atY :: a_aoB ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoD :: t_anA
                                ~ [a_aoB] [" a type equality t_anA
                                                             ~
                                                             [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoD :: t_anA
                                 ~ [a_aoB] [" a type equality t_anA
                                                              ~
                                                              [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                      ~
                                                      [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
canEvNC:eq
  t_anA
  [a_aoB]
can_eq_nc
  [W] cobox_aoD :: t_anA ~ [a_aoB]
  t_anA
  t_anA
  [a_aoB]
  [a_aoB]
canEqTyVar
  t_anA
  [a_aoB]
  Not-swapped
Following bound tyvar t_anA = Doc
canEqTyVar2
  t_anA
  [a_aoB]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoD :: Doc ~ [a_aoB]
  Doc
  Doc
  [a_aoB]
  [a_aoB]
can_eq_nc
  [W] cobox_aoD :: Doc ~ [a_aoB]
  [String]
  Doc
  [a_aoB]
  [a_aoB]
newWantedEvVar/cache miss [W] cobox_atZ :: String ~ a_aoB
setEvBind
  ev = cobox_aoD
  tm  = CO [cobox_atZ]_N
canEvNC:eq
  String
  a_aoB
can_eq_nc
  [W] cobox_atZ :: String ~ a_aoB
  String
  String
  a_aoB
  a_aoB
can_eq_nc
  [W] cobox_atZ :: String ~ a_aoB
  [Char]
  String
  a_aoB
  a_aoB
canEqTyVar
  a_aoB
  [Char]
  Is-swapped
Following bound tyvar a_aoB = String
newWantedEvVar/cache miss [W] cobox_au0 :: String ~ String
setEvBind
  ev = cobox_atZ
  tm  = CO Sym cobox_au0
rewriteEqEvidence
  [W] cobox_atZ :: String ~ a_aoB
  String
  String
  Sym cobox_au0
canEqTyVar2
  a_aoB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_au0 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_au0 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_au1 :: Char ~ Char
setEvBind
  ev = cobox_au0
  tm  = CO [cobox_au1]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_au1 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_au1
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoF :: [a_aoE]
                                ~ [a_aoy] [" a type equality [a_aoE]
                                                             ~
                                                             [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoF :: [a_aoE]
                                 ~ [a_aoy] [" a type equality [a_aoE]
                                                              ~
                                                              [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                        ~
                                                        [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
canEvNC:eq
  [a_aoE]
  [a_aoy]
can_eq_nc
  [W] cobox_aoF :: [a_aoE] ~ [a_aoy]
  [a_aoE]
  [a_aoE]
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_au2 :: a_aoE ~ a_aoy
setEvBind
  ev = cobox_aoF
  tm  = CO [cobox_au2]_N
canEvNC:eq
  a_aoE
  a_aoy
can_eq_nc
  [W] cobox_au2 :: a_aoE ~ a_aoy
  a_aoE
  a_aoE
  a_aoy
  a_aoy
canEqTyVar
  a_aoE
  a_aoy
  Not-swapped
Following bound tyvar a_aoy = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_au2 :: a_aoE
                                 ~ String [" a type equality [a_aoE]
                                                             ~
                                                             [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoE := String
  Coercion: a_aoE ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoE := String
setEvBind
  ev = cobox_au2
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aoE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
56[<C:0,F:0>] [W] cobox_au2 :: a_aoE ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoH :: [a_aoG]
                                ~ a_aoE [" a type equality [a_aoG]
                                                           ~
                                                           a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoH :: [a_aoG]
                                 ~ a_aoE [" a type equality [a_aoG]
                                                            ~
                                                            a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                      ~
                                                      a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
canEvNC:eq
  [a_aoG]
  a_aoE
can_eq_nc
  [W] cobox_aoH :: [a_aoG] ~ a_aoE
  [a_aoG]
  [a_aoG]
  a_aoE
  a_aoE
canEqTyVar
  a_aoE
  [a_aoG]
  Is-swapped
Following bound tyvar a_aoE = String
newWantedEvVar/cache miss [W] cobox_au3 :: String ~ [a_aoG]
setEvBind
  ev = cobox_aoH
  tm  = CO Sym cobox_au3
rewriteEqEvidence
  [W] cobox_aoH :: [a_aoG] ~ a_aoE
  String
  [a_aoG]
  Sym cobox_au3
canEqTyVar2
  a_aoE
  [a_aoG]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_au3 :: String ~ [a_aoG]
  String
  String
  [a_aoG]
  [a_aoG]
can_eq_nc
  [W] cobox_au3 :: String ~ [a_aoG]
  [Char]
  String
  [a_aoG]
  [a_aoG]
newWantedEvVar/cache miss [W] cobox_au4 :: Char ~ a_aoG
setEvBind
  ev = cobox_au3
  tm  = CO [cobox_au4]_N
canEvNC:eq
  Char
  a_aoG
can_eq_nc
  [W] cobox_au4 :: Char ~ a_aoG
  Char
  Char
  a_aoG
  a_aoG
canEqTyVar
  a_aoG
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_au5 :: a_aoG ~ Char
setEvBind
  ev = cobox_au4
  tm  = CO Sym cobox_au5
rewriteEqEvidence
  [W] cobox_au4 :: Char ~ a_aoG
  a_aoG
  Char
  Sym cobox_au5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_au5 :: a_aoG
                                 ~ Char [" a type equality [a_aoG]
                                                           ~
                                                           a_aoE " Pretty.hs:113:7-31] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoG := Char
  Coercion: a_aoG ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoG := Char
setEvBind
  ev = cobox_au5
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aoG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
57[<C:0,F:0>] [W] cobox_au5 :: a_aoG ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoJ :: a_aoI
                                ~ [a_aoG] [" a type equality a_aoI
                                                             ~
                                                             [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoJ :: a_aoI
                                 ~ [a_aoG] [" a type equality a_aoI
                                                              ~
                                                              [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                      ~
                                                      [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
canEvNC:eq
  a_aoI
  [a_aoG]
can_eq_nc
  [W] cobox_aoJ :: a_aoI ~ [a_aoG]
  a_aoI
  a_aoI
  [a_aoG]
  [a_aoG]
canEqTyVar
  a_aoI
  [a_aoG]
  Not-swapped
Following bound tyvar a_aoG = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aoJ :: a_aoI
                                 ~ [Char] [" a type equality a_aoI
                                                             ~
                                                             [a_aoG] " Pretty.hs:113:7-16] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoI := [Char]
  Coercion: a_aoI ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoI := [Char]
setEvBind
  ev = cobox_aoJ
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  a_aoI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
58[<C:0,F:0>] [W] cobox_aoJ :: a_aoI ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoK :: t_anA
                                ~ [a_aoI] [" a type equality t_anA
                                                             ~
                                                             [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoK :: t_anA
                                 ~ [a_aoI] [" a type equality t_anA
                                                              ~
                                                              [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                      ~
                                                      [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
canEvNC:eq
  t_anA
  [a_aoI]
can_eq_nc
  [W] cobox_aoK :: t_anA ~ [a_aoI]
  t_anA
  t_anA
  [a_aoI]
  [a_aoI]
canEqTyVar
  t_anA
  [a_aoI]
  Not-swapped
Following bound tyvar t_anA = Doc
canEqTyVar2
  t_anA
  [a_aoI]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoK :: Doc ~ [a_aoI]
  Doc
  Doc
  [a_aoI]
  [a_aoI]
can_eq_nc
  [W] cobox_aoK :: Doc ~ [a_aoI]
  [String]
  Doc
  [a_aoI]
  [a_aoI]
newWantedEvVar/cache miss [W] cobox_au6 :: String ~ a_aoI
setEvBind
  ev = cobox_aoK
  tm  = CO [cobox_au6]_N
canEvNC:eq
  String
  a_aoI
can_eq_nc
  [W] cobox_au6 :: String ~ a_aoI
  String
  String
  a_aoI
  a_aoI
can_eq_nc
  [W] cobox_au6 :: String ~ a_aoI
  [Char]
  String
  a_aoI
  a_aoI
canEqTyVar
  a_aoI
  [Char]
  Is-swapped
Following bound tyvar a_aoI = [Char]
newWantedEvVar/cache miss [W] cobox_au7 :: [Char] ~ String
setEvBind
  ev = cobox_au6
  tm  = CO Sym cobox_au7
rewriteEqEvidence
  [W] cobox_au6 :: String ~ a_aoI
  [Char]
  String
  Sym cobox_au7
canEqTyVar2
  a_aoI
  [Char]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_au7 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_au8 :: Char ~ Char
setEvBind
  ev = cobox_au7
  tm  = CO [cobox_au8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_au8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_au8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoN :: a_aoM
                                ~ [a_aoG] [" a type equality a_aoM
                                                             ~
                                                             [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoN :: a_aoM
                                 ~ [a_aoG] [" a type equality a_aoM
                                                              ~
                                                              [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                      ~
                                                      [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
canEvNC:eq
  a_aoM
  [a_aoG]
can_eq_nc
  [W] cobox_aoN :: a_aoM ~ [a_aoG]
  a_aoM
  a_aoM
  [a_aoG]
  [a_aoG]
canEqTyVar
  a_aoM
  [a_aoG]
  Not-swapped
Following bound tyvar a_aoG = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aoN :: a_aoM
                                 ~ [Char] [" a type equality a_aoM
                                                             ~
                                                             [a_aoG] " Pretty.hs:113:21-31] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoM := [Char]
  Coercion: a_aoM ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoM := [Char]
setEvBind
  ev = cobox_aoN
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  a_aoM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
60[<C:0,F:0>] [W] cobox_aoN :: a_aoM ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoO :: t_anB
                                ~ [a_aoM] [" a type equality t_anB
                                                             ~
                                                             [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoO :: t_anB
                                 ~ [a_aoM] [" a type equality t_anB
                                                              ~
                                                              [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                      ~
                                                      [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
canEvNC:eq
  t_anB
  [a_aoM]
can_eq_nc
  [W] cobox_aoO :: t_anB ~ [a_aoM]
  t_anB
  t_anB
  [a_aoM]
  [a_aoM]
canEqTyVar
  t_anB
  [a_aoM]
  Not-swapped
Following bound tyvar t_anB = Doc
canEqTyVar2
  t_anB
  [a_aoM]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoO :: Doc ~ [a_aoM]
  Doc
  Doc
  [a_aoM]
  [a_aoM]
can_eq_nc
  [W] cobox_aoO :: Doc ~ [a_aoM]
  [String]
  Doc
  [a_aoM]
  [a_aoM]
newWantedEvVar/cache miss [W] cobox_au9 :: String ~ a_aoM
setEvBind
  ev = cobox_aoO
  tm  = CO [cobox_au9]_N
canEvNC:eq
  String
  a_aoM
can_eq_nc
  [W] cobox_au9 :: String ~ a_aoM
  String
  String
  a_aoM
  a_aoM
can_eq_nc
  [W] cobox_au9 :: String ~ a_aoM
  [Char]
  String
  a_aoM
  a_aoM
canEqTyVar
  a_aoM
  [Char]
  Is-swapped
Following bound tyvar a_aoM = [Char]
newWantedEvVar/cache miss [W] cobox_aua :: [Char] ~ String
setEvBind
  ev = cobox_au9
  tm  = CO Sym cobox_aua
rewriteEqEvidence
  [W] cobox_au9 :: String ~ a_aoM
  [Char]
  String
  Sym cobox_aua
canEqTyVar2
  a_aoM
  [Char]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aua :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aub :: Char ~ Char
setEvBind
  ev = cobox_aua
  tm  = CO [cobox_aub]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aub :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aub
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoP :: t_anq
                                ~ [a_aoE] [" a type equality t_anq
                                                             ~
                                                             [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoP :: t_anq
                                 ~ [a_aoE] [" a type equality t_anq
                                                              ~
                                                              [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                      ~
                                                      [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
canEvNC:eq
  t_anq
  [a_aoE]
can_eq_nc
  [W] cobox_aoP :: t_anq ~ [a_aoE]
  t_anq
  t_anq
  [a_aoE]
  [a_aoE]
canEqTyVar
  t_anq
  [a_aoE]
  Not-swapped
Following bound tyvar t_anq = Doc
canEqTyVar2
  t_anq
  [a_aoE]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoP :: Doc ~ [a_aoE]
  Doc
  Doc
  [a_aoE]
  [a_aoE]
can_eq_nc
  [W] cobox_aoP :: Doc ~ [a_aoE]
  [String]
  Doc
  [a_aoE]
  [a_aoE]
newWantedEvVar/cache miss [W] cobox_auc :: String ~ a_aoE
setEvBind
  ev = cobox_aoP
  tm  = CO [cobox_auc]_N
canEvNC:eq
  String
  a_aoE
can_eq_nc
  [W] cobox_auc :: String ~ a_aoE
  String
  String
  a_aoE
  a_aoE
can_eq_nc
  [W] cobox_auc :: String ~ a_aoE
  [Char]
  String
  a_aoE
  a_aoE
canEqTyVar
  a_aoE
  [Char]
  Is-swapped
Following bound tyvar a_aoE = String
newWantedEvVar/cache miss [W] cobox_aud :: String ~ String
setEvBind
  ev = cobox_auc
  tm  = CO Sym cobox_aud
rewriteEqEvidence
  [W] cobox_auc :: String ~ a_aoE
  String
  String
  Sym cobox_aud
canEqTyVar2
  a_aoE
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aud :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aud :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aue :: Char ~ Char
setEvBind
  ev = cobox_aud
  tm  = CO [cobox_aue]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aue :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aue
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoQ :: t_aoq
                                ~ t_ano [" a type equality t_aoq
                                                           ~
                                                           t_ano " Pretty.hs:115:14-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoQ :: t_aoq
                                 ~ t_ano [" a type equality t_aoq
                                                            ~
                                                            t_ano " Pretty.hs:115:14-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                    ~
                                                    t_ano " Pretty.hs:115:14-24] (CNonCanonical)
canEvNC:eq
  t_aoq
  t_ano
can_eq_nc
  [W] cobox_aoQ :: t_aoq ~ t_ano
  t_aoq
  t_aoq
  t_ano
  t_ano
canEqTyVar
  t_aoq
  t_ano
  Not-swapped
Following bound tyvar t_aoq = Int
canEqTyVar2
  t_aoq
  t_ano
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aoQ :: Int ~ t_ano
  Int
  Int
  t_ano
  t_ano
canEqTyVar
  t_ano
  Int
  Is-swapped
Following bound tyvar t_ano = Int
newWantedEvVar/cache miss [W] cobox_auf :: Int ~ Int
setEvBind
  ev = cobox_aoQ
  tm  = CO Sym cobox_auf
rewriteEqEvidence
  [W] cobox_aoQ :: Int ~ t_ano
  Int
  Int
  Sym cobox_auf
canEqTyVar2
  t_ano
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_auf :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_auf
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoT :: [a_aoS]
                                ~ t_anp [" a type equality [a_aoS]
                                                           ~
                                                           t_anp " Pretty.hs:115:27-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoT :: [a_aoS]
                                 ~ t_anp [" a type equality [a_aoS]
                                                            ~
                                                            t_anp " Pretty.hs:115:27-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                      ~
                                                      t_anp " Pretty.hs:115:27-37] (CNonCanonical)
canEvNC:eq
  [a_aoS]
  t_anp
can_eq_nc
  [W] cobox_aoT :: [a_aoS] ~ t_anp
  [a_aoS]
  [a_aoS]
  t_anp
  t_anp
canEqTyVar
  t_anp
  [a_aoS]
  Is-swapped
Following bound tyvar t_anp = Doc
newWantedEvVar/cache miss [W] cobox_aug :: Doc ~ [a_aoS]
setEvBind
  ev = cobox_aoT
  tm  = CO Sym cobox_aug
rewriteEqEvidence
  [W] cobox_aoT :: [a_aoS] ~ t_anp
  Doc
  [a_aoS]
  Sym cobox_aug
canEqTyVar2
  t_anp
  [a_aoS]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aug :: Doc ~ [a_aoS]
  Doc
  Doc
  [a_aoS]
  [a_aoS]
can_eq_nc
  [W] cobox_aug :: Doc ~ [a_aoS]
  [String]
  Doc
  [a_aoS]
  [a_aoS]
newWantedEvVar/cache miss [W] cobox_auh :: String ~ a_aoS
setEvBind
  ev = cobox_aug
  tm  = CO [cobox_auh]_N
canEvNC:eq
  String
  a_aoS
can_eq_nc
  [W] cobox_auh :: String ~ a_aoS
  String
  String
  a_aoS
  a_aoS
can_eq_nc
  [W] cobox_auh :: String ~ a_aoS
  [Char]
  String
  a_aoS
  a_aoS
canEqTyVar
  a_aoS
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aui :: a_aoS ~ String
setEvBind
  ev = cobox_auh
  tm  = CO Sym cobox_aui
rewriteEqEvidence
  [W] cobox_auh :: String ~ a_aoS
  a_aoS
  String
  Sym cobox_aui
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aui :: a_aoS
                                 ~ String [" a type equality [a_aoS]
                                                             ~
                                                             t_anp " Pretty.hs:115:27-37] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoS := String
  Coercion: a_aoS ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoS := String
setEvBind
  ev = cobox_aui
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aoS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
64[<C:0,F:0>] [W] cobox_aui :: a_aoS ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoU :: t_anB
                                ~ [a_aoS] [" a type equality t_anB
                                                             ~
                                                             [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoU :: t_anB
                                 ~ [a_aoS] [" a type equality t_anB
                                                              ~
                                                              [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                      ~
                                                      [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
canEvNC:eq
  t_anB
  [a_aoS]
can_eq_nc
  [W] cobox_aoU :: t_anB ~ [a_aoS]
  t_anB
  t_anB
  [a_aoS]
  [a_aoS]
canEqTyVar
  t_anB
  [a_aoS]
  Not-swapped
Following bound tyvar t_anB = Doc
canEqTyVar2
  t_anB
  [a_aoS]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoU :: Doc ~ [a_aoS]
  Doc
  Doc
  [a_aoS]
  [a_aoS]
can_eq_nc
  [W] cobox_aoU :: Doc ~ [a_aoS]
  [String]
  Doc
  [a_aoS]
  [a_aoS]
newWantedEvVar/cache miss [W] cobox_auj :: String ~ a_aoS
setEvBind
  ev = cobox_aoU
  tm  = CO [cobox_auj]_N
canEvNC:eq
  String
  a_aoS
can_eq_nc
  [W] cobox_auj :: String ~ a_aoS
  String
  String
  a_aoS
  a_aoS
can_eq_nc
  [W] cobox_auj :: String ~ a_aoS
  [Char]
  String
  a_aoS
  a_aoS
canEqTyVar
  a_aoS
  [Char]
  Is-swapped
Following bound tyvar a_aoS = String
newWantedEvVar/cache miss [W] cobox_auk :: String ~ String
setEvBind
  ev = cobox_auj
  tm  = CO Sym cobox_auk
rewriteEqEvidence
  [W] cobox_auj :: String ~ a_aoS
  String
  String
  Sym cobox_auk
canEqTyVar2
  a_aoS
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_auk :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_auk :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aul :: Char ~ Char
setEvBind
  ev = cobox_auk
  tm  = CO [cobox_aul]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aul :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aul
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoW :: t_anC
                                ~ t_an4 [" a type equality t_anC
                                                           ~
                                                           t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoW :: t_anC
                                 ~ t_an4 [" a type equality t_anC
                                                            ~
                                                            t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                    ~
                                                    t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
canEvNC:eq
  t_anC
  t_an4
can_eq_nc
  [W] cobox_aoW :: t_anC ~ t_an4
  t_anC
  t_anC
  t_an4
  t_an4
canEqTyVar
  t_anC
  t_an4
  Not-swapped
Following bound tyvar t_anC = Doc
canEqTyVar2
  t_anC
  t_an4
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoW :: Doc ~ t_an4
  Doc
  Doc
  t_an4
  t_an4
can_eq_nc
  [W] cobox_aoW :: Doc ~ t_an4
  [String]
  Doc
  t_an4
  t_an4
canEqTyVar
  t_an4
  [String]
  Is-swapped
Following bound tyvar t_an4 = Doc
newWantedEvVar/cache miss [W] cobox_aum :: Doc ~ Doc
setEvBind
  ev = cobox_aoW
  tm  = CO Sym cobox_aum
rewriteEqEvidence
  [W] cobox_aoW :: Doc ~ t_an4
  Doc
  Doc
  Sym cobox_aum
canEqTyVar2
  t_an4
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aum :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aum :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aun :: String ~ String
setEvBind
  ev = cobox_aum
  tm  = CO [cobox_aun]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aun :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aun :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aun :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auo :: Char ~ Char
setEvBind
  ev = cobox_aun
  tm  = CO [cobox_auo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoX :: t_an2
                                ~ t_anA [" a type equality t_an2
                                                           ~
                                                           t_anA " Pretty.hs:141:17-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoX :: t_an2
                                 ~ t_anA [" a type equality t_an2
                                                            ~
                                                            t_anA " Pretty.hs:141:17-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                    ~
                                                    t_anA " Pretty.hs:141:17-20] (CNonCanonical)
canEvNC:eq
  t_an2
  t_anA
can_eq_nc
  [W] cobox_aoX :: t_an2 ~ t_anA
  t_an2
  t_an2
  t_anA
  t_anA
canEqTyVar
  t_an2
  t_anA
  Not-swapped
Following bound tyvar t_an2 = Doc
canEqTyVar2
  t_an2
  t_anA
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoX :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_aoX :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_aup :: Doc ~ Doc
setEvBind
  ev = cobox_aoX
  tm  = CO Sym cobox_aup
rewriteEqEvidence
  [W] cobox_aoX :: Doc ~ t_anA
  Doc
  Doc
  Sym cobox_aup
canEqTyVar2
  t_anA
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aup :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aup :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auq :: String ~ String
setEvBind
  ev = cobox_aup
  tm  = CO [cobox_auq]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auq :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auq :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aur :: Char ~ Char
setEvBind
  ev = cobox_auq
  tm  = CO [cobox_aur]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aur :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aur
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoY :: t_anq
                                ~ t_anB [" a type equality t_anq
                                                           ~
                                                           t_anB " Pretty.hs:141:26-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoY :: t_anq
                                 ~ t_anB [" a type equality t_anq
                                                            ~
                                                            t_anB " Pretty.hs:141:26-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                    ~
                                                    t_anB " Pretty.hs:141:26-40] (CNonCanonical)
canEvNC:eq
  t_anq
  t_anB
can_eq_nc
  [W] cobox_aoY :: t_anq ~ t_anB
  t_anq
  t_anq
  t_anB
  t_anB
canEqTyVar
  t_anq
  t_anB
  Not-swapped
Following bound tyvar t_anq = Doc
canEqTyVar2
  t_anq
  t_anB
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoY :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_aoY :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_aus :: Doc ~ Doc
setEvBind
  ev = cobox_aoY
  tm  = CO Sym cobox_aus
rewriteEqEvidence
  [W] cobox_aoY :: Doc ~ t_anB
  Doc
  Doc
  Sym cobox_aus
canEqTyVar2
  t_anB
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aus :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aus :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aut :: String ~ String
setEvBind
  ev = cobox_aus
  tm  = CO [cobox_aut]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aut :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aut :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aut :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auu :: Char ~ Char
setEvBind
  ev = cobox_aut
  tm  = CO [cobox_auu]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auu :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auu
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arw :: (Integer -> a_aru)
                                ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                        ~
                                                                        Integer
                                                                        -> t_ano " Pretty.hs:141:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arw :: (Integer -> a_aru)
                                 ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                         ~
                                                                         Integer
                                                                         -> t_ano " Pretty.hs:141:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arw :: (Integer -> a_aru)
                   ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                           ~
                                                           Integer
                                                           -> t_ano " Pretty.hs:141:35] (CNonCanonical)
canEvNC:eq
  Integer -> a_aru
  Integer -> t_ano
can_eq_nc
  [W] cobox_arw :: (Integer -> a_aru) ~ (Integer -> t_ano)
  Integer -> a_aru
  Integer -> a_aru
  Integer -> t_ano
  Integer -> t_ano
newWantedEvVar/cache miss [W] cobox_auv :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_auw :: a_aru ~ t_ano
setEvBind
  ev = cobox_arw
  tm  = CO cobox_auv -> cobox_auw
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_auv :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_auv
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_auw :: a_aru
                                ~ t_ano [" a type equality Integer -> a_aru
                                                           ~
                                                           Integer
                                                           -> t_ano " Pretty.hs:141:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_auw :: a_aru
                                 ~ t_ano [" a type equality Integer -> a_aru
                                                            ~
                                                            Integer
                                                            -> t_ano " Pretty.hs:141:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_auw :: a_aru ~ t_ano [" a type equality Integer -> a_aru
                                                    ~
                                                    Integer
                                                    -> t_ano " Pretty.hs:141:35] (CNonCanonical)
canEvNC:eq
  a_aru
  t_ano
can_eq_nc
  [W] cobox_auw :: a_aru ~ t_ano
  a_aru
  a_aru
  t_ano
  t_ano
canEqTyVar
  a_aru
  t_ano
  Not-swapped
Following bound tyvar t_ano = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auw :: a_aru
                                 ~ Int [" a type equality Integer -> a_aru
                                                          ~
                                                          Integer
                                                          -> t_ano " Pretty.hs:141:35] (CTyEqCan)
Sneaky unification:
  Unifies: a_aru := Int
  Coercion: a_aru ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aru := Int
setEvBind
  ev = cobox_auw
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aru
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
70[<C:0,F:0>] [W] cobox_auw :: a_aru ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arx :: t_an3
                                ~ t_anp [" a type equality t_an3
                                                           ~
                                                           t_anp " Pretty.hs:141:37-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arx :: t_an3
                                 ~ t_anp [" a type equality t_an3
                                                            ~
                                                            t_anp " Pretty.hs:141:37-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                    ~
                                                    t_anp " Pretty.hs:141:37-40] (CNonCanonical)
canEvNC:eq
  t_an3
  t_anp
can_eq_nc
  [W] cobox_arx :: t_an3 ~ t_anp
  t_an3
  t_an3
  t_anp
  t_anp
canEqTyVar
  t_an3
  t_anp
  Not-swapped
Following bound tyvar t_an3 = Doc
canEqTyVar2
  t_an3
  t_anp
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arx :: Doc ~ t_anp
  Doc
  Doc
  t_anp
  t_anp
can_eq_nc
  [W] cobox_arx :: Doc ~ t_anp
  [String]
  Doc
  t_anp
  t_anp
canEqTyVar
  t_anp
  [String]
  Is-swapped
Following bound tyvar t_anp = Doc
newWantedEvVar/cache miss [W] cobox_aux :: Doc ~ Doc
setEvBind
  ev = cobox_arx
  tm  = CO Sym cobox_aux
rewriteEqEvidence
  [W] cobox_arx :: Doc ~ t_anp
  Doc
  Doc
  Sym cobox_aux
canEqTyVar2
  t_anp
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aux :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aux :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auy :: String ~ String
setEvBind
  ev = cobox_aux
  tm  = CO [cobox_auy]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auy :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auy :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auy :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auz :: Char ~ Char
setEvBind
  ev = cobox_auy
  tm  = CO [cobox_auz]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arA :: [t_arz]
                                ~ t_anH [" a type equality [t_arz]
                                                           ~
                                                           t_anH " Pretty.hs:103:5-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arA :: [t_arz]
                                 ~ t_anH [" a type equality [t_arz]
                                                            ~
                                                            t_anH " Pretty.hs:103:5-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                      ~
                                                      t_anH " Pretty.hs:103:5-14] (CNonCanonical)
canEvNC:eq
  [t_arz]
  t_anH
can_eq_nc
  [W] cobox_arA :: [t_arz] ~ t_anH
  [t_arz]
  [t_arz]
  t_anH
  t_anH
canEqTyVar
  t_anH
  [t_arz]
  Is-swapped
Following bound tyvar t_anH = Doc
newWantedEvVar/cache miss [W] cobox_auA :: Doc ~ [t_arz]
setEvBind
  ev = cobox_arA
  tm  = CO Sym cobox_auA
rewriteEqEvidence
  [W] cobox_arA :: [t_arz] ~ t_anH
  Doc
  [t_arz]
  Sym cobox_auA
canEqTyVar2
  t_anH
  [t_arz]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auA :: Doc ~ [t_arz]
  Doc
  Doc
  [t_arz]
  [t_arz]
can_eq_nc
  [W] cobox_auA :: Doc ~ [t_arz]
  [String]
  Doc
  [t_arz]
  [t_arz]
newWantedEvVar/cache miss [W] cobox_auB :: String ~ t_arz
setEvBind
  ev = cobox_auA
  tm  = CO [cobox_auB]_N
canEvNC:eq
  String
  t_arz
can_eq_nc
  [W] cobox_auB :: String ~ t_arz
  String
  String
  t_arz
  t_arz
can_eq_nc
  [W] cobox_auB :: String ~ t_arz
  [Char]
  String
  t_arz
  t_arz
canEqTyVar
  t_arz
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auC :: t_arz ~ String
setEvBind
  ev = cobox_auB
  tm  = CO Sym cobox_auC
rewriteEqEvidence
  [W] cobox_auB :: String ~ t_arz
  t_arz
  String
  Sym cobox_auC
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auC :: t_arz
                                 ~ String [" a type equality [t_arz]
                                                             ~
                                                             t_anH " Pretty.hs:103:5-14] (CTyEqCan)
Sneaky unification:
  Unifies: t_arz := String
  Coercion: t_arz ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arz := String
setEvBind
  ev = cobox_auC
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_arz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
72[<C:0,F:0>] [W] cobox_auC :: t_arz ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arB :: t_anG
                                ~ t_arz [" a type equality t_anG
                                                           ~
                                                           t_arz " Pretty.hs:103:7-12] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arB :: t_anG
                                 ~ t_arz [" a type equality t_anG
                                                            ~
                                                            t_arz " Pretty.hs:103:7-12] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                    ~
                                                    t_arz " Pretty.hs:103:7-12] (CNonCanonical)
canEvNC:eq
  t_anG
  t_arz
can_eq_nc
  [W] cobox_arB :: t_anG ~ t_arz
  t_anG
  t_anG
  t_arz
  t_arz
canEqTyVar
  t_anG
  t_arz
  Not-swapped
Following bound tyvar t_anG = String
canEqTyVar2
  t_anG
  t_arz
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_arB :: String ~ t_arz
  String
  String
  t_arz
  t_arz
can_eq_nc
  [W] cobox_arB :: String ~ t_arz
  [Char]
  String
  t_arz
  t_arz
canEqTyVar
  t_arz
  [Char]
  Is-swapped
Following bound tyvar t_arz = String
newWantedEvVar/cache miss [W] cobox_auD :: String ~ String
setEvBind
  ev = cobox_arB
  tm  = CO Sym cobox_auD
rewriteEqEvidence
  [W] cobox_arB :: String ~ t_arz
  String
  String
  Sym cobox_auD
canEqTyVar2
  t_arz
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_auD :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_auD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auE :: Char ~ Char
setEvBind
  ev = cobox_auD
  tm  = CO [cobox_auE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arE :: [t_arD]
                                ~ t_anK [" a type equality [t_arD]
                                                           ~
                                                           t_anK " Pretty.hs:99:8-9] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arE :: [t_arD]
                                 ~ t_anK [" a type equality [t_arD]
                                                            ~
                                                            t_anK " Pretty.hs:99:8-9] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                      ~
                                                      t_anK " Pretty.hs:99:8-9] (CNonCanonical)
canEvNC:eq
  [t_arD]
  t_anK
can_eq_nc
  [W] cobox_arE :: [t_arD] ~ t_anK
  [t_arD]
  [t_arD]
  t_anK
  t_anK
canEqTyVar
  t_anK
  [t_arD]
  Is-swapped
Following bound tyvar t_anK = Doc
newWantedEvVar/cache miss [W] cobox_auF :: Doc ~ [t_arD]
setEvBind
  ev = cobox_arE
  tm  = CO Sym cobox_auF
rewriteEqEvidence
  [W] cobox_arE :: [t_arD] ~ t_anK
  Doc
  [t_arD]
  Sym cobox_auF
canEqTyVar2
  t_anK
  [t_arD]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auF :: Doc ~ [t_arD]
  Doc
  Doc
  [t_arD]
  [t_arD]
can_eq_nc
  [W] cobox_auF :: Doc ~ [t_arD]
  [String]
  Doc
  [t_arD]
  [t_arD]
newWantedEvVar/cache miss [W] cobox_auG :: String ~ t_arD
setEvBind
  ev = cobox_auF
  tm  = CO [cobox_auG]_N
canEvNC:eq
  String
  t_arD
can_eq_nc
  [W] cobox_auG :: String ~ t_arD
  String
  String
  t_arD
  t_arD
can_eq_nc
  [W] cobox_auG :: String ~ t_arD
  [Char]
  String
  t_arD
  t_arD
canEqTyVar
  t_arD
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auH :: t_arD ~ String
setEvBind
  ev = cobox_auG
  tm  = CO Sym cobox_auH
rewriteEqEvidence
  [W] cobox_auG :: String ~ t_arD
  t_arD
  String
  Sym cobox_auH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auH :: t_arD
                                 ~ String [" a type equality [t_arD]
                                                             ~
                                                             t_anK " Pretty.hs:99:8-9] (CTyEqCan)
Sneaky unification:
  Unifies: t_arD := String
  Coercion: t_arD ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arD := String
setEvBind
  ev = cobox_auH
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_arD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
74[<C:0,F:0>] [W] cobox_auH :: t_arD ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arH :: [t_arG]
                                ~ t_amY [" a type equality [t_arG]
                                                           ~
                                                           t_amY " Pretty.hs:144:12-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arH :: [t_arG]
                                 ~ t_amY [" a type equality [t_arG]
                                                            ~
                                                            t_amY " Pretty.hs:144:12-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                      ~
                                                      t_amY " Pretty.hs:144:12-13] (CNonCanonical)
canEvNC:eq
  [t_arG]
  t_amY
can_eq_nc
  [W] cobox_arH :: [t_arG] ~ t_amY
  [t_arG]
  [t_arG]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [t_arG]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_auI :: [Doc] ~ [t_arG]
setEvBind
  ev = cobox_arH
  tm  = CO Sym cobox_auI
rewriteEqEvidence
  [W] cobox_arH :: [t_arG] ~ t_amY
  [Doc]
  [t_arG]
  Sym cobox_auI
canEqTyVar2
  t_amY
  [t_arG]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_auI :: [Doc] ~ [t_arG]
  [Doc]
  [Doc]
  [t_arG]
  [t_arG]
newWantedEvVar/cache miss [W] cobox_auJ :: Doc ~ t_arG
setEvBind
  ev = cobox_auI
  tm  = CO [cobox_auJ]_N
canEvNC:eq
  Doc
  t_arG
can_eq_nc
  [W] cobox_auJ :: Doc ~ t_arG
  Doc
  Doc
  t_arG
  t_arG
can_eq_nc
  [W] cobox_auJ :: Doc ~ t_arG
  [String]
  Doc
  t_arG
  t_arG
canEqTyVar
  t_arG
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auK :: t_arG ~ Doc
setEvBind
  ev = cobox_auJ
  tm  = CO Sym cobox_auK
rewriteEqEvidence
  [W] cobox_auJ :: Doc ~ t_arG
  t_arG
  Doc
  Sym cobox_auK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auK :: t_arG
                                 ~ Doc [" a type equality [t_arG]
                                                          ~
                                                          t_amY " Pretty.hs:144:12-13] (CTyEqCan)
Sneaky unification:
  Unifies: t_arG := Doc
  Coercion: t_arG ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arG := Doc
setEvBind
  ev = cobox_auK
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_arG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
75[<C:0,F:0>] [W] cobox_auK :: t_arG ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arI :: t_anK
                                ~ t_amZ [" a type equality t_anK
                                                           ~
                                                           t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arI :: t_anK
                                 ~ t_amZ [" a type equality t_anK
                                                            ~
                                                            t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                    ~
                                                    t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
canEvNC:eq
  t_anK
  t_amZ
can_eq_nc
  [W] cobox_arI :: t_anK ~ t_amZ
  t_anK
  t_anK
  t_amZ
  t_amZ
canEqTyVar
  t_anK
  t_amZ
  Not-swapped
Following bound tyvar t_anK = Doc
canEqTyVar2
  t_anK
  t_amZ
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arI :: Doc ~ t_amZ
  Doc
  Doc
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_arI :: Doc ~ t_amZ
  [String]
  Doc
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [String]
  Is-swapped
Following bound tyvar t_amZ = Doc
newWantedEvVar/cache miss [W] cobox_auL :: Doc ~ Doc
setEvBind
  ev = cobox_arI
  tm  = CO Sym cobox_auL
rewriteEqEvidence
  [W] cobox_arI :: Doc ~ t_amZ
  Doc
  Doc
  Sym cobox_auL
canEqTyVar2
  t_amZ
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auL :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_auL :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auM :: String ~ String
setEvBind
  ev = cobox_auL
  tm  = CO [cobox_auM]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auM :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auM :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auM :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auN :: Char ~ Char
setEvBind
  ev = cobox_auM
  tm  = CO [cobox_auN]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arK :: [t_arJ]
                                ~ t_amY [" a type equality [t_arJ]
                                                           ~
                                                           t_amY " Pretty.hs:145:12-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arK :: [t_arJ]
                                 ~ t_amY [" a type equality [t_arJ]
                                                            ~
                                                            t_amY " Pretty.hs:145:12-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                      ~
                                                      t_amY " Pretty.hs:145:12-14] (CNonCanonical)
canEvNC:eq
  [t_arJ]
  t_amY
can_eq_nc
  [W] cobox_arK :: [t_arJ] ~ t_amY
  [t_arJ]
  [t_arJ]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [t_arJ]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_auO :: [Doc] ~ [t_arJ]
setEvBind
  ev = cobox_arK
  tm  = CO Sym cobox_auO
rewriteEqEvidence
  [W] cobox_arK :: [t_arJ] ~ t_amY
  [Doc]
  [t_arJ]
  Sym cobox_auO
canEqTyVar2
  t_amY
  [t_arJ]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_auO :: [Doc] ~ [t_arJ]
  [Doc]
  [Doc]
  [t_arJ]
  [t_arJ]
newWantedEvVar/cache miss [W] cobox_auP :: Doc ~ t_arJ
setEvBind
  ev = cobox_auO
  tm  = CO [cobox_auP]_N
canEvNC:eq
  Doc
  t_arJ
can_eq_nc
  [W] cobox_auP :: Doc ~ t_arJ
  Doc
  Doc
  t_arJ
  t_arJ
can_eq_nc
  [W] cobox_auP :: Doc ~ t_arJ
  [String]
  Doc
  t_arJ
  t_arJ
canEqTyVar
  t_arJ
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auQ :: t_arJ ~ Doc
setEvBind
  ev = cobox_auP
  tm  = CO Sym cobox_auQ
rewriteEqEvidence
  [W] cobox_auP :: Doc ~ t_arJ
  t_arJ
  Doc
  Sym cobox_auQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auQ :: t_arJ
                                 ~ Doc [" a type equality [t_arJ]
                                                          ~
                                                          t_amY " Pretty.hs:145:12-14] (CTyEqCan)
Sneaky unification:
  Unifies: t_arJ := Doc
  Coercion: t_arJ ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arJ := Doc
setEvBind
  ev = cobox_auQ
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_arJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
77[<C:0,F:0>] [W] cobox_auQ :: t_arJ ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arL :: t_arJ
                                ~ t_amZ [" a type equality t_arJ
                                                           ~
                                                           t_amZ " Pretty.hs:145:18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arL :: t_arJ
                                 ~ t_amZ [" a type equality t_arJ
                                                            ~
                                                            t_amZ " Pretty.hs:145:18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                    ~
                                                    t_amZ " Pretty.hs:145:18] (CNonCanonical)
canEvNC:eq
  t_arJ
  t_amZ
can_eq_nc
  [W] cobox_arL :: t_arJ ~ t_amZ
  t_arJ
  t_arJ
  t_amZ
  t_amZ
canEqTyVar
  t_arJ
  t_amZ
  Not-swapped
Following bound tyvar t_arJ = Doc
canEqTyVar2
  t_arJ
  t_amZ
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arL :: Doc ~ t_amZ
  Doc
  Doc
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_arL :: Doc ~ t_amZ
  [String]
  Doc
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [String]
  Is-swapped
Following bound tyvar t_amZ = Doc
newWantedEvVar/cache miss [W] cobox_auR :: Doc ~ Doc
setEvBind
  ev = cobox_arL
  tm  = CO Sym cobox_auR
rewriteEqEvidence
  [W] cobox_arL :: Doc ~ t_amZ
  Doc
  Doc
  Sym cobox_auR
canEqTyVar2
  t_amZ
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auR :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_auR :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auS :: String ~ String
setEvBind
  ev = cobox_auR
  tm  = CO [cobox_auS]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auS :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auS :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auS :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auT :: Char ~ Char
setEvBind
  ev = cobox_auS
  tm  = CO [cobox_auT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arN :: [t_arM]
                                ~ t_amY [" a type equality [t_arM]
                                                           ~
                                                           t_amY " Pretty.hs:146:13-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arN :: [t_arM]
                                 ~ t_amY [" a type equality [t_arM]
                                                            ~
                                                            t_amY " Pretty.hs:146:13-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                      ~
                                                      t_amY " Pretty.hs:146:13-16] (CNonCanonical)
canEvNC:eq
  [t_arM]
  t_amY
can_eq_nc
  [W] cobox_arN :: [t_arM] ~ t_amY
  [t_arM]
  [t_arM]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [t_arM]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_auU :: [Doc] ~ [t_arM]
setEvBind
  ev = cobox_arN
  tm  = CO Sym cobox_auU
rewriteEqEvidence
  [W] cobox_arN :: [t_arM] ~ t_amY
  [Doc]
  [t_arM]
  Sym cobox_auU
canEqTyVar2
  t_amY
  [t_arM]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_auU :: [Doc] ~ [t_arM]
  [Doc]
  [Doc]
  [t_arM]
  [t_arM]
newWantedEvVar/cache miss [W] cobox_auV :: Doc ~ t_arM
setEvBind
  ev = cobox_auU
  tm  = CO [cobox_auV]_N
canEvNC:eq
  Doc
  t_arM
can_eq_nc
  [W] cobox_auV :: Doc ~ t_arM
  Doc
  Doc
  t_arM
  t_arM
can_eq_nc
  [W] cobox_auV :: Doc ~ t_arM
  [String]
  Doc
  t_arM
  t_arM
canEqTyVar
  t_arM
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auW :: t_arM ~ Doc
setEvBind
  ev = cobox_auV
  tm  = CO Sym cobox_auW
rewriteEqEvidence
  [W] cobox_auV :: Doc ~ t_arM
  t_arM
  Doc
  Sym cobox_auW
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auW :: t_arM
                                 ~ Doc [" a type equality [t_arM]
                                                          ~
                                                          t_amY " Pretty.hs:146:13-16] (CTyEqCan)
Sneaky unification:
  Unifies: t_arM := Doc
  Coercion: t_arM ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arM := Doc
setEvBind
  ev = cobox_auW
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_arM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
79[<C:0,F:0>] [W] cobox_auW :: t_arM ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arO :: t_an4
                                ~ t_amZ [" a type equality t_an4
                                                           ~
                                                           t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arO :: t_an4
                                 ~ t_amZ [" a type equality t_an4
                                                            ~
                                                            t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                    ~
                                                    t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
canEvNC:eq
  t_an4
  t_amZ
can_eq_nc
  [W] cobox_arO :: t_an4 ~ t_amZ
  t_an4
  t_an4
  t_amZ
  t_amZ
canEqTyVar
  t_an4
  t_amZ
  Not-swapped
Following bound tyvar t_an4 = Doc
canEqTyVar2
  t_an4
  t_amZ
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arO :: Doc ~ t_amZ
  Doc
  Doc
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_arO :: Doc ~ t_amZ
  [String]
  Doc
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [String]
  Is-swapped
Following bound tyvar t_amZ = Doc
newWantedEvVar/cache miss [W] cobox_auX :: Doc ~ Doc
setEvBind
  ev = cobox_arO
  tm  = CO Sym cobox_auX
rewriteEqEvidence
  [W] cobox_arO :: Doc ~ t_amZ
  Doc
  Doc
  Sym cobox_auX
canEqTyVar2
  t_amZ
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auX :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_auX :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auY :: String ~ String
setEvBind
  ev = cobox_auX
  tm  = CO [cobox_auY]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auY :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auY :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auY :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auZ :: Char ~ Char
setEvBind
  ev = cobox_auY
  tm  = CO [cobox_auZ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arP :: t_anC
                                ~ t_an2 [" a type equality t_anC
                                                           ~
                                                           t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arP :: t_anC
                                 ~ t_an2 [" a type equality t_anC
                                                            ~
                                                            t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                    ~
                                                    t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
canEvNC:eq
  t_anC
  t_an2
can_eq_nc
  [W] cobox_arP :: t_anC ~ t_an2
  t_anC
  t_anC
  t_an2
  t_an2
canEqTyVar
  t_anC
  t_an2
  Not-swapped
Following bound tyvar t_anC = Doc
canEqTyVar2
  t_anC
  t_an2
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arP :: Doc ~ t_an2
  Doc
  Doc
  t_an2
  t_an2
can_eq_nc
  [W] cobox_arP :: Doc ~ t_an2
  [String]
  Doc
  t_an2
  t_an2
canEqTyVar
  t_an2
  [String]
  Is-swapped
Following bound tyvar t_an2 = Doc
newWantedEvVar/cache miss [W] cobox_av0 :: Doc ~ Doc
setEvBind
  ev = cobox_arP
  tm  = CO Sym cobox_av0
rewriteEqEvidence
  [W] cobox_arP :: Doc ~ t_an2
  Doc
  Doc
  Sym cobox_av0
canEqTyVar2
  t_an2
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_av0 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_av0 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_av1 :: String ~ String
setEvBind
  ev = cobox_av0
  tm  = CO [cobox_av1]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_av1 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_av1 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_av1 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_av2 :: Char ~ Char
setEvBind
  ev = cobox_av1
  tm  = CO [cobox_av2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_av2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_av2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arQ :: t_arM
                                ~ t_anA [" a type equality t_arM
                                                           ~
                                                           t_anA " Pretty.hs:146:21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arQ :: t_arM
                                 ~ t_anA [" a type equality t_arM
                                                            ~
                                                            t_anA " Pretty.hs:146:21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                    ~
                                                    t_anA " Pretty.hs:146:21] (CNonCanonical)
canEvNC:eq
  t_arM
  t_anA
can_eq_nc
  [W] cobox_arQ :: t_arM ~ t_anA
  t_arM
  t_arM
  t_anA
  t_anA
canEqTyVar
  t_arM
  t_anA
  Not-swapped
Following bound tyvar t_arM = Doc
canEqTyVar2
  t_arM
  t_anA
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arQ :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_arQ :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_av3 :: Doc ~ Doc
setEvBind
  ev = cobox_arQ
  tm  = CO Sym cobox_av3
rewriteEqEvidence
  [W] cobox_arQ :: Doc ~ t_anA
  Doc
  Doc
  Sym cobox_av3
canEqTyVar2
  t_anA
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_av3 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_av3 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_av4 :: String ~ String
setEvBind
  ev = cobox_av3
  tm  = CO [cobox_av4]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_av4 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_av4 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_av4 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_av5 :: Char ~ Char
setEvBind
  ev = cobox_av4
  tm  = CO [cobox_av5]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_av5 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_av5
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arR :: t_anH
                                ~ t_anB [" a type equality t_anH
                                                           ~
                                                           t_anB " Pretty.hs:146:27-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arR :: t_anH
                                 ~ t_anB [" a type equality t_anH
                                                            ~
                                                            t_anB " Pretty.hs:146:27-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                    ~
                                                    t_anB " Pretty.hs:146:27-35] (CNonCanonical)
canEvNC:eq
  t_anH
  t_anB
can_eq_nc
  [W] cobox_arR :: t_anH ~ t_anB
  t_anH
  t_anH
  t_anB
  t_anB
canEqTyVar
  t_anH
  t_anB
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_anB
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arR :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_arR :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_av6 :: Doc ~ Doc
setEvBind
  ev = cobox_arR
  tm  = CO Sym cobox_av6
rewriteEqEvidence
  [W] cobox_arR :: Doc ~ t_anB
  Doc
  Doc
  Sym cobox_av6
canEqTyVar2
  t_anB
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_av6 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_av6 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_av7 :: String ~ String
setEvBind
  ev = cobox_av6
  tm  = CO [cobox_av7]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_av7 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_av7 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_av7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_av8 :: Char ~ Char
setEvBind
  ev = cobox_av7
  tm  = CO [cobox_av8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_av8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_av8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arS :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:146:33-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arS :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:146:33-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:146:33-35] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_arS :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_av9 :: String ~ [Char]
setEvBind
  ev = cobox_arS
  tm  = CO Sym cobox_av9
rewriteEqEvidence
  [W] cobox_arS :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_av9
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_av9 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_av9 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_ava :: Char ~ Char
setEvBind
  ev = cobox_av9
  tm  = CO [cobox_ava]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_ava :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ava
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arT :: t_amZ
                                ~ t_an3 [" a type equality t_amZ
                                                           ~
                                                           t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arT :: t_amZ
                                 ~ t_an3 [" a type equality t_amZ
                                                            ~
                                                            t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                    ~
                                                    t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
canEvNC:eq
  t_amZ
  t_an3
can_eq_nc
  [W] cobox_arT :: t_amZ ~ t_an3
  t_amZ
  t_amZ
  t_an3
  t_an3
canEqTyVar
  t_amZ
  t_an3
  Not-swapped
Following bound tyvar t_amZ = Doc
canEqTyVar2
  t_amZ
  t_an3
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arT :: Doc ~ t_an3
  Doc
  Doc
  t_an3
  t_an3
can_eq_nc
  [W] cobox_arT :: Doc ~ t_an3
  [String]
  Doc
  t_an3
  t_an3
canEqTyVar
  t_an3
  [String]
  Is-swapped
Following bound tyvar t_an3 = Doc
newWantedEvVar/cache miss [W] cobox_avb :: Doc ~ Doc
setEvBind
  ev = cobox_arT
  tm  = CO Sym cobox_avb
rewriteEqEvidence
  [W] cobox_arT :: Doc ~ t_an3
  Doc
  Doc
  Sym cobox_avb
canEqTyVar2
  t_an3
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avb :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avb :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avc :: String ~ String
setEvBind
  ev = cobox_avb
  tm  = CO [cobox_avc]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avc :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avc :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avc :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avd :: Char ~ Char
setEvBind
  ev = cobox_avc
  tm  = CO [cobox_avd]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avd :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avd
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arU :: [t_arM]
                                ~ t_amY [" a type equality [t_arM]
                                                           ~
                                                           t_amY " Pretty.hs:146:52-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arU :: [t_arM]
                                 ~ t_amY [" a type equality [t_arM]
                                                            ~
                                                            t_amY " Pretty.hs:146:52-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                      ~
                                                      t_amY " Pretty.hs:146:52-53] (CNonCanonical)
canEvNC:eq
  [t_arM]
  t_amY
can_eq_nc
  [W] cobox_arU :: [t_arM] ~ t_amY
  [t_arM]
  [t_arM]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [t_arM]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_ave :: [Doc] ~ [t_arM]
setEvBind
  ev = cobox_arU
  tm  = CO Sym cobox_ave
rewriteEqEvidence
  [W] cobox_arU :: [t_arM] ~ t_amY
  [Doc]
  [t_arM]
  Sym cobox_ave
canEqTyVar2
  t_amY
  [t_arM]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_ave :: [Doc] ~ [t_arM]
  [Doc]
  [Doc]
  [t_arM]
  [t_arM]
newWantedEvVar/cache miss [W] cobox_avf :: Doc ~ t_arM
setEvBind
  ev = cobox_ave
  tm  = CO [cobox_avf]_N
canEvNC:eq
  Doc
  t_arM
can_eq_nc
  [W] cobox_avf :: Doc ~ t_arM
  Doc
  Doc
  t_arM
  t_arM
can_eq_nc
  [W] cobox_avf :: Doc ~ t_arM
  [String]
  Doc
  t_arM
  t_arM
canEqTyVar
  t_arM
  [String]
  Is-swapped
Following bound tyvar t_arM = Doc
newWantedEvVar/cache miss [W] cobox_avg :: Doc ~ Doc
setEvBind
  ev = cobox_avf
  tm  = CO Sym cobox_avg
rewriteEqEvidence
  [W] cobox_avf :: Doc ~ t_arM
  Doc
  Doc
  Sym cobox_avg
canEqTyVar2
  t_arM
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avg :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avg :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avh :: String ~ String
setEvBind
  ev = cobox_avg
  tm  = CO [cobox_avh]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avh :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avh :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avh :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avi :: Char ~ Char
setEvBind
  ev = cobox_avh
  tm  = CO [cobox_avi]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avi :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avi
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arW :: t_anC
                                ~ t_amV [" a type equality t_anC
                                                           ~
                                                           t_amV " Pretty.hs:150:5-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arW :: t_anC
                                 ~ t_amV [" a type equality t_anC
                                                            ~
                                                            t_amV " Pretty.hs:150:5-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                    ~
                                                    t_amV " Pretty.hs:150:5-47] (CNonCanonical)
canEvNC:eq
  t_anC
  t_amV
can_eq_nc
  [W] cobox_arW :: t_anC ~ t_amV
  t_anC
  t_anC
  t_amV
  t_amV
canEqTyVar
  t_anC
  t_amV
  Not-swapped
Following bound tyvar t_anC = Doc
canEqTyVar2
  t_anC
  t_amV
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arW :: Doc ~ t_amV
  Doc
  Doc
  t_amV
  t_amV
can_eq_nc
  [W] cobox_arW :: Doc ~ t_amV
  [String]
  Doc
  t_amV
  t_amV
canEqTyVar
  t_amV
  [String]
  Is-swapped
Following bound tyvar t_amV = Doc
newWantedEvVar/cache miss [W] cobox_avj :: Doc ~ Doc
setEvBind
  ev = cobox_arW
  tm  = CO Sym cobox_avj
rewriteEqEvidence
  [W] cobox_arW :: Doc ~ t_amV
  Doc
  Doc
  Sym cobox_avj
canEqTyVar2
  t_amV
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avj :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avj :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avk :: String ~ String
setEvBind
  ev = cobox_avj
  tm  = CO [cobox_avk]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avk :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avk :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avk :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avl :: Char ~ Char
setEvBind
  ev = cobox_avk
  tm  = CO [cobox_avl]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avl :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avl
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arX :: t_anC
                                ~ t_anA [" a type equality t_anC
                                                           ~
                                                           t_anA " Pretty.hs:150:5-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arX :: t_anC
                                 ~ t_anA [" a type equality t_anC
                                                            ~
                                                            t_anA " Pretty.hs:150:5-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                    ~
                                                    t_anA " Pretty.hs:150:5-33] (CNonCanonical)
canEvNC:eq
  t_anC
  t_anA
can_eq_nc
  [W] cobox_arX :: t_anC ~ t_anA
  t_anC
  t_anC
  t_anA
  t_anA
canEqTyVar
  t_anC
  t_anA
  Not-swapped
Following bound tyvar t_anC = Doc
canEqTyVar2
  t_anC
  t_anA
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arX :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_arX :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_avm :: Doc ~ Doc
setEvBind
  ev = cobox_arX
  tm  = CO Sym cobox_avm
rewriteEqEvidence
  [W] cobox_arX :: Doc ~ t_anA
  Doc
  Doc
  Sym cobox_avm
canEqTyVar2
  t_anA
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avm :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avm :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avn :: String ~ String
setEvBind
  ev = cobox_avm
  tm  = CO [cobox_avn]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avn :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avn :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avn :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avo :: Char ~ Char
setEvBind
  ev = cobox_avn
  tm  = CO [cobox_avo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arY :: t_anH
                                ~ t_anA [" a type equality t_anH
                                                           ~
                                                           t_anA " Pretty.hs:150:5-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arY :: t_anH
                                 ~ t_anA [" a type equality t_anH
                                                            ~
                                                            t_anA " Pretty.hs:150:5-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                    ~
                                                    t_anA " Pretty.hs:150:5-13] (CNonCanonical)
canEvNC:eq
  t_anH
  t_anA
can_eq_nc
  [W] cobox_arY :: t_anH ~ t_anA
  t_anH
  t_anH
  t_anA
  t_anA
canEqTyVar
  t_anH
  t_anA
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_anA
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arY :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_arY :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_avp :: Doc ~ Doc
setEvBind
  ev = cobox_arY
  tm  = CO Sym cobox_avp
rewriteEqEvidence
  [W] cobox_arY :: Doc ~ t_anA
  Doc
  Doc
  Sym cobox_avp
canEqTyVar2
  t_anA
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avp :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avp :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avq :: String ~ String
setEvBind
  ev = cobox_avp
  tm  = CO [cobox_avq]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avq :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avq :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avr :: Char ~ Char
setEvBind
  ev = cobox_avq
  tm  = CO [cobox_avr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arZ :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:150:11-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arZ :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:150:11-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:150:11-13] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_arZ :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_avs :: String ~ [Char]
setEvBind
  ev = cobox_arZ
  tm  = CO Sym cobox_avs
rewriteEqEvidence
  [W] cobox_arZ :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_avs
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_avs :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_avs :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_avt :: Char ~ Char
setEvBind
  ev = cobox_avs
  tm  = CO [cobox_avt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as0 :: t_amZ
                                ~ t_anB [" a type equality t_amZ
                                                           ~
                                                           t_anB " Pretty.hs:150:19-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as0 :: t_amZ
                                 ~ t_anB [" a type equality t_amZ
                                                            ~
                                                            t_anB " Pretty.hs:150:19-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                    ~
                                                    t_anB " Pretty.hs:150:19-33] (CNonCanonical)
canEvNC:eq
  t_amZ
  t_anB
can_eq_nc
  [W] cobox_as0 :: t_amZ ~ t_anB
  t_amZ
  t_amZ
  t_anB
  t_anB
canEqTyVar
  t_amZ
  t_anB
  Not-swapped
Following bound tyvar t_amZ = Doc
canEqTyVar2
  t_amZ
  t_anB
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_as0 :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_as0 :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_avu :: Doc ~ Doc
setEvBind
  ev = cobox_as0
  tm  = CO Sym cobox_avu
rewriteEqEvidence
  [W] cobox_as0 :: Doc ~ t_anB
  Doc
  Doc
  Sym cobox_avu
canEqTyVar2
  t_anB
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avu :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avu :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avv :: String ~ String
setEvBind
  ev = cobox_avu
  tm  = CO [cobox_avv]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avv :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avv :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avv :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avw :: Char ~ Char
setEvBind
  ev = cobox_avv
  tm  = CO [cobox_avw]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as1 :: t_amU
                                ~ t_amY [" a type equality t_amU
                                                           ~
                                                           t_amY " Pretty.hs:150:30-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as1 :: t_amU
                                 ~ t_amY [" a type equality t_amU
                                                            ~
                                                            t_amY " Pretty.hs:150:30-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                    ~
                                                    t_amY " Pretty.hs:150:30-33] (CNonCanonical)
canEvNC:eq
  t_amU
  t_amY
can_eq_nc
  [W] cobox_as1 :: t_amU ~ t_amY
  t_amU
  t_amU
  t_amY
  t_amY
canEqTyVar
  t_amU
  t_amY
  Not-swapped
Following bound tyvar t_amU = [Doc]
canEqTyVar2
  t_amU
  t_amY
  Not-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_as1 :: [Doc] ~ t_amY
  [Doc]
  [Doc]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [Doc]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_avx :: [Doc] ~ [Doc]
setEvBind
  ev = cobox_as1
  tm  = CO Sym cobox_avx
rewriteEqEvidence
  [W] cobox_as1 :: [Doc] ~ t_amY
  [Doc]
  [Doc]
  Sym cobox_avx
canEqTyVar2
  t_amY
  [Doc]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_avx :: [Doc] ~ [Doc]
  [Doc]
  [Doc]
  [Doc]
  [Doc]
newWantedEvVar/cache miss [W] cobox_avy :: Doc ~ Doc
setEvBind
  ev = cobox_avx
  tm  = CO [cobox_avy]_N
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_avy :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_avy :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_avy :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avz :: String ~ String
setEvBind
  ev = cobox_avy
  tm  = CO [cobox_avz]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avz :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avz :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avz :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avA :: Char ~ Char
setEvBind
  ev = cobox_avz
  tm  = CO [cobox_avA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as2 :: t_anH
                                ~ t_anB [" a type equality t_anH
                                                           ~
                                                           t_anB " Pretty.hs:150:39-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as2 :: t_anH
                                 ~ t_anB [" a type equality t_anH
                                                            ~
                                                            t_anB " Pretty.hs:150:39-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                    ~
                                                    t_anB " Pretty.hs:150:39-47] (CNonCanonical)
canEvNC:eq
  t_anH
  t_anB
can_eq_nc
  [W] cobox_as2 :: t_anH ~ t_anB
  t_anH
  t_anH
  t_anB
  t_anB
canEqTyVar
  t_anH
  t_anB
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_anB
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_as2 :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_as2 :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_avB :: Doc ~ Doc
setEvBind
  ev = cobox_as2
  tm  = CO Sym cobox_avB
rewriteEqEvidence
  [W] cobox_as2 :: Doc ~ t_anB
  Doc
  Doc
  Sym cobox_avB
canEqTyVar2
  t_anB
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avB :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avB :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avC :: String ~ String
setEvBind
  ev = cobox_avB
  tm  = CO [cobox_avC]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avC :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avC :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avC :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avD :: Char ~ Char
setEvBind
  ev = cobox_avC
  tm  = CO [cobox_avD]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avD :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avD
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as3 :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:150:45-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as3 :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:150:45-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:150:45-47] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_as3 :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_avE :: String ~ [Char]
setEvBind
  ev = cobox_as3
  tm  = CO Sym cobox_avE
rewriteEqEvidence
  [W] cobox_as3 :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_avE
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_avE :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_avE :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_avF :: Char ~ Char
setEvBind
  ev = cobox_avE
  tm  = CO [cobox_avF]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avF :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avF
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as9 :: ([a_as7] -> b_as8)
                                ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                      ~
                                                                      t_amM
                                                                      -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as9 :: ([a_as7] -> b_as8)
                                 ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                       ~
                                                                       t_amM
                                                                       -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as9 :: ([a_as7] -> b_as8)
                   ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                         ~
                                                         t_amM
                                                         -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
canEvNC:eq
  [a_as7] -> b_as8
  t_amM -> t_amN
can_eq_nc
  [W] cobox_as9 :: ([a_as7] -> b_as8) ~ (t_amM -> t_amN)
  [a_as7] -> b_as8
  [a_as7] -> b_as8
  t_amM -> t_amN
  t_amM -> t_amN
newWantedEvVar/cache miss [W] cobox_avG :: [a_as7] ~ t_amM
newWantedEvVar/cache miss [W] cobox_avH :: b_as8 ~ t_amN
setEvBind
  ev = cobox_as9
  tm  = CO cobox_avG -> cobox_avH
canEvNC:eq
  [a_as7]
  t_amM
can_eq_nc
  [W] cobox_avG :: [a_as7] ~ t_amM
  [a_as7]
  [a_as7]
  t_amM
  t_amM
canEqTyVar
  t_amM
  [a_as7]
  Is-swapped
Following bound tyvar t_amM = [Doc]
newWantedEvVar/cache miss [W] cobox_avI :: [Doc] ~ [a_as7]
setEvBind
  ev = cobox_avG
  tm  = CO Sym cobox_avI
rewriteEqEvidence
  [W] cobox_avG :: [a_as7] ~ t_amM
  [Doc]
  [a_as7]
  Sym cobox_avI
canEqTyVar2
  t_amM
  [a_as7]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_avI :: [Doc] ~ [a_as7]
  [Doc]
  [Doc]
  [a_as7]
  [a_as7]
newWantedEvVar/cache miss [W] cobox_avJ :: Doc ~ a_as7
setEvBind
  ev = cobox_avI
  tm  = CO [cobox_avJ]_N
canEvNC:eq
  Doc
  a_as7
can_eq_nc
  [W] cobox_avJ :: Doc ~ a_as7
  Doc
  Doc
  a_as7
  a_as7
can_eq_nc
  [W] cobox_avJ :: Doc ~ a_as7
  [String]
  Doc
  a_as7
  a_as7
canEqTyVar
  a_as7
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_avK :: a_as7 ~ Doc
setEvBind
  ev = cobox_avJ
  tm  = CO Sym cobox_avK
rewriteEqEvidence
  [W] cobox_avJ :: Doc ~ a_as7
  a_as7
  Doc
  Sym cobox_avK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_avK :: a_as7
                                 ~ Doc [" a type equality [a_as7] -> b_as8
                                                          ~
                                                          t_amM
                                                          -> t_amN " Pretty.hs:163:18-33] (CTyEqCan)
Sneaky unification:
  Unifies: a_as7 := Doc
  Coercion: a_as7 ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_as7 := Doc
setEvBind
  ev = cobox_avK
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  a_as7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
95[<C:0,F:0>] [W] cobox_avK :: a_as7 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_avH :: b_as8
                                ~ t_amN [" a type equality [a_as7] -> b_as8
                                                           ~
                                                           t_amM
                                                           -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_avH :: b_as8
                                 ~ t_amN [" a type equality [a_as7] -> b_as8
                                                            ~
                                                            t_amM
                                                            -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_avH :: b_as8 ~ t_amN [" a type equality [a_as7] -> b_as8
                                                    ~
                                                    t_amM
                                                    -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
canEvNC:eq
  b_as8
  t_amN
can_eq_nc
  [W] cobox_avH :: b_as8 ~ t_amN
  b_as8
  b_as8
  t_amN
  t_amN
canEqTyVar
  b_as8
  t_amN
  Not-swapped
Following bound tyvar t_amN = Doc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_avH :: b_as8
                                 ~ Doc [" a type equality [a_as7] -> b_as8
                                                          ~
                                                          t_amM
                                                          -> t_amN " Pretty.hs:163:18-33] (CTyEqCan)
Sneaky unification:
  Unifies: b_as8 := Doc
  Coercion: b_as8 ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_as8 := Doc
setEvBind
  ev = cobox_avH
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  b_as8
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
96[<C:0,F:0>] [W] cobox_avH :: b_as8 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                               -> t_anv -> t_anw
                                                                               ~
                                                                               a_as7
                                                                               -> b_as8
                                                                               -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                 ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                -> t_anv -> t_anw
                                                                                ~
                                                                                a_as7
                                                                                -> b_as8
                                                                                -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                   ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                  -> t_anv -> t_anw
                                                                  ~
                                                                  a_as7
                                                                  -> b_as8
                                                                  -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canEvNC:eq
  t_anu -> t_anv -> t_anw
  a_as7 -> b_as8 -> b_as8
can_eq_nc
  [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                   ~ (a_as7 -> b_as8 -> b_as8)
  t_anu -> t_anv -> t_anw
  t_anu -> t_anv -> t_anw
  a_as7 -> b_as8 -> b_as8
  a_as7 -> b_as8 -> b_as8
newWantedEvVar/cache miss [W] cobox_avL :: t_anu ~ a_as7
newWantedEvVar/cache miss
  [W] cobox_avM :: (t_anv -> t_anw) ~ (b_as8 -> b_as8)
setEvBind
  ev = cobox_asa
  tm  = CO cobox_avL -> cobox_avM
canEvNC:eq
  t_anu
  a_as7
can_eq_nc
  [W] cobox_avL :: t_anu ~ a_as7
  t_anu
  t_anu
  a_as7
  a_as7
canEqTyVar
  t_anu
  a_as7
  Not-swapped
Following bound tyvar t_anu = Doc
canEqTyVar2
  t_anu
  a_as7
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avL :: Doc ~ a_as7
  Doc
  Doc
  a_as7
  a_as7
can_eq_nc
  [W] cobox_avL :: Doc ~ a_as7
  [String]
  Doc
  a_as7
  a_as7
canEqTyVar
  a_as7
  [String]
  Is-swapped
Following bound tyvar a_as7 = Doc
newWantedEvVar/cache miss [W] cobox_avN :: Doc ~ Doc
setEvBind
  ev = cobox_avL
  tm  = CO Sym cobox_avN
rewriteEqEvidence
  [W] cobox_avL :: Doc ~ a_as7
  Doc
  Doc
  Sym cobox_avN
canEqTyVar2
  a_as7
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avN :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avN :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avO :: String ~ String
setEvBind
  ev = cobox_avN
  tm  = CO [cobox_avO]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avO :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avO :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avO :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avP :: Char ~ Char
setEvBind
  ev = cobox_avO
  tm  = CO [cobox_avP]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avP :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avP
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_avM :: (t_anv -> t_anw)
                                ~ (b_as8 -> b_as8) [" a type equality t_anu -> t_anv -> t_anw
                                                                      ~
                                                                      a_as7
                                                                      -> b_as8
                                                                      -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_avM :: (t_anv -> t_anw)
                                 ~ (b_as8 -> b_as8) [" a type equality t_anu -> t_anv -> t_anw
                                                                       ~
                                                                       a_as7
                                                                       -> b_as8
                                                                       -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_avM :: (t_anv -> t_anw)
                   ~ (b_as8 -> b_as8) [" a type equality t_anu -> t_anv -> t_anw
                                                         ~
                                                         a_as7
                                                         -> b_as8
                                                         -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canEvNC:eq
  t_anv -> t_anw
  b_as8 -> b_as8
can_eq_nc
  [W] cobox_avM :: (t_anv -> t_anw) ~ (b_as8 -> b_as8)
  t_anv -> t_anw
  t_anv -> t_anw
  b_as8 -> b_as8
  b_as8 -> b_as8
newWantedEvVar/cache miss [W] cobox_avQ :: t_anv ~ b_as8
newWantedEvVar/cache miss [W] cobox_avR :: t_anw ~ b_as8
setEvBind
  ev = cobox_avM
  tm  = CO cobox_avQ -> cobox_avR
canEvNC:eq
  t_anv
  b_as8
can_eq_nc
  [W] cobox_avQ :: t_anv ~ b_as8
  t_anv
  t_anv
  b_as8
  b_as8
canEqTyVar
  t_anv
  b_as8
  Not-swapped
Following bound tyvar t_anv = Doc
canEqTyVar2
  t_anv
  b_as8
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avQ :: Doc ~ b_as8
  Doc
  Doc
  b_as8
  b_as8
can_eq_nc
  [W] cobox_avQ :: Doc ~ b_as8
  [String]
  Doc
  b_as8
  b_as8
canEqTyVar
  b_as8
  [String]
  Is-swapped
Following bound tyvar b_as8 = Doc
newWantedEvVar/cache miss [W] cobox_avS :: Doc ~ Doc
setEvBind
  ev = cobox_avQ
  tm  = CO Sym cobox_avS
rewriteEqEvidence
  [W] cobox_avQ :: Doc ~ b_as8
  Doc
  Doc
  Sym cobox_avS
canEqTyVar2
  b_as8
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avS :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avS :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avT :: String ~ String
setEvBind
  ev = cobox_avS
  tm  = CO [cobox_avT]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avT :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avT :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avT :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avU :: Char ~ Char
setEvBind
  ev = cobox_avT
  tm  = CO [cobox_avU]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_avR :: t_anw
                                ~ b_as8 [" a type equality t_anu -> t_anv -> t_anw
                                                           ~
                                                           a_as7
                                                           -> b_as8
                                                           -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_avR :: t_anw
                                 ~ b_as8 [" a type equality t_anu -> t_anv -> t_anw
                                                            ~
                                                            a_as7
                                                            -> b_as8
                                                            -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_avR :: t_anw ~ b_as8 [" a type equality t_anu
                                                    -> t_anv -> t_anw
                                                    ~
                                                    a_as7
                                                    -> b_as8
                                                    -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canEvNC:eq
  t_anw
  b_as8
can_eq_nc
  [W] cobox_avR :: t_anw ~ b_as8
  t_anw
  t_anw
  b_as8
  b_as8
canEqTyVar
  t_anw
  b_as8
  Not-swapped
Following bound tyvar t_anw = Doc
canEqTyVar2
  t_anw
  b_as8
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avR :: Doc ~ b_as8
  Doc
  Doc
  b_as8
  b_as8
can_eq_nc
  [W] cobox_avR :: Doc ~ b_as8
  [String]
  Doc
  b_as8
  b_as8
canEqTyVar
  b_as8
  [String]
  Is-swapped
Following bound tyvar b_as8 = Doc
newWantedEvVar/cache miss [W] cobox_avV :: Doc ~ Doc
setEvBind
  ev = cobox_avR
  tm  = CO Sym cobox_avV
rewriteEqEvidence
  [W] cobox_avR :: Doc ~ b_as8
  Doc
  Doc
  Sym cobox_avV
canEqTyVar2
  b_as8
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avV :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avV :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avW :: String ~ String
setEvBind
  ev = cobox_avV
  tm  = CO [cobox_avW]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avW :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avW :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avW :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avX :: Char ~ Char
setEvBind
  ev = cobox_avW
  tm  = CO [cobox_avX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asb :: t_anK
                                ~ b_as8 [" a type equality t_anK
                                                           ~
                                                           b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asb :: t_anK
                                 ~ b_as8 [" a type equality t_anK
                                                            ~
                                                            b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                    ~
                                                    b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
canEvNC:eq
  t_anK
  b_as8
can_eq_nc
  [W] cobox_asb :: t_anK ~ b_as8
  t_anK
  t_anK
  b_as8
  b_as8
canEqTyVar
  t_anK
  b_as8
  Not-swapped
Following bound tyvar t_anK = Doc
canEqTyVar2
  t_anK
  b_as8
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asb :: Doc ~ b_as8
  Doc
  Doc
  b_as8
  b_as8
can_eq_nc
  [W] cobox_asb :: Doc ~ b_as8
  [String]
  Doc
  b_as8
  b_as8
canEqTyVar
  b_as8
  [String]
  Is-swapped
Following bound tyvar b_as8 = Doc
newWantedEvVar/cache miss [W] cobox_avY :: Doc ~ Doc
setEvBind
  ev = cobox_asb
  tm  = CO Sym cobox_avY
rewriteEqEvidence
  [W] cobox_asb :: Doc ~ b_as8
  Doc
  Doc
  Sym cobox_avY
canEqTyVar2
  b_as8
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avY :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avY :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avZ :: String ~ String
setEvBind
  ev = cobox_avY
  tm  = CO [cobox_avZ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avZ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avZ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avZ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aw0 :: Char ~ Char
setEvBind
  ev = cobox_avZ
  tm  = CO [cobox_aw0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aw0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aw0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ase :: [t_asd]
                                ~ t_amQ [" a type equality [t_asd]
                                                           ~
                                                           t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ase :: [t_asd]
                                 ~ t_amQ [" a type equality [t_asd]
                                                            ~
                                                            t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                      ~
                                                      t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
canEvNC:eq
  [t_asd]
  t_amQ
can_eq_nc
  [W] cobox_ase :: [t_asd] ~ t_amQ
  [t_asd]
  [t_asd]
  t_amQ
  t_amQ
canEqTyVar
  t_amQ
  [t_asd]
  Is-swapped
Following bound tyvar t_amQ = [Doc]
newWantedEvVar/cache miss [W] cobox_aw1 :: [Doc] ~ [t_asd]
setEvBind
  ev = cobox_ase
  tm  = CO Sym cobox_aw1
rewriteEqEvidence
  [W] cobox_ase :: [t_asd] ~ t_amQ
  [Doc]
  [t_asd]
  Sym cobox_aw1
canEqTyVar2
  t_amQ
  [t_asd]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_aw1 :: [Doc] ~ [t_asd]
  [Doc]
  [Doc]
  [t_asd]
  [t_asd]
newWantedEvVar/cache miss [W] cobox_aw2 :: Doc ~ t_asd
setEvBind
  ev = cobox_aw1
  tm  = CO [cobox_aw2]_N
canEvNC:eq
  Doc
  t_asd
can_eq_nc
  [W] cobox_aw2 :: Doc ~ t_asd
  Doc
  Doc
  t_asd
  t_asd
can_eq_nc
  [W] cobox_aw2 :: Doc ~ t_asd
  [String]
  Doc
  t_asd
  t_asd
canEqTyVar
  t_asd
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aw3 :: t_asd ~ Doc
setEvBind
  ev = cobox_aw2
  tm  = CO Sym cobox_aw3
rewriteEqEvidence
  [W] cobox_aw2 :: Doc ~ t_asd
  t_asd
  Doc
  Sym cobox_aw3
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aw3 :: t_asd
                                 ~ Doc [" a type equality [t_asd]
                                                          ~
                                                          t_amQ " Pretty.hs:153:16-17] (CTyEqCan)
Sneaky unification:
  Unifies: t_asd := Doc
  Coercion: t_asd ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_asd := Doc
setEvBind
  ev = cobox_aw3
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_asd
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
101[<C:0,F:0>] [W] cobox_aw3 :: t_asd ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asf :: t_anH
                                ~ t_amR [" a type equality t_anH
                                                           ~
                                                           t_amR " Pretty.hs:154:5-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asf :: t_anH
                                 ~ t_amR [" a type equality t_anH
                                                            ~
                                                            t_amR " Pretty.hs:154:5-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                    ~
                                                    t_amR " Pretty.hs:154:5-14] (CNonCanonical)
canEvNC:eq
  t_anH
  t_amR
can_eq_nc
  [W] cobox_asf :: t_anH ~ t_amR
  t_anH
  t_anH
  t_amR
  t_amR
canEqTyVar
  t_anH
  t_amR
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_amR
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asf :: Doc ~ t_amR
  Doc
  Doc
  t_amR
  t_amR
can_eq_nc
  [W] cobox_asf :: Doc ~ t_amR
  [String]
  Doc
  t_amR
  t_amR
canEqTyVar
  t_amR
  [String]
  Is-swapped
Following bound tyvar t_amR = Doc
newWantedEvVar/cache miss [W] cobox_aw4 :: Doc ~ Doc
setEvBind
  ev = cobox_asf
  tm  = CO Sym cobox_aw4
rewriteEqEvidence
  [W] cobox_asf :: Doc ~ t_amR
  Doc
  Doc
  Sym cobox_aw4
canEqTyVar2
  t_amR
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aw4 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aw4 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aw5 :: String ~ String
setEvBind
  ev = cobox_aw4
  tm  = CO [cobox_aw5]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aw5 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aw5 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aw5 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aw6 :: Char ~ Char
setEvBind
  ev = cobox_aw5
  tm  = CO [cobox_aw6]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aw6 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aw6
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asg :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:154:11-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asg :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:154:11-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:154:11-14] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_asg :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_aw7 :: String ~ [Char]
setEvBind
  ev = cobox_asg
  tm  = CO Sym cobox_aw7
rewriteEqEvidence
  [W] cobox_asg :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_aw7
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aw7 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aw7 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aw8 :: Char ~ Char
setEvBind
  ev = cobox_aw7
  tm  = CO [cobox_aw8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aw8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aw8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asi :: [t_ash]
                                ~ t_amQ [" a type equality [t_ash]
                                                           ~
                                                           t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asi :: [t_ash]
                                 ~ t_amQ [" a type equality [t_ash]
                                                            ~
                                                            t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                      ~
                                                      t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
canEvNC:eq
  [t_ash]
  t_amQ
can_eq_nc
  [W] cobox_asi :: [t_ash] ~ t_amQ
  [t_ash]
  [t_ash]
  t_amQ
  t_amQ
canEqTyVar
  t_amQ
  [t_ash]
  Is-swapped
Following bound tyvar t_amQ = [Doc]
newWantedEvVar/cache miss [W] cobox_aw9 :: [Doc] ~ [t_ash]
setEvBind
  ev = cobox_asi
  tm  = CO Sym cobox_aw9
rewriteEqEvidence
  [W] cobox_asi :: [t_ash] ~ t_amQ
  [Doc]
  [t_ash]
  Sym cobox_aw9
canEqTyVar2
  t_amQ
  [t_ash]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_aw9 :: [Doc] ~ [t_ash]
  [Doc]
  [Doc]
  [t_ash]
  [t_ash]
newWantedEvVar/cache miss [W] cobox_awa :: Doc ~ t_ash
setEvBind
  ev = cobox_aw9
  tm  = CO [cobox_awa]_N
canEvNC:eq
  Doc
  t_ash
can_eq_nc
  [W] cobox_awa :: Doc ~ t_ash
  Doc
  Doc
  t_ash
  t_ash
can_eq_nc
  [W] cobox_awa :: Doc ~ t_ash
  [String]
  Doc
  t_ash
  t_ash
canEqTyVar
  t_ash
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_awb :: t_ash ~ Doc
setEvBind
  ev = cobox_awa
  tm  = CO Sym cobox_awb
rewriteEqEvidence
  [W] cobox_awa :: Doc ~ t_ash
  t_ash
  Doc
  Sym cobox_awb
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awb :: t_ash
                                 ~ Doc [" a type equality [t_ash]
                                                          ~
                                                          t_amQ " Pretty.hs:155:17-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_ash := Doc
  Coercion: t_ash ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ash := Doc
setEvBind
  ev = cobox_awb
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_ash
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
104[<C:0,F:0>] [W] cobox_awb :: t_ash ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asm :: t_asj
                                ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                      ~
                                                                      t_ask
                                                                      -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asm :: t_asj
                                 ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                       ~
                                                                       t_ask
                                                                       -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                               ~
                                                               t_ask
                                                               -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
canEvNC:eq
  t_asj
  t_ask -> t_asl
can_eq_nc
  [W] cobox_asm :: t_asj ~ (t_ask -> t_asl)
  t_asj
  t_asj
  t_ask -> t_asl
  t_ask -> t_asl
canEqTyVar
  t_asj
  t_ask -> t_asl
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asm :: t_asj
                                 ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                       ~
                                                                       t_ask
                                                                       -> t_asl " Pretty.hs:160:5-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_asj := t_ask -> t_asl
  Coercion: t_asj ~ (t_ask -> t_asl)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_asj := t_ask -> t_asl
setEvBind
  ev = cobox_asm
  tm  = CO <t_ask -> t_asl>_N
kickOutRewritable
  tv =  t_asj
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
105[<C:0,F:0>] [W] cobox_asm :: t_asj
                                ~ (t_ask -> t_asl): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asn :: t_an4
                                ~ t_asl [" a type equality t_an4
                                                           ~
                                                           t_asl " Pretty.hs:160:24-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asn :: t_an4
                                 ~ t_asl [" a type equality t_an4
                                                            ~
                                                            t_asl " Pretty.hs:160:24-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                    ~
                                                    t_asl " Pretty.hs:160:24-41] (CNonCanonical)
canEvNC:eq
  t_an4
  t_asl
can_eq_nc
  [W] cobox_asn :: t_an4 ~ t_asl
  t_an4
  t_an4
  t_asl
  t_asl
canEqTyVar
  t_an4
  t_asl
  Not-swapped
Following bound tyvar t_an4 = Doc
canEqTyVar2
  t_an4
  t_asl
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asn :: Doc ~ t_asl
  Doc
  Doc
  t_asl
  t_asl
can_eq_nc
  [W] cobox_asn :: Doc ~ t_asl
  [String]
  Doc
  t_asl
  t_asl
canEqTyVar
  t_asl
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_awc :: t_asl ~ Doc
setEvBind
  ev = cobox_asn
  tm  = CO Sym cobox_awc
rewriteEqEvidence
  [W] cobox_asn :: Doc ~ t_asl
  t_asl
  Doc
  Sym cobox_awc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awc :: t_asl ~ Doc [" a type equality t_an4
                                                                ~
                                                                t_asl " Pretty.hs:160:24-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_asl := Doc
  Coercion: t_asl ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_asl := Doc
setEvBind
  ev = cobox_awc
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_asl
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
106[<C:0,F:0>] [W] cobox_awc :: t_asl ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aso :: t_anH
                                ~ t_an2 [" a type equality t_anH
                                                           ~
                                                           t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aso :: t_anH
                                 ~ t_an2 [" a type equality t_anH
                                                            ~
                                                            t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                    ~
                                                    t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
canEvNC:eq
  t_anH
  t_an2
can_eq_nc
  [W] cobox_aso :: t_anH ~ t_an2
  t_anH
  t_anH
  t_an2
  t_an2
canEqTyVar
  t_anH
  t_an2
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_an2
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aso :: Doc ~ t_an2
  Doc
  Doc
  t_an2
  t_an2
can_eq_nc
  [W] cobox_aso :: Doc ~ t_an2
  [String]
  Doc
  t_an2
  t_an2
canEqTyVar
  t_an2
  [String]
  Is-swapped
Following bound tyvar t_an2 = Doc
newWantedEvVar/cache miss [W] cobox_awd :: Doc ~ Doc
setEvBind
  ev = cobox_aso
  tm  = CO Sym cobox_awd
rewriteEqEvidence
  [W] cobox_aso :: Doc ~ t_an2
  Doc
  Doc
  Sym cobox_awd
canEqTyVar2
  t_an2
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awd :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awd :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awe :: String ~ String
setEvBind
  ev = cobox_awd
  tm  = CO [cobox_awe]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awe :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awe :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awe :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awf :: Char ~ Char
setEvBind
  ev = cobox_awe
  tm  = CO [cobox_awf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asp :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:160:30-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asp :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:160:30-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:160:30-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_asp :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_awg :: String ~ [Char]
setEvBind
  ev = cobox_asp
  tm  = CO Sym cobox_awg
rewriteEqEvidence
  [W] cobox_asp :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_awg
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_awg :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_awg :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_awh :: Char ~ Char
setEvBind
  ev = cobox_awg
  tm  = CO [cobox_awh]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asq :: t_ask
                                ~ t_an3 [" a type equality t_ask
                                                           ~
                                                           t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asq :: t_ask
                                 ~ t_an3 [" a type equality t_ask
                                                            ~
                                                            t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                    ~
                                                    t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
canEvNC:eq
  t_ask
  t_an3
can_eq_nc
  [W] cobox_asq :: t_ask ~ t_an3
  t_ask
  t_ask
  t_an3
  t_an3
canEqTyVar
  t_ask
  t_an3
  Not-swapped
Following bound tyvar t_an3 = Doc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asq :: t_ask ~ Doc [" a type equality t_ask
                                                                ~
                                                                t_an3 " Pretty.hs:160:38-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_ask := Doc
  Coercion: t_ask ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ask := Doc
setEvBind
  ev = cobox_asq
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_ask
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
109[<C:0,F:0>] [W] cobox_asq :: t_ask ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asr :: t_anw
                                ~ t_amR [" a type equality t_anw
                                                           ~
                                                           t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asr :: t_anw
                                 ~ t_amR [" a type equality t_anw
                                                            ~
                                                            t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                    ~
                                                    t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
canEvNC:eq
  t_anw
  t_amR
can_eq_nc
  [W] cobox_asr :: t_anw ~ t_amR
  t_anw
  t_anw
  t_amR
  t_amR
canEqTyVar
  t_anw
  t_amR
  Not-swapped
Following bound tyvar t_anw = Doc
canEqTyVar2
  t_anw
  t_amR
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asr :: Doc ~ t_amR
  Doc
  Doc
  t_amR
  t_amR
can_eq_nc
  [W] cobox_asr :: Doc ~ t_amR
  [String]
  Doc
  t_amR
  t_amR
canEqTyVar
  t_amR
  [String]
  Is-swapped
Following bound tyvar t_amR = Doc
newWantedEvVar/cache miss [W] cobox_awi :: Doc ~ Doc
setEvBind
  ev = cobox_asr
  tm  = CO Sym cobox_awi
rewriteEqEvidence
  [W] cobox_asr :: Doc ~ t_amR
  Doc
  Doc
  Sym cobox_awi
canEqTyVar2
  t_amR
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awi :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awi :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awj :: String ~ String
setEvBind
  ev = cobox_awi
  tm  = CO [cobox_awj]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awj :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awj :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awj :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awk :: Char ~ Char
setEvBind
  ev = cobox_awj
  tm  = CO [cobox_awk]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ass :: t_anw
                                ~ t_anu [" a type equality t_anw
                                                           ~
                                                           t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ass :: t_anw
                                 ~ t_anu [" a type equality t_anw
                                                            ~
                                                            t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                    ~
                                                    t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
canEvNC:eq
  t_anw
  t_anu
can_eq_nc
  [W] cobox_ass :: t_anw ~ t_anu
  t_anw
  t_anw
  t_anu
  t_anu
canEqTyVar
  t_anw
  t_anu
  Not-swapped
Following bound tyvar t_anw = Doc
canEqTyVar2
  t_anw
  t_anu
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_ass :: Doc ~ t_anu
  Doc
  Doc
  t_anu
  t_anu
can_eq_nc
  [W] cobox_ass :: Doc ~ t_anu
  [String]
  Doc
  t_anu
  t_anu
canEqTyVar
  t_anu
  [String]
  Is-swapped
Following bound tyvar t_anu = Doc
newWantedEvVar/cache miss [W] cobox_awl :: Doc ~ Doc
setEvBind
  ev = cobox_ass
  tm  = CO Sym cobox_awl
rewriteEqEvidence
  [W] cobox_ass :: Doc ~ t_anu
  Doc
  Doc
  Sym cobox_awl
canEqTyVar2
  t_anu
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awl :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awl :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awm :: String ~ String
setEvBind
  ev = cobox_awl
  tm  = CO [cobox_awm]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awm :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awm :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awm :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awn :: Char ~ Char
setEvBind
  ev = cobox_awm
  tm  = CO [cobox_awn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ast :: t_an4
                                ~ t_anu [" a type equality t_an4
                                                           ~
                                                           t_anu " Pretty.hs:156:6-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ast :: t_an4
                                 ~ t_anu [" a type equality t_an4
                                                            ~
                                                            t_anu " Pretty.hs:156:6-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                    ~
                                                    t_anu " Pretty.hs:156:6-22] (CNonCanonical)
canEvNC:eq
  t_an4
  t_anu
can_eq_nc
  [W] cobox_ast :: t_an4 ~ t_anu
  t_an4
  t_an4
  t_anu
  t_anu
canEqTyVar
  t_an4
  t_anu
  Not-swapped
Following bound tyvar t_an4 = Doc
canEqTyVar2
  t_an4
  t_anu
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_ast :: Doc ~ t_anu
  Doc
  Doc
  t_anu
  t_anu
can_eq_nc
  [W] cobox_ast :: Doc ~ t_anu
  [String]
  Doc
  t_anu
  t_anu
canEqTyVar
  t_anu
  [String]
  Is-swapped
Following bound tyvar t_anu = Doc
newWantedEvVar/cache miss [W] cobox_awo :: Doc ~ Doc
setEvBind
  ev = cobox_ast
  tm  = CO Sym cobox_awo
rewriteEqEvidence
  [W] cobox_ast :: Doc ~ t_anu
  Doc
  Doc
  Sym cobox_awo
canEqTyVar2
  t_anu
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awo :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awo :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awp :: String ~ String
setEvBind
  ev = cobox_awo
  tm  = CO [cobox_awp]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awp :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awp :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awp :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awq :: Char ~ Char
setEvBind
  ev = cobox_awp
  tm  = CO [cobox_awq]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awq :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awq
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asu :: t_anH
                                ~ t_an2 [" a type equality t_anH
                                                           ~
                                                           t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asu :: t_anH
                                 ~ t_an2 [" a type equality t_anH
                                                            ~
                                                            t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                    ~
                                                    t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
canEvNC:eq
  t_anH
  t_an2
can_eq_nc
  [W] cobox_asu :: t_anH ~ t_an2
  t_anH
  t_anH
  t_an2
  t_an2
canEqTyVar
  t_anH
  t_an2
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_an2
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asu :: Doc ~ t_an2
  Doc
  Doc
  t_an2
  t_an2
can_eq_nc
  [W] cobox_asu :: Doc ~ t_an2
  [String]
  Doc
  t_an2
  t_an2
canEqTyVar
  t_an2
  [String]
  Is-swapped
Following bound tyvar t_an2 = Doc
newWantedEvVar/cache miss [W] cobox_awr :: Doc ~ Doc
setEvBind
  ev = cobox_asu
  tm  = CO Sym cobox_awr
rewriteEqEvidence
  [W] cobox_asu :: Doc ~ t_an2
  Doc
  Doc
  Sym cobox_awr
canEqTyVar2
  t_an2
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awr :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awr :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aws :: String ~ String
setEvBind
  ev = cobox_awr
  tm  = CO [cobox_aws]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aws :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aws :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aws :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awt :: Char ~ Char
setEvBind
  ev = cobox_aws
  tm  = CO [cobox_awt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asv :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:156:12-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asv :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:156:12-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:156:12-14] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_asv :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_awu :: String ~ [Char]
setEvBind
  ev = cobox_asv
  tm  = CO Sym cobox_awu
rewriteEqEvidence
  [W] cobox_asv :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_awu
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_awu :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_awu :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_awv :: Char ~ Char
setEvBind
  ev = cobox_awu
  tm  = CO [cobox_awv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asw :: t_ash
                                ~ t_an3 [" a type equality t_ash
                                                           ~
                                                           t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asw :: t_ash
                                 ~ t_an3 [" a type equality t_ash
                                                            ~
                                                            t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                    ~
                                                    t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
canEvNC:eq
  t_ash
  t_an3
can_eq_nc
  [W] cobox_asw :: t_ash ~ t_an3
  t_ash
  t_ash
  t_an3
  t_an3
canEqTyVar
  t_ash
  t_an3
  Not-swapped
Following bound tyvar t_ash = Doc
canEqTyVar2
  t_ash
  t_an3
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asw :: Doc ~ t_an3
  Doc
  Doc
  t_an3
  t_an3
can_eq_nc
  [W] cobox_asw :: Doc ~ t_an3
  [String]
  Doc
  t_an3
  t_an3
canEqTyVar
  t_an3
  [String]
  Is-swapped
Following bound tyvar t_an3 = Doc
newWantedEvVar/cache miss [W] cobox_aww :: Doc ~ Doc
setEvBind
  ev = cobox_asw
  tm  = CO Sym cobox_aww
rewriteEqEvidence
  [W] cobox_asw :: Doc ~ t_an3
  Doc
  Doc
  Sym cobox_aww
canEqTyVar2
  t_an3
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aww :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aww :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awx :: String ~ String
setEvBind
  ev = cobox_aww
  tm  = CO [cobox_awx]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awx :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awx :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awx :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awy :: Char ~ Char
setEvBind
  ev = cobox_awx
  tm  = CO [cobox_awy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asx :: t_amN
                                ~ t_anv [" a type equality t_amN
                                                           ~
                                                           t_anv " Pretty.hs:157:6-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asx :: t_amN
                                 ~ t_anv [" a type equality t_amN
                                                            ~
                                                            t_anv " Pretty.hs:157:6-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                    ~
                                                    t_anv " Pretty.hs:157:6-42] (CNonCanonical)
canEvNC:eq
  t_amN
  t_anv
can_eq_nc
  [W] cobox_asx :: t_amN ~ t_anv
  t_amN
  t_amN
  t_anv
  t_anv
canEqTyVar
  t_amN
  t_anv
  Not-swapped
Following bound tyvar t_amN = Doc
canEqTyVar2
  t_amN
  t_anv
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asx :: Doc ~ t_anv
  Doc
  Doc
  t_anv
  t_anv
can_eq_nc
  [W] cobox_asx :: Doc ~ t_anv
  [String]
  Doc
  t_anv
  t_anv
canEqTyVar
  t_anv
  [String]
  Is-swapped
Following bound tyvar t_anv = Doc
newWantedEvVar/cache miss [W] cobox_awz :: Doc ~ Doc
setEvBind
  ev = cobox_asx
  tm  = CO Sym cobox_awz
rewriteEqEvidence
  [W] cobox_asx :: Doc ~ t_anv
  Doc
  Doc
  Sym cobox_awz
canEqTyVar2
  t_anv
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awz :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awz :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awA :: String ~ String
setEvBind
  ev = cobox_awz
  tm  = CO [cobox_awA]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awA :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awA :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awA :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awB :: Char ~ Char
setEvBind
  ev = cobox_awA
  tm  = CO [cobox_awB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asA :: [b_asz]
                                ~ t_amM [" a type equality [b_asz]
                                                           ~
                                                           t_amM " Pretty.hs:157:22-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asA :: [b_asz]
                                 ~ t_amM [" a type equality [b_asz]
                                                            ~
                                                            t_amM " Pretty.hs:157:22-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                      ~
                                                      t_amM " Pretty.hs:157:22-41] (CNonCanonical)
canEvNC:eq
  [b_asz]
  t_amM
can_eq_nc
  [W] cobox_asA :: [b_asz] ~ t_amM
  [b_asz]
  [b_asz]
  t_amM
  t_amM
canEqTyVar
  t_amM
  [b_asz]
  Is-swapped
Following bound tyvar t_amM = [Doc]
newWantedEvVar/cache miss [W] cobox_awC :: [Doc] ~ [b_asz]
setEvBind
  ev = cobox_asA
  tm  = CO Sym cobox_awC
rewriteEqEvidence
  [W] cobox_asA :: [b_asz] ~ t_amM
  [Doc]
  [b_asz]
  Sym cobox_awC
canEqTyVar2
  t_amM
  [b_asz]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_awC :: [Doc] ~ [b_asz]
  [Doc]
  [Doc]
  [b_asz]
  [b_asz]
newWantedEvVar/cache miss [W] cobox_awD :: Doc ~ b_asz
setEvBind
  ev = cobox_awC
  tm  = CO [cobox_awD]_N
canEvNC:eq
  Doc
  b_asz
can_eq_nc
  [W] cobox_awD :: Doc ~ b_asz
  Doc
  Doc
  b_asz
  b_asz
can_eq_nc
  [W] cobox_awD :: Doc ~ b_asz
  [String]
  Doc
  b_asz
  b_asz
canEqTyVar
  b_asz
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_awE :: b_asz ~ Doc
setEvBind
  ev = cobox_awD
  tm  = CO Sym cobox_awE
rewriteEqEvidence
  [W] cobox_awD :: Doc ~ b_asz
  b_asz
  Doc
  Sym cobox_awE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awE :: b_asz
                                 ~ Doc [" a type equality [b_asz]
                                                          ~
                                                          t_amM " Pretty.hs:157:22-41] (CTyEqCan)
Sneaky unification:
  Unifies: b_asz := Doc
  Coercion: b_asz ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_asz := Doc
setEvBind
  ev = cobox_awE
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  b_asz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
117[<C:0,F:0>] [W] cobox_awE :: b_asz ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asB :: t_asj
                                ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                      ~
                                                                      a_asy
                                                                      -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asB :: t_asj
                                 ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                       ~
                                                                       a_asy
                                                                       -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                               ~
                                                               a_asy
                                                               -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
canEvNC:eq
  t_asj
  a_asy -> b_asz
can_eq_nc
  [W] cobox_asB :: t_asj ~ (a_asy -> b_asz)
  t_asj
  t_asj
  a_asy -> b_asz
  a_asy -> b_asz
canEqTyVar
  t_asj
  a_asy -> b_asz
  Not-swapped
Following bound tyvar t_asj = t_ask -> t_asl
canEqTyVar2
  t_asj
  a_asy -> b_asz
  Not-swapped
  t_ask -> t_asl
  <t_ask -> t_asl>_N
can_eq_nc
  [W] cobox_asB :: (t_ask -> t_asl) ~ (a_asy -> b_asz)
  t_ask -> t_asl
  t_ask -> t_asl
  a_asy -> b_asz
  a_asy -> b_asz
newWantedEvVar/cache miss [W] cobox_awF :: t_ask ~ a_asy
newWantedEvVar/cache miss [W] cobox_awG :: t_asl ~ b_asz
setEvBind
  ev = cobox_asB
  tm  = CO cobox_awF -> cobox_awG
canEvNC:eq
  t_ask
  a_asy
can_eq_nc
  [W] cobox_awF :: t_ask ~ a_asy
  t_ask
  t_ask
  a_asy
  a_asy
canEqTyVar
  t_ask
  a_asy
  Not-swapped
Following bound tyvar t_ask = Doc
canEqTyVar2
  t_ask
  a_asy
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awF :: Doc ~ a_asy
  Doc
  Doc
  a_asy
  a_asy
can_eq_nc
  [W] cobox_awF :: Doc ~ a_asy
  [String]
  Doc
  a_asy
  a_asy
canEqTyVar
  a_asy
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_awH :: a_asy ~ Doc
setEvBind
  ev = cobox_awF
  tm  = CO Sym cobox_awH
rewriteEqEvidence
  [W] cobox_awF :: Doc ~ a_asy
  a_asy
  Doc
  Sym cobox_awH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awH :: a_asy ~ Doc [" a type equality t_asj
                                                                ~
                                                                a_asy
                                                                -> b_asz " Pretty.hs:157:26-36] (CTyEqCan)
Sneaky unification:
  Unifies: a_asy := Doc
  Coercion: a_asy ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asy := Doc
setEvBind
  ev = cobox_awH
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  a_asy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
118[<C:0,F:0>] [W] cobox_awH :: a_asy ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awG :: t_asl
                                ~ b_asz [" a type equality t_asj
                                                           ~
                                                           a_asy
                                                           -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awG :: t_asl
                                 ~ b_asz [" a type equality t_asj
                                                            ~
                                                            a_asy
                                                            -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awG :: t_asl ~ b_asz [" a type equality t_asj
                                                    ~
                                                    a_asy
                                                    -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
canEvNC:eq
  t_asl
  b_asz
can_eq_nc
  [W] cobox_awG :: t_asl ~ b_asz
  t_asl
  t_asl
  b_asz
  b_asz
canEqTyVar
  t_asl
  b_asz
  Not-swapped
Following bound tyvar t_asl = Doc
canEqTyVar2
  t_asl
  b_asz
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awG :: Doc ~ b_asz
  Doc
  Doc
  b_asz
  b_asz
can_eq_nc
  [W] cobox_awG :: Doc ~ b_asz
  [String]
  Doc
  b_asz
  b_asz
canEqTyVar
  b_asz
  [String]
  Is-swapped
Following bound tyvar b_asz = Doc
newWantedEvVar/cache miss [W] cobox_awI :: Doc ~ Doc
setEvBind
  ev = cobox_awG
  tm  = CO Sym cobox_awI
rewriteEqEvidence
  [W] cobox_awG :: Doc ~ b_asz
  Doc
  Doc
  Sym cobox_awI
canEqTyVar2
  b_asz
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awI :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awI :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awJ :: String ~ String
setEvBind
  ev = cobox_awI
  tm  = CO [cobox_awJ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awJ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awJ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awJ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awK :: Char ~ Char
setEvBind
  ev = cobox_awJ
  tm  = CO [cobox_awK]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asC :: [t_ash]
                                ~ [a_asy] [" a type equality [t_ash]
                                                             ~
                                                             [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asC :: [t_ash]
                                 ~ [a_asy] [" a type equality [t_ash]
                                                              ~
                                                              [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                        ~
                                                        [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
canEvNC:eq
  [t_ash]
  [a_asy]
can_eq_nc
  [W] cobox_asC :: [t_ash] ~ [a_asy]
  [t_ash]
  [t_ash]
  [a_asy]
  [a_asy]
newWantedEvVar/cache miss [W] cobox_awL :: t_ash ~ a_asy
setEvBind
  ev = cobox_asC
  tm  = CO [cobox_awL]_N
canEvNC:eq
  t_ash
  a_asy
can_eq_nc
  [W] cobox_awL :: t_ash ~ a_asy
  t_ash
  t_ash
  a_asy
  a_asy
canEqTyVar
  t_ash
  a_asy
  Not-swapped
Following bound tyvar t_ash = Doc
canEqTyVar2
  t_ash
  a_asy
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awL :: Doc ~ a_asy
  Doc
  Doc
  a_asy
  a_asy
can_eq_nc
  [W] cobox_awL :: Doc ~ a_asy
  [String]
  Doc
  a_asy
  a_asy
canEqTyVar
  a_asy
  [String]
  Is-swapped
Following bound tyvar a_asy = Doc
newWantedEvVar/cache miss [W] cobox_awM :: Doc ~ Doc
setEvBind
  ev = cobox_awL
  tm  = CO Sym cobox_awM
rewriteEqEvidence
  [W] cobox_awL :: Doc ~ a_asy
  Doc
  Doc
  Sym cobox_awM
canEqTyVar2
  a_asy
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awM :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awM :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awN :: String ~ String
setEvBind
  ev = cobox_awM
  tm  = CO [cobox_awN]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awN :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awN :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awN :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awO :: Char ~ Char
setEvBind
  ev = cobox_awN
  tm  = CO [cobox_awO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asD :: t_anH
                                ~ t_anv [" a type equality t_anH
                                                           ~
                                                           t_anv " Pretty.hs:158:6-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asD :: t_anH
                                 ~ t_anv [" a type equality t_anH
                                                            ~
                                                            t_anv " Pretty.hs:158:6-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                    ~
                                                    t_anv " Pretty.hs:158:6-14] (CNonCanonical)
canEvNC:eq
  t_anH
  t_anv
can_eq_nc
  [W] cobox_asD :: t_anH ~ t_anv
  t_anH
  t_anH
  t_anv
  t_anv
canEqTyVar
  t_anH
  t_anv
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_anv
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asD :: Doc ~ t_anv
  Doc
  Doc
  t_anv
  t_anv
can_eq_nc
  [W] cobox_asD :: Doc ~ t_anv
  [String]
  Doc
  t_anv
  t_anv
canEqTyVar
  t_anv
  [String]
  Is-swapped
Following bound tyvar t_anv = Doc
newWantedEvVar/cache miss [W] cobox_awP :: Doc ~ Doc
setEvBind
  ev = cobox_asD
  tm  = CO Sym cobox_awP
rewriteEqEvidence
  [W] cobox_asD :: Doc ~ t_anv
  Doc
  Doc
  Sym cobox_awP
canEqTyVar2
  t_anv
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awP :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awP :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awQ :: String ~ String
setEvBind
  ev = cobox_awP
  tm  = CO [cobox_awQ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awQ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awQ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awQ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awR :: Char ~ Char
setEvBind
  ev = cobox_awQ
  tm  = CO [cobox_awR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asE :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:158:12-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asE :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:158:12-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:158:12-14] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_asE :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_awS :: String ~ [Char]
setEvBind
  ev = cobox_asE
  tm  = CO Sym cobox_awS
rewriteEqEvidence
  [W] cobox_asE :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_awS
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_awS :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_awS :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_awT :: Char ~ Char
setEvBind
  ev = cobox_awS
  tm  = CO [cobox_awT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_arv :: Num
                                  a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_arv :: Num
                                   a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_arv :: Num
                     a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
canEvNC:cls Num [a_aru]
Following bound tyvar a_aru = Int
canClass
  [W] $dNum_arv :: Num a_aru Num [a_aru]
  Num Int
  Just [W] $dNum_arv :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_arv :: Num
                                   Int [" the literal ‘1’ " Pretty.hs:141:35] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_arv :: Num
                                   Int [" the literal ‘1’ " Pretty.hs:141:35] (CDictCan)
doTopReact
  [W] $dNum_arv :: Num
                     Int [" the literal ‘1’ " Pretty.hs:141:35] (CDictCan)
matchClassInst
  pred = Num Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries:
          Irreds:
          Insolubles = {}
          Solved dicts 0
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Num Int
  witness GHC.Num.$fNumInt Num Int
updSolvedSetTcs: [W] $dNum_arv :: Num Int
doTopReact/found nullary instance for $dNum_arv
setEvBind
  ev = $dNum_arv
  tm  = GHC.Num.$fNumInt @[] []
123[<C:0,F:0>] [W] $dNum_arv :: Num
                                  Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 1
               Solved funeqs 0
solveFlats end } {}
simpl_loop, iteration 1
solveWanteds }
  unsolved_flats   = {}
  unsolved_implics = {}
  current evbinds  = {cobox_amO = CO Sym cobox_asG,
                      cobox_amP = CO Sym cobox_asH, cobox_amS = CO Sym cobox_asI,
                      cobox_amT = CO Sym cobox_asJ, cobox_amW = CO Sym cobox_asK,
                      cobox_amX = CO Sym cobox_asL, cobox_an0 = CO Sym cobox_asM,
                      cobox_an1 = CO Sym cobox_asN, cobox_an5 = CO Sym cobox_asO,
                      cobox_an6 = CO Sym cobox_asP, cobox_an7 = CO Sym cobox_asQ,
                      cobox_ana = CO Sym cobox_asR, cobox_anb = CO Sym cobox_asS,
                      cobox_anm = CO Sym cobox_asT, cobox_ann = CO Sym cobox_asU,
                      cobox_anr = CO Sym cobox_asV, cobox_ans = CO Sym cobox_asW,
                      cobox_ant = CO Sym cobox_asX, cobox_anx = CO Sym cobox_asY,
                      cobox_any = CO Sym cobox_asZ, cobox_anz = CO Sym cobox_at0,
                      cobox_anD = CO Sym cobox_at1, cobox_anE = CO Sym cobox_at2,
                      cobox_anF = CO Sym cobox_at3, cobox_anI = CO Sym cobox_at4,
                      cobox_anJ = CO Sym cobox_at5, cobox_anL = CO Sym cobox_at6,
                      cobox_anP = CO Sym cobox_at7, cobox_anQ = CO <Int>_N,
                      cobox_anR = CO Sym cobox_ata, cobox_anT = CO Sym cobox_atb,
                      cobox_anU = CO [cobox_atd]_N, cobox_anV = CO [cobox_ate]_N,
                      cobox_ao0 = CO <t_anY -> t_anZ>_N, cobox_ao3 = CO Sym cobox_atg,
                      cobox_ao4 = CO [cobox_ath]_N, cobox_ao5 = CO Sym cobox_atj,
                      cobox_ao6 = CO <[Char]>_N, cobox_aob = CO Sym cobox_atk,
                      cobox_aoc = CO cobox_atn -> cobox_ato,
                      cobox_aod = CO [cobox_att]_N, cobox_aog = CO Sym cobox_atw,
                      cobox_aoh = CO [cobox_atz]_N, cobox_aoi = CO [cobox_atC]_N,
                      cobox_aol = CO Sym cobox_atF, cobox_aom = CO Sym cobox_atI,
                      cobox_aoo = CO Sym cobox_atL, cobox_aop = CO Sym cobox_atO,
                      cobox_aot = CO Sym cobox_atR, cobox_aow = CO <[a_aos]>_N,
                      cobox_aox = CO [cobox_atS]_N, cobox_aoz = CO Sym cobox_atV,
                      cobox_aoC = CO [cobox_atY]_N, cobox_aoD = CO [cobox_atZ]_N,
                      cobox_aoF = CO [cobox_au2]_N, cobox_aoH = CO Sym cobox_au3,
                      cobox_aoJ = CO <[Char]>_N, cobox_aoK = CO [cobox_au6]_N,
                      cobox_aoN = CO <[Char]>_N, cobox_aoO = CO [cobox_au9]_N,
                      cobox_aoP = CO [cobox_auc]_N, cobox_aoQ = CO Sym cobox_auf,
                      cobox_aoT = CO Sym cobox_aug, cobox_aoU = CO [cobox_auj]_N,
                      cobox_aoW = CO Sym cobox_aum, cobox_aoX = CO Sym cobox_aup,
                      cobox_aoY = CO Sym cobox_aus, $dNum_arv = GHC.Num.$fNumInt @[] [],
                      cobox_arw = CO cobox_auv -> cobox_auw,
                      cobox_arx = CO Sym cobox_aux, cobox_arA = CO Sym cobox_auA,
                      cobox_arB = CO Sym cobox_auD, cobox_arE = CO Sym cobox_auF,
                      cobox_arH = CO Sym cobox_auI, cobox_arI = CO Sym cobox_auL,
                      cobox_arK = CO Sym cobox_auO, cobox_arL = CO Sym cobox_auR,
                      cobox_arN = CO Sym cobox_auU, cobox_arO = CO Sym cobox_auX,
                      cobox_arP = CO Sym cobox_av0, cobox_arQ = CO Sym cobox_av3,
                      cobox_arR = CO Sym cobox_av6, cobox_arS = CO Sym cobox_av9,
                      cobox_arT = CO Sym cobox_avb, cobox_arU = CO Sym cobox_ave,
                      cobox_arW = CO Sym cobox_avj, cobox_arX = CO Sym cobox_avm,
                      cobox_arY = CO Sym cobox_avp, cobox_arZ = CO Sym cobox_avs,
                      cobox_as0 = CO Sym cobox_avu, cobox_as1 = CO Sym cobox_avx,
                      cobox_as2 = CO Sym cobox_avB, cobox_as3 = CO Sym cobox_avE,
                      cobox_as9 = CO cobox_avG -> cobox_avH,
                      cobox_asa = CO cobox_avL -> cobox_avM,
                      cobox_asb = CO Sym cobox_avY, cobox_ase = CO Sym cobox_aw1,
                      cobox_asf = CO Sym cobox_aw4, cobox_asg = CO Sym cobox_aw7,
                      cobox_asi = CO Sym cobox_aw9, cobox_asm = CO <t_ask -> t_asl>_N,
                      cobox_asn = CO Sym cobox_awc, cobox_aso = CO Sym cobox_awd,
                      cobox_asp = CO Sym cobox_awg, cobox_asq = CO <Doc>_N,
                      cobox_asr = CO Sym cobox_awi, cobox_ass = CO Sym cobox_awl,
                      cobox_ast = CO Sym cobox_awo, cobox_asu = CO Sym cobox_awr,
                      cobox_asv = CO Sym cobox_awu, cobox_asw = CO Sym cobox_aww,
                      cobox_asx = CO Sym cobox_awz, cobox_asA = CO Sym cobox_awC,
                      cobox_asB = CO cobox_awF -> cobox_awG,
                      cobox_asC = CO [cobox_awL]_N, cobox_asD = CO Sym cobox_awP,
                      cobox_asE = CO Sym cobox_awS, cobox_asG = CO <[Doc]>_N,
                      cobox_asH = CO <Doc>_N, cobox_asI = CO <[Doc]>_N,
                      cobox_asJ = CO <Doc>_N, cobox_asK = CO <[Doc]>_N,
                      cobox_asL = CO <Doc>_N, cobox_asM = CO <[Doc]>_N,
                      cobox_asN = CO <Doc>_N, cobox_asO = CO <Doc>_N,
                      cobox_asP = CO <Doc>_N, cobox_asQ = CO <Doc>_N,
                      cobox_asR = CO <Int>_N, cobox_asS = CO <String>_N,
                      cobox_asT = CO <Doc>_N, cobox_asU = CO <IO ()>_N,
                      cobox_asV = CO <Int>_N, cobox_asW = CO <Doc>_N,
                      cobox_asX = CO <Doc>_N, cobox_asY = CO <Doc>_N,
                      cobox_asZ = CO <Doc>_N, cobox_at0 = CO <Doc>_N,
                      cobox_at1 = CO <Doc>_N, cobox_at2 = CO <Doc>_N,
                      cobox_at3 = CO <Doc>_N, cobox_at4 = CO <String>_N,
                      cobox_at5 = CO <Doc>_N, cobox_at6 = CO <Doc>_N,
                      cobox_at7 = CO [cobox_at8]_N, cobox_at8 = CO Sym cobox_at9,
                      cobox_at9 = CO <Char>_N, cobox_ata = CO <Char>_N,
                      cobox_atb = CO IO cobox_atc_N, cobox_atc = CO <()>_N,
                      cobox_atd = CO <Char>_N, cobox_ate = CO [cobox_atf]_N,
                      cobox_atf = CO <Char>_N, cobox_atg = CO <[a_ao2]>_N,
                      cobox_ath = CO Sym cobox_ati, cobox_ati = CO <Char>_N,
                      cobox_atj = CO <Int>_N, cobox_atk = CO [cobox_atl]_N,
                      cobox_atl = CO Sym cobox_atm, cobox_atm = CO <String>_N,
                      cobox_atn = CO Sym cobox_atp, cobox_ato = CO Sym cobox_atq,
                      cobox_atp = CO <[Char]>_N, cobox_atq = CO [cobox_atr]_N,
                      cobox_atr = CO Sym cobox_ats, cobox_ats = CO <Char>_N,
                      cobox_att = CO Sym cobox_atu, cobox_atu = CO [cobox_atv]_N,
                      cobox_atv = CO <Char>_N, cobox_atw = CO [cobox_atx]_N,
                      cobox_atx = CO Sym cobox_aty, cobox_aty = CO <String>_N,
                      cobox_atz = CO Sym cobox_atA, cobox_atA = CO [cobox_atB]_N,
                      cobox_atB = CO <Char>_N, cobox_atC = CO Sym cobox_atD,
                      cobox_atD = CO [cobox_atE]_N, cobox_atE = CO <Char>_N,
                      cobox_atF = CO [cobox_atG]_N, cobox_atG = CO Sym cobox_atH,
                      cobox_atH = CO <String>_N, cobox_atI = CO [cobox_atJ]_N,
                      cobox_atJ = CO [cobox_atK]_N, cobox_atK = CO <Char>_N,
                      cobox_atL = CO [cobox_atM]_N, cobox_atM = CO Sym cobox_atN,
                      cobox_atN = CO <String>_N, cobox_atO = CO [cobox_atP]_N,
                      cobox_atP = CO [cobox_atQ]_N, cobox_atQ = CO <Char>_N,
                      cobox_atR = CO <Int>_N, cobox_atS = CO Sym cobox_atT,
                      cobox_atT = CO [cobox_atU]_N, cobox_atU = CO <Char>_N,
                      cobox_atV = CO [cobox_atW]_N, cobox_atW = CO Sym cobox_atX,
                      cobox_atX = CO <String>_N, cobox_atY = CO <String>_N,
                      cobox_atZ = CO Sym cobox_au0, cobox_au0 = CO [cobox_au1]_N,
                      cobox_au1 = CO <Char>_N, cobox_au2 = CO <String>_N,
                      cobox_au3 = CO [cobox_au4]_N, cobox_au4 = CO Sym cobox_au5,
                      cobox_au5 = CO <Char>_N, cobox_au6 = CO Sym cobox_au7,
                      cobox_au7 = CO [cobox_au8]_N, cobox_au8 = CO <Char>_N,
                      cobox_au9 = CO Sym cobox_aua, cobox_aua = CO [cobox_aub]_N,
                      cobox_aub = CO <Char>_N, cobox_auc = CO Sym cobox_aud,
                      cobox_aud = CO [cobox_aue]_N, cobox_aue = CO <Char>_N,
                      cobox_auf = CO <Int>_N, cobox_aug = CO [cobox_auh]_N,
                      cobox_auh = CO Sym cobox_aui, cobox_aui = CO <String>_N,
                      cobox_auj = CO Sym cobox_auk, cobox_auk = CO [cobox_aul]_N,
                      cobox_aul = CO <Char>_N, cobox_aum = CO [cobox_aun]_N,
                      cobox_aun = CO [cobox_auo]_N, cobox_auo = CO <Char>_N,
                      cobox_aup = CO [cobox_auq]_N, cobox_auq = CO [cobox_aur]_N,
                      cobox_aur = CO <Char>_N, cobox_aus = CO [cobox_aut]_N,
                      cobox_aut = CO [cobox_auu]_N, cobox_auu = CO <Char>_N,
                      cobox_auv = CO <Integer>_N, cobox_auw = CO <Int>_N,
                      cobox_aux = CO [cobox_auy]_N, cobox_auy = CO [cobox_auz]_N,
                      cobox_auz = CO <Char>_N, cobox_auA = CO [cobox_auB]_N,
                      cobox_auB = CO Sym cobox_auC, cobox_auC = CO <String>_N,
                      cobox_auD = CO [cobox_auE]_N, cobox_auE = CO <Char>_N,
                      cobox_auF = CO [cobox_auG]_N, cobox_auG = CO Sym cobox_auH,
                      cobox_auH = CO <String>_N, cobox_auI = CO [cobox_auJ]_N,
                      cobox_auJ = CO Sym cobox_auK, cobox_auK = CO <Doc>_N,
                      cobox_auL = CO [cobox_auM]_N, cobox_auM = CO [cobox_auN]_N,
                      cobox_auN = CO <Char>_N, cobox_auO = CO [cobox_auP]_N,
                      cobox_auP = CO Sym cobox_auQ, cobox_auQ = CO <Doc>_N,
                      cobox_auR = CO [cobox_auS]_N, cobox_auS = CO [cobox_auT]_N,
                      cobox_auT = CO <Char>_N, cobox_auU = CO [cobox_auV]_N,
                      cobox_auV = CO Sym cobox_auW, cobox_auW = CO <Doc>_N,
                      cobox_auX = CO [cobox_auY]_N, cobox_auY = CO [cobox_auZ]_N,
                      cobox_auZ = CO <Char>_N, cobox_av0 = CO [cobox_av1]_N,
                      cobox_av1 = CO [cobox_av2]_N, cobox_av2 = CO <Char>_N,
                      cobox_av3 = CO [cobox_av4]_N, cobox_av4 = CO [cobox_av5]_N,
                      cobox_av5 = CO <Char>_N, cobox_av6 = CO [cobox_av7]_N,
                      cobox_av7 = CO [cobox_av8]_N, cobox_av8 = CO <Char>_N,
                      cobox_av9 = CO [cobox_ava]_N, cobox_ava = CO <Char>_N,
                      cobox_avb = CO [cobox_avc]_N, cobox_avc = CO [cobox_avd]_N,
                      cobox_avd = CO <Char>_N, cobox_ave = CO [cobox_avf]_N,
                      cobox_avf = CO Sym cobox_avg, cobox_avg = CO [cobox_avh]_N,
                      cobox_avh = CO [cobox_avi]_N, cobox_avi = CO <Char>_N,
                      cobox_avj = CO [cobox_avk]_N, cobox_avk = CO [cobox_avl]_N,
                      cobox_avl = CO <Char>_N, cobox_avm = CO [cobox_avn]_N,
                      cobox_avn = CO [cobox_avo]_N, cobox_avo = CO <Char>_N,
                      cobox_avp = CO [cobox_avq]_N, cobox_avq = CO [cobox_avr]_N,
                      cobox_avr = CO <Char>_N, cobox_avs = CO [cobox_avt]_N,
                      cobox_avt = CO <Char>_N, cobox_avu = CO [cobox_avv]_N,
                      cobox_avv = CO [cobox_avw]_N, cobox_avw = CO <Char>_N,
                      cobox_avx = CO [cobox_avy]_N, cobox_avy = CO [cobox_avz]_N,
                      cobox_avz = CO [cobox_avA]_N, cobox_avA = CO <Char>_N,
                      cobox_avB = CO [cobox_avC]_N, cobox_avC = CO [cobox_avD]_N,
                      cobox_avD = CO <Char>_N, cobox_avE = CO [cobox_avF]_N,
                      cobox_avF = CO <Char>_N, cobox_avG = CO Sym cobox_avI,
                      cobox_avH = CO <Doc>_N, cobox_avI = CO [cobox_avJ]_N,
                      cobox_avJ = CO Sym cobox_avK, cobox_avK = CO <Doc>_N,
                      cobox_avL = CO Sym cobox_avN,
                      cobox_avM = CO cobox_avQ -> cobox_avR,
                      cobox_avN = CO [cobox_avO]_N, cobox_avO = CO [cobox_avP]_N,
                      cobox_avP = CO <Char>_N, cobox_avQ = CO Sym cobox_avS,
                      cobox_avR = CO Sym cobox_avV, cobox_avS = CO [cobox_avT]_N,
                      cobox_avT = CO [cobox_avU]_N, cobox_avU = CO <Char>_N,
                      cobox_avV = CO [cobox_avW]_N, cobox_avW = CO [cobox_avX]_N,
                      cobox_avX = CO <Char>_N, cobox_avY = CO [cobox_avZ]_N,
                      cobox_avZ = CO [cobox_aw0]_N, cobox_aw0 = CO <Char>_N,
                      cobox_aw1 = CO [cobox_aw2]_N, cobox_aw2 = CO Sym cobox_aw3,
                      cobox_aw3 = CO <Doc>_N, cobox_aw4 = CO [cobox_aw5]_N,
                      cobox_aw5 = CO [cobox_aw6]_N, cobox_aw6 = CO <Char>_N,
                      cobox_aw7 = CO [cobox_aw8]_N, cobox_aw8 = CO <Char>_N,
                      cobox_aw9 = CO [cobox_awa]_N, cobox_awa = CO Sym cobox_awb,
                      cobox_awb = CO <Doc>_N, cobox_awc = CO <Doc>_N,
                      cobox_awd = CO [cobox_awe]_N, cobox_awe = CO [cobox_awf]_N,
                      cobox_awf = CO <Char>_N, cobox_awg = CO [cobox_awh]_N,
                      cobox_awh = CO <Char>_N, cobox_awi = CO [cobox_awj]_N,
                      cobox_awj = CO [cobox_awk]_N, cobox_awk = CO <Char>_N,
                      cobox_awl = CO [cobox_awm]_N, cobox_awm = CO [cobox_awn]_N,
                      cobox_awn = CO <Char>_N, cobox_awo = CO [cobox_awp]_N,
                      cobox_awp = CO [cobox_awq]_N, cobox_awq = CO <Char>_N,
                      cobox_awr = CO [cobox_aws]_N, cobox_aws = CO [cobox_awt]_N,
                      cobox_awt = CO <Char>_N, cobox_awu = CO [cobox_awv]_N,
                      cobox_awv = CO <Char>_N, cobox_aww = CO [cobox_awx]_N,
                      cobox_awx = CO [cobox_awy]_N, cobox_awy = CO <Char>_N,
                      cobox_awz = CO [cobox_awA]_N, cobox_awA = CO [cobox_awB]_N,
                      cobox_awB = CO <Char>_N, cobox_awC = CO [cobox_awD]_N,
                      cobox_awD = CO Sym cobox_awE, cobox_awE = CO <Doc>_N,
                      cobox_awF = CO Sym cobox_awH, cobox_awG = CO Sym cobox_awI,
                      cobox_awH = CO <Doc>_N, cobox_awI = CO [cobox_awJ]_N,
                      cobox_awJ = CO [cobox_awK]_N, cobox_awK = CO <Char>_N,
                      cobox_awL = CO Sym cobox_awM, cobox_awM = CO [cobox_awN]_N,
                      cobox_awN = CO [cobox_awO]_N, cobox_awO = CO <Char>_N,
                      cobox_awP = CO [cobox_awQ]_N, cobox_awQ = CO [cobox_awR]_N,
                      cobox_awR = CO <Char>_N, cobox_awS = CO [cobox_awT]_N,
                      cobox_awT = CO <Char>_N}
  current tybinds  = (t_amM, [Doc])
                     (t_amN, Doc)
                     (t_amQ, [Doc])
                     (t_amR, Doc)
                     (t_amU, [Doc])
                     (t_amV, Doc)
                     (t_amY, [Doc])
                     (t_amZ, Doc)
                     (t_an2, Doc)
                     (t_an3, Doc)
                     (t_an4, Doc)
                     (t_an8, Int)
                     (t_an9, String)
                     (t_ank, Doc)
                     (t_anl, IO ())
                     (t_ano, Int)
                     (t_anp, Doc)
                     (t_anq, Doc)
                     (t_anu, Doc)
                     (t_anv, Doc)
                     (t_anw, Doc)
                     (t_anA, Doc)
                     (t_anB, Doc)
                     (t_anC, Doc)
                     (t_anG, String)
                     (t_anH, Doc)
                     (t_anK, Doc)
                     (a_anO, Char)
                     (t_anX, t_anY -> t_anZ)
                     (t_anY, [Char])
                     (t_anZ, [a_ao2])
                     (a_ao2, Char)
                     (a_ao9, [Char])
                     (b_aoa, String)
                     (a_aof, String)
                     (t_aok, String)
                     (t_aon, String)
                     (t_aoq, Int)
                     (a_aos, Char)
                     (a_aov, [a_aos])
                     (a_aoy, String)
                     (a_aoB, String)
                     (a_aoE, String)
                     (a_aoG, Char)
                     (a_aoI, [Char])
                     (a_aoM, [Char])
                     (a_aoS, String)
                     (a_aru, Int)
                     (t_arz, String)
                     (t_arD, String)
                     (t_arG, Doc)
                     (t_arJ, Doc)
                     (t_arM, Doc)
                     (a_as7, Doc)
                     (b_as8, Doc)
                     (t_asd, Doc)
                     (t_ash, Doc)
                     (t_asj, t_ask -> t_asl)
                     (t_ask, Doc)
                     (t_asl, Doc)
                     (a_asy, Doc)
                     (b_asz, Doc)
  final wc = WC {}
writeMetaTyVar t_amM := [Doc]
writeMetaTyVar t_amN := Doc
writeMetaTyVar t_amQ := [Doc]
writeMetaTyVar t_amR := Doc
writeMetaTyVar t_amU := [Doc]
writeMetaTyVar t_amV := Doc
writeMetaTyVar t_amY := [Doc]
writeMetaTyVar t_amZ := Doc
writeMetaTyVar t_an2 := Doc
writeMetaTyVar t_an3 := Doc
writeMetaTyVar t_an4 := Doc
writeMetaTyVar t_an8 := Int
writeMetaTyVar t_an9 := String
writeMetaTyVar t_ank := Doc
writeMetaTyVar t_anl := IO ()
writeMetaTyVar t_ano := Int
writeMetaTyVar t_anp := Doc
writeMetaTyVar t_anq := Doc
writeMetaTyVar t_anu := Doc
writeMetaTyVar t_anv := Doc
writeMetaTyVar t_anw := Doc
writeMetaTyVar t_anA := Doc
writeMetaTyVar t_anB := Doc
writeMetaTyVar t_anC := Doc
writeMetaTyVar t_anG := String
writeMetaTyVar t_anH := Doc
writeMetaTyVar t_anK := Doc
writeMetaTyVar a_anO := Char
writeMetaTyVar t_anX := t_anY -> t_anZ
writeMetaTyVar t_anY := [Char]
writeMetaTyVar t_anZ := [a_ao2]
writeMetaTyVar a_ao2 := Char
writeMetaTyVar a_ao9 := [Char]
writeMetaTyVar b_aoa := String
writeMetaTyVar a_aof := String
writeMetaTyVar t_aok := String
writeMetaTyVar t_aon := String
writeMetaTyVar t_aoq := Int
writeMetaTyVar a_aos := Char
writeMetaTyVar a_aov := [a_aos]
writeMetaTyVar a_aoy := String
writeMetaTyVar a_aoB := String
writeMetaTyVar a_aoE := String
writeMetaTyVar a_aoG := Char
writeMetaTyVar a_aoI := [Char]
writeMetaTyVar a_aoM := [Char]
writeMetaTyVar a_aoS := String
writeMetaTyVar a_aru := Int
writeMetaTyVar t_arz := String
writeMetaTyVar t_arD := String
writeMetaTyVar t_arG := Doc
writeMetaTyVar t_arJ := Doc
writeMetaTyVar t_arM := Doc
writeMetaTyVar a_as7 := Doc
writeMetaTyVar b_as8 := Doc
writeMetaTyVar t_asd := Doc
writeMetaTyVar t_ash := Doc
writeMetaTyVar t_asj := t_ask -> t_asl
writeMetaTyVar t_ask := Doc
writeMetaTyVar t_asl := Doc
writeMetaTyVar a_asy := Doc
writeMetaTyVar b_asz := Doc
Constraint solver steps = 123
End simplifyTop }
reportUnsolved {
reportUnsolved }
Tc9
checkHiBootIface
  []
  []
  []
rn12
rn13
Tc2 (src)
Tc3
kcTyClGroup
  module HTML3
  type Attribute = (String, String)
kcTyClGroup: initial kinds []
env2 []
kcd1 Attribute []
tc_lhs_type:
  (String, String)
  Expected kind ‘k_aBF’
tc_lhs_type:
  String
  Expected kind ‘k_aBG’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_aBG := *
tc_lhs_type:
  String
  Expected kind ‘k_aBH’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_aBH := *
writeMetaTyVar k_aBF := *
kcd2 Attribute
Generalise kind
  Attribute
  k_aBF
  []
  *
kcTyClGroup result [(Attribute, *)]
tcTyAndCl generalized kinds [(Attribute, *)]
tcTyAndCl-x type Attribute = (String, String)
env2 []
env2 []
tc-syn
  Attribute
  [(rwV, AThing *)]
tc_lhs_type:
  (String, String)
  Expected kind ‘*’
tc_lhs_type:
  String
  The first argument of a tuple should have kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String
  The second argument of a tuple should have kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Attribute’]
checkValidType (String, String) :: *
checkValidType done (String, String) :: *
env2 []
kcTyClGroup
  module HTML3
  data HTML
    = Text String |
      SingleTag String [Attribute] |
      DoubleTag String [Attribute] [HTML]
env2 []
kcTyClGroup: initial kinds
  [(HTML, AThing *), (Text, APromotionErr RecDataConPE),
   (SingleTag, APromotionErr RecDataConPE),
   (DoubleTag, APromotionErr RecDataConPE)]
env2 []
env2 []
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
env2 []
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [Attribute]
  Expected a type
tc_lhs_type:
  Attribute
  Expected kind ‘*’
lk1 Attribute
lk2 Attribute Type constructor ‘Attribute’
env2 []
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [Attribute]
  Expected a type
tc_lhs_type:
  Attribute
  Expected kind ‘*’
lk1 Attribute
lk2 Attribute Type constructor ‘Attribute’
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML AThing *
Generalise kind
  HTML
  *
  []
  *
kcTyClGroup result [(HTML, *)]
tcTyAndCl generalized kinds [(HTML, *)]
tcTyAndCl-x
  data HTML
    = Text String |
      SingleTag String [Attribute] |
      DoubleTag String [Attribute] [HTML]
env2 []
env2 []
tcConDecl 1 Text
env2 []
tcHsTyVarBndrs {
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
env2 []
tcConArg 1 String
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcConArg 2 String
tcHsTyVarBndrs }
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
tcConDecl 1 SingleTag
env2 []
tcHsTyVarBndrs {
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
env2 []
tcConArg 1 String
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcConArg 2 String
tcConArg 1 [Attribute]
tc_lhs_type:
  [Attribute]
  Expected a type
tc_lhs_type:
  Attribute
  Expected kind ‘*’
lk1 Attribute
lk2 Attribute Type constructor ‘Attribute’
tcConArg 2 [Attribute]
tcHsTyVarBndrs }
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
tcConDecl 1 DoubleTag
env2 []
tcHsTyVarBndrs {
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
env2 []
tcConArg 1 String
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcConArg 2 String
tcConArg 1 [Attribute]
tc_lhs_type:
  [Attribute]
  Expected a type
tc_lhs_type:
  Attribute
  Expected kind ‘*’
lk1 Attribute
lk2 Attribute Type constructor ‘Attribute’
tcConArg 2 [Attribute]
tcConArg 1 [HTML]
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML AThing *
tcConArg 2 [HTML]
tcHsTyVarBndrs }
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
Starting validity check [Type constructor ‘HTML’]
cvtc1 HTML
cvtc2 HTML
checkValidDataCon
  Text
  HTML
checkValidType String -> HTML :: *
checkValidType done String -> HTML :: *
Done validity of data con Text String -> HTML
checkValidDataCon
  SingleTag
  HTML
checkValidType String -> [Attribute] -> HTML :: *
checkValidType done String -> [Attribute] -> HTML :: *
Done validity of data con SingleTag String -> [Attribute] -> HTML
checkValidDataCon
  DoubleTag
  HTML
checkValidType String -> [Attribute] -> [HTML] -> HTML :: *
checkValidType done String -> [Attribute] -> [HTML] -> HTML :: *
Done validity of data con
  DoubleTag String -> [Attribute] -> [HTML] -> HTML
env2 []
kcTyClGroup
  module HTML3
  type Requirement = (String, String)
kcTyClGroup: initial kinds []
env2 []
kcd1 Requirement []
tc_lhs_type:
  (String, String)
  Expected kind ‘k_aBS’
tc_lhs_type:
  String
  Expected kind ‘k_aBT’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_aBT := *
tc_lhs_type:
  String
  Expected kind ‘k_aBU’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_aBU := *
writeMetaTyVar k_aBS := *
kcd2 Requirement
Generalise kind
  Requirement
  k_aBS
  []
  *
kcTyClGroup result [(Requirement, *)]
tcTyAndCl generalized kinds [(Requirement, *)]
tcTyAndCl-x type Requirement = (String, String)
env2 []
env2 []
tc-syn
  Requirement
  [(rrs, AThing *)]
tc_lhs_type:
  (String, String)
  Expected kind ‘*’
tc_lhs_type:
  String
  The first argument of a tuple should have kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String
  The second argument of a tuple should have kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Requirement’]
checkValidType (String, String) :: *
checkValidType done (String, String) :: *
env2 []
Adding instances:
addFamInsts
env2 []
tcDeriving
tcDeriving False
tcDeriving 1 []
Adding instances:
Tc3b
tcAmpMissingParentClassWarn/isInsts []
tcAmpMissingParentClassWarn/isInsts []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Monad.join []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.<*> []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.pure []
Tc4
Tc4a
env2 []
Tc5
tc_lhs_type:
  IO
  Expected kind ‘k_aBV’
lk1 IO
lk2 IO Type constructor ‘IO’
writeMetaTyVar k_aBV := * -> *
tc_lhs_type:
  ()
  The first argument of ‘IO’ should have kind ‘*’
tcCheckHsTypeAndGen IO ()
Before unification
utype_defer
  cobox_aBX
  IO ()
  t_aBW
  a type equality IO () ~ t_aBW
  In the type signature for ‘main’: main :: IO ()
checkValidType t_aBW :: OpenKind
checkValidType done t_aBW :: OpenKind
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen HTML
Before unification
utype_defer
  cobox_aBZ
  HTML
  t_aBY
  a type equality HTML ~ t_aBY
  In the type signature for ‘kleurenTabel’: kleurenTabel :: HTML
checkValidType t_aBY :: OpenKind
checkValidType done t_aBY :: OpenKind
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [HTML] -> HTML
  Expected a type
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen String -> [HTML] -> HTML
Before unification
utype_defer
  cobox_aC3
  String
  t_aC0
  a type equality String ~ t_aC0
  In the type signature for ‘document’:
    document :: String -> [HTML] -> HTML
utype_defer
  cobox_aC4
  [HTML]
  t_aC1
  a type equality [HTML] ~ t_aC1
  In the type signature for ‘document’:
    document :: String -> [HTML] -> HTML
utype_defer
  cobox_aC5
  HTML
  t_aC2
  a type equality HTML ~ t_aC2
  In the type signature for ‘document’:
    document :: String -> [HTML] -> HTML
checkValidType t_aC0 -> t_aC1 -> t_aC2 :: *
checkValidType done t_aC0 -> t_aC1 -> t_aC2 :: *
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen String -> HTML
Before unification
utype_defer
  cobox_aC8
  String
  t_aC6
  a type equality String ~ t_aC6
  In the type signature for ‘text’: text :: String -> HTML
utype_defer
  cobox_aC9
  HTML
  t_aC7
  a type equality HTML ~ t_aC7
  In the type signature for ‘text’: text :: String -> HTML
checkValidType t_aC6 -> t_aC7 :: *
checkValidType done t_aC6 -> t_aC7 :: *
tc_lhs_type:
  [Attribute]
  Expected a type
tc_lhs_type:
  Attribute
  Expected kind ‘*’
lk1 Attribute
lk2 Attribute Type constructor ‘Attribute’
tc_lhs_type:
  [HTML] -> HTML
  Expected a type
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen [Attribute] -> [HTML] -> HTML
Before unification
utype_defer
  cobox_aCd
  [Attribute]
  t_aCa
  a type equality [Attribute] ~ t_aCa
  In the type signature for ‘font’:
    font :: [Attribute] -> [HTML] -> HTML
utype_defer
  cobox_aCe
  [HTML]
  t_aCb
  a type equality [HTML] ~ t_aCb
  In the type signature for ‘font’:
    font :: [Attribute] -> [HTML] -> HTML
utype_defer
  cobox_aCf
  HTML
  t_aCc
  a type equality HTML ~ t_aCc
  In the type signature for ‘font’:
    font :: [Attribute] -> [HTML] -> HTML
checkValidType t_aCa -> t_aCb -> t_aCc :: *
checkValidType done t_aCa -> t_aCb -> t_aCc :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  String -> HTML
  Expected a type
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen Int -> String -> HTML
Before unification
utype_defer
  cobox_aCj
  Int
  t_aCg
  a type equality Int ~ t_aCg
  In the type signature for ‘h’: h :: Int -> String -> HTML
utype_defer
  cobox_aCk
  String
  t_aCh
  a type equality String ~ t_aCh
  In the type signature for ‘h’: h :: Int -> String -> HTML
utype_defer
  cobox_aCl
  HTML
  t_aCi
  a type equality HTML ~ t_aCi
  In the type signature for ‘h’: h :: Int -> String -> HTML
checkValidType t_aCg -> t_aCh -> t_aCi :: *
checkValidType done t_aCg -> t_aCh -> t_aCi :: *
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen [HTML] -> HTML
Before unification
utype_defer
  cobox_aCo
  [HTML]
  t_aCm
  a type equality [HTML] ~ t_aCm
  In the type signature for ‘li’: li :: [HTML] -> HTML
utype_defer
  cobox_aCp
  HTML
  t_aCn
  a type equality HTML ~ t_aCn
  In the type signature for ‘li’: li :: [HTML] -> HTML
checkValidType t_aCm -> t_aCn :: *
checkValidType done t_aCm -> t_aCn :: *
tc_lhs_type:
  [[HTML]]
  Expected a type
tc_lhs_type:
  [HTML]
  Expected kind ‘*’
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen [[HTML]] -> HTML
Before unification
utype_defer
  cobox_aCs
  [[HTML]]
  t_aCq
  a type equality [[HTML]] ~ t_aCq
  In the type signature for ‘ul’: ul :: [[HTML]] -> HTML
utype_defer
  cobox_aCt
  HTML
  t_aCr
  a type equality HTML ~ t_aCr
  In the type signature for ‘ul’: ul :: [[HTML]] -> HTML
checkValidType t_aCq -> t_aCr :: *
checkValidType done t_aCq -> t_aCr :: *
tc_lhs_type:
  (Int, Int, Int)
  Expected a type
tc_lhs_type:
  Int
  Expected kind ‘k_aCu’
lk1 Int
lk2 Int Type constructor ‘Int’
writeMetaTyVar k_aCu := *
tc_lhs_type:
  Int
  Expected kind ‘k_aCv’
lk1 Int
lk2 Int Type constructor ‘Int’
writeMetaTyVar k_aCv := *
tc_lhs_type:
  Int
  Expected kind ‘k_aCw’
lk1 Int
lk2 Int Type constructor ‘Int’
writeMetaTyVar k_aCw := *
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen (Int, Int, Int) -> HTML
Before unification
utype_defer
  cobox_aCz
  (Int, Int, Int)
  t_aCx
  a type equality (Int, Int, Int) ~ t_aCx
  In the type signature for ‘maakVeld’:
    maakVeld :: (Int, Int, Int) -> HTML
utype_defer
  cobox_aCA
  HTML
  t_aCy
  a type equality HTML ~ t_aCy
  In the type signature for ‘maakVeld’:
    maakVeld :: (Int, Int, Int) -> HTML
checkValidType t_aCx -> t_aCy :: *
checkValidType done t_aCx -> t_aCy :: *
tc_lhs_type:
  [(Int, Int, Int)]
  Expected a type
tc_lhs_type:
  (Int, Int, Int)
  Expected kind ‘*’
tc_lhs_type:
  Int
  The first argument of a tuple should have kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Int
  The second argument of a tuple should have kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Int
  The third argument of a tuple should have kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen [(Int, Int, Int)] -> HTML
Before unification
utype_defer
  cobox_aCD
  [(Int, Int, Int)]
  t_aCB
  a type equality [(Int, Int, Int)] ~ t_aCB
  In the type signature for ‘maakRij’:
    maakRij :: [(Int, Int, Int)] -> HTML
utype_defer
  cobox_aCE
  HTML
  t_aCC
  a type equality HTML ~ t_aCC
  In the type signature for ‘maakRij’:
    maakRij :: [(Int, Int, Int)] -> HTML
checkValidType t_aCB -> t_aCC :: *
checkValidType done t_aCB -> t_aCC :: *
tc_lhs_type:
  [[(Int, Int, Int)]]
  Expected a type
tc_lhs_type:
  [(Int, Int, Int)]
  Expected kind ‘*’
tc_lhs_type:
  (Int, Int, Int)
  Expected kind ‘*’
tc_lhs_type:
  Int
  The first argument of a tuple should have kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Int
  The second argument of a tuple should have kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Int
  The third argument of a tuple should have kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen [[(Int, Int, Int)]] -> HTML
Before unification
utype_defer
  cobox_aCH
  [[(Int, Int, Int)]]
  t_aCF
  a type equality [[(Int, Int, Int)]] ~ t_aCF
  In the type signature for ‘colorTable’:
    colorTable :: [[(Int, Int, Int)]] -> HTML
utype_defer
  cobox_aCI
  HTML
  t_aCG
  a type equality HTML ~ t_aCG
  In the type signature for ‘colorTable’:
    colorTable :: [[(Int, Int, Int)]] -> HTML
checkValidType t_aCF -> t_aCG :: *
checkValidType done t_aCF -> t_aCG :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Int -> String
Before unification
utype_defer
  cobox_aCL
  Int
  t_aCJ
  a type equality Int ~ t_aCJ
  In the type signature for ‘intLetter’: intLetter :: Int -> String
utype_defer
  cobox_aCM
  String
  t_aCK
  a type equality String ~ t_aCK
  In the type signature for ‘intLetter’: intLetter :: Int -> String
checkValidType t_aCJ -> t_aCK :: *
checkValidType done t_aCJ -> t_aCK :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Int -> Int -> String
  Expected a type
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Int -> String
  Expected a type
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Int -> Int -> Int -> String
Before unification
utype_defer
  cobox_aCR
  Int
  t_aCN
  a type equality Int ~ t_aCN
  In the type signature for ‘color’:
    color :: Int -> Int -> Int -> String
utype_defer
  cobox_aCS
  Int
  t_aCO
  a type equality Int ~ t_aCO
  In the type signature for ‘color’:
    color :: Int -> Int -> Int -> String
utype_defer
  cobox_aCT
  Int
  t_aCP
  a type equality Int ~ t_aCP
  In the type signature for ‘color’:
    color :: Int -> Int -> Int -> String
utype_defer
  cobox_aCU
  String
  t_aCQ
  a type equality String ~ t_aCQ
  In the type signature for ‘color’:
    color :: Int -> Int -> Int -> String
checkValidType t_aCN -> t_aCO -> t_aCP -> t_aCQ :: *
checkValidType done t_aCN -> t_aCO -> t_aCP -> t_aCQ :: *
tc_lhs_type:
  [(String, String)]
  Expected a type
tc_lhs_type:
  (String, String)
  Expected kind ‘*’
tc_lhs_type:
  String
  The first argument of a tuple should have kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String
  The second argument of a tuple should have kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen [(String, String)] -> String
Before unification
utype_defer
  cobox_aCX
  [(String, String)]
  t_aCV
  a type equality [(String, String)] ~ t_aCV
  In the type signature for ‘toonAtts’:
    toonAtts :: [(String, String)] -> String
utype_defer
  cobox_aCY
  String
  t_aCW
  a type equality String ~ t_aCW
  In the type signature for ‘toonAtts’:
    toonAtts :: [(String, String)] -> String
checkValidType t_aCV -> t_aCW :: *
checkValidType done t_aCV -> t_aCW :: *
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen HTML -> String
Before unification
utype_defer
  cobox_aD1
  HTML
  t_aCZ
  a type equality HTML ~ t_aCZ
  In the type signature for ‘toon’: toon :: HTML -> String
utype_defer
  cobox_aD2
  String
  t_aD0
  a type equality String ~ t_aD0
  In the type signature for ‘toon’: toon :: HTML -> String
checkValidType t_aCZ -> t_aD0 :: *
checkValidType done t_aCZ -> t_aD0 :: *
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen HTML -> Doc
Before unification
utype_defer
  cobox_aD5
  HTML
  t_aD3
  a type equality HTML ~ t_aD3
  In the type signature for ‘ppHTML’: ppHTML :: HTML -> Doc
utype_defer
  cobox_aD6
  Doc
  t_aD4
  a type equality Doc ~ t_aD4
  In the type signature for ‘ppHTML’: ppHTML :: HTML -> Doc
checkValidType t_aD3 -> t_aD4 :: *
checkValidType done t_aD3 -> t_aD4 :: *
tc_lhs_type:
  Requirement
  Expected kind ‘*’
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tcCheckHsTypeAndGen [Requirement]
Before unification
utype_defer
  cobox_aD8
  [Requirement]
  t_aD7
  a type equality [Requirement] ~ t_aD7
  In the type signature for ‘regels’: regels :: [Requirement]
checkValidType t_aD7 :: OpenKind
checkValidType done t_aD7 :: OpenKind
tc_lhs_type:
  [Maybe Requirement]
  Expected a type
tc_lhs_type:
  Maybe Requirement
  Expected kind ‘*’
tc_lhs_type:
  Maybe
  Expected kind ‘k_aD9’
lk1 Maybe
lk2 Maybe Type constructor ‘Maybe’
writeMetaTyVar k_aD9 := * -> *
tc_lhs_type:
  Requirement
  The first argument of ‘Maybe’ should have kind ‘*’
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tc_lhs_type:
  Maybe Requirement
  Expected a type
tc_lhs_type:
  Maybe
  Expected kind ‘k_aDn’
lk1 Maybe
lk2 Maybe Type constructor ‘Maybe’
writeMetaTyVar k_aDn := * -> *
tc_lhs_type:
  Requirement
  The first argument of ‘Maybe’ should have kind ‘*’
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tcCheckHsTypeAndGen [Maybe Requirement] -> Maybe Requirement
Before unification
utype_defer
  cobox_aDq
  [Maybe Requirement]
  t_aDo
  a type equality [Maybe Requirement] ~ t_aDo
  In the type signature for ‘dunUit’:
    dunUit :: [Maybe Requirement] -> Maybe Requirement
utype_defer
  cobox_aDr
  Maybe Requirement
  t_aDp
  a type equality Maybe Requirement ~ t_aDp
  In the type signature for ‘dunUit’:
    dunUit :: [Maybe Requirement] -> Maybe Requirement
checkValidType t_aDo -> t_aDp :: *
checkValidType done t_aDo -> t_aDp :: *
tc_lhs_type:
  [Requirement]
  Expected a type
tc_lhs_type:
  Requirement
  Expected kind ‘*’
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tc_lhs_type:
  HTML -> Maybe Requirement
  Expected a type
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Maybe Requirement
  Expected a type
tc_lhs_type:
  Maybe
  Expected kind ‘k_aDs’
lk1 Maybe
lk2 Maybe Type constructor ‘Maybe’
writeMetaTyVar k_aDs := * -> *
tc_lhs_type:
  Requirement
  The first argument of ‘Maybe’ should have kind ‘*’
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tcCheckHsTypeAndGen [Requirement] -> HTML -> Maybe Requirement
Before unification
utype_defer
  cobox_aDw
  [Requirement]
  t_aDt
  a type equality [Requirement] ~ t_aDt
  In the type signature for ‘validate’:
    validate :: [Requirement] -> HTML -> Maybe Requirement
utype_defer
  cobox_aDx
  HTML
  t_aDu
  a type equality HTML ~ t_aDu
  In the type signature for ‘validate’:
    validate :: [Requirement] -> HTML -> Maybe Requirement
utype_defer
  cobox_aDy
  Maybe Requirement
  t_aDv
  a type equality Maybe Requirement ~ t_aDv
  In the type signature for ‘validate’:
    validate :: [Requirement] -> HTML -> Maybe Requirement
checkValidType t_aDt -> t_aDu -> t_aDv :: *
checkValidType done t_aDt -> t_aDu -> t_aDv :: *
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Requirement -> Maybe Requirement
  Expected a type
tc_lhs_type:
  Requirement
  Expected a type
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tc_lhs_type:
  Maybe Requirement
  Expected a type
tc_lhs_type:
  Maybe
  Expected kind ‘k_aDz’
lk1 Maybe
lk2 Maybe Type constructor ‘Maybe’
writeMetaTyVar k_aDz := * -> *
tc_lhs_type:
  Requirement
  The first argument of ‘Maybe’ should have kind ‘*’
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tcCheckHsTypeAndGen HTML -> Requirement -> Maybe Requirement
Before unification
utype_defer
  cobox_aDD
  HTML
  t_aDA
  a type equality HTML ~ t_aDA
  In the type signature for ‘valideer’:
    valideer :: HTML -> Requirement -> Maybe Requirement
utype_defer
  cobox_aDE
  Requirement
  t_aDB
  a type equality Requirement ~ t_aDB
  In the type signature for ‘valideer’:
    valideer :: HTML -> Requirement -> Maybe Requirement
utype_defer
  cobox_aDF
  Maybe Requirement
  t_aDC
  a type equality Maybe Requirement ~ t_aDC
  In the type signature for ‘valideer’:
    valideer :: HTML -> Requirement -> Maybe Requirement
checkValidType t_aDA -> t_aDB -> t_aDC :: *
checkValidType done t_aDA -> t_aDB -> t_aDC :: *
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tcCheckHsTypeAndGen HTML
Before unification
utype_defer
  cobox_aDH
  HTML
  t_aDG
  a type equality HTML ~ t_aDG
  In the type signature for ‘voorbeeld’: voorbeeld :: HTML
checkValidType t_aDG :: OpenKind
checkValidType done t_aDG :: OpenKind
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Char
  Expected a type
lk1 Char
lk2 Char Type constructor ‘Char’
tcCheckHsTypeAndGen Int -> Char
Before unification
utype_defer
  cobox_aDK
  Int
  t_aDI
  a type equality Int ~ t_aDI
  In the type signature for ‘chr’: chr :: Int -> Char
utype_defer
  cobox_aDL
  Char
  t_aDJ
  a type equality Char ~ t_aDJ
  In the type signature for ‘chr’: chr :: Int -> Char
checkValidType t_aDI -> t_aDJ :: *
checkValidType done t_aDI -> t_aDJ :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Int -> String
Before unification
utype_defer
  cobox_aDO
  Int
  t_aDM
  a type equality Int ~ t_aDM
  In the type signature for ‘showInt’: showInt :: Int -> String
utype_defer
  cobox_aDP
  String
  t_aDN
  a type equality String ~ t_aDN
  In the type signature for ‘showInt’: showInt :: Int -> String
checkValidType t_aDM -> t_aDN :: *
checkValidType done t_aDM -> t_aDN :: *
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcCheckHsTypeAndGen String -> String -> Bool
Before unification
utype_defer
  cobox_aDT
  String
  t_aDQ
  a type equality String ~ t_aDQ
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
utype_defer
  cobox_aDU
  String
  t_aDR
  a type equality String ~ t_aDR
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
utype_defer
  cobox_aDV
  Bool
  t_aDS
  a type equality Bool ~ t_aDS
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
checkValidType t_aDQ -> t_aDR -> t_aDS :: *
checkValidType done t_aDQ -> t_aDR -> t_aDS :: *
env2
  [(main, Identifier[main::t_aBW, <NotTopLevel>]),
   (kleurenTabel, Identifier[kleurenTabel::t_aBY, <NotTopLevel>]),
   (document,
    Identifier[document::t_aC0 -> t_aC1 -> t_aC2, <NotTopLevel>]),
   (text, Identifier[text::t_aC6 -> t_aC7, <NotTopLevel>]),
   (font, Identifier[font::t_aCa -> t_aCb -> t_aCc, <NotTopLevel>]),
   (h, Identifier[h::t_aCg -> t_aCh -> t_aCi, <NotTopLevel>]),
   (li, Identifier[li::t_aCm -> t_aCn, <NotTopLevel>]),
   (ul, Identifier[ul::t_aCq -> t_aCr, <NotTopLevel>]),
   (maakVeld, Identifier[maakVeld::t_aCx -> t_aCy, <NotTopLevel>]),
   (maakRij, Identifier[maakRij::t_aCB -> t_aCC, <NotTopLevel>]),
   (colorTable,
    Identifier[colorTable::t_aCF -> t_aCG, <NotTopLevel>]),
   (intLetter, Identifier[intLetter::t_aCJ -> t_aCK, <NotTopLevel>]),
   (color,
    Identifier[color::t_aCN
                      -> t_aCO -> t_aCP -> t_aCQ, <NotTopLevel>]),
   (toonAtts, Identifier[toonAtts::t_aCV -> t_aCW, <NotTopLevel>]),
   (toon, Identifier[toon::t_aCZ -> t_aD0, <NotTopLevel>]),
   (ppHTML, Identifier[ppHTML::t_aD3 -> t_aD4, <NotTopLevel>]),
   (regels, Identifier[regels::t_aD7, <NotTopLevel>]),
   (dunUit, Identifier[dunUit::t_aDo -> t_aDp, <NotTopLevel>]),
   (validate,
    Identifier[validate::t_aDt -> t_aDu -> t_aDv, <NotTopLevel>]),
   (valideer,
    Identifier[valideer::t_aDA -> t_aDB -> t_aDC, <NotTopLevel>]),
   (voorbeeld, Identifier[voorbeeld::t_aDG, <NotTopLevel>]),
   (chr, Identifier[chr::t_aDI -> t_aDJ, <NotTopLevel>]),
   (showInt, Identifier[showInt::t_aDM -> t_aDN, <NotTopLevel>]),
   (eqString,
    Identifier[eqString::t_aDQ -> t_aDR -> t_aDS, <NotTopLevel>])]
------------------------------------------------
Bindings for { [document]
Generalisation plan
  CheckGen document :: t_aC0 -> t_aC1 -> t_aC2
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  document
  t_aC0 -> t_aC1 -> t_aC2
tcMatchesFun
  document
  t_aC0 -> t_aC1 -> t_aC2
tcGen
env2 [(titel, Identifier[titel::t_aC0, <NotTopLevel>])]
env2 [(htmls, Identifier[htmls::t_aC1, <NotTopLevel>])]
tcBody t_aC2
utype_defer
  cobox_aDX
  HTML
  t_aC2
  a type equality HTML ~ t_aC2
  In the expression:
    DoubleTag
      "HTML"
      []
      [DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]],
       DoubleTag "BODY" [] htmls]
  In an equation for ‘document’:
      document titel htmls
        = DoubleTag
            "HTML"
            []
            [DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]],
             DoubleTag "BODY" [] htmls]
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDY
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"HTML"’
  In the expression:
    DoubleTag
      "HTML"
      []
      [DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]],
       DoubleTag "BODY" [] htmls]
  In an equation for ‘document’:
      document titel htmls
        = DoubleTag
            "HTML"
            []
            [DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]],
             DoubleTag "BODY" [] htmls]
tcPolyExprNC [Attribute]
tcGen
tcPolyExprNC [HTML]
tcGen
tcPolyExpr HTML
tcPolyExprNC HTML
tcGen
utype_defer
  cobox_aDZ
  HTML
  HTML
  a type equality HTML ~ HTML
  In the expression:
    DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]]
  In the third argument of ‘DoubleTag’, namely
    ‘[DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]],
      DoubleTag "BODY" [] htmls]’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aE0
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"HEAD"’
  In the expression:
    DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]]
  In the third argument of ‘DoubleTag’, namely
    ‘[DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]],
      DoubleTag "BODY" [] htmls]’
tcPolyExprNC [Attribute]
tcGen
tcPolyExprNC [HTML]
tcGen
tcPolyExpr HTML
tcPolyExprNC HTML
tcGen
utype_defer
  cobox_aE1
  HTML
  HTML
  a type equality HTML ~ HTML
  In the expression: DoubleTag "TITLE" [] [Text titel]
  In the third argument of ‘DoubleTag’, namely
    ‘[DoubleTag "TITLE" [] [Text titel]]’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aE2
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"TITLE"’
  In the expression: DoubleTag "TITLE" [] [Text titel]
  In the third argument of ‘DoubleTag’, namely
    ‘[DoubleTag "TITLE" [] [Text titel]]’
tcPolyExprNC [Attribute]
tcGen
tcPolyExprNC [HTML]
tcGen
tcPolyExpr HTML
tcPolyExprNC HTML
tcGen
utype_defer
  cobox_aE3
  HTML
  HTML
  a type equality HTML ~ HTML
  In the expression: Text titel
  In the third argument of ‘DoubleTag’, namely ‘[Text titel]’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aE4
  t_aC0
  String
  a type equality t_aC0 ~ String
  In the first argument of ‘Text’, namely ‘titel’
  In the expression: Text titel
tcPolyExpr HTML
tcPolyExprNC HTML
tcGen
utype_defer
  cobox_aE5
  HTML
  HTML
  a type equality HTML ~ HTML
  In the expression: DoubleTag "BODY" [] htmls
  In the third argument of ‘DoubleTag’, namely
    ‘[DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]],
      DoubleTag "BODY" [] htmls]’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aE6
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"BODY"’
  In the expression: DoubleTag "BODY" [] htmls
  In the third argument of ‘DoubleTag’, namely
    ‘[DoubleTag "HEAD" [] [DoubleTag "TITLE" [] [Text titel]],
      DoubleTag "BODY" [] htmls]’
tcPolyExprNC [Attribute]
tcGen
tcPolyExprNC [HTML]
tcGen
utype_defer
  cobox_aE7
  t_aC1
  [HTML]
  a type equality t_aC1 ~ [HTML]
  In the third argument of ‘DoubleTag’, namely ‘htmls’
  In the expression: DoubleTag "BODY" [] htmls
addInlinePrags
  document
  []
csb2 [document]
} End of bindings for
  [document]
  NonRecursive
  document t_aC0 -> t_aC1 -> t_aC2
env2
  [(document,
    Identifier[document::t_aC0 -> t_aC1 -> t_aC2, <NotTopLevel>])]
------------------------------------------------
Bindings for { [text]
Generalisation plan
  CheckGen text :: t_aC6 -> t_aC7
                   []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  text
  t_aC6 -> t_aC7
tcMatchesFun
  text
  t_aC6 -> t_aC7
tcGen
env2 [(string, Identifier[string::t_aC6, <NotTopLevel>])]
tcBody t_aC7
utype_defer
  cobox_aE9
  HTML
  t_aC7
  a type equality HTML ~ t_aC7
  In the expression: Text string
  In an equation for ‘text’: text string = Text string
tcPolyExprNC String
tcGen
utype_defer
  cobox_aEa
  t_aC6
  String
  a type equality t_aC6 ~ String
  In the first argument of ‘Text’, namely ‘string’
  In the expression: Text string
addInlinePrags
  text
  []
csb2 [text]
} End of bindings for
  [text]
  NonRecursive
  text t_aC6 -> t_aC7
env2 [(text, Identifier[text::t_aC6 -> t_aC7, <NotTopLevel>])]
------------------------------------------------
Bindings for { [font]
Generalisation plan
  CheckGen font :: t_aCa -> t_aCb -> t_aCc
                   []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  font
  t_aCa -> t_aCb -> t_aCc
tcMatchesFun
  font
  t_aCa -> t_aCb -> t_aCc
tcGen
env2 [(attrs, Identifier[attrs::t_aCa, <NotTopLevel>])]
env2 [(htmls, Identifier[htmls::t_aCb, <NotTopLevel>])]
tcBody t_aCc
utype_defer
  cobox_aEc
  HTML
  t_aCc
  a type equality HTML ~ t_aCc
  In the expression: DoubleTag "FONT" attrs htmls
  In an equation for ‘font’:
      font attrs htmls = DoubleTag "FONT" attrs htmls
tcPolyExprNC String
tcGen
utype_defer
  cobox_aEd
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"FONT"’
  In the expression: DoubleTag "FONT" attrs htmls
  In an equation for ‘font’:
      font attrs htmls = DoubleTag "FONT" attrs htmls
tcPolyExprNC [Attribute]
tcGen
utype_defer
  cobox_aEe
  t_aCa
  [Attribute]
  a type equality t_aCa ~ [Attribute]
  In the second argument of ‘DoubleTag’, namely ‘attrs’
  In the expression: DoubleTag "FONT" attrs htmls
tcPolyExprNC [HTML]
tcGen
utype_defer
  cobox_aEf
  t_aCb
  [HTML]
  a type equality t_aCb ~ [HTML]
  In the third argument of ‘DoubleTag’, namely ‘htmls’
  In the expression: DoubleTag "FONT" attrs htmls
addInlinePrags
  font
  []
csb2 [font]
} End of bindings for
  [font]
  NonRecursive
  font t_aCa -> t_aCb -> t_aCc
env2
  [(font, Identifier[font::t_aCa -> t_aCb -> t_aCc, <NotTopLevel>])]
------------------------------------------------
Bindings for { [li]
Generalisation plan
  CheckGen li :: t_aCm -> t_aCn
                 []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  li
  t_aCm -> t_aCn
tcMatchesFun
  li
  t_aCm -> t_aCn
tcGen
env2 [(htmls, Identifier[htmls::t_aCm, <NotTopLevel>])]
tcBody t_aCn
utype_defer
  cobox_aEh
  HTML
  t_aCn
  a type equality HTML ~ t_aCn
  In the expression: DoubleTag "LI" [] htmls
  In an equation for ‘li’: li htmls = DoubleTag "LI" [] htmls
tcPolyExprNC String
tcGen
utype_defer
  cobox_aEi
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"LI"’
  In the expression: DoubleTag "LI" [] htmls
  In an equation for ‘li’: li htmls = DoubleTag "LI" [] htmls
tcPolyExprNC [Attribute]
tcGen
tcPolyExprNC [HTML]
tcGen
utype_defer
  cobox_aEj
  t_aCm
  [HTML]
  a type equality t_aCm ~ [HTML]
  In the third argument of ‘DoubleTag’, namely ‘htmls’
  In the expression: DoubleTag "LI" [] htmls
addInlinePrags
  li
  []
csb2 [li]
} End of bindings for
  [li]
  NonRecursive
  li t_aCm -> t_aCn
env2 [(li, Identifier[li::t_aCm -> t_aCn, <NotTopLevel>])]
------------------------------------------------
Bindings for { [ul]
Generalisation plan
  CheckGen ul :: t_aCq -> t_aCr
                 []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  ul
  t_aCq -> t_aCr
tcMatchesFun
  ul
  t_aCq -> t_aCr
tcGen
env2 [(htmls, Identifier[htmls::t_aCq, <NotTopLevel>])]
tcBody t_aCr
utype_defer
  cobox_aEl
  HTML
  t_aCr
  a type equality HTML ~ t_aCr
  In the expression: DoubleTag "UL" [] (map li htmls)
  In an equation for ‘ul’:
      ul htmls = DoubleTag "UL" [] (map li htmls)
tcPolyExprNC String
tcGen
utype_defer
  cobox_aEm
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"UL"’
  In the expression: DoubleTag "UL" [] (map li htmls)
  In an equation for ‘ul’:
      ul htmls = DoubleTag "UL" [] (map li htmls)
tcPolyExprNC [Attribute]
tcGen
tcPolyExprNC [HTML]
tcGen
Instantiating
  map with [a_aEn, b_aEo]
           []
utype_defer
  cobox_aEp
  [b_aEo]
  [HTML]
  a type equality [b_aEo] ~ [HTML]
  In the third argument of ‘DoubleTag’, namely ‘(map li htmls)’
  In the expression: DoubleTag "UL" [] (map li htmls)
tcPolyExprNC a_aEn -> b_aEo
tcGen
utype_defer
  cobox_aEq
  t_aCm -> t_aCn
  a_aEn -> b_aEo
  a type equality t_aCm -> t_aCn ~ a_aEn -> b_aEo
  In the first argument of ‘map’, namely ‘li’
  In the third argument of ‘DoubleTag’, namely ‘(map li htmls)’
tcPolyExprNC [a_aEn]
tcGen
utype_defer
  cobox_aEr
  t_aCq
  [a_aEn]
  a type equality t_aCq ~ [a_aEn]
  In the second argument of ‘map’, namely ‘htmls’
  In the third argument of ‘DoubleTag’, namely ‘(map li htmls)’
addInlinePrags
  ul
  []
csb2 [ul]
} End of bindings for
  [ul]
  NonRecursive
  ul t_aCq -> t_aCr
env2 [(ul, Identifier[ul::t_aCq -> t_aCr, <NotTopLevel>])]
------------------------------------------------
Bindings for { [toonAtts]
Generalisation plan
  CheckGen toonAtts :: t_aCV -> t_aCW
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  toonAtts
  t_aCV -> t_aCW
tcMatchesFun
  toonAtts
  t_aCV -> t_aCW
tcGen
env2 [(atts, Identifier[atts::t_aCV, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [plakVast]
Generalisation plan NoGen
addInlinePrags
  plakVast
  []
tcMatchesFun
  plakVast
  t_aEt
tcGen
utype_defer
  cobox_aEw
  t_aEt
  t_aEu -> t_aEv
  a type equality t_aEt ~ t_aEu -> t_aEv
  In an equation for ‘toonAtts’:
      toonAtts atts
        = concat (map (' ' :) (map plakVast atts))
        where
            plakVast att = fst att ++ "=" ++ "\"" ++ snd att ++ "\""
env2 [(att, Identifier[att::t_aEu, <NotTopLevel>])]
tcBody t_aEv
Non Application rule (++)
Instantiating
  ++ with [a_aEx]
          []
utype_defer
  cobox_aEy
  [a_aEx]
  t_aEv
  a type equality [a_aEx] ~ t_aEv
  In the expression: fst att ++ "=" ++ "\"" ++ snd att ++ "\""
  In an equation for ‘plakVast’:
      plakVast att = fst att ++ "=" ++ "\"" ++ snd att ++ "\""
  In an equation for ‘toonAtts’:
      toonAtts atts
        = concat (map (' ' :) (map plakVast atts))
        where
            plakVast att = fst att ++ "=" ++ "\"" ++ snd att ++ "\""
tcPolyExprNC [a_aEx]
tcGen
Instantiating
  fst with [a_aEB, b_aEC]
           []
utype_defer
  cobox_aED
  a_aEB
  [a_aEx]
  a type equality a_aEB ~ [a_aEx]
  In the first argument of ‘(++)’, namely ‘fst att’
  In the expression: fst att ++ "=" ++ "\"" ++ snd att ++ "\""
tcPolyExprNC (a_aEB, b_aEC)
tcGen
utype_defer
  cobox_aEE
  t_aEu
  (a_aEB, b_aEC)
  a type equality t_aEu ~ (a_aEB, b_aEC)
  In the first argument of ‘fst’, namely ‘att’
  In the first argument of ‘(++)’, namely ‘fst att’
tcPolyExprNC [a_aEx]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aEF]
          []
utype_defer
  cobox_aEG
  [a_aEF]
  [a_aEx]
  a type equality [a_aEF] ~ [a_aEx]
  In the second argument of ‘(++)’, namely
    ‘"=" ++ "\"" ++ snd att ++ "\""’
  In the expression: fst att ++ "=" ++ "\"" ++ snd att ++ "\""
  In an equation for ‘plakVast’:
      plakVast att = fst att ++ "=" ++ "\"" ++ snd att ++ "\""
tcPolyExprNC [a_aEF]
tcGen
utype_defer
  cobox_aEH
  [Char]
  [a_aEF]
  a type equality [Char] ~ [a_aEF]
  In the first argument of ‘(++)’, namely ‘"="’
  In the second argument of ‘(++)’, namely
    ‘"=" ++ "\"" ++ snd att ++ "\""’
  In the expression: fst att ++ "=" ++ "\"" ++ snd att ++ "\""
tcPolyExprNC [a_aEF]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aEI]
          []
utype_defer
  cobox_aEJ
  [a_aEI]
  [a_aEF]
  a type equality [a_aEI] ~ [a_aEF]
  In the second argument of ‘(++)’, namely ‘"\"" ++ snd att ++ "\""’
  In the second argument of ‘(++)’, namely
    ‘"=" ++ "\"" ++ snd att ++ "\""’
  In the expression: fst att ++ "=" ++ "\"" ++ snd att ++ "\""
tcPolyExprNC [a_aEI]
tcGen
utype_defer
  cobox_aEK
  [Char]
  [a_aEI]
  a type equality [Char] ~ [a_aEI]
  In the first argument of ‘(++)’, namely ‘"\""’
  In the second argument of ‘(++)’, namely ‘"\"" ++ snd att ++ "\""’
  In the second argument of ‘(++)’, namely
    ‘"=" ++ "\"" ++ snd att ++ "\""’
tcPolyExprNC [a_aEI]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aEL]
          []
utype_defer
  cobox_aEM
  [a_aEL]
  [a_aEI]
  a type equality [a_aEL] ~ [a_aEI]
  In the second argument of ‘(++)’, namely ‘snd att ++ "\""’
  In the second argument of ‘(++)’, namely ‘"\"" ++ snd att ++ "\""’
  In the second argument of ‘(++)’, namely
    ‘"=" ++ "\"" ++ snd att ++ "\""’
tcPolyExprNC [a_aEL]
tcGen
Instantiating
  snd with [a_aEP, b_aEQ]
           []
utype_defer
  cobox_aER
  b_aEQ
  [a_aEL]
  a type equality b_aEQ ~ [a_aEL]
  In the first argument of ‘(++)’, namely ‘snd att’
  In the second argument of ‘(++)’, namely ‘snd att ++ "\""’
tcPolyExprNC (a_aEP, b_aEQ)
tcGen
utype_defer
  cobox_aES
  t_aEu
  (a_aEP, b_aEQ)
  a type equality t_aEu ~ (a_aEP, b_aEQ)
  In the first argument of ‘snd’, namely ‘att’
  In the first argument of ‘(++)’, namely ‘snd att’
tcPolyExprNC [a_aEL]
tcGen
utype_defer
  cobox_aET
  [Char]
  [a_aEL]
  a type equality [Char] ~ [a_aEL]
  In the second argument of ‘(++)’, namely ‘"\""’
  In the second argument of ‘(++)’, namely ‘snd att ++ "\""’
  In the second argument of ‘(++)’, namely ‘"\"" ++ snd att ++ "\""’
csb2 [plakVast]
} End of bindings for
  [plakVast]
  NonRecursive
  plakVast t_aEt
env2 [(plakVast, Identifier[plakVast::t_aEt, <NotTopLevel>])]
tcBody t_aCW
Instantiating
  concat with [a_aEV]
              []
utype_defer
  cobox_aEW
  [a_aEV]
  t_aCW
  a type equality [a_aEV] ~ t_aCW
  In the expression: concat (map (' ' :) (map plakVast atts))
  In an equation for ‘toonAtts’:
      toonAtts atts
        = concat (map (' ' :) (map plakVast atts))
        where
            plakVast att = fst att ++ "=" ++ "\"" ++ snd att ++ "\""
tcPolyExprNC [[a_aEV]]
tcGen
Instantiating
  map with [a_aEX, b_aEY]
           []
utype_defer
  cobox_aEZ
  [b_aEY]
  [[a_aEV]]
  a type equality [b_aEY] ~ [[a_aEV]]
  In the first argument of ‘concat’, namely
    ‘(map (' ' :) (map plakVast atts))’
  In the expression: concat (map (' ' :) (map plakVast atts))
tcPolyExprNC a_aEX -> b_aEY
tcGen
Instantiating
  GHC.Types.: with [a_aF0]
                   []
utype_defer
  cobox_aF1
  [a_aF0] -> [a_aF0]
  a_aEX -> b_aEY
  a type equality [a_aF0] -> [a_aF0] ~ a_aEX -> b_aEY
  In the first argument of ‘map’, namely ‘(' ' :)’
  In the first argument of ‘concat’, namely
    ‘(map (' ' :) (map plakVast atts))’
  In the expression: concat (map (' ' :) (map plakVast atts))
tcPolyExprNC a_aF0
tcGen
utype_defer
  cobox_aF2
  Char
  a_aF0
  a type equality Char ~ a_aF0
  In the first argument of ‘(:)’, namely ‘' '’
  In the first argument of ‘map’, namely ‘(' ' :)’
  In the first argument of ‘concat’, namely
    ‘(map (' ' :) (map plakVast atts))’
tcPolyExprNC [a_aEX]
tcGen
Instantiating
  map with [a_aF3, b_aF4]
           []
utype_defer
  cobox_aF5
  [b_aF4]
  [a_aEX]
  a type equality [b_aF4] ~ [a_aEX]
  In the second argument of ‘map’, namely ‘(map plakVast atts)’
  In the first argument of ‘concat’, namely
    ‘(map (' ' :) (map plakVast atts))’
tcPolyExprNC a_aF3 -> b_aF4
tcGen
utype_defer
  cobox_aF6
  t_aEt
  a_aF3 -> b_aF4
  a type equality t_aEt ~ a_aF3 -> b_aF4
  In the first argument of ‘map’, namely ‘plakVast’
  In the second argument of ‘map’, namely ‘(map plakVast atts)’
tcPolyExprNC [a_aF3]
tcGen
utype_defer
  cobox_aF7
  t_aCV
  [a_aF3]
  a type equality t_aCV ~ [a_aF3]
  In the second argument of ‘map’, namely ‘atts’
  In the second argument of ‘map’, namely ‘(map plakVast atts)’
addInlinePrags
  toonAtts
  []
csb2 [toonAtts]
} End of bindings for
  [toonAtts]
  NonRecursive
  toonAtts t_aCV -> t_aCW
env2
  [(toonAtts, Identifier[toonAtts::t_aCV -> t_aCW, <NotTopLevel>])]
tc_group rec
  toon (Text string) = string
  toon (SingleTag tag atts) = "<" ++ tag ++ toonAtts atts ++ ">"
  toon (DoubleTag tag atts htmls)
    = "<"
      ++
        tag
        ++
          toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
------------------------------------------------
Bindings for { [toon]
Generalisation plan
  CheckGen toon :: t_aCZ -> t_aD0
                   []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  toon
  t_aCZ -> t_aD0
tcMatchesFun
  toon
  t_aCZ -> t_aD0
tcGen
utype_defer
  cobox_aF9
  HTML
  t_aCZ
  a type equality HTML ~ t_aCZ
  In the pattern: Text string
  In an equation for ‘toon’: toon (Text string) = string
tcConPat
  Text
  []
  HTML
  [String]
env2 [(string, Identifier[string::String, <NotTopLevel>])]
tcBody t_aD0
utype_defer
  cobox_aFa
  String
  t_aD0
  a type equality String ~ t_aD0
  In the expression: string
  In an equation for ‘toon’: toon (Text string) = string
utype_defer
  cobox_aFb
  HTML
  t_aCZ
  a type equality HTML ~ t_aCZ
  In the pattern: SingleTag tag atts
  In an equation for ‘toon’:
      toon (SingleTag tag atts) = "<" ++ tag ++ toonAtts atts ++ ">"
tcConPat
  SingleTag
  []
  HTML
  [String, [Attribute]]
env2 [(tag, Identifier[tag::String, <NotTopLevel>])]
env2 [(atts, Identifier[atts::[Attribute], <NotTopLevel>])]
tcBody t_aD0
Non Application rule (++)
Instantiating
  ++ with [a_aFc]
          []
utype_defer
  cobox_aFd
  [a_aFc]
  t_aD0
  a type equality [a_aFc] ~ t_aD0
  In the expression: "<" ++ tag ++ toonAtts atts ++ ">"
  In an equation for ‘toon’:
      toon (SingleTag tag atts) = "<" ++ tag ++ toonAtts atts ++ ">"
tcPolyExprNC [a_aFc]
tcGen
utype_defer
  cobox_aFe
  [Char]
  [a_aFc]
  a type equality [Char] ~ [a_aFc]
  In the first argument of ‘(++)’, namely ‘"<"’
  In the expression: "<" ++ tag ++ toonAtts atts ++ ">"
  In an equation for ‘toon’:
      toon (SingleTag tag atts) = "<" ++ tag ++ toonAtts atts ++ ">"
tcPolyExprNC [a_aFc]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aFf]
          []
utype_defer
  cobox_aFg
  [a_aFf]
  [a_aFc]
  a type equality [a_aFf] ~ [a_aFc]
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
  In the expression: "<" ++ tag ++ toonAtts atts ++ ">"
  In an equation for ‘toon’:
      toon (SingleTag tag atts) = "<" ++ tag ++ toonAtts atts ++ ">"
tcPolyExprNC [a_aFf]
tcGen
utype_defer
  cobox_aFh
  String
  [a_aFf]
  a type equality String ~ [a_aFf]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
tcPolyExprNC [a_aFf]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aFi]
          []
utype_defer
  cobox_aFj
  [a_aFi]
  [a_aFf]
  a type equality [a_aFi] ~ [a_aFf]
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
  In the expression: "<" ++ tag ++ toonAtts atts ++ ">"
tcPolyExprNC [a_aFi]
tcGen
utype_defer
  cobox_aFk
  t_aCW
  [a_aFi]
  a type equality t_aCW ~ [a_aFi]
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
tcPolyExprNC t_aCV
tcGen
utype_defer
  cobox_aFl
  [Attribute]
  t_aCV
  a type equality [Attribute] ~ t_aCV
  In the first argument of ‘toonAtts’, namely ‘atts’
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
tcPolyExprNC [a_aFi]
tcGen
utype_defer
  cobox_aFm
  [Char]
  [a_aFi]
  a type equality [Char] ~ [a_aFi]
  In the second argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
utype_defer
  cobox_aFn
  HTML
  t_aCZ
  a type equality HTML ~ t_aCZ
  In the pattern: DoubleTag tag atts htmls
  In an equation for ‘toon’:
      toon (DoubleTag tag atts htmls)
        = "<"
          ++
            tag
            ++
              toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
tcConPat
  DoubleTag
  []
  HTML
  [String, [Attribute], [HTML]]
env2 [(tag, Identifier[tag::String, <NotTopLevel>])]
env2 [(atts, Identifier[atts::[Attribute], <NotTopLevel>])]
env2 [(htmls, Identifier[htmls::[HTML], <NotTopLevel>])]
tcBody t_aD0
Non Application rule (++)
Instantiating
  ++ with [a_aFo]
          []
utype_defer
  cobox_aFp
  [a_aFo]
  t_aD0
  a type equality [a_aFo] ~ t_aD0
  In the expression:
    "<"
    ++
      tag
      ++
        toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
  In an equation for ‘toon’:
      toon (DoubleTag tag atts htmls)
        = "<"
          ++
            tag
            ++
              toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
tcPolyExprNC [a_aFo]
tcGen
utype_defer
  cobox_aFq
  [Char]
  [a_aFo]
  a type equality [Char] ~ [a_aFo]
  In the first argument of ‘(++)’, namely ‘"<"’
  In the expression:
    "<"
    ++
      tag
      ++
        toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
  In an equation for ‘toon’:
      toon (DoubleTag tag atts htmls)
        = "<"
          ++
            tag
            ++
              toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
tcPolyExprNC [a_aFo]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aFr]
          []
utype_defer
  cobox_aFs
  [a_aFr]
  [a_aFo]
  a type equality [a_aFr] ~ [a_aFo]
  In the second argument of ‘(++)’, namely
    ‘tag
     ++
       toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the expression:
    "<"
    ++
      tag
      ++
        toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
  In an equation for ‘toon’:
      toon (DoubleTag tag atts htmls)
        = "<"
          ++
            tag
            ++
              toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
tcPolyExprNC [a_aFr]
tcGen
utype_defer
  cobox_aFt
  String
  [a_aFr]
  a type equality String ~ [a_aFr]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely
    ‘tag
     ++
       toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aFr]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aFu]
          []
utype_defer
  cobox_aFv
  [a_aFu]
  [a_aFr]
  a type equality [a_aFu] ~ [a_aFr]
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts
     ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag
     ++
       toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the expression:
    "<"
    ++
      tag
      ++
        toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"
tcPolyExprNC [a_aFu]
tcGen
utype_defer
  cobox_aFw
  t_aCW
  [a_aFu]
  a type equality t_aCW ~ [a_aFu]
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts
     ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC t_aCV
tcGen
utype_defer
  cobox_aFx
  [Attribute]
  t_aCV
  a type equality [Attribute] ~ t_aCV
  In the first argument of ‘toonAtts’, namely ‘atts’
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
tcPolyExprNC [a_aFu]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aFy]
          []
utype_defer
  cobox_aFz
  [a_aFy]
  [a_aFu]
  a type equality [a_aFy] ~ [a_aFu]
  In the second argument of ‘(++)’, namely
    ‘">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts
     ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag
     ++
       toonAtts atts ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aFy]
tcGen
utype_defer
  cobox_aFA
  [Char]
  [a_aFy]
  a type equality [Char] ~ [a_aFy]
  In the first argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely
    ‘">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts
     ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aFy]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aFB]
          []
utype_defer
  cobox_aFC
  [a_aFB]
  [a_aFy]
  a type equality [a_aFB] ~ [a_aFy]
  In the second argument of ‘(++)’, namely
    ‘concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts
     ++ ">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aFB]
tcGen
Instantiating
  concatMap with [a_aFF, b_aFG]
                 []
utype_defer
  cobox_aFH
  [b_aFG]
  [a_aFB]
  a type equality [b_aFG] ~ [a_aFB]
  In the first argument of ‘(++)’, namely ‘concatMap toon htmls’
  In the second argument of ‘(++)’, namely
    ‘concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC a_aFF -> [b_aFG]
tcGen
utype_defer
  cobox_aFI
  t_aCZ -> t_aD0
  a_aFF -> [b_aFG]
  a type equality t_aCZ -> t_aD0 ~ a_aFF -> [b_aFG]
  In the first argument of ‘concatMap’, namely ‘toon’
  In the first argument of ‘(++)’, namely ‘concatMap toon htmls’
tcPolyExprNC [a_aFF]
tcGen
utype_defer
  cobox_aFJ
  [HTML]
  [a_aFF]
  a type equality [HTML] ~ [a_aFF]
  In the second argument of ‘concatMap’, namely ‘htmls’
  In the first argument of ‘(++)’, namely ‘concatMap toon htmls’
tcPolyExprNC [a_aFB]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aFK]
          []
utype_defer
  cobox_aFL
  [a_aFK]
  [a_aFB]
  a type equality [a_aFK] ~ [a_aFB]
  In the second argument of ‘(++)’, namely ‘"</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘concatMap toon htmls ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘">" ++ concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aFK]
tcGen
utype_defer
  cobox_aFM
  [Char]
  [a_aFK]
  a type equality [Char] ~ [a_aFK]
  In the first argument of ‘(++)’, namely ‘"</"’
  In the second argument of ‘(++)’, namely ‘"</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aFK]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aFN]
          []
utype_defer
  cobox_aFO
  [a_aFN]
  [a_aFK]
  a type equality [a_aFN] ~ [a_aFK]
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the second argument of ‘(++)’, namely ‘"</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘concatMap toon htmls ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aFN]
tcGen
utype_defer
  cobox_aFP
  String
  [a_aFN]
  a type equality String ~ [a_aFN]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
tcPolyExprNC [a_aFN]
tcGen
utype_defer
  cobox_aFQ
  [Char]
  [a_aFN]
  a type equality [Char] ~ [a_aFN]
  In the second argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the second argument of ‘(++)’, namely ‘"</" ++ tag ++ ">"’
addInlinePrags
  toon
  []
csb2 [toon]
} End of bindings for
  [toon]
  Recursive
  toon t_aCZ -> t_aD0
env2 [(toon, Identifier[toon::t_aCZ -> t_aD0, <NotTopLevel>])]
tc_group rec
  ppHTML (Text string) = tekst string
  ppHTML (SingleTag tag atts) = tekst (toon (SingleTag tag atts))
  ppHTML (DoubleTag tag atts (Text string))
    = tekst
        ("<"
         ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
  ppHTML (DoubleTag tag atts htmls)
    | length htmls == 0
    = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
    | length htmls == 1
    = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
      <-> ppHTML (head htmls)
      <-> tekst ("</" ++ tag ++ ">")
    | otherwise
    = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
      <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
      <-> tekst ("</" ++ tag ++ ">")
------------------------------------------------
Bindings for { [ppHTML]
Generalisation plan
  CheckGen ppHTML :: t_aD3 -> t_aD4
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  ppHTML
  t_aD3 -> t_aD4
tcMatchesFun
  ppHTML
  t_aD3 -> t_aD4
tcGen
utype_defer
  cobox_aFS
  HTML
  t_aD3
  a type equality HTML ~ t_aD3
  In the pattern: Text string
  In an equation for ‘ppHTML’: ppHTML (Text string) = tekst string
tcConPat
  Text
  []
  HTML
  [String]
env2 [(string, Identifier[string::String, <NotTopLevel>])]
tcBody t_aD4
utype_defer
  cobox_aFT
  Doc
  t_aD4
  a type equality Doc ~ t_aD4
  In the expression: tekst string
  In an equation for ‘ppHTML’: ppHTML (Text string) = tekst string
tcPolyExprNC String
tcGen
utype_defer
  cobox_aFU
  String
  String
  a type equality String ~ String
  In the first argument of ‘tekst’, namely ‘string’
  In the expression: tekst string
utype_defer
  cobox_aFV
  HTML
  t_aD3
  a type equality HTML ~ t_aD3
  In the pattern: SingleTag tag atts
  In an equation for ‘ppHTML’:
      ppHTML (SingleTag tag atts) = tekst (toon (SingleTag tag atts))
tcConPat
  SingleTag
  []
  HTML
  [String, [Attribute]]
env2 [(tag, Identifier[tag::String, <NotTopLevel>])]
env2 [(atts, Identifier[atts::[Attribute], <NotTopLevel>])]
tcBody t_aD4
utype_defer
  cobox_aFW
  Doc
  t_aD4
  a type equality Doc ~ t_aD4
  In the expression: tekst (toon (SingleTag tag atts))
  In an equation for ‘ppHTML’:
      ppHTML (SingleTag tag atts) = tekst (toon (SingleTag tag atts))
tcPolyExprNC String
tcGen
utype_defer
  cobox_aFX
  t_aD0
  String
  a type equality t_aD0 ~ String
  In the first argument of ‘tekst’, namely
    ‘(toon (SingleTag tag atts))’
  In the expression: tekst (toon (SingleTag tag atts))
tcPolyExprNC t_aCZ
tcGen
utype_defer
  cobox_aFY
  HTML
  t_aCZ
  a type equality HTML ~ t_aCZ
  In the first argument of ‘toon’, namely ‘(SingleTag tag atts)’
  In the first argument of ‘tekst’, namely
    ‘(toon (SingleTag tag atts))’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aFZ
  String
  String
  a type equality String ~ String
  In the first argument of ‘SingleTag’, namely ‘tag’
  In the first argument of ‘toon’, namely ‘(SingleTag tag atts)’
tcPolyExprNC [Attribute]
tcGen
utype_defer
  cobox_aG0
  [Attribute]
  [Attribute]
  a type equality [Attribute] ~ [Attribute]
  In the second argument of ‘SingleTag’, namely ‘atts’
  In the first argument of ‘toon’, namely ‘(SingleTag tag atts)’
utype_defer
  cobox_aG1
  HTML
  t_aD3
  a type equality HTML ~ t_aD3
  In the pattern: DoubleTag tag atts (Text string)
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts (Text string))
        = tekst
            ("<"
             ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
tcConPat
  DoubleTag
  []
  HTML
  [String, [Attribute], [HTML]]
env2 [(tag, Identifier[tag::String, <NotTopLevel>])]
env2 [(atts, Identifier[atts::[Attribute], <NotTopLevel>])]
utype_defer
  cobox_aG2
  HTML
  [HTML]
  a type equality HTML ~ [HTML]
  In the pattern: Text string
  In the pattern: DoubleTag tag atts (Text string)
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts (Text string))
        = tekst
            ("<"
             ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
tcConPat
  Text
  []
  HTML
  [String]
env2 [(string, Identifier[string::String, <NotTopLevel>])]
tcBody t_aD4
utype_defer
  cobox_aG3
  Doc
  t_aD4
  a type equality Doc ~ t_aD4
  In the expression:
    tekst
      ("<"
       ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts (Text string))
        = tekst
            ("<"
             ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
tcPolyExprNC String
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aG4]
          []
utype_defer
  cobox_aG5
  [a_aG4]
  String
  a type equality [a_aG4] ~ String
  In the first argument of ‘tekst’, namely
    ‘("<"
      ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")’
  In the expression:
    tekst
      ("<"
       ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts (Text string))
        = tekst
            ("<"
             ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
tcPolyExprNC [a_aG4]
tcGen
utype_defer
  cobox_aG6
  [Char]
  [a_aG4]
  a type equality [Char] ~ [a_aG4]
  In the first argument of ‘(++)’, namely ‘"<"’
  In the first argument of ‘tekst’, namely
    ‘("<"
      ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")’
  In the expression:
    tekst
      ("<"
       ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
tcPolyExprNC [a_aG4]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aG7]
          []
utype_defer
  cobox_aG8
  [a_aG7]
  [a_aG4]
  a type equality [a_aG7] ~ [a_aG4]
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
  In the first argument of ‘tekst’, namely
    ‘("<"
      ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")’
  In the expression:
    tekst
      ("<"
       ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
tcPolyExprNC [a_aG7]
tcGen
utype_defer
  cobox_aG9
  String
  [a_aG7]
  a type equality String ~ [a_aG7]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aG7]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGa]
          []
utype_defer
  cobox_aGb
  [a_aGa]
  [a_aG7]
  a type equality [a_aGa] ~ [a_aG7]
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
  In the first argument of ‘tekst’, namely
    ‘("<"
      ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")’
tcPolyExprNC [a_aGa]
tcGen
utype_defer
  cobox_aGc
  t_aCW
  [a_aGa]
  a type equality t_aCW ~ [a_aGa]
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
tcPolyExprNC t_aCV
tcGen
utype_defer
  cobox_aGd
  [Attribute]
  t_aCV
  a type equality [Attribute] ~ t_aCV
  In the first argument of ‘toonAtts’, namely ‘atts’
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
tcPolyExprNC [a_aGa]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGe]
          []
utype_defer
  cobox_aGf
  [a_aGe]
  [a_aGa]
  a type equality [a_aGe] ~ [a_aGa]
  In the second argument of ‘(++)’, namely
    ‘">" ++ string ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aGe]
tcGen
utype_defer
  cobox_aGg
  [Char]
  [a_aGe]
  a type equality [Char] ~ [a_aGe]
  In the first argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely
    ‘">" ++ string ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aGe]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGh]
          []
utype_defer
  cobox_aGi
  [a_aGh]
  [a_aGe]
  a type equality [a_aGh] ~ [a_aGe]
  In the second argument of ‘(++)’, namely
    ‘string ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘">" ++ string ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aGh]
tcGen
utype_defer
  cobox_aGj
  String
  [a_aGh]
  a type equality String ~ [a_aGh]
  In the first argument of ‘(++)’, namely ‘string’
  In the second argument of ‘(++)’, namely
    ‘string ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aGh]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGk]
          []
utype_defer
  cobox_aGl
  [a_aGk]
  [a_aGh]
  a type equality [a_aGk] ~ [a_aGh]
  In the second argument of ‘(++)’, namely ‘"</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘string ++ "</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘">" ++ string ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aGk]
tcGen
utype_defer
  cobox_aGm
  [Char]
  [a_aGk]
  a type equality [Char] ~ [a_aGk]
  In the first argument of ‘(++)’, namely ‘"</"’
  In the second argument of ‘(++)’, namely ‘"</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘string ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aGk]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGn]
          []
utype_defer
  cobox_aGo
  [a_aGn]
  [a_aGk]
  a type equality [a_aGn] ~ [a_aGk]
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the second argument of ‘(++)’, namely ‘"</" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘string ++ "</" ++ tag ++ ">"’
tcPolyExprNC [a_aGn]
tcGen
utype_defer
  cobox_aGp
  String
  [a_aGn]
  a type equality String ~ [a_aGn]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
tcPolyExprNC [a_aGn]
tcGen
utype_defer
  cobox_aGq
  [Char]
  [a_aGn]
  a type equality [Char] ~ [a_aGn]
  In the second argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the second argument of ‘(++)’, namely ‘"</" ++ tag ++ ">"’
utype_defer
  cobox_aGr
  HTML
  t_aD3
  a type equality HTML ~ t_aD3
  In the pattern: DoubleTag tag atts htmls
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcConPat
  DoubleTag
  []
  HTML
  [String, [Attribute], [HTML]]
env2 [(tag, Identifier[tag::String, <NotTopLevel>])]
env2 [(atts, Identifier[atts::[Attribute], <NotTopLevel>])]
env2 [(htmls, Identifier[htmls::[HTML], <NotTopLevel>])]
Non Application rule (==)
Instantiating
  == with [a_aGy]
          [Eq a_aGy]
instCallConstraints [$dEq_aGz]
utype_defer
  cobox_aGA
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: length htmls == 0
  In a stmt of a pattern guard for
                 an equation for ‘ppHTML’:
    length htmls == 0
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC a_aGy
tcGen
Instantiating
  length with [a_aGB]
              []
utype_defer
  cobox_aGC
  Int
  a_aGy
  a type equality Int ~ a_aGy
  In the first argument of ‘(==)’, namely ‘length htmls’
  In the expression: length htmls == 0
tcPolyExprNC [a_aGB]
tcGen
utype_defer
  cobox_aGD
  [HTML]
  [a_aGB]
  a type equality [HTML] ~ [a_aGB]
  In the first argument of ‘length’, namely ‘htmls’
  In the first argument of ‘(==)’, namely ‘length htmls’
tcPolyExprNC a_aGy
tcGen
Instantiating
  fromInteger with [a_aGE]
                   [Num a_aGE]
instCallConstraints [$dNum_aGF]
utype_defer
  cobox_aGG
  Integer -> a_aGE
  Integer -> a_aGy
  a type equality Integer -> a_aGE ~ Integer -> a_aGy
  In the second argument of ‘(==)’, namely ‘0’
  In the expression: length htmls == 0
  In a stmt of a pattern guard for
                 an equation for ‘ppHTML’:
    length htmls == 0
tcBody t_aD4
utype_defer
  cobox_aGH
  Doc
  t_aD4
  a type equality Doc ~ t_aD4
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC String
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGI]
          []
utype_defer
  cobox_aGJ
  [a_aGI]
  String
  a type equality [a_aGI] ~ String
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC [a_aGI]
tcGen
utype_defer
  cobox_aGK
  [Char]
  [a_aGI]
  a type equality [Char] ~ [a_aGI]
  In the first argument of ‘(++)’, namely ‘"<"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
tcPolyExprNC [a_aGI]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGL]
          []
utype_defer
  cobox_aGM
  [a_aGL]
  [a_aGI]
  a type equality [a_aGL] ~ [a_aGI]
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ "></" ++ tag ++ ">"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
tcPolyExprNC [a_aGL]
tcGen
utype_defer
  cobox_aGN
  String
  [a_aGL]
  a type equality String ~ [a_aGL]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ "></" ++ tag ++ ">"’
tcPolyExprNC [a_aGL]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGO]
          []
utype_defer
  cobox_aGP
  [a_aGO]
  [a_aGL]
  a type equality [a_aGO] ~ [a_aGL]
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ "></" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ "></" ++ tag ++ ">"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")’
tcPolyExprNC [a_aGO]
tcGen
utype_defer
  cobox_aGQ
  t_aCW
  [a_aGO]
  a type equality t_aCW ~ [a_aGO]
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ "></" ++ tag ++ ">"’
tcPolyExprNC t_aCV
tcGen
utype_defer
  cobox_aGR
  [Attribute]
  t_aCV
  a type equality [Attribute] ~ t_aCV
  In the first argument of ‘toonAtts’, namely ‘atts’
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
tcPolyExprNC [a_aGO]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGS]
          []
utype_defer
  cobox_aGT
  [a_aGS]
  [a_aGO]
  a type equality [a_aGS] ~ [a_aGO]
  In the second argument of ‘(++)’, namely ‘"></" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ "></" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ "></" ++ tag ++ ">"’
tcPolyExprNC [a_aGS]
tcGen
utype_defer
  cobox_aGU
  [Char]
  [a_aGS]
  a type equality [Char] ~ [a_aGS]
  In the first argument of ‘(++)’, namely ‘"></"’
  In the second argument of ‘(++)’, namely ‘"></" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ "></" ++ tag ++ ">"’
tcPolyExprNC [a_aGS]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aGV]
          []
utype_defer
  cobox_aGW
  [a_aGV]
  [a_aGS]
  a type equality [a_aGV] ~ [a_aGS]
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the second argument of ‘(++)’, namely ‘"></" ++ tag ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘toonAtts atts ++ "></" ++ tag ++ ">"’
tcPolyExprNC [a_aGV]
tcGen
utype_defer
  cobox_aGX
  String
  [a_aGV]
  a type equality String ~ [a_aGV]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
tcPolyExprNC [a_aGV]
tcGen
utype_defer
  cobox_aGY
  [Char]
  [a_aGV]
  a type equality [Char] ~ [a_aGV]
  In the second argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the second argument of ‘(++)’, namely ‘"></" ++ tag ++ ">"’
Non Application rule (==)
Instantiating
  == with [a_aGZ]
          [Eq a_aGZ]
instCallConstraints [$dEq_aH0]
utype_defer
  cobox_aH1
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: length htmls == 1
  In a stmt of a pattern guard for
                 an equation for ‘ppHTML’:
    length htmls == 1
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC a_aGZ
tcGen
Instantiating
  length with [a_aH2]
              []
utype_defer
  cobox_aH3
  Int
  a_aGZ
  a type equality Int ~ a_aGZ
  In the first argument of ‘(==)’, namely ‘length htmls’
  In the expression: length htmls == 1
tcPolyExprNC [a_aH2]
tcGen
utype_defer
  cobox_aH4
  [HTML]
  [a_aH2]
  a type equality [HTML] ~ [a_aH2]
  In the first argument of ‘length’, namely ‘htmls’
  In the first argument of ‘(==)’, namely ‘length htmls’
tcPolyExprNC a_aGZ
tcGen
Instantiating
  fromInteger with [a_aH5]
                   [Num a_aH5]
instCallConstraints [$dNum_aH6]
utype_defer
  cobox_aH7
  Integer -> a_aH5
  Integer -> a_aGZ
  a type equality Integer -> a_aH5 ~ Integer -> a_aGZ
  In the second argument of ‘(==)’, namely ‘1’
  In the expression: length htmls == 1
  In a stmt of a pattern guard for
                 an equation for ‘ppHTML’:
    length htmls == 1
tcBody t_aD4
Non Application rule (<->)
utype_defer
  cobox_aH8
  Doc
  t_aD4
  a type equality Doc ~ t_aD4
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ ">") <-> ppHTML (head htmls)
    <-> tekst ("</" ++ tag ++ ">")
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC Doc
tcGen
Non Application rule (<->)
utype_defer
  cobox_aH9
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")
     <-> ppHTML (head htmls)’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ ">") <-> ppHTML (head htmls)
    <-> tekst ("</" ++ tag ++ ">")
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aHa
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")
     <-> ppHTML (head htmls)’
tcPolyExprNC String
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aHb]
          []
utype_defer
  cobox_aHc
  [a_aHb]
  String
  a type equality [a_aHb] ~ String
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")
     <-> ppHTML (head htmls)’
tcPolyExprNC [a_aHb]
tcGen
utype_defer
  cobox_aHd
  [Char]
  [a_aHb]
  a type equality [Char] ~ [a_aHb]
  In the first argument of ‘(++)’, namely ‘"<"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")’
tcPolyExprNC [a_aHb]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aHe]
          []
utype_defer
  cobox_aHf
  [a_aHe]
  [a_aHb]
  a type equality [a_aHe] ~ [a_aHb]
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")’
tcPolyExprNC [a_aHe]
tcGen
utype_defer
  cobox_aHg
  String
  [a_aHe]
  a type equality String ~ [a_aHe]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
tcPolyExprNC [a_aHe]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aHh]
          []
utype_defer
  cobox_aHi
  [a_aHh]
  [a_aHe]
  a type equality [a_aHh] ~ [a_aHe]
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ ">")’
tcPolyExprNC [a_aHh]
tcGen
utype_defer
  cobox_aHj
  t_aCW
  [a_aHh]
  a type equality t_aCW ~ [a_aHh]
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
tcPolyExprNC t_aCV
tcGen
utype_defer
  cobox_aHk
  [Attribute]
  t_aCV
  a type equality [Attribute] ~ t_aCV
  In the first argument of ‘toonAtts’, namely ‘atts’
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
tcPolyExprNC [a_aHh]
tcGen
utype_defer
  cobox_aHl
  [Char]
  [a_aHh]
  a type equality [Char] ~ [a_aHh]
  In the second argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aHm
  t_aD4
  Doc
  a type equality t_aD4 ~ Doc
  In the second argument of ‘(<->)’, namely ‘ppHTML (head htmls)’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")
     <-> ppHTML (head htmls)’
tcPolyExprNC t_aD3
tcGen
Instantiating
  head with [a_aHn]
            []
utype_defer
  cobox_aHo
  a_aHn
  t_aD3
  a type equality a_aHn ~ t_aD3
  In the first argument of ‘ppHTML’, namely ‘(head htmls)’
  In the second argument of ‘(<->)’, namely ‘ppHTML (head htmls)’
tcPolyExprNC [a_aHn]
tcGen
utype_defer
  cobox_aHp
  [HTML]
  [a_aHn]
  a type equality [HTML] ~ [a_aHn]
  In the first argument of ‘head’, namely ‘htmls’
  In the first argument of ‘ppHTML’, namely ‘(head htmls)’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aHq
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<->)’, namely
    ‘tekst ("</" ++ tag ++ ">")’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ ">") <-> ppHTML (head htmls)
    <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC String
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aHr]
          []
utype_defer
  cobox_aHs
  [a_aHr]
  String
  a type equality [a_aHr] ~ String
  In the first argument of ‘tekst’, namely ‘("</" ++ tag ++ ">")’
  In the second argument of ‘(<->)’, namely
    ‘tekst ("</" ++ tag ++ ">")’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ ">") <-> ppHTML (head htmls)
    <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC [a_aHr]
tcGen
utype_defer
  cobox_aHt
  [Char]
  [a_aHr]
  a type equality [Char] ~ [a_aHr]
  In the first argument of ‘(++)’, namely ‘"</"’
  In the first argument of ‘tekst’, namely ‘("</" ++ tag ++ ">")’
  In the second argument of ‘(<->)’, namely
    ‘tekst ("</" ++ tag ++ ">")’
tcPolyExprNC [a_aHr]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aHu]
          []
utype_defer
  cobox_aHv
  [a_aHu]
  [a_aHr]
  a type equality [a_aHu] ~ [a_aHr]
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the first argument of ‘tekst’, namely ‘("</" ++ tag ++ ">")’
  In the second argument of ‘(<->)’, namely
    ‘tekst ("</" ++ tag ++ ">")’
tcPolyExprNC [a_aHu]
tcGen
utype_defer
  cobox_aHw
  String
  [a_aHu]
  a type equality String ~ [a_aHu]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
tcPolyExprNC [a_aHu]
tcGen
utype_defer
  cobox_aHx
  [Char]
  [a_aHu]
  a type equality [Char] ~ [a_aHu]
  In the second argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the first argument of ‘tekst’, namely ‘("</" ++ tag ++ ">")’
utype_defer
  cobox_aHy
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: otherwise
  In a stmt of a pattern guard for
                 an equation for ‘ppHTML’:
    otherwise
tcBody t_aD4
Non Application rule (<->)
utype_defer
  cobox_aHz
  Doc
  t_aD4
  a type equality Doc ~ t_aD4
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ ">")
    <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
    <-> tekst ("</" ++ tag ++ ">")
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC Doc
tcGen
Non Application rule (<->)
utype_defer
  cobox_aHA
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")
     <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ ">")
    <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
    <-> tekst ("</" ++ tag ++ ">")
  In an equation for ‘ppHTML’:
      ppHTML (DoubleTag tag atts htmls)
        | length htmls == 0
        = tekst ("<" ++ tag ++ toonAtts atts ++ "></" ++ tag ++ ">")
        | length htmls == 1
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> ppHTML (head htmls)
          <-> tekst ("</" ++ tag ++ ">")
        | otherwise
        = tekst ("<" ++ tag ++ toonAtts atts ++ ">")
          <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
          <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aHB
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")
     <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))’
tcPolyExprNC String
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aHC]
          []
utype_defer
  cobox_aHD
  [a_aHC]
  String
  a type equality [a_aHC] ~ String
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")
     <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))’
tcPolyExprNC [a_aHC]
tcGen
utype_defer
  cobox_aHE
  [Char]
  [a_aHC]
  a type equality [Char] ~ [a_aHC]
  In the first argument of ‘(++)’, namely ‘"<"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")’
tcPolyExprNC [a_aHC]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aHF]
          []
utype_defer
  cobox_aHG
  [a_aHF]
  [a_aHC]
  a type equality [a_aHF] ~ [a_aHC]
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ ">")’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")’
tcPolyExprNC [a_aHF]
tcGen
utype_defer
  cobox_aHH
  String
  [a_aHF]
  a type equality String ~ [a_aHF]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
tcPolyExprNC [a_aHF]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aHI]
          []
utype_defer
  cobox_aHJ
  [a_aHI]
  [a_aHF]
  a type equality [a_aHI] ~ [a_aHF]
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
  In the first argument of ‘tekst’, namely
    ‘("<" ++ tag ++ toonAtts atts ++ ">")’
tcPolyExprNC [a_aHI]
tcGen
utype_defer
  cobox_aHK
  t_aCW
  [a_aHI]
  a type equality t_aCW ~ [a_aHI]
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
tcPolyExprNC t_aCV
tcGen
utype_defer
  cobox_aHL
  [Attribute]
  t_aCV
  a type equality [Attribute] ~ t_aCV
  In the first argument of ‘toonAtts’, namely ‘atts’
  In the first argument of ‘(++)’, namely ‘toonAtts atts’
tcPolyExprNC [a_aHI]
tcGen
utype_defer
  cobox_aHM
  [Char]
  [a_aHI]
  a type equality [Char] ~ [a_aHI]
  In the second argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely ‘toonAtts atts ++ ">"’
  In the second argument of ‘(++)’, namely
    ‘tag ++ toonAtts atts ++ ">"’
tcPolyExprNC Doc
tcGen
Instantiating
  foldr with [a_aHN, b_aHO]
             []
utype_defer
  cobox_aHP
  b_aHO
  Doc
  a type equality b_aHO ~ Doc
  In the second argument of ‘(<->)’, namely
    ‘(foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))’
  In the first argument of ‘(<->)’, namely
    ‘tekst ("<" ++ tag ++ toonAtts atts ++ ">")
     <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))’
tcPolyExprNC a_aHN -> b_aHO -> b_aHO
tcGen
utype_defer
  cobox_aHQ
  Doc -> Doc -> Doc
  a_aHN -> b_aHO -> b_aHO
  a type equality Doc -> Doc -> Doc ~ a_aHN -> b_aHO -> b_aHO
  In the first argument of ‘foldr’, namely ‘(<->)’
  In the second argument of ‘(<->)’, namely
    ‘(foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))’
tcPolyExprNC b_aHO
tcGen
utype_defer
  cobox_aHR
  Doc
  b_aHO
  a type equality Doc ~ b_aHO
  In the second argument of ‘foldr’, namely ‘leeg’
  In the second argument of ‘(<->)’, namely
    ‘(foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))’
tcPolyExprNC [a_aHN]
tcGen
Instantiating
  map with [a_aHS, b_aHT]
           []
utype_defer
  cobox_aHU
  [b_aHT]
  [a_aHN]
  a type equality [b_aHT] ~ [a_aHN]
  In the third argument of ‘foldr’, namely
    ‘(map (springIn 1) (map ppHTML htmls))’
  In the second argument of ‘(<->)’, namely
    ‘(foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))’
tcPolyExprNC a_aHS -> b_aHT
tcGen
utype_defer
  cobox_aHV
  Doc -> Doc
  a_aHS -> b_aHT
  a type equality Doc -> Doc ~ a_aHS -> b_aHT
  In the first argument of ‘map’, namely ‘(springIn 1)’
  In the third argument of ‘foldr’, namely
    ‘(map (springIn 1) (map ppHTML htmls))’
tcPolyExprNC Int
tcGen
tcPolyExprNC [a_aHS]
tcGen
Instantiating
  map with [a_aHW, b_aHX]
           []
utype_defer
  cobox_aHY
  [b_aHX]
  [a_aHS]
  a type equality [b_aHX] ~ [a_aHS]
  In the second argument of ‘map’, namely ‘(map ppHTML htmls)’
  In the third argument of ‘foldr’, namely
    ‘(map (springIn 1) (map ppHTML htmls))’
tcPolyExprNC a_aHW -> b_aHX
tcGen
utype_defer
  cobox_aHZ
  t_aD3 -> t_aD4
  a_aHW -> b_aHX
  a type equality t_aD3 -> t_aD4 ~ a_aHW -> b_aHX
  In the first argument of ‘map’, namely ‘ppHTML’
  In the second argument of ‘map’, namely ‘(map ppHTML htmls)’
tcPolyExprNC [a_aHW]
tcGen
utype_defer
  cobox_aI0
  [HTML]
  [a_aHW]
  a type equality [HTML] ~ [a_aHW]
  In the second argument of ‘map’, namely ‘htmls’
  In the second argument of ‘map’, namely ‘(map ppHTML htmls)’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aI1
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<->)’, namely
    ‘tekst ("</" ++ tag ++ ">")’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ ">")
    <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
    <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC String
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aI2]
          []
utype_defer
  cobox_aI3
  [a_aI2]
  String
  a type equality [a_aI2] ~ String
  In the first argument of ‘tekst’, namely ‘("</" ++ tag ++ ">")’
  In the second argument of ‘(<->)’, namely
    ‘tekst ("</" ++ tag ++ ">")’
  In the expression:
    tekst ("<" ++ tag ++ toonAtts atts ++ ">")
    <-> (foldr (<->) leeg (map (springIn 1) (map ppHTML htmls)))
    <-> tekst ("</" ++ tag ++ ">")
tcPolyExprNC [a_aI2]
tcGen
utype_defer
  cobox_aI4
  [Char]
  [a_aI2]
  a type equality [Char] ~ [a_aI2]
  In the first argument of ‘(++)’, namely ‘"</"’
  In the first argument of ‘tekst’, namely ‘("</" ++ tag ++ ">")’
  In the second argument of ‘(<->)’, namely
    ‘tekst ("</" ++ tag ++ ">")’
tcPolyExprNC [a_aI2]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aI5]
          []
utype_defer
  cobox_aI6
  [a_aI5]
  [a_aI2]
  a type equality [a_aI5] ~ [a_aI2]
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the first argument of ‘tekst’, namely ‘("</" ++ tag ++ ">")’
  In the second argument of ‘(<->)’, namely
    ‘tekst ("</" ++ tag ++ ">")’
tcPolyExprNC [a_aI5]
tcGen
utype_defer
  cobox_aI7
  String
  [a_aI5]
  a type equality String ~ [a_aI5]
  In the first argument of ‘(++)’, namely ‘tag’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
tcPolyExprNC [a_aI5]
tcGen
utype_defer
  cobox_aI8
  [Char]
  [a_aI5]
  a type equality [Char] ~ [a_aI5]
  In the second argument of ‘(++)’, namely ‘">"’
  In the second argument of ‘(++)’, namely ‘tag ++ ">"’
  In the first argument of ‘tekst’, namely ‘("</" ++ tag ++ ">")’
addInlinePrags
  ppHTML
  []
csb2 [ppHTML]
} End of bindings for
  [ppHTML]
  Recursive
  ppHTML t_aD3 -> t_aD4
env2 [(ppHTML, Identifier[ppHTML::t_aD3 -> t_aD4, <NotTopLevel>])]
------------------------------------------------
Bindings for { [regels]
Generalisation plan
  CheckGen regels :: t_aD7
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  regels
  t_aD7
tcMatchesFun
  regels
  t_aD7
tcGen
tcBody t_aD7
utype_defer
  cobox_aIb
  [t_aIa]
  t_aD7
  a type equality [t_aIa] ~ t_aD7
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
  In an equation for ‘regels’:
      regels
        = [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
           ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIa
tcPolyExprNC t_aIa
tcGen
utype_defer
  cobox_aIe
  (t_aIc, t_aId)
  t_aIa
  a type equality (t_aIc, t_aId) ~ t_aIa
  In the expression: ("UL", "LI")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
  In an equation for ‘regels’:
      regels
        = [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
           ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIc
tcPolyExprNC t_aIc
tcGen
utype_defer
  cobox_aIf
  [Char]
  t_aIc
  a type equality [Char] ~ t_aIc
  In the expression: "UL"
  In the expression: ("UL", "LI")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aId
tcPolyExprNC t_aId
tcGen
utype_defer
  cobox_aIg
  [Char]
  t_aId
  a type equality [Char] ~ t_aId
  In the expression: "LI"
  In the expression: ("UL", "LI")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIa
tcPolyExprNC t_aIa
tcGen
utype_defer
  cobox_aIj
  (t_aIh, t_aIi)
  t_aIa
  a type equality (t_aIh, t_aIi) ~ t_aIa
  In the expression: ("HTML", "BODY")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
  In an equation for ‘regels’:
      regels
        = [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
           ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIh
tcPolyExprNC t_aIh
tcGen
utype_defer
  cobox_aIk
  [Char]
  t_aIh
  a type equality [Char] ~ t_aIh
  In the expression: "HTML"
  In the expression: ("HTML", "BODY")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIi
tcPolyExprNC t_aIi
tcGen
utype_defer
  cobox_aIl
  [Char]
  t_aIi
  a type equality [Char] ~ t_aIi
  In the expression: "BODY"
  In the expression: ("HTML", "BODY")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIa
tcPolyExprNC t_aIa
tcGen
utype_defer
  cobox_aIo
  (t_aIm, t_aIn)
  t_aIa
  a type equality (t_aIm, t_aIn) ~ t_aIa
  In the expression: ("HTML", "HEAD")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
  In an equation for ‘regels’:
      regels
        = [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
           ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIm
tcPolyExprNC t_aIm
tcGen
utype_defer
  cobox_aIp
  [Char]
  t_aIm
  a type equality [Char] ~ t_aIm
  In the expression: "HTML"
  In the expression: ("HTML", "HEAD")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIn
tcPolyExprNC t_aIn
tcGen
utype_defer
  cobox_aIq
  [Char]
  t_aIn
  a type equality [Char] ~ t_aIn
  In the expression: "HEAD"
  In the expression: ("HTML", "HEAD")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIa
tcPolyExprNC t_aIa
tcGen
utype_defer
  cobox_aIt
  (t_aIr, t_aIs)
  t_aIa
  a type equality (t_aIr, t_aIs) ~ t_aIa
  In the expression: ("BODY", "H")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
  In an equation for ‘regels’:
      regels
        = [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
           ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIr
tcPolyExprNC t_aIr
tcGen
utype_defer
  cobox_aIu
  [Char]
  t_aIr
  a type equality [Char] ~ t_aIr
  In the expression: "BODY"
  In the expression: ("BODY", "H")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIs
tcPolyExprNC t_aIs
tcGen
utype_defer
  cobox_aIv
  [Char]
  t_aIs
  a type equality [Char] ~ t_aIs
  In the expression: "H"
  In the expression: ("BODY", "H")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIa
tcPolyExprNC t_aIa
tcGen
utype_defer
  cobox_aIy
  (t_aIw, t_aIx)
  t_aIa
  a type equality (t_aIw, t_aIx) ~ t_aIa
  In the expression: ("BODY", "HR")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
  In an equation for ‘regels’:
      regels
        = [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
           ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIw
tcPolyExprNC t_aIw
tcGen
utype_defer
  cobox_aIz
  [Char]
  t_aIw
  a type equality [Char] ~ t_aIw
  In the expression: "BODY"
  In the expression: ("BODY", "HR")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIx
tcPolyExprNC t_aIx
tcGen
utype_defer
  cobox_aIA
  [Char]
  t_aIx
  a type equality [Char] ~ t_aIx
  In the expression: "HR"
  In the expression: ("BODY", "HR")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIa
tcPolyExprNC t_aIa
tcGen
utype_defer
  cobox_aID
  (t_aIB, t_aIC)
  t_aIa
  a type equality (t_aIB, t_aIC) ~ t_aIa
  In the expression: ("BODY", "TABLE")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
  In an equation for ‘regels’:
      regels
        = [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
           ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIB
tcPolyExprNC t_aIB
tcGen
utype_defer
  cobox_aIE
  [Char]
  t_aIB
  a type equality [Char] ~ t_aIB
  In the expression: "BODY"
  In the expression: ("BODY", "TABLE")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
tcPolyExpr t_aIC
tcPolyExprNC t_aIC
tcGen
utype_defer
  cobox_aIF
  [Char]
  t_aIC
  a type equality [Char] ~ t_aIC
  In the expression: "TABLE"
  In the expression: ("BODY", "TABLE")
  In the expression:
    [("UL", "LI"), ("HTML", "BODY"), ("HTML", "HEAD"), ("BODY", "H"),
     ("BODY", "HR"), ("BODY", "TABLE")]
addInlinePrags
  regels
  []
csb2 [regels]
} End of bindings for
  [regels]
  NonRecursive
  regels t_aD7
env2 [(regels, Identifier[regels::t_aD7, <NotTopLevel>])]
tc_group rec
  dunUit (Nothing : reqs) = dunUit reqs
  dunUit [] = Nothing
  dunUit (Just a : _) = Just a
------------------------------------------------
Bindings for { [dunUit]
Generalisation plan
  CheckGen dunUit :: t_aDo -> t_aDp
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  dunUit
  t_aDo -> t_aDp
tcMatchesFun
  dunUit
  t_aDo -> t_aDp
tcGen
utype_defer
  cobox_aII
  [t_aIH]
  t_aDo
  a type equality [t_aIH] ~ t_aDo
  In the pattern: Nothing : reqs
  In an equation for ‘dunUit’: dunUit (Nothing : reqs) = dunUit reqs
tcConPat
  :
  []
  [t_aIH]
  [t_aIH, [t_aIH]]
utype_defer
  cobox_aIK
  Maybe t_aIJ
  t_aIH
  a type equality Maybe t_aIJ ~ t_aIH
  In the pattern: Nothing
  In the pattern: Nothing : reqs
  In an equation for ‘dunUit’: dunUit (Nothing : reqs) = dunUit reqs
tcConPat
  Nothing
  []
  Maybe t_aIJ
  []
env2 [(reqs, Identifier[reqs::[t_aIH], <NotTopLevel>])]
tcBody t_aDp
utype_defer
  cobox_aIL
  t_aDp
  t_aDp
  a type equality t_aDp ~ t_aDp
  In the expression: dunUit reqs
  In an equation for ‘dunUit’: dunUit (Nothing : reqs) = dunUit reqs
tcPolyExprNC t_aDo
tcGen
utype_defer
  cobox_aIM
  [t_aIH]
  t_aDo
  a type equality [t_aIH] ~ t_aDo
  In the first argument of ‘dunUit’, namely ‘reqs’
  In the expression: dunUit reqs
utype_defer
  cobox_aIO
  [t_aIN]
  t_aDo
  a type equality [t_aIN] ~ t_aDo
  In the pattern: []
  In an equation for ‘dunUit’: dunUit [] = Nothing
tcConPat
  []
  []
  [t_aIN]
  []
tcBody t_aDp
Instantiating
  Data.Maybe.Nothing with [a_aIP]
                          []
utype_defer
  cobox_aIQ
  Maybe a_aIP
  t_aDp
  a type equality Maybe a_aIP ~ t_aDp
  In the expression: Nothing
  In an equation for ‘dunUit’: dunUit [] = Nothing
utype_defer
  cobox_aIS
  [t_aIR]
  t_aDo
  a type equality [t_aIR] ~ t_aDo
  In the pattern: Just a : _
  In an equation for ‘dunUit’: dunUit (Just a : _) = Just a
tcConPat
  :
  []
  [t_aIR]
  [t_aIR, [t_aIR]]
utype_defer
  cobox_aIU
  Maybe t_aIT
  t_aIR
  a type equality Maybe t_aIT ~ t_aIR
  In the pattern: Just a
  In the pattern: Just a : _
  In an equation for ‘dunUit’: dunUit (Just a : _) = Just a
tcConPat
  Just
  []
  Maybe t_aIT
  [t_aIT]
env2 [(a, Identifier[a::t_aIT, <NotTopLevel>])]
tcBody t_aDp
Instantiating
  Data.Maybe.Just with [a_aIV]
                       []
utype_defer
  cobox_aIW
  Maybe a_aIV
  t_aDp
  a type equality Maybe a_aIV ~ t_aDp
  In the expression: Just a
  In an equation for ‘dunUit’: dunUit (Just a : _) = Just a
tcPolyExprNC a_aIV
tcGen
utype_defer
  cobox_aIX
  t_aIT
  a_aIV
  a type equality t_aIT ~ a_aIV
  In the first argument of ‘Just’, namely ‘a’
  In the expression: Just a
addInlinePrags
  dunUit
  []
csb2 [dunUit]
} End of bindings for
  [dunUit]
  Recursive
  dunUit t_aDo -> t_aDp
env2 [(dunUit, Identifier[dunUit::t_aDo -> t_aDp, <NotTopLevel>])]
------------------------------------------------
Bindings for { [voorbeeld]
Generalisation plan
  CheckGen voorbeeld :: t_aDG
                        []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  voorbeeld
  t_aDG
tcMatchesFun
  voorbeeld
  t_aDG
tcGen
tcBody t_aDG
utype_defer
  cobox_aIZ
  HTML
  t_aDG
  a type equality HTML ~ t_aDG
  In the expression:
    DoubleTag
      "BODY"
      [("color", "blue")]
      [(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
       (SingleTag "PRE" [("color", "blue")])]
  In an equation for ‘voorbeeld’:
      voorbeeld
        = DoubleTag
            "BODY"
            [("color", "blue")]
            [(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
             (SingleTag "PRE" [("color", "blue")])]
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJ0
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"BODY"’
  In the expression:
    DoubleTag
      "BODY"
      [("color", "blue")]
      [(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
       (SingleTag "PRE" [("color", "blue")])]
  In an equation for ‘voorbeeld’:
      voorbeeld
        = DoubleTag
            "BODY"
            [("color", "blue")]
            [(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
             (SingleTag "PRE" [("color", "blue")])]
tcPolyExprNC [Attribute]
tcGen
tcPolyExpr Attribute
tcPolyExprNC Attribute
tcGen
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJ1
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "color"
  In the expression: ("color", "blue")
  In the second argument of ‘DoubleTag’, namely ‘[("color", "blue")]’
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJ2
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "blue"
  In the expression: ("color", "blue")
  In the second argument of ‘DoubleTag’, namely ‘[("color", "blue")]’
tcPolyExprNC [HTML]
tcGen
tcPolyExpr HTML
tcPolyExprNC HTML
tcGen
utype_defer
  cobox_aJ3
  HTML
  HTML
  a type equality HTML ~ HTML
  In the expression: (Text "tekst")
  In the third argument of ‘DoubleTag’, namely
    ‘[(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
      (SingleTag "PRE" [("color", "blue")])]’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJ4
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘Text’, namely ‘"tekst"’
  In the expression: (Text "tekst")
  In the third argument of ‘DoubleTag’, namely
    ‘[(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
      (SingleTag "PRE" [("color", "blue")])]’
tcPolyExpr HTML
tcPolyExprNC HTML
tcGen
utype_defer
  cobox_aJ5
  HTML
  HTML
  a type equality HTML ~ HTML
  In the expression: (SingleTag "PRE" [("color", "red")])
  In the third argument of ‘DoubleTag’, namely
    ‘[(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
      (SingleTag "PRE" [("color", "blue")])]’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJ6
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘SingleTag’, namely ‘"PRE"’
  In the expression: (SingleTag "PRE" [("color", "red")])
  In the third argument of ‘DoubleTag’, namely
    ‘[(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
      (SingleTag "PRE" [("color", "blue")])]’
tcPolyExprNC [Attribute]
tcGen
tcPolyExpr Attribute
tcPolyExprNC Attribute
tcGen
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJ7
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "color"
  In the expression: ("color", "red")
  In the second argument of ‘SingleTag’, namely ‘[("color", "red")]’
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJ8
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "red"
  In the expression: ("color", "red")
  In the second argument of ‘SingleTag’, namely ‘[("color", "red")]’
tcPolyExpr HTML
tcPolyExprNC HTML
tcGen
utype_defer
  cobox_aJ9
  HTML
  HTML
  a type equality HTML ~ HTML
  In the expression: (SingleTag "PRE" [("color", "blue")])
  In the third argument of ‘DoubleTag’, namely
    ‘[(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
      (SingleTag "PRE" [("color", "blue")])]’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJa
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘SingleTag’, namely ‘"PRE"’
  In the expression: (SingleTag "PRE" [("color", "blue")])
  In the third argument of ‘DoubleTag’, namely
    ‘[(Text "tekst"), (SingleTag "PRE" [("color", "red")]),
      (SingleTag "PRE" [("color", "blue")])]’
tcPolyExprNC [Attribute]
tcGen
tcPolyExpr Attribute
tcPolyExprNC Attribute
tcGen
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJb
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "color"
  In the expression: ("color", "blue")
  In the second argument of ‘SingleTag’, namely ‘[("color", "blue")]’
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aJc
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "blue"
  In the expression: ("color", "blue")
  In the second argument of ‘SingleTag’, namely ‘[("color", "blue")]’
addInlinePrags
  voorbeeld
  []
csb2 [voorbeeld]
} End of bindings for
  [voorbeeld]
  NonRecursive
  voorbeeld t_aDG
env2 [(voorbeeld, Identifier[voorbeeld::t_aDG, <NotTopLevel>])]
------------------------------------------------
Bindings for { [chr]
Generalisation plan
  CheckGen chr :: t_aDI -> t_aDJ
                  []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  chr
  t_aDI -> t_aDJ
tcMatchesFun
  chr
  t_aDI -> t_aDJ
tcGen
tcBody t_aDI -> t_aDJ
Instantiating
  undefined with [a_aJe]
                 []
utype_defer
  cobox_aJf
  a_aJe
  t_aDI -> t_aDJ
  a type equality a_aJe ~ t_aDI -> t_aDJ
  In the expression: undefined
  In an equation for ‘chr’: chr = undefined
addInlinePrags
  chr
  []
csb2 [chr]
} End of bindings for
  [chr]
  NonRecursive
  chr t_aDI -> t_aDJ
env2 [(chr, Identifier[chr::t_aDI -> t_aDJ, <NotTopLevel>])]
------------------------------------------------
Bindings for { [showInt]
Generalisation plan
  CheckGen showInt :: t_aDM -> t_aDN
                      []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  showInt
  t_aDM -> t_aDN
tcMatchesFun
  showInt
  t_aDM -> t_aDN
tcGen
tcBody t_aDM -> t_aDN
Instantiating
  undefined with [a_aJh]
                 []
utype_defer
  cobox_aJi
  a_aJh
  t_aDM -> t_aDN
  a type equality a_aJh ~ t_aDM -> t_aDN
  In the expression: undefined
  In an equation for ‘showInt’: showInt = undefined
addInlinePrags
  showInt
  []
csb2 [showInt]
} End of bindings for
  [showInt]
  NonRecursive
  showInt t_aDM -> t_aDN
env2
  [(showInt, Identifier[showInt::t_aDM -> t_aDN, <NotTopLevel>])]
------------------------------------------------
Bindings for { [intLetter]
Generalisation plan
  CheckGen intLetter :: t_aCJ -> t_aCK
                        []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  intLetter
  t_aCJ -> t_aCK
tcMatchesFun
  intLetter
  t_aCJ -> t_aCK
tcGen
env2 [(getal, Identifier[getal::t_aCJ, <NotTopLevel>])]
Non Application rule (<)
Instantiating
  < with [a_aJw]
         [Ord a_aJw]
instCallConstraints [$dOrd_aJx]
utype_defer
  cobox_aJy
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: getal < 10
  In a stmt of a pattern guard for
                 an equation for ‘intLetter’:
    getal < 10
  In an equation for ‘intLetter’:
      intLetter getal
        | getal < 10 = showInt getal
        | otherwise = [chr (getal + 55)]
tcPolyExprNC a_aJw
tcGen
utype_defer
  cobox_aJz
  t_aCJ
  a_aJw
  a type equality t_aCJ ~ a_aJw
  In the first argument of ‘(<)’, namely ‘getal’
  In the expression: getal < 10
tcPolyExprNC a_aJw
tcGen
Instantiating
  fromInteger with [a_aJA]
                   [Num a_aJA]
instCallConstraints [$dNum_aJB]
utype_defer
  cobox_aJC
  Integer -> a_aJA
  Integer -> a_aJw
  a type equality Integer -> a_aJA ~ Integer -> a_aJw
  In the second argument of ‘(<)’, namely ‘10’
  In the expression: getal < 10
  In a stmt of a pattern guard for
                 an equation for ‘intLetter’:
    getal < 10
tcBody t_aCK
utype_defer
  cobox_aJD
  t_aDN
  t_aCK
  a type equality t_aDN ~ t_aCK
  In the expression: showInt getal
  In an equation for ‘intLetter’:
      intLetter getal
        | getal < 10 = showInt getal
        | otherwise = [chr (getal + 55)]
tcPolyExprNC t_aDM
tcGen
utype_defer
  cobox_aJE
  t_aCJ
  t_aDM
  a type equality t_aCJ ~ t_aDM
  In the first argument of ‘showInt’, namely ‘getal’
  In the expression: showInt getal
utype_defer
  cobox_aJF
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: otherwise
  In a stmt of a pattern guard for
                 an equation for ‘intLetter’:
    otherwise
tcBody t_aCK
utype_defer
  cobox_aJH
  [t_aJG]
  t_aCK
  a type equality [t_aJG] ~ t_aCK
  In the expression: [chr (getal + 55)]
  In an equation for ‘intLetter’:
      intLetter getal
        | getal < 10 = showInt getal
        | otherwise = [chr (getal + 55)]
tcPolyExpr t_aJG
tcPolyExprNC t_aJG
tcGen
utype_defer
  cobox_aJI
  t_aDJ
  t_aJG
  a type equality t_aDJ ~ t_aJG
  In the expression: chr (getal + 55)
  In the expression: [chr (getal + 55)]
tcPolyExprNC t_aDI
tcGen
Non Application rule (+)
Instantiating
  + with [a_aJJ]
         [Num a_aJJ]
instCallConstraints [$dNum_aJK]
utype_defer
  cobox_aJL
  a_aJJ
  t_aDI
  a type equality a_aJJ ~ t_aDI
  In the first argument of ‘chr’, namely ‘(getal + 55)’
  In the expression: chr (getal + 55)
  In the expression: [chr (getal + 55)]
tcPolyExprNC a_aJJ
tcGen
utype_defer
  cobox_aJM
  t_aCJ
  a_aJJ
  a type equality t_aCJ ~ a_aJJ
  In the first argument of ‘(+)’, namely ‘getal’
  In the first argument of ‘chr’, namely ‘(getal + 55)’
tcPolyExprNC a_aJJ
tcGen
Instantiating
  fromInteger with [a_aJN]
                   [Num a_aJN]
instCallConstraints [$dNum_aJO]
utype_defer
  cobox_aJP
  Integer -> a_aJN
  Integer -> a_aJJ
  a type equality Integer -> a_aJN ~ Integer -> a_aJJ
  In the second argument of ‘(+)’, namely ‘55’
  In the first argument of ‘chr’, namely ‘(getal + 55)’
  In the expression: chr (getal + 55)
addInlinePrags
  intLetter
  []
csb2 [intLetter]
} End of bindings for
  [intLetter]
  NonRecursive
  intLetter t_aCJ -> t_aCK
env2
  [(intLetter, Identifier[intLetter::t_aCJ -> t_aCK, <NotTopLevel>])]
------------------------------------------------
Bindings for { [color]
Generalisation plan
  CheckGen color :: t_aCN -> t_aCO -> t_aCP -> t_aCQ
                    []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  color
  t_aCN -> t_aCO -> t_aCP -> t_aCQ
tcMatchesFun
  color
  t_aCN -> t_aCO -> t_aCP -> t_aCQ
tcGen
env2 [(a, Identifier[a::t_aCN, <NotTopLevel>])]
env2 [(b, Identifier[b::t_aCO, <NotTopLevel>])]
env2 [(c, Identifier[c::t_aCP, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [hexaDec]
Generalisation plan NoGen
addInlinePrags
  hexaDec
  []
tcMatchesFun
  hexaDec
  t_aJR
tcGen
utype_defer
  cobox_aJU
  t_aJR
  t_aJS -> t_aJT
  a type equality t_aJR ~ t_aJS -> t_aJT
  In an equation for ‘color’:
      color a b c
        = "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
        where
            hexaDec getal
              = intLetter (getal / 16) ++ intLetter (getal `rem` 16)
env2 [(getal, Identifier[getal::t_aJS, <NotTopLevel>])]
tcBody t_aJT
Non Application rule (++)
Instantiating
  ++ with [a_aJV]
          []
utype_defer
  cobox_aJW
  [a_aJV]
  t_aJT
  a type equality [a_aJV] ~ t_aJT
  In the expression:
    intLetter (getal / 16) ++ intLetter (getal `rem` 16)
  In an equation for ‘hexaDec’:
      hexaDec getal
        = intLetter (getal / 16) ++ intLetter (getal `rem` 16)
  In an equation for ‘color’:
      color a b c
        = "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
        where
            hexaDec getal
              = intLetter (getal / 16) ++ intLetter (getal `rem` 16)
tcPolyExprNC [a_aJV]
tcGen
utype_defer
  cobox_aJX
  t_aCK
  [a_aJV]
  a type equality t_aCK ~ [a_aJV]
  In the first argument of ‘(++)’, namely ‘intLetter (getal / 16)’
  In the expression:
    intLetter (getal / 16) ++ intLetter (getal `rem` 16)
tcPolyExprNC t_aCJ
tcGen
Non Application rule (/)
Instantiating
  / with [a_aK6]
         [Fractional a_aK6]
instCallConstraints [$dFractional_aK7]
utype_defer
  cobox_aK8
  a_aK6
  t_aCJ
  a type equality a_aK6 ~ t_aCJ
  In the first argument of ‘intLetter’, namely ‘(getal / 16)’
  In the first argument of ‘(++)’, namely ‘intLetter (getal / 16)’
  In the expression:
    intLetter (getal / 16) ++ intLetter (getal `rem` 16)
tcPolyExprNC a_aK6
tcGen
utype_defer
  cobox_aK9
  t_aJS
  a_aK6
  a type equality t_aJS ~ a_aK6
  In the first argument of ‘(/)’, namely ‘getal’
  In the first argument of ‘intLetter’, namely ‘(getal / 16)’
tcPolyExprNC a_aK6
tcGen
Instantiating
  fromInteger with [a_aKa]
                   [Num a_aKa]
instCallConstraints [$dNum_aKb]
utype_defer
  cobox_aKc
  Integer -> a_aKa
  Integer -> a_aK6
  a type equality Integer -> a_aKa ~ Integer -> a_aK6
  In the second argument of ‘(/)’, namely ‘16’
  In the first argument of ‘intLetter’, namely ‘(getal / 16)’
  In the first argument of ‘(++)’, namely ‘intLetter (getal / 16)’
tcPolyExprNC [a_aJV]
tcGen
utype_defer
  cobox_aKd
  t_aCK
  [a_aJV]
  a type equality t_aCK ~ [a_aJV]
  In the second argument of ‘(++)’, namely
    ‘intLetter (getal `rem` 16)’
  In the expression:
    intLetter (getal / 16) ++ intLetter (getal `rem` 16)
tcPolyExprNC t_aCJ
tcGen
Non Application rule rem
Instantiating
  rem with [a_aKr]
           [Integral a_aKr]
instCallConstraints [$dIntegral_aKs]
utype_defer
  cobox_aKt
  a_aKr
  t_aCJ
  a type equality a_aKr ~ t_aCJ
  In the first argument of ‘intLetter’, namely ‘(getal `rem` 16)’
  In the second argument of ‘(++)’, namely
    ‘intLetter (getal `rem` 16)’
  In the expression:
    intLetter (getal / 16) ++ intLetter (getal `rem` 16)
tcPolyExprNC a_aKr
tcGen
utype_defer
  cobox_aKu
  t_aJS
  a_aKr
  a type equality t_aJS ~ a_aKr
  In the first argument of ‘rem’, namely ‘getal’
  In the first argument of ‘intLetter’, namely ‘(getal `rem` 16)’
tcPolyExprNC a_aKr
tcGen
Instantiating
  fromInteger with [a_aKv]
                   [Num a_aKv]
instCallConstraints [$dNum_aKw]
utype_defer
  cobox_aKx
  Integer -> a_aKv
  Integer -> a_aKr
  a type equality Integer -> a_aKv ~ Integer -> a_aKr
  In the second argument of ‘rem’, namely ‘16’
  In the first argument of ‘intLetter’, namely ‘(getal `rem` 16)’
  In the second argument of ‘(++)’, namely
    ‘intLetter (getal `rem` 16)’
csb2 [hexaDec]
} End of bindings for
  [hexaDec]
  NonRecursive
  hexaDec t_aJR
env2 [(hexaDec, Identifier[hexaDec::t_aJR, <NotTopLevel>])]
tcBody t_aCQ
Non Application rule (++)
Instantiating
  ++ with [a_aKy]
          []
utype_defer
  cobox_aKz
  [a_aKy]
  t_aCQ
  a type equality [a_aKy] ~ t_aCQ
  In the expression: "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
  In an equation for ‘color’:
      color a b c
        = "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
        where
            hexaDec getal
              = intLetter (getal / 16) ++ intLetter (getal `rem` 16)
tcPolyExprNC [a_aKy]
tcGen
utype_defer
  cobox_aKA
  [Char]
  [a_aKy]
  a type equality [Char] ~ [a_aKy]
  In the first argument of ‘(++)’, namely ‘"#"’
  In the expression: "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
  In an equation for ‘color’:
      color a b c
        = "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
        where
            hexaDec getal
              = intLetter (getal / 16) ++ intLetter (getal `rem` 16)
tcPolyExprNC [a_aKy]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aKB]
          []
utype_defer
  cobox_aKC
  [a_aKB]
  [a_aKy]
  a type equality [a_aKB] ~ [a_aKy]
  In the second argument of ‘(++)’, namely
    ‘hexaDec a ++ hexaDec b ++ hexaDec c’
  In the expression: "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
  In an equation for ‘color’:
      color a b c
        = "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
        where
            hexaDec getal
              = intLetter (getal / 16) ++ intLetter (getal `rem` 16)
tcPolyExprNC [a_aKB]
tcGen
utype_defer
  cobox_aKF
  t_aJR
  t_aKD -> t_aKE
  a type equality t_aJR ~ t_aKD -> t_aKE
  In the first argument of ‘(++)’, namely ‘hexaDec a’
  In the second argument of ‘(++)’, namely
    ‘hexaDec a ++ hexaDec b ++ hexaDec c’
  In the expression: "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
utype_defer
  cobox_aKG
  t_aKE
  [a_aKB]
  a type equality t_aKE ~ [a_aKB]
  In the first argument of ‘(++)’, namely ‘hexaDec a’
  In the second argument of ‘(++)’, namely
    ‘hexaDec a ++ hexaDec b ++ hexaDec c’
tcPolyExprNC t_aKD
tcGen
utype_defer
  cobox_aKH
  t_aCN
  t_aKD
  a type equality t_aCN ~ t_aKD
  In the first argument of ‘hexaDec’, namely ‘a’
  In the first argument of ‘(++)’, namely ‘hexaDec a’
tcPolyExprNC [a_aKB]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aKI]
          []
utype_defer
  cobox_aKJ
  [a_aKI]
  [a_aKB]
  a type equality [a_aKI] ~ [a_aKB]
  In the second argument of ‘(++)’, namely ‘hexaDec b ++ hexaDec c’
  In the second argument of ‘(++)’, namely
    ‘hexaDec a ++ hexaDec b ++ hexaDec c’
  In the expression: "#" ++ hexaDec a ++ hexaDec b ++ hexaDec c
tcPolyExprNC [a_aKI]
tcGen
utype_defer
  cobox_aKM
  t_aJR
  t_aKK -> t_aKL
  a type equality t_aJR ~ t_aKK -> t_aKL
  In the first argument of ‘(++)’, namely ‘hexaDec b’
  In the second argument of ‘(++)’, namely ‘hexaDec b ++ hexaDec c’
  In the second argument of ‘(++)’, namely
    ‘hexaDec a ++ hexaDec b ++ hexaDec c’
utype_defer
  cobox_aKN
  t_aKL
  [a_aKI]
  a type equality t_aKL ~ [a_aKI]
  In the first argument of ‘(++)’, namely ‘hexaDec b’
  In the second argument of ‘(++)’, namely ‘hexaDec b ++ hexaDec c’
tcPolyExprNC t_aKK
tcGen
utype_defer
  cobox_aKO
  t_aCO
  t_aKK
  a type equality t_aCO ~ t_aKK
  In the first argument of ‘hexaDec’, namely ‘b’
  In the first argument of ‘(++)’, namely ‘hexaDec b’
tcPolyExprNC [a_aKI]
tcGen
utype_defer
  cobox_aKR
  t_aJR
  t_aKP -> t_aKQ
  a type equality t_aJR ~ t_aKP -> t_aKQ
  In the second argument of ‘(++)’, namely ‘hexaDec c’
  In the second argument of ‘(++)’, namely ‘hexaDec b ++ hexaDec c’
  In the second argument of ‘(++)’, namely
    ‘hexaDec a ++ hexaDec b ++ hexaDec c’
utype_defer
  cobox_aKS
  t_aKQ
  [a_aKI]
  a type equality t_aKQ ~ [a_aKI]
  In the second argument of ‘(++)’, namely ‘hexaDec c’
  In the second argument of ‘(++)’, namely ‘hexaDec b ++ hexaDec c’
tcPolyExprNC t_aKP
tcGen
utype_defer
  cobox_aKT
  t_aCP
  t_aKP
  a type equality t_aCP ~ t_aKP
  In the first argument of ‘hexaDec’, namely ‘c’
  In the second argument of ‘(++)’, namely ‘hexaDec c’
addInlinePrags
  color
  []
csb2 [color]
} End of bindings for
  [color]
  NonRecursive
  color t_aCN -> t_aCO -> t_aCP -> t_aCQ
env2
  [(color,
    Identifier[color::t_aCN
                      -> t_aCO -> t_aCP -> t_aCQ, <NotTopLevel>])]
------------------------------------------------
Bindings for { [maakVeld]
Generalisation plan
  CheckGen maakVeld :: t_aCx -> t_aCy
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  maakVeld
  t_aCx -> t_aCy
tcMatchesFun
  maakVeld
  t_aCx -> t_aCy
tcGen
utype_defer
  cobox_aKY
  (t_aKV, t_aKW, t_aKX)
  t_aCx
  a type equality (t_aKV, t_aKW, t_aKX) ~ t_aCx
  In the pattern: (a, b, c)
  In an equation for ‘maakVeld’:
      maakVeld (a, b, c) = DoubleTag "TD" [("BGCOLOR", color a b c)] []
env2 [(a, Identifier[a::t_aKV, <NotTopLevel>])]
env2 [(b, Identifier[b::t_aKW, <NotTopLevel>])]
env2 [(c, Identifier[c::t_aKX, <NotTopLevel>])]
tcBody t_aCy
utype_defer
  cobox_aKZ
  HTML
  t_aCy
  a type equality HTML ~ t_aCy
  In the expression: DoubleTag "TD" [("BGCOLOR", color a b c)] []
  In an equation for ‘maakVeld’:
      maakVeld (a, b, c) = DoubleTag "TD" [("BGCOLOR", color a b c)] []
tcPolyExprNC String
tcGen
utype_defer
  cobox_aL0
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"TD"’
  In the expression: DoubleTag "TD" [("BGCOLOR", color a b c)] []
  In an equation for ‘maakVeld’:
      maakVeld (a, b, c) = DoubleTag "TD" [("BGCOLOR", color a b c)] []
tcPolyExprNC [Attribute]
tcGen
tcPolyExpr Attribute
tcPolyExprNC Attribute
tcGen
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aL1
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "BGCOLOR"
  In the expression: ("BGCOLOR", color a b c)
  In the second argument of ‘DoubleTag’, namely
    ‘[("BGCOLOR", color a b c)]’
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aL2
  t_aCQ
  String
  a type equality t_aCQ ~ String
  In the expression: color a b c
  In the expression: ("BGCOLOR", color a b c)
tcPolyExprNC t_aCN
tcGen
utype_defer
  cobox_aL3
  t_aKV
  t_aCN
  a type equality t_aKV ~ t_aCN
  In the first argument of ‘color’, namely ‘a’
  In the expression: color a b c
tcPolyExprNC t_aCO
tcGen
utype_defer
  cobox_aL4
  t_aKW
  t_aCO
  a type equality t_aKW ~ t_aCO
  In the second argument of ‘color’, namely ‘b’
  In the expression: color a b c
tcPolyExprNC t_aCP
tcGen
utype_defer
  cobox_aL5
  t_aKX
  t_aCP
  a type equality t_aKX ~ t_aCP
  In the third argument of ‘color’, namely ‘c’
  In the expression: color a b c
tcPolyExprNC [HTML]
tcGen
addInlinePrags
  maakVeld
  []
csb2 [maakVeld]
} End of bindings for
  [maakVeld]
  NonRecursive
  maakVeld t_aCx -> t_aCy
env2
  [(maakVeld, Identifier[maakVeld::t_aCx -> t_aCy, <NotTopLevel>])]
------------------------------------------------
Bindings for { [maakRij]
Generalisation plan
  CheckGen maakRij :: t_aCB -> t_aCC
                      []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  maakRij
  t_aCB -> t_aCC
tcMatchesFun
  maakRij
  t_aCB -> t_aCC
tcGen
env2 [(colors, Identifier[colors::t_aCB, <NotTopLevel>])]
tcBody t_aCC
utype_defer
  cobox_aL7
  HTML
  t_aCC
  a type equality HTML ~ t_aCC
  In the expression: DoubleTag "TR" [] (map maakVeld colors)
  In an equation for ‘maakRij’:
      maakRij colors = DoubleTag "TR" [] (map maakVeld colors)
tcPolyExprNC String
tcGen
utype_defer
  cobox_aL8
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"TR"’
  In the expression: DoubleTag "TR" [] (map maakVeld colors)
  In an equation for ‘maakRij’:
      maakRij colors = DoubleTag "TR" [] (map maakVeld colors)
tcPolyExprNC [Attribute]
tcGen
tcPolyExprNC [HTML]
tcGen
Instantiating
  map with [a_aL9, b_aLa]
           []
utype_defer
  cobox_aLb
  [b_aLa]
  [HTML]
  a type equality [b_aLa] ~ [HTML]
  In the third argument of ‘DoubleTag’, namely
    ‘(map maakVeld colors)’
  In the expression: DoubleTag "TR" [] (map maakVeld colors)
tcPolyExprNC a_aL9 -> b_aLa
tcGen
utype_defer
  cobox_aLc
  t_aCx -> t_aCy
  a_aL9 -> b_aLa
  a type equality t_aCx -> t_aCy ~ a_aL9 -> b_aLa
  In the first argument of ‘map’, namely ‘maakVeld’
  In the third argument of ‘DoubleTag’, namely
    ‘(map maakVeld colors)’
tcPolyExprNC [a_aL9]
tcGen
utype_defer
  cobox_aLd
  t_aCB
  [a_aL9]
  a type equality t_aCB ~ [a_aL9]
  In the second argument of ‘map’, namely ‘colors’
  In the third argument of ‘DoubleTag’, namely
    ‘(map maakVeld colors)’
addInlinePrags
  maakRij
  []
csb2 [maakRij]
} End of bindings for
  [maakRij]
  NonRecursive
  maakRij t_aCB -> t_aCC
env2
  [(maakRij, Identifier[maakRij::t_aCB -> t_aCC, <NotTopLevel>])]
------------------------------------------------
Bindings for { [colorTable]
Generalisation plan
  CheckGen colorTable :: t_aCF -> t_aCG
                         []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  colorTable
  t_aCF -> t_aCG
tcMatchesFun
  colorTable
  t_aCF -> t_aCG
tcGen
env2 [(colorss, Identifier[colorss::t_aCF, <NotTopLevel>])]
tcBody t_aCG
utype_defer
  cobox_aLf
  HTML
  t_aCG
  a type equality HTML ~ t_aCG
  In the expression:
    DoubleTag
      "TABLE" [("WIDTH", "400"), ("HEIGHT", "400")] (map maakRij colorss)
  In an equation for ‘colorTable’:
      colorTable colorss
        = DoubleTag
            "TABLE" [("WIDTH", "400"), ("HEIGHT", "400")] (map maakRij colorss)
tcPolyExprNC String
tcGen
utype_defer
  cobox_aLg
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘DoubleTag’, namely ‘"TABLE"’
  In the expression:
    DoubleTag
      "TABLE" [("WIDTH", "400"), ("HEIGHT", "400")] (map maakRij colorss)
  In an equation for ‘colorTable’:
      colorTable colorss
        = DoubleTag
            "TABLE" [("WIDTH", "400"), ("HEIGHT", "400")] (map maakRij colorss)
tcPolyExprNC [Attribute]
tcGen
tcPolyExpr Attribute
tcPolyExprNC Attribute
tcGen
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aLh
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "WIDTH"
  In the expression: ("WIDTH", "400")
  In the second argument of ‘DoubleTag’, namely
    ‘[("WIDTH", "400"), ("HEIGHT", "400")]’
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aLi
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "400"
  In the expression: ("WIDTH", "400")
  In the second argument of ‘DoubleTag’, namely
    ‘[("WIDTH", "400"), ("HEIGHT", "400")]’
tcPolyExpr Attribute
tcPolyExprNC Attribute
tcGen
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aLj
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "HEIGHT"
  In the expression: ("HEIGHT", "400")
  In the second argument of ‘DoubleTag’, namely
    ‘[("WIDTH", "400"), ("HEIGHT", "400")]’
tcPolyExpr String
tcPolyExprNC String
tcGen
utype_defer
  cobox_aLk
  [Char]
  String
  a type equality [Char] ~ String
  In the expression: "400"
  In the expression: ("HEIGHT", "400")
  In the second argument of ‘DoubleTag’, namely
    ‘[("WIDTH", "400"), ("HEIGHT", "400")]’
tcPolyExprNC [HTML]
tcGen
Instantiating
  map with [a_aLl, b_aLm]
           []
utype_defer
  cobox_aLn
  [b_aLm]
  [HTML]
  a type equality [b_aLm] ~ [HTML]
  In the third argument of ‘DoubleTag’, namely
    ‘(map maakRij colorss)’
  In the expression:
    DoubleTag
      "TABLE" [("WIDTH", "400"), ("HEIGHT", "400")] (map maakRij colorss)
tcPolyExprNC a_aLl -> b_aLm
tcGen
utype_defer
  cobox_aLo
  t_aCB -> t_aCC
  a_aLl -> b_aLm
  a type equality t_aCB -> t_aCC ~ a_aLl -> b_aLm
  In the first argument of ‘map’, namely ‘maakRij’
  In the third argument of ‘DoubleTag’, namely
    ‘(map maakRij colorss)’
tcPolyExprNC [a_aLl]
tcGen
utype_defer
  cobox_aLp
  t_aCF
  [a_aLl]
  a type equality t_aCF ~ [a_aLl]
  In the second argument of ‘map’, namely ‘colorss’
  In the third argument of ‘DoubleTag’, namely
    ‘(map maakRij colorss)’
addInlinePrags
  colorTable
  []
csb2 [colorTable]
} End of bindings for
  [colorTable]
  NonRecursive
  colorTable t_aCF -> t_aCG
env2
  [(colorTable,
    Identifier[colorTable::t_aCF -> t_aCG, <NotTopLevel>])]
------------------------------------------------
Bindings for { [h]
Generalisation plan
  CheckGen h :: t_aCg -> t_aCh -> t_aCi
                []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  h
  t_aCg -> t_aCh -> t_aCi
tcMatchesFun
  h
  t_aCg -> t_aCh -> t_aCi
tcGen
env2 [(grootte, Identifier[grootte::t_aCg, <NotTopLevel>])]
env2 [(string, Identifier[string::t_aCh, <NotTopLevel>])]
tcBody t_aCi
utype_defer
  cobox_aLr
  HTML
  t_aCi
  a type equality HTML ~ t_aCi
  In the expression:
    DoubleTag ("H" ++ showInt grootte) [] [Text string]
  In an equation for ‘h’:
      h grootte string
        = DoubleTag ("H" ++ showInt grootte) [] [Text string]
tcPolyExprNC String
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aLs]
          []
utype_defer
  cobox_aLt
  [a_aLs]
  String
  a type equality [a_aLs] ~ String
  In the first argument of ‘DoubleTag’, namely
    ‘("H" ++ showInt grootte)’
  In the expression:
    DoubleTag ("H" ++ showInt grootte) [] [Text string]
  In an equation for ‘h’:
      h grootte string
        = DoubleTag ("H" ++ showInt grootte) [] [Text string]
tcPolyExprNC [a_aLs]
tcGen
utype_defer
  cobox_aLu
  [Char]
  [a_aLs]
  a type equality [Char] ~ [a_aLs]
  In the first argument of ‘(++)’, namely ‘"H"’
  In the first argument of ‘DoubleTag’, namely
    ‘("H" ++ showInt grootte)’
  In the expression:
    DoubleTag ("H" ++ showInt grootte) [] [Text string]
tcPolyExprNC [a_aLs]
tcGen
utype_defer
  cobox_aLv
  t_aDN
  [a_aLs]
  a type equality t_aDN ~ [a_aLs]
  In the second argument of ‘(++)’, namely ‘showInt grootte’
  In the first argument of ‘DoubleTag’, namely
    ‘("H" ++ showInt grootte)’
tcPolyExprNC t_aDM
tcGen
utype_defer
  cobox_aLw
  t_aCg
  t_aDM
  a type equality t_aCg ~ t_aDM
  In the first argument of ‘showInt’, namely ‘grootte’
  In the second argument of ‘(++)’, namely ‘showInt grootte’
tcPolyExprNC [Attribute]
tcGen
tcPolyExprNC [HTML]
tcGen
tcPolyExpr HTML
tcPolyExprNC HTML
tcGen
utype_defer
  cobox_aLx
  HTML
  HTML
  a type equality HTML ~ HTML
  In the expression: Text string
  In the third argument of ‘DoubleTag’, namely ‘[Text string]’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aLy
  t_aCh
  String
  a type equality t_aCh ~ String
  In the first argument of ‘Text’, namely ‘string’
  In the expression: Text string
addInlinePrags
  h
  []
csb2 [h]
} End of bindings for
  [h]
  NonRecursive
  h t_aCg -> t_aCh -> t_aCi
env2 [(h, Identifier[h::t_aCg -> t_aCh -> t_aCi, <NotTopLevel>])]
------------------------------------------------
Bindings for { [kleurenTabel]
Generalisation plan
  CheckGen kleurenTabel :: t_aBY
                           []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  kleurenTabel
  t_aBY
tcMatchesFun
  kleurenTabel
  t_aBY
tcGen
tcBody t_aBY
utype_defer
  cobox_aLA
  t_aC2
  t_aBY
  a type equality t_aC2 ~ t_aBY
  In the expression:
    document
      "Kleurentabel"
      [(h 1 "Kleurentabel"),
       (ul
          [[font [("COLOR", "#FF0000")] [text "Rood"],
            text
              "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
           [font [("COLOR", "#00FF00")] [text "Groen"],
            text
              "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
           [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
       (colorTable
          [[(x, y, z) |
              x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]
  In an equation for ‘kleurenTabel’:
      kleurenTabel
        = document
            "Kleurentabel"
            [(h 1 "Kleurentabel"),
             (ul
                [[font [("COLOR", "#FF0000")] [text "Rood"],
                  text
                    "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
                 [font [("COLOR", "#00FF00")] [text "Groen"],
                  text
                    "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
                 [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
             (colorTable
                [[(x, y, z) |
                    x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]
tcPolyExprNC t_aC0
tcGen
utype_defer
  cobox_aLB
  [Char]
  t_aC0
  a type equality [Char] ~ t_aC0
  In the first argument of ‘document’, namely ‘"Kleurentabel"’
  In the expression:
    document
      "Kleurentabel"
      [(h 1 "Kleurentabel"),
       (ul
          [[font [("COLOR", "#FF0000")] [text "Rood"],
            text
              "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
           [font [("COLOR", "#00FF00")] [text "Groen"],
            text
              "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
           [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
       (colorTable
          [[(x, y, z) |
              x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]
  In an equation for ‘kleurenTabel’:
      kleurenTabel
        = document
            "Kleurentabel"
            [(h 1 "Kleurentabel"),
             (ul
                [[font [("COLOR", "#FF0000")] [text "Rood"],
                  text
                    "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
                 [font [("COLOR", "#00FF00")] [text "Groen"],
                  text
                    "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
                 [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
             (colorTable
                [[(x, y, z) |
                    x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]
tcPolyExprNC t_aC1
tcGen
utype_defer
  cobox_aLD
  [t_aLC]
  t_aC1
  a type equality [t_aLC] ~ t_aC1
  In the second argument of ‘document’, namely
    ‘[(h 1 "Kleurentabel"),
      (ul
         [[font [("COLOR", "#FF0000")] [text "Rood"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#00FF00")] [text "Groen"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
      (colorTable
         [[(x, y, z) |
             x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]’
  In the expression:
    document
      "Kleurentabel"
      [(h 1 "Kleurentabel"),
       (ul
          [[font [("COLOR", "#FF0000")] [text "Rood"],
            text
              "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
           [font [("COLOR", "#00FF00")] [text "Groen"],
            text
              "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
           [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
       (colorTable
          [[(x, y, z) |
              x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]
  In an equation for ‘kleurenTabel’:
      kleurenTabel
        = document
            "Kleurentabel"
            [(h 1 "Kleurentabel"),
             (ul
                [[font [("COLOR", "#FF0000")] [text "Rood"],
                  text
                    "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
                 [font [("COLOR", "#00FF00")] [text "Groen"],
                  text
                    "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
                 [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
             (colorTable
                [[(x, y, z) |
                    x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]
tcPolyExpr t_aLC
tcPolyExprNC t_aLC
tcGen
utype_defer
  cobox_aLE
  t_aCi
  t_aLC
  a type equality t_aCi ~ t_aLC
  In the expression: (h 1 "Kleurentabel")
  In the second argument of ‘document’, namely
    ‘[(h 1 "Kleurentabel"),
      (ul
         [[font [("COLOR", "#FF0000")] [text "Rood"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#00FF00")] [text "Groen"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
      (colorTable
         [[(x, y, z) |
             x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]’
tcPolyExprNC t_aCg
tcGen
Instantiating
  fromInteger with [a_aLF]
                   [Num a_aLF]
instCallConstraints [$dNum_aLG]
utype_defer
  cobox_aLH
  Integer -> a_aLF
  Integer -> t_aCg
  a type equality Integer -> a_aLF ~ Integer -> t_aCg
  In the first argument of ‘h’, namely ‘1’
  In the expression: (h 1 "Kleurentabel")
  In the second argument of ‘document’, namely
    ‘[(h 1 "Kleurentabel"),
      (ul
         [[font [("COLOR", "#FF0000")] [text "Rood"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#00FF00")] [text "Groen"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
      (colorTable
         [[(x, y, z) |
             x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]’
tcPolyExprNC t_aCh
tcGen
utype_defer
  cobox_aLI
  [Char]
  t_aCh
  a type equality [Char] ~ t_aCh
  In the second argument of ‘h’, namely ‘"Kleurentabel"’
  In the expression: (h 1 "Kleurentabel")
  In the second argument of ‘document’, namely
    ‘[(h 1 "Kleurentabel"),
      (ul
         [[font [("COLOR", "#FF0000")] [text "Rood"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#00FF00")] [text "Groen"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
      (colorTable
         [[(x, y, z) |
             x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]’
tcPolyExpr t_aLC
tcPolyExprNC t_aLC
tcGen
utype_defer
  cobox_aLJ
  t_aCr
  t_aLC
  a type equality t_aCr ~ t_aLC
  In the expression:
    (ul
       [[font [("COLOR", "#FF0000")] [text "Rood"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#00FF00")] [text "Groen"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]])
  In the second argument of ‘document’, namely
    ‘[(h 1 "Kleurentabel"),
      (ul
         [[font [("COLOR", "#FF0000")] [text "Rood"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#00FF00")] [text "Groen"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
      (colorTable
         [[(x, y, z) |
             x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]’
tcPolyExprNC t_aCq
tcGen
utype_defer
  cobox_aLL
  [t_aLK]
  t_aCq
  a type equality [t_aLK] ~ t_aCq
  In the first argument of ‘ul’, namely
    ‘[[font [("COLOR", "#FF0000")] [text "Rood"],
       text
         "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
      [font [("COLOR", "#00FF00")] [text "Groen"],
       text
         "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
      [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]’
  In the expression:
    (ul
       [[font [("COLOR", "#FF0000")] [text "Rood"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#00FF00")] [text "Groen"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]])
  In the second argument of ‘document’, namely
    ‘[(h 1 "Kleurentabel"),
      (ul
         [[font [("COLOR", "#FF0000")] [text "Rood"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#00FF00")] [text "Groen"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
      (colorTable
         [[(x, y, z) |
             x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]’
tcPolyExpr t_aLK
tcPolyExprNC t_aLK
tcGen
utype_defer
  cobox_aLN
  [t_aLM]
  t_aLK
  a type equality [t_aLM] ~ t_aLK
  In the expression:
    [font [("COLOR", "#FF0000")] [text "Rood"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
  In the first argument of ‘ul’, namely
    ‘[[font [("COLOR", "#FF0000")] [text "Rood"],
       text
         "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
      [font [("COLOR", "#00FF00")] [text "Groen"],
       text
         "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
      [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]’
  In the expression:
    (ul
       [[font [("COLOR", "#FF0000")] [text "Rood"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#00FF00")] [text "Groen"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]])
tcPolyExpr t_aLM
tcPolyExprNC t_aLM
tcGen
utype_defer
  cobox_aLO
  t_aCc
  t_aLM
  a type equality t_aCc ~ t_aLM
  In the expression: font [("COLOR", "#FF0000")] [text "Rood"]
  In the expression:
    [font [("COLOR", "#FF0000")] [text "Rood"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExprNC t_aCa
tcGen
utype_defer
  cobox_aLQ
  [t_aLP]
  t_aCa
  a type equality [t_aLP] ~ t_aCa
  In the first argument of ‘font’, namely ‘[("COLOR", "#FF0000")]’
  In the expression: font [("COLOR", "#FF0000")] [text "Rood"]
  In the expression:
    [font [("COLOR", "#FF0000")] [text "Rood"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExpr t_aLP
tcPolyExprNC t_aLP
tcGen
utype_defer
  cobox_aLT
  (t_aLR, t_aLS)
  t_aLP
  a type equality (t_aLR, t_aLS) ~ t_aLP
  In the expression: ("COLOR", "#FF0000")
  In the first argument of ‘font’, namely ‘[("COLOR", "#FF0000")]’
  In the expression: font [("COLOR", "#FF0000")] [text "Rood"]
tcPolyExpr t_aLR
tcPolyExprNC t_aLR
tcGen
utype_defer
  cobox_aLU
  [Char]
  t_aLR
  a type equality [Char] ~ t_aLR
  In the expression: "COLOR"
  In the expression: ("COLOR", "#FF0000")
  In the first argument of ‘font’, namely ‘[("COLOR", "#FF0000")]’
tcPolyExpr t_aLS
tcPolyExprNC t_aLS
tcGen
utype_defer
  cobox_aLV
  [Char]
  t_aLS
  a type equality [Char] ~ t_aLS
  In the expression: "#FF0000"
  In the expression: ("COLOR", "#FF0000")
  In the first argument of ‘font’, namely ‘[("COLOR", "#FF0000")]’
tcPolyExprNC t_aCb
tcGen
utype_defer
  cobox_aLX
  [t_aLW]
  t_aCb
  a type equality [t_aLW] ~ t_aCb
  In the second argument of ‘font’, namely ‘[text "Rood"]’
  In the expression: font [("COLOR", "#FF0000")] [text "Rood"]
  In the expression:
    [font [("COLOR", "#FF0000")] [text "Rood"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExpr t_aLW
tcPolyExprNC t_aLW
tcGen
utype_defer
  cobox_aLY
  t_aC7
  t_aLW
  a type equality t_aC7 ~ t_aLW
  In the expression: text "Rood"
  In the second argument of ‘font’, namely ‘[text "Rood"]’
tcPolyExprNC t_aC6
tcGen
utype_defer
  cobox_aLZ
  [Char]
  t_aC6
  a type equality [Char] ~ t_aC6
  In the first argument of ‘text’, namely ‘"Rood"’
  In the expression: text "Rood"
  In the second argument of ‘font’, namely ‘[text "Rood"]’
tcPolyExpr t_aLM
tcPolyExprNC t_aLM
tcGen
utype_defer
  cobox_aM0
  t_aC7
  t_aLM
  a type equality t_aC7 ~ t_aLM
  In the expression:
    text
      "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"
  In the expression:
    [font [("COLOR", "#FF0000")] [text "Rood"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExprNC t_aC6
tcGen
utype_defer
  cobox_aM1
  [Char]
  t_aC6
  a type equality [Char] ~ t_aC6
  In the first argument of ‘text’, namely
    ‘"loopt van boven naar onder van 0 tot en met 250 in stappen van 25"’
  In the expression:
    text
      "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"
  In the expression:
    [font [("COLOR", "#FF0000")] [text "Rood"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExpr t_aLK
tcPolyExprNC t_aLK
tcGen
utype_defer
  cobox_aM3
  [t_aM2]
  t_aLK
  a type equality [t_aM2] ~ t_aLK
  In the expression:
    [font [("COLOR", "#00FF00")] [text "Groen"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
  In the first argument of ‘ul’, namely
    ‘[[font [("COLOR", "#FF0000")] [text "Rood"],
       text
         "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
      [font [("COLOR", "#00FF00")] [text "Groen"],
       text
         "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
      [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]’
  In the expression:
    (ul
       [[font [("COLOR", "#FF0000")] [text "Rood"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#00FF00")] [text "Groen"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]])
tcPolyExpr t_aM2
tcPolyExprNC t_aM2
tcGen
utype_defer
  cobox_aM4
  t_aCc
  t_aM2
  a type equality t_aCc ~ t_aM2
  In the expression: font [("COLOR", "#00FF00")] [text "Groen"]
  In the expression:
    [font [("COLOR", "#00FF00")] [text "Groen"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExprNC t_aCa
tcGen
utype_defer
  cobox_aM6
  [t_aM5]
  t_aCa
  a type equality [t_aM5] ~ t_aCa
  In the first argument of ‘font’, namely ‘[("COLOR", "#00FF00")]’
  In the expression: font [("COLOR", "#00FF00")] [text "Groen"]
  In the expression:
    [font [("COLOR", "#00FF00")] [text "Groen"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExpr t_aM5
tcPolyExprNC t_aM5
tcGen
utype_defer
  cobox_aM9
  (t_aM7, t_aM8)
  t_aM5
  a type equality (t_aM7, t_aM8) ~ t_aM5
  In the expression: ("COLOR", "#00FF00")
  In the first argument of ‘font’, namely ‘[("COLOR", "#00FF00")]’
  In the expression: font [("COLOR", "#00FF00")] [text "Groen"]
tcPolyExpr t_aM7
tcPolyExprNC t_aM7
tcGen
utype_defer
  cobox_aMa
  [Char]
  t_aM7
  a type equality [Char] ~ t_aM7
  In the expression: "COLOR"
  In the expression: ("COLOR", "#00FF00")
  In the first argument of ‘font’, namely ‘[("COLOR", "#00FF00")]’
tcPolyExpr t_aM8
tcPolyExprNC t_aM8
tcGen
utype_defer
  cobox_aMb
  [Char]
  t_aM8
  a type equality [Char] ~ t_aM8
  In the expression: "#00FF00"
  In the expression: ("COLOR", "#00FF00")
  In the first argument of ‘font’, namely ‘[("COLOR", "#00FF00")]’
tcPolyExprNC t_aCb
tcGen
utype_defer
  cobox_aMd
  [t_aMc]
  t_aCb
  a type equality [t_aMc] ~ t_aCb
  In the second argument of ‘font’, namely ‘[text "Groen"]’
  In the expression: font [("COLOR", "#00FF00")] [text "Groen"]
  In the expression:
    [font [("COLOR", "#00FF00")] [text "Groen"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExpr t_aMc
tcPolyExprNC t_aMc
tcGen
utype_defer
  cobox_aMe
  t_aC7
  t_aMc
  a type equality t_aC7 ~ t_aMc
  In the expression: text "Groen"
  In the second argument of ‘font’, namely ‘[text "Groen"]’
tcPolyExprNC t_aC6
tcGen
utype_defer
  cobox_aMf
  [Char]
  t_aC6
  a type equality [Char] ~ t_aC6
  In the first argument of ‘text’, namely ‘"Groen"’
  In the expression: text "Groen"
  In the second argument of ‘font’, namely ‘[text "Groen"]’
tcPolyExpr t_aM2
tcPolyExprNC t_aM2
tcGen
utype_defer
  cobox_aMg
  t_aC7
  t_aM2
  a type equality t_aC7 ~ t_aM2
  In the expression:
    text
      "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"
  In the expression:
    [font [("COLOR", "#00FF00")] [text "Groen"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExprNC t_aC6
tcGen
utype_defer
  cobox_aMh
  [Char]
  t_aC6
  a type equality [Char] ~ t_aC6
  In the first argument of ‘text’, namely
    ‘"loopt van boven naar onder van 0 tot en met 250 in stappen van 25"’
  In the expression:
    text
      "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"
  In the expression:
    [font [("COLOR", "#00FF00")] [text "Groen"],
     text
       "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"]
tcPolyExpr t_aLK
tcPolyExprNC t_aLK
tcGen
utype_defer
  cobox_aMj
  [t_aMi]
  t_aLK
  a type equality [t_aMi] ~ t_aLK
  In the expression:
    [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]
  In the first argument of ‘ul’, namely
    ‘[[font [("COLOR", "#FF0000")] [text "Rood"],
       text
         "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
      [font [("COLOR", "#00FF00")] [text "Groen"],
       text
         "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
      [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]’
  In the expression:
    (ul
       [[font [("COLOR", "#FF0000")] [text "Rood"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#00FF00")] [text "Groen"],
         text
           "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
        [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]])
tcPolyExpr t_aMi
tcPolyExprNC t_aMi
tcGen
utype_defer
  cobox_aMk
  t_aCc
  t_aMi
  a type equality t_aCc ~ t_aMi
  In the expression: font [("COLOR", "#0000FF")] [text "Blauw"]
  In the expression:
    [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]
tcPolyExprNC t_aCa
tcGen
utype_defer
  cobox_aMm
  [t_aMl]
  t_aCa
  a type equality [t_aMl] ~ t_aCa
  In the first argument of ‘font’, namely ‘[("COLOR", "#0000FF")]’
  In the expression: font [("COLOR", "#0000FF")] [text "Blauw"]
  In the expression:
    [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]
tcPolyExpr t_aMl
tcPolyExprNC t_aMl
tcGen
utype_defer
  cobox_aMp
  (t_aMn, t_aMo)
  t_aMl
  a type equality (t_aMn, t_aMo) ~ t_aMl
  In the expression: ("COLOR", "#0000FF")
  In the first argument of ‘font’, namely ‘[("COLOR", "#0000FF")]’
  In the expression: font [("COLOR", "#0000FF")] [text "Blauw"]
tcPolyExpr t_aMn
tcPolyExprNC t_aMn
tcGen
utype_defer
  cobox_aMq
  [Char]
  t_aMn
  a type equality [Char] ~ t_aMn
  In the expression: "COLOR"
  In the expression: ("COLOR", "#0000FF")
  In the first argument of ‘font’, namely ‘[("COLOR", "#0000FF")]’
tcPolyExpr t_aMo
tcPolyExprNC t_aMo
tcGen
utype_defer
  cobox_aMr
  [Char]
  t_aMo
  a type equality [Char] ~ t_aMo
  In the expression: "#0000FF"
  In the expression: ("COLOR", "#0000FF")
  In the first argument of ‘font’, namely ‘[("COLOR", "#0000FF")]’
tcPolyExprNC t_aCb
tcGen
utype_defer
  cobox_aMt
  [t_aMs]
  t_aCb
  a type equality [t_aMs] ~ t_aCb
  In the second argument of ‘font’, namely ‘[text "Blauw"]’
  In the expression: font [("COLOR", "#0000FF")] [text "Blauw"]
  In the expression:
    [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]
tcPolyExpr t_aMs
tcPolyExprNC t_aMs
tcGen
utype_defer
  cobox_aMu
  t_aC7
  t_aMs
  a type equality t_aC7 ~ t_aMs
  In the expression: text "Blauw"
  In the second argument of ‘font’, namely ‘[text "Blauw"]’
tcPolyExprNC t_aC6
tcGen
utype_defer
  cobox_aMv
  [Char]
  t_aC6
  a type equality [Char] ~ t_aC6
  In the first argument of ‘text’, namely ‘"Blauw"’
  In the expression: text "Blauw"
  In the second argument of ‘font’, namely ‘[text "Blauw"]’
tcPolyExpr t_aMi
tcPolyExprNC t_aMi
tcGen
utype_defer
  cobox_aMw
  t_aC7
  t_aMi
  a type equality t_aC7 ~ t_aMi
  In the expression: text "is overal 0"
  In the expression:
    [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]
tcPolyExprNC t_aC6
tcGen
utype_defer
  cobox_aMx
  [Char]
  t_aC6
  a type equality [Char] ~ t_aC6
  In the first argument of ‘text’, namely ‘"is overal 0"’
  In the expression: text "is overal 0"
  In the expression:
    [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]
tcPolyExpr t_aLC
tcPolyExprNC t_aLC
tcGen
utype_defer
  cobox_aMy
  t_aCG
  t_aLC
  a type equality t_aCG ~ t_aLC
  In the expression:
    (colorTable
       [[(x, y, z) | x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])
  In the second argument of ‘document’, namely
    ‘[(h 1 "Kleurentabel"),
      (ul
         [[font [("COLOR", "#FF0000")] [text "Rood"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#00FF00")] [text "Groen"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
      (colorTable
         [[(x, y, z) |
             x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]’
tcPolyExprNC t_aCF
tcGen
utype_defer
  cobox_aMA
  [t_aMz]
  t_aCF
  a type equality [t_aMz] ~ t_aCF
  In the first argument of ‘colorTable’, namely
    ‘[[(x, y, z) |
         x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]]’
  In the expression:
    (colorTable
       [[(x, y, z) | x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])
  In the second argument of ‘document’, namely
    ‘[(h 1 "Kleurentabel"),
      (ul
         [[font [("COLOR", "#FF0000")] [text "Rood"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#00FF00")] [text "Groen"],
           text
             "loopt van boven naar onder van 0 tot en met 250 in stappen van 25"],
          [font [("COLOR", "#0000FF")] [text "Blauw"], text "is overal 0"]]),
      (colorTable
         [[(x, y, z) |
             x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])]’
tcPolyExpr t_aMz
tcPolyExprNC t_aMz
tcGen
utype_defer
  cobox_aMC
  [t_aMB]
  t_aMz
  a type equality [t_aMB] ~ t_aMz
  In the expression:
    [(x, y, z) | x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]
  In the first argument of ‘colorTable’, namely
    ‘[[(x, y, z) |
         x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]]’
  In the expression:
    (colorTable
       [[(x, y, z) | x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]])
tcPolyExpr t_aMD
tcPolyExprNC t_aMD
tcGen
Instantiating
  fromInteger with [a_aME]
                   [Num a_aME]
instCallConstraints [$dNum_aMF]
utype_defer
  cobox_aMG
  Integer -> a_aME
  Integer -> t_aMD
  a type equality Integer -> a_aME ~ Integer -> t_aMD
  In the expression: 0
  In the expression: [0, 25 .. 250]
  In a stmt of a list comprehension: x <- [0, 25 .. 250]
tcPolyExpr t_aMD
tcPolyExprNC t_aMD
tcGen
Instantiating
  fromInteger with [a_aMH]
                   [Num a_aMH]
instCallConstraints [$dNum_aMI]
utype_defer
  cobox_aMJ
  Integer -> a_aMH
  Integer -> t_aMD
  a type equality Integer -> a_aMH ~ Integer -> t_aMD
  In the expression: 25
  In the expression: [0, 25 .. 250]
  In a stmt of a list comprehension: x <- [0, 25 .. 250]
tcPolyExpr t_aMD
tcPolyExprNC t_aMD
tcGen
Instantiating
  fromInteger with [a_aMK]
                   [Num a_aMK]
instCallConstraints [$dNum_aML]
utype_defer
  cobox_aMM
  Integer -> a_aMK
  Integer -> t_aMD
  a type equality Integer -> a_aMK ~ Integer -> t_aMD
  In the expression: 250
  In the expression: [0, 25 .. 250]
  In a stmt of a list comprehension: x <- [0, 25 .. 250]
instCallConstraints [$dEnum_aOJ]
env2 [(x, Identifier[x::t_aMD, <NotTopLevel>])]
tcPolyExpr t_aOK
tcPolyExprNC t_aOK
tcGen
Instantiating
  fromInteger with [a_aOL]
                   [Num a_aOL]
instCallConstraints [$dNum_aOM]
utype_defer
  cobox_aON
  Integer -> a_aOL
  Integer -> t_aOK
  a type equality Integer -> a_aOL ~ Integer -> t_aOK
  In the expression: 0
  In the expression: [0, 25 .. 250]
  In a stmt of a list comprehension: y <- [0, 25 .. 250]
tcPolyExpr t_aOK
tcPolyExprNC t_aOK
tcGen
Instantiating
  fromInteger with [a_aOO]
                   [Num a_aOO]
instCallConstraints [$dNum_aOP]
utype_defer
  cobox_aOQ
  Integer -> a_aOO
  Integer -> t_aOK
  a type equality Integer -> a_aOO ~ Integer -> t_aOK
  In the expression: 25
  In the expression: [0, 25 .. 250]
  In a stmt of a list comprehension: y <- [0, 25 .. 250]
tcPolyExpr t_aOK
tcPolyExprNC t_aOK
tcGen
Instantiating
  fromInteger with [a_aOR]
                   [Num a_aOR]
instCallConstraints [$dNum_aOS]
utype_defer
  cobox_aOT
  Integer -> a_aOR
  Integer -> t_aOK
  a type equality Integer -> a_aOR ~ Integer -> t_aOK
  In the expression: 250
  In the expression: [0, 25 .. 250]
  In a stmt of a list comprehension: y <- [0, 25 .. 250]
instCallConstraints [$dEnum_aOU]
env2 [(y, Identifier[y::t_aOK, <NotTopLevel>])]
tcPolyExpr t_aOV
tcPolyExprNC t_aOV
tcGen
Instantiating
  fromInteger with [a_aOW]
                   [Num a_aOW]
instCallConstraints [$dNum_aOX]
utype_defer
  cobox_aOY
  Integer -> a_aOW
  Integer -> t_aOV
  a type equality Integer -> a_aOW ~ Integer -> t_aOV
  In the expression: 0
  In the expression: [0]
  In a stmt of a list comprehension: z <- [0]
env2 [(z, Identifier[z::t_aOV, <NotTopLevel>])]
utype_defer
  cobox_aP2
  (t_aOZ, t_aP0, t_aP1)
  t_aMB
  a type equality (t_aOZ, t_aP0, t_aP1) ~ t_aMB
  In the expression: (x, y, z)
  In the expression:
    [(x, y, z) | x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]
  In the first argument of ‘colorTable’, namely
    ‘[[(x, y, z) |
         x <- [0, 25 .. 250], y <- [0, 25 .. 250], z <- [0]]]’
tcPolyExpr t_aOZ
tcPolyExprNC t_aOZ
tcGen
utype_defer
  cobox_aP3
  t_aMD
  t_aOZ
  a type equality t_aMD ~ t_aOZ
  In the expression: x
  In the expression: (x, y, z)
tcPolyExpr t_aP0
tcPolyExprNC t_aP0
tcGen
utype_defer
  cobox_aP4
  t_aOK
  t_aP0
  a type equality t_aOK ~ t_aP0
  In the expression: y
  In the expression: (x, y, z)
tcPolyExpr t_aP1
tcPolyExprNC t_aP1
tcGen
utype_defer
  cobox_aP5
  t_aOV
  t_aP1
  a type equality t_aOV ~ t_aP1
  In the expression: z
  In the expression: (x, y, z)
addInlinePrags
  kleurenTabel
  []
csb2 [kleurenTabel]
} End of bindings for
  [kleurenTabel]
  NonRecursive
  kleurenTabel t_aBY
env2
  [(kleurenTabel, Identifier[kleurenTabel::t_aBY, <NotTopLevel>])]
------------------------------------------------
Bindings for { [main]
Generalisation plan
  CheckGen main :: t_aBW
                   []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  main
  t_aBW
tcMatchesFun
  main
  t_aBW
tcGen
tcBody t_aBW
utype_defer
  cobox_aP7
  IO ()
  t_aBW
  a type equality IO () ~ t_aBW
  In the expression: layout (ppHTML kleurenTabel)
  In an equation for ‘main’: main = layout (ppHTML kleurenTabel)
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aP8
  t_aD4
  Doc
  a type equality t_aD4 ~ Doc
  In the first argument of ‘layout’, namely ‘(ppHTML kleurenTabel)’
  In the expression: layout (ppHTML kleurenTabel)
tcPolyExprNC t_aD3
tcGen
utype_defer
  cobox_aP9
  t_aBY
  t_aD3
  a type equality t_aBY ~ t_aD3
  In the first argument of ‘ppHTML’, namely ‘kleurenTabel’
  In the first argument of ‘layout’, namely ‘(ppHTML kleurenTabel)’
addInlinePrags
  main
  []
csb2 [main]
} End of bindings for
  [main]
  NonRecursive
  main t_aBW
env2 [(main, Identifier[main::t_aBW, <NotTopLevel>])]
------------------------------------------------
Bindings for { [eqString]
Generalisation plan
  CheckGen eqString :: t_aDQ -> t_aDR -> t_aDS
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  eqString
  t_aDQ -> t_aDR -> t_aDS
tcMatchesFun
  eqString
  t_aDQ -> t_aDR -> t_aDS
tcGen
tcBody t_aDQ -> t_aDR -> t_aDS
Instantiating
  undefined with [a_aPb]
                 []
utype_defer
  cobox_aPc
  a_aPb
  t_aDQ -> t_aDR -> t_aDS
  a type equality a_aPb ~ t_aDQ -> t_aDR -> t_aDS
  In the expression: undefined
  In an equation for ‘eqString’: eqString = undefined
addInlinePrags
  eqString
  []
csb2 [eqString]
} End of bindings for
  [eqString]
  NonRecursive
  eqString t_aDQ -> t_aDR -> t_aDS
env2
  [(eqString,
    Identifier[eqString::t_aDQ -> t_aDR -> t_aDS, <NotTopLevel>])]
tc_group rec
  valideer (Text _) _ = Nothing
  valideer (SingleTag _ _) _ = Nothing
  valideer (DoubleTag tag _ htmls) req
    | eqString tag (snd req) = Just req
    | eqString tag (fst req) = Nothing
    | otherwise = dunUit (map (\ html -> valideer html req) htmls)
------------------------------------------------
Bindings for { [valideer]
Generalisation plan
  CheckGen valideer :: t_aDA -> t_aDB -> t_aDC
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  valideer
  t_aDA -> t_aDB -> t_aDC
tcMatchesFun
  valideer
  t_aDA -> t_aDB -> t_aDC
tcGen
utype_defer
  cobox_aPe
  HTML
  t_aDA
  a type equality HTML ~ t_aDA
  In the pattern: Text _
  In an equation for ‘valideer’: valideer (Text _) _ = Nothing
tcConPat
  Text
  []
  HTML
  [String]
tcBody t_aDC
Instantiating
  Data.Maybe.Nothing with [a_aPf]
                          []
utype_defer
  cobox_aPg
  Maybe a_aPf
  t_aDC
  a type equality Maybe a_aPf ~ t_aDC
  In the expression: Nothing
  In an equation for ‘valideer’: valideer (Text _) _ = Nothing
utype_defer
  cobox_aPh
  HTML
  t_aDA
  a type equality HTML ~ t_aDA
  In the pattern: SingleTag _ _
  In an equation for ‘valideer’: valideer (SingleTag _ _) _ = Nothing
tcConPat
  SingleTag
  []
  HTML
  [String, [Attribute]]
tcBody t_aDC
Instantiating
  Data.Maybe.Nothing with [a_aPi]
                          []
utype_defer
  cobox_aPj
  Maybe a_aPi
  t_aDC
  a type equality Maybe a_aPi ~ t_aDC
  In the expression: Nothing
  In an equation for ‘valideer’: valideer (SingleTag _ _) _ = Nothing
utype_defer
  cobox_aPk
  HTML
  t_aDA
  a type equality HTML ~ t_aDA
  In the pattern: DoubleTag tag _ htmls
  In an equation for ‘valideer’:
      valideer (DoubleTag tag _ htmls) req
        | eqString tag (snd req) = Just req
        | eqString tag (fst req) = Nothing
        | otherwise = dunUit (map (\ html -> valideer html req) htmls)
tcConPat
  DoubleTag
  []
  HTML
  [String, [Attribute], [HTML]]
env2 [(tag, Identifier[tag::String, <NotTopLevel>])]
env2 [(htmls, Identifier[htmls::[HTML], <NotTopLevel>])]
env2 [(req, Identifier[req::t_aDB, <NotTopLevel>])]
utype_defer
  cobox_aPl
  t_aDS
  Bool
  a type equality t_aDS ~ Bool
  In the expression: eqString tag (snd req)
  In a stmt of a pattern guard for
                 an equation for ‘valideer’:
    eqString tag (snd req)
tcPolyExprNC t_aDQ
tcGen
utype_defer
  cobox_aPm
  String
  t_aDQ
  a type equality String ~ t_aDQ
  In the first argument of ‘eqString’, namely ‘tag’
  In the expression: eqString tag (snd req)
tcPolyExprNC t_aDR
tcGen
Instantiating
  snd with [a_aPn, b_aPo]
           []
utype_defer
  cobox_aPp
  b_aPo
  t_aDR
  a type equality b_aPo ~ t_aDR
  In the second argument of ‘eqString’, namely ‘(snd req)’
  In the expression: eqString tag (snd req)
tcPolyExprNC (a_aPn, b_aPo)
tcGen
utype_defer
  cobox_aPq
  t_aDB
  (a_aPn, b_aPo)
  a type equality t_aDB ~ (a_aPn, b_aPo)
  In the first argument of ‘snd’, namely ‘req’
  In the second argument of ‘eqString’, namely ‘(snd req)’
tcBody t_aDC
Instantiating
  Data.Maybe.Just with [a_aPr]
                       []
utype_defer
  cobox_aPs
  Maybe a_aPr
  t_aDC
  a type equality Maybe a_aPr ~ t_aDC
  In the expression: Just req
  In an equation for ‘valideer’:
      valideer (DoubleTag tag _ htmls) req
        | eqString tag (snd req) = Just req
        | eqString tag (fst req) = Nothing
        | otherwise = dunUit (map (\ html -> valideer html req) htmls)
tcPolyExprNC a_aPr
tcGen
utype_defer
  cobox_aPt
  t_aDB
  a_aPr
  a type equality t_aDB ~ a_aPr
  In the first argument of ‘Just’, namely ‘req’
  In the expression: Just req
utype_defer
  cobox_aPu
  t_aDS
  Bool
  a type equality t_aDS ~ Bool
  In the expression: eqString tag (fst req)
  In a stmt of a pattern guard for
                 an equation for ‘valideer’:
    eqString tag (fst req)
tcPolyExprNC t_aDQ
tcGen
utype_defer
  cobox_aPv
  String
  t_aDQ
  a type equality String ~ t_aDQ
  In the first argument of ‘eqString’, namely ‘tag’
  In the expression: eqString tag (fst req)
tcPolyExprNC t_aDR
tcGen
Instantiating
  fst with [a_aPw, b_aPx]
           []
utype_defer
  cobox_aPy
  a_aPw
  t_aDR
  a type equality a_aPw ~ t_aDR
  In the second argument of ‘eqString’, namely ‘(fst req)’
  In the expression: eqString tag (fst req)
tcPolyExprNC (a_aPw, b_aPx)
tcGen
utype_defer
  cobox_aPz
  t_aDB
  (a_aPw, b_aPx)
  a type equality t_aDB ~ (a_aPw, b_aPx)
  In the first argument of ‘fst’, namely ‘req’
  In the second argument of ‘eqString’, namely ‘(fst req)’
tcBody t_aDC
Instantiating
  Data.Maybe.Nothing with [a_aPA]
                          []
utype_defer
  cobox_aPB
  Maybe a_aPA
  t_aDC
  a type equality Maybe a_aPA ~ t_aDC
  In the expression: Nothing
  In an equation for ‘valideer’:
      valideer (DoubleTag tag _ htmls) req
        | eqString tag (snd req) = Just req
        | eqString tag (fst req) = Nothing
        | otherwise = dunUit (map (\ html -> valideer html req) htmls)
utype_defer
  cobox_aPC
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: otherwise
  In a stmt of a pattern guard for
                 an equation for ‘valideer’:
    otherwise
tcBody t_aDC
utype_defer
  cobox_aPD
  t_aDp
  t_aDC
  a type equality t_aDp ~ t_aDC
  In the expression: dunUit (map (\ html -> valideer html req) htmls)
  In an equation for ‘valideer’:
      valideer (DoubleTag tag _ htmls) req
        | eqString tag (snd req) = Just req
        | eqString tag (fst req) = Nothing
        | otherwise = dunUit (map (\ html -> valideer html req) htmls)
tcPolyExprNC t_aDo
tcGen
Instantiating
  map with [a_aPE, b_aPF]
           []
utype_defer
  cobox_aPG
  [b_aPF]
  t_aDo
  a type equality [b_aPF] ~ t_aDo
  In the first argument of ‘dunUit’, namely
    ‘(map (\ html -> valideer html req) htmls)’
  In the expression: dunUit (map (\ html -> valideer html req) htmls)
tcPolyExprNC a_aPE -> b_aPF
tcGen
env2 [(html, Identifier[html::a_aPE, <NotTopLevel>])]
tcBody b_aPF
utype_defer
  cobox_aPH
  t_aDC
  b_aPF
  a type equality t_aDC ~ b_aPF
  In the expression: valideer html req
  In the first argument of ‘map’, namely
    ‘(\ html -> valideer html req)’
tcPolyExprNC t_aDA
tcGen
utype_defer
  cobox_aPI
  a_aPE
  t_aDA
  a type equality a_aPE ~ t_aDA
  In the first argument of ‘valideer’, namely ‘html’
  In the expression: valideer html req
tcPolyExprNC t_aDB
tcGen
utype_defer
  cobox_aPJ
  t_aDB
  t_aDB
  a type equality t_aDB ~ t_aDB
  In the second argument of ‘valideer’, namely ‘req’
  In the expression: valideer html req
tcPolyExprNC [a_aPE]
tcGen
utype_defer
  cobox_aPK
  [HTML]
  [a_aPE]
  a type equality [HTML] ~ [a_aPE]
  In the second argument of ‘map’, namely ‘htmls’
  In the first argument of ‘dunUit’, namely
    ‘(map (\ html -> valideer html req) htmls)’
addInlinePrags
  valideer
  []
csb2 [valideer]
} End of bindings for
  [valideer]
  Recursive
  valideer t_aDA -> t_aDB -> t_aDC
env2
  [(valideer,
    Identifier[valideer::t_aDA -> t_aDB -> t_aDC, <NotTopLevel>])]
------------------------------------------------
Bindings for { [validate]
Generalisation plan
  CheckGen validate :: t_aDt -> t_aDu -> t_aDv
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  validate
  t_aDt -> t_aDu -> t_aDv
tcMatchesFun
  validate
  t_aDt -> t_aDu -> t_aDv
tcGen
env2 [(reqs, Identifier[reqs::t_aDt, <NotTopLevel>])]
env2 [(html, Identifier[html::t_aDu, <NotTopLevel>])]
tcBody t_aDv
utype_defer
  cobox_aPM
  t_aDp
  t_aDv
  a type equality t_aDp ~ t_aDv
  In the expression: dunUit (map (valideer html) reqs)
  In an equation for ‘validate’:
      validate reqs html = dunUit (map (valideer html) reqs)
tcPolyExprNC t_aDo
tcGen
Instantiating
  map with [a_aPN, b_aPO]
           []
utype_defer
  cobox_aPP
  [b_aPO]
  t_aDo
  a type equality [b_aPO] ~ t_aDo
  In the first argument of ‘dunUit’, namely
    ‘(map (valideer html) reqs)’
  In the expression: dunUit (map (valideer html) reqs)
tcPolyExprNC a_aPN -> b_aPO
tcGen
utype_defer
  cobox_aPQ
  t_aDB -> t_aDC
  a_aPN -> b_aPO
  a type equality t_aDB -> t_aDC ~ a_aPN -> b_aPO
  In the first argument of ‘map’, namely ‘(valideer html)’
  In the first argument of ‘dunUit’, namely
    ‘(map (valideer html) reqs)’
tcPolyExprNC t_aDA
tcGen
utype_defer
  cobox_aPR
  t_aDu
  t_aDA
  a type equality t_aDu ~ t_aDA
  In the first argument of ‘valideer’, namely ‘html’
  In the first argument of ‘map’, namely ‘(valideer html)’
tcPolyExprNC [a_aPN]
tcGen
utype_defer
  cobox_aPS
  t_aDt
  [a_aPN]
  a type equality t_aDt ~ [a_aPN]
  In the second argument of ‘map’, namely ‘reqs’
  In the first argument of ‘dunUit’, namely
    ‘(map (valideer html) reqs)’
addInlinePrags
  validate
  []
csb2 [validate]
} End of bindings for
  [validate]
  NonRecursive
  validate t_aDt -> t_aDu -> t_aDv
env2
  [(validate,
    Identifier[validate::t_aDt -> t_aDu -> t_aDv, <NotTopLevel>])]
Tc6
env2 []
Tc7
End of tcVectDecls: LIE:
  WC {wc_flat = [W] cobox_aBX :: IO () ~ t_aBW [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_aBW " HTML3.hs:114:9-13] (CNonCanonical)
                [W] cobox_aBZ :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML3.hs:109:17-20] (CNonCanonical)
                [W] cobox_aC3 :: String ~ t_aC0 [" a type equality String
                                                                   ~
                                                                   t_aC0 " HTML3.hs:106:13-36] (CNonCanonical)
                [W] cobox_aC4 :: [HTML] ~ t_aC1 [" a type equality [HTML]
                                                                   ~
                                                                   t_aC1 " HTML3.hs:106:13-36] (CNonCanonical)
                [W] cobox_aC5 :: HTML ~ t_aC2 [" a type equality HTML
                                                                 ~
                                                                 t_aC2 " HTML3.hs:106:13-36] (CNonCanonical)
                [W] cobox_aC8 :: String ~ t_aC6 [" a type equality String
                                                                   ~
                                                                   t_aC6 " HTML3.hs:103:9-22] (CNonCanonical)
                [W] cobox_aC9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                 ~
                                                                 t_aC7 " HTML3.hs:103:9-22] (CNonCanonical)
                [W] cobox_aCd :: [Attribute] ~ t_aCa [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCa " HTML3.hs:100:9-37] (CNonCanonical)
                [W] cobox_aCe :: [HTML] ~ t_aCb [" a type equality [HTML]
                                                                   ~
                                                                   t_aCb " HTML3.hs:100:9-37] (CNonCanonical)
                [W] cobox_aCf :: HTML ~ t_aCc [" a type equality HTML
                                                                 ~
                                                                 t_aCc " HTML3.hs:100:9-37] (CNonCanonical)
                [W] cobox_aCj :: Int ~ t_aCg [" a type equality Int
                                                                ~
                                                                t_aCg " HTML3.hs:97:6-26] (CNonCanonical)
                [W] cobox_aCk :: String ~ t_aCh [" a type equality String
                                                                   ~
                                                                   t_aCh " HTML3.hs:97:6-26] (CNonCanonical)
                [W] cobox_aCl :: HTML ~ t_aCi [" a type equality HTML
                                                                 ~
                                                                 t_aCi " HTML3.hs:97:6-26] (CNonCanonical)
                [W] cobox_aCo :: [HTML] ~ t_aCm [" a type equality [HTML]
                                                                   ~
                                                                   t_aCm " HTML3.hs:94:7-20] (CNonCanonical)
                [W] cobox_aCp :: HTML ~ t_aCn [" a type equality HTML
                                                                 ~
                                                                 t_aCn " HTML3.hs:94:7-20] (CNonCanonical)
                [W] cobox_aCs :: [[HTML]] ~ t_aCq [" a type equality [[HTML]]
                                                                     ~
                                                                     t_aCq " HTML3.hs:91:7-22] (CNonCanonical)
                [W] cobox_aCt :: HTML ~ t_aCr [" a type equality HTML
                                                                 ~
                                                                 t_aCr " HTML3.hs:91:7-22] (CNonCanonical)
                [W] cobox_aCz :: (Int, Int, Int) ~ t_aCx [" a type equality (Int,
                                                                             Int,
                                                                             Int)
                                                                            ~
                                                                            t_aCx " HTML3.hs:88:13-35] (CNonCanonical)
                [W] cobox_aCA :: HTML ~ t_aCy [" a type equality HTML
                                                                 ~
                                                                 t_aCy " HTML3.hs:88:13-35] (CNonCanonical)
                [W] cobox_aCD :: [(Int, Int, Int)]
                                 ~ t_aCB [" a type equality [(Int, Int, Int)]
                                                            ~
                                                            t_aCB " HTML3.hs:85:12-36] (CNonCanonical)
                [W] cobox_aCE :: HTML ~ t_aCC [" a type equality HTML
                                                                 ~
                                                                 t_aCC " HTML3.hs:85:12-36] (CNonCanonical)
                [W] cobox_aCH :: [[(Int, Int, Int)]]
                                 ~ t_aCF [" a type equality [[(Int, Int, Int)]]
                                                            ~
                                                            t_aCF " HTML3.hs:82:15-41] (CNonCanonical)
                [W] cobox_aCI :: HTML ~ t_aCG [" a type equality HTML
                                                                 ~
                                                                 t_aCG " HTML3.hs:82:15-41] (CNonCanonical)
                [W] cobox_aCL :: Int ~ t_aCJ [" a type equality Int
                                                                ~
                                                                t_aCJ " HTML3.hs:72:14-26] (CNonCanonical)
                [W] cobox_aCM :: String ~ t_aCK [" a type equality String
                                                                   ~
                                                                   t_aCK " HTML3.hs:72:14-26] (CNonCanonical)
                [W] cobox_aCR :: Int ~ t_aCN [" a type equality Int
                                                                ~
                                                                t_aCN " HTML3.hs:68:10-36] (CNonCanonical)
                [W] cobox_aCS :: Int ~ t_aCO [" a type equality Int
                                                                ~
                                                                t_aCO " HTML3.hs:68:10-36] (CNonCanonical)
                [W] cobox_aCT :: Int ~ t_aCP [" a type equality Int
                                                                ~
                                                                t_aCP " HTML3.hs:68:10-36] (CNonCanonical)
                [W] cobox_aCU :: String ~ t_aCQ [" a type equality String
                                                                   ~
                                                                   t_aCQ " HTML3.hs:68:10-36] (CNonCanonical)
                [W] cobox_aCX :: [(String, String)]
                                 ~ t_aCV [" a type equality [(String, String)]
                                                            ~
                                                            t_aCV " HTML3.hs:60:13-40] (CNonCanonical)
                [W] cobox_aCY :: String ~ t_aCW [" a type equality String
                                                                   ~
                                                                   t_aCW " HTML3.hs:60:13-40] (CNonCanonical)
                [W] cobox_aD1 :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:55:9-22] (CNonCanonical)
                [W] cobox_aD2 :: String ~ t_aD0 [" a type equality String
                                                                   ~
                                                                   t_aD0 " HTML3.hs:55:9-22] (CNonCanonical)
                [W] cobox_aD5 :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:47:11-21] (CNonCanonical)
                [W] cobox_aD6 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:47:11-21] (CNonCanonical)
                [W] cobox_aD8 :: [Requirement]
                                 ~ t_aD7 [" a type equality [Requirement]
                                                            ~
                                                            t_aD7 " HTML3.hs:41:11-23] (CNonCanonical)
                [W] cobox_aDq :: [Maybe Requirement]
                                 ~ t_aDo [" a type equality [Maybe Requirement]
                                                            ~
                                                            t_aDo " HTML3.hs:36:11-50] (CNonCanonical)
                [W] cobox_aDr :: Maybe Requirement ~ t_aDp [" a type equality Maybe
                                                                                Requirement
                                                                              ~
                                                                              t_aDp " HTML3.hs:36:11-50] (CNonCanonical)
                [W] cobox_aDw :: [Requirement]
                                 ~ t_aDt [" a type equality [Requirement]
                                                            ~
                                                            t_aDt " HTML3.hs:27:13-54] (CNonCanonical)
                [W] cobox_aDx :: HTML ~ t_aDu [" a type equality HTML
                                                                 ~
                                                                 t_aDu " HTML3.hs:27:13-54] (CNonCanonical)
                [W] cobox_aDy :: Maybe Requirement ~ t_aDv [" a type equality Maybe
                                                                                Requirement
                                                                              ~
                                                                              t_aDv " HTML3.hs:27:13-54] (CNonCanonical)
                [W] cobox_aDD :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:20:13-52] (CNonCanonical)
                [W] cobox_aDE :: Requirement ~ t_aDB [" a type equality Requirement
                                                                        ~
                                                                        t_aDB " HTML3.hs:20:13-52] (CNonCanonical)
                [W] cobox_aDF :: Maybe Requirement ~ t_aDC [" a type equality Maybe
                                                                                Requirement
                                                                              ~
                                                                              t_aDC " HTML3.hs:20:13-52] (CNonCanonical)
                [W] cobox_aDH :: HTML ~ t_aDG [" a type equality HTML
                                                                 ~
                                                                 t_aDG " HTML3.hs:13:14-17] (CNonCanonical)
                [W] cobox_aDK :: Int ~ t_aDI [" a type equality Int
                                                                ~
                                                                t_aDI " HTML3.hs:7:8-18] (CNonCanonical)
                [W] cobox_aDL :: Char ~ t_aDJ [" a type equality Char
                                                                 ~
                                                                 t_aDJ " HTML3.hs:7:8-18] (CNonCanonical)
                [W] cobox_aDO :: Int ~ t_aDM [" a type equality Int
                                                                ~
                                                                t_aDM " HTML3.hs:5:18-30] (CNonCanonical)
                [W] cobox_aDP :: String ~ t_aDN [" a type equality String
                                                                   ~
                                                                   t_aDN " HTML3.hs:5:18-30] (CNonCanonical)
                [W] cobox_aDT :: String ~ t_aDQ [" a type equality String
                                                                   ~
                                                                   t_aDQ " HTML3.hs:3:18-41] (CNonCanonical)
                [W] cobox_aDU :: String ~ t_aDR [" a type equality String
                                                                   ~
                                                                   t_aDR " HTML3.hs:3:18-41] (CNonCanonical)
                [W] cobox_aDV :: Bool ~ t_aDS [" a type equality Bool
                                                                 ~
                                                                 t_aDS " HTML3.hs:3:18-41] (CNonCanonical)
                [W] cobox_aDX :: HTML ~ t_aC2 [" a type equality HTML
                                                                 ~
                                                                 t_aC2 " HTML3.hs:107:24-129] (CNonCanonical)
                [W] cobox_aDY :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:107:34-39] (CNonCanonical)
                [W] cobox_aDZ :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:45-100] (CNonCanonical)
                [W] cobox_aE0 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:107:55-60] (CNonCanonical)
                [W] cobox_aE1 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:66-98] (CNonCanonical)
                [W] cobox_aE2 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:107:76-82] (CNonCanonical)
                [W] cobox_aE3 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:88-97] (CNonCanonical)
                [W] cobox_aE4 :: t_aC0 ~ String [" a type equality t_aC0
                                                                   ~
                                                                   String " HTML3.hs:107:93-97] (CNonCanonical)
                [W] cobox_aE5 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:103-127] (CNonCanonical)
                [W] cobox_aE6 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:107:113-118] (CNonCanonical)
                [W] cobox_aE7 :: t_aC1 ~ [HTML] [" a type equality t_aC1
                                                                   ~
                                                                   [HTML] " HTML3.hs:107:123-127] (CNonCanonical)
                [W] cobox_aE9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                 ~
                                                                 t_aC7 " HTML3.hs:104:15-25] (CNonCanonical)
                [W] cobox_aEa :: t_aC6 ~ String [" a type equality t_aC6
                                                                   ~
                                                                   String " HTML3.hs:104:20-25] (CNonCanonical)
                [W] cobox_aEc :: HTML ~ t_aCc [" a type equality HTML
                                                                 ~
                                                                 t_aCc " HTML3.hs:101:20-47] (CNonCanonical)
                [W] cobox_aEd :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:101:30-35] (CNonCanonical)
                [W] cobox_aEe :: t_aCa ~ [Attribute] [" a type equality t_aCa
                                                                        ~
                                                                        [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
                [W] cobox_aEf :: t_aCb ~ [HTML] [" a type equality t_aCb
                                                                   ~
                                                                   [HTML] " HTML3.hs:101:43-47] (CNonCanonical)
                [W] cobox_aEh :: HTML ~ t_aCn [" a type equality HTML
                                                                 ~
                                                                 t_aCn " HTML3.hs:95:12-34] (CNonCanonical)
                [W] cobox_aEi :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:95:22-25] (CNonCanonical)
                [W] cobox_aEj :: t_aCm ~ [HTML] [" a type equality t_aCm
                                                                   ~
                                                                   [HTML] " HTML3.hs:95:30-34] (CNonCanonical)
                [W] cobox_aEl :: HTML ~ t_aCr [" a type equality HTML
                                                                 ~
                                                                 t_aCr " HTML3.hs:92:12-43] (CNonCanonical)
                [W] cobox_aEm :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:92:22-25] (CNonCanonical)
                [W] cobox_aEp :: [b_aEo] ~ [HTML] [" a type equality [b_aEo]
                                                                     ~
                                                                     [HTML] " HTML3.hs:92:31-42] (CNonCanonical)
                [W] cobox_aEq :: (t_aCm -> t_aCn)
                                 ~ (a_aEn -> b_aEo) [" a type equality t_aCm -> t_aCn
                                                                       ~
                                                                       a_aEn
                                                                       -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
                [W] cobox_aEr :: t_aCq ~ [a_aEn] [" a type equality t_aCq
                                                                    ~
                                                                    [a_aEn] " HTML3.hs:92:38-42] (CNonCanonical)
                [W] cobox_aEw :: t_aEt ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                                             ~
                                                                             t_aEu
                                                                             -> t_aEv " HTML3.hs:62:41-96] (CNonCanonical)
                [W] cobox_aEy :: [a_aEx] ~ t_aEv [" a type equality [a_aEx]
                                                                    ~
                                                                    t_aEv " HTML3.hs:62:56-96] (CNonCanonical)
                [W] cobox_aED :: a_aEB ~ [a_aEx] [" a type equality a_aEB
                                                                    ~
                                                                    [a_aEx] " HTML3.hs:62:56-62] (CNonCanonical)
                [W] cobox_aEE :: t_aEu ~ (a_aEB, b_aEC) [" a type equality t_aEu
                                                                           ~
                                                                           (a_aEB,
                                                                            b_aEC) " HTML3.hs:62:60-62] (CNonCanonical)
                [W] cobox_aEG :: [a_aEF] ~ [a_aEx] [" a type equality [a_aEF]
                                                                      ~
                                                                      [a_aEx] " HTML3.hs:62:67-96] (CNonCanonical)
                [W] cobox_aEH :: [Char] ~ [a_aEF] [" a type equality [Char]
                                                                     ~
                                                                     [a_aEF] " HTML3.hs:62:67-69] (CNonCanonical)
                [W] cobox_aEJ :: [a_aEI] ~ [a_aEF] [" a type equality [a_aEI]
                                                                      ~
                                                                      [a_aEF] " HTML3.hs:62:74-96] (CNonCanonical)
                [W] cobox_aEK :: [Char] ~ [a_aEI] [" a type equality [Char]
                                                                     ~
                                                                     [a_aEI] " HTML3.hs:62:74-77] (CNonCanonical)
                [W] cobox_aEM :: [a_aEL] ~ [a_aEI] [" a type equality [a_aEL]
                                                                      ~
                                                                      [a_aEI] " HTML3.hs:62:82-96] (CNonCanonical)
                [W] cobox_aER :: b_aEQ ~ [a_aEL] [" a type equality b_aEQ
                                                                    ~
                                                                    [a_aEL] " HTML3.hs:62:82-88] (CNonCanonical)
                [W] cobox_aES :: t_aEu ~ (a_aEP, b_aEQ) [" a type equality t_aEu
                                                                           ~
                                                                           (a_aEP,
                                                                            b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
                [W] cobox_aET :: [Char] ~ [a_aEL] [" a type equality [Char]
                                                                     ~
                                                                     [a_aEL] " HTML3.hs:62:93-96] (CNonCanonical)
                [W] cobox_aEW :: [a_aEV] ~ t_aCW [" a type equality [a_aEV]
                                                                    ~
                                                                    t_aCW " HTML3.hs:61:17-55] (CNonCanonical)
                [W] cobox_aEZ :: [b_aEY] ~ [[a_aEV]] [" a type equality [b_aEY]
                                                                        ~
                                                                        [[a_aEV]] " HTML3.hs:61:25-54] (CNonCanonical)
                [W] cobox_aF1 :: ([a_aF0] -> [a_aF0])
                                 ~ (a_aEX -> b_aEY) [" a type equality [a_aF0] -> [a_aF0]
                                                                       ~
                                                                       a_aEX
                                                                       -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
                [W] cobox_aF2 :: Char ~ a_aF0 [" a type equality Char
                                                                 ~
                                                                 a_aF0 " HTML3.hs:61:30-32] (CNonCanonical)
                [W] cobox_aF5 :: [b_aF4] ~ [a_aEX] [" a type equality [b_aF4]
                                                                      ~
                                                                      [a_aEX] " HTML3.hs:61:37-53] (CNonCanonical)
                [W] cobox_aF6 :: t_aEt ~ (a_aF3 -> b_aF4) [" a type equality t_aEt
                                                                             ~
                                                                             a_aF3
                                                                             -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
                [W] cobox_aF7 :: t_aCV ~ [a_aF3] [" a type equality t_aCV
                                                                    ~
                                                                    [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
                [W] cobox_aF9 :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:56:7-17] (CNonCanonical)
                [W] cobox_aFa :: String ~ t_aD0 [" a type equality String
                                                                   ~
                                                                   t_aD0 " HTML3.hs:56:35-40] (CNonCanonical)
                [W] cobox_aFb :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:57:7-24] (CNonCanonical)
                [W] cobox_aFd :: [a_aFc] ~ t_aD0 [" a type equality [a_aFc]
                                                                    ~
                                                                    t_aD0 " HTML3.hs:57:35-68] (CNonCanonical)
                [W] cobox_aFe :: [Char] ~ [a_aFc] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFc] " HTML3.hs:57:35-37] (CNonCanonical)
                [W] cobox_aFg :: [a_aFf] ~ [a_aFc] [" a type equality [a_aFf]
                                                                      ~
                                                                      [a_aFc] " HTML3.hs:57:42-68] (CNonCanonical)
                [W] cobox_aFh :: String ~ [a_aFf] [" a type equality String
                                                                     ~
                                                                     [a_aFf] " HTML3.hs:57:42-44] (CNonCanonical)
                [W] cobox_aFj :: [a_aFi] ~ [a_aFf] [" a type equality [a_aFi]
                                                                      ~
                                                                      [a_aFf] " HTML3.hs:57:49-68] (CNonCanonical)
                [W] cobox_aFk :: t_aCW ~ [a_aFi] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aFi] " HTML3.hs:57:49-61] (CNonCanonical)
                [W] cobox_aFl :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
                [W] cobox_aFm :: [Char] ~ [a_aFi] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFi] " HTML3.hs:57:66-68] (CNonCanonical)
                [W] cobox_aFn :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:58:7-30] (CNonCanonical)
                [W] cobox_aFp :: [a_aFo] ~ t_aD0 [" a type equality [a_aFo]
                                                                    ~
                                                                    t_aD0 " HTML3.hs:58:35-114] (CNonCanonical)
                [W] cobox_aFq :: [Char] ~ [a_aFo] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFo] " HTML3.hs:58:35-37] (CNonCanonical)
                [W] cobox_aFs :: [a_aFr] ~ [a_aFo] [" a type equality [a_aFr]
                                                                      ~
                                                                      [a_aFo] " HTML3.hs:58:42-114] (CNonCanonical)
                [W] cobox_aFt :: String ~ [a_aFr] [" a type equality String
                                                                     ~
                                                                     [a_aFr] " HTML3.hs:58:42-44] (CNonCanonical)
                [W] cobox_aFv :: [a_aFu] ~ [a_aFr] [" a type equality [a_aFu]
                                                                      ~
                                                                      [a_aFr] " HTML3.hs:58:49-114] (CNonCanonical)
                [W] cobox_aFw :: t_aCW ~ [a_aFu] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aFu] " HTML3.hs:58:49-61] (CNonCanonical)
                [W] cobox_aFx :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
                [W] cobox_aFz :: [a_aFy] ~ [a_aFu] [" a type equality [a_aFy]
                                                                      ~
                                                                      [a_aFu] " HTML3.hs:58:66-114] (CNonCanonical)
                [W] cobox_aFA :: [Char] ~ [a_aFy] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFy] " HTML3.hs:58:66-68] (CNonCanonical)
                [W] cobox_aFC :: [a_aFB] ~ [a_aFy] [" a type equality [a_aFB]
                                                                      ~
                                                                      [a_aFy] " HTML3.hs:58:73-114] (CNonCanonical)
                [W] cobox_aFH :: [b_aFG] ~ [a_aFB] [" a type equality [b_aFG]
                                                                      ~
                                                                      [a_aFB] " HTML3.hs:58:73-92] (CNonCanonical)
                [W] cobox_aFI :: (t_aCZ -> t_aD0)
                                 ~ (a_aFF -> [b_aFG]) [" a type equality t_aCZ -> t_aD0
                                                                         ~
                                                                         a_aFF
                                                                         -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
                [W] cobox_aFJ :: [HTML] ~ [a_aFF] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aFF] " HTML3.hs:58:88-92] (CNonCanonical)
                [W] cobox_aFL :: [a_aFK] ~ [a_aFB] [" a type equality [a_aFK]
                                                                      ~
                                                                      [a_aFB] " HTML3.hs:58:97-114] (CNonCanonical)
                [W] cobox_aFM :: [Char] ~ [a_aFK] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFK] " HTML3.hs:58:97-100] (CNonCanonical)
                [W] cobox_aFO :: [a_aFN] ~ [a_aFK] [" a type equality [a_aFN]
                                                                      ~
                                                                      [a_aFK] " HTML3.hs:58:105-114] (CNonCanonical)
                [W] cobox_aFP :: String ~ [a_aFN] [" a type equality String
                                                                     ~
                                                                     [a_aFN] " HTML3.hs:58:105-107] (CNonCanonical)
                [W] cobox_aFQ :: [Char] ~ [a_aFN] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFN] " HTML3.hs:58:112-114] (CNonCanonical)
                [W] cobox_aFS :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:48:9-19] (CNonCanonical)
                [W] cobox_aFT :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:48:37-48] (CNonCanonical)
                [W] cobox_aFU :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML3.hs:48:43-48] (CNonCanonical)
                [W] cobox_aFV :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:49:9-26] (CNonCanonical)
                [W] cobox_aFW :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:49:37-69] (CNonCanonical)
                [W] cobox_aFX :: t_aD0 ~ String [" a type equality t_aD0
                                                                   ~
                                                                   String " HTML3.hs:49:44-68] (CNonCanonical)
                [W] cobox_aFY :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:49:50-67] (CNonCanonical)
                [W] cobox_aFZ :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML3.hs:49:60-62] (CNonCanonical)
                [W] cobox_aG0 :: [Attribute]
                                 ~ [Attribute] [" a type equality [Attribute]
                                                                  ~
                                                                  [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
                [W] cobox_aG1 :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:50:9-40] (CNonCanonical)
                [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                  ~
                                                                  [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
                [W] cobox_aG3 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:50:45-118] (CNonCanonical)
                [W] cobox_aG5 :: [a_aG4] ~ String [" a type equality [a_aG4]
                                                                     ~
                                                                     String " HTML3.hs:50:52-117] (CNonCanonical)
                [W] cobox_aG6 :: [Char] ~ [a_aG4] [" a type equality [Char]
                                                                     ~
                                                                     [a_aG4] " HTML3.hs:50:52-54] (CNonCanonical)
                [W] cobox_aG8 :: [a_aG7] ~ [a_aG4] [" a type equality [a_aG7]
                                                                      ~
                                                                      [a_aG4] " HTML3.hs:50:59-117] (CNonCanonical)
                [W] cobox_aG9 :: String ~ [a_aG7] [" a type equality String
                                                                     ~
                                                                     [a_aG7] " HTML3.hs:50:59-61] (CNonCanonical)
                [W] cobox_aGb :: [a_aGa] ~ [a_aG7] [" a type equality [a_aGa]
                                                                      ~
                                                                      [a_aG7] " HTML3.hs:50:66-117] (CNonCanonical)
                [W] cobox_aGc :: t_aCW ~ [a_aGa] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aGa] " HTML3.hs:50:66-78] (CNonCanonical)
                [W] cobox_aGd :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
                [W] cobox_aGf :: [a_aGe] ~ [a_aGa] [" a type equality [a_aGe]
                                                                      ~
                                                                      [a_aGa] " HTML3.hs:50:83-117] (CNonCanonical)
                [W] cobox_aGg :: [Char] ~ [a_aGe] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGe] " HTML3.hs:50:83-85] (CNonCanonical)
                [W] cobox_aGi :: [a_aGh] ~ [a_aGe] [" a type equality [a_aGh]
                                                                      ~
                                                                      [a_aGe] " HTML3.hs:50:90-117] (CNonCanonical)
                [W] cobox_aGj :: String ~ [a_aGh] [" a type equality String
                                                                     ~
                                                                     [a_aGh] " HTML3.hs:50:90-95] (CNonCanonical)
                [W] cobox_aGl :: [a_aGk] ~ [a_aGh] [" a type equality [a_aGk]
                                                                      ~
                                                                      [a_aGh] " HTML3.hs:50:100-117] (CNonCanonical)
                [W] cobox_aGm :: [Char] ~ [a_aGk] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGk] " HTML3.hs:50:100-103] (CNonCanonical)
                [W] cobox_aGo :: [a_aGn] ~ [a_aGk] [" a type equality [a_aGn]
                                                                      ~
                                                                      [a_aGk] " HTML3.hs:50:108-117] (CNonCanonical)
                [W] cobox_aGp :: String ~ [a_aGn] [" a type equality String
                                                                     ~
                                                                     [a_aGn] " HTML3.hs:50:108-110] (CNonCanonical)
                [W] cobox_aGq :: [Char] ~ [a_aGn] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGn] " HTML3.hs:50:115-117] (CNonCanonical)
                [W] cobox_aGr :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:51:9-32] (CNonCanonical)
                [W] $dEq_aGz :: Eq
                                  a_aGy [" a use of ‘==’ " HTML3.hs:51:50-51] (CNonCanonical)
                [W] cobox_aGA :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:51:37-53] (CNonCanonical)
                [W] cobox_aGC :: Int ~ a_aGy [" a type equality Int
                                                                ~
                                                                a_aGy " HTML3.hs:51:37-48] (CNonCanonical)
                [W] cobox_aGD :: [HTML] ~ [a_aGB] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aGB] " HTML3.hs:51:44-48] (CNonCanonical)
                [W] $dNum_aGF :: Num
                                   a_aGE [" the literal ‘0’ " HTML3.hs:51:53] (CNonCanonical)
                [W] cobox_aGG :: (Integer -> a_aGE)
                                 ~ (Integer -> a_aGy) [" a type equality Integer -> a_aGE
                                                                         ~
                                                                         Integer
                                                                         -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
                [W] cobox_aGH :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:51:57-114] (CNonCanonical)
                [W] cobox_aGJ :: [a_aGI] ~ String [" a type equality [a_aGI]
                                                                     ~
                                                                     String " HTML3.hs:51:64-113] (CNonCanonical)
                [W] cobox_aGK :: [Char] ~ [a_aGI] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGI] " HTML3.hs:51:64-66] (CNonCanonical)
                [W] cobox_aGM :: [a_aGL] ~ [a_aGI] [" a type equality [a_aGL]
                                                                      ~
                                                                      [a_aGI] " HTML3.hs:51:71-113] (CNonCanonical)
                [W] cobox_aGN :: String ~ [a_aGL] [" a type equality String
                                                                     ~
                                                                     [a_aGL] " HTML3.hs:51:71-73] (CNonCanonical)
                [W] cobox_aGP :: [a_aGO] ~ [a_aGL] [" a type equality [a_aGO]
                                                                      ~
                                                                      [a_aGL] " HTML3.hs:51:78-113] (CNonCanonical)
                [W] cobox_aGQ :: t_aCW ~ [a_aGO] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aGO] " HTML3.hs:51:78-90] (CNonCanonical)
                [W] cobox_aGR :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
                [W] cobox_aGT :: [a_aGS] ~ [a_aGO] [" a type equality [a_aGS]
                                                                      ~
                                                                      [a_aGO] " HTML3.hs:51:95-113] (CNonCanonical)
                [W] cobox_aGU :: [Char] ~ [a_aGS] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGS] " HTML3.hs:51:95-99] (CNonCanonical)
                [W] cobox_aGW :: [a_aGV] ~ [a_aGS] [" a type equality [a_aGV]
                                                                      ~
                                                                      [a_aGS] " HTML3.hs:51:104-113] (CNonCanonical)
                [W] cobox_aGX :: String ~ [a_aGV] [" a type equality String
                                                                     ~
                                                                     [a_aGV] " HTML3.hs:51:104-106] (CNonCanonical)
                [W] cobox_aGY :: [Char] ~ [a_aGV] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGV] " HTML3.hs:51:111-113] (CNonCanonical)
                [W] $dEq_aH0 :: Eq
                                  a_aGZ [" a use of ‘==’ " HTML3.hs:52:50-51] (CNonCanonical)
                [W] cobox_aH1 :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:52:37-53] (CNonCanonical)
                [W] cobox_aH3 :: Int ~ a_aGZ [" a type equality Int
                                                                ~
                                                                a_aGZ " HTML3.hs:52:37-48] (CNonCanonical)
                [W] cobox_aH4 :: [HTML] ~ [a_aH2] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aH2] " HTML3.hs:52:44-48] (CNonCanonical)
                [W] $dNum_aH6 :: Num
                                   a_aH5 [" the literal ‘1’ " HTML3.hs:52:53] (CNonCanonical)
                [W] cobox_aH7 :: (Integer -> a_aH5)
                                 ~ (Integer -> a_aGZ) [" a type equality Integer -> a_aH5
                                                                         ~
                                                                         Integer
                                                                         -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
                [W] cobox_aH8 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:52:57-153] (CNonCanonical)
                [W] cobox_aH9 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:57-122] (CNonCanonical)
                [W] cobox_aHa :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:57-98] (CNonCanonical)
                [W] cobox_aHc :: [a_aHb] ~ String [" a type equality [a_aHb]
                                                                     ~
                                                                     String " HTML3.hs:52:64-97] (CNonCanonical)
                [W] cobox_aHd :: [Char] ~ [a_aHb] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHb] " HTML3.hs:52:64-66] (CNonCanonical)
                [W] cobox_aHf :: [a_aHe] ~ [a_aHb] [" a type equality [a_aHe]
                                                                      ~
                                                                      [a_aHb] " HTML3.hs:52:71-97] (CNonCanonical)
                [W] cobox_aHg :: String ~ [a_aHe] [" a type equality String
                                                                     ~
                                                                     [a_aHe] " HTML3.hs:52:71-73] (CNonCanonical)
                [W] cobox_aHi :: [a_aHh] ~ [a_aHe] [" a type equality [a_aHh]
                                                                      ~
                                                                      [a_aHe] " HTML3.hs:52:78-97] (CNonCanonical)
                [W] cobox_aHj :: t_aCW ~ [a_aHh] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aHh] " HTML3.hs:52:78-90] (CNonCanonical)
                [W] cobox_aHk :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
                [W] cobox_aHl :: [Char] ~ [a_aHh] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHh] " HTML3.hs:52:95-97] (CNonCanonical)
                [W] cobox_aHm :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                ~
                                                                Doc " HTML3.hs:52:104-122] (CNonCanonical)
                [W] cobox_aHo :: a_aHn ~ t_aD3 [" a type equality a_aHn
                                                                  ~
                                                                  t_aD3 " HTML3.hs:52:112-121] (CNonCanonical)
                [W] cobox_aHp :: [HTML] ~ [a_aHn] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aHn] " HTML3.hs:52:117-121] (CNonCanonical)
                [W] cobox_aHq :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:128-153] (CNonCanonical)
                [W] cobox_aHs :: [a_aHr] ~ String [" a type equality [a_aHr]
                                                                     ~
                                                                     String " HTML3.hs:52:135-152] (CNonCanonical)
                [W] cobox_aHt :: [Char] ~ [a_aHr] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHr] " HTML3.hs:52:135-138] (CNonCanonical)
                [W] cobox_aHv :: [a_aHu] ~ [a_aHr] [" a type equality [a_aHu]
                                                                      ~
                                                                      [a_aHr] " HTML3.hs:52:143-152] (CNonCanonical)
                [W] cobox_aHw :: String ~ [a_aHu] [" a type equality String
                                                                     ~
                                                                     [a_aHu] " HTML3.hs:52:143-145] (CNonCanonical)
                [W] cobox_aHx :: [Char] ~ [a_aHu] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHu] " HTML3.hs:52:150-152] (CNonCanonical)
                [W] cobox_aHy :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:53:37-45] (CNonCanonical)
                [W] cobox_aHz :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:53:57-190] (CNonCanonical)
                [W] cobox_aHA :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:57-159] (CNonCanonical)
                [W] cobox_aHB :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:57-98] (CNonCanonical)
                [W] cobox_aHD :: [a_aHC] ~ String [" a type equality [a_aHC]
                                                                     ~
                                                                     String " HTML3.hs:53:64-97] (CNonCanonical)
                [W] cobox_aHE :: [Char] ~ [a_aHC] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHC] " HTML3.hs:53:64-66] (CNonCanonical)
                [W] cobox_aHG :: [a_aHF] ~ [a_aHC] [" a type equality [a_aHF]
                                                                      ~
                                                                      [a_aHC] " HTML3.hs:53:71-97] (CNonCanonical)
                [W] cobox_aHH :: String ~ [a_aHF] [" a type equality String
                                                                     ~
                                                                     [a_aHF] " HTML3.hs:53:71-73] (CNonCanonical)
                [W] cobox_aHJ :: [a_aHI] ~ [a_aHF] [" a type equality [a_aHI]
                                                                      ~
                                                                      [a_aHF] " HTML3.hs:53:78-97] (CNonCanonical)
                [W] cobox_aHK :: t_aCW ~ [a_aHI] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aHI] " HTML3.hs:53:78-90] (CNonCanonical)
                [W] cobox_aHL :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
                [W] cobox_aHM :: [Char] ~ [a_aHI] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHI] " HTML3.hs:53:95-97] (CNonCanonical)
                [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                                ~
                                                                Doc " HTML3.hs:53:105-158] (CNonCanonical)
                [W] cobox_aHQ :: (Doc -> Doc -> Doc)
                                 ~ (a_aHN -> b_aHO -> b_aHO) [" a type equality Doc -> Doc -> Doc
                                                                                ~
                                                                                a_aHN
                                                                                -> b_aHO
                                                                                -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
                [W] cobox_aHR :: Doc ~ b_aHO [" a type equality Doc
                                                                ~
                                                                b_aHO " HTML3.hs:53:117-120] (CNonCanonical)
                [W] cobox_aHU :: [b_aHT] ~ [a_aHN] [" a type equality [b_aHT]
                                                                      ~
                                                                      [a_aHN] " HTML3.hs:53:123-157] (CNonCanonical)
                [W] cobox_aHV :: (Doc -> Doc)
                                 ~ (a_aHS -> b_aHT) [" a type equality Doc -> Doc
                                                                       ~
                                                                       a_aHS
                                                                       -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
                [W] cobox_aHY :: [b_aHX] ~ [a_aHS] [" a type equality [b_aHX]
                                                                      ~
                                                                      [a_aHS] " HTML3.hs:53:141-156] (CNonCanonical)
                [W] cobox_aHZ :: (t_aD3 -> t_aD4)
                                 ~ (a_aHW -> b_aHX) [" a type equality t_aD3 -> t_aD4
                                                                       ~
                                                                       a_aHW
                                                                       -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
                [W] cobox_aI0 :: [HTML] ~ [a_aHW] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aHW] " HTML3.hs:53:152-156] (CNonCanonical)
                [W] cobox_aI1 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:165-190] (CNonCanonical)
                [W] cobox_aI3 :: [a_aI2] ~ String [" a type equality [a_aI2]
                                                                     ~
                                                                     String " HTML3.hs:53:172-189] (CNonCanonical)
                [W] cobox_aI4 :: [Char] ~ [a_aI2] [" a type equality [Char]
                                                                     ~
                                                                     [a_aI2] " HTML3.hs:53:172-175] (CNonCanonical)
                [W] cobox_aI6 :: [a_aI5] ~ [a_aI2] [" a type equality [a_aI5]
                                                                      ~
                                                                      [a_aI2] " HTML3.hs:53:180-189] (CNonCanonical)
                [W] cobox_aI7 :: String ~ [a_aI5] [" a type equality String
                                                                     ~
                                                                     [a_aI5] " HTML3.hs:53:180-182] (CNonCanonical)
                [W] cobox_aI8 :: [Char] ~ [a_aI5] [" a type equality [Char]
                                                                     ~
                                                                     [a_aI5] " HTML3.hs:53:187-189] (CNonCanonical)
                [W] cobox_aIb :: [t_aIa] ~ t_aD7 [" a type equality [t_aIa]
                                                                    ~
                                                                    t_aD7 " HTML3.hs:(42,10)-(43,59)] (CNonCanonical)
                [W] cobox_aIe :: (t_aIc, t_aId) ~ t_aIa [" a type equality (t_aIc,
                                                                            t_aId)
                                                                           ~
                                                                           t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
                [W] cobox_aIf :: [Char] ~ t_aIc [" a type equality [Char]
                                                                   ~
                                                                   t_aIc " HTML3.hs:42:12-15] (CNonCanonical)
                [W] cobox_aIg :: [Char] ~ t_aId [" a type equality [Char]
                                                                   ~
                                                                   t_aId " HTML3.hs:42:18-21] (CNonCanonical)
                [W] cobox_aIj :: (t_aIh, t_aIi) ~ t_aIa [" a type equality (t_aIh,
                                                                            t_aIi)
                                                                           ~
                                                                           t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
                [W] cobox_aIk :: [Char] ~ t_aIh [" a type equality [Char]
                                                                   ~
                                                                   t_aIh " HTML3.hs:42:26-31] (CNonCanonical)
                [W] cobox_aIl :: [Char] ~ t_aIi [" a type equality [Char]
                                                                   ~
                                                                   t_aIi " HTML3.hs:42:34-39] (CNonCanonical)
                [W] cobox_aIo :: (t_aIm, t_aIn) ~ t_aIa [" a type equality (t_aIm,
                                                                            t_aIn)
                                                                           ~
                                                                           t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
                [W] cobox_aIp :: [Char] ~ t_aIm [" a type equality [Char]
                                                                   ~
                                                                   t_aIm " HTML3.hs:42:44-49] (CNonCanonical)
                [W] cobox_aIq :: [Char] ~ t_aIn [" a type equality [Char]
                                                                   ~
                                                                   t_aIn " HTML3.hs:42:52-57] (CNonCanonical)
                [W] cobox_aIt :: (t_aIr, t_aIs) ~ t_aIa [" a type equality (t_aIr,
                                                                            t_aIs)
                                                                           ~
                                                                           t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
                [W] cobox_aIu :: [Char] ~ t_aIr [" a type equality [Char]
                                                                   ~
                                                                   t_aIr " HTML3.hs:43:12-17] (CNonCanonical)
                [W] cobox_aIv :: [Char] ~ t_aIs [" a type equality [Char]
                                                                   ~
                                                                   t_aIs " HTML3.hs:43:20-22] (CNonCanonical)
                [W] cobox_aIy :: (t_aIw, t_aIx) ~ t_aIa [" a type equality (t_aIw,
                                                                            t_aIx)
                                                                           ~
                                                                           t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
                [W] cobox_aIz :: [Char] ~ t_aIw [" a type equality [Char]
                                                                   ~
                                                                   t_aIw " HTML3.hs:43:27-32] (CNonCanonical)
                [W] cobox_aIA :: [Char] ~ t_aIx [" a type equality [Char]
                                                                   ~
                                                                   t_aIx " HTML3.hs:43:35-38] (CNonCanonical)
                [W] cobox_aID :: (t_aIB, t_aIC) ~ t_aIa [" a type equality (t_aIB,
                                                                            t_aIC)
                                                                           ~
                                                                           t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
                [W] cobox_aIE :: [Char] ~ t_aIB [" a type equality [Char]
                                                                   ~
                                                                   t_aIB " HTML3.hs:43:43-48] (CNonCanonical)
                [W] cobox_aIF :: [Char] ~ t_aIC [" a type equality [Char]
                                                                   ~
                                                                   t_aIC " HTML3.hs:43:51-57] (CNonCanonical)
                [W] cobox_aII :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                    ~
                                                                    t_aDo " HTML3.hs:37:9-20] (CNonCanonical)
                [W] cobox_aIK :: Maybe t_aIJ ~ t_aIH [" a type equality Maybe t_aIJ
                                                                        ~
                                                                        t_aIH " HTML3.hs:37:9-15] (CNonCanonical)
                [W] cobox_aIL :: t_aDp ~ t_aDp [" a type equality t_aDp
                                                                  ~
                                                                  t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
                [W] cobox_aIM :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                    ~
                                                                    t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
                [W] cobox_aIO :: [t_aIN] ~ t_aDo [" a type equality [t_aIN]
                                                                    ~
                                                                    t_aDo " HTML3.hs:38:8-9] (CNonCanonical)
                [W] cobox_aIQ :: Maybe a_aIP ~ t_aDp [" a type equality Maybe a_aIP
                                                                        ~
                                                                        t_aDp " HTML3.hs:38:25-31] (CNonCanonical)
                [W] cobox_aIS :: [t_aIR] ~ t_aDo [" a type equality [t_aIR]
                                                                    ~
                                                                    t_aDo " HTML3.hs:39:9-16] (CNonCanonical)
                [W] cobox_aIU :: Maybe t_aIT ~ t_aIR [" a type equality Maybe t_aIT
                                                                        ~
                                                                        t_aIR " HTML3.hs:39:9-14] (CNonCanonical)
                [W] cobox_aIW :: Maybe a_aIV ~ t_aDp [" a type equality Maybe a_aIV
                                                                        ~
                                                                        t_aDp " HTML3.hs:39:25-30] (CNonCanonical)
                [W] cobox_aIX :: t_aIT ~ a_aIV [" a type equality t_aIT
                                                                  ~
                                                                  a_aIV " HTML3.hs:39:30] (CNonCanonical)
                [W] cobox_aIZ :: HTML ~ t_aDG [" a type equality HTML
                                                                 ~
                                                                 t_aDG " HTML3.hs:14:13-137] (CNonCanonical)
                [W] cobox_aJ0 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:23-28] (CNonCanonical)
                [W] cobox_aJ1 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:32-38] (CNonCanonical)
                [W] cobox_aJ2 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:40-45] (CNonCanonical)
                [W] cobox_aJ3 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:51-62] (CNonCanonical)
                [W] cobox_aJ4 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:56-62] (CNonCanonical)
                [W] cobox_aJ5 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:66-98] (CNonCanonical)
                [W] cobox_aJ6 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:76-80] (CNonCanonical)
                [W] cobox_aJ7 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:84-90] (CNonCanonical)
                [W] cobox_aJ8 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:92-96] (CNonCanonical)
                [W] cobox_aJ9 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:102-135] (CNonCanonical)
                [W] cobox_aJa :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:112-116] (CNonCanonical)
                [W] cobox_aJb :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:120-126] (CNonCanonical)
                [W] cobox_aJc :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:128-133] (CNonCanonical)
                [W] cobox_aJf :: a_aJe ~ (t_aDI -> t_aDJ) [" a type equality a_aJe
                                                                             ~
                                                                             t_aDI
                                                                             -> t_aDJ " HTML3.hs:8:7-15] (CNonCanonical)
                [W] cobox_aJi :: a_aJh ~ (t_aDM -> t_aDN) [" a type equality a_aJh
                                                                             ~
                                                                             t_aDM
                                                                             -> t_aDN " HTML3.hs:6:11-19] (CNonCanonical)
                [W] $dOrd_aJx :: Ord
                                   a_aJw [" a use of ‘<’ " HTML3.hs:73:25] (CNonCanonical)
                [W] cobox_aJy :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:73:19-28] (CNonCanonical)
                [W] cobox_aJz :: t_aCJ ~ a_aJw [" a type equality t_aCJ
                                                                  ~
                                                                  a_aJw " HTML3.hs:73:19-23] (CNonCanonical)
                [W] $dNum_aJB :: Num
                                   a_aJA [" the literal ‘10’ " HTML3.hs:73:27-28] (CNonCanonical)
                [W] cobox_aJC :: (Integer -> a_aJA)
                                 ~ (Integer -> a_aJw) [" a type equality Integer -> a_aJA
                                                                         ~
                                                                         Integer
                                                                         -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
                [W] cobox_aJD :: t_aDN ~ t_aCK [" a type equality t_aDN
                                                                  ~
                                                                  t_aCK " HTML3.hs:73:32-44] (CNonCanonical)
                [W] cobox_aJE :: t_aCJ ~ t_aDM [" a type equality t_aCJ
                                                                  ~
                                                                  t_aDM " HTML3.hs:73:40-44] (CNonCanonical)
                [W] cobox_aJF :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:74:19-27] (CNonCanonical)
                [W] cobox_aJH :: [t_aJG] ~ t_aCK [" a type equality [t_aJG]
                                                                    ~
                                                                    t_aCK " HTML3.hs:74:32-49] (CNonCanonical)
                [W] cobox_aJI :: t_aDJ ~ t_aJG [" a type equality t_aDJ
                                                                  ~
                                                                  t_aJG " HTML3.hs:74:33-48] (CNonCanonical)
                [W] $dNum_aJK :: Num
                                   a_aJJ [" a use of ‘+’ " HTML3.hs:74:44] (CNonCanonical)
                [W] cobox_aJL :: a_aJJ ~ t_aDI [" a type equality a_aJJ
                                                                  ~
                                                                  t_aDI " HTML3.hs:74:38-47] (CNonCanonical)
                [W] cobox_aJM :: t_aCJ ~ a_aJJ [" a type equality t_aCJ
                                                                  ~
                                                                  a_aJJ " HTML3.hs:74:38-42] (CNonCanonical)
                [W] $dNum_aJO :: Num
                                   a_aJN [" the literal ‘55’ " HTML3.hs:74:46-47] (CNonCanonical)
                [W] cobox_aJP :: (Integer -> a_aJN)
                                 ~ (Integer -> a_aJJ) [" a type equality Integer -> a_aJN
                                                                         ~
                                                                         Integer
                                                                         -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
                [W] cobox_aJU :: t_aJR ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                                             ~
                                                                             t_aJS
                                                                             -> t_aJT " HTML3.hs:70:19-86] (CNonCanonical)
                [W] cobox_aJW :: [a_aJV] ~ t_aJT [" a type equality [a_aJV]
                                                                    ~
                                                                    t_aJT " HTML3.hs:70:35-86] (CNonCanonical)
                [W] cobox_aJX :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                    ~
                                                                    [a_aJV] " HTML3.hs:70:35-56] (CNonCanonical)
                [W] $dFractional_aK7 :: Fractional
                                          a_aK6 [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
                [W] cobox_aK8 :: a_aK6 ~ t_aCJ [" a type equality a_aK6
                                                                  ~
                                                                  t_aCJ " HTML3.hs:70:46-55] (CNonCanonical)
                [W] cobox_aK9 :: t_aJS ~ a_aK6 [" a type equality t_aJS
                                                                  ~
                                                                  a_aK6 " HTML3.hs:70:46-50] (CNonCanonical)
                [W] $dNum_aKb :: Num
                                   a_aKa [" the literal ‘16’ " HTML3.hs:70:54-55] (CNonCanonical)
                [W] cobox_aKc :: (Integer -> a_aKa)
                                 ~ (Integer -> a_aK6) [" a type equality Integer -> a_aKa
                                                                         ~
                                                                         Integer
                                                                         -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
                [W] cobox_aKd :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                    ~
                                                                    [a_aJV] " HTML3.hs:70:61-86] (CNonCanonical)
                [W] $dIntegral_aKs :: Integral
                                        a_aKr [" a use of ‘rem’ " HTML3.hs:70:78-82] (CNonCanonical)
                [W] cobox_aKt :: a_aKr ~ t_aCJ [" a type equality a_aKr
                                                                  ~
                                                                  t_aCJ " HTML3.hs:70:72-85] (CNonCanonical)
                [W] cobox_aKu :: t_aJS ~ a_aKr [" a type equality t_aJS
                                                                  ~
                                                                  a_aKr " HTML3.hs:70:72-76] (CNonCanonical)
                [W] $dNum_aKw :: Num
                                   a_aKv [" the literal ‘16’ " HTML3.hs:70:84-85] (CNonCanonical)
                [W] cobox_aKx :: (Integer -> a_aKv)
                                 ~ (Integer -> a_aKr) [" a type equality Integer -> a_aKv
                                                                         ~
                                                                         Integer
                                                                         -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
                [W] cobox_aKz :: [a_aKy] ~ t_aCQ [" a type equality [a_aKy]
                                                                    ~
                                                                    t_aCQ " HTML3.hs:69:15-56] (CNonCanonical)
                [W] cobox_aKA :: [Char] ~ [a_aKy] [" a type equality [Char]
                                                                     ~
                                                                     [a_aKy] " HTML3.hs:69:15-17] (CNonCanonical)
                [W] cobox_aKC :: [a_aKB] ~ [a_aKy] [" a type equality [a_aKB]
                                                                      ~
                                                                      [a_aKy] " HTML3.hs:69:22-56] (CNonCanonical)
                [W] cobox_aKF :: t_aJR ~ (t_aKD -> t_aKE) [" a type equality t_aJR
                                                                             ~
                                                                             t_aKD
                                                                             -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
                [W] cobox_aKG :: t_aKE ~ [a_aKB] [" a type equality t_aKE
                                                                    ~
                                                                    [a_aKB] " HTML3.hs:69:22-30] (CNonCanonical)
                [W] cobox_aKH :: t_aCN ~ t_aKD [" a type equality t_aCN
                                                                  ~
                                                                  t_aKD " HTML3.hs:69:30] (CNonCanonical)
                [W] cobox_aKJ :: [a_aKI] ~ [a_aKB] [" a type equality [a_aKI]
                                                                      ~
                                                                      [a_aKB] " HTML3.hs:69:35-56] (CNonCanonical)
                [W] cobox_aKM :: t_aJR ~ (t_aKK -> t_aKL) [" a type equality t_aJR
                                                                             ~
                                                                             t_aKK
                                                                             -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
                [W] cobox_aKN :: t_aKL ~ [a_aKI] [" a type equality t_aKL
                                                                    ~
                                                                    [a_aKI] " HTML3.hs:69:35-43] (CNonCanonical)
                [W] cobox_aKO :: t_aCO ~ t_aKK [" a type equality t_aCO
                                                                  ~
                                                                  t_aKK " HTML3.hs:69:43] (CNonCanonical)
                [W] cobox_aKR :: t_aJR ~ (t_aKP -> t_aKQ) [" a type equality t_aJR
                                                                             ~
                                                                             t_aKP
                                                                             -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
                [W] cobox_aKS :: t_aKQ ~ [a_aKI] [" a type equality t_aKQ
                                                                    ~
                                                                    [a_aKI] " HTML3.hs:69:48-56] (CNonCanonical)
                [W] cobox_aKT :: t_aCP ~ t_aKP [" a type equality t_aCP
                                                                  ~
                                                                  t_aKP " HTML3.hs:69:56] (CNonCanonical)
                [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX)
                                 ~ t_aCx [" a type equality (t_aKV, t_aKW, t_aKX)
                                                            ~
                                                            t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
                [W] cobox_aKZ :: HTML ~ t_aCy [" a type equality HTML
                                                                 ~
                                                                 t_aCy " HTML3.hs:89:22-64] (CNonCanonical)
                [W] cobox_aL0 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:89:32-35] (CNonCanonical)
                [W] cobox_aL1 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:89:39-47] (CNonCanonical)
                [W] cobox_aL2 :: t_aCQ ~ String [" a type equality t_aCQ
                                                                   ~
                                                                   String " HTML3.hs:89:49-59] (CNonCanonical)
                [W] cobox_aL3 :: t_aKV ~ t_aCN [" a type equality t_aKV
                                                                  ~
                                                                  t_aCN " HTML3.hs:89:55] (CNonCanonical)
                [W] cobox_aL4 :: t_aKW ~ t_aCO [" a type equality t_aKW
                                                                  ~
                                                                  t_aCO " HTML3.hs:89:57] (CNonCanonical)
                [W] cobox_aL5 :: t_aKX ~ t_aCP [" a type equality t_aKX
                                                                  ~
                                                                  t_aCP " HTML3.hs:89:59] (CNonCanonical)
                [W] cobox_aL7 :: HTML ~ t_aCC [" a type equality HTML
                                                                 ~
                                                                 t_aCC " HTML3.hs:86:18-56] (CNonCanonical)
                [W] cobox_aL8 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:86:28-31] (CNonCanonical)
                [W] cobox_aLb :: [b_aLa] ~ [HTML] [" a type equality [b_aLa]
                                                                     ~
                                                                     [HTML] " HTML3.hs:86:37-55] (CNonCanonical)
                [W] cobox_aLc :: (t_aCx -> t_aCy)
                                 ~ (a_aL9 -> b_aLa) [" a type equality t_aCx -> t_aCy
                                                                       ~
                                                                       a_aL9
                                                                       -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
                [W] cobox_aLd :: t_aCB ~ [a_aL9] [" a type equality t_aCB
                                                                    ~
                                                                    [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
                [W] cobox_aLf :: HTML ~ t_aCG [" a type equality HTML
                                                                 ~
                                                                 t_aCG " HTML3.hs:83:22-95] (CNonCanonical)
                [W] cobox_aLg :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:32-38] (CNonCanonical)
                [W] cobox_aLh :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:42-48] (CNonCanonical)
                [W] cobox_aLi :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:50-54] (CNonCanonical)
                [W] cobox_aLj :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:58-65] (CNonCanonical)
                [W] cobox_aLk :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:67-71] (CNonCanonical)
                [W] cobox_aLn :: [b_aLm] ~ [HTML] [" a type equality [b_aLm]
                                                                     ~
                                                                     [HTML] " HTML3.hs:83:76-94] (CNonCanonical)
                [W] cobox_aLo :: (t_aCB -> t_aCC)
                                 ~ (a_aLl -> b_aLm) [" a type equality t_aCB -> t_aCC
                                                                       ~
                                                                       a_aLl
                                                                       -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
                [W] cobox_aLp :: t_aCF ~ [a_aLl] [" a type equality t_aCF
                                                                    ~
                                                                    [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
                [W] cobox_aLr :: HTML ~ t_aCi [" a type equality HTML
                                                                 ~
                                                                 t_aCi " HTML3.hs:98:20-70] (CNonCanonical)
                [W] cobox_aLt :: [a_aLs] ~ String [" a type equality [a_aLs]
                                                                     ~
                                                                     String " HTML3.hs:98:31-52] (CNonCanonical)
                [W] cobox_aLu :: [Char] ~ [a_aLs] [" a type equality [Char]
                                                                     ~
                                                                     [a_aLs] " HTML3.hs:98:31-33] (CNonCanonical)
                [W] cobox_aLv :: t_aDN ~ [a_aLs] [" a type equality t_aDN
                                                                    ~
                                                                    [a_aLs] " HTML3.hs:98:38-52] (CNonCanonical)
                [W] cobox_aLw :: t_aCg ~ t_aDM [" a type equality t_aCg
                                                                  ~
                                                                  t_aDM " HTML3.hs:98:46-52] (CNonCanonical)
                [W] cobox_aLx :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:98:59-69] (CNonCanonical)
                [W] cobox_aLy :: t_aCh ~ String [" a type equality t_aCh
                                                                   ~
                                                                   String " HTML3.hs:98:64-69] (CNonCanonical)
                [W] cobox_aLA :: t_aC2 ~ t_aBY [" a type equality t_aC2
                                                                  ~
                                                                  t_aBY " HTML3.hs:(110,16)-(112,111)] (CNonCanonical)
                [W] cobox_aLB :: [Char] ~ t_aC0 [" a type equality [Char]
                                                                   ~
                                                                   t_aC0 " HTML3.hs:110:25-38] (CNonCanonical)
                [W] cobox_aLD :: [t_aLC] ~ t_aC1 [" a type equality [t_aLC]
                                                                    ~
                                                                    t_aC1 " HTML3.hs:(110,40)-(112,111)] (CNonCanonical)
                [W] cobox_aLE :: t_aCi ~ t_aLC [" a type equality t_aCi
                                                                  ~
                                                                  t_aLC " HTML3.hs:110:42-59] (CNonCanonical)
                [W] $dNum_aLG :: Num
                                   a_aLF [" the literal ‘1’ " HTML3.hs:110:44] (CNonCanonical)
                [W] cobox_aLH :: (Integer -> a_aLF)
                                 ~ (Integer -> t_aCg) [" a type equality Integer -> a_aLF
                                                                         ~
                                                                         Integer
                                                                         -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
                [W] cobox_aLI :: [Char] ~ t_aCh [" a type equality [Char]
                                                                   ~
                                                                   t_aCh " HTML3.hs:110:46-59] (CNonCanonical)
                [W] cobox_aLJ :: t_aCr ~ t_aLC [" a type equality t_aCr
                                                                  ~
                                                                  t_aLC " HTML3.hs:111:41-343] (CNonCanonical)
                [W] cobox_aLL :: [t_aLK] ~ t_aCq [" a type equality [t_aLK]
                                                                    ~
                                                                    t_aCq " HTML3.hs:111:44-343] (CNonCanonical)
                [W] cobox_aLN :: [t_aLM] ~ t_aLK [" a type equality [t_aLM]
                                                                    ~
                                                                    t_aLK " HTML3.hs:111:45-160] (CNonCanonical)
                [W] cobox_aLO :: t_aCc ~ t_aLM [" a type equality t_aCc
                                                                  ~
                                                                  t_aLM " HTML3.hs:111:46-85] (CNonCanonical)
                [W] cobox_aLQ :: [t_aLP] ~ t_aCa [" a type equality [t_aLP]
                                                                    ~
                                                                    t_aCa " HTML3.hs:111:51-71] (CNonCanonical)
                [W] cobox_aLT :: (t_aLR, t_aLS) ~ t_aLP [" a type equality (t_aLR,
                                                                            t_aLS)
                                                                           ~
                                                                           t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
                [W] cobox_aLU :: [Char] ~ t_aLR [" a type equality [Char]
                                                                   ~
                                                                   t_aLR " HTML3.hs:111:53-59] (CNonCanonical)
                [W] cobox_aLV :: [Char] ~ t_aLS [" a type equality [Char]
                                                                   ~
                                                                   t_aLS " HTML3.hs:111:61-69] (CNonCanonical)
                [W] cobox_aLX :: [t_aLW] ~ t_aCb [" a type equality [t_aLW]
                                                                    ~
                                                                    t_aCb " HTML3.hs:111:73-85] (CNonCanonical)
                [W] cobox_aLY :: t_aC7 ~ t_aLW [" a type equality t_aC7
                                                                  ~
                                                                  t_aLW " HTML3.hs:111:74-84] (CNonCanonical)
                [W] cobox_aLZ :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:79-84] (CNonCanonical)
                [W] cobox_aM0 :: t_aC7 ~ t_aLM [" a type equality t_aC7
                                                                  ~
                                                                  t_aLM " HTML3.hs:111:88-159] (CNonCanonical)
                [W] cobox_aM1 :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:93-159] (CNonCanonical)
                [W] cobox_aM3 :: [t_aM2] ~ t_aLK [" a type equality [t_aM2]
                                                                    ~
                                                                    t_aLK " HTML3.hs:111:162-278] (CNonCanonical)
                [W] cobox_aM4 :: t_aCc ~ t_aM2 [" a type equality t_aCc
                                                                  ~
                                                                  t_aM2 " HTML3.hs:111:163-203] (CNonCanonical)
                [W] cobox_aM6 :: [t_aM5] ~ t_aCa [" a type equality [t_aM5]
                                                                    ~
                                                                    t_aCa " HTML3.hs:111:168-188] (CNonCanonical)
                [W] cobox_aM9 :: (t_aM7, t_aM8) ~ t_aM5 [" a type equality (t_aM7,
                                                                            t_aM8)
                                                                           ~
                                                                           t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
                [W] cobox_aMa :: [Char] ~ t_aM7 [" a type equality [Char]
                                                                   ~
                                                                   t_aM7 " HTML3.hs:111:170-176] (CNonCanonical)
                [W] cobox_aMb :: [Char] ~ t_aM8 [" a type equality [Char]
                                                                   ~
                                                                   t_aM8 " HTML3.hs:111:178-186] (CNonCanonical)
                [W] cobox_aMd :: [t_aMc] ~ t_aCb [" a type equality [t_aMc]
                                                                    ~
                                                                    t_aCb " HTML3.hs:111:190-203] (CNonCanonical)
                [W] cobox_aMe :: t_aC7 ~ t_aMc [" a type equality t_aC7
                                                                  ~
                                                                  t_aMc " HTML3.hs:111:191-202] (CNonCanonical)
                [W] cobox_aMf :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:196-202] (CNonCanonical)
                [W] cobox_aMg :: t_aC7 ~ t_aM2 [" a type equality t_aC7
                                                                  ~
                                                                  t_aM2 " HTML3.hs:111:206-277] (CNonCanonical)
                [W] cobox_aMh :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:211-277] (CNonCanonical)
                [W] cobox_aMj :: [t_aMi] ~ t_aLK [" a type equality [t_aMi]
                                                                    ~
                                                                    t_aLK " HTML3.hs:111:280-342] (CNonCanonical)
                [W] cobox_aMk :: t_aCc ~ t_aMi [" a type equality t_aCc
                                                                  ~
                                                                  t_aMi " HTML3.hs:111:281-321] (CNonCanonical)
                [W] cobox_aMm :: [t_aMl] ~ t_aCa [" a type equality [t_aMl]
                                                                    ~
                                                                    t_aCa " HTML3.hs:111:286-306] (CNonCanonical)
                [W] cobox_aMp :: (t_aMn, t_aMo) ~ t_aMl [" a type equality (t_aMn,
                                                                            t_aMo)
                                                                           ~
                                                                           t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
                [W] cobox_aMq :: [Char] ~ t_aMn [" a type equality [Char]
                                                                   ~
                                                                   t_aMn " HTML3.hs:111:288-294] (CNonCanonical)
                [W] cobox_aMr :: [Char] ~ t_aMo [" a type equality [Char]
                                                                   ~
                                                                   t_aMo " HTML3.hs:111:296-304] (CNonCanonical)
                [W] cobox_aMt :: [t_aMs] ~ t_aCb [" a type equality [t_aMs]
                                                                    ~
                                                                    t_aCb " HTML3.hs:111:308-321] (CNonCanonical)
                [W] cobox_aMu :: t_aC7 ~ t_aMs [" a type equality t_aC7
                                                                  ~
                                                                  t_aMs " HTML3.hs:111:309-320] (CNonCanonical)
                [W] cobox_aMv :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:314-320] (CNonCanonical)
                [W] cobox_aMw :: t_aC7 ~ t_aMi [" a type equality t_aC7
                                                                  ~
                                                                  t_aMi " HTML3.hs:111:324-341] (CNonCanonical)
                [W] cobox_aMx :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:329-341] (CNonCanonical)
                [W] cobox_aMy :: t_aCG ~ t_aLC [" a type equality t_aCG
                                                                  ~
                                                                  t_aLC " HTML3.hs:112:41-109] (CNonCanonical)
                [W] cobox_aMA :: [t_aMz] ~ t_aCF [" a type equality [t_aMz]
                                                                    ~
                                                                    t_aCF " HTML3.hs:112:52-109] (CNonCanonical)
                [W] cobox_aMC :: [t_aMB] ~ t_aMz [" a type equality [t_aMB]
                                                                    ~
                                                                    t_aMz " HTML3.hs:112:53-108] (CNonCanonical)
                [W] $dNum_aMF :: Num
                                   a_aME [" the literal ‘0’ " HTML3.hs:112:70] (CNonCanonical)
                [W] cobox_aMG :: (Integer -> a_aME)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aME
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
                [W] $dNum_aMI :: Num
                                   a_aMH [" the literal ‘25’ " HTML3.hs:112:72-73] (CNonCanonical)
                [W] cobox_aMJ :: (Integer -> a_aMH)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMH
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
                [W] $dNum_aML :: Num
                                   a_aMK [" the literal ‘250’ " HTML3.hs:112:76-78] (CNonCanonical)
                [W] cobox_aMM :: (Integer -> a_aMK)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMK
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
                [W] $dEnum_aOJ :: Enum
                                    t_aMD [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CNonCanonical)
                [W] $dNum_aOM :: Num
                                   a_aOL [" the literal ‘0’ " HTML3.hs:112:88] (CNonCanonical)
                [W] cobox_aON :: (Integer -> a_aOL)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOL
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
                [W] $dNum_aOP :: Num
                                   a_aOO [" the literal ‘25’ " HTML3.hs:112:90-91] (CNonCanonical)
                [W] cobox_aOQ :: (Integer -> a_aOO)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOO
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
                [W] $dNum_aOS :: Num
                                   a_aOR [" the literal ‘250’ " HTML3.hs:112:94-96] (CNonCanonical)
                [W] cobox_aOT :: (Integer -> a_aOR)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOR
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
                [W] $dEnum_aOU :: Enum
                                    t_aOK [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CNonCanonical)
                [W] $dNum_aOX :: Num
                                   a_aOW [" the literal ‘0’ " HTML3.hs:112:106] (CNonCanonical)
                [W] cobox_aOY :: (Integer -> a_aOW)
                                 ~ (Integer -> t_aOV) [" a type equality Integer -> a_aOW
                                                                         ~
                                                                         Integer
                                                                         -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
                [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1)
                                 ~ t_aMB [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                            ~
                                                            t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
                [W] cobox_aP3 :: t_aMD ~ t_aOZ [" a type equality t_aMD
                                                                  ~
                                                                  t_aOZ " HTML3.hs:112:55] (CNonCanonical)
                [W] cobox_aP4 :: t_aOK ~ t_aP0 [" a type equality t_aOK
                                                                  ~
                                                                  t_aP0 " HTML3.hs:112:57] (CNonCanonical)
                [W] cobox_aP5 :: t_aOV ~ t_aP1 [" a type equality t_aOV
                                                                  ~
                                                                  t_aP1 " HTML3.hs:112:59] (CNonCanonical)
                [W] cobox_aP7 :: IO () ~ t_aBW [" a type equality IO ()
                                                                  ~
                                                                  t_aBW " HTML3.hs:115:8-35] (CNonCanonical)
                [W] cobox_aP8 :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                ~
                                                                Doc " HTML3.hs:115:16-34] (CNonCanonical)
                [W] cobox_aP9 :: t_aBY ~ t_aD3 [" a type equality t_aBY
                                                                  ~
                                                                  t_aD3 " HTML3.hs:115:23-34] (CNonCanonical)
                [W] cobox_aPc :: a_aPb
                                 ~ (t_aDQ -> t_aDR -> t_aDS) [" a type equality a_aPb
                                                                                ~
                                                                                t_aDQ
                                                                                -> t_aDR
                                                                                -> t_aDS " HTML3.hs:4:12-20] (CNonCanonical)
                [W] cobox_aPe :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:21:11-16] (CNonCanonical)
                [W] cobox_aPg :: Maybe a_aPf ~ t_aDC [" a type equality Maybe a_aPf
                                                                        ~
                                                                        t_aDC " HTML3.hs:21:32-38] (CNonCanonical)
                [W] cobox_aPh :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:22:11-23] (CNonCanonical)
                [W] cobox_aPj :: Maybe a_aPi ~ t_aDC [" a type equality Maybe a_aPi
                                                                        ~
                                                                        t_aDC " HTML3.hs:22:32-38] (CNonCanonical)
                [W] cobox_aPk :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:23:11-31] (CNonCanonical)
                [W] cobox_aPl :: t_aDS ~ Bool [" a type equality t_aDS
                                                                 ~
                                                                 Bool " HTML3.hs:23:40-61] (CNonCanonical)
                [W] cobox_aPm :: String ~ t_aDQ [" a type equality String
                                                                   ~
                                                                   t_aDQ " HTML3.hs:23:49-51] (CNonCanonical)
                [W] cobox_aPp :: b_aPo ~ t_aDR [" a type equality b_aPo
                                                                  ~
                                                                  t_aDR " HTML3.hs:23:54-60] (CNonCanonical)
                [W] cobox_aPq :: t_aDB ~ (a_aPn, b_aPo) [" a type equality t_aDB
                                                                           ~
                                                                           (a_aPn,
                                                                            b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
                [W] cobox_aPs :: Maybe a_aPr ~ t_aDC [" a type equality Maybe a_aPr
                                                                        ~
                                                                        t_aDC " HTML3.hs:23:65-72] (CNonCanonical)
                [W] cobox_aPt :: t_aDB ~ a_aPr [" a type equality t_aDB
                                                                  ~
                                                                  a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
                [W] cobox_aPu :: t_aDS ~ Bool [" a type equality t_aDS
                                                                 ~
                                                                 Bool " HTML3.hs:24:40-61] (CNonCanonical)
                [W] cobox_aPv :: String ~ t_aDQ [" a type equality String
                                                                   ~
                                                                   t_aDQ " HTML3.hs:24:49-51] (CNonCanonical)
                [W] cobox_aPy :: a_aPw ~ t_aDR [" a type equality a_aPw
                                                                  ~
                                                                  t_aDR " HTML3.hs:24:54-60] (CNonCanonical)
                [W] cobox_aPz :: t_aDB ~ (a_aPw, b_aPx) [" a type equality t_aDB
                                                                           ~
                                                                           (a_aPw,
                                                                            b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
                [W] cobox_aPB :: Maybe a_aPA ~ t_aDC [" a type equality Maybe a_aPA
                                                                        ~
                                                                        t_aDC " HTML3.hs:24:65-71] (CNonCanonical)
                [W] cobox_aPC :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:25:40-48] (CNonCanonical)
                [W] cobox_aPD :: t_aDp ~ t_aDC [" a type equality t_aDp
                                                                  ~
                                                                  t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
                [W] cobox_aPG :: [b_aPF] ~ t_aDo [" a type equality [b_aPF]
                                                                    ~
                                                                    t_aDo " HTML3.hs:25:60-97] (CNonCanonical)
                [W] cobox_aPH :: t_aDC ~ b_aPF [" a type equality t_aDC
                                                                  ~
                                                                  b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
                [W] cobox_aPI :: a_aPE ~ t_aDA [" a type equality a_aPE
                                                                  ~
                                                                  t_aDA " HTML3.hs:25:83-86] (CNonCanonical)
                [W] cobox_aPJ :: t_aDB ~ t_aDB [" a type equality t_aDB
                                                                  ~
                                                                  t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
                [W] cobox_aPK :: [HTML] ~ [a_aPE] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aPE] " HTML3.hs:25:93-97] (CNonCanonical)
                [W] cobox_aPM :: t_aDp ~ t_aDv [" a type equality t_aDp
                                                                  ~
                                                                  t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
                [W] cobox_aPP :: [b_aPO] ~ t_aDo [" a type equality [b_aPO]
                                                                    ~
                                                                    t_aDo " HTML3.hs:28:30-53] (CNonCanonical)
                [W] cobox_aPQ :: (t_aDB -> t_aDC)
                                 ~ (a_aPN -> b_aPO) [" a type equality t_aDB -> t_aDC
                                                                       ~
                                                                       a_aPN
                                                                       -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
                [W] cobox_aPR :: t_aDu ~ t_aDA [" a type equality t_aDu
                                                                  ~
                                                                  t_aDA " HTML3.hs:28:44-47] (CNonCanonical)
                [W] cobox_aPS :: t_aDt ~ [a_aPN] [" a type equality t_aDt
                                                                    ~
                                                                    [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)}
Tc7a
checkMain not Main HTML3
Tc8
simplifyTop {
  wanted =  WC {wc_flat = [W] cobox_aBX :: IO ()
                                           ~ t_aBW [" a type equality IO ()
                                                                      ~
                                                                      t_aBW " HTML3.hs:114:9-13] (CNonCanonical)
                          [W] cobox_aBZ :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML3.hs:109:17-20] (CNonCanonical)
                          [W] cobox_aC3 :: String ~ t_aC0 [" a type equality String
                                                                             ~
                                                                             t_aC0 " HTML3.hs:106:13-36] (CNonCanonical)
                          [W] cobox_aC4 :: [HTML] ~ t_aC1 [" a type equality [HTML]
                                                                             ~
                                                                             t_aC1 " HTML3.hs:106:13-36] (CNonCanonical)
                          [W] cobox_aC5 :: HTML ~ t_aC2 [" a type equality HTML
                                                                           ~
                                                                           t_aC2 " HTML3.hs:106:13-36] (CNonCanonical)
                          [W] cobox_aC8 :: String ~ t_aC6 [" a type equality String
                                                                             ~
                                                                             t_aC6 " HTML3.hs:103:9-22] (CNonCanonical)
                          [W] cobox_aC9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                           ~
                                                                           t_aC7 " HTML3.hs:103:9-22] (CNonCanonical)
                          [W] cobox_aCd :: [Attribute] ~ t_aCa [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCa " HTML3.hs:100:9-37] (CNonCanonical)
                          [W] cobox_aCe :: [HTML] ~ t_aCb [" a type equality [HTML]
                                                                             ~
                                                                             t_aCb " HTML3.hs:100:9-37] (CNonCanonical)
                          [W] cobox_aCf :: HTML ~ t_aCc [" a type equality HTML
                                                                           ~
                                                                           t_aCc " HTML3.hs:100:9-37] (CNonCanonical)
                          [W] cobox_aCj :: Int ~ t_aCg [" a type equality Int
                                                                          ~
                                                                          t_aCg " HTML3.hs:97:6-26] (CNonCanonical)
                          [W] cobox_aCk :: String ~ t_aCh [" a type equality String
                                                                             ~
                                                                             t_aCh " HTML3.hs:97:6-26] (CNonCanonical)
                          [W] cobox_aCl :: HTML ~ t_aCi [" a type equality HTML
                                                                           ~
                                                                           t_aCi " HTML3.hs:97:6-26] (CNonCanonical)
                          [W] cobox_aCo :: [HTML] ~ t_aCm [" a type equality [HTML]
                                                                             ~
                                                                             t_aCm " HTML3.hs:94:7-20] (CNonCanonical)
                          [W] cobox_aCp :: HTML ~ t_aCn [" a type equality HTML
                                                                           ~
                                                                           t_aCn " HTML3.hs:94:7-20] (CNonCanonical)
                          [W] cobox_aCs :: [[HTML]] ~ t_aCq [" a type equality [[HTML]]
                                                                               ~
                                                                               t_aCq " HTML3.hs:91:7-22] (CNonCanonical)
                          [W] cobox_aCt :: HTML ~ t_aCr [" a type equality HTML
                                                                           ~
                                                                           t_aCr " HTML3.hs:91:7-22] (CNonCanonical)
                          [W] cobox_aCz :: (Int, Int, Int) ~ t_aCx [" a type equality (Int,
                                                                                       Int,
                                                                                       Int)
                                                                                      ~
                                                                                      t_aCx " HTML3.hs:88:13-35] (CNonCanonical)
                          [W] cobox_aCA :: HTML ~ t_aCy [" a type equality HTML
                                                                           ~
                                                                           t_aCy " HTML3.hs:88:13-35] (CNonCanonical)
                          [W] cobox_aCD :: [(Int, Int, Int)]
                                           ~ t_aCB [" a type equality [(Int, Int, Int)]
                                                                      ~
                                                                      t_aCB " HTML3.hs:85:12-36] (CNonCanonical)
                          [W] cobox_aCE :: HTML ~ t_aCC [" a type equality HTML
                                                                           ~
                                                                           t_aCC " HTML3.hs:85:12-36] (CNonCanonical)
                          [W] cobox_aCH :: [[(Int, Int, Int)]]
                                           ~ t_aCF [" a type equality [[(Int, Int, Int)]]
                                                                      ~
                                                                      t_aCF " HTML3.hs:82:15-41] (CNonCanonical)
                          [W] cobox_aCI :: HTML ~ t_aCG [" a type equality HTML
                                                                           ~
                                                                           t_aCG " HTML3.hs:82:15-41] (CNonCanonical)
                          [W] cobox_aCL :: Int ~ t_aCJ [" a type equality Int
                                                                          ~
                                                                          t_aCJ " HTML3.hs:72:14-26] (CNonCanonical)
                          [W] cobox_aCM :: String ~ t_aCK [" a type equality String
                                                                             ~
                                                                             t_aCK " HTML3.hs:72:14-26] (CNonCanonical)
                          [W] cobox_aCR :: Int ~ t_aCN [" a type equality Int
                                                                          ~
                                                                          t_aCN " HTML3.hs:68:10-36] (CNonCanonical)
                          [W] cobox_aCS :: Int ~ t_aCO [" a type equality Int
                                                                          ~
                                                                          t_aCO " HTML3.hs:68:10-36] (CNonCanonical)
                          [W] cobox_aCT :: Int ~ t_aCP [" a type equality Int
                                                                          ~
                                                                          t_aCP " HTML3.hs:68:10-36] (CNonCanonical)
                          [W] cobox_aCU :: String ~ t_aCQ [" a type equality String
                                                                             ~
                                                                             t_aCQ " HTML3.hs:68:10-36] (CNonCanonical)
                          [W] cobox_aCX :: [(String, String)]
                                           ~ t_aCV [" a type equality [(String, String)]
                                                                      ~
                                                                      t_aCV " HTML3.hs:60:13-40] (CNonCanonical)
                          [W] cobox_aCY :: String ~ t_aCW [" a type equality String
                                                                             ~
                                                                             t_aCW " HTML3.hs:60:13-40] (CNonCanonical)
                          [W] cobox_aD1 :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:55:9-22] (CNonCanonical)
                          [W] cobox_aD2 :: String ~ t_aD0 [" a type equality String
                                                                             ~
                                                                             t_aD0 " HTML3.hs:55:9-22] (CNonCanonical)
                          [W] cobox_aD5 :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:47:11-21] (CNonCanonical)
                          [W] cobox_aD6 :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:47:11-21] (CNonCanonical)
                          [W] cobox_aD8 :: [Requirement]
                                           ~ t_aD7 [" a type equality [Requirement]
                                                                      ~
                                                                      t_aD7 " HTML3.hs:41:11-23] (CNonCanonical)
                          [W] cobox_aDq :: [Maybe Requirement]
                                           ~ t_aDo [" a type equality [Maybe Requirement]
                                                                      ~
                                                                      t_aDo " HTML3.hs:36:11-50] (CNonCanonical)
                          [W] cobox_aDr :: Maybe Requirement ~ t_aDp [" a type equality Maybe
                                                                                          Requirement
                                                                                        ~
                                                                                        t_aDp " HTML3.hs:36:11-50] (CNonCanonical)
                          [W] cobox_aDw :: [Requirement]
                                           ~ t_aDt [" a type equality [Requirement]
                                                                      ~
                                                                      t_aDt " HTML3.hs:27:13-54] (CNonCanonical)
                          [W] cobox_aDx :: HTML ~ t_aDu [" a type equality HTML
                                                                           ~
                                                                           t_aDu " HTML3.hs:27:13-54] (CNonCanonical)
                          [W] cobox_aDy :: Maybe Requirement ~ t_aDv [" a type equality Maybe
                                                                                          Requirement
                                                                                        ~
                                                                                        t_aDv " HTML3.hs:27:13-54] (CNonCanonical)
                          [W] cobox_aDD :: HTML ~ t_aDA [" a type equality HTML
                                                                           ~
                                                                           t_aDA " HTML3.hs:20:13-52] (CNonCanonical)
                          [W] cobox_aDE :: Requirement ~ t_aDB [" a type equality Requirement
                                                                                  ~
                                                                                  t_aDB " HTML3.hs:20:13-52] (CNonCanonical)
                          [W] cobox_aDF :: Maybe Requirement ~ t_aDC [" a type equality Maybe
                                                                                          Requirement
                                                                                        ~
                                                                                        t_aDC " HTML3.hs:20:13-52] (CNonCanonical)
                          [W] cobox_aDH :: HTML ~ t_aDG [" a type equality HTML
                                                                           ~
                                                                           t_aDG " HTML3.hs:13:14-17] (CNonCanonical)
                          [W] cobox_aDK :: Int ~ t_aDI [" a type equality Int
                                                                          ~
                                                                          t_aDI " HTML3.hs:7:8-18] (CNonCanonical)
                          [W] cobox_aDL :: Char ~ t_aDJ [" a type equality Char
                                                                           ~
                                                                           t_aDJ " HTML3.hs:7:8-18] (CNonCanonical)
                          [W] cobox_aDO :: Int ~ t_aDM [" a type equality Int
                                                                          ~
                                                                          t_aDM " HTML3.hs:5:18-30] (CNonCanonical)
                          [W] cobox_aDP :: String ~ t_aDN [" a type equality String
                                                                             ~
                                                                             t_aDN " HTML3.hs:5:18-30] (CNonCanonical)
                          [W] cobox_aDT :: String ~ t_aDQ [" a type equality String
                                                                             ~
                                                                             t_aDQ " HTML3.hs:3:18-41] (CNonCanonical)
                          [W] cobox_aDU :: String ~ t_aDR [" a type equality String
                                                                             ~
                                                                             t_aDR " HTML3.hs:3:18-41] (CNonCanonical)
                          [W] cobox_aDV :: Bool ~ t_aDS [" a type equality Bool
                                                                           ~
                                                                           t_aDS " HTML3.hs:3:18-41] (CNonCanonical)
                          [W] cobox_aDX :: HTML ~ t_aC2 [" a type equality HTML
                                                                           ~
                                                                           t_aC2 " HTML3.hs:107:24-129] (CNonCanonical)
                          [W] cobox_aDY :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:107:34-39] (CNonCanonical)
                          [W] cobox_aDZ :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:107:45-100] (CNonCanonical)
                          [W] cobox_aE0 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:107:55-60] (CNonCanonical)
                          [W] cobox_aE1 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:107:66-98] (CNonCanonical)
                          [W] cobox_aE2 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:107:76-82] (CNonCanonical)
                          [W] cobox_aE3 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:107:88-97] (CNonCanonical)
                          [W] cobox_aE4 :: t_aC0 ~ String [" a type equality t_aC0
                                                                             ~
                                                                             String " HTML3.hs:107:93-97] (CNonCanonical)
                          [W] cobox_aE5 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:107:103-127] (CNonCanonical)
                          [W] cobox_aE6 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:107:113-118] (CNonCanonical)
                          [W] cobox_aE7 :: t_aC1 ~ [HTML] [" a type equality t_aC1
                                                                             ~
                                                                             [HTML] " HTML3.hs:107:123-127] (CNonCanonical)
                          [W] cobox_aE9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                           ~
                                                                           t_aC7 " HTML3.hs:104:15-25] (CNonCanonical)
                          [W] cobox_aEa :: t_aC6 ~ String [" a type equality t_aC6
                                                                             ~
                                                                             String " HTML3.hs:104:20-25] (CNonCanonical)
                          [W] cobox_aEc :: HTML ~ t_aCc [" a type equality HTML
                                                                           ~
                                                                           t_aCc " HTML3.hs:101:20-47] (CNonCanonical)
                          [W] cobox_aEd :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:101:30-35] (CNonCanonical)
                          [W] cobox_aEe :: t_aCa ~ [Attribute] [" a type equality t_aCa
                                                                                  ~
                                                                                  [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
                          [W] cobox_aEf :: t_aCb ~ [HTML] [" a type equality t_aCb
                                                                             ~
                                                                             [HTML] " HTML3.hs:101:43-47] (CNonCanonical)
                          [W] cobox_aEh :: HTML ~ t_aCn [" a type equality HTML
                                                                           ~
                                                                           t_aCn " HTML3.hs:95:12-34] (CNonCanonical)
                          [W] cobox_aEi :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:95:22-25] (CNonCanonical)
                          [W] cobox_aEj :: t_aCm ~ [HTML] [" a type equality t_aCm
                                                                             ~
                                                                             [HTML] " HTML3.hs:95:30-34] (CNonCanonical)
                          [W] cobox_aEl :: HTML ~ t_aCr [" a type equality HTML
                                                                           ~
                                                                           t_aCr " HTML3.hs:92:12-43] (CNonCanonical)
                          [W] cobox_aEm :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:92:22-25] (CNonCanonical)
                          [W] cobox_aEp :: [b_aEo] ~ [HTML] [" a type equality [b_aEo]
                                                                               ~
                                                                               [HTML] " HTML3.hs:92:31-42] (CNonCanonical)
                          [W] cobox_aEq :: (t_aCm -> t_aCn)
                                           ~ (a_aEn -> b_aEo) [" a type equality t_aCm -> t_aCn
                                                                                 ~
                                                                                 a_aEn
                                                                                 -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
                          [W] cobox_aEr :: t_aCq ~ [a_aEn] [" a type equality t_aCq
                                                                              ~
                                                                              [a_aEn] " HTML3.hs:92:38-42] (CNonCanonical)
                          [W] cobox_aEw :: t_aEt ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                                                       ~
                                                                                       t_aEu
                                                                                       -> t_aEv " HTML3.hs:62:41-96] (CNonCanonical)
                          [W] cobox_aEy :: [a_aEx] ~ t_aEv [" a type equality [a_aEx]
                                                                              ~
                                                                              t_aEv " HTML3.hs:62:56-96] (CNonCanonical)
                          [W] cobox_aED :: a_aEB ~ [a_aEx] [" a type equality a_aEB
                                                                              ~
                                                                              [a_aEx] " HTML3.hs:62:56-62] (CNonCanonical)
                          [W] cobox_aEE :: t_aEu ~ (a_aEB, b_aEC) [" a type equality t_aEu
                                                                                     ~
                                                                                     (a_aEB,
                                                                                      b_aEC) " HTML3.hs:62:60-62] (CNonCanonical)
                          [W] cobox_aEG :: [a_aEF] ~ [a_aEx] [" a type equality [a_aEF]
                                                                                ~
                                                                                [a_aEx] " HTML3.hs:62:67-96] (CNonCanonical)
                          [W] cobox_aEH :: [Char] ~ [a_aEF] [" a type equality [Char]
                                                                               ~
                                                                               [a_aEF] " HTML3.hs:62:67-69] (CNonCanonical)
                          [W] cobox_aEJ :: [a_aEI] ~ [a_aEF] [" a type equality [a_aEI]
                                                                                ~
                                                                                [a_aEF] " HTML3.hs:62:74-96] (CNonCanonical)
                          [W] cobox_aEK :: [Char] ~ [a_aEI] [" a type equality [Char]
                                                                               ~
                                                                               [a_aEI] " HTML3.hs:62:74-77] (CNonCanonical)
                          [W] cobox_aEM :: [a_aEL] ~ [a_aEI] [" a type equality [a_aEL]
                                                                                ~
                                                                                [a_aEI] " HTML3.hs:62:82-96] (CNonCanonical)
                          [W] cobox_aER :: b_aEQ ~ [a_aEL] [" a type equality b_aEQ
                                                                              ~
                                                                              [a_aEL] " HTML3.hs:62:82-88] (CNonCanonical)
                          [W] cobox_aES :: t_aEu ~ (a_aEP, b_aEQ) [" a type equality t_aEu
                                                                                     ~
                                                                                     (a_aEP,
                                                                                      b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
                          [W] cobox_aET :: [Char] ~ [a_aEL] [" a type equality [Char]
                                                                               ~
                                                                               [a_aEL] " HTML3.hs:62:93-96] (CNonCanonical)
                          [W] cobox_aEW :: [a_aEV] ~ t_aCW [" a type equality [a_aEV]
                                                                              ~
                                                                              t_aCW " HTML3.hs:61:17-55] (CNonCanonical)
                          [W] cobox_aEZ :: [b_aEY] ~ [[a_aEV]] [" a type equality [b_aEY]
                                                                                  ~
                                                                                  [[a_aEV]] " HTML3.hs:61:25-54] (CNonCanonical)
                          [W] cobox_aF1 :: ([a_aF0] -> [a_aF0])
                                           ~ (a_aEX -> b_aEY) [" a type equality [a_aF0] -> [a_aF0]
                                                                                 ~
                                                                                 a_aEX
                                                                                 -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
                          [W] cobox_aF2 :: Char ~ a_aF0 [" a type equality Char
                                                                           ~
                                                                           a_aF0 " HTML3.hs:61:30-32] (CNonCanonical)
                          [W] cobox_aF5 :: [b_aF4] ~ [a_aEX] [" a type equality [b_aF4]
                                                                                ~
                                                                                [a_aEX] " HTML3.hs:61:37-53] (CNonCanonical)
                          [W] cobox_aF6 :: t_aEt ~ (a_aF3 -> b_aF4) [" a type equality t_aEt
                                                                                       ~
                                                                                       a_aF3
                                                                                       -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
                          [W] cobox_aF7 :: t_aCV ~ [a_aF3] [" a type equality t_aCV
                                                                              ~
                                                                              [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
                          [W] cobox_aF9 :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:56:7-17] (CNonCanonical)
                          [W] cobox_aFa :: String ~ t_aD0 [" a type equality String
                                                                             ~
                                                                             t_aD0 " HTML3.hs:56:35-40] (CNonCanonical)
                          [W] cobox_aFb :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:57:7-24] (CNonCanonical)
                          [W] cobox_aFd :: [a_aFc] ~ t_aD0 [" a type equality [a_aFc]
                                                                              ~
                                                                              t_aD0 " HTML3.hs:57:35-68] (CNonCanonical)
                          [W] cobox_aFe :: [Char] ~ [a_aFc] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFc] " HTML3.hs:57:35-37] (CNonCanonical)
                          [W] cobox_aFg :: [a_aFf] ~ [a_aFc] [" a type equality [a_aFf]
                                                                                ~
                                                                                [a_aFc] " HTML3.hs:57:42-68] (CNonCanonical)
                          [W] cobox_aFh :: String ~ [a_aFf] [" a type equality String
                                                                               ~
                                                                               [a_aFf] " HTML3.hs:57:42-44] (CNonCanonical)
                          [W] cobox_aFj :: [a_aFi] ~ [a_aFf] [" a type equality [a_aFi]
                                                                                ~
                                                                                [a_aFf] " HTML3.hs:57:49-68] (CNonCanonical)
                          [W] cobox_aFk :: t_aCW ~ [a_aFi] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aFi] " HTML3.hs:57:49-61] (CNonCanonical)
                          [W] cobox_aFl :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
                          [W] cobox_aFm :: [Char] ~ [a_aFi] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFi] " HTML3.hs:57:66-68] (CNonCanonical)
                          [W] cobox_aFn :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:58:7-30] (CNonCanonical)
                          [W] cobox_aFp :: [a_aFo] ~ t_aD0 [" a type equality [a_aFo]
                                                                              ~
                                                                              t_aD0 " HTML3.hs:58:35-114] (CNonCanonical)
                          [W] cobox_aFq :: [Char] ~ [a_aFo] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFo] " HTML3.hs:58:35-37] (CNonCanonical)
                          [W] cobox_aFs :: [a_aFr] ~ [a_aFo] [" a type equality [a_aFr]
                                                                                ~
                                                                                [a_aFo] " HTML3.hs:58:42-114] (CNonCanonical)
                          [W] cobox_aFt :: String ~ [a_aFr] [" a type equality String
                                                                               ~
                                                                               [a_aFr] " HTML3.hs:58:42-44] (CNonCanonical)
                          [W] cobox_aFv :: [a_aFu] ~ [a_aFr] [" a type equality [a_aFu]
                                                                                ~
                                                                                [a_aFr] " HTML3.hs:58:49-114] (CNonCanonical)
                          [W] cobox_aFw :: t_aCW ~ [a_aFu] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aFu] " HTML3.hs:58:49-61] (CNonCanonical)
                          [W] cobox_aFx :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
                          [W] cobox_aFz :: [a_aFy] ~ [a_aFu] [" a type equality [a_aFy]
                                                                                ~
                                                                                [a_aFu] " HTML3.hs:58:66-114] (CNonCanonical)
                          [W] cobox_aFA :: [Char] ~ [a_aFy] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFy] " HTML3.hs:58:66-68] (CNonCanonical)
                          [W] cobox_aFC :: [a_aFB] ~ [a_aFy] [" a type equality [a_aFB]
                                                                                ~
                                                                                [a_aFy] " HTML3.hs:58:73-114] (CNonCanonical)
                          [W] cobox_aFH :: [b_aFG] ~ [a_aFB] [" a type equality [b_aFG]
                                                                                ~
                                                                                [a_aFB] " HTML3.hs:58:73-92] (CNonCanonical)
                          [W] cobox_aFI :: (t_aCZ -> t_aD0)
                                           ~ (a_aFF -> [b_aFG]) [" a type equality t_aCZ -> t_aD0
                                                                                   ~
                                                                                   a_aFF
                                                                                   -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
                          [W] cobox_aFJ :: [HTML] ~ [a_aFF] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aFF] " HTML3.hs:58:88-92] (CNonCanonical)
                          [W] cobox_aFL :: [a_aFK] ~ [a_aFB] [" a type equality [a_aFK]
                                                                                ~
                                                                                [a_aFB] " HTML3.hs:58:97-114] (CNonCanonical)
                          [W] cobox_aFM :: [Char] ~ [a_aFK] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFK] " HTML3.hs:58:97-100] (CNonCanonical)
                          [W] cobox_aFO :: [a_aFN] ~ [a_aFK] [" a type equality [a_aFN]
                                                                                ~
                                                                                [a_aFK] " HTML3.hs:58:105-114] (CNonCanonical)
                          [W] cobox_aFP :: String ~ [a_aFN] [" a type equality String
                                                                               ~
                                                                               [a_aFN] " HTML3.hs:58:105-107] (CNonCanonical)
                          [W] cobox_aFQ :: [Char] ~ [a_aFN] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFN] " HTML3.hs:58:112-114] (CNonCanonical)
                          [W] cobox_aFS :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:48:9-19] (CNonCanonical)
                          [W] cobox_aFT :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:48:37-48] (CNonCanonical)
                          [W] cobox_aFU :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML3.hs:48:43-48] (CNonCanonical)
                          [W] cobox_aFV :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:49:9-26] (CNonCanonical)
                          [W] cobox_aFW :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:49:37-69] (CNonCanonical)
                          [W] cobox_aFX :: t_aD0 ~ String [" a type equality t_aD0
                                                                             ~
                                                                             String " HTML3.hs:49:44-68] (CNonCanonical)
                          [W] cobox_aFY :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:49:50-67] (CNonCanonical)
                          [W] cobox_aFZ :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML3.hs:49:60-62] (CNonCanonical)
                          [W] cobox_aG0 :: [Attribute]
                                           ~ [Attribute] [" a type equality [Attribute]
                                                                            ~
                                                                            [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
                          [W] cobox_aG1 :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:50:9-40] (CNonCanonical)
                          [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                            ~
                                                                            [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
                          [W] cobox_aG3 :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:50:45-118] (CNonCanonical)
                          [W] cobox_aG5 :: [a_aG4] ~ String [" a type equality [a_aG4]
                                                                               ~
                                                                               String " HTML3.hs:50:52-117] (CNonCanonical)
                          [W] cobox_aG6 :: [Char] ~ [a_aG4] [" a type equality [Char]
                                                                               ~
                                                                               [a_aG4] " HTML3.hs:50:52-54] (CNonCanonical)
                          [W] cobox_aG8 :: [a_aG7] ~ [a_aG4] [" a type equality [a_aG7]
                                                                                ~
                                                                                [a_aG4] " HTML3.hs:50:59-117] (CNonCanonical)
                          [W] cobox_aG9 :: String ~ [a_aG7] [" a type equality String
                                                                               ~
                                                                               [a_aG7] " HTML3.hs:50:59-61] (CNonCanonical)
                          [W] cobox_aGb :: [a_aGa] ~ [a_aG7] [" a type equality [a_aGa]
                                                                                ~
                                                                                [a_aG7] " HTML3.hs:50:66-117] (CNonCanonical)
                          [W] cobox_aGc :: t_aCW ~ [a_aGa] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aGa] " HTML3.hs:50:66-78] (CNonCanonical)
                          [W] cobox_aGd :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
                          [W] cobox_aGf :: [a_aGe] ~ [a_aGa] [" a type equality [a_aGe]
                                                                                ~
                                                                                [a_aGa] " HTML3.hs:50:83-117] (CNonCanonical)
                          [W] cobox_aGg :: [Char] ~ [a_aGe] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGe] " HTML3.hs:50:83-85] (CNonCanonical)
                          [W] cobox_aGi :: [a_aGh] ~ [a_aGe] [" a type equality [a_aGh]
                                                                                ~
                                                                                [a_aGe] " HTML3.hs:50:90-117] (CNonCanonical)
                          [W] cobox_aGj :: String ~ [a_aGh] [" a type equality String
                                                                               ~
                                                                               [a_aGh] " HTML3.hs:50:90-95] (CNonCanonical)
                          [W] cobox_aGl :: [a_aGk] ~ [a_aGh] [" a type equality [a_aGk]
                                                                                ~
                                                                                [a_aGh] " HTML3.hs:50:100-117] (CNonCanonical)
                          [W] cobox_aGm :: [Char] ~ [a_aGk] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGk] " HTML3.hs:50:100-103] (CNonCanonical)
                          [W] cobox_aGo :: [a_aGn] ~ [a_aGk] [" a type equality [a_aGn]
                                                                                ~
                                                                                [a_aGk] " HTML3.hs:50:108-117] (CNonCanonical)
                          [W] cobox_aGp :: String ~ [a_aGn] [" a type equality String
                                                                               ~
                                                                               [a_aGn] " HTML3.hs:50:108-110] (CNonCanonical)
                          [W] cobox_aGq :: [Char] ~ [a_aGn] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGn] " HTML3.hs:50:115-117] (CNonCanonical)
                          [W] cobox_aGr :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:51:9-32] (CNonCanonical)
                          [W] $dEq_aGz :: Eq
                                            a_aGy [" a use of ‘==’ " HTML3.hs:51:50-51] (CNonCanonical)
                          [W] cobox_aGA :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:51:37-53] (CNonCanonical)
                          [W] cobox_aGC :: Int ~ a_aGy [" a type equality Int
                                                                          ~
                                                                          a_aGy " HTML3.hs:51:37-48] (CNonCanonical)
                          [W] cobox_aGD :: [HTML] ~ [a_aGB] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aGB] " HTML3.hs:51:44-48] (CNonCanonical)
                          [W] $dNum_aGF :: Num
                                             a_aGE [" the literal ‘0’ " HTML3.hs:51:53] (CNonCanonical)
                          [W] cobox_aGG :: (Integer -> a_aGE)
                                           ~ (Integer -> a_aGy) [" a type equality Integer -> a_aGE
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
                          [W] cobox_aGH :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:51:57-114] (CNonCanonical)
                          [W] cobox_aGJ :: [a_aGI] ~ String [" a type equality [a_aGI]
                                                                               ~
                                                                               String " HTML3.hs:51:64-113] (CNonCanonical)
                          [W] cobox_aGK :: [Char] ~ [a_aGI] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGI] " HTML3.hs:51:64-66] (CNonCanonical)
                          [W] cobox_aGM :: [a_aGL] ~ [a_aGI] [" a type equality [a_aGL]
                                                                                ~
                                                                                [a_aGI] " HTML3.hs:51:71-113] (CNonCanonical)
                          [W] cobox_aGN :: String ~ [a_aGL] [" a type equality String
                                                                               ~
                                                                               [a_aGL] " HTML3.hs:51:71-73] (CNonCanonical)
                          [W] cobox_aGP :: [a_aGO] ~ [a_aGL] [" a type equality [a_aGO]
                                                                                ~
                                                                                [a_aGL] " HTML3.hs:51:78-113] (CNonCanonical)
                          [W] cobox_aGQ :: t_aCW ~ [a_aGO] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aGO] " HTML3.hs:51:78-90] (CNonCanonical)
                          [W] cobox_aGR :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
                          [W] cobox_aGT :: [a_aGS] ~ [a_aGO] [" a type equality [a_aGS]
                                                                                ~
                                                                                [a_aGO] " HTML3.hs:51:95-113] (CNonCanonical)
                          [W] cobox_aGU :: [Char] ~ [a_aGS] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGS] " HTML3.hs:51:95-99] (CNonCanonical)
                          [W] cobox_aGW :: [a_aGV] ~ [a_aGS] [" a type equality [a_aGV]
                                                                                ~
                                                                                [a_aGS] " HTML3.hs:51:104-113] (CNonCanonical)
                          [W] cobox_aGX :: String ~ [a_aGV] [" a type equality String
                                                                               ~
                                                                               [a_aGV] " HTML3.hs:51:104-106] (CNonCanonical)
                          [W] cobox_aGY :: [Char] ~ [a_aGV] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGV] " HTML3.hs:51:111-113] (CNonCanonical)
                          [W] $dEq_aH0 :: Eq
                                            a_aGZ [" a use of ‘==’ " HTML3.hs:52:50-51] (CNonCanonical)
                          [W] cobox_aH1 :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:52:37-53] (CNonCanonical)
                          [W] cobox_aH3 :: Int ~ a_aGZ [" a type equality Int
                                                                          ~
                                                                          a_aGZ " HTML3.hs:52:37-48] (CNonCanonical)
                          [W] cobox_aH4 :: [HTML] ~ [a_aH2] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aH2] " HTML3.hs:52:44-48] (CNonCanonical)
                          [W] $dNum_aH6 :: Num
                                             a_aH5 [" the literal ‘1’ " HTML3.hs:52:53] (CNonCanonical)
                          [W] cobox_aH7 :: (Integer -> a_aH5)
                                           ~ (Integer -> a_aGZ) [" a type equality Integer -> a_aH5
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
                          [W] cobox_aH8 :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:52:57-153] (CNonCanonical)
                          [W] cobox_aH9 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:52:57-122] (CNonCanonical)
                          [W] cobox_aHa :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:52:57-98] (CNonCanonical)
                          [W] cobox_aHc :: [a_aHb] ~ String [" a type equality [a_aHb]
                                                                               ~
                                                                               String " HTML3.hs:52:64-97] (CNonCanonical)
                          [W] cobox_aHd :: [Char] ~ [a_aHb] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHb] " HTML3.hs:52:64-66] (CNonCanonical)
                          [W] cobox_aHf :: [a_aHe] ~ [a_aHb] [" a type equality [a_aHe]
                                                                                ~
                                                                                [a_aHb] " HTML3.hs:52:71-97] (CNonCanonical)
                          [W] cobox_aHg :: String ~ [a_aHe] [" a type equality String
                                                                               ~
                                                                               [a_aHe] " HTML3.hs:52:71-73] (CNonCanonical)
                          [W] cobox_aHi :: [a_aHh] ~ [a_aHe] [" a type equality [a_aHh]
                                                                                ~
                                                                                [a_aHe] " HTML3.hs:52:78-97] (CNonCanonical)
                          [W] cobox_aHj :: t_aCW ~ [a_aHh] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aHh] " HTML3.hs:52:78-90] (CNonCanonical)
                          [W] cobox_aHk :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
                          [W] cobox_aHl :: [Char] ~ [a_aHh] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHh] " HTML3.hs:52:95-97] (CNonCanonical)
                          [W] cobox_aHm :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                          ~
                                                                          Doc " HTML3.hs:52:104-122] (CNonCanonical)
                          [W] cobox_aHo :: a_aHn ~ t_aD3 [" a type equality a_aHn
                                                                            ~
                                                                            t_aD3 " HTML3.hs:52:112-121] (CNonCanonical)
                          [W] cobox_aHp :: [HTML] ~ [a_aHn] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aHn] " HTML3.hs:52:117-121] (CNonCanonical)
                          [W] cobox_aHq :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:52:128-153] (CNonCanonical)
                          [W] cobox_aHs :: [a_aHr] ~ String [" a type equality [a_aHr]
                                                                               ~
                                                                               String " HTML3.hs:52:135-152] (CNonCanonical)
                          [W] cobox_aHt :: [Char] ~ [a_aHr] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHr] " HTML3.hs:52:135-138] (CNonCanonical)
                          [W] cobox_aHv :: [a_aHu] ~ [a_aHr] [" a type equality [a_aHu]
                                                                                ~
                                                                                [a_aHr] " HTML3.hs:52:143-152] (CNonCanonical)
                          [W] cobox_aHw :: String ~ [a_aHu] [" a type equality String
                                                                               ~
                                                                               [a_aHu] " HTML3.hs:52:143-145] (CNonCanonical)
                          [W] cobox_aHx :: [Char] ~ [a_aHu] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHu] " HTML3.hs:52:150-152] (CNonCanonical)
                          [W] cobox_aHy :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:53:37-45] (CNonCanonical)
                          [W] cobox_aHz :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:53:57-190] (CNonCanonical)
                          [W] cobox_aHA :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:53:57-159] (CNonCanonical)
                          [W] cobox_aHB :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:53:57-98] (CNonCanonical)
                          [W] cobox_aHD :: [a_aHC] ~ String [" a type equality [a_aHC]
                                                                               ~
                                                                               String " HTML3.hs:53:64-97] (CNonCanonical)
                          [W] cobox_aHE :: [Char] ~ [a_aHC] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHC] " HTML3.hs:53:64-66] (CNonCanonical)
                          [W] cobox_aHG :: [a_aHF] ~ [a_aHC] [" a type equality [a_aHF]
                                                                                ~
                                                                                [a_aHC] " HTML3.hs:53:71-97] (CNonCanonical)
                          [W] cobox_aHH :: String ~ [a_aHF] [" a type equality String
                                                                               ~
                                                                               [a_aHF] " HTML3.hs:53:71-73] (CNonCanonical)
                          [W] cobox_aHJ :: [a_aHI] ~ [a_aHF] [" a type equality [a_aHI]
                                                                                ~
                                                                                [a_aHF] " HTML3.hs:53:78-97] (CNonCanonical)
                          [W] cobox_aHK :: t_aCW ~ [a_aHI] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aHI] " HTML3.hs:53:78-90] (CNonCanonical)
                          [W] cobox_aHL :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
                          [W] cobox_aHM :: [Char] ~ [a_aHI] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHI] " HTML3.hs:53:95-97] (CNonCanonical)
                          [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                                          ~
                                                                          Doc " HTML3.hs:53:105-158] (CNonCanonical)
                          [W] cobox_aHQ :: (Doc -> Doc -> Doc)
                                           ~ (a_aHN -> b_aHO -> b_aHO) [" a type equality Doc
                                                                                          -> Doc
                                                                                          -> Doc
                                                                                          ~
                                                                                          a_aHN
                                                                                          -> b_aHO
                                                                                          -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
                          [W] cobox_aHR :: Doc ~ b_aHO [" a type equality Doc
                                                                          ~
                                                                          b_aHO " HTML3.hs:53:117-120] (CNonCanonical)
                          [W] cobox_aHU :: [b_aHT] ~ [a_aHN] [" a type equality [b_aHT]
                                                                                ~
                                                                                [a_aHN] " HTML3.hs:53:123-157] (CNonCanonical)
                          [W] cobox_aHV :: (Doc -> Doc)
                                           ~ (a_aHS -> b_aHT) [" a type equality Doc -> Doc
                                                                                 ~
                                                                                 a_aHS
                                                                                 -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
                          [W] cobox_aHY :: [b_aHX] ~ [a_aHS] [" a type equality [b_aHX]
                                                                                ~
                                                                                [a_aHS] " HTML3.hs:53:141-156] (CNonCanonical)
                          [W] cobox_aHZ :: (t_aD3 -> t_aD4)
                                           ~ (a_aHW -> b_aHX) [" a type equality t_aD3 -> t_aD4
                                                                                 ~
                                                                                 a_aHW
                                                                                 -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
                          [W] cobox_aI0 :: [HTML] ~ [a_aHW] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aHW] " HTML3.hs:53:152-156] (CNonCanonical)
                          [W] cobox_aI1 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:53:165-190] (CNonCanonical)
                          [W] cobox_aI3 :: [a_aI2] ~ String [" a type equality [a_aI2]
                                                                               ~
                                                                               String " HTML3.hs:53:172-189] (CNonCanonical)
                          [W] cobox_aI4 :: [Char] ~ [a_aI2] [" a type equality [Char]
                                                                               ~
                                                                               [a_aI2] " HTML3.hs:53:172-175] (CNonCanonical)
                          [W] cobox_aI6 :: [a_aI5] ~ [a_aI2] [" a type equality [a_aI5]
                                                                                ~
                                                                                [a_aI2] " HTML3.hs:53:180-189] (CNonCanonical)
                          [W] cobox_aI7 :: String ~ [a_aI5] [" a type equality String
                                                                               ~
                                                                               [a_aI5] " HTML3.hs:53:180-182] (CNonCanonical)
                          [W] cobox_aI8 :: [Char] ~ [a_aI5] [" a type equality [Char]
                                                                               ~
                                                                               [a_aI5] " HTML3.hs:53:187-189] (CNonCanonical)
                          [W] cobox_aIb :: [t_aIa] ~ t_aD7 [" a type equality [t_aIa]
                                                                              ~
                                                                              t_aD7 " HTML3.hs:(42,10)-(43,59)] (CNonCanonical)
                          [W] cobox_aIe :: (t_aIc, t_aId) ~ t_aIa [" a type equality (t_aIc,
                                                                                      t_aId)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
                          [W] cobox_aIf :: [Char] ~ t_aIc [" a type equality [Char]
                                                                             ~
                                                                             t_aIc " HTML3.hs:42:12-15] (CNonCanonical)
                          [W] cobox_aIg :: [Char] ~ t_aId [" a type equality [Char]
                                                                             ~
                                                                             t_aId " HTML3.hs:42:18-21] (CNonCanonical)
                          [W] cobox_aIj :: (t_aIh, t_aIi) ~ t_aIa [" a type equality (t_aIh,
                                                                                      t_aIi)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
                          [W] cobox_aIk :: [Char] ~ t_aIh [" a type equality [Char]
                                                                             ~
                                                                             t_aIh " HTML3.hs:42:26-31] (CNonCanonical)
                          [W] cobox_aIl :: [Char] ~ t_aIi [" a type equality [Char]
                                                                             ~
                                                                             t_aIi " HTML3.hs:42:34-39] (CNonCanonical)
                          [W] cobox_aIo :: (t_aIm, t_aIn) ~ t_aIa [" a type equality (t_aIm,
                                                                                      t_aIn)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
                          [W] cobox_aIp :: [Char] ~ t_aIm [" a type equality [Char]
                                                                             ~
                                                                             t_aIm " HTML3.hs:42:44-49] (CNonCanonical)
                          [W] cobox_aIq :: [Char] ~ t_aIn [" a type equality [Char]
                                                                             ~
                                                                             t_aIn " HTML3.hs:42:52-57] (CNonCanonical)
                          [W] cobox_aIt :: (t_aIr, t_aIs) ~ t_aIa [" a type equality (t_aIr,
                                                                                      t_aIs)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
                          [W] cobox_aIu :: [Char] ~ t_aIr [" a type equality [Char]
                                                                             ~
                                                                             t_aIr " HTML3.hs:43:12-17] (CNonCanonical)
                          [W] cobox_aIv :: [Char] ~ t_aIs [" a type equality [Char]
                                                                             ~
                                                                             t_aIs " HTML3.hs:43:20-22] (CNonCanonical)
                          [W] cobox_aIy :: (t_aIw, t_aIx) ~ t_aIa [" a type equality (t_aIw,
                                                                                      t_aIx)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
                          [W] cobox_aIz :: [Char] ~ t_aIw [" a type equality [Char]
                                                                             ~
                                                                             t_aIw " HTML3.hs:43:27-32] (CNonCanonical)
                          [W] cobox_aIA :: [Char] ~ t_aIx [" a type equality [Char]
                                                                             ~
                                                                             t_aIx " HTML3.hs:43:35-38] (CNonCanonical)
                          [W] cobox_aID :: (t_aIB, t_aIC) ~ t_aIa [" a type equality (t_aIB,
                                                                                      t_aIC)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
                          [W] cobox_aIE :: [Char] ~ t_aIB [" a type equality [Char]
                                                                             ~
                                                                             t_aIB " HTML3.hs:43:43-48] (CNonCanonical)
                          [W] cobox_aIF :: [Char] ~ t_aIC [" a type equality [Char]
                                                                             ~
                                                                             t_aIC " HTML3.hs:43:51-57] (CNonCanonical)
                          [W] cobox_aII :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                              ~
                                                                              t_aDo " HTML3.hs:37:9-20] (CNonCanonical)
                          [W] cobox_aIK :: Maybe t_aIJ ~ t_aIH [" a type equality Maybe t_aIJ
                                                                                  ~
                                                                                  t_aIH " HTML3.hs:37:9-15] (CNonCanonical)
                          [W] cobox_aIL :: t_aDp ~ t_aDp [" a type equality t_aDp
                                                                            ~
                                                                            t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
                          [W] cobox_aIM :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                              ~
                                                                              t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
                          [W] cobox_aIO :: [t_aIN] ~ t_aDo [" a type equality [t_aIN]
                                                                              ~
                                                                              t_aDo " HTML3.hs:38:8-9] (CNonCanonical)
                          [W] cobox_aIQ :: Maybe a_aIP ~ t_aDp [" a type equality Maybe a_aIP
                                                                                  ~
                                                                                  t_aDp " HTML3.hs:38:25-31] (CNonCanonical)
                          [W] cobox_aIS :: [t_aIR] ~ t_aDo [" a type equality [t_aIR]
                                                                              ~
                                                                              t_aDo " HTML3.hs:39:9-16] (CNonCanonical)
                          [W] cobox_aIU :: Maybe t_aIT ~ t_aIR [" a type equality Maybe t_aIT
                                                                                  ~
                                                                                  t_aIR " HTML3.hs:39:9-14] (CNonCanonical)
                          [W] cobox_aIW :: Maybe a_aIV ~ t_aDp [" a type equality Maybe a_aIV
                                                                                  ~
                                                                                  t_aDp " HTML3.hs:39:25-30] (CNonCanonical)
                          [W] cobox_aIX :: t_aIT ~ a_aIV [" a type equality t_aIT
                                                                            ~
                                                                            a_aIV " HTML3.hs:39:30] (CNonCanonical)
                          [W] cobox_aIZ :: HTML ~ t_aDG [" a type equality HTML
                                                                           ~
                                                                           t_aDG " HTML3.hs:14:13-137] (CNonCanonical)
                          [W] cobox_aJ0 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:23-28] (CNonCanonical)
                          [W] cobox_aJ1 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:32-38] (CNonCanonical)
                          [W] cobox_aJ2 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:40-45] (CNonCanonical)
                          [W] cobox_aJ3 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:14:51-62] (CNonCanonical)
                          [W] cobox_aJ4 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:56-62] (CNonCanonical)
                          [W] cobox_aJ5 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:14:66-98] (CNonCanonical)
                          [W] cobox_aJ6 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:76-80] (CNonCanonical)
                          [W] cobox_aJ7 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:84-90] (CNonCanonical)
                          [W] cobox_aJ8 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:92-96] (CNonCanonical)
                          [W] cobox_aJ9 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:14:102-135] (CNonCanonical)
                          [W] cobox_aJa :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:112-116] (CNonCanonical)
                          [W] cobox_aJb :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:120-126] (CNonCanonical)
                          [W] cobox_aJc :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:128-133] (CNonCanonical)
                          [W] cobox_aJf :: a_aJe ~ (t_aDI -> t_aDJ) [" a type equality a_aJe
                                                                                       ~
                                                                                       t_aDI
                                                                                       -> t_aDJ " HTML3.hs:8:7-15] (CNonCanonical)
                          [W] cobox_aJi :: a_aJh ~ (t_aDM -> t_aDN) [" a type equality a_aJh
                                                                                       ~
                                                                                       t_aDM
                                                                                       -> t_aDN " HTML3.hs:6:11-19] (CNonCanonical)
                          [W] $dOrd_aJx :: Ord
                                             a_aJw [" a use of ‘<’ " HTML3.hs:73:25] (CNonCanonical)
                          [W] cobox_aJy :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:73:19-28] (CNonCanonical)
                          [W] cobox_aJz :: t_aCJ ~ a_aJw [" a type equality t_aCJ
                                                                            ~
                                                                            a_aJw " HTML3.hs:73:19-23] (CNonCanonical)
                          [W] $dNum_aJB :: Num
                                             a_aJA [" the literal ‘10’ " HTML3.hs:73:27-28] (CNonCanonical)
                          [W] cobox_aJC :: (Integer -> a_aJA)
                                           ~ (Integer -> a_aJw) [" a type equality Integer -> a_aJA
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
                          [W] cobox_aJD :: t_aDN ~ t_aCK [" a type equality t_aDN
                                                                            ~
                                                                            t_aCK " HTML3.hs:73:32-44] (CNonCanonical)
                          [W] cobox_aJE :: t_aCJ ~ t_aDM [" a type equality t_aCJ
                                                                            ~
                                                                            t_aDM " HTML3.hs:73:40-44] (CNonCanonical)
                          [W] cobox_aJF :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:74:19-27] (CNonCanonical)
                          [W] cobox_aJH :: [t_aJG] ~ t_aCK [" a type equality [t_aJG]
                                                                              ~
                                                                              t_aCK " HTML3.hs:74:32-49] (CNonCanonical)
                          [W] cobox_aJI :: t_aDJ ~ t_aJG [" a type equality t_aDJ
                                                                            ~
                                                                            t_aJG " HTML3.hs:74:33-48] (CNonCanonical)
                          [W] $dNum_aJK :: Num
                                             a_aJJ [" a use of ‘+’ " HTML3.hs:74:44] (CNonCanonical)
                          [W] cobox_aJL :: a_aJJ ~ t_aDI [" a type equality a_aJJ
                                                                            ~
                                                                            t_aDI " HTML3.hs:74:38-47] (CNonCanonical)
                          [W] cobox_aJM :: t_aCJ ~ a_aJJ [" a type equality t_aCJ
                                                                            ~
                                                                            a_aJJ " HTML3.hs:74:38-42] (CNonCanonical)
                          [W] $dNum_aJO :: Num
                                             a_aJN [" the literal ‘55’ " HTML3.hs:74:46-47] (CNonCanonical)
                          [W] cobox_aJP :: (Integer -> a_aJN)
                                           ~ (Integer -> a_aJJ) [" a type equality Integer -> a_aJN
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
                          [W] cobox_aJU :: t_aJR ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                                                       ~
                                                                                       t_aJS
                                                                                       -> t_aJT " HTML3.hs:70:19-86] (CNonCanonical)
                          [W] cobox_aJW :: [a_aJV] ~ t_aJT [" a type equality [a_aJV]
                                                                              ~
                                                                              t_aJT " HTML3.hs:70:35-86] (CNonCanonical)
                          [W] cobox_aJX :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                              ~
                                                                              [a_aJV] " HTML3.hs:70:35-56] (CNonCanonical)
                          [W] $dFractional_aK7 :: Fractional
                                                    a_aK6 [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
                          [W] cobox_aK8 :: a_aK6 ~ t_aCJ [" a type equality a_aK6
                                                                            ~
                                                                            t_aCJ " HTML3.hs:70:46-55] (CNonCanonical)
                          [W] cobox_aK9 :: t_aJS ~ a_aK6 [" a type equality t_aJS
                                                                            ~
                                                                            a_aK6 " HTML3.hs:70:46-50] (CNonCanonical)
                          [W] $dNum_aKb :: Num
                                             a_aKa [" the literal ‘16’ " HTML3.hs:70:54-55] (CNonCanonical)
                          [W] cobox_aKc :: (Integer -> a_aKa)
                                           ~ (Integer -> a_aK6) [" a type equality Integer -> a_aKa
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
                          [W] cobox_aKd :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                              ~
                                                                              [a_aJV] " HTML3.hs:70:61-86] (CNonCanonical)
                          [W] $dIntegral_aKs :: Integral
                                                  a_aKr [" a use of ‘rem’ " HTML3.hs:70:78-82] (CNonCanonical)
                          [W] cobox_aKt :: a_aKr ~ t_aCJ [" a type equality a_aKr
                                                                            ~
                                                                            t_aCJ " HTML3.hs:70:72-85] (CNonCanonical)
                          [W] cobox_aKu :: t_aJS ~ a_aKr [" a type equality t_aJS
                                                                            ~
                                                                            a_aKr " HTML3.hs:70:72-76] (CNonCanonical)
                          [W] $dNum_aKw :: Num
                                             a_aKv [" the literal ‘16’ " HTML3.hs:70:84-85] (CNonCanonical)
                          [W] cobox_aKx :: (Integer -> a_aKv)
                                           ~ (Integer -> a_aKr) [" a type equality Integer -> a_aKv
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
                          [W] cobox_aKz :: [a_aKy] ~ t_aCQ [" a type equality [a_aKy]
                                                                              ~
                                                                              t_aCQ " HTML3.hs:69:15-56] (CNonCanonical)
                          [W] cobox_aKA :: [Char] ~ [a_aKy] [" a type equality [Char]
                                                                               ~
                                                                               [a_aKy] " HTML3.hs:69:15-17] (CNonCanonical)
                          [W] cobox_aKC :: [a_aKB] ~ [a_aKy] [" a type equality [a_aKB]
                                                                                ~
                                                                                [a_aKy] " HTML3.hs:69:22-56] (CNonCanonical)
                          [W] cobox_aKF :: t_aJR ~ (t_aKD -> t_aKE) [" a type equality t_aJR
                                                                                       ~
                                                                                       t_aKD
                                                                                       -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
                          [W] cobox_aKG :: t_aKE ~ [a_aKB] [" a type equality t_aKE
                                                                              ~
                                                                              [a_aKB] " HTML3.hs:69:22-30] (CNonCanonical)
                          [W] cobox_aKH :: t_aCN ~ t_aKD [" a type equality t_aCN
                                                                            ~
                                                                            t_aKD " HTML3.hs:69:30] (CNonCanonical)
                          [W] cobox_aKJ :: [a_aKI] ~ [a_aKB] [" a type equality [a_aKI]
                                                                                ~
                                                                                [a_aKB] " HTML3.hs:69:35-56] (CNonCanonical)
                          [W] cobox_aKM :: t_aJR ~ (t_aKK -> t_aKL) [" a type equality t_aJR
                                                                                       ~
                                                                                       t_aKK
                                                                                       -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
                          [W] cobox_aKN :: t_aKL ~ [a_aKI] [" a type equality t_aKL
                                                                              ~
                                                                              [a_aKI] " HTML3.hs:69:35-43] (CNonCanonical)
                          [W] cobox_aKO :: t_aCO ~ t_aKK [" a type equality t_aCO
                                                                            ~
                                                                            t_aKK " HTML3.hs:69:43] (CNonCanonical)
                          [W] cobox_aKR :: t_aJR ~ (t_aKP -> t_aKQ) [" a type equality t_aJR
                                                                                       ~
                                                                                       t_aKP
                                                                                       -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
                          [W] cobox_aKS :: t_aKQ ~ [a_aKI] [" a type equality t_aKQ
                                                                              ~
                                                                              [a_aKI] " HTML3.hs:69:48-56] (CNonCanonical)
                          [W] cobox_aKT :: t_aCP ~ t_aKP [" a type equality t_aCP
                                                                            ~
                                                                            t_aKP " HTML3.hs:69:56] (CNonCanonical)
                          [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX)
                                           ~ t_aCx [" a type equality (t_aKV, t_aKW, t_aKX)
                                                                      ~
                                                                      t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
                          [W] cobox_aKZ :: HTML ~ t_aCy [" a type equality HTML
                                                                           ~
                                                                           t_aCy " HTML3.hs:89:22-64] (CNonCanonical)
                          [W] cobox_aL0 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:89:32-35] (CNonCanonical)
                          [W] cobox_aL1 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:89:39-47] (CNonCanonical)
                          [W] cobox_aL2 :: t_aCQ ~ String [" a type equality t_aCQ
                                                                             ~
                                                                             String " HTML3.hs:89:49-59] (CNonCanonical)
                          [W] cobox_aL3 :: t_aKV ~ t_aCN [" a type equality t_aKV
                                                                            ~
                                                                            t_aCN " HTML3.hs:89:55] (CNonCanonical)
                          [W] cobox_aL4 :: t_aKW ~ t_aCO [" a type equality t_aKW
                                                                            ~
                                                                            t_aCO " HTML3.hs:89:57] (CNonCanonical)
                          [W] cobox_aL5 :: t_aKX ~ t_aCP [" a type equality t_aKX
                                                                            ~
                                                                            t_aCP " HTML3.hs:89:59] (CNonCanonical)
                          [W] cobox_aL7 :: HTML ~ t_aCC [" a type equality HTML
                                                                           ~
                                                                           t_aCC " HTML3.hs:86:18-56] (CNonCanonical)
                          [W] cobox_aL8 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:86:28-31] (CNonCanonical)
                          [W] cobox_aLb :: [b_aLa] ~ [HTML] [" a type equality [b_aLa]
                                                                               ~
                                                                               [HTML] " HTML3.hs:86:37-55] (CNonCanonical)
                          [W] cobox_aLc :: (t_aCx -> t_aCy)
                                           ~ (a_aL9 -> b_aLa) [" a type equality t_aCx -> t_aCy
                                                                                 ~
                                                                                 a_aL9
                                                                                 -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
                          [W] cobox_aLd :: t_aCB ~ [a_aL9] [" a type equality t_aCB
                                                                              ~
                                                                              [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
                          [W] cobox_aLf :: HTML ~ t_aCG [" a type equality HTML
                                                                           ~
                                                                           t_aCG " HTML3.hs:83:22-95] (CNonCanonical)
                          [W] cobox_aLg :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:32-38] (CNonCanonical)
                          [W] cobox_aLh :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:42-48] (CNonCanonical)
                          [W] cobox_aLi :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:50-54] (CNonCanonical)
                          [W] cobox_aLj :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:58-65] (CNonCanonical)
                          [W] cobox_aLk :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:67-71] (CNonCanonical)
                          [W] cobox_aLn :: [b_aLm] ~ [HTML] [" a type equality [b_aLm]
                                                                               ~
                                                                               [HTML] " HTML3.hs:83:76-94] (CNonCanonical)
                          [W] cobox_aLo :: (t_aCB -> t_aCC)
                                           ~ (a_aLl -> b_aLm) [" a type equality t_aCB -> t_aCC
                                                                                 ~
                                                                                 a_aLl
                                                                                 -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
                          [W] cobox_aLp :: t_aCF ~ [a_aLl] [" a type equality t_aCF
                                                                              ~
                                                                              [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
                          [W] cobox_aLr :: HTML ~ t_aCi [" a type equality HTML
                                                                           ~
                                                                           t_aCi " HTML3.hs:98:20-70] (CNonCanonical)
                          [W] cobox_aLt :: [a_aLs] ~ String [" a type equality [a_aLs]
                                                                               ~
                                                                               String " HTML3.hs:98:31-52] (CNonCanonical)
                          [W] cobox_aLu :: [Char] ~ [a_aLs] [" a type equality [Char]
                                                                               ~
                                                                               [a_aLs] " HTML3.hs:98:31-33] (CNonCanonical)
                          [W] cobox_aLv :: t_aDN ~ [a_aLs] [" a type equality t_aDN
                                                                              ~
                                                                              [a_aLs] " HTML3.hs:98:38-52] (CNonCanonical)
                          [W] cobox_aLw :: t_aCg ~ t_aDM [" a type equality t_aCg
                                                                            ~
                                                                            t_aDM " HTML3.hs:98:46-52] (CNonCanonical)
                          [W] cobox_aLx :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:98:59-69] (CNonCanonical)
                          [W] cobox_aLy :: t_aCh ~ String [" a type equality t_aCh
                                                                             ~
                                                                             String " HTML3.hs:98:64-69] (CNonCanonical)
                          [W] cobox_aLA :: t_aC2 ~ t_aBY [" a type equality t_aC2
                                                                            ~
                                                                            t_aBY " HTML3.hs:(110,16)-(112,111)] (CNonCanonical)
                          [W] cobox_aLB :: [Char] ~ t_aC0 [" a type equality [Char]
                                                                             ~
                                                                             t_aC0 " HTML3.hs:110:25-38] (CNonCanonical)
                          [W] cobox_aLD :: [t_aLC] ~ t_aC1 [" a type equality [t_aLC]
                                                                              ~
                                                                              t_aC1 " HTML3.hs:(110,40)-(112,111)] (CNonCanonical)
                          [W] cobox_aLE :: t_aCi ~ t_aLC [" a type equality t_aCi
                                                                            ~
                                                                            t_aLC " HTML3.hs:110:42-59] (CNonCanonical)
                          [W] $dNum_aLG :: Num
                                             a_aLF [" the literal ‘1’ " HTML3.hs:110:44] (CNonCanonical)
                          [W] cobox_aLH :: (Integer -> a_aLF)
                                           ~ (Integer -> t_aCg) [" a type equality Integer -> a_aLF
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
                          [W] cobox_aLI :: [Char] ~ t_aCh [" a type equality [Char]
                                                                             ~
                                                                             t_aCh " HTML3.hs:110:46-59] (CNonCanonical)
                          [W] cobox_aLJ :: t_aCr ~ t_aLC [" a type equality t_aCr
                                                                            ~
                                                                            t_aLC " HTML3.hs:111:41-343] (CNonCanonical)
                          [W] cobox_aLL :: [t_aLK] ~ t_aCq [" a type equality [t_aLK]
                                                                              ~
                                                                              t_aCq " HTML3.hs:111:44-343] (CNonCanonical)
                          [W] cobox_aLN :: [t_aLM] ~ t_aLK [" a type equality [t_aLM]
                                                                              ~
                                                                              t_aLK " HTML3.hs:111:45-160] (CNonCanonical)
                          [W] cobox_aLO :: t_aCc ~ t_aLM [" a type equality t_aCc
                                                                            ~
                                                                            t_aLM " HTML3.hs:111:46-85] (CNonCanonical)
                          [W] cobox_aLQ :: [t_aLP] ~ t_aCa [" a type equality [t_aLP]
                                                                              ~
                                                                              t_aCa " HTML3.hs:111:51-71] (CNonCanonical)
                          [W] cobox_aLT :: (t_aLR, t_aLS) ~ t_aLP [" a type equality (t_aLR,
                                                                                      t_aLS)
                                                                                     ~
                                                                                     t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
                          [W] cobox_aLU :: [Char] ~ t_aLR [" a type equality [Char]
                                                                             ~
                                                                             t_aLR " HTML3.hs:111:53-59] (CNonCanonical)
                          [W] cobox_aLV :: [Char] ~ t_aLS [" a type equality [Char]
                                                                             ~
                                                                             t_aLS " HTML3.hs:111:61-69] (CNonCanonical)
                          [W] cobox_aLX :: [t_aLW] ~ t_aCb [" a type equality [t_aLW]
                                                                              ~
                                                                              t_aCb " HTML3.hs:111:73-85] (CNonCanonical)
                          [W] cobox_aLY :: t_aC7 ~ t_aLW [" a type equality t_aC7
                                                                            ~
                                                                            t_aLW " HTML3.hs:111:74-84] (CNonCanonical)
                          [W] cobox_aLZ :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:79-84] (CNonCanonical)
                          [W] cobox_aM0 :: t_aC7 ~ t_aLM [" a type equality t_aC7
                                                                            ~
                                                                            t_aLM " HTML3.hs:111:88-159] (CNonCanonical)
                          [W] cobox_aM1 :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:93-159] (CNonCanonical)
                          [W] cobox_aM3 :: [t_aM2] ~ t_aLK [" a type equality [t_aM2]
                                                                              ~
                                                                              t_aLK " HTML3.hs:111:162-278] (CNonCanonical)
                          [W] cobox_aM4 :: t_aCc ~ t_aM2 [" a type equality t_aCc
                                                                            ~
                                                                            t_aM2 " HTML3.hs:111:163-203] (CNonCanonical)
                          [W] cobox_aM6 :: [t_aM5] ~ t_aCa [" a type equality [t_aM5]
                                                                              ~
                                                                              t_aCa " HTML3.hs:111:168-188] (CNonCanonical)
                          [W] cobox_aM9 :: (t_aM7, t_aM8) ~ t_aM5 [" a type equality (t_aM7,
                                                                                      t_aM8)
                                                                                     ~
                                                                                     t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
                          [W] cobox_aMa :: [Char] ~ t_aM7 [" a type equality [Char]
                                                                             ~
                                                                             t_aM7 " HTML3.hs:111:170-176] (CNonCanonical)
                          [W] cobox_aMb :: [Char] ~ t_aM8 [" a type equality [Char]
                                                                             ~
                                                                             t_aM8 " HTML3.hs:111:178-186] (CNonCanonical)
                          [W] cobox_aMd :: [t_aMc] ~ t_aCb [" a type equality [t_aMc]
                                                                              ~
                                                                              t_aCb " HTML3.hs:111:190-203] (CNonCanonical)
                          [W] cobox_aMe :: t_aC7 ~ t_aMc [" a type equality t_aC7
                                                                            ~
                                                                            t_aMc " HTML3.hs:111:191-202] (CNonCanonical)
                          [W] cobox_aMf :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:196-202] (CNonCanonical)
                          [W] cobox_aMg :: t_aC7 ~ t_aM2 [" a type equality t_aC7
                                                                            ~
                                                                            t_aM2 " HTML3.hs:111:206-277] (CNonCanonical)
                          [W] cobox_aMh :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:211-277] (CNonCanonical)
                          [W] cobox_aMj :: [t_aMi] ~ t_aLK [" a type equality [t_aMi]
                                                                              ~
                                                                              t_aLK " HTML3.hs:111:280-342] (CNonCanonical)
                          [W] cobox_aMk :: t_aCc ~ t_aMi [" a type equality t_aCc
                                                                            ~
                                                                            t_aMi " HTML3.hs:111:281-321] (CNonCanonical)
                          [W] cobox_aMm :: [t_aMl] ~ t_aCa [" a type equality [t_aMl]
                                                                              ~
                                                                              t_aCa " HTML3.hs:111:286-306] (CNonCanonical)
                          [W] cobox_aMp :: (t_aMn, t_aMo) ~ t_aMl [" a type equality (t_aMn,
                                                                                      t_aMo)
                                                                                     ~
                                                                                     t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
                          [W] cobox_aMq :: [Char] ~ t_aMn [" a type equality [Char]
                                                                             ~
                                                                             t_aMn " HTML3.hs:111:288-294] (CNonCanonical)
                          [W] cobox_aMr :: [Char] ~ t_aMo [" a type equality [Char]
                                                                             ~
                                                                             t_aMo " HTML3.hs:111:296-304] (CNonCanonical)
                          [W] cobox_aMt :: [t_aMs] ~ t_aCb [" a type equality [t_aMs]
                                                                              ~
                                                                              t_aCb " HTML3.hs:111:308-321] (CNonCanonical)
                          [W] cobox_aMu :: t_aC7 ~ t_aMs [" a type equality t_aC7
                                                                            ~
                                                                            t_aMs " HTML3.hs:111:309-320] (CNonCanonical)
                          [W] cobox_aMv :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:314-320] (CNonCanonical)
                          [W] cobox_aMw :: t_aC7 ~ t_aMi [" a type equality t_aC7
                                                                            ~
                                                                            t_aMi " HTML3.hs:111:324-341] (CNonCanonical)
                          [W] cobox_aMx :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:329-341] (CNonCanonical)
                          [W] cobox_aMy :: t_aCG ~ t_aLC [" a type equality t_aCG
                                                                            ~
                                                                            t_aLC " HTML3.hs:112:41-109] (CNonCanonical)
                          [W] cobox_aMA :: [t_aMz] ~ t_aCF [" a type equality [t_aMz]
                                                                              ~
                                                                              t_aCF " HTML3.hs:112:52-109] (CNonCanonical)
                          [W] cobox_aMC :: [t_aMB] ~ t_aMz [" a type equality [t_aMB]
                                                                              ~
                                                                              t_aMz " HTML3.hs:112:53-108] (CNonCanonical)
                          [W] $dNum_aMF :: Num
                                             a_aME [" the literal ‘0’ " HTML3.hs:112:70] (CNonCanonical)
                          [W] cobox_aMG :: (Integer -> a_aME)
                                           ~ (Integer -> t_aMD) [" a type equality Integer -> a_aME
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
                          [W] $dNum_aMI :: Num
                                             a_aMH [" the literal ‘25’ " HTML3.hs:112:72-73] (CNonCanonical)
                          [W] cobox_aMJ :: (Integer -> a_aMH)
                                           ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMH
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
                          [W] $dNum_aML :: Num
                                             a_aMK [" the literal ‘250’ " HTML3.hs:112:76-78] (CNonCanonical)
                          [W] cobox_aMM :: (Integer -> a_aMK)
                                           ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMK
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
                          [W] $dEnum_aOJ :: Enum
                                              t_aMD [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CNonCanonical)
                          [W] $dNum_aOM :: Num
                                             a_aOL [" the literal ‘0’ " HTML3.hs:112:88] (CNonCanonical)
                          [W] cobox_aON :: (Integer -> a_aOL)
                                           ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOL
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
                          [W] $dNum_aOP :: Num
                                             a_aOO [" the literal ‘25’ " HTML3.hs:112:90-91] (CNonCanonical)
                          [W] cobox_aOQ :: (Integer -> a_aOO)
                                           ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOO
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
                          [W] $dNum_aOS :: Num
                                             a_aOR [" the literal ‘250’ " HTML3.hs:112:94-96] (CNonCanonical)
                          [W] cobox_aOT :: (Integer -> a_aOR)
                                           ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOR
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
                          [W] $dEnum_aOU :: Enum
                                              t_aOK [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CNonCanonical)
                          [W] $dNum_aOX :: Num
                                             a_aOW [" the literal ‘0’ " HTML3.hs:112:106] (CNonCanonical)
                          [W] cobox_aOY :: (Integer -> a_aOW)
                                           ~ (Integer -> t_aOV) [" a type equality Integer -> a_aOW
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
                          [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1)
                                           ~ t_aMB [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                                      ~
                                                                      t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
                          [W] cobox_aP3 :: t_aMD ~ t_aOZ [" a type equality t_aMD
                                                                            ~
                                                                            t_aOZ " HTML3.hs:112:55] (CNonCanonical)
                          [W] cobox_aP4 :: t_aOK ~ t_aP0 [" a type equality t_aOK
                                                                            ~
                                                                            t_aP0 " HTML3.hs:112:57] (CNonCanonical)
                          [W] cobox_aP5 :: t_aOV ~ t_aP1 [" a type equality t_aOV
                                                                            ~
                                                                            t_aP1 " HTML3.hs:112:59] (CNonCanonical)
                          [W] cobox_aP7 :: IO () ~ t_aBW [" a type equality IO ()
                                                                            ~
                                                                            t_aBW " HTML3.hs:115:8-35] (CNonCanonical)
                          [W] cobox_aP8 :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                          ~
                                                                          Doc " HTML3.hs:115:16-34] (CNonCanonical)
                          [W] cobox_aP9 :: t_aBY ~ t_aD3 [" a type equality t_aBY
                                                                            ~
                                                                            t_aD3 " HTML3.hs:115:23-34] (CNonCanonical)
                          [W] cobox_aPc :: a_aPb
                                           ~ (t_aDQ -> t_aDR -> t_aDS) [" a type equality a_aPb
                                                                                          ~
                                                                                          t_aDQ
                                                                                          -> t_aDR
                                                                                          -> t_aDS " HTML3.hs:4:12-20] (CNonCanonical)
                          [W] cobox_aPe :: HTML ~ t_aDA [" a type equality HTML
                                                                           ~
                                                                           t_aDA " HTML3.hs:21:11-16] (CNonCanonical)
                          [W] cobox_aPg :: Maybe a_aPf ~ t_aDC [" a type equality Maybe a_aPf
                                                                                  ~
                                                                                  t_aDC " HTML3.hs:21:32-38] (CNonCanonical)
                          [W] cobox_aPh :: HTML ~ t_aDA [" a type equality HTML
                                                                           ~
                                                                           t_aDA " HTML3.hs:22:11-23] (CNonCanonical)
                          [W] cobox_aPj :: Maybe a_aPi ~ t_aDC [" a type equality Maybe a_aPi
                                                                                  ~
                                                                                  t_aDC " HTML3.hs:22:32-38] (CNonCanonical)
                          [W] cobox_aPk :: HTML ~ t_aDA [" a type equality HTML
                                                                           ~
                                                                           t_aDA " HTML3.hs:23:11-31] (CNonCanonical)
                          [W] cobox_aPl :: t_aDS ~ Bool [" a type equality t_aDS
                                                                           ~
                                                                           Bool " HTML3.hs:23:40-61] (CNonCanonical)
                          [W] cobox_aPm :: String ~ t_aDQ [" a type equality String
                                                                             ~
                                                                             t_aDQ " HTML3.hs:23:49-51] (CNonCanonical)
                          [W] cobox_aPp :: b_aPo ~ t_aDR [" a type equality b_aPo
                                                                            ~
                                                                            t_aDR " HTML3.hs:23:54-60] (CNonCanonical)
                          [W] cobox_aPq :: t_aDB ~ (a_aPn, b_aPo) [" a type equality t_aDB
                                                                                     ~
                                                                                     (a_aPn,
                                                                                      b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
                          [W] cobox_aPs :: Maybe a_aPr ~ t_aDC [" a type equality Maybe a_aPr
                                                                                  ~
                                                                                  t_aDC " HTML3.hs:23:65-72] (CNonCanonical)
                          [W] cobox_aPt :: t_aDB ~ a_aPr [" a type equality t_aDB
                                                                            ~
                                                                            a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
                          [W] cobox_aPu :: t_aDS ~ Bool [" a type equality t_aDS
                                                                           ~
                                                                           Bool " HTML3.hs:24:40-61] (CNonCanonical)
                          [W] cobox_aPv :: String ~ t_aDQ [" a type equality String
                                                                             ~
                                                                             t_aDQ " HTML3.hs:24:49-51] (CNonCanonical)
                          [W] cobox_aPy :: a_aPw ~ t_aDR [" a type equality a_aPw
                                                                            ~
                                                                            t_aDR " HTML3.hs:24:54-60] (CNonCanonical)
                          [W] cobox_aPz :: t_aDB ~ (a_aPw, b_aPx) [" a type equality t_aDB
                                                                                     ~
                                                                                     (a_aPw,
                                                                                      b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
                          [W] cobox_aPB :: Maybe a_aPA ~ t_aDC [" a type equality Maybe a_aPA
                                                                                  ~
                                                                                  t_aDC " HTML3.hs:24:65-71] (CNonCanonical)
                          [W] cobox_aPC :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:25:40-48] (CNonCanonical)
                          [W] cobox_aPD :: t_aDp ~ t_aDC [" a type equality t_aDp
                                                                            ~
                                                                            t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
                          [W] cobox_aPG :: [b_aPF] ~ t_aDo [" a type equality [b_aPF]
                                                                              ~
                                                                              t_aDo " HTML3.hs:25:60-97] (CNonCanonical)
                          [W] cobox_aPH :: t_aDC ~ b_aPF [" a type equality t_aDC
                                                                            ~
                                                                            b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
                          [W] cobox_aPI :: a_aPE ~ t_aDA [" a type equality a_aPE
                                                                            ~
                                                                            t_aDA " HTML3.hs:25:83-86] (CNonCanonical)
                          [W] cobox_aPJ :: t_aDB ~ t_aDB [" a type equality t_aDB
                                                                            ~
                                                                            t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
                          [W] cobox_aPK :: [HTML] ~ [a_aPE] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aPE] " HTML3.hs:25:93-97] (CNonCanonical)
                          [W] cobox_aPM :: t_aDp ~ t_aDv [" a type equality t_aDp
                                                                            ~
                                                                            t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
                          [W] cobox_aPP :: [b_aPO] ~ t_aDo [" a type equality [b_aPO]
                                                                              ~
                                                                              t_aDo " HTML3.hs:28:30-53] (CNonCanonical)
                          [W] cobox_aPQ :: (t_aDB -> t_aDC)
                                           ~ (a_aPN -> b_aPO) [" a type equality t_aDB -> t_aDC
                                                                                 ~
                                                                                 a_aPN
                                                                                 -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
                          [W] cobox_aPR :: t_aDu ~ t_aDA [" a type equality t_aDu
                                                                            ~
                                                                            t_aDA " HTML3.hs:28:44-47] (CNonCanonical)
                          [W] cobox_aPS :: t_aDt ~ [a_aPN] [" a type equality t_aDt
                                                                              ~
                                                                              [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)}
solveWantedsTcMWithEvBinds
  wanted= WC {wc_flat = [W] cobox_aBX :: IO ()
                                         ~ t_aBW [" a type equality IO ()
                                                                    ~
                                                                    t_aBW " HTML3.hs:114:9-13] (CNonCanonical)
                        [W] cobox_aBZ :: HTML ~ t_aBY [" a type equality HTML
                                                                         ~
                                                                         t_aBY " HTML3.hs:109:17-20] (CNonCanonical)
                        [W] cobox_aC3 :: String ~ t_aC0 [" a type equality String
                                                                           ~
                                                                           t_aC0 " HTML3.hs:106:13-36] (CNonCanonical)
                        [W] cobox_aC4 :: [HTML] ~ t_aC1 [" a type equality [HTML]
                                                                           ~
                                                                           t_aC1 " HTML3.hs:106:13-36] (CNonCanonical)
                        [W] cobox_aC5 :: HTML ~ t_aC2 [" a type equality HTML
                                                                         ~
                                                                         t_aC2 " HTML3.hs:106:13-36] (CNonCanonical)
                        [W] cobox_aC8 :: String ~ t_aC6 [" a type equality String
                                                                           ~
                                                                           t_aC6 " HTML3.hs:103:9-22] (CNonCanonical)
                        [W] cobox_aC9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                         ~
                                                                         t_aC7 " HTML3.hs:103:9-22] (CNonCanonical)
                        [W] cobox_aCd :: [Attribute] ~ t_aCa [" a type equality [Attribute]
                                                                                ~
                                                                                t_aCa " HTML3.hs:100:9-37] (CNonCanonical)
                        [W] cobox_aCe :: [HTML] ~ t_aCb [" a type equality [HTML]
                                                                           ~
                                                                           t_aCb " HTML3.hs:100:9-37] (CNonCanonical)
                        [W] cobox_aCf :: HTML ~ t_aCc [" a type equality HTML
                                                                         ~
                                                                         t_aCc " HTML3.hs:100:9-37] (CNonCanonical)
                        [W] cobox_aCj :: Int ~ t_aCg [" a type equality Int
                                                                        ~
                                                                        t_aCg " HTML3.hs:97:6-26] (CNonCanonical)
                        [W] cobox_aCk :: String ~ t_aCh [" a type equality String
                                                                           ~
                                                                           t_aCh " HTML3.hs:97:6-26] (CNonCanonical)
                        [W] cobox_aCl :: HTML ~ t_aCi [" a type equality HTML
                                                                         ~
                                                                         t_aCi " HTML3.hs:97:6-26] (CNonCanonical)
                        [W] cobox_aCo :: [HTML] ~ t_aCm [" a type equality [HTML]
                                                                           ~
                                                                           t_aCm " HTML3.hs:94:7-20] (CNonCanonical)
                        [W] cobox_aCp :: HTML ~ t_aCn [" a type equality HTML
                                                                         ~
                                                                         t_aCn " HTML3.hs:94:7-20] (CNonCanonical)
                        [W] cobox_aCs :: [[HTML]] ~ t_aCq [" a type equality [[HTML]]
                                                                             ~
                                                                             t_aCq " HTML3.hs:91:7-22] (CNonCanonical)
                        [W] cobox_aCt :: HTML ~ t_aCr [" a type equality HTML
                                                                         ~
                                                                         t_aCr " HTML3.hs:91:7-22] (CNonCanonical)
                        [W] cobox_aCz :: (Int, Int, Int) ~ t_aCx [" a type equality (Int,
                                                                                     Int,
                                                                                     Int)
                                                                                    ~
                                                                                    t_aCx " HTML3.hs:88:13-35] (CNonCanonical)
                        [W] cobox_aCA :: HTML ~ t_aCy [" a type equality HTML
                                                                         ~
                                                                         t_aCy " HTML3.hs:88:13-35] (CNonCanonical)
                        [W] cobox_aCD :: [(Int, Int, Int)]
                                         ~ t_aCB [" a type equality [(Int, Int, Int)]
                                                                    ~
                                                                    t_aCB " HTML3.hs:85:12-36] (CNonCanonical)
                        [W] cobox_aCE :: HTML ~ t_aCC [" a type equality HTML
                                                                         ~
                                                                         t_aCC " HTML3.hs:85:12-36] (CNonCanonical)
                        [W] cobox_aCH :: [[(Int, Int, Int)]]
                                         ~ t_aCF [" a type equality [[(Int, Int, Int)]]
                                                                    ~
                                                                    t_aCF " HTML3.hs:82:15-41] (CNonCanonical)
                        [W] cobox_aCI :: HTML ~ t_aCG [" a type equality HTML
                                                                         ~
                                                                         t_aCG " HTML3.hs:82:15-41] (CNonCanonical)
                        [W] cobox_aCL :: Int ~ t_aCJ [" a type equality Int
                                                                        ~
                                                                        t_aCJ " HTML3.hs:72:14-26] (CNonCanonical)
                        [W] cobox_aCM :: String ~ t_aCK [" a type equality String
                                                                           ~
                                                                           t_aCK " HTML3.hs:72:14-26] (CNonCanonical)
                        [W] cobox_aCR :: Int ~ t_aCN [" a type equality Int
                                                                        ~
                                                                        t_aCN " HTML3.hs:68:10-36] (CNonCanonical)
                        [W] cobox_aCS :: Int ~ t_aCO [" a type equality Int
                                                                        ~
                                                                        t_aCO " HTML3.hs:68:10-36] (CNonCanonical)
                        [W] cobox_aCT :: Int ~ t_aCP [" a type equality Int
                                                                        ~
                                                                        t_aCP " HTML3.hs:68:10-36] (CNonCanonical)
                        [W] cobox_aCU :: String ~ t_aCQ [" a type equality String
                                                                           ~
                                                                           t_aCQ " HTML3.hs:68:10-36] (CNonCanonical)
                        [W] cobox_aCX :: [(String, String)]
                                         ~ t_aCV [" a type equality [(String, String)]
                                                                    ~
                                                                    t_aCV " HTML3.hs:60:13-40] (CNonCanonical)
                        [W] cobox_aCY :: String ~ t_aCW [" a type equality String
                                                                           ~
                                                                           t_aCW " HTML3.hs:60:13-40] (CNonCanonical)
                        [W] cobox_aD1 :: HTML ~ t_aCZ [" a type equality HTML
                                                                         ~
                                                                         t_aCZ " HTML3.hs:55:9-22] (CNonCanonical)
                        [W] cobox_aD2 :: String ~ t_aD0 [" a type equality String
                                                                           ~
                                                                           t_aD0 " HTML3.hs:55:9-22] (CNonCanonical)
                        [W] cobox_aD5 :: HTML ~ t_aD3 [" a type equality HTML
                                                                         ~
                                                                         t_aD3 " HTML3.hs:47:11-21] (CNonCanonical)
                        [W] cobox_aD6 :: Doc ~ t_aD4 [" a type equality Doc
                                                                        ~
                                                                        t_aD4 " HTML3.hs:47:11-21] (CNonCanonical)
                        [W] cobox_aD8 :: [Requirement]
                                         ~ t_aD7 [" a type equality [Requirement]
                                                                    ~
                                                                    t_aD7 " HTML3.hs:41:11-23] (CNonCanonical)
                        [W] cobox_aDq :: [Maybe Requirement]
                                         ~ t_aDo [" a type equality [Maybe Requirement]
                                                                    ~
                                                                    t_aDo " HTML3.hs:36:11-50] (CNonCanonical)
                        [W] cobox_aDr :: Maybe Requirement ~ t_aDp [" a type equality Maybe
                                                                                        Requirement
                                                                                      ~
                                                                                      t_aDp " HTML3.hs:36:11-50] (CNonCanonical)
                        [W] cobox_aDw :: [Requirement]
                                         ~ t_aDt [" a type equality [Requirement]
                                                                    ~
                                                                    t_aDt " HTML3.hs:27:13-54] (CNonCanonical)
                        [W] cobox_aDx :: HTML ~ t_aDu [" a type equality HTML
                                                                         ~
                                                                         t_aDu " HTML3.hs:27:13-54] (CNonCanonical)
                        [W] cobox_aDy :: Maybe Requirement ~ t_aDv [" a type equality Maybe
                                                                                        Requirement
                                                                                      ~
                                                                                      t_aDv " HTML3.hs:27:13-54] (CNonCanonical)
                        [W] cobox_aDD :: HTML ~ t_aDA [" a type equality HTML
                                                                         ~
                                                                         t_aDA " HTML3.hs:20:13-52] (CNonCanonical)
                        [W] cobox_aDE :: Requirement ~ t_aDB [" a type equality Requirement
                                                                                ~
                                                                                t_aDB " HTML3.hs:20:13-52] (CNonCanonical)
                        [W] cobox_aDF :: Maybe Requirement ~ t_aDC [" a type equality Maybe
                                                                                        Requirement
                                                                                      ~
                                                                                      t_aDC " HTML3.hs:20:13-52] (CNonCanonical)
                        [W] cobox_aDH :: HTML ~ t_aDG [" a type equality HTML
                                                                         ~
                                                                         t_aDG " HTML3.hs:13:14-17] (CNonCanonical)
                        [W] cobox_aDK :: Int ~ t_aDI [" a type equality Int
                                                                        ~
                                                                        t_aDI " HTML3.hs:7:8-18] (CNonCanonical)
                        [W] cobox_aDL :: Char ~ t_aDJ [" a type equality Char
                                                                         ~
                                                                         t_aDJ " HTML3.hs:7:8-18] (CNonCanonical)
                        [W] cobox_aDO :: Int ~ t_aDM [" a type equality Int
                                                                        ~
                                                                        t_aDM " HTML3.hs:5:18-30] (CNonCanonical)
                        [W] cobox_aDP :: String ~ t_aDN [" a type equality String
                                                                           ~
                                                                           t_aDN " HTML3.hs:5:18-30] (CNonCanonical)
                        [W] cobox_aDT :: String ~ t_aDQ [" a type equality String
                                                                           ~
                                                                           t_aDQ " HTML3.hs:3:18-41] (CNonCanonical)
                        [W] cobox_aDU :: String ~ t_aDR [" a type equality String
                                                                           ~
                                                                           t_aDR " HTML3.hs:3:18-41] (CNonCanonical)
                        [W] cobox_aDV :: Bool ~ t_aDS [" a type equality Bool
                                                                         ~
                                                                         t_aDS " HTML3.hs:3:18-41] (CNonCanonical)
                        [W] cobox_aDX :: HTML ~ t_aC2 [" a type equality HTML
                                                                         ~
                                                                         t_aC2 " HTML3.hs:107:24-129] (CNonCanonical)
                        [W] cobox_aDY :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:107:34-39] (CNonCanonical)
                        [W] cobox_aDZ :: HTML ~ HTML [" a type equality HTML
                                                                        ~
                                                                        HTML " HTML3.hs:107:45-100] (CNonCanonical)
                        [W] cobox_aE0 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:107:55-60] (CNonCanonical)
                        [W] cobox_aE1 :: HTML ~ HTML [" a type equality HTML
                                                                        ~
                                                                        HTML " HTML3.hs:107:66-98] (CNonCanonical)
                        [W] cobox_aE2 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:107:76-82] (CNonCanonical)
                        [W] cobox_aE3 :: HTML ~ HTML [" a type equality HTML
                                                                        ~
                                                                        HTML " HTML3.hs:107:88-97] (CNonCanonical)
                        [W] cobox_aE4 :: t_aC0 ~ String [" a type equality t_aC0
                                                                           ~
                                                                           String " HTML3.hs:107:93-97] (CNonCanonical)
                        [W] cobox_aE5 :: HTML ~ HTML [" a type equality HTML
                                                                        ~
                                                                        HTML " HTML3.hs:107:103-127] (CNonCanonical)
                        [W] cobox_aE6 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:107:113-118] (CNonCanonical)
                        [W] cobox_aE7 :: t_aC1 ~ [HTML] [" a type equality t_aC1
                                                                           ~
                                                                           [HTML] " HTML3.hs:107:123-127] (CNonCanonical)
                        [W] cobox_aE9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                         ~
                                                                         t_aC7 " HTML3.hs:104:15-25] (CNonCanonical)
                        [W] cobox_aEa :: t_aC6 ~ String [" a type equality t_aC6
                                                                           ~
                                                                           String " HTML3.hs:104:20-25] (CNonCanonical)
                        [W] cobox_aEc :: HTML ~ t_aCc [" a type equality HTML
                                                                         ~
                                                                         t_aCc " HTML3.hs:101:20-47] (CNonCanonical)
                        [W] cobox_aEd :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:101:30-35] (CNonCanonical)
                        [W] cobox_aEe :: t_aCa ~ [Attribute] [" a type equality t_aCa
                                                                                ~
                                                                                [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
                        [W] cobox_aEf :: t_aCb ~ [HTML] [" a type equality t_aCb
                                                                           ~
                                                                           [HTML] " HTML3.hs:101:43-47] (CNonCanonical)
                        [W] cobox_aEh :: HTML ~ t_aCn [" a type equality HTML
                                                                         ~
                                                                         t_aCn " HTML3.hs:95:12-34] (CNonCanonical)
                        [W] cobox_aEi :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:95:22-25] (CNonCanonical)
                        [W] cobox_aEj :: t_aCm ~ [HTML] [" a type equality t_aCm
                                                                           ~
                                                                           [HTML] " HTML3.hs:95:30-34] (CNonCanonical)
                        [W] cobox_aEl :: HTML ~ t_aCr [" a type equality HTML
                                                                         ~
                                                                         t_aCr " HTML3.hs:92:12-43] (CNonCanonical)
                        [W] cobox_aEm :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:92:22-25] (CNonCanonical)
                        [W] cobox_aEp :: [b_aEo] ~ [HTML] [" a type equality [b_aEo]
                                                                             ~
                                                                             [HTML] " HTML3.hs:92:31-42] (CNonCanonical)
                        [W] cobox_aEq :: (t_aCm -> t_aCn)
                                         ~ (a_aEn -> b_aEo) [" a type equality t_aCm -> t_aCn
                                                                               ~
                                                                               a_aEn
                                                                               -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
                        [W] cobox_aEr :: t_aCq ~ [a_aEn] [" a type equality t_aCq
                                                                            ~
                                                                            [a_aEn] " HTML3.hs:92:38-42] (CNonCanonical)
                        [W] cobox_aEw :: t_aEt ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                                                     ~
                                                                                     t_aEu
                                                                                     -> t_aEv " HTML3.hs:62:41-96] (CNonCanonical)
                        [W] cobox_aEy :: [a_aEx] ~ t_aEv [" a type equality [a_aEx]
                                                                            ~
                                                                            t_aEv " HTML3.hs:62:56-96] (CNonCanonical)
                        [W] cobox_aED :: a_aEB ~ [a_aEx] [" a type equality a_aEB
                                                                            ~
                                                                            [a_aEx] " HTML3.hs:62:56-62] (CNonCanonical)
                        [W] cobox_aEE :: t_aEu ~ (a_aEB, b_aEC) [" a type equality t_aEu
                                                                                   ~
                                                                                   (a_aEB,
                                                                                    b_aEC) " HTML3.hs:62:60-62] (CNonCanonical)
                        [W] cobox_aEG :: [a_aEF] ~ [a_aEx] [" a type equality [a_aEF]
                                                                              ~
                                                                              [a_aEx] " HTML3.hs:62:67-96] (CNonCanonical)
                        [W] cobox_aEH :: [Char] ~ [a_aEF] [" a type equality [Char]
                                                                             ~
                                                                             [a_aEF] " HTML3.hs:62:67-69] (CNonCanonical)
                        [W] cobox_aEJ :: [a_aEI] ~ [a_aEF] [" a type equality [a_aEI]
                                                                              ~
                                                                              [a_aEF] " HTML3.hs:62:74-96] (CNonCanonical)
                        [W] cobox_aEK :: [Char] ~ [a_aEI] [" a type equality [Char]
                                                                             ~
                                                                             [a_aEI] " HTML3.hs:62:74-77] (CNonCanonical)
                        [W] cobox_aEM :: [a_aEL] ~ [a_aEI] [" a type equality [a_aEL]
                                                                              ~
                                                                              [a_aEI] " HTML3.hs:62:82-96] (CNonCanonical)
                        [W] cobox_aER :: b_aEQ ~ [a_aEL] [" a type equality b_aEQ
                                                                            ~
                                                                            [a_aEL] " HTML3.hs:62:82-88] (CNonCanonical)
                        [W] cobox_aES :: t_aEu ~ (a_aEP, b_aEQ) [" a type equality t_aEu
                                                                                   ~
                                                                                   (a_aEP,
                                                                                    b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
                        [W] cobox_aET :: [Char] ~ [a_aEL] [" a type equality [Char]
                                                                             ~
                                                                             [a_aEL] " HTML3.hs:62:93-96] (CNonCanonical)
                        [W] cobox_aEW :: [a_aEV] ~ t_aCW [" a type equality [a_aEV]
                                                                            ~
                                                                            t_aCW " HTML3.hs:61:17-55] (CNonCanonical)
                        [W] cobox_aEZ :: [b_aEY] ~ [[a_aEV]] [" a type equality [b_aEY]
                                                                                ~
                                                                                [[a_aEV]] " HTML3.hs:61:25-54] (CNonCanonical)
                        [W] cobox_aF1 :: ([a_aF0] -> [a_aF0])
                                         ~ (a_aEX -> b_aEY) [" a type equality [a_aF0] -> [a_aF0]
                                                                               ~
                                                                               a_aEX
                                                                               -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
                        [W] cobox_aF2 :: Char ~ a_aF0 [" a type equality Char
                                                                         ~
                                                                         a_aF0 " HTML3.hs:61:30-32] (CNonCanonical)
                        [W] cobox_aF5 :: [b_aF4] ~ [a_aEX] [" a type equality [b_aF4]
                                                                              ~
                                                                              [a_aEX] " HTML3.hs:61:37-53] (CNonCanonical)
                        [W] cobox_aF6 :: t_aEt ~ (a_aF3 -> b_aF4) [" a type equality t_aEt
                                                                                     ~
                                                                                     a_aF3
                                                                                     -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
                        [W] cobox_aF7 :: t_aCV ~ [a_aF3] [" a type equality t_aCV
                                                                            ~
                                                                            [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
                        [W] cobox_aF9 :: HTML ~ t_aCZ [" a type equality HTML
                                                                         ~
                                                                         t_aCZ " HTML3.hs:56:7-17] (CNonCanonical)
                        [W] cobox_aFa :: String ~ t_aD0 [" a type equality String
                                                                           ~
                                                                           t_aD0 " HTML3.hs:56:35-40] (CNonCanonical)
                        [W] cobox_aFb :: HTML ~ t_aCZ [" a type equality HTML
                                                                         ~
                                                                         t_aCZ " HTML3.hs:57:7-24] (CNonCanonical)
                        [W] cobox_aFd :: [a_aFc] ~ t_aD0 [" a type equality [a_aFc]
                                                                            ~
                                                                            t_aD0 " HTML3.hs:57:35-68] (CNonCanonical)
                        [W] cobox_aFe :: [Char] ~ [a_aFc] [" a type equality [Char]
                                                                             ~
                                                                             [a_aFc] " HTML3.hs:57:35-37] (CNonCanonical)
                        [W] cobox_aFg :: [a_aFf] ~ [a_aFc] [" a type equality [a_aFf]
                                                                              ~
                                                                              [a_aFc] " HTML3.hs:57:42-68] (CNonCanonical)
                        [W] cobox_aFh :: String ~ [a_aFf] [" a type equality String
                                                                             ~
                                                                             [a_aFf] " HTML3.hs:57:42-44] (CNonCanonical)
                        [W] cobox_aFj :: [a_aFi] ~ [a_aFf] [" a type equality [a_aFi]
                                                                              ~
                                                                              [a_aFf] " HTML3.hs:57:49-68] (CNonCanonical)
                        [W] cobox_aFk :: t_aCW ~ [a_aFi] [" a type equality t_aCW
                                                                            ~
                                                                            [a_aFi] " HTML3.hs:57:49-61] (CNonCanonical)
                        [W] cobox_aFl :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                ~
                                                                                t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
                        [W] cobox_aFm :: [Char] ~ [a_aFi] [" a type equality [Char]
                                                                             ~
                                                                             [a_aFi] " HTML3.hs:57:66-68] (CNonCanonical)
                        [W] cobox_aFn :: HTML ~ t_aCZ [" a type equality HTML
                                                                         ~
                                                                         t_aCZ " HTML3.hs:58:7-30] (CNonCanonical)
                        [W] cobox_aFp :: [a_aFo] ~ t_aD0 [" a type equality [a_aFo]
                                                                            ~
                                                                            t_aD0 " HTML3.hs:58:35-114] (CNonCanonical)
                        [W] cobox_aFq :: [Char] ~ [a_aFo] [" a type equality [Char]
                                                                             ~
                                                                             [a_aFo] " HTML3.hs:58:35-37] (CNonCanonical)
                        [W] cobox_aFs :: [a_aFr] ~ [a_aFo] [" a type equality [a_aFr]
                                                                              ~
                                                                              [a_aFo] " HTML3.hs:58:42-114] (CNonCanonical)
                        [W] cobox_aFt :: String ~ [a_aFr] [" a type equality String
                                                                             ~
                                                                             [a_aFr] " HTML3.hs:58:42-44] (CNonCanonical)
                        [W] cobox_aFv :: [a_aFu] ~ [a_aFr] [" a type equality [a_aFu]
                                                                              ~
                                                                              [a_aFr] " HTML3.hs:58:49-114] (CNonCanonical)
                        [W] cobox_aFw :: t_aCW ~ [a_aFu] [" a type equality t_aCW
                                                                            ~
                                                                            [a_aFu] " HTML3.hs:58:49-61] (CNonCanonical)
                        [W] cobox_aFx :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                ~
                                                                                t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
                        [W] cobox_aFz :: [a_aFy] ~ [a_aFu] [" a type equality [a_aFy]
                                                                              ~
                                                                              [a_aFu] " HTML3.hs:58:66-114] (CNonCanonical)
                        [W] cobox_aFA :: [Char] ~ [a_aFy] [" a type equality [Char]
                                                                             ~
                                                                             [a_aFy] " HTML3.hs:58:66-68] (CNonCanonical)
                        [W] cobox_aFC :: [a_aFB] ~ [a_aFy] [" a type equality [a_aFB]
                                                                              ~
                                                                              [a_aFy] " HTML3.hs:58:73-114] (CNonCanonical)
                        [W] cobox_aFH :: [b_aFG] ~ [a_aFB] [" a type equality [b_aFG]
                                                                              ~
                                                                              [a_aFB] " HTML3.hs:58:73-92] (CNonCanonical)
                        [W] cobox_aFI :: (t_aCZ -> t_aD0)
                                         ~ (a_aFF -> [b_aFG]) [" a type equality t_aCZ -> t_aD0
                                                                                 ~
                                                                                 a_aFF
                                                                                 -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
                        [W] cobox_aFJ :: [HTML] ~ [a_aFF] [" a type equality [HTML]
                                                                             ~
                                                                             [a_aFF] " HTML3.hs:58:88-92] (CNonCanonical)
                        [W] cobox_aFL :: [a_aFK] ~ [a_aFB] [" a type equality [a_aFK]
                                                                              ~
                                                                              [a_aFB] " HTML3.hs:58:97-114] (CNonCanonical)
                        [W] cobox_aFM :: [Char] ~ [a_aFK] [" a type equality [Char]
                                                                             ~
                                                                             [a_aFK] " HTML3.hs:58:97-100] (CNonCanonical)
                        [W] cobox_aFO :: [a_aFN] ~ [a_aFK] [" a type equality [a_aFN]
                                                                              ~
                                                                              [a_aFK] " HTML3.hs:58:105-114] (CNonCanonical)
                        [W] cobox_aFP :: String ~ [a_aFN] [" a type equality String
                                                                             ~
                                                                             [a_aFN] " HTML3.hs:58:105-107] (CNonCanonical)
                        [W] cobox_aFQ :: [Char] ~ [a_aFN] [" a type equality [Char]
                                                                             ~
                                                                             [a_aFN] " HTML3.hs:58:112-114] (CNonCanonical)
                        [W] cobox_aFS :: HTML ~ t_aD3 [" a type equality HTML
                                                                         ~
                                                                         t_aD3 " HTML3.hs:48:9-19] (CNonCanonical)
                        [W] cobox_aFT :: Doc ~ t_aD4 [" a type equality Doc
                                                                        ~
                                                                        t_aD4 " HTML3.hs:48:37-48] (CNonCanonical)
                        [W] cobox_aFU :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML3.hs:48:43-48] (CNonCanonical)
                        [W] cobox_aFV :: HTML ~ t_aD3 [" a type equality HTML
                                                                         ~
                                                                         t_aD3 " HTML3.hs:49:9-26] (CNonCanonical)
                        [W] cobox_aFW :: Doc ~ t_aD4 [" a type equality Doc
                                                                        ~
                                                                        t_aD4 " HTML3.hs:49:37-69] (CNonCanonical)
                        [W] cobox_aFX :: t_aD0 ~ String [" a type equality t_aD0
                                                                           ~
                                                                           String " HTML3.hs:49:44-68] (CNonCanonical)
                        [W] cobox_aFY :: HTML ~ t_aCZ [" a type equality HTML
                                                                         ~
                                                                         t_aCZ " HTML3.hs:49:50-67] (CNonCanonical)
                        [W] cobox_aFZ :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML3.hs:49:60-62] (CNonCanonical)
                        [W] cobox_aG0 :: [Attribute]
                                         ~ [Attribute] [" a type equality [Attribute]
                                                                          ~
                                                                          [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
                        [W] cobox_aG1 :: HTML ~ t_aD3 [" a type equality HTML
                                                                         ~
                                                                         t_aD3 " HTML3.hs:50:9-40] (CNonCanonical)
                        [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
                        [W] cobox_aG3 :: Doc ~ t_aD4 [" a type equality Doc
                                                                        ~
                                                                        t_aD4 " HTML3.hs:50:45-118] (CNonCanonical)
                        [W] cobox_aG5 :: [a_aG4] ~ String [" a type equality [a_aG4]
                                                                             ~
                                                                             String " HTML3.hs:50:52-117] (CNonCanonical)
                        [W] cobox_aG6 :: [Char] ~ [a_aG4] [" a type equality [Char]
                                                                             ~
                                                                             [a_aG4] " HTML3.hs:50:52-54] (CNonCanonical)
                        [W] cobox_aG8 :: [a_aG7] ~ [a_aG4] [" a type equality [a_aG7]
                                                                              ~
                                                                              [a_aG4] " HTML3.hs:50:59-117] (CNonCanonical)
                        [W] cobox_aG9 :: String ~ [a_aG7] [" a type equality String
                                                                             ~
                                                                             [a_aG7] " HTML3.hs:50:59-61] (CNonCanonical)
                        [W] cobox_aGb :: [a_aGa] ~ [a_aG7] [" a type equality [a_aGa]
                                                                              ~
                                                                              [a_aG7] " HTML3.hs:50:66-117] (CNonCanonical)
                        [W] cobox_aGc :: t_aCW ~ [a_aGa] [" a type equality t_aCW
                                                                            ~
                                                                            [a_aGa] " HTML3.hs:50:66-78] (CNonCanonical)
                        [W] cobox_aGd :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                ~
                                                                                t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
                        [W] cobox_aGf :: [a_aGe] ~ [a_aGa] [" a type equality [a_aGe]
                                                                              ~
                                                                              [a_aGa] " HTML3.hs:50:83-117] (CNonCanonical)
                        [W] cobox_aGg :: [Char] ~ [a_aGe] [" a type equality [Char]
                                                                             ~
                                                                             [a_aGe] " HTML3.hs:50:83-85] (CNonCanonical)
                        [W] cobox_aGi :: [a_aGh] ~ [a_aGe] [" a type equality [a_aGh]
                                                                              ~
                                                                              [a_aGe] " HTML3.hs:50:90-117] (CNonCanonical)
                        [W] cobox_aGj :: String ~ [a_aGh] [" a type equality String
                                                                             ~
                                                                             [a_aGh] " HTML3.hs:50:90-95] (CNonCanonical)
                        [W] cobox_aGl :: [a_aGk] ~ [a_aGh] [" a type equality [a_aGk]
                                                                              ~
                                                                              [a_aGh] " HTML3.hs:50:100-117] (CNonCanonical)
                        [W] cobox_aGm :: [Char] ~ [a_aGk] [" a type equality [Char]
                                                                             ~
                                                                             [a_aGk] " HTML3.hs:50:100-103] (CNonCanonical)
                        [W] cobox_aGo :: [a_aGn] ~ [a_aGk] [" a type equality [a_aGn]
                                                                              ~
                                                                              [a_aGk] " HTML3.hs:50:108-117] (CNonCanonical)
                        [W] cobox_aGp :: String ~ [a_aGn] [" a type equality String
                                                                             ~
                                                                             [a_aGn] " HTML3.hs:50:108-110] (CNonCanonical)
                        [W] cobox_aGq :: [Char] ~ [a_aGn] [" a type equality [Char]
                                                                             ~
                                                                             [a_aGn] " HTML3.hs:50:115-117] (CNonCanonical)
                        [W] cobox_aGr :: HTML ~ t_aD3 [" a type equality HTML
                                                                         ~
                                                                         t_aD3 " HTML3.hs:51:9-32] (CNonCanonical)
                        [W] $dEq_aGz :: Eq
                                          a_aGy [" a use of ‘==’ " HTML3.hs:51:50-51] (CNonCanonical)
                        [W] cobox_aGA :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML3.hs:51:37-53] (CNonCanonical)
                        [W] cobox_aGC :: Int ~ a_aGy [" a type equality Int
                                                                        ~
                                                                        a_aGy " HTML3.hs:51:37-48] (CNonCanonical)
                        [W] cobox_aGD :: [HTML] ~ [a_aGB] [" a type equality [HTML]
                                                                             ~
                                                                             [a_aGB] " HTML3.hs:51:44-48] (CNonCanonical)
                        [W] $dNum_aGF :: Num
                                           a_aGE [" the literal ‘0’ " HTML3.hs:51:53] (CNonCanonical)
                        [W] cobox_aGG :: (Integer -> a_aGE)
                                         ~ (Integer -> a_aGy) [" a type equality Integer -> a_aGE
                                                                                 ~
                                                                                 Integer
                                                                                 -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
                        [W] cobox_aGH :: Doc ~ t_aD4 [" a type equality Doc
                                                                        ~
                                                                        t_aD4 " HTML3.hs:51:57-114] (CNonCanonical)
                        [W] cobox_aGJ :: [a_aGI] ~ String [" a type equality [a_aGI]
                                                                             ~
                                                                             String " HTML3.hs:51:64-113] (CNonCanonical)
                        [W] cobox_aGK :: [Char] ~ [a_aGI] [" a type equality [Char]
                                                                             ~
                                                                             [a_aGI] " HTML3.hs:51:64-66] (CNonCanonical)
                        [W] cobox_aGM :: [a_aGL] ~ [a_aGI] [" a type equality [a_aGL]
                                                                              ~
                                                                              [a_aGI] " HTML3.hs:51:71-113] (CNonCanonical)
                        [W] cobox_aGN :: String ~ [a_aGL] [" a type equality String
                                                                             ~
                                                                             [a_aGL] " HTML3.hs:51:71-73] (CNonCanonical)
                        [W] cobox_aGP :: [a_aGO] ~ [a_aGL] [" a type equality [a_aGO]
                                                                              ~
                                                                              [a_aGL] " HTML3.hs:51:78-113] (CNonCanonical)
                        [W] cobox_aGQ :: t_aCW ~ [a_aGO] [" a type equality t_aCW
                                                                            ~
                                                                            [a_aGO] " HTML3.hs:51:78-90] (CNonCanonical)
                        [W] cobox_aGR :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                ~
                                                                                t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
                        [W] cobox_aGT :: [a_aGS] ~ [a_aGO] [" a type equality [a_aGS]
                                                                              ~
                                                                              [a_aGO] " HTML3.hs:51:95-113] (CNonCanonical)
                        [W] cobox_aGU :: [Char] ~ [a_aGS] [" a type equality [Char]
                                                                             ~
                                                                             [a_aGS] " HTML3.hs:51:95-99] (CNonCanonical)
                        [W] cobox_aGW :: [a_aGV] ~ [a_aGS] [" a type equality [a_aGV]
                                                                              ~
                                                                              [a_aGS] " HTML3.hs:51:104-113] (CNonCanonical)
                        [W] cobox_aGX :: String ~ [a_aGV] [" a type equality String
                                                                             ~
                                                                             [a_aGV] " HTML3.hs:51:104-106] (CNonCanonical)
                        [W] cobox_aGY :: [Char] ~ [a_aGV] [" a type equality [Char]
                                                                             ~
                                                                             [a_aGV] " HTML3.hs:51:111-113] (CNonCanonical)
                        [W] $dEq_aH0 :: Eq
                                          a_aGZ [" a use of ‘==’ " HTML3.hs:52:50-51] (CNonCanonical)
                        [W] cobox_aH1 :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML3.hs:52:37-53] (CNonCanonical)
                        [W] cobox_aH3 :: Int ~ a_aGZ [" a type equality Int
                                                                        ~
                                                                        a_aGZ " HTML3.hs:52:37-48] (CNonCanonical)
                        [W] cobox_aH4 :: [HTML] ~ [a_aH2] [" a type equality [HTML]
                                                                             ~
                                                                             [a_aH2] " HTML3.hs:52:44-48] (CNonCanonical)
                        [W] $dNum_aH6 :: Num
                                           a_aH5 [" the literal ‘1’ " HTML3.hs:52:53] (CNonCanonical)
                        [W] cobox_aH7 :: (Integer -> a_aH5)
                                         ~ (Integer -> a_aGZ) [" a type equality Integer -> a_aH5
                                                                                 ~
                                                                                 Integer
                                                                                 -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
                        [W] cobox_aH8 :: Doc ~ t_aD4 [" a type equality Doc
                                                                        ~
                                                                        t_aD4 " HTML3.hs:52:57-153] (CNonCanonical)
                        [W] cobox_aH9 :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML3.hs:52:57-122] (CNonCanonical)
                        [W] cobox_aHa :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML3.hs:52:57-98] (CNonCanonical)
                        [W] cobox_aHc :: [a_aHb] ~ String [" a type equality [a_aHb]
                                                                             ~
                                                                             String " HTML3.hs:52:64-97] (CNonCanonical)
                        [W] cobox_aHd :: [Char] ~ [a_aHb] [" a type equality [Char]
                                                                             ~
                                                                             [a_aHb] " HTML3.hs:52:64-66] (CNonCanonical)
                        [W] cobox_aHf :: [a_aHe] ~ [a_aHb] [" a type equality [a_aHe]
                                                                              ~
                                                                              [a_aHb] " HTML3.hs:52:71-97] (CNonCanonical)
                        [W] cobox_aHg :: String ~ [a_aHe] [" a type equality String
                                                                             ~
                                                                             [a_aHe] " HTML3.hs:52:71-73] (CNonCanonical)
                        [W] cobox_aHi :: [a_aHh] ~ [a_aHe] [" a type equality [a_aHh]
                                                                              ~
                                                                              [a_aHe] " HTML3.hs:52:78-97] (CNonCanonical)
                        [W] cobox_aHj :: t_aCW ~ [a_aHh] [" a type equality t_aCW
                                                                            ~
                                                                            [a_aHh] " HTML3.hs:52:78-90] (CNonCanonical)
                        [W] cobox_aHk :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                ~
                                                                                t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
                        [W] cobox_aHl :: [Char] ~ [a_aHh] [" a type equality [Char]
                                                                             ~
                                                                             [a_aHh] " HTML3.hs:52:95-97] (CNonCanonical)
                        [W] cobox_aHm :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                        ~
                                                                        Doc " HTML3.hs:52:104-122] (CNonCanonical)
                        [W] cobox_aHo :: a_aHn ~ t_aD3 [" a type equality a_aHn
                                                                          ~
                                                                          t_aD3 " HTML3.hs:52:112-121] (CNonCanonical)
                        [W] cobox_aHp :: [HTML] ~ [a_aHn] [" a type equality [HTML]
                                                                             ~
                                                                             [a_aHn] " HTML3.hs:52:117-121] (CNonCanonical)
                        [W] cobox_aHq :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML3.hs:52:128-153] (CNonCanonical)
                        [W] cobox_aHs :: [a_aHr] ~ String [" a type equality [a_aHr]
                                                                             ~
                                                                             String " HTML3.hs:52:135-152] (CNonCanonical)
                        [W] cobox_aHt :: [Char] ~ [a_aHr] [" a type equality [Char]
                                                                             ~
                                                                             [a_aHr] " HTML3.hs:52:135-138] (CNonCanonical)
                        [W] cobox_aHv :: [a_aHu] ~ [a_aHr] [" a type equality [a_aHu]
                                                                              ~
                                                                              [a_aHr] " HTML3.hs:52:143-152] (CNonCanonical)
                        [W] cobox_aHw :: String ~ [a_aHu] [" a type equality String
                                                                             ~
                                                                             [a_aHu] " HTML3.hs:52:143-145] (CNonCanonical)
                        [W] cobox_aHx :: [Char] ~ [a_aHu] [" a type equality [Char]
                                                                             ~
                                                                             [a_aHu] " HTML3.hs:52:150-152] (CNonCanonical)
                        [W] cobox_aHy :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML3.hs:53:37-45] (CNonCanonical)
                        [W] cobox_aHz :: Doc ~ t_aD4 [" a type equality Doc
                                                                        ~
                                                                        t_aD4 " HTML3.hs:53:57-190] (CNonCanonical)
                        [W] cobox_aHA :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML3.hs:53:57-159] (CNonCanonical)
                        [W] cobox_aHB :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML3.hs:53:57-98] (CNonCanonical)
                        [W] cobox_aHD :: [a_aHC] ~ String [" a type equality [a_aHC]
                                                                             ~
                                                                             String " HTML3.hs:53:64-97] (CNonCanonical)
                        [W] cobox_aHE :: [Char] ~ [a_aHC] [" a type equality [Char]
                                                                             ~
                                                                             [a_aHC] " HTML3.hs:53:64-66] (CNonCanonical)
                        [W] cobox_aHG :: [a_aHF] ~ [a_aHC] [" a type equality [a_aHF]
                                                                              ~
                                                                              [a_aHC] " HTML3.hs:53:71-97] (CNonCanonical)
                        [W] cobox_aHH :: String ~ [a_aHF] [" a type equality String
                                                                             ~
                                                                             [a_aHF] " HTML3.hs:53:71-73] (CNonCanonical)
                        [W] cobox_aHJ :: [a_aHI] ~ [a_aHF] [" a type equality [a_aHI]
                                                                              ~
                                                                              [a_aHF] " HTML3.hs:53:78-97] (CNonCanonical)
                        [W] cobox_aHK :: t_aCW ~ [a_aHI] [" a type equality t_aCW
                                                                            ~
                                                                            [a_aHI] " HTML3.hs:53:78-90] (CNonCanonical)
                        [W] cobox_aHL :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                ~
                                                                                t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
                        [W] cobox_aHM :: [Char] ~ [a_aHI] [" a type equality [Char]
                                                                             ~
                                                                             [a_aHI] " HTML3.hs:53:95-97] (CNonCanonical)
                        [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                                        ~
                                                                        Doc " HTML3.hs:53:105-158] (CNonCanonical)
                        [W] cobox_aHQ :: (Doc -> Doc -> Doc)
                                         ~ (a_aHN -> b_aHO -> b_aHO) [" a type equality Doc
                                                                                        -> Doc
                                                                                        -> Doc
                                                                                        ~
                                                                                        a_aHN
                                                                                        -> b_aHO
                                                                                        -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
                        [W] cobox_aHR :: Doc ~ b_aHO [" a type equality Doc
                                                                        ~
                                                                        b_aHO " HTML3.hs:53:117-120] (CNonCanonical)
                        [W] cobox_aHU :: [b_aHT] ~ [a_aHN] [" a type equality [b_aHT]
                                                                              ~
                                                                              [a_aHN] " HTML3.hs:53:123-157] (CNonCanonical)
                        [W] cobox_aHV :: (Doc -> Doc)
                                         ~ (a_aHS -> b_aHT) [" a type equality Doc -> Doc
                                                                               ~
                                                                               a_aHS
                                                                               -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
                        [W] cobox_aHY :: [b_aHX] ~ [a_aHS] [" a type equality [b_aHX]
                                                                              ~
                                                                              [a_aHS] " HTML3.hs:53:141-156] (CNonCanonical)
                        [W] cobox_aHZ :: (t_aD3 -> t_aD4)
                                         ~ (a_aHW -> b_aHX) [" a type equality t_aD3 -> t_aD4
                                                                               ~
                                                                               a_aHW
                                                                               -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
                        [W] cobox_aI0 :: [HTML] ~ [a_aHW] [" a type equality [HTML]
                                                                             ~
                                                                             [a_aHW] " HTML3.hs:53:152-156] (CNonCanonical)
                        [W] cobox_aI1 :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML3.hs:53:165-190] (CNonCanonical)
                        [W] cobox_aI3 :: [a_aI2] ~ String [" a type equality [a_aI2]
                                                                             ~
                                                                             String " HTML3.hs:53:172-189] (CNonCanonical)
                        [W] cobox_aI4 :: [Char] ~ [a_aI2] [" a type equality [Char]
                                                                             ~
                                                                             [a_aI2] " HTML3.hs:53:172-175] (CNonCanonical)
                        [W] cobox_aI6 :: [a_aI5] ~ [a_aI2] [" a type equality [a_aI5]
                                                                              ~
                                                                              [a_aI2] " HTML3.hs:53:180-189] (CNonCanonical)
                        [W] cobox_aI7 :: String ~ [a_aI5] [" a type equality String
                                                                             ~
                                                                             [a_aI5] " HTML3.hs:53:180-182] (CNonCanonical)
                        [W] cobox_aI8 :: [Char] ~ [a_aI5] [" a type equality [Char]
                                                                             ~
                                                                             [a_aI5] " HTML3.hs:53:187-189] (CNonCanonical)
                        [W] cobox_aIb :: [t_aIa] ~ t_aD7 [" a type equality [t_aIa]
                                                                            ~
                                                                            t_aD7 " HTML3.hs:(42,10)-(43,59)] (CNonCanonical)
                        [W] cobox_aIe :: (t_aIc, t_aId) ~ t_aIa [" a type equality (t_aIc,
                                                                                    t_aId)
                                                                                   ~
                                                                                   t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
                        [W] cobox_aIf :: [Char] ~ t_aIc [" a type equality [Char]
                                                                           ~
                                                                           t_aIc " HTML3.hs:42:12-15] (CNonCanonical)
                        [W] cobox_aIg :: [Char] ~ t_aId [" a type equality [Char]
                                                                           ~
                                                                           t_aId " HTML3.hs:42:18-21] (CNonCanonical)
                        [W] cobox_aIj :: (t_aIh, t_aIi) ~ t_aIa [" a type equality (t_aIh,
                                                                                    t_aIi)
                                                                                   ~
                                                                                   t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
                        [W] cobox_aIk :: [Char] ~ t_aIh [" a type equality [Char]
                                                                           ~
                                                                           t_aIh " HTML3.hs:42:26-31] (CNonCanonical)
                        [W] cobox_aIl :: [Char] ~ t_aIi [" a type equality [Char]
                                                                           ~
                                                                           t_aIi " HTML3.hs:42:34-39] (CNonCanonical)
                        [W] cobox_aIo :: (t_aIm, t_aIn) ~ t_aIa [" a type equality (t_aIm,
                                                                                    t_aIn)
                                                                                   ~
                                                                                   t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
                        [W] cobox_aIp :: [Char] ~ t_aIm [" a type equality [Char]
                                                                           ~
                                                                           t_aIm " HTML3.hs:42:44-49] (CNonCanonical)
                        [W] cobox_aIq :: [Char] ~ t_aIn [" a type equality [Char]
                                                                           ~
                                                                           t_aIn " HTML3.hs:42:52-57] (CNonCanonical)
                        [W] cobox_aIt :: (t_aIr, t_aIs) ~ t_aIa [" a type equality (t_aIr,
                                                                                    t_aIs)
                                                                                   ~
                                                                                   t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
                        [W] cobox_aIu :: [Char] ~ t_aIr [" a type equality [Char]
                                                                           ~
                                                                           t_aIr " HTML3.hs:43:12-17] (CNonCanonical)
                        [W] cobox_aIv :: [Char] ~ t_aIs [" a type equality [Char]
                                                                           ~
                                                                           t_aIs " HTML3.hs:43:20-22] (CNonCanonical)
                        [W] cobox_aIy :: (t_aIw, t_aIx) ~ t_aIa [" a type equality (t_aIw,
                                                                                    t_aIx)
                                                                                   ~
                                                                                   t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
                        [W] cobox_aIz :: [Char] ~ t_aIw [" a type equality [Char]
                                                                           ~
                                                                           t_aIw " HTML3.hs:43:27-32] (CNonCanonical)
                        [W] cobox_aIA :: [Char] ~ t_aIx [" a type equality [Char]
                                                                           ~
                                                                           t_aIx " HTML3.hs:43:35-38] (CNonCanonical)
                        [W] cobox_aID :: (t_aIB, t_aIC) ~ t_aIa [" a type equality (t_aIB,
                                                                                    t_aIC)
                                                                                   ~
                                                                                   t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
                        [W] cobox_aIE :: [Char] ~ t_aIB [" a type equality [Char]
                                                                           ~
                                                                           t_aIB " HTML3.hs:43:43-48] (CNonCanonical)
                        [W] cobox_aIF :: [Char] ~ t_aIC [" a type equality [Char]
                                                                           ~
                                                                           t_aIC " HTML3.hs:43:51-57] (CNonCanonical)
                        [W] cobox_aII :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                            ~
                                                                            t_aDo " HTML3.hs:37:9-20] (CNonCanonical)
                        [W] cobox_aIK :: Maybe t_aIJ ~ t_aIH [" a type equality Maybe t_aIJ
                                                                                ~
                                                                                t_aIH " HTML3.hs:37:9-15] (CNonCanonical)
                        [W] cobox_aIL :: t_aDp ~ t_aDp [" a type equality t_aDp
                                                                          ~
                                                                          t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
                        [W] cobox_aIM :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                            ~
                                                                            t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
                        [W] cobox_aIO :: [t_aIN] ~ t_aDo [" a type equality [t_aIN]
                                                                            ~
                                                                            t_aDo " HTML3.hs:38:8-9] (CNonCanonical)
                        [W] cobox_aIQ :: Maybe a_aIP ~ t_aDp [" a type equality Maybe a_aIP
                                                                                ~
                                                                                t_aDp " HTML3.hs:38:25-31] (CNonCanonical)
                        [W] cobox_aIS :: [t_aIR] ~ t_aDo [" a type equality [t_aIR]
                                                                            ~
                                                                            t_aDo " HTML3.hs:39:9-16] (CNonCanonical)
                        [W] cobox_aIU :: Maybe t_aIT ~ t_aIR [" a type equality Maybe t_aIT
                                                                                ~
                                                                                t_aIR " HTML3.hs:39:9-14] (CNonCanonical)
                        [W] cobox_aIW :: Maybe a_aIV ~ t_aDp [" a type equality Maybe a_aIV
                                                                                ~
                                                                                t_aDp " HTML3.hs:39:25-30] (CNonCanonical)
                        [W] cobox_aIX :: t_aIT ~ a_aIV [" a type equality t_aIT
                                                                          ~
                                                                          a_aIV " HTML3.hs:39:30] (CNonCanonical)
                        [W] cobox_aIZ :: HTML ~ t_aDG [" a type equality HTML
                                                                         ~
                                                                         t_aDG " HTML3.hs:14:13-137] (CNonCanonical)
                        [W] cobox_aJ0 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:23-28] (CNonCanonical)
                        [W] cobox_aJ1 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:32-38] (CNonCanonical)
                        [W] cobox_aJ2 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:40-45] (CNonCanonical)
                        [W] cobox_aJ3 :: HTML ~ HTML [" a type equality HTML
                                                                        ~
                                                                        HTML " HTML3.hs:14:51-62] (CNonCanonical)
                        [W] cobox_aJ4 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:56-62] (CNonCanonical)
                        [W] cobox_aJ5 :: HTML ~ HTML [" a type equality HTML
                                                                        ~
                                                                        HTML " HTML3.hs:14:66-98] (CNonCanonical)
                        [W] cobox_aJ6 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:76-80] (CNonCanonical)
                        [W] cobox_aJ7 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:84-90] (CNonCanonical)
                        [W] cobox_aJ8 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:92-96] (CNonCanonical)
                        [W] cobox_aJ9 :: HTML ~ HTML [" a type equality HTML
                                                                        ~
                                                                        HTML " HTML3.hs:14:102-135] (CNonCanonical)
                        [W] cobox_aJa :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:112-116] (CNonCanonical)
                        [W] cobox_aJb :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:120-126] (CNonCanonical)
                        [W] cobox_aJc :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:14:128-133] (CNonCanonical)
                        [W] cobox_aJf :: a_aJe ~ (t_aDI -> t_aDJ) [" a type equality a_aJe
                                                                                     ~
                                                                                     t_aDI
                                                                                     -> t_aDJ " HTML3.hs:8:7-15] (CNonCanonical)
                        [W] cobox_aJi :: a_aJh ~ (t_aDM -> t_aDN) [" a type equality a_aJh
                                                                                     ~
                                                                                     t_aDM
                                                                                     -> t_aDN " HTML3.hs:6:11-19] (CNonCanonical)
                        [W] $dOrd_aJx :: Ord
                                           a_aJw [" a use of ‘<’ " HTML3.hs:73:25] (CNonCanonical)
                        [W] cobox_aJy :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML3.hs:73:19-28] (CNonCanonical)
                        [W] cobox_aJz :: t_aCJ ~ a_aJw [" a type equality t_aCJ
                                                                          ~
                                                                          a_aJw " HTML3.hs:73:19-23] (CNonCanonical)
                        [W] $dNum_aJB :: Num
                                           a_aJA [" the literal ‘10’ " HTML3.hs:73:27-28] (CNonCanonical)
                        [W] cobox_aJC :: (Integer -> a_aJA)
                                         ~ (Integer -> a_aJw) [" a type equality Integer -> a_aJA
                                                                                 ~
                                                                                 Integer
                                                                                 -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
                        [W] cobox_aJD :: t_aDN ~ t_aCK [" a type equality t_aDN
                                                                          ~
                                                                          t_aCK " HTML3.hs:73:32-44] (CNonCanonical)
                        [W] cobox_aJE :: t_aCJ ~ t_aDM [" a type equality t_aCJ
                                                                          ~
                                                                          t_aDM " HTML3.hs:73:40-44] (CNonCanonical)
                        [W] cobox_aJF :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML3.hs:74:19-27] (CNonCanonical)
                        [W] cobox_aJH :: [t_aJG] ~ t_aCK [" a type equality [t_aJG]
                                                                            ~
                                                                            t_aCK " HTML3.hs:74:32-49] (CNonCanonical)
                        [W] cobox_aJI :: t_aDJ ~ t_aJG [" a type equality t_aDJ
                                                                          ~
                                                                          t_aJG " HTML3.hs:74:33-48] (CNonCanonical)
                        [W] $dNum_aJK :: Num
                                           a_aJJ [" a use of ‘+’ " HTML3.hs:74:44] (CNonCanonical)
                        [W] cobox_aJL :: a_aJJ ~ t_aDI [" a type equality a_aJJ
                                                                          ~
                                                                          t_aDI " HTML3.hs:74:38-47] (CNonCanonical)
                        [W] cobox_aJM :: t_aCJ ~ a_aJJ [" a type equality t_aCJ
                                                                          ~
                                                                          a_aJJ " HTML3.hs:74:38-42] (CNonCanonical)
                        [W] $dNum_aJO :: Num
                                           a_aJN [" the literal ‘55’ " HTML3.hs:74:46-47] (CNonCanonical)
                        [W] cobox_aJP :: (Integer -> a_aJN)
                                         ~ (Integer -> a_aJJ) [" a type equality Integer -> a_aJN
                                                                                 ~
                                                                                 Integer
                                                                                 -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
                        [W] cobox_aJU :: t_aJR ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                                                     ~
                                                                                     t_aJS
                                                                                     -> t_aJT " HTML3.hs:70:19-86] (CNonCanonical)
                        [W] cobox_aJW :: [a_aJV] ~ t_aJT [" a type equality [a_aJV]
                                                                            ~
                                                                            t_aJT " HTML3.hs:70:35-86] (CNonCanonical)
                        [W] cobox_aJX :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                            ~
                                                                            [a_aJV] " HTML3.hs:70:35-56] (CNonCanonical)
                        [W] $dFractional_aK7 :: Fractional
                                                  a_aK6 [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
                        [W] cobox_aK8 :: a_aK6 ~ t_aCJ [" a type equality a_aK6
                                                                          ~
                                                                          t_aCJ " HTML3.hs:70:46-55] (CNonCanonical)
                        [W] cobox_aK9 :: t_aJS ~ a_aK6 [" a type equality t_aJS
                                                                          ~
                                                                          a_aK6 " HTML3.hs:70:46-50] (CNonCanonical)
                        [W] $dNum_aKb :: Num
                                           a_aKa [" the literal ‘16’ " HTML3.hs:70:54-55] (CNonCanonical)
                        [W] cobox_aKc :: (Integer -> a_aKa)
                                         ~ (Integer -> a_aK6) [" a type equality Integer -> a_aKa
                                                                                 ~
                                                                                 Integer
                                                                                 -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
                        [W] cobox_aKd :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                            ~
                                                                            [a_aJV] " HTML3.hs:70:61-86] (CNonCanonical)
                        [W] $dIntegral_aKs :: Integral
                                                a_aKr [" a use of ‘rem’ " HTML3.hs:70:78-82] (CNonCanonical)
                        [W] cobox_aKt :: a_aKr ~ t_aCJ [" a type equality a_aKr
                                                                          ~
                                                                          t_aCJ " HTML3.hs:70:72-85] (CNonCanonical)
                        [W] cobox_aKu :: t_aJS ~ a_aKr [" a type equality t_aJS
                                                                          ~
                                                                          a_aKr " HTML3.hs:70:72-76] (CNonCanonical)
                        [W] $dNum_aKw :: Num
                                           a_aKv [" the literal ‘16’ " HTML3.hs:70:84-85] (CNonCanonical)
                        [W] cobox_aKx :: (Integer -> a_aKv)
                                         ~ (Integer -> a_aKr) [" a type equality Integer -> a_aKv
                                                                                 ~
                                                                                 Integer
                                                                                 -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
                        [W] cobox_aKz :: [a_aKy] ~ t_aCQ [" a type equality [a_aKy]
                                                                            ~
                                                                            t_aCQ " HTML3.hs:69:15-56] (CNonCanonical)
                        [W] cobox_aKA :: [Char] ~ [a_aKy] [" a type equality [Char]
                                                                             ~
                                                                             [a_aKy] " HTML3.hs:69:15-17] (CNonCanonical)
                        [W] cobox_aKC :: [a_aKB] ~ [a_aKy] [" a type equality [a_aKB]
                                                                              ~
                                                                              [a_aKy] " HTML3.hs:69:22-56] (CNonCanonical)
                        [W] cobox_aKF :: t_aJR ~ (t_aKD -> t_aKE) [" a type equality t_aJR
                                                                                     ~
                                                                                     t_aKD
                                                                                     -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
                        [W] cobox_aKG :: t_aKE ~ [a_aKB] [" a type equality t_aKE
                                                                            ~
                                                                            [a_aKB] " HTML3.hs:69:22-30] (CNonCanonical)
                        [W] cobox_aKH :: t_aCN ~ t_aKD [" a type equality t_aCN
                                                                          ~
                                                                          t_aKD " HTML3.hs:69:30] (CNonCanonical)
                        [W] cobox_aKJ :: [a_aKI] ~ [a_aKB] [" a type equality [a_aKI]
                                                                              ~
                                                                              [a_aKB] " HTML3.hs:69:35-56] (CNonCanonical)
                        [W] cobox_aKM :: t_aJR ~ (t_aKK -> t_aKL) [" a type equality t_aJR
                                                                                     ~
                                                                                     t_aKK
                                                                                     -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
                        [W] cobox_aKN :: t_aKL ~ [a_aKI] [" a type equality t_aKL
                                                                            ~
                                                                            [a_aKI] " HTML3.hs:69:35-43] (CNonCanonical)
                        [W] cobox_aKO :: t_aCO ~ t_aKK [" a type equality t_aCO
                                                                          ~
                                                                          t_aKK " HTML3.hs:69:43] (CNonCanonical)
                        [W] cobox_aKR :: t_aJR ~ (t_aKP -> t_aKQ) [" a type equality t_aJR
                                                                                     ~
                                                                                     t_aKP
                                                                                     -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
                        [W] cobox_aKS :: t_aKQ ~ [a_aKI] [" a type equality t_aKQ
                                                                            ~
                                                                            [a_aKI] " HTML3.hs:69:48-56] (CNonCanonical)
                        [W] cobox_aKT :: t_aCP ~ t_aKP [" a type equality t_aCP
                                                                          ~
                                                                          t_aKP " HTML3.hs:69:56] (CNonCanonical)
                        [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX)
                                         ~ t_aCx [" a type equality (t_aKV, t_aKW, t_aKX)
                                                                    ~
                                                                    t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
                        [W] cobox_aKZ :: HTML ~ t_aCy [" a type equality HTML
                                                                         ~
                                                                         t_aCy " HTML3.hs:89:22-64] (CNonCanonical)
                        [W] cobox_aL0 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:89:32-35] (CNonCanonical)
                        [W] cobox_aL1 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:89:39-47] (CNonCanonical)
                        [W] cobox_aL2 :: t_aCQ ~ String [" a type equality t_aCQ
                                                                           ~
                                                                           String " HTML3.hs:89:49-59] (CNonCanonical)
                        [W] cobox_aL3 :: t_aKV ~ t_aCN [" a type equality t_aKV
                                                                          ~
                                                                          t_aCN " HTML3.hs:89:55] (CNonCanonical)
                        [W] cobox_aL4 :: t_aKW ~ t_aCO [" a type equality t_aKW
                                                                          ~
                                                                          t_aCO " HTML3.hs:89:57] (CNonCanonical)
                        [W] cobox_aL5 :: t_aKX ~ t_aCP [" a type equality t_aKX
                                                                          ~
                                                                          t_aCP " HTML3.hs:89:59] (CNonCanonical)
                        [W] cobox_aL7 :: HTML ~ t_aCC [" a type equality HTML
                                                                         ~
                                                                         t_aCC " HTML3.hs:86:18-56] (CNonCanonical)
                        [W] cobox_aL8 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:86:28-31] (CNonCanonical)
                        [W] cobox_aLb :: [b_aLa] ~ [HTML] [" a type equality [b_aLa]
                                                                             ~
                                                                             [HTML] " HTML3.hs:86:37-55] (CNonCanonical)
                        [W] cobox_aLc :: (t_aCx -> t_aCy)
                                         ~ (a_aL9 -> b_aLa) [" a type equality t_aCx -> t_aCy
                                                                               ~
                                                                               a_aL9
                                                                               -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
                        [W] cobox_aLd :: t_aCB ~ [a_aL9] [" a type equality t_aCB
                                                                            ~
                                                                            [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
                        [W] cobox_aLf :: HTML ~ t_aCG [" a type equality HTML
                                                                         ~
                                                                         t_aCG " HTML3.hs:83:22-95] (CNonCanonical)
                        [W] cobox_aLg :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:83:32-38] (CNonCanonical)
                        [W] cobox_aLh :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:83:42-48] (CNonCanonical)
                        [W] cobox_aLi :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:83:50-54] (CNonCanonical)
                        [W] cobox_aLj :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:83:58-65] (CNonCanonical)
                        [W] cobox_aLk :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML3.hs:83:67-71] (CNonCanonical)
                        [W] cobox_aLn :: [b_aLm] ~ [HTML] [" a type equality [b_aLm]
                                                                             ~
                                                                             [HTML] " HTML3.hs:83:76-94] (CNonCanonical)
                        [W] cobox_aLo :: (t_aCB -> t_aCC)
                                         ~ (a_aLl -> b_aLm) [" a type equality t_aCB -> t_aCC
                                                                               ~
                                                                               a_aLl
                                                                               -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
                        [W] cobox_aLp :: t_aCF ~ [a_aLl] [" a type equality t_aCF
                                                                            ~
                                                                            [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
                        [W] cobox_aLr :: HTML ~ t_aCi [" a type equality HTML
                                                                         ~
                                                                         t_aCi " HTML3.hs:98:20-70] (CNonCanonical)
                        [W] cobox_aLt :: [a_aLs] ~ String [" a type equality [a_aLs]
                                                                             ~
                                                                             String " HTML3.hs:98:31-52] (CNonCanonical)
                        [W] cobox_aLu :: [Char] ~ [a_aLs] [" a type equality [Char]
                                                                             ~
                                                                             [a_aLs] " HTML3.hs:98:31-33] (CNonCanonical)
                        [W] cobox_aLv :: t_aDN ~ [a_aLs] [" a type equality t_aDN
                                                                            ~
                                                                            [a_aLs] " HTML3.hs:98:38-52] (CNonCanonical)
                        [W] cobox_aLw :: t_aCg ~ t_aDM [" a type equality t_aCg
                                                                          ~
                                                                          t_aDM " HTML3.hs:98:46-52] (CNonCanonical)
                        [W] cobox_aLx :: HTML ~ HTML [" a type equality HTML
                                                                        ~
                                                                        HTML " HTML3.hs:98:59-69] (CNonCanonical)
                        [W] cobox_aLy :: t_aCh ~ String [" a type equality t_aCh
                                                                           ~
                                                                           String " HTML3.hs:98:64-69] (CNonCanonical)
                        [W] cobox_aLA :: t_aC2 ~ t_aBY [" a type equality t_aC2
                                                                          ~
                                                                          t_aBY " HTML3.hs:(110,16)-(112,111)] (CNonCanonical)
                        [W] cobox_aLB :: [Char] ~ t_aC0 [" a type equality [Char]
                                                                           ~
                                                                           t_aC0 " HTML3.hs:110:25-38] (CNonCanonical)
                        [W] cobox_aLD :: [t_aLC] ~ t_aC1 [" a type equality [t_aLC]
                                                                            ~
                                                                            t_aC1 " HTML3.hs:(110,40)-(112,111)] (CNonCanonical)
                        [W] cobox_aLE :: t_aCi ~ t_aLC [" a type equality t_aCi
                                                                          ~
                                                                          t_aLC " HTML3.hs:110:42-59] (CNonCanonical)
                        [W] $dNum_aLG :: Num
                                           a_aLF [" the literal ‘1’ " HTML3.hs:110:44] (CNonCanonical)
                        [W] cobox_aLH :: (Integer -> a_aLF)
                                         ~ (Integer -> t_aCg) [" a type equality Integer -> a_aLF
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
                        [W] cobox_aLI :: [Char] ~ t_aCh [" a type equality [Char]
                                                                           ~
                                                                           t_aCh " HTML3.hs:110:46-59] (CNonCanonical)
                        [W] cobox_aLJ :: t_aCr ~ t_aLC [" a type equality t_aCr
                                                                          ~
                                                                          t_aLC " HTML3.hs:111:41-343] (CNonCanonical)
                        [W] cobox_aLL :: [t_aLK] ~ t_aCq [" a type equality [t_aLK]
                                                                            ~
                                                                            t_aCq " HTML3.hs:111:44-343] (CNonCanonical)
                        [W] cobox_aLN :: [t_aLM] ~ t_aLK [" a type equality [t_aLM]
                                                                            ~
                                                                            t_aLK " HTML3.hs:111:45-160] (CNonCanonical)
                        [W] cobox_aLO :: t_aCc ~ t_aLM [" a type equality t_aCc
                                                                          ~
                                                                          t_aLM " HTML3.hs:111:46-85] (CNonCanonical)
                        [W] cobox_aLQ :: [t_aLP] ~ t_aCa [" a type equality [t_aLP]
                                                                            ~
                                                                            t_aCa " HTML3.hs:111:51-71] (CNonCanonical)
                        [W] cobox_aLT :: (t_aLR, t_aLS) ~ t_aLP [" a type equality (t_aLR,
                                                                                    t_aLS)
                                                                                   ~
                                                                                   t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
                        [W] cobox_aLU :: [Char] ~ t_aLR [" a type equality [Char]
                                                                           ~
                                                                           t_aLR " HTML3.hs:111:53-59] (CNonCanonical)
                        [W] cobox_aLV :: [Char] ~ t_aLS [" a type equality [Char]
                                                                           ~
                                                                           t_aLS " HTML3.hs:111:61-69] (CNonCanonical)
                        [W] cobox_aLX :: [t_aLW] ~ t_aCb [" a type equality [t_aLW]
                                                                            ~
                                                                            t_aCb " HTML3.hs:111:73-85] (CNonCanonical)
                        [W] cobox_aLY :: t_aC7 ~ t_aLW [" a type equality t_aC7
                                                                          ~
                                                                          t_aLW " HTML3.hs:111:74-84] (CNonCanonical)
                        [W] cobox_aLZ :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                           ~
                                                                           t_aC6 " HTML3.hs:111:79-84] (CNonCanonical)
                        [W] cobox_aM0 :: t_aC7 ~ t_aLM [" a type equality t_aC7
                                                                          ~
                                                                          t_aLM " HTML3.hs:111:88-159] (CNonCanonical)
                        [W] cobox_aM1 :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                           ~
                                                                           t_aC6 " HTML3.hs:111:93-159] (CNonCanonical)
                        [W] cobox_aM3 :: [t_aM2] ~ t_aLK [" a type equality [t_aM2]
                                                                            ~
                                                                            t_aLK " HTML3.hs:111:162-278] (CNonCanonical)
                        [W] cobox_aM4 :: t_aCc ~ t_aM2 [" a type equality t_aCc
                                                                          ~
                                                                          t_aM2 " HTML3.hs:111:163-203] (CNonCanonical)
                        [W] cobox_aM6 :: [t_aM5] ~ t_aCa [" a type equality [t_aM5]
                                                                            ~
                                                                            t_aCa " HTML3.hs:111:168-188] (CNonCanonical)
                        [W] cobox_aM9 :: (t_aM7, t_aM8) ~ t_aM5 [" a type equality (t_aM7,
                                                                                    t_aM8)
                                                                                   ~
                                                                                   t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
                        [W] cobox_aMa :: [Char] ~ t_aM7 [" a type equality [Char]
                                                                           ~
                                                                           t_aM7 " HTML3.hs:111:170-176] (CNonCanonical)
                        [W] cobox_aMb :: [Char] ~ t_aM8 [" a type equality [Char]
                                                                           ~
                                                                           t_aM8 " HTML3.hs:111:178-186] (CNonCanonical)
                        [W] cobox_aMd :: [t_aMc] ~ t_aCb [" a type equality [t_aMc]
                                                                            ~
                                                                            t_aCb " HTML3.hs:111:190-203] (CNonCanonical)
                        [W] cobox_aMe :: t_aC7 ~ t_aMc [" a type equality t_aC7
                                                                          ~
                                                                          t_aMc " HTML3.hs:111:191-202] (CNonCanonical)
                        [W] cobox_aMf :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                           ~
                                                                           t_aC6 " HTML3.hs:111:196-202] (CNonCanonical)
                        [W] cobox_aMg :: t_aC7 ~ t_aM2 [" a type equality t_aC7
                                                                          ~
                                                                          t_aM2 " HTML3.hs:111:206-277] (CNonCanonical)
                        [W] cobox_aMh :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                           ~
                                                                           t_aC6 " HTML3.hs:111:211-277] (CNonCanonical)
                        [W] cobox_aMj :: [t_aMi] ~ t_aLK [" a type equality [t_aMi]
                                                                            ~
                                                                            t_aLK " HTML3.hs:111:280-342] (CNonCanonical)
                        [W] cobox_aMk :: t_aCc ~ t_aMi [" a type equality t_aCc
                                                                          ~
                                                                          t_aMi " HTML3.hs:111:281-321] (CNonCanonical)
                        [W] cobox_aMm :: [t_aMl] ~ t_aCa [" a type equality [t_aMl]
                                                                            ~
                                                                            t_aCa " HTML3.hs:111:286-306] (CNonCanonical)
                        [W] cobox_aMp :: (t_aMn, t_aMo) ~ t_aMl [" a type equality (t_aMn,
                                                                                    t_aMo)
                                                                                   ~
                                                                                   t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
                        [W] cobox_aMq :: [Char] ~ t_aMn [" a type equality [Char]
                                                                           ~
                                                                           t_aMn " HTML3.hs:111:288-294] (CNonCanonical)
                        [W] cobox_aMr :: [Char] ~ t_aMo [" a type equality [Char]
                                                                           ~
                                                                           t_aMo " HTML3.hs:111:296-304] (CNonCanonical)
                        [W] cobox_aMt :: [t_aMs] ~ t_aCb [" a type equality [t_aMs]
                                                                            ~
                                                                            t_aCb " HTML3.hs:111:308-321] (CNonCanonical)
                        [W] cobox_aMu :: t_aC7 ~ t_aMs [" a type equality t_aC7
                                                                          ~
                                                                          t_aMs " HTML3.hs:111:309-320] (CNonCanonical)
                        [W] cobox_aMv :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                           ~
                                                                           t_aC6 " HTML3.hs:111:314-320] (CNonCanonical)
                        [W] cobox_aMw :: t_aC7 ~ t_aMi [" a type equality t_aC7
                                                                          ~
                                                                          t_aMi " HTML3.hs:111:324-341] (CNonCanonical)
                        [W] cobox_aMx :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                           ~
                                                                           t_aC6 " HTML3.hs:111:329-341] (CNonCanonical)
                        [W] cobox_aMy :: t_aCG ~ t_aLC [" a type equality t_aCG
                                                                          ~
                                                                          t_aLC " HTML3.hs:112:41-109] (CNonCanonical)
                        [W] cobox_aMA :: [t_aMz] ~ t_aCF [" a type equality [t_aMz]
                                                                            ~
                                                                            t_aCF " HTML3.hs:112:52-109] (CNonCanonical)
                        [W] cobox_aMC :: [t_aMB] ~ t_aMz [" a type equality [t_aMB]
                                                                            ~
                                                                            t_aMz " HTML3.hs:112:53-108] (CNonCanonical)
                        [W] $dNum_aMF :: Num
                                           a_aME [" the literal ‘0’ " HTML3.hs:112:70] (CNonCanonical)
                        [W] cobox_aMG :: (Integer -> a_aME)
                                         ~ (Integer -> t_aMD) [" a type equality Integer -> a_aME
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
                        [W] $dNum_aMI :: Num
                                           a_aMH [" the literal ‘25’ " HTML3.hs:112:72-73] (CNonCanonical)
                        [W] cobox_aMJ :: (Integer -> a_aMH)
                                         ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMH
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
                        [W] $dNum_aML :: Num
                                           a_aMK [" the literal ‘250’ " HTML3.hs:112:76-78] (CNonCanonical)
                        [W] cobox_aMM :: (Integer -> a_aMK)
                                         ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMK
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
                        [W] $dEnum_aOJ :: Enum
                                            t_aMD [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CNonCanonical)
                        [W] $dNum_aOM :: Num
                                           a_aOL [" the literal ‘0’ " HTML3.hs:112:88] (CNonCanonical)
                        [W] cobox_aON :: (Integer -> a_aOL)
                                         ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOL
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
                        [W] $dNum_aOP :: Num
                                           a_aOO [" the literal ‘25’ " HTML3.hs:112:90-91] (CNonCanonical)
                        [W] cobox_aOQ :: (Integer -> a_aOO)
                                         ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOO
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
                        [W] $dNum_aOS :: Num
                                           a_aOR [" the literal ‘250’ " HTML3.hs:112:94-96] (CNonCanonical)
                        [W] cobox_aOT :: (Integer -> a_aOR)
                                         ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOR
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
                        [W] $dEnum_aOU :: Enum
                                            t_aOK [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CNonCanonical)
                        [W] $dNum_aOX :: Num
                                           a_aOW [" the literal ‘0’ " HTML3.hs:112:106] (CNonCanonical)
                        [W] cobox_aOY :: (Integer -> a_aOW)
                                         ~ (Integer -> t_aOV) [" a type equality Integer -> a_aOW
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
                        [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1)
                                         ~ t_aMB [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                                    ~
                                                                    t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
                        [W] cobox_aP3 :: t_aMD ~ t_aOZ [" a type equality t_aMD
                                                                          ~
                                                                          t_aOZ " HTML3.hs:112:55] (CNonCanonical)
                        [W] cobox_aP4 :: t_aOK ~ t_aP0 [" a type equality t_aOK
                                                                          ~
                                                                          t_aP0 " HTML3.hs:112:57] (CNonCanonical)
                        [W] cobox_aP5 :: t_aOV ~ t_aP1 [" a type equality t_aOV
                                                                          ~
                                                                          t_aP1 " HTML3.hs:112:59] (CNonCanonical)
                        [W] cobox_aP7 :: IO () ~ t_aBW [" a type equality IO ()
                                                                          ~
                                                                          t_aBW " HTML3.hs:115:8-35] (CNonCanonical)
                        [W] cobox_aP8 :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                        ~
                                                                        Doc " HTML3.hs:115:16-34] (CNonCanonical)
                        [W] cobox_aP9 :: t_aBY ~ t_aD3 [" a type equality t_aBY
                                                                          ~
                                                                          t_aD3 " HTML3.hs:115:23-34] (CNonCanonical)
                        [W] cobox_aPc :: a_aPb
                                         ~ (t_aDQ -> t_aDR -> t_aDS) [" a type equality a_aPb
                                                                                        ~
                                                                                        t_aDQ
                                                                                        -> t_aDR
                                                                                        -> t_aDS " HTML3.hs:4:12-20] (CNonCanonical)
                        [W] cobox_aPe :: HTML ~ t_aDA [" a type equality HTML
                                                                         ~
                                                                         t_aDA " HTML3.hs:21:11-16] (CNonCanonical)
                        [W] cobox_aPg :: Maybe a_aPf ~ t_aDC [" a type equality Maybe a_aPf
                                                                                ~
                                                                                t_aDC " HTML3.hs:21:32-38] (CNonCanonical)
                        [W] cobox_aPh :: HTML ~ t_aDA [" a type equality HTML
                                                                         ~
                                                                         t_aDA " HTML3.hs:22:11-23] (CNonCanonical)
                        [W] cobox_aPj :: Maybe a_aPi ~ t_aDC [" a type equality Maybe a_aPi
                                                                                ~
                                                                                t_aDC " HTML3.hs:22:32-38] (CNonCanonical)
                        [W] cobox_aPk :: HTML ~ t_aDA [" a type equality HTML
                                                                         ~
                                                                         t_aDA " HTML3.hs:23:11-31] (CNonCanonical)
                        [W] cobox_aPl :: t_aDS ~ Bool [" a type equality t_aDS
                                                                         ~
                                                                         Bool " HTML3.hs:23:40-61] (CNonCanonical)
                        [W] cobox_aPm :: String ~ t_aDQ [" a type equality String
                                                                           ~
                                                                           t_aDQ " HTML3.hs:23:49-51] (CNonCanonical)
                        [W] cobox_aPp :: b_aPo ~ t_aDR [" a type equality b_aPo
                                                                          ~
                                                                          t_aDR " HTML3.hs:23:54-60] (CNonCanonical)
                        [W] cobox_aPq :: t_aDB ~ (a_aPn, b_aPo) [" a type equality t_aDB
                                                                                   ~
                                                                                   (a_aPn,
                                                                                    b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
                        [W] cobox_aPs :: Maybe a_aPr ~ t_aDC [" a type equality Maybe a_aPr
                                                                                ~
                                                                                t_aDC " HTML3.hs:23:65-72] (CNonCanonical)
                        [W] cobox_aPt :: t_aDB ~ a_aPr [" a type equality t_aDB
                                                                          ~
                                                                          a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
                        [W] cobox_aPu :: t_aDS ~ Bool [" a type equality t_aDS
                                                                         ~
                                                                         Bool " HTML3.hs:24:40-61] (CNonCanonical)
                        [W] cobox_aPv :: String ~ t_aDQ [" a type equality String
                                                                           ~
                                                                           t_aDQ " HTML3.hs:24:49-51] (CNonCanonical)
                        [W] cobox_aPy :: a_aPw ~ t_aDR [" a type equality a_aPw
                                                                          ~
                                                                          t_aDR " HTML3.hs:24:54-60] (CNonCanonical)
                        [W] cobox_aPz :: t_aDB ~ (a_aPw, b_aPx) [" a type equality t_aDB
                                                                                   ~
                                                                                   (a_aPw,
                                                                                    b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
                        [W] cobox_aPB :: Maybe a_aPA ~ t_aDC [" a type equality Maybe a_aPA
                                                                                ~
                                                                                t_aDC " HTML3.hs:24:65-71] (CNonCanonical)
                        [W] cobox_aPC :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML3.hs:25:40-48] (CNonCanonical)
                        [W] cobox_aPD :: t_aDp ~ t_aDC [" a type equality t_aDp
                                                                          ~
                                                                          t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
                        [W] cobox_aPG :: [b_aPF] ~ t_aDo [" a type equality [b_aPF]
                                                                            ~
                                                                            t_aDo " HTML3.hs:25:60-97] (CNonCanonical)
                        [W] cobox_aPH :: t_aDC ~ b_aPF [" a type equality t_aDC
                                                                          ~
                                                                          b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
                        [W] cobox_aPI :: a_aPE ~ t_aDA [" a type equality a_aPE
                                                                          ~
                                                                          t_aDA " HTML3.hs:25:83-86] (CNonCanonical)
                        [W] cobox_aPJ :: t_aDB ~ t_aDB [" a type equality t_aDB
                                                                          ~
                                                                          t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
                        [W] cobox_aPK :: [HTML] ~ [a_aPE] [" a type equality [HTML]
                                                                             ~
                                                                             [a_aPE] " HTML3.hs:25:93-97] (CNonCanonical)
                        [W] cobox_aPM :: t_aDp ~ t_aDv [" a type equality t_aDp
                                                                          ~
                                                                          t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
                        [W] cobox_aPP :: [b_aPO] ~ t_aDo [" a type equality [b_aPO]
                                                                            ~
                                                                            t_aDo " HTML3.hs:28:30-53] (CNonCanonical)
                        [W] cobox_aPQ :: (t_aDB -> t_aDC)
                                         ~ (a_aPN -> b_aPO) [" a type equality t_aDB -> t_aDC
                                                                               ~
                                                                               a_aPN
                                                                               -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
                        [W] cobox_aPR :: t_aDu ~ t_aDA [" a type equality t_aDu
                                                                          ~
                                                                          t_aDA " HTML3.hs:28:44-47] (CNonCanonical)
                        [W] cobox_aPS :: t_aDt ~ [a_aPN] [" a type equality t_aDt
                                                                            ~
                                                                            [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)}
solveWanteds {
  WC {wc_flat = [W] cobox_aBX :: IO () ~ t_aBW [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_aBW " HTML3.hs:114:9-13] (CNonCanonical)
                [W] cobox_aBZ :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML3.hs:109:17-20] (CNonCanonical)
                [W] cobox_aC3 :: String ~ t_aC0 [" a type equality String
                                                                   ~
                                                                   t_aC0 " HTML3.hs:106:13-36] (CNonCanonical)
                [W] cobox_aC4 :: [HTML] ~ t_aC1 [" a type equality [HTML]
                                                                   ~
                                                                   t_aC1 " HTML3.hs:106:13-36] (CNonCanonical)
                [W] cobox_aC5 :: HTML ~ t_aC2 [" a type equality HTML
                                                                 ~
                                                                 t_aC2 " HTML3.hs:106:13-36] (CNonCanonical)
                [W] cobox_aC8 :: String ~ t_aC6 [" a type equality String
                                                                   ~
                                                                   t_aC6 " HTML3.hs:103:9-22] (CNonCanonical)
                [W] cobox_aC9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                 ~
                                                                 t_aC7 " HTML3.hs:103:9-22] (CNonCanonical)
                [W] cobox_aCd :: [Attribute] ~ t_aCa [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCa " HTML3.hs:100:9-37] (CNonCanonical)
                [W] cobox_aCe :: [HTML] ~ t_aCb [" a type equality [HTML]
                                                                   ~
                                                                   t_aCb " HTML3.hs:100:9-37] (CNonCanonical)
                [W] cobox_aCf :: HTML ~ t_aCc [" a type equality HTML
                                                                 ~
                                                                 t_aCc " HTML3.hs:100:9-37] (CNonCanonical)
                [W] cobox_aCj :: Int ~ t_aCg [" a type equality Int
                                                                ~
                                                                t_aCg " HTML3.hs:97:6-26] (CNonCanonical)
                [W] cobox_aCk :: String ~ t_aCh [" a type equality String
                                                                   ~
                                                                   t_aCh " HTML3.hs:97:6-26] (CNonCanonical)
                [W] cobox_aCl :: HTML ~ t_aCi [" a type equality HTML
                                                                 ~
                                                                 t_aCi " HTML3.hs:97:6-26] (CNonCanonical)
                [W] cobox_aCo :: [HTML] ~ t_aCm [" a type equality [HTML]
                                                                   ~
                                                                   t_aCm " HTML3.hs:94:7-20] (CNonCanonical)
                [W] cobox_aCp :: HTML ~ t_aCn [" a type equality HTML
                                                                 ~
                                                                 t_aCn " HTML3.hs:94:7-20] (CNonCanonical)
                [W] cobox_aCs :: [[HTML]] ~ t_aCq [" a type equality [[HTML]]
                                                                     ~
                                                                     t_aCq " HTML3.hs:91:7-22] (CNonCanonical)
                [W] cobox_aCt :: HTML ~ t_aCr [" a type equality HTML
                                                                 ~
                                                                 t_aCr " HTML3.hs:91:7-22] (CNonCanonical)
                [W] cobox_aCz :: (Int, Int, Int) ~ t_aCx [" a type equality (Int,
                                                                             Int,
                                                                             Int)
                                                                            ~
                                                                            t_aCx " HTML3.hs:88:13-35] (CNonCanonical)
                [W] cobox_aCA :: HTML ~ t_aCy [" a type equality HTML
                                                                 ~
                                                                 t_aCy " HTML3.hs:88:13-35] (CNonCanonical)
                [W] cobox_aCD :: [(Int, Int, Int)]
                                 ~ t_aCB [" a type equality [(Int, Int, Int)]
                                                            ~
                                                            t_aCB " HTML3.hs:85:12-36] (CNonCanonical)
                [W] cobox_aCE :: HTML ~ t_aCC [" a type equality HTML
                                                                 ~
                                                                 t_aCC " HTML3.hs:85:12-36] (CNonCanonical)
                [W] cobox_aCH :: [[(Int, Int, Int)]]
                                 ~ t_aCF [" a type equality [[(Int, Int, Int)]]
                                                            ~
                                                            t_aCF " HTML3.hs:82:15-41] (CNonCanonical)
                [W] cobox_aCI :: HTML ~ t_aCG [" a type equality HTML
                                                                 ~
                                                                 t_aCG " HTML3.hs:82:15-41] (CNonCanonical)
                [W] cobox_aCL :: Int ~ t_aCJ [" a type equality Int
                                                                ~
                                                                t_aCJ " HTML3.hs:72:14-26] (CNonCanonical)
                [W] cobox_aCM :: String ~ t_aCK [" a type equality String
                                                                   ~
                                                                   t_aCK " HTML3.hs:72:14-26] (CNonCanonical)
                [W] cobox_aCR :: Int ~ t_aCN [" a type equality Int
                                                                ~
                                                                t_aCN " HTML3.hs:68:10-36] (CNonCanonical)
                [W] cobox_aCS :: Int ~ t_aCO [" a type equality Int
                                                                ~
                                                                t_aCO " HTML3.hs:68:10-36] (CNonCanonical)
                [W] cobox_aCT :: Int ~ t_aCP [" a type equality Int
                                                                ~
                                                                t_aCP " HTML3.hs:68:10-36] (CNonCanonical)
                [W] cobox_aCU :: String ~ t_aCQ [" a type equality String
                                                                   ~
                                                                   t_aCQ " HTML3.hs:68:10-36] (CNonCanonical)
                [W] cobox_aCX :: [(String, String)]
                                 ~ t_aCV [" a type equality [(String, String)]
                                                            ~
                                                            t_aCV " HTML3.hs:60:13-40] (CNonCanonical)
                [W] cobox_aCY :: String ~ t_aCW [" a type equality String
                                                                   ~
                                                                   t_aCW " HTML3.hs:60:13-40] (CNonCanonical)
                [W] cobox_aD1 :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:55:9-22] (CNonCanonical)
                [W] cobox_aD2 :: String ~ t_aD0 [" a type equality String
                                                                   ~
                                                                   t_aD0 " HTML3.hs:55:9-22] (CNonCanonical)
                [W] cobox_aD5 :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:47:11-21] (CNonCanonical)
                [W] cobox_aD6 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:47:11-21] (CNonCanonical)
                [W] cobox_aD8 :: [Requirement]
                                 ~ t_aD7 [" a type equality [Requirement]
                                                            ~
                                                            t_aD7 " HTML3.hs:41:11-23] (CNonCanonical)
                [W] cobox_aDq :: [Maybe Requirement]
                                 ~ t_aDo [" a type equality [Maybe Requirement]
                                                            ~
                                                            t_aDo " HTML3.hs:36:11-50] (CNonCanonical)
                [W] cobox_aDr :: Maybe Requirement ~ t_aDp [" a type equality Maybe
                                                                                Requirement
                                                                              ~
                                                                              t_aDp " HTML3.hs:36:11-50] (CNonCanonical)
                [W] cobox_aDw :: [Requirement]
                                 ~ t_aDt [" a type equality [Requirement]
                                                            ~
                                                            t_aDt " HTML3.hs:27:13-54] (CNonCanonical)
                [W] cobox_aDx :: HTML ~ t_aDu [" a type equality HTML
                                                                 ~
                                                                 t_aDu " HTML3.hs:27:13-54] (CNonCanonical)
                [W] cobox_aDy :: Maybe Requirement ~ t_aDv [" a type equality Maybe
                                                                                Requirement
                                                                              ~
                                                                              t_aDv " HTML3.hs:27:13-54] (CNonCanonical)
                [W] cobox_aDD :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:20:13-52] (CNonCanonical)
                [W] cobox_aDE :: Requirement ~ t_aDB [" a type equality Requirement
                                                                        ~
                                                                        t_aDB " HTML3.hs:20:13-52] (CNonCanonical)
                [W] cobox_aDF :: Maybe Requirement ~ t_aDC [" a type equality Maybe
                                                                                Requirement
                                                                              ~
                                                                              t_aDC " HTML3.hs:20:13-52] (CNonCanonical)
                [W] cobox_aDH :: HTML ~ t_aDG [" a type equality HTML
                                                                 ~
                                                                 t_aDG " HTML3.hs:13:14-17] (CNonCanonical)
                [W] cobox_aDK :: Int ~ t_aDI [" a type equality Int
                                                                ~
                                                                t_aDI " HTML3.hs:7:8-18] (CNonCanonical)
                [W] cobox_aDL :: Char ~ t_aDJ [" a type equality Char
                                                                 ~
                                                                 t_aDJ " HTML3.hs:7:8-18] (CNonCanonical)
                [W] cobox_aDO :: Int ~ t_aDM [" a type equality Int
                                                                ~
                                                                t_aDM " HTML3.hs:5:18-30] (CNonCanonical)
                [W] cobox_aDP :: String ~ t_aDN [" a type equality String
                                                                   ~
                                                                   t_aDN " HTML3.hs:5:18-30] (CNonCanonical)
                [W] cobox_aDT :: String ~ t_aDQ [" a type equality String
                                                                   ~
                                                                   t_aDQ " HTML3.hs:3:18-41] (CNonCanonical)
                [W] cobox_aDU :: String ~ t_aDR [" a type equality String
                                                                   ~
                                                                   t_aDR " HTML3.hs:3:18-41] (CNonCanonical)
                [W] cobox_aDV :: Bool ~ t_aDS [" a type equality Bool
                                                                 ~
                                                                 t_aDS " HTML3.hs:3:18-41] (CNonCanonical)
                [W] cobox_aDX :: HTML ~ t_aC2 [" a type equality HTML
                                                                 ~
                                                                 t_aC2 " HTML3.hs:107:24-129] (CNonCanonical)
                [W] cobox_aDY :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:107:34-39] (CNonCanonical)
                [W] cobox_aDZ :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:45-100] (CNonCanonical)
                [W] cobox_aE0 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:107:55-60] (CNonCanonical)
                [W] cobox_aE1 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:66-98] (CNonCanonical)
                [W] cobox_aE2 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:107:76-82] (CNonCanonical)
                [W] cobox_aE3 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:88-97] (CNonCanonical)
                [W] cobox_aE4 :: t_aC0 ~ String [" a type equality t_aC0
                                                                   ~
                                                                   String " HTML3.hs:107:93-97] (CNonCanonical)
                [W] cobox_aE5 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:103-127] (CNonCanonical)
                [W] cobox_aE6 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:107:113-118] (CNonCanonical)
                [W] cobox_aE7 :: t_aC1 ~ [HTML] [" a type equality t_aC1
                                                                   ~
                                                                   [HTML] " HTML3.hs:107:123-127] (CNonCanonical)
                [W] cobox_aE9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                 ~
                                                                 t_aC7 " HTML3.hs:104:15-25] (CNonCanonical)
                [W] cobox_aEa :: t_aC6 ~ String [" a type equality t_aC6
                                                                   ~
                                                                   String " HTML3.hs:104:20-25] (CNonCanonical)
                [W] cobox_aEc :: HTML ~ t_aCc [" a type equality HTML
                                                                 ~
                                                                 t_aCc " HTML3.hs:101:20-47] (CNonCanonical)
                [W] cobox_aEd :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:101:30-35] (CNonCanonical)
                [W] cobox_aEe :: t_aCa ~ [Attribute] [" a type equality t_aCa
                                                                        ~
                                                                        [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
                [W] cobox_aEf :: t_aCb ~ [HTML] [" a type equality t_aCb
                                                                   ~
                                                                   [HTML] " HTML3.hs:101:43-47] (CNonCanonical)
                [W] cobox_aEh :: HTML ~ t_aCn [" a type equality HTML
                                                                 ~
                                                                 t_aCn " HTML3.hs:95:12-34] (CNonCanonical)
                [W] cobox_aEi :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:95:22-25] (CNonCanonical)
                [W] cobox_aEj :: t_aCm ~ [HTML] [" a type equality t_aCm
                                                                   ~
                                                                   [HTML] " HTML3.hs:95:30-34] (CNonCanonical)
                [W] cobox_aEl :: HTML ~ t_aCr [" a type equality HTML
                                                                 ~
                                                                 t_aCr " HTML3.hs:92:12-43] (CNonCanonical)
                [W] cobox_aEm :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:92:22-25] (CNonCanonical)
                [W] cobox_aEp :: [b_aEo] ~ [HTML] [" a type equality [b_aEo]
                                                                     ~
                                                                     [HTML] " HTML3.hs:92:31-42] (CNonCanonical)
                [W] cobox_aEq :: (t_aCm -> t_aCn)
                                 ~ (a_aEn -> b_aEo) [" a type equality t_aCm -> t_aCn
                                                                       ~
                                                                       a_aEn
                                                                       -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
                [W] cobox_aEr :: t_aCq ~ [a_aEn] [" a type equality t_aCq
                                                                    ~
                                                                    [a_aEn] " HTML3.hs:92:38-42] (CNonCanonical)
                [W] cobox_aEw :: t_aEt ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                                             ~
                                                                             t_aEu
                                                                             -> t_aEv " HTML3.hs:62:41-96] (CNonCanonical)
                [W] cobox_aEy :: [a_aEx] ~ t_aEv [" a type equality [a_aEx]
                                                                    ~
                                                                    t_aEv " HTML3.hs:62:56-96] (CNonCanonical)
                [W] cobox_aED :: a_aEB ~ [a_aEx] [" a type equality a_aEB
                                                                    ~
                                                                    [a_aEx] " HTML3.hs:62:56-62] (CNonCanonical)
                [W] cobox_aEE :: t_aEu ~ (a_aEB, b_aEC) [" a type equality t_aEu
                                                                           ~
                                                                           (a_aEB,
                                                                            b_aEC) " HTML3.hs:62:60-62] (CNonCanonical)
                [W] cobox_aEG :: [a_aEF] ~ [a_aEx] [" a type equality [a_aEF]
                                                                      ~
                                                                      [a_aEx] " HTML3.hs:62:67-96] (CNonCanonical)
                [W] cobox_aEH :: [Char] ~ [a_aEF] [" a type equality [Char]
                                                                     ~
                                                                     [a_aEF] " HTML3.hs:62:67-69] (CNonCanonical)
                [W] cobox_aEJ :: [a_aEI] ~ [a_aEF] [" a type equality [a_aEI]
                                                                      ~
                                                                      [a_aEF] " HTML3.hs:62:74-96] (CNonCanonical)
                [W] cobox_aEK :: [Char] ~ [a_aEI] [" a type equality [Char]
                                                                     ~
                                                                     [a_aEI] " HTML3.hs:62:74-77] (CNonCanonical)
                [W] cobox_aEM :: [a_aEL] ~ [a_aEI] [" a type equality [a_aEL]
                                                                      ~
                                                                      [a_aEI] " HTML3.hs:62:82-96] (CNonCanonical)
                [W] cobox_aER :: b_aEQ ~ [a_aEL] [" a type equality b_aEQ
                                                                    ~
                                                                    [a_aEL] " HTML3.hs:62:82-88] (CNonCanonical)
                [W] cobox_aES :: t_aEu ~ (a_aEP, b_aEQ) [" a type equality t_aEu
                                                                           ~
                                                                           (a_aEP,
                                                                            b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
                [W] cobox_aET :: [Char] ~ [a_aEL] [" a type equality [Char]
                                                                     ~
                                                                     [a_aEL] " HTML3.hs:62:93-96] (CNonCanonical)
                [W] cobox_aEW :: [a_aEV] ~ t_aCW [" a type equality [a_aEV]
                                                                    ~
                                                                    t_aCW " HTML3.hs:61:17-55] (CNonCanonical)
                [W] cobox_aEZ :: [b_aEY] ~ [[a_aEV]] [" a type equality [b_aEY]
                                                                        ~
                                                                        [[a_aEV]] " HTML3.hs:61:25-54] (CNonCanonical)
                [W] cobox_aF1 :: ([a_aF0] -> [a_aF0])
                                 ~ (a_aEX -> b_aEY) [" a type equality [a_aF0] -> [a_aF0]
                                                                       ~
                                                                       a_aEX
                                                                       -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
                [W] cobox_aF2 :: Char ~ a_aF0 [" a type equality Char
                                                                 ~
                                                                 a_aF0 " HTML3.hs:61:30-32] (CNonCanonical)
                [W] cobox_aF5 :: [b_aF4] ~ [a_aEX] [" a type equality [b_aF4]
                                                                      ~
                                                                      [a_aEX] " HTML3.hs:61:37-53] (CNonCanonical)
                [W] cobox_aF6 :: t_aEt ~ (a_aF3 -> b_aF4) [" a type equality t_aEt
                                                                             ~
                                                                             a_aF3
                                                                             -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
                [W] cobox_aF7 :: t_aCV ~ [a_aF3] [" a type equality t_aCV
                                                                    ~
                                                                    [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
                [W] cobox_aF9 :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:56:7-17] (CNonCanonical)
                [W] cobox_aFa :: String ~ t_aD0 [" a type equality String
                                                                   ~
                                                                   t_aD0 " HTML3.hs:56:35-40] (CNonCanonical)
                [W] cobox_aFb :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:57:7-24] (CNonCanonical)
                [W] cobox_aFd :: [a_aFc] ~ t_aD0 [" a type equality [a_aFc]
                                                                    ~
                                                                    t_aD0 " HTML3.hs:57:35-68] (CNonCanonical)
                [W] cobox_aFe :: [Char] ~ [a_aFc] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFc] " HTML3.hs:57:35-37] (CNonCanonical)
                [W] cobox_aFg :: [a_aFf] ~ [a_aFc] [" a type equality [a_aFf]
                                                                      ~
                                                                      [a_aFc] " HTML3.hs:57:42-68] (CNonCanonical)
                [W] cobox_aFh :: String ~ [a_aFf] [" a type equality String
                                                                     ~
                                                                     [a_aFf] " HTML3.hs:57:42-44] (CNonCanonical)
                [W] cobox_aFj :: [a_aFi] ~ [a_aFf] [" a type equality [a_aFi]
                                                                      ~
                                                                      [a_aFf] " HTML3.hs:57:49-68] (CNonCanonical)
                [W] cobox_aFk :: t_aCW ~ [a_aFi] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aFi] " HTML3.hs:57:49-61] (CNonCanonical)
                [W] cobox_aFl :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
                [W] cobox_aFm :: [Char] ~ [a_aFi] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFi] " HTML3.hs:57:66-68] (CNonCanonical)
                [W] cobox_aFn :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:58:7-30] (CNonCanonical)
                [W] cobox_aFp :: [a_aFo] ~ t_aD0 [" a type equality [a_aFo]
                                                                    ~
                                                                    t_aD0 " HTML3.hs:58:35-114] (CNonCanonical)
                [W] cobox_aFq :: [Char] ~ [a_aFo] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFo] " HTML3.hs:58:35-37] (CNonCanonical)
                [W] cobox_aFs :: [a_aFr] ~ [a_aFo] [" a type equality [a_aFr]
                                                                      ~
                                                                      [a_aFo] " HTML3.hs:58:42-114] (CNonCanonical)
                [W] cobox_aFt :: String ~ [a_aFr] [" a type equality String
                                                                     ~
                                                                     [a_aFr] " HTML3.hs:58:42-44] (CNonCanonical)
                [W] cobox_aFv :: [a_aFu] ~ [a_aFr] [" a type equality [a_aFu]
                                                                      ~
                                                                      [a_aFr] " HTML3.hs:58:49-114] (CNonCanonical)
                [W] cobox_aFw :: t_aCW ~ [a_aFu] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aFu] " HTML3.hs:58:49-61] (CNonCanonical)
                [W] cobox_aFx :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
                [W] cobox_aFz :: [a_aFy] ~ [a_aFu] [" a type equality [a_aFy]
                                                                      ~
                                                                      [a_aFu] " HTML3.hs:58:66-114] (CNonCanonical)
                [W] cobox_aFA :: [Char] ~ [a_aFy] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFy] " HTML3.hs:58:66-68] (CNonCanonical)
                [W] cobox_aFC :: [a_aFB] ~ [a_aFy] [" a type equality [a_aFB]
                                                                      ~
                                                                      [a_aFy] " HTML3.hs:58:73-114] (CNonCanonical)
                [W] cobox_aFH :: [b_aFG] ~ [a_aFB] [" a type equality [b_aFG]
                                                                      ~
                                                                      [a_aFB] " HTML3.hs:58:73-92] (CNonCanonical)
                [W] cobox_aFI :: (t_aCZ -> t_aD0)
                                 ~ (a_aFF -> [b_aFG]) [" a type equality t_aCZ -> t_aD0
                                                                         ~
                                                                         a_aFF
                                                                         -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
                [W] cobox_aFJ :: [HTML] ~ [a_aFF] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aFF] " HTML3.hs:58:88-92] (CNonCanonical)
                [W] cobox_aFL :: [a_aFK] ~ [a_aFB] [" a type equality [a_aFK]
                                                                      ~
                                                                      [a_aFB] " HTML3.hs:58:97-114] (CNonCanonical)
                [W] cobox_aFM :: [Char] ~ [a_aFK] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFK] " HTML3.hs:58:97-100] (CNonCanonical)
                [W] cobox_aFO :: [a_aFN] ~ [a_aFK] [" a type equality [a_aFN]
                                                                      ~
                                                                      [a_aFK] " HTML3.hs:58:105-114] (CNonCanonical)
                [W] cobox_aFP :: String ~ [a_aFN] [" a type equality String
                                                                     ~
                                                                     [a_aFN] " HTML3.hs:58:105-107] (CNonCanonical)
                [W] cobox_aFQ :: [Char] ~ [a_aFN] [" a type equality [Char]
                                                                     ~
                                                                     [a_aFN] " HTML3.hs:58:112-114] (CNonCanonical)
                [W] cobox_aFS :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:48:9-19] (CNonCanonical)
                [W] cobox_aFT :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:48:37-48] (CNonCanonical)
                [W] cobox_aFU :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML3.hs:48:43-48] (CNonCanonical)
                [W] cobox_aFV :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:49:9-26] (CNonCanonical)
                [W] cobox_aFW :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:49:37-69] (CNonCanonical)
                [W] cobox_aFX :: t_aD0 ~ String [" a type equality t_aD0
                                                                   ~
                                                                   String " HTML3.hs:49:44-68] (CNonCanonical)
                [W] cobox_aFY :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:49:50-67] (CNonCanonical)
                [W] cobox_aFZ :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML3.hs:49:60-62] (CNonCanonical)
                [W] cobox_aG0 :: [Attribute]
                                 ~ [Attribute] [" a type equality [Attribute]
                                                                  ~
                                                                  [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
                [W] cobox_aG1 :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:50:9-40] (CNonCanonical)
                [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                  ~
                                                                  [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
                [W] cobox_aG3 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:50:45-118] (CNonCanonical)
                [W] cobox_aG5 :: [a_aG4] ~ String [" a type equality [a_aG4]
                                                                     ~
                                                                     String " HTML3.hs:50:52-117] (CNonCanonical)
                [W] cobox_aG6 :: [Char] ~ [a_aG4] [" a type equality [Char]
                                                                     ~
                                                                     [a_aG4] " HTML3.hs:50:52-54] (CNonCanonical)
                [W] cobox_aG8 :: [a_aG7] ~ [a_aG4] [" a type equality [a_aG7]
                                                                      ~
                                                                      [a_aG4] " HTML3.hs:50:59-117] (CNonCanonical)
                [W] cobox_aG9 :: String ~ [a_aG7] [" a type equality String
                                                                     ~
                                                                     [a_aG7] " HTML3.hs:50:59-61] (CNonCanonical)
                [W] cobox_aGb :: [a_aGa] ~ [a_aG7] [" a type equality [a_aGa]
                                                                      ~
                                                                      [a_aG7] " HTML3.hs:50:66-117] (CNonCanonical)
                [W] cobox_aGc :: t_aCW ~ [a_aGa] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aGa] " HTML3.hs:50:66-78] (CNonCanonical)
                [W] cobox_aGd :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
                [W] cobox_aGf :: [a_aGe] ~ [a_aGa] [" a type equality [a_aGe]
                                                                      ~
                                                                      [a_aGa] " HTML3.hs:50:83-117] (CNonCanonical)
                [W] cobox_aGg :: [Char] ~ [a_aGe] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGe] " HTML3.hs:50:83-85] (CNonCanonical)
                [W] cobox_aGi :: [a_aGh] ~ [a_aGe] [" a type equality [a_aGh]
                                                                      ~
                                                                      [a_aGe] " HTML3.hs:50:90-117] (CNonCanonical)
                [W] cobox_aGj :: String ~ [a_aGh] [" a type equality String
                                                                     ~
                                                                     [a_aGh] " HTML3.hs:50:90-95] (CNonCanonical)
                [W] cobox_aGl :: [a_aGk] ~ [a_aGh] [" a type equality [a_aGk]
                                                                      ~
                                                                      [a_aGh] " HTML3.hs:50:100-117] (CNonCanonical)
                [W] cobox_aGm :: [Char] ~ [a_aGk] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGk] " HTML3.hs:50:100-103] (CNonCanonical)
                [W] cobox_aGo :: [a_aGn] ~ [a_aGk] [" a type equality [a_aGn]
                                                                      ~
                                                                      [a_aGk] " HTML3.hs:50:108-117] (CNonCanonical)
                [W] cobox_aGp :: String ~ [a_aGn] [" a type equality String
                                                                     ~
                                                                     [a_aGn] " HTML3.hs:50:108-110] (CNonCanonical)
                [W] cobox_aGq :: [Char] ~ [a_aGn] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGn] " HTML3.hs:50:115-117] (CNonCanonical)
                [W] cobox_aGr :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:51:9-32] (CNonCanonical)
                [W] $dEq_aGz :: Eq
                                  a_aGy [" a use of ‘==’ " HTML3.hs:51:50-51] (CNonCanonical)
                [W] cobox_aGA :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:51:37-53] (CNonCanonical)
                [W] cobox_aGC :: Int ~ a_aGy [" a type equality Int
                                                                ~
                                                                a_aGy " HTML3.hs:51:37-48] (CNonCanonical)
                [W] cobox_aGD :: [HTML] ~ [a_aGB] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aGB] " HTML3.hs:51:44-48] (CNonCanonical)
                [W] $dNum_aGF :: Num
                                   a_aGE [" the literal ‘0’ " HTML3.hs:51:53] (CNonCanonical)
                [W] cobox_aGG :: (Integer -> a_aGE)
                                 ~ (Integer -> a_aGy) [" a type equality Integer -> a_aGE
                                                                         ~
                                                                         Integer
                                                                         -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
                [W] cobox_aGH :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:51:57-114] (CNonCanonical)
                [W] cobox_aGJ :: [a_aGI] ~ String [" a type equality [a_aGI]
                                                                     ~
                                                                     String " HTML3.hs:51:64-113] (CNonCanonical)
                [W] cobox_aGK :: [Char] ~ [a_aGI] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGI] " HTML3.hs:51:64-66] (CNonCanonical)
                [W] cobox_aGM :: [a_aGL] ~ [a_aGI] [" a type equality [a_aGL]
                                                                      ~
                                                                      [a_aGI] " HTML3.hs:51:71-113] (CNonCanonical)
                [W] cobox_aGN :: String ~ [a_aGL] [" a type equality String
                                                                     ~
                                                                     [a_aGL] " HTML3.hs:51:71-73] (CNonCanonical)
                [W] cobox_aGP :: [a_aGO] ~ [a_aGL] [" a type equality [a_aGO]
                                                                      ~
                                                                      [a_aGL] " HTML3.hs:51:78-113] (CNonCanonical)
                [W] cobox_aGQ :: t_aCW ~ [a_aGO] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aGO] " HTML3.hs:51:78-90] (CNonCanonical)
                [W] cobox_aGR :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
                [W] cobox_aGT :: [a_aGS] ~ [a_aGO] [" a type equality [a_aGS]
                                                                      ~
                                                                      [a_aGO] " HTML3.hs:51:95-113] (CNonCanonical)
                [W] cobox_aGU :: [Char] ~ [a_aGS] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGS] " HTML3.hs:51:95-99] (CNonCanonical)
                [W] cobox_aGW :: [a_aGV] ~ [a_aGS] [" a type equality [a_aGV]
                                                                      ~
                                                                      [a_aGS] " HTML3.hs:51:104-113] (CNonCanonical)
                [W] cobox_aGX :: String ~ [a_aGV] [" a type equality String
                                                                     ~
                                                                     [a_aGV] " HTML3.hs:51:104-106] (CNonCanonical)
                [W] cobox_aGY :: [Char] ~ [a_aGV] [" a type equality [Char]
                                                                     ~
                                                                     [a_aGV] " HTML3.hs:51:111-113] (CNonCanonical)
                [W] $dEq_aH0 :: Eq
                                  a_aGZ [" a use of ‘==’ " HTML3.hs:52:50-51] (CNonCanonical)
                [W] cobox_aH1 :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:52:37-53] (CNonCanonical)
                [W] cobox_aH3 :: Int ~ a_aGZ [" a type equality Int
                                                                ~
                                                                a_aGZ " HTML3.hs:52:37-48] (CNonCanonical)
                [W] cobox_aH4 :: [HTML] ~ [a_aH2] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aH2] " HTML3.hs:52:44-48] (CNonCanonical)
                [W] $dNum_aH6 :: Num
                                   a_aH5 [" the literal ‘1’ " HTML3.hs:52:53] (CNonCanonical)
                [W] cobox_aH7 :: (Integer -> a_aH5)
                                 ~ (Integer -> a_aGZ) [" a type equality Integer -> a_aH5
                                                                         ~
                                                                         Integer
                                                                         -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
                [W] cobox_aH8 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:52:57-153] (CNonCanonical)
                [W] cobox_aH9 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:57-122] (CNonCanonical)
                [W] cobox_aHa :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:57-98] (CNonCanonical)
                [W] cobox_aHc :: [a_aHb] ~ String [" a type equality [a_aHb]
                                                                     ~
                                                                     String " HTML3.hs:52:64-97] (CNonCanonical)
                [W] cobox_aHd :: [Char] ~ [a_aHb] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHb] " HTML3.hs:52:64-66] (CNonCanonical)
                [W] cobox_aHf :: [a_aHe] ~ [a_aHb] [" a type equality [a_aHe]
                                                                      ~
                                                                      [a_aHb] " HTML3.hs:52:71-97] (CNonCanonical)
                [W] cobox_aHg :: String ~ [a_aHe] [" a type equality String
                                                                     ~
                                                                     [a_aHe] " HTML3.hs:52:71-73] (CNonCanonical)
                [W] cobox_aHi :: [a_aHh] ~ [a_aHe] [" a type equality [a_aHh]
                                                                      ~
                                                                      [a_aHe] " HTML3.hs:52:78-97] (CNonCanonical)
                [W] cobox_aHj :: t_aCW ~ [a_aHh] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aHh] " HTML3.hs:52:78-90] (CNonCanonical)
                [W] cobox_aHk :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
                [W] cobox_aHl :: [Char] ~ [a_aHh] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHh] " HTML3.hs:52:95-97] (CNonCanonical)
                [W] cobox_aHm :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                ~
                                                                Doc " HTML3.hs:52:104-122] (CNonCanonical)
                [W] cobox_aHo :: a_aHn ~ t_aD3 [" a type equality a_aHn
                                                                  ~
                                                                  t_aD3 " HTML3.hs:52:112-121] (CNonCanonical)
                [W] cobox_aHp :: [HTML] ~ [a_aHn] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aHn] " HTML3.hs:52:117-121] (CNonCanonical)
                [W] cobox_aHq :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:128-153] (CNonCanonical)
                [W] cobox_aHs :: [a_aHr] ~ String [" a type equality [a_aHr]
                                                                     ~
                                                                     String " HTML3.hs:52:135-152] (CNonCanonical)
                [W] cobox_aHt :: [Char] ~ [a_aHr] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHr] " HTML3.hs:52:135-138] (CNonCanonical)
                [W] cobox_aHv :: [a_aHu] ~ [a_aHr] [" a type equality [a_aHu]
                                                                      ~
                                                                      [a_aHr] " HTML3.hs:52:143-152] (CNonCanonical)
                [W] cobox_aHw :: String ~ [a_aHu] [" a type equality String
                                                                     ~
                                                                     [a_aHu] " HTML3.hs:52:143-145] (CNonCanonical)
                [W] cobox_aHx :: [Char] ~ [a_aHu] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHu] " HTML3.hs:52:150-152] (CNonCanonical)
                [W] cobox_aHy :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:53:37-45] (CNonCanonical)
                [W] cobox_aHz :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:53:57-190] (CNonCanonical)
                [W] cobox_aHA :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:57-159] (CNonCanonical)
                [W] cobox_aHB :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:57-98] (CNonCanonical)
                [W] cobox_aHD :: [a_aHC] ~ String [" a type equality [a_aHC]
                                                                     ~
                                                                     String " HTML3.hs:53:64-97] (CNonCanonical)
                [W] cobox_aHE :: [Char] ~ [a_aHC] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHC] " HTML3.hs:53:64-66] (CNonCanonical)
                [W] cobox_aHG :: [a_aHF] ~ [a_aHC] [" a type equality [a_aHF]
                                                                      ~
                                                                      [a_aHC] " HTML3.hs:53:71-97] (CNonCanonical)
                [W] cobox_aHH :: String ~ [a_aHF] [" a type equality String
                                                                     ~
                                                                     [a_aHF] " HTML3.hs:53:71-73] (CNonCanonical)
                [W] cobox_aHJ :: [a_aHI] ~ [a_aHF] [" a type equality [a_aHI]
                                                                      ~
                                                                      [a_aHF] " HTML3.hs:53:78-97] (CNonCanonical)
                [W] cobox_aHK :: t_aCW ~ [a_aHI] [" a type equality t_aCW
                                                                    ~
                                                                    [a_aHI] " HTML3.hs:53:78-90] (CNonCanonical)
                [W] cobox_aHL :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                        ~
                                                                        t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
                [W] cobox_aHM :: [Char] ~ [a_aHI] [" a type equality [Char]
                                                                     ~
                                                                     [a_aHI] " HTML3.hs:53:95-97] (CNonCanonical)
                [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                                ~
                                                                Doc " HTML3.hs:53:105-158] (CNonCanonical)
                [W] cobox_aHQ :: (Doc -> Doc -> Doc)
                                 ~ (a_aHN -> b_aHO -> b_aHO) [" a type equality Doc -> Doc -> Doc
                                                                                ~
                                                                                a_aHN
                                                                                -> b_aHO
                                                                                -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
                [W] cobox_aHR :: Doc ~ b_aHO [" a type equality Doc
                                                                ~
                                                                b_aHO " HTML3.hs:53:117-120] (CNonCanonical)
                [W] cobox_aHU :: [b_aHT] ~ [a_aHN] [" a type equality [b_aHT]
                                                                      ~
                                                                      [a_aHN] " HTML3.hs:53:123-157] (CNonCanonical)
                [W] cobox_aHV :: (Doc -> Doc)
                                 ~ (a_aHS -> b_aHT) [" a type equality Doc -> Doc
                                                                       ~
                                                                       a_aHS
                                                                       -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
                [W] cobox_aHY :: [b_aHX] ~ [a_aHS] [" a type equality [b_aHX]
                                                                      ~
                                                                      [a_aHS] " HTML3.hs:53:141-156] (CNonCanonical)
                [W] cobox_aHZ :: (t_aD3 -> t_aD4)
                                 ~ (a_aHW -> b_aHX) [" a type equality t_aD3 -> t_aD4
                                                                       ~
                                                                       a_aHW
                                                                       -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
                [W] cobox_aI0 :: [HTML] ~ [a_aHW] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aHW] " HTML3.hs:53:152-156] (CNonCanonical)
                [W] cobox_aI1 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:165-190] (CNonCanonical)
                [W] cobox_aI3 :: [a_aI2] ~ String [" a type equality [a_aI2]
                                                                     ~
                                                                     String " HTML3.hs:53:172-189] (CNonCanonical)
                [W] cobox_aI4 :: [Char] ~ [a_aI2] [" a type equality [Char]
                                                                     ~
                                                                     [a_aI2] " HTML3.hs:53:172-175] (CNonCanonical)
                [W] cobox_aI6 :: [a_aI5] ~ [a_aI2] [" a type equality [a_aI5]
                                                                      ~
                                                                      [a_aI2] " HTML3.hs:53:180-189] (CNonCanonical)
                [W] cobox_aI7 :: String ~ [a_aI5] [" a type equality String
                                                                     ~
                                                                     [a_aI5] " HTML3.hs:53:180-182] (CNonCanonical)
                [W] cobox_aI8 :: [Char] ~ [a_aI5] [" a type equality [Char]
                                                                     ~
                                                                     [a_aI5] " HTML3.hs:53:187-189] (CNonCanonical)
                [W] cobox_aIb :: [t_aIa] ~ t_aD7 [" a type equality [t_aIa]
                                                                    ~
                                                                    t_aD7 " HTML3.hs:(42,10)-(43,59)] (CNonCanonical)
                [W] cobox_aIe :: (t_aIc, t_aId) ~ t_aIa [" a type equality (t_aIc,
                                                                            t_aId)
                                                                           ~
                                                                           t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
                [W] cobox_aIf :: [Char] ~ t_aIc [" a type equality [Char]
                                                                   ~
                                                                   t_aIc " HTML3.hs:42:12-15] (CNonCanonical)
                [W] cobox_aIg :: [Char] ~ t_aId [" a type equality [Char]
                                                                   ~
                                                                   t_aId " HTML3.hs:42:18-21] (CNonCanonical)
                [W] cobox_aIj :: (t_aIh, t_aIi) ~ t_aIa [" a type equality (t_aIh,
                                                                            t_aIi)
                                                                           ~
                                                                           t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
                [W] cobox_aIk :: [Char] ~ t_aIh [" a type equality [Char]
                                                                   ~
                                                                   t_aIh " HTML3.hs:42:26-31] (CNonCanonical)
                [W] cobox_aIl :: [Char] ~ t_aIi [" a type equality [Char]
                                                                   ~
                                                                   t_aIi " HTML3.hs:42:34-39] (CNonCanonical)
                [W] cobox_aIo :: (t_aIm, t_aIn) ~ t_aIa [" a type equality (t_aIm,
                                                                            t_aIn)
                                                                           ~
                                                                           t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
                [W] cobox_aIp :: [Char] ~ t_aIm [" a type equality [Char]
                                                                   ~
                                                                   t_aIm " HTML3.hs:42:44-49] (CNonCanonical)
                [W] cobox_aIq :: [Char] ~ t_aIn [" a type equality [Char]
                                                                   ~
                                                                   t_aIn " HTML3.hs:42:52-57] (CNonCanonical)
                [W] cobox_aIt :: (t_aIr, t_aIs) ~ t_aIa [" a type equality (t_aIr,
                                                                            t_aIs)
                                                                           ~
                                                                           t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
                [W] cobox_aIu :: [Char] ~ t_aIr [" a type equality [Char]
                                                                   ~
                                                                   t_aIr " HTML3.hs:43:12-17] (CNonCanonical)
                [W] cobox_aIv :: [Char] ~ t_aIs [" a type equality [Char]
                                                                   ~
                                                                   t_aIs " HTML3.hs:43:20-22] (CNonCanonical)
                [W] cobox_aIy :: (t_aIw, t_aIx) ~ t_aIa [" a type equality (t_aIw,
                                                                            t_aIx)
                                                                           ~
                                                                           t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
                [W] cobox_aIz :: [Char] ~ t_aIw [" a type equality [Char]
                                                                   ~
                                                                   t_aIw " HTML3.hs:43:27-32] (CNonCanonical)
                [W] cobox_aIA :: [Char] ~ t_aIx [" a type equality [Char]
                                                                   ~
                                                                   t_aIx " HTML3.hs:43:35-38] (CNonCanonical)
                [W] cobox_aID :: (t_aIB, t_aIC) ~ t_aIa [" a type equality (t_aIB,
                                                                            t_aIC)
                                                                           ~
                                                                           t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
                [W] cobox_aIE :: [Char] ~ t_aIB [" a type equality [Char]
                                                                   ~
                                                                   t_aIB " HTML3.hs:43:43-48] (CNonCanonical)
                [W] cobox_aIF :: [Char] ~ t_aIC [" a type equality [Char]
                                                                   ~
                                                                   t_aIC " HTML3.hs:43:51-57] (CNonCanonical)
                [W] cobox_aII :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                    ~
                                                                    t_aDo " HTML3.hs:37:9-20] (CNonCanonical)
                [W] cobox_aIK :: Maybe t_aIJ ~ t_aIH [" a type equality Maybe t_aIJ
                                                                        ~
                                                                        t_aIH " HTML3.hs:37:9-15] (CNonCanonical)
                [W] cobox_aIL :: t_aDp ~ t_aDp [" a type equality t_aDp
                                                                  ~
                                                                  t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
                [W] cobox_aIM :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                    ~
                                                                    t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
                [W] cobox_aIO :: [t_aIN] ~ t_aDo [" a type equality [t_aIN]
                                                                    ~
                                                                    t_aDo " HTML3.hs:38:8-9] (CNonCanonical)
                [W] cobox_aIQ :: Maybe a_aIP ~ t_aDp [" a type equality Maybe a_aIP
                                                                        ~
                                                                        t_aDp " HTML3.hs:38:25-31] (CNonCanonical)
                [W] cobox_aIS :: [t_aIR] ~ t_aDo [" a type equality [t_aIR]
                                                                    ~
                                                                    t_aDo " HTML3.hs:39:9-16] (CNonCanonical)
                [W] cobox_aIU :: Maybe t_aIT ~ t_aIR [" a type equality Maybe t_aIT
                                                                        ~
                                                                        t_aIR " HTML3.hs:39:9-14] (CNonCanonical)
                [W] cobox_aIW :: Maybe a_aIV ~ t_aDp [" a type equality Maybe a_aIV
                                                                        ~
                                                                        t_aDp " HTML3.hs:39:25-30] (CNonCanonical)
                [W] cobox_aIX :: t_aIT ~ a_aIV [" a type equality t_aIT
                                                                  ~
                                                                  a_aIV " HTML3.hs:39:30] (CNonCanonical)
                [W] cobox_aIZ :: HTML ~ t_aDG [" a type equality HTML
                                                                 ~
                                                                 t_aDG " HTML3.hs:14:13-137] (CNonCanonical)
                [W] cobox_aJ0 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:23-28] (CNonCanonical)
                [W] cobox_aJ1 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:32-38] (CNonCanonical)
                [W] cobox_aJ2 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:40-45] (CNonCanonical)
                [W] cobox_aJ3 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:51-62] (CNonCanonical)
                [W] cobox_aJ4 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:56-62] (CNonCanonical)
                [W] cobox_aJ5 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:66-98] (CNonCanonical)
                [W] cobox_aJ6 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:76-80] (CNonCanonical)
                [W] cobox_aJ7 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:84-90] (CNonCanonical)
                [W] cobox_aJ8 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:92-96] (CNonCanonical)
                [W] cobox_aJ9 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:102-135] (CNonCanonical)
                [W] cobox_aJa :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:112-116] (CNonCanonical)
                [W] cobox_aJb :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:120-126] (CNonCanonical)
                [W] cobox_aJc :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:14:128-133] (CNonCanonical)
                [W] cobox_aJf :: a_aJe ~ (t_aDI -> t_aDJ) [" a type equality a_aJe
                                                                             ~
                                                                             t_aDI
                                                                             -> t_aDJ " HTML3.hs:8:7-15] (CNonCanonical)
                [W] cobox_aJi :: a_aJh ~ (t_aDM -> t_aDN) [" a type equality a_aJh
                                                                             ~
                                                                             t_aDM
                                                                             -> t_aDN " HTML3.hs:6:11-19] (CNonCanonical)
                [W] $dOrd_aJx :: Ord
                                   a_aJw [" a use of ‘<’ " HTML3.hs:73:25] (CNonCanonical)
                [W] cobox_aJy :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:73:19-28] (CNonCanonical)
                [W] cobox_aJz :: t_aCJ ~ a_aJw [" a type equality t_aCJ
                                                                  ~
                                                                  a_aJw " HTML3.hs:73:19-23] (CNonCanonical)
                [W] $dNum_aJB :: Num
                                   a_aJA [" the literal ‘10’ " HTML3.hs:73:27-28] (CNonCanonical)
                [W] cobox_aJC :: (Integer -> a_aJA)
                                 ~ (Integer -> a_aJw) [" a type equality Integer -> a_aJA
                                                                         ~
                                                                         Integer
                                                                         -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
                [W] cobox_aJD :: t_aDN ~ t_aCK [" a type equality t_aDN
                                                                  ~
                                                                  t_aCK " HTML3.hs:73:32-44] (CNonCanonical)
                [W] cobox_aJE :: t_aCJ ~ t_aDM [" a type equality t_aCJ
                                                                  ~
                                                                  t_aDM " HTML3.hs:73:40-44] (CNonCanonical)
                [W] cobox_aJF :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:74:19-27] (CNonCanonical)
                [W] cobox_aJH :: [t_aJG] ~ t_aCK [" a type equality [t_aJG]
                                                                    ~
                                                                    t_aCK " HTML3.hs:74:32-49] (CNonCanonical)
                [W] cobox_aJI :: t_aDJ ~ t_aJG [" a type equality t_aDJ
                                                                  ~
                                                                  t_aJG " HTML3.hs:74:33-48] (CNonCanonical)
                [W] $dNum_aJK :: Num
                                   a_aJJ [" a use of ‘+’ " HTML3.hs:74:44] (CNonCanonical)
                [W] cobox_aJL :: a_aJJ ~ t_aDI [" a type equality a_aJJ
                                                                  ~
                                                                  t_aDI " HTML3.hs:74:38-47] (CNonCanonical)
                [W] cobox_aJM :: t_aCJ ~ a_aJJ [" a type equality t_aCJ
                                                                  ~
                                                                  a_aJJ " HTML3.hs:74:38-42] (CNonCanonical)
                [W] $dNum_aJO :: Num
                                   a_aJN [" the literal ‘55’ " HTML3.hs:74:46-47] (CNonCanonical)
                [W] cobox_aJP :: (Integer -> a_aJN)
                                 ~ (Integer -> a_aJJ) [" a type equality Integer -> a_aJN
                                                                         ~
                                                                         Integer
                                                                         -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
                [W] cobox_aJU :: t_aJR ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                                             ~
                                                                             t_aJS
                                                                             -> t_aJT " HTML3.hs:70:19-86] (CNonCanonical)
                [W] cobox_aJW :: [a_aJV] ~ t_aJT [" a type equality [a_aJV]
                                                                    ~
                                                                    t_aJT " HTML3.hs:70:35-86] (CNonCanonical)
                [W] cobox_aJX :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                    ~
                                                                    [a_aJV] " HTML3.hs:70:35-56] (CNonCanonical)
                [W] $dFractional_aK7 :: Fractional
                                          a_aK6 [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
                [W] cobox_aK8 :: a_aK6 ~ t_aCJ [" a type equality a_aK6
                                                                  ~
                                                                  t_aCJ " HTML3.hs:70:46-55] (CNonCanonical)
                [W] cobox_aK9 :: t_aJS ~ a_aK6 [" a type equality t_aJS
                                                                  ~
                                                                  a_aK6 " HTML3.hs:70:46-50] (CNonCanonical)
                [W] $dNum_aKb :: Num
                                   a_aKa [" the literal ‘16’ " HTML3.hs:70:54-55] (CNonCanonical)
                [W] cobox_aKc :: (Integer -> a_aKa)
                                 ~ (Integer -> a_aK6) [" a type equality Integer -> a_aKa
                                                                         ~
                                                                         Integer
                                                                         -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
                [W] cobox_aKd :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                    ~
                                                                    [a_aJV] " HTML3.hs:70:61-86] (CNonCanonical)
                [W] $dIntegral_aKs :: Integral
                                        a_aKr [" a use of ‘rem’ " HTML3.hs:70:78-82] (CNonCanonical)
                [W] cobox_aKt :: a_aKr ~ t_aCJ [" a type equality a_aKr
                                                                  ~
                                                                  t_aCJ " HTML3.hs:70:72-85] (CNonCanonical)
                [W] cobox_aKu :: t_aJS ~ a_aKr [" a type equality t_aJS
                                                                  ~
                                                                  a_aKr " HTML3.hs:70:72-76] (CNonCanonical)
                [W] $dNum_aKw :: Num
                                   a_aKv [" the literal ‘16’ " HTML3.hs:70:84-85] (CNonCanonical)
                [W] cobox_aKx :: (Integer -> a_aKv)
                                 ~ (Integer -> a_aKr) [" a type equality Integer -> a_aKv
                                                                         ~
                                                                         Integer
                                                                         -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
                [W] cobox_aKz :: [a_aKy] ~ t_aCQ [" a type equality [a_aKy]
                                                                    ~
                                                                    t_aCQ " HTML3.hs:69:15-56] (CNonCanonical)
                [W] cobox_aKA :: [Char] ~ [a_aKy] [" a type equality [Char]
                                                                     ~
                                                                     [a_aKy] " HTML3.hs:69:15-17] (CNonCanonical)
                [W] cobox_aKC :: [a_aKB] ~ [a_aKy] [" a type equality [a_aKB]
                                                                      ~
                                                                      [a_aKy] " HTML3.hs:69:22-56] (CNonCanonical)
                [W] cobox_aKF :: t_aJR ~ (t_aKD -> t_aKE) [" a type equality t_aJR
                                                                             ~
                                                                             t_aKD
                                                                             -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
                [W] cobox_aKG :: t_aKE ~ [a_aKB] [" a type equality t_aKE
                                                                    ~
                                                                    [a_aKB] " HTML3.hs:69:22-30] (CNonCanonical)
                [W] cobox_aKH :: t_aCN ~ t_aKD [" a type equality t_aCN
                                                                  ~
                                                                  t_aKD " HTML3.hs:69:30] (CNonCanonical)
                [W] cobox_aKJ :: [a_aKI] ~ [a_aKB] [" a type equality [a_aKI]
                                                                      ~
                                                                      [a_aKB] " HTML3.hs:69:35-56] (CNonCanonical)
                [W] cobox_aKM :: t_aJR ~ (t_aKK -> t_aKL) [" a type equality t_aJR
                                                                             ~
                                                                             t_aKK
                                                                             -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
                [W] cobox_aKN :: t_aKL ~ [a_aKI] [" a type equality t_aKL
                                                                    ~
                                                                    [a_aKI] " HTML3.hs:69:35-43] (CNonCanonical)
                [W] cobox_aKO :: t_aCO ~ t_aKK [" a type equality t_aCO
                                                                  ~
                                                                  t_aKK " HTML3.hs:69:43] (CNonCanonical)
                [W] cobox_aKR :: t_aJR ~ (t_aKP -> t_aKQ) [" a type equality t_aJR
                                                                             ~
                                                                             t_aKP
                                                                             -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
                [W] cobox_aKS :: t_aKQ ~ [a_aKI] [" a type equality t_aKQ
                                                                    ~
                                                                    [a_aKI] " HTML3.hs:69:48-56] (CNonCanonical)
                [W] cobox_aKT :: t_aCP ~ t_aKP [" a type equality t_aCP
                                                                  ~
                                                                  t_aKP " HTML3.hs:69:56] (CNonCanonical)
                [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX)
                                 ~ t_aCx [" a type equality (t_aKV, t_aKW, t_aKX)
                                                            ~
                                                            t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
                [W] cobox_aKZ :: HTML ~ t_aCy [" a type equality HTML
                                                                 ~
                                                                 t_aCy " HTML3.hs:89:22-64] (CNonCanonical)
                [W] cobox_aL0 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:89:32-35] (CNonCanonical)
                [W] cobox_aL1 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:89:39-47] (CNonCanonical)
                [W] cobox_aL2 :: t_aCQ ~ String [" a type equality t_aCQ
                                                                   ~
                                                                   String " HTML3.hs:89:49-59] (CNonCanonical)
                [W] cobox_aL3 :: t_aKV ~ t_aCN [" a type equality t_aKV
                                                                  ~
                                                                  t_aCN " HTML3.hs:89:55] (CNonCanonical)
                [W] cobox_aL4 :: t_aKW ~ t_aCO [" a type equality t_aKW
                                                                  ~
                                                                  t_aCO " HTML3.hs:89:57] (CNonCanonical)
                [W] cobox_aL5 :: t_aKX ~ t_aCP [" a type equality t_aKX
                                                                  ~
                                                                  t_aCP " HTML3.hs:89:59] (CNonCanonical)
                [W] cobox_aL7 :: HTML ~ t_aCC [" a type equality HTML
                                                                 ~
                                                                 t_aCC " HTML3.hs:86:18-56] (CNonCanonical)
                [W] cobox_aL8 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:86:28-31] (CNonCanonical)
                [W] cobox_aLb :: [b_aLa] ~ [HTML] [" a type equality [b_aLa]
                                                                     ~
                                                                     [HTML] " HTML3.hs:86:37-55] (CNonCanonical)
                [W] cobox_aLc :: (t_aCx -> t_aCy)
                                 ~ (a_aL9 -> b_aLa) [" a type equality t_aCx -> t_aCy
                                                                       ~
                                                                       a_aL9
                                                                       -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
                [W] cobox_aLd :: t_aCB ~ [a_aL9] [" a type equality t_aCB
                                                                    ~
                                                                    [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
                [W] cobox_aLf :: HTML ~ t_aCG [" a type equality HTML
                                                                 ~
                                                                 t_aCG " HTML3.hs:83:22-95] (CNonCanonical)
                [W] cobox_aLg :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:32-38] (CNonCanonical)
                [W] cobox_aLh :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:42-48] (CNonCanonical)
                [W] cobox_aLi :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:50-54] (CNonCanonical)
                [W] cobox_aLj :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:58-65] (CNonCanonical)
                [W] cobox_aLk :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML3.hs:83:67-71] (CNonCanonical)
                [W] cobox_aLn :: [b_aLm] ~ [HTML] [" a type equality [b_aLm]
                                                                     ~
                                                                     [HTML] " HTML3.hs:83:76-94] (CNonCanonical)
                [W] cobox_aLo :: (t_aCB -> t_aCC)
                                 ~ (a_aLl -> b_aLm) [" a type equality t_aCB -> t_aCC
                                                                       ~
                                                                       a_aLl
                                                                       -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
                [W] cobox_aLp :: t_aCF ~ [a_aLl] [" a type equality t_aCF
                                                                    ~
                                                                    [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
                [W] cobox_aLr :: HTML ~ t_aCi [" a type equality HTML
                                                                 ~
                                                                 t_aCi " HTML3.hs:98:20-70] (CNonCanonical)
                [W] cobox_aLt :: [a_aLs] ~ String [" a type equality [a_aLs]
                                                                     ~
                                                                     String " HTML3.hs:98:31-52] (CNonCanonical)
                [W] cobox_aLu :: [Char] ~ [a_aLs] [" a type equality [Char]
                                                                     ~
                                                                     [a_aLs] " HTML3.hs:98:31-33] (CNonCanonical)
                [W] cobox_aLv :: t_aDN ~ [a_aLs] [" a type equality t_aDN
                                                                    ~
                                                                    [a_aLs] " HTML3.hs:98:38-52] (CNonCanonical)
                [W] cobox_aLw :: t_aCg ~ t_aDM [" a type equality t_aCg
                                                                  ~
                                                                  t_aDM " HTML3.hs:98:46-52] (CNonCanonical)
                [W] cobox_aLx :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:98:59-69] (CNonCanonical)
                [W] cobox_aLy :: t_aCh ~ String [" a type equality t_aCh
                                                                   ~
                                                                   String " HTML3.hs:98:64-69] (CNonCanonical)
                [W] cobox_aLA :: t_aC2 ~ t_aBY [" a type equality t_aC2
                                                                  ~
                                                                  t_aBY " HTML3.hs:(110,16)-(112,111)] (CNonCanonical)
                [W] cobox_aLB :: [Char] ~ t_aC0 [" a type equality [Char]
                                                                   ~
                                                                   t_aC0 " HTML3.hs:110:25-38] (CNonCanonical)
                [W] cobox_aLD :: [t_aLC] ~ t_aC1 [" a type equality [t_aLC]
                                                                    ~
                                                                    t_aC1 " HTML3.hs:(110,40)-(112,111)] (CNonCanonical)
                [W] cobox_aLE :: t_aCi ~ t_aLC [" a type equality t_aCi
                                                                  ~
                                                                  t_aLC " HTML3.hs:110:42-59] (CNonCanonical)
                [W] $dNum_aLG :: Num
                                   a_aLF [" the literal ‘1’ " HTML3.hs:110:44] (CNonCanonical)
                [W] cobox_aLH :: (Integer -> a_aLF)
                                 ~ (Integer -> t_aCg) [" a type equality Integer -> a_aLF
                                                                         ~
                                                                         Integer
                                                                         -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
                [W] cobox_aLI :: [Char] ~ t_aCh [" a type equality [Char]
                                                                   ~
                                                                   t_aCh " HTML3.hs:110:46-59] (CNonCanonical)
                [W] cobox_aLJ :: t_aCr ~ t_aLC [" a type equality t_aCr
                                                                  ~
                                                                  t_aLC " HTML3.hs:111:41-343] (CNonCanonical)
                [W] cobox_aLL :: [t_aLK] ~ t_aCq [" a type equality [t_aLK]
                                                                    ~
                                                                    t_aCq " HTML3.hs:111:44-343] (CNonCanonical)
                [W] cobox_aLN :: [t_aLM] ~ t_aLK [" a type equality [t_aLM]
                                                                    ~
                                                                    t_aLK " HTML3.hs:111:45-160] (CNonCanonical)
                [W] cobox_aLO :: t_aCc ~ t_aLM [" a type equality t_aCc
                                                                  ~
                                                                  t_aLM " HTML3.hs:111:46-85] (CNonCanonical)
                [W] cobox_aLQ :: [t_aLP] ~ t_aCa [" a type equality [t_aLP]
                                                                    ~
                                                                    t_aCa " HTML3.hs:111:51-71] (CNonCanonical)
                [W] cobox_aLT :: (t_aLR, t_aLS) ~ t_aLP [" a type equality (t_aLR,
                                                                            t_aLS)
                                                                           ~
                                                                           t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
                [W] cobox_aLU :: [Char] ~ t_aLR [" a type equality [Char]
                                                                   ~
                                                                   t_aLR " HTML3.hs:111:53-59] (CNonCanonical)
                [W] cobox_aLV :: [Char] ~ t_aLS [" a type equality [Char]
                                                                   ~
                                                                   t_aLS " HTML3.hs:111:61-69] (CNonCanonical)
                [W] cobox_aLX :: [t_aLW] ~ t_aCb [" a type equality [t_aLW]
                                                                    ~
                                                                    t_aCb " HTML3.hs:111:73-85] (CNonCanonical)
                [W] cobox_aLY :: t_aC7 ~ t_aLW [" a type equality t_aC7
                                                                  ~
                                                                  t_aLW " HTML3.hs:111:74-84] (CNonCanonical)
                [W] cobox_aLZ :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:79-84] (CNonCanonical)
                [W] cobox_aM0 :: t_aC7 ~ t_aLM [" a type equality t_aC7
                                                                  ~
                                                                  t_aLM " HTML3.hs:111:88-159] (CNonCanonical)
                [W] cobox_aM1 :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:93-159] (CNonCanonical)
                [W] cobox_aM3 :: [t_aM2] ~ t_aLK [" a type equality [t_aM2]
                                                                    ~
                                                                    t_aLK " HTML3.hs:111:162-278] (CNonCanonical)
                [W] cobox_aM4 :: t_aCc ~ t_aM2 [" a type equality t_aCc
                                                                  ~
                                                                  t_aM2 " HTML3.hs:111:163-203] (CNonCanonical)
                [W] cobox_aM6 :: [t_aM5] ~ t_aCa [" a type equality [t_aM5]
                                                                    ~
                                                                    t_aCa " HTML3.hs:111:168-188] (CNonCanonical)
                [W] cobox_aM9 :: (t_aM7, t_aM8) ~ t_aM5 [" a type equality (t_aM7,
                                                                            t_aM8)
                                                                           ~
                                                                           t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
                [W] cobox_aMa :: [Char] ~ t_aM7 [" a type equality [Char]
                                                                   ~
                                                                   t_aM7 " HTML3.hs:111:170-176] (CNonCanonical)
                [W] cobox_aMb :: [Char] ~ t_aM8 [" a type equality [Char]
                                                                   ~
                                                                   t_aM8 " HTML3.hs:111:178-186] (CNonCanonical)
                [W] cobox_aMd :: [t_aMc] ~ t_aCb [" a type equality [t_aMc]
                                                                    ~
                                                                    t_aCb " HTML3.hs:111:190-203] (CNonCanonical)
                [W] cobox_aMe :: t_aC7 ~ t_aMc [" a type equality t_aC7
                                                                  ~
                                                                  t_aMc " HTML3.hs:111:191-202] (CNonCanonical)
                [W] cobox_aMf :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:196-202] (CNonCanonical)
                [W] cobox_aMg :: t_aC7 ~ t_aM2 [" a type equality t_aC7
                                                                  ~
                                                                  t_aM2 " HTML3.hs:111:206-277] (CNonCanonical)
                [W] cobox_aMh :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:211-277] (CNonCanonical)
                [W] cobox_aMj :: [t_aMi] ~ t_aLK [" a type equality [t_aMi]
                                                                    ~
                                                                    t_aLK " HTML3.hs:111:280-342] (CNonCanonical)
                [W] cobox_aMk :: t_aCc ~ t_aMi [" a type equality t_aCc
                                                                  ~
                                                                  t_aMi " HTML3.hs:111:281-321] (CNonCanonical)
                [W] cobox_aMm :: [t_aMl] ~ t_aCa [" a type equality [t_aMl]
                                                                    ~
                                                                    t_aCa " HTML3.hs:111:286-306] (CNonCanonical)
                [W] cobox_aMp :: (t_aMn, t_aMo) ~ t_aMl [" a type equality (t_aMn,
                                                                            t_aMo)
                                                                           ~
                                                                           t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
                [W] cobox_aMq :: [Char] ~ t_aMn [" a type equality [Char]
                                                                   ~
                                                                   t_aMn " HTML3.hs:111:288-294] (CNonCanonical)
                [W] cobox_aMr :: [Char] ~ t_aMo [" a type equality [Char]
                                                                   ~
                                                                   t_aMo " HTML3.hs:111:296-304] (CNonCanonical)
                [W] cobox_aMt :: [t_aMs] ~ t_aCb [" a type equality [t_aMs]
                                                                    ~
                                                                    t_aCb " HTML3.hs:111:308-321] (CNonCanonical)
                [W] cobox_aMu :: t_aC7 ~ t_aMs [" a type equality t_aC7
                                                                  ~
                                                                  t_aMs " HTML3.hs:111:309-320] (CNonCanonical)
                [W] cobox_aMv :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:314-320] (CNonCanonical)
                [W] cobox_aMw :: t_aC7 ~ t_aMi [" a type equality t_aC7
                                                                  ~
                                                                  t_aMi " HTML3.hs:111:324-341] (CNonCanonical)
                [W] cobox_aMx :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                   ~
                                                                   t_aC6 " HTML3.hs:111:329-341] (CNonCanonical)
                [W] cobox_aMy :: t_aCG ~ t_aLC [" a type equality t_aCG
                                                                  ~
                                                                  t_aLC " HTML3.hs:112:41-109] (CNonCanonical)
                [W] cobox_aMA :: [t_aMz] ~ t_aCF [" a type equality [t_aMz]
                                                                    ~
                                                                    t_aCF " HTML3.hs:112:52-109] (CNonCanonical)
                [W] cobox_aMC :: [t_aMB] ~ t_aMz [" a type equality [t_aMB]
                                                                    ~
                                                                    t_aMz " HTML3.hs:112:53-108] (CNonCanonical)
                [W] $dNum_aMF :: Num
                                   a_aME [" the literal ‘0’ " HTML3.hs:112:70] (CNonCanonical)
                [W] cobox_aMG :: (Integer -> a_aME)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aME
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
                [W] $dNum_aMI :: Num
                                   a_aMH [" the literal ‘25’ " HTML3.hs:112:72-73] (CNonCanonical)
                [W] cobox_aMJ :: (Integer -> a_aMH)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMH
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
                [W] $dNum_aML :: Num
                                   a_aMK [" the literal ‘250’ " HTML3.hs:112:76-78] (CNonCanonical)
                [W] cobox_aMM :: (Integer -> a_aMK)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMK
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
                [W] $dEnum_aOJ :: Enum
                                    t_aMD [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CNonCanonical)
                [W] $dNum_aOM :: Num
                                   a_aOL [" the literal ‘0’ " HTML3.hs:112:88] (CNonCanonical)
                [W] cobox_aON :: (Integer -> a_aOL)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOL
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
                [W] $dNum_aOP :: Num
                                   a_aOO [" the literal ‘25’ " HTML3.hs:112:90-91] (CNonCanonical)
                [W] cobox_aOQ :: (Integer -> a_aOO)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOO
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
                [W] $dNum_aOS :: Num
                                   a_aOR [" the literal ‘250’ " HTML3.hs:112:94-96] (CNonCanonical)
                [W] cobox_aOT :: (Integer -> a_aOR)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOR
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
                [W] $dEnum_aOU :: Enum
                                    t_aOK [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CNonCanonical)
                [W] $dNum_aOX :: Num
                                   a_aOW [" the literal ‘0’ " HTML3.hs:112:106] (CNonCanonical)
                [W] cobox_aOY :: (Integer -> a_aOW)
                                 ~ (Integer -> t_aOV) [" a type equality Integer -> a_aOW
                                                                         ~
                                                                         Integer
                                                                         -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
                [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1)
                                 ~ t_aMB [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                            ~
                                                            t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
                [W] cobox_aP3 :: t_aMD ~ t_aOZ [" a type equality t_aMD
                                                                  ~
                                                                  t_aOZ " HTML3.hs:112:55] (CNonCanonical)
                [W] cobox_aP4 :: t_aOK ~ t_aP0 [" a type equality t_aOK
                                                                  ~
                                                                  t_aP0 " HTML3.hs:112:57] (CNonCanonical)
                [W] cobox_aP5 :: t_aOV ~ t_aP1 [" a type equality t_aOV
                                                                  ~
                                                                  t_aP1 " HTML3.hs:112:59] (CNonCanonical)
                [W] cobox_aP7 :: IO () ~ t_aBW [" a type equality IO ()
                                                                  ~
                                                                  t_aBW " HTML3.hs:115:8-35] (CNonCanonical)
                [W] cobox_aP8 :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                ~
                                                                Doc " HTML3.hs:115:16-34] (CNonCanonical)
                [W] cobox_aP9 :: t_aBY ~ t_aD3 [" a type equality t_aBY
                                                                  ~
                                                                  t_aD3 " HTML3.hs:115:23-34] (CNonCanonical)
                [W] cobox_aPc :: a_aPb
                                 ~ (t_aDQ -> t_aDR -> t_aDS) [" a type equality a_aPb
                                                                                ~
                                                                                t_aDQ
                                                                                -> t_aDR
                                                                                -> t_aDS " HTML3.hs:4:12-20] (CNonCanonical)
                [W] cobox_aPe :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:21:11-16] (CNonCanonical)
                [W] cobox_aPg :: Maybe a_aPf ~ t_aDC [" a type equality Maybe a_aPf
                                                                        ~
                                                                        t_aDC " HTML3.hs:21:32-38] (CNonCanonical)
                [W] cobox_aPh :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:22:11-23] (CNonCanonical)
                [W] cobox_aPj :: Maybe a_aPi ~ t_aDC [" a type equality Maybe a_aPi
                                                                        ~
                                                                        t_aDC " HTML3.hs:22:32-38] (CNonCanonical)
                [W] cobox_aPk :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:23:11-31] (CNonCanonical)
                [W] cobox_aPl :: t_aDS ~ Bool [" a type equality t_aDS
                                                                 ~
                                                                 Bool " HTML3.hs:23:40-61] (CNonCanonical)
                [W] cobox_aPm :: String ~ t_aDQ [" a type equality String
                                                                   ~
                                                                   t_aDQ " HTML3.hs:23:49-51] (CNonCanonical)
                [W] cobox_aPp :: b_aPo ~ t_aDR [" a type equality b_aPo
                                                                  ~
                                                                  t_aDR " HTML3.hs:23:54-60] (CNonCanonical)
                [W] cobox_aPq :: t_aDB ~ (a_aPn, b_aPo) [" a type equality t_aDB
                                                                           ~
                                                                           (a_aPn,
                                                                            b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
                [W] cobox_aPs :: Maybe a_aPr ~ t_aDC [" a type equality Maybe a_aPr
                                                                        ~
                                                                        t_aDC " HTML3.hs:23:65-72] (CNonCanonical)
                [W] cobox_aPt :: t_aDB ~ a_aPr [" a type equality t_aDB
                                                                  ~
                                                                  a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
                [W] cobox_aPu :: t_aDS ~ Bool [" a type equality t_aDS
                                                                 ~
                                                                 Bool " HTML3.hs:24:40-61] (CNonCanonical)
                [W] cobox_aPv :: String ~ t_aDQ [" a type equality String
                                                                   ~
                                                                   t_aDQ " HTML3.hs:24:49-51] (CNonCanonical)
                [W] cobox_aPy :: a_aPw ~ t_aDR [" a type equality a_aPw
                                                                  ~
                                                                  t_aDR " HTML3.hs:24:54-60] (CNonCanonical)
                [W] cobox_aPz :: t_aDB ~ (a_aPw, b_aPx) [" a type equality t_aDB
                                                                           ~
                                                                           (a_aPw,
                                                                            b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
                [W] cobox_aPB :: Maybe a_aPA ~ t_aDC [" a type equality Maybe a_aPA
                                                                        ~
                                                                        t_aDC " HTML3.hs:24:65-71] (CNonCanonical)
                [W] cobox_aPC :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:25:40-48] (CNonCanonical)
                [W] cobox_aPD :: t_aDp ~ t_aDC [" a type equality t_aDp
                                                                  ~
                                                                  t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
                [W] cobox_aPG :: [b_aPF] ~ t_aDo [" a type equality [b_aPF]
                                                                    ~
                                                                    t_aDo " HTML3.hs:25:60-97] (CNonCanonical)
                [W] cobox_aPH :: t_aDC ~ b_aPF [" a type equality t_aDC
                                                                  ~
                                                                  b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
                [W] cobox_aPI :: a_aPE ~ t_aDA [" a type equality a_aPE
                                                                  ~
                                                                  t_aDA " HTML3.hs:25:83-86] (CNonCanonical)
                [W] cobox_aPJ :: t_aDB ~ t_aDB [" a type equality t_aDB
                                                                  ~
                                                                  t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
                [W] cobox_aPK :: [HTML] ~ [a_aPE] [" a type equality [HTML]
                                                                     ~
                                                                     [a_aPE] " HTML3.hs:25:93-97] (CNonCanonical)
                [W] cobox_aPM :: t_aDp ~ t_aDv [" a type equality t_aDp
                                                                  ~
                                                                  t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
                [W] cobox_aPP :: [b_aPO] ~ t_aDo [" a type equality [b_aPO]
                                                                    ~
                                                                    t_aDo " HTML3.hs:28:30-53] (CNonCanonical)
                [W] cobox_aPQ :: (t_aDB -> t_aDC)
                                 ~ (a_aPN -> b_aPO) [" a type equality t_aDB -> t_aDC
                                                                       ~
                                                                       a_aPN
                                                                       -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
                [W] cobox_aPR :: t_aDu ~ t_aDA [" a type equality t_aDu
                                                                  ~
                                                                  t_aDA " HTML3.hs:28:44-47] (CNonCanonical)
                [W] cobox_aPS :: t_aDt ~ [a_aPN] [" a type equality t_aDt
                                                                    ~
                                                                    [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)}
solveFlats {
Start solver pipeline {
  work item =  [W] cobox_aBX :: IO () ~ t_aBW [" a type equality IO
                                                                   ()
                                                                 ~
                                                                 t_aBW " HTML3.hs:114:9-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBX :: IO () ~ t_aBW [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_aBW " HTML3.hs:114:9-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBX :: IO () ~ t_aBW [" a type equality IO ()
                                                    ~
                                                    t_aBW " HTML3.hs:114:9-13] (CNonCanonical)
canEvNC:eq
  IO ()
  t_aBW
can_eq_nc
  [W] cobox_aBX :: IO () ~ t_aBW
  IO ()
  IO ()
  t_aBW
  t_aBW
canEqTyVar
  t_aBW
  IO ()
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aPU :: t_aBW ~ IO ()
setEvBind
  ev = cobox_aBX
  tm  = CO Sym cobox_aPU
rewriteEqEvidence
  [W] cobox_aBX :: IO () ~ t_aBW
  t_aBW
  IO ()
  Sym cobox_aPU
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPU :: t_aBW ~ IO () [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_aBW " HTML3.hs:114:9-13] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBW := IO ()
  Coercion: t_aBW ~ IO ()
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBW := IO ()
setEvBind
  ev = cobox_aPU
  tm  = CO <IO ()>_N
kickOutRewritable
  tv =  t_aBW
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
1[<C:0,F:0>] [W] cobox_aPU :: t_aBW ~ IO (): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBZ :: HTML ~ t_aBY [" a type equality HTML
                                                                ~
                                                                t_aBY " HTML3.hs:109:17-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBZ :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML3.hs:109:17-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBZ :: HTML ~ t_aBY [" a type equality HTML
                                                   ~
                                                   t_aBY " HTML3.hs:109:17-20] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBY
can_eq_nc
  [W] cobox_aBZ :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aPV :: t_aBY ~ HTML
setEvBind
  ev = cobox_aBZ
  tm  = CO Sym cobox_aPV
rewriteEqEvidence
  [W] cobox_aBZ :: HTML ~ t_aBY
  t_aBY
  HTML
  Sym cobox_aPV
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPV :: t_aBY ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML3.hs:109:17-20] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBY := HTML
  Coercion: t_aBY ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBY := HTML
setEvBind
  ev = cobox_aPV
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aBY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
2[<C:0,F:0>] [W] cobox_aPV :: t_aBY ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC3 :: String
                                ~ t_aC0 [" a type equality String
                                                           ~
                                                           t_aC0 " HTML3.hs:106:13-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC3 :: String
                                 ~ t_aC0 [" a type equality String
                                                            ~
                                                            t_aC0 " HTML3.hs:106:13-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC3 :: String ~ t_aC0 [" a type equality String
                                                     ~
                                                     t_aC0 " HTML3.hs:106:13-36] (CNonCanonical)
canEvNC:eq
  String
  t_aC0
can_eq_nc
  [W] cobox_aC3 :: String ~ t_aC0
  String
  String
  t_aC0
  t_aC0
can_eq_nc
  [W] cobox_aC3 :: String ~ t_aC0
  [Char]
  String
  t_aC0
  t_aC0
canEqTyVar
  t_aC0
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aPW :: t_aC0 ~ String
setEvBind
  ev = cobox_aC3
  tm  = CO Sym cobox_aPW
rewriteEqEvidence
  [W] cobox_aC3 :: String ~ t_aC0
  t_aC0
  String
  Sym cobox_aPW
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPW :: t_aC0
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aC0 " HTML3.hs:106:13-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC0 := String
  Coercion: t_aC0 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC0 := String
setEvBind
  ev = cobox_aPW
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aC0
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
3[<C:0,F:0>] [W] cobox_aPW :: t_aC0 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC4 :: [HTML]
                                ~ t_aC1 [" a type equality [HTML]
                                                           ~
                                                           t_aC1 " HTML3.hs:106:13-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC4 :: [HTML]
                                 ~ t_aC1 [" a type equality [HTML]
                                                            ~
                                                            t_aC1 " HTML3.hs:106:13-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC4 :: [HTML] ~ t_aC1 [" a type equality [HTML]
                                                     ~
                                                     t_aC1 " HTML3.hs:106:13-36] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aC1
can_eq_nc
  [W] cobox_aC4 :: [HTML] ~ t_aC1
  [HTML]
  [HTML]
  t_aC1
  t_aC1
canEqTyVar
  t_aC1
  [HTML]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aPX :: t_aC1 ~ [HTML]
setEvBind
  ev = cobox_aC4
  tm  = CO Sym cobox_aPX
rewriteEqEvidence
  [W] cobox_aC4 :: [HTML] ~ t_aC1
  t_aC1
  [HTML]
  Sym cobox_aPX
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPX :: t_aC1
                                 ~ [HTML] [" a type equality [HTML]
                                                             ~
                                                             t_aC1 " HTML3.hs:106:13-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC1 := [HTML]
  Coercion: t_aC1 ~ [HTML]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC1 := [HTML]
setEvBind
  ev = cobox_aPX
  tm  = CO <[HTML]>_N
kickOutRewritable
  tv =  t_aC1
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
4[<C:0,F:0>] [W] cobox_aPX :: t_aC1 ~ [HTML]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC5 :: HTML ~ t_aC2 [" a type equality HTML
                                                                ~
                                                                t_aC2 " HTML3.hs:106:13-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC5 :: HTML ~ t_aC2 [" a type equality HTML
                                                                 ~
                                                                 t_aC2 " HTML3.hs:106:13-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC5 :: HTML ~ t_aC2 [" a type equality HTML
                                                   ~
                                                   t_aC2 " HTML3.hs:106:13-36] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC2
can_eq_nc
  [W] cobox_aC5 :: HTML ~ t_aC2
  HTML
  HTML
  t_aC2
  t_aC2
canEqTyVar
  t_aC2
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aPY :: t_aC2 ~ HTML
setEvBind
  ev = cobox_aC5
  tm  = CO Sym cobox_aPY
rewriteEqEvidence
  [W] cobox_aC5 :: HTML ~ t_aC2
  t_aC2
  HTML
  Sym cobox_aPY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPY :: t_aC2 ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aC2 " HTML3.hs:106:13-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC2 := HTML
  Coercion: t_aC2 ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC2 := HTML
setEvBind
  ev = cobox_aPY
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aC2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
5[<C:0,F:0>] [W] cobox_aPY :: t_aC2 ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC8 :: String
                                ~ t_aC6 [" a type equality String
                                                           ~
                                                           t_aC6 " HTML3.hs:103:9-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC8 :: String
                                 ~ t_aC6 [" a type equality String
                                                            ~
                                                            t_aC6 " HTML3.hs:103:9-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC8 :: String ~ t_aC6 [" a type equality String
                                                     ~
                                                     t_aC6 " HTML3.hs:103:9-22] (CNonCanonical)
canEvNC:eq
  String
  t_aC6
can_eq_nc
  [W] cobox_aC8 :: String ~ t_aC6
  String
  String
  t_aC6
  t_aC6
can_eq_nc
  [W] cobox_aC8 :: String ~ t_aC6
  [Char]
  String
  t_aC6
  t_aC6
canEqTyVar
  t_aC6
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aPZ :: t_aC6 ~ String
setEvBind
  ev = cobox_aC8
  tm  = CO Sym cobox_aPZ
rewriteEqEvidence
  [W] cobox_aC8 :: String ~ t_aC6
  t_aC6
  String
  Sym cobox_aPZ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPZ :: t_aC6
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aC6 " HTML3.hs:103:9-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC6 := String
  Coercion: t_aC6 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC6 := String
setEvBind
  ev = cobox_aPZ
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aC6
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
6[<C:0,F:0>] [W] cobox_aPZ :: t_aC6 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                ~
                                                                t_aC7 " HTML3.hs:103:9-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                 ~
                                                                 t_aC7 " HTML3.hs:103:9-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC9 :: HTML ~ t_aC7 [" a type equality HTML
                                                   ~
                                                   t_aC7 " HTML3.hs:103:9-22] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC7
can_eq_nc
  [W] cobox_aC9 :: HTML ~ t_aC7
  HTML
  HTML
  t_aC7
  t_aC7
canEqTyVar
  t_aC7
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ0 :: t_aC7 ~ HTML
setEvBind
  ev = cobox_aC9
  tm  = CO Sym cobox_aQ0
rewriteEqEvidence
  [W] cobox_aC9 :: HTML ~ t_aC7
  t_aC7
  HTML
  Sym cobox_aQ0
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ0 :: t_aC7 ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aC7 " HTML3.hs:103:9-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC7 := HTML
  Coercion: t_aC7 ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC7 := HTML
setEvBind
  ev = cobox_aQ0
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aC7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
7[<C:0,F:0>] [W] cobox_aQ0 :: t_aC7 ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCd :: [Attribute]
                                ~ t_aCa [" a type equality [Attribute]
                                                           ~
                                                           t_aCa " HTML3.hs:100:9-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCd :: [Attribute]
                                 ~ t_aCa [" a type equality [Attribute]
                                                            ~
                                                            t_aCa " HTML3.hs:100:9-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCd :: [Attribute] ~ t_aCa [" a type equality [Attribute]
                                                          ~
                                                          t_aCa " HTML3.hs:100:9-37] (CNonCanonical)
canEvNC:eq
  [Attribute]
  t_aCa
can_eq_nc
  [W] cobox_aCd :: [Attribute] ~ t_aCa
  [Attribute]
  [Attribute]
  t_aCa
  t_aCa
canEqTyVar
  t_aCa
  [Attribute]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ1 :: t_aCa ~ [Attribute]
setEvBind
  ev = cobox_aCd
  tm  = CO Sym cobox_aQ1
rewriteEqEvidence
  [W] cobox_aCd :: [Attribute] ~ t_aCa
  t_aCa
  [Attribute]
  Sym cobox_aQ1
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ1 :: t_aCa
                                 ~ [Attribute] [" a type equality [Attribute]
                                                                  ~
                                                                  t_aCa " HTML3.hs:100:9-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCa := [Attribute]
  Coercion: t_aCa ~ [Attribute]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCa := [Attribute]
setEvBind
  ev = cobox_aQ1
  tm  = CO <[Attribute]>_N
kickOutRewritable
  tv =  t_aCa
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
8[<C:0,F:0>] [W] cobox_aQ1 :: t_aCa
                              ~ [Attribute]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCe :: [HTML]
                                ~ t_aCb [" a type equality [HTML]
                                                           ~
                                                           t_aCb " HTML3.hs:100:9-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCe :: [HTML]
                                 ~ t_aCb [" a type equality [HTML]
                                                            ~
                                                            t_aCb " HTML3.hs:100:9-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCe :: [HTML] ~ t_aCb [" a type equality [HTML]
                                                     ~
                                                     t_aCb " HTML3.hs:100:9-37] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aCb
can_eq_nc
  [W] cobox_aCe :: [HTML] ~ t_aCb
  [HTML]
  [HTML]
  t_aCb
  t_aCb
canEqTyVar
  t_aCb
  [HTML]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ2 :: t_aCb ~ [HTML]
setEvBind
  ev = cobox_aCe
  tm  = CO Sym cobox_aQ2
rewriteEqEvidence
  [W] cobox_aCe :: [HTML] ~ t_aCb
  t_aCb
  [HTML]
  Sym cobox_aQ2
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ2 :: t_aCb
                                 ~ [HTML] [" a type equality [HTML]
                                                             ~
                                                             t_aCb " HTML3.hs:100:9-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCb := [HTML]
  Coercion: t_aCb ~ [HTML]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCb := [HTML]
setEvBind
  ev = cobox_aQ2
  tm  = CO <[HTML]>_N
kickOutRewritable
  tv =  t_aCb
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
9[<C:0,F:0>] [W] cobox_aQ2 :: t_aCb ~ [HTML]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCf :: HTML ~ t_aCc [" a type equality HTML
                                                                ~
                                                                t_aCc " HTML3.hs:100:9-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCf :: HTML ~ t_aCc [" a type equality HTML
                                                                 ~
                                                                 t_aCc " HTML3.hs:100:9-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCf :: HTML ~ t_aCc [" a type equality HTML
                                                   ~
                                                   t_aCc " HTML3.hs:100:9-37] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCc
can_eq_nc
  [W] cobox_aCf :: HTML ~ t_aCc
  HTML
  HTML
  t_aCc
  t_aCc
canEqTyVar
  t_aCc
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ3 :: t_aCc ~ HTML
setEvBind
  ev = cobox_aCf
  tm  = CO Sym cobox_aQ3
rewriteEqEvidence
  [W] cobox_aCf :: HTML ~ t_aCc
  t_aCc
  HTML
  Sym cobox_aQ3
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ3 :: t_aCc ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aCc " HTML3.hs:100:9-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCc := HTML
  Coercion: t_aCc ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCc := HTML
setEvBind
  ev = cobox_aQ3
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
10[<C:0,F:0>] [W] cobox_aQ3 :: t_aCc ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCj :: Int ~ t_aCg [" a type equality Int
                                                               ~
                                                               t_aCg " HTML3.hs:97:6-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCj :: Int ~ t_aCg [" a type equality Int
                                                                ~
                                                                t_aCg " HTML3.hs:97:6-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCj :: Int ~ t_aCg [" a type equality Int
                                                  ~
                                                  t_aCg " HTML3.hs:97:6-26] (CNonCanonical)
canEvNC:eq
  Int
  t_aCg
can_eq_nc
  [W] cobox_aCj :: Int ~ t_aCg
  Int
  Int
  t_aCg
  t_aCg
canEqTyVar
  t_aCg
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ4 :: t_aCg ~ Int
setEvBind
  ev = cobox_aCj
  tm  = CO Sym cobox_aQ4
rewriteEqEvidence
  [W] cobox_aCj :: Int ~ t_aCg
  t_aCg
  Int
  Sym cobox_aQ4
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ4 :: t_aCg ~ Int [" a type equality Int
                                                                ~
                                                                t_aCg " HTML3.hs:97:6-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCg := Int
  Coercion: t_aCg ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCg := Int
setEvBind
  ev = cobox_aQ4
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aCg
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
11[<C:0,F:0>] [W] cobox_aQ4 :: t_aCg ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCk :: String
                                ~ t_aCh [" a type equality String
                                                           ~
                                                           t_aCh " HTML3.hs:97:6-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCk :: String
                                 ~ t_aCh [" a type equality String
                                                            ~
                                                            t_aCh " HTML3.hs:97:6-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCk :: String ~ t_aCh [" a type equality String
                                                     ~
                                                     t_aCh " HTML3.hs:97:6-26] (CNonCanonical)
canEvNC:eq
  String
  t_aCh
can_eq_nc
  [W] cobox_aCk :: String ~ t_aCh
  String
  String
  t_aCh
  t_aCh
can_eq_nc
  [W] cobox_aCk :: String ~ t_aCh
  [Char]
  String
  t_aCh
  t_aCh
canEqTyVar
  t_aCh
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ5 :: t_aCh ~ String
setEvBind
  ev = cobox_aCk
  tm  = CO Sym cobox_aQ5
rewriteEqEvidence
  [W] cobox_aCk :: String ~ t_aCh
  t_aCh
  String
  Sym cobox_aQ5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ5 :: t_aCh
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aCh " HTML3.hs:97:6-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCh := String
  Coercion: t_aCh ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCh := String
setEvBind
  ev = cobox_aQ5
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aCh
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
12[<C:0,F:0>] [W] cobox_aQ5 :: t_aCh ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCl :: HTML ~ t_aCi [" a type equality HTML
                                                                ~
                                                                t_aCi " HTML3.hs:97:6-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCl :: HTML ~ t_aCi [" a type equality HTML
                                                                 ~
                                                                 t_aCi " HTML3.hs:97:6-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCl :: HTML ~ t_aCi [" a type equality HTML
                                                   ~
                                                   t_aCi " HTML3.hs:97:6-26] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCi
can_eq_nc
  [W] cobox_aCl :: HTML ~ t_aCi
  HTML
  HTML
  t_aCi
  t_aCi
canEqTyVar
  t_aCi
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ6 :: t_aCi ~ HTML
setEvBind
  ev = cobox_aCl
  tm  = CO Sym cobox_aQ6
rewriteEqEvidence
  [W] cobox_aCl :: HTML ~ t_aCi
  t_aCi
  HTML
  Sym cobox_aQ6
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ6 :: t_aCi ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aCi " HTML3.hs:97:6-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCi := HTML
  Coercion: t_aCi ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCi := HTML
setEvBind
  ev = cobox_aQ6
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCi
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
13[<C:0,F:0>] [W] cobox_aQ6 :: t_aCi ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCo :: [HTML]
                                ~ t_aCm [" a type equality [HTML]
                                                           ~
                                                           t_aCm " HTML3.hs:94:7-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCo :: [HTML]
                                 ~ t_aCm [" a type equality [HTML]
                                                            ~
                                                            t_aCm " HTML3.hs:94:7-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCo :: [HTML] ~ t_aCm [" a type equality [HTML]
                                                     ~
                                                     t_aCm " HTML3.hs:94:7-20] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aCm
can_eq_nc
  [W] cobox_aCo :: [HTML] ~ t_aCm
  [HTML]
  [HTML]
  t_aCm
  t_aCm
canEqTyVar
  t_aCm
  [HTML]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ7 :: t_aCm ~ [HTML]
setEvBind
  ev = cobox_aCo
  tm  = CO Sym cobox_aQ7
rewriteEqEvidence
  [W] cobox_aCo :: [HTML] ~ t_aCm
  t_aCm
  [HTML]
  Sym cobox_aQ7
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ7 :: t_aCm
                                 ~ [HTML] [" a type equality [HTML]
                                                             ~
                                                             t_aCm " HTML3.hs:94:7-20] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCm := [HTML]
  Coercion: t_aCm ~ [HTML]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCm := [HTML]
setEvBind
  ev = cobox_aQ7
  tm  = CO <[HTML]>_N
kickOutRewritable
  tv =  t_aCm
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
14[<C:0,F:0>] [W] cobox_aQ7 :: t_aCm ~ [HTML]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCp :: HTML ~ t_aCn [" a type equality HTML
                                                                ~
                                                                t_aCn " HTML3.hs:94:7-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCp :: HTML ~ t_aCn [" a type equality HTML
                                                                 ~
                                                                 t_aCn " HTML3.hs:94:7-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCp :: HTML ~ t_aCn [" a type equality HTML
                                                   ~
                                                   t_aCn " HTML3.hs:94:7-20] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCn
can_eq_nc
  [W] cobox_aCp :: HTML ~ t_aCn
  HTML
  HTML
  t_aCn
  t_aCn
canEqTyVar
  t_aCn
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ8 :: t_aCn ~ HTML
setEvBind
  ev = cobox_aCp
  tm  = CO Sym cobox_aQ8
rewriteEqEvidence
  [W] cobox_aCp :: HTML ~ t_aCn
  t_aCn
  HTML
  Sym cobox_aQ8
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ8 :: t_aCn ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aCn " HTML3.hs:94:7-20] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCn := HTML
  Coercion: t_aCn ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCn := HTML
setEvBind
  ev = cobox_aQ8
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
15[<C:0,F:0>] [W] cobox_aQ8 :: t_aCn ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCs :: [[HTML]]
                                ~ t_aCq [" a type equality [[HTML]]
                                                           ~
                                                           t_aCq " HTML3.hs:91:7-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCs :: [[HTML]]
                                 ~ t_aCq [" a type equality [[HTML]]
                                                            ~
                                                            t_aCq " HTML3.hs:91:7-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCs :: [[HTML]] ~ t_aCq [" a type equality [[HTML]]
                                                       ~
                                                       t_aCq " HTML3.hs:91:7-22] (CNonCanonical)
canEvNC:eq
  [[HTML]]
  t_aCq
can_eq_nc
  [W] cobox_aCs :: [[HTML]] ~ t_aCq
  [[HTML]]
  [[HTML]]
  t_aCq
  t_aCq
canEqTyVar
  t_aCq
  [[HTML]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQ9 :: t_aCq ~ [[HTML]]
setEvBind
  ev = cobox_aCs
  tm  = CO Sym cobox_aQ9
rewriteEqEvidence
  [W] cobox_aCs :: [[HTML]] ~ t_aCq
  t_aCq
  [[HTML]]
  Sym cobox_aQ9
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQ9 :: t_aCq
                                 ~ [[HTML]] [" a type equality [[HTML]]
                                                               ~
                                                               t_aCq " HTML3.hs:91:7-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCq := [[HTML]]
  Coercion: t_aCq ~ [[HTML]]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCq := [[HTML]]
setEvBind
  ev = cobox_aQ9
  tm  = CO <[[HTML]]>_N
kickOutRewritable
  tv =  t_aCq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
16[<C:0,F:0>] [W] cobox_aQ9 :: t_aCq
                               ~ [[HTML]]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCt :: HTML ~ t_aCr [" a type equality HTML
                                                                ~
                                                                t_aCr " HTML3.hs:91:7-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCt :: HTML ~ t_aCr [" a type equality HTML
                                                                 ~
                                                                 t_aCr " HTML3.hs:91:7-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCt :: HTML ~ t_aCr [" a type equality HTML
                                                   ~
                                                   t_aCr " HTML3.hs:91:7-22] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCr
can_eq_nc
  [W] cobox_aCt :: HTML ~ t_aCr
  HTML
  HTML
  t_aCr
  t_aCr
canEqTyVar
  t_aCr
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQa :: t_aCr ~ HTML
setEvBind
  ev = cobox_aCt
  tm  = CO Sym cobox_aQa
rewriteEqEvidence
  [W] cobox_aCt :: HTML ~ t_aCr
  t_aCr
  HTML
  Sym cobox_aQa
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQa :: t_aCr ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aCr " HTML3.hs:91:7-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCr := HTML
  Coercion: t_aCr ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCr := HTML
setEvBind
  ev = cobox_aQa
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
17[<C:0,F:0>] [W] cobox_aQa :: t_aCr ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCz :: (Int, Int, Int)
                                ~ t_aCx [" a type equality (Int, Int, Int)
                                                           ~
                                                           t_aCx " HTML3.hs:88:13-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCz :: (Int, Int, Int)
                                 ~ t_aCx [" a type equality (Int, Int, Int)
                                                            ~
                                                            t_aCx " HTML3.hs:88:13-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCz :: (Int, Int, Int) ~ t_aCx [" a type equality (Int,
                                                               Int,
                                                               Int)
                                                              ~
                                                              t_aCx " HTML3.hs:88:13-35] (CNonCanonical)
canEvNC:eq
  (Int, Int, Int)
  t_aCx
can_eq_nc
  [W] cobox_aCz :: (Int, Int, Int) ~ t_aCx
  (Int, Int, Int)
  (Int, Int, Int)
  t_aCx
  t_aCx
canEqTyVar
  t_aCx
  (Int, Int, Int)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQb :: t_aCx ~ (Int, Int, Int)
setEvBind
  ev = cobox_aCz
  tm  = CO Sym cobox_aQb
rewriteEqEvidence
  [W] cobox_aCz :: (Int, Int, Int) ~ t_aCx
  t_aCx
  (Int, Int, Int)
  Sym cobox_aQb
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQb :: t_aCx
                                 ~ (Int, Int, Int) [" a type equality (Int, Int, Int)
                                                                      ~
                                                                      t_aCx " HTML3.hs:88:13-35] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCx := (Int, Int, Int)
  Coercion: t_aCx ~ (Int, Int, Int)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCx := (Int, Int, Int)
setEvBind
  ev = cobox_aQb
  tm  = CO <(Int, Int, Int)>_N
kickOutRewritable
  tv =  t_aCx
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
18[<C:0,F:0>] [W] cobox_aQb :: t_aCx
                               ~ (Int, Int, Int): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCA :: HTML ~ t_aCy [" a type equality HTML
                                                                ~
                                                                t_aCy " HTML3.hs:88:13-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCA :: HTML ~ t_aCy [" a type equality HTML
                                                                 ~
                                                                 t_aCy " HTML3.hs:88:13-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCA :: HTML ~ t_aCy [" a type equality HTML
                                                   ~
                                                   t_aCy " HTML3.hs:88:13-35] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCy
can_eq_nc
  [W] cobox_aCA :: HTML ~ t_aCy
  HTML
  HTML
  t_aCy
  t_aCy
canEqTyVar
  t_aCy
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQc :: t_aCy ~ HTML
setEvBind
  ev = cobox_aCA
  tm  = CO Sym cobox_aQc
rewriteEqEvidence
  [W] cobox_aCA :: HTML ~ t_aCy
  t_aCy
  HTML
  Sym cobox_aQc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQc :: t_aCy ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aCy " HTML3.hs:88:13-35] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCy := HTML
  Coercion: t_aCy ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCy := HTML
setEvBind
  ev = cobox_aQc
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
19[<C:0,F:0>] [W] cobox_aQc :: t_aCy ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCD :: [(Int, Int, Int)]
                                ~ t_aCB [" a type equality [(Int, Int, Int)]
                                                           ~
                                                           t_aCB " HTML3.hs:85:12-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCD :: [(Int, Int, Int)]
                                 ~ t_aCB [" a type equality [(Int, Int, Int)]
                                                            ~
                                                            t_aCB " HTML3.hs:85:12-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCD :: [(Int, Int, Int)]
                   ~ t_aCB [" a type equality [(Int, Int, Int)]
                                              ~
                                              t_aCB " HTML3.hs:85:12-36] (CNonCanonical)
canEvNC:eq
  [(Int, Int, Int)]
  t_aCB
can_eq_nc
  [W] cobox_aCD :: [(Int, Int, Int)] ~ t_aCB
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  t_aCB
  t_aCB
canEqTyVar
  t_aCB
  [(Int, Int, Int)]
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aQd :: t_aCB ~ [(Int, Int, Int)]
setEvBind
  ev = cobox_aCD
  tm  = CO Sym cobox_aQd
rewriteEqEvidence
  [W] cobox_aCD :: [(Int, Int, Int)] ~ t_aCB
  t_aCB
  [(Int, Int, Int)]
  Sym cobox_aQd
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQd :: t_aCB
                                 ~ [(Int, Int, Int)] [" a type equality [(Int, Int, Int)]
                                                                        ~
                                                                        t_aCB " HTML3.hs:85:12-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCB := [(Int, Int, Int)]
  Coercion: t_aCB ~ [(Int, Int, Int)]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCB := [(Int, Int, Int)]
setEvBind
  ev = cobox_aQd
  tm  = CO <[(Int, Int, Int)]>_N
kickOutRewritable
  tv =  t_aCB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
20[<C:0,F:0>] [W] cobox_aQd :: t_aCB
                               ~ [(Int, Int, Int)]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCE :: HTML ~ t_aCC [" a type equality HTML
                                                                ~
                                                                t_aCC " HTML3.hs:85:12-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCE :: HTML ~ t_aCC [" a type equality HTML
                                                                 ~
                                                                 t_aCC " HTML3.hs:85:12-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCE :: HTML ~ t_aCC [" a type equality HTML
                                                   ~
                                                   t_aCC " HTML3.hs:85:12-36] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCC
can_eq_nc
  [W] cobox_aCE :: HTML ~ t_aCC
  HTML
  HTML
  t_aCC
  t_aCC
canEqTyVar
  t_aCC
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQe :: t_aCC ~ HTML
setEvBind
  ev = cobox_aCE
  tm  = CO Sym cobox_aQe
rewriteEqEvidence
  [W] cobox_aCE :: HTML ~ t_aCC
  t_aCC
  HTML
  Sym cobox_aQe
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQe :: t_aCC ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aCC " HTML3.hs:85:12-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCC := HTML
  Coercion: t_aCC ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCC := HTML
setEvBind
  ev = cobox_aQe
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
21[<C:0,F:0>] [W] cobox_aQe :: t_aCC ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCH :: [[(Int, Int, Int)]]
                                ~ t_aCF [" a type equality [[(Int, Int, Int)]]
                                                           ~
                                                           t_aCF " HTML3.hs:82:15-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCH :: [[(Int, Int, Int)]]
                                 ~ t_aCF [" a type equality [[(Int, Int, Int)]]
                                                            ~
                                                            t_aCF " HTML3.hs:82:15-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCH :: [[(Int, Int, Int)]]
                   ~ t_aCF [" a type equality [[(Int, Int, Int)]]
                                              ~
                                              t_aCF " HTML3.hs:82:15-41] (CNonCanonical)
canEvNC:eq
  [[(Int, Int, Int)]]
  t_aCF
can_eq_nc
  [W] cobox_aCH :: [[(Int, Int, Int)]] ~ t_aCF
  [[(Int, Int, Int)]]
  [[(Int, Int, Int)]]
  t_aCF
  t_aCF
canEqTyVar
  t_aCF
  [[(Int, Int, Int)]]
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aQf :: t_aCF ~ [[(Int, Int, Int)]]
setEvBind
  ev = cobox_aCH
  tm  = CO Sym cobox_aQf
rewriteEqEvidence
  [W] cobox_aCH :: [[(Int, Int, Int)]] ~ t_aCF
  t_aCF
  [[(Int, Int, Int)]]
  Sym cobox_aQf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQf :: t_aCF
                                 ~ [[(Int, Int, Int)]] [" a type equality [[(Int, Int, Int)]]
                                                                          ~
                                                                          t_aCF " HTML3.hs:82:15-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCF := [[(Int, Int, Int)]]
  Coercion: t_aCF ~ [[(Int, Int, Int)]]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCF := [[(Int, Int, Int)]]
setEvBind
  ev = cobox_aQf
  tm  = CO <[[(Int, Int, Int)]]>_N
kickOutRewritable
  tv =  t_aCF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
22[<C:0,F:0>] [W] cobox_aQf :: t_aCF
                               ~ [[(Int, Int, Int)]]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCI :: HTML ~ t_aCG [" a type equality HTML
                                                                ~
                                                                t_aCG " HTML3.hs:82:15-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCI :: HTML ~ t_aCG [" a type equality HTML
                                                                 ~
                                                                 t_aCG " HTML3.hs:82:15-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCI :: HTML ~ t_aCG [" a type equality HTML
                                                   ~
                                                   t_aCG " HTML3.hs:82:15-41] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCG
can_eq_nc
  [W] cobox_aCI :: HTML ~ t_aCG
  HTML
  HTML
  t_aCG
  t_aCG
canEqTyVar
  t_aCG
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQg :: t_aCG ~ HTML
setEvBind
  ev = cobox_aCI
  tm  = CO Sym cobox_aQg
rewriteEqEvidence
  [W] cobox_aCI :: HTML ~ t_aCG
  t_aCG
  HTML
  Sym cobox_aQg
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQg :: t_aCG ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aCG " HTML3.hs:82:15-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCG := HTML
  Coercion: t_aCG ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCG := HTML
setEvBind
  ev = cobox_aQg
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
23[<C:0,F:0>] [W] cobox_aQg :: t_aCG ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCL :: Int ~ t_aCJ [" a type equality Int
                                                               ~
                                                               t_aCJ " HTML3.hs:72:14-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCL :: Int ~ t_aCJ [" a type equality Int
                                                                ~
                                                                t_aCJ " HTML3.hs:72:14-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCL :: Int ~ t_aCJ [" a type equality Int
                                                  ~
                                                  t_aCJ " HTML3.hs:72:14-26] (CNonCanonical)
canEvNC:eq
  Int
  t_aCJ
can_eq_nc
  [W] cobox_aCL :: Int ~ t_aCJ
  Int
  Int
  t_aCJ
  t_aCJ
canEqTyVar
  t_aCJ
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQh :: t_aCJ ~ Int
setEvBind
  ev = cobox_aCL
  tm  = CO Sym cobox_aQh
rewriteEqEvidence
  [W] cobox_aCL :: Int ~ t_aCJ
  t_aCJ
  Int
  Sym cobox_aQh
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQh :: t_aCJ ~ Int [" a type equality Int
                                                                ~
                                                                t_aCJ " HTML3.hs:72:14-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCJ := Int
  Coercion: t_aCJ ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCJ := Int
setEvBind
  ev = cobox_aQh
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aCJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
24[<C:0,F:0>] [W] cobox_aQh :: t_aCJ ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCM :: String
                                ~ t_aCK [" a type equality String
                                                           ~
                                                           t_aCK " HTML3.hs:72:14-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCM :: String
                                 ~ t_aCK [" a type equality String
                                                            ~
                                                            t_aCK " HTML3.hs:72:14-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCM :: String ~ t_aCK [" a type equality String
                                                     ~
                                                     t_aCK " HTML3.hs:72:14-26] (CNonCanonical)
canEvNC:eq
  String
  t_aCK
can_eq_nc
  [W] cobox_aCM :: String ~ t_aCK
  String
  String
  t_aCK
  t_aCK
can_eq_nc
  [W] cobox_aCM :: String ~ t_aCK
  [Char]
  String
  t_aCK
  t_aCK
canEqTyVar
  t_aCK
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQi :: t_aCK ~ String
setEvBind
  ev = cobox_aCM
  tm  = CO Sym cobox_aQi
rewriteEqEvidence
  [W] cobox_aCM :: String ~ t_aCK
  t_aCK
  String
  Sym cobox_aQi
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQi :: t_aCK
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aCK " HTML3.hs:72:14-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCK := String
  Coercion: t_aCK ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCK := String
setEvBind
  ev = cobox_aQi
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aCK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
25[<C:0,F:0>] [W] cobox_aQi :: t_aCK ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCR :: Int ~ t_aCN [" a type equality Int
                                                               ~
                                                               t_aCN " HTML3.hs:68:10-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCR :: Int ~ t_aCN [" a type equality Int
                                                                ~
                                                                t_aCN " HTML3.hs:68:10-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCR :: Int ~ t_aCN [" a type equality Int
                                                  ~
                                                  t_aCN " HTML3.hs:68:10-36] (CNonCanonical)
canEvNC:eq
  Int
  t_aCN
can_eq_nc
  [W] cobox_aCR :: Int ~ t_aCN
  Int
  Int
  t_aCN
  t_aCN
canEqTyVar
  t_aCN
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQj :: t_aCN ~ Int
setEvBind
  ev = cobox_aCR
  tm  = CO Sym cobox_aQj
rewriteEqEvidence
  [W] cobox_aCR :: Int ~ t_aCN
  t_aCN
  Int
  Sym cobox_aQj
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQj :: t_aCN ~ Int [" a type equality Int
                                                                ~
                                                                t_aCN " HTML3.hs:68:10-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCN := Int
  Coercion: t_aCN ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCN := Int
setEvBind
  ev = cobox_aQj
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aCN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
26[<C:0,F:0>] [W] cobox_aQj :: t_aCN ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCS :: Int ~ t_aCO [" a type equality Int
                                                               ~
                                                               t_aCO " HTML3.hs:68:10-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCS :: Int ~ t_aCO [" a type equality Int
                                                                ~
                                                                t_aCO " HTML3.hs:68:10-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCS :: Int ~ t_aCO [" a type equality Int
                                                  ~
                                                  t_aCO " HTML3.hs:68:10-36] (CNonCanonical)
canEvNC:eq
  Int
  t_aCO
can_eq_nc
  [W] cobox_aCS :: Int ~ t_aCO
  Int
  Int
  t_aCO
  t_aCO
canEqTyVar
  t_aCO
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQk :: t_aCO ~ Int
setEvBind
  ev = cobox_aCS
  tm  = CO Sym cobox_aQk
rewriteEqEvidence
  [W] cobox_aCS :: Int ~ t_aCO
  t_aCO
  Int
  Sym cobox_aQk
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQk :: t_aCO ~ Int [" a type equality Int
                                                                ~
                                                                t_aCO " HTML3.hs:68:10-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCO := Int
  Coercion: t_aCO ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCO := Int
setEvBind
  ev = cobox_aQk
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aCO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
27[<C:0,F:0>] [W] cobox_aQk :: t_aCO ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCT :: Int ~ t_aCP [" a type equality Int
                                                               ~
                                                               t_aCP " HTML3.hs:68:10-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCT :: Int ~ t_aCP [" a type equality Int
                                                                ~
                                                                t_aCP " HTML3.hs:68:10-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCT :: Int ~ t_aCP [" a type equality Int
                                                  ~
                                                  t_aCP " HTML3.hs:68:10-36] (CNonCanonical)
canEvNC:eq
  Int
  t_aCP
can_eq_nc
  [W] cobox_aCT :: Int ~ t_aCP
  Int
  Int
  t_aCP
  t_aCP
canEqTyVar
  t_aCP
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQl :: t_aCP ~ Int
setEvBind
  ev = cobox_aCT
  tm  = CO Sym cobox_aQl
rewriteEqEvidence
  [W] cobox_aCT :: Int ~ t_aCP
  t_aCP
  Int
  Sym cobox_aQl
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQl :: t_aCP ~ Int [" a type equality Int
                                                                ~
                                                                t_aCP " HTML3.hs:68:10-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCP := Int
  Coercion: t_aCP ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCP := Int
setEvBind
  ev = cobox_aQl
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aCP
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
28[<C:0,F:0>] [W] cobox_aQl :: t_aCP ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCU :: String
                                ~ t_aCQ [" a type equality String
                                                           ~
                                                           t_aCQ " HTML3.hs:68:10-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCU :: String
                                 ~ t_aCQ [" a type equality String
                                                            ~
                                                            t_aCQ " HTML3.hs:68:10-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCU :: String ~ t_aCQ [" a type equality String
                                                     ~
                                                     t_aCQ " HTML3.hs:68:10-36] (CNonCanonical)
canEvNC:eq
  String
  t_aCQ
can_eq_nc
  [W] cobox_aCU :: String ~ t_aCQ
  String
  String
  t_aCQ
  t_aCQ
can_eq_nc
  [W] cobox_aCU :: String ~ t_aCQ
  [Char]
  String
  t_aCQ
  t_aCQ
canEqTyVar
  t_aCQ
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQm :: t_aCQ ~ String
setEvBind
  ev = cobox_aCU
  tm  = CO Sym cobox_aQm
rewriteEqEvidence
  [W] cobox_aCU :: String ~ t_aCQ
  t_aCQ
  String
  Sym cobox_aQm
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQm :: t_aCQ
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aCQ " HTML3.hs:68:10-36] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCQ := String
  Coercion: t_aCQ ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCQ := String
setEvBind
  ev = cobox_aQm
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aCQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
29[<C:0,F:0>] [W] cobox_aQm :: t_aCQ ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCX :: [(String, String)]
                                ~ t_aCV [" a type equality [(String, String)]
                                                           ~
                                                           t_aCV " HTML3.hs:60:13-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCX :: [(String, String)]
                                 ~ t_aCV [" a type equality [(String, String)]
                                                            ~
                                                            t_aCV " HTML3.hs:60:13-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCX :: [(String, String)]
                   ~ t_aCV [" a type equality [(String, String)]
                                              ~
                                              t_aCV " HTML3.hs:60:13-40] (CNonCanonical)
canEvNC:eq
  [(String, String)]
  t_aCV
can_eq_nc
  [W] cobox_aCX :: [(String, String)] ~ t_aCV
  [(String, String)]
  [(String, String)]
  t_aCV
  t_aCV
canEqTyVar
  t_aCV
  [(String, String)]
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aQn :: t_aCV ~ [(String, String)]
setEvBind
  ev = cobox_aCX
  tm  = CO Sym cobox_aQn
rewriteEqEvidence
  [W] cobox_aCX :: [(String, String)] ~ t_aCV
  t_aCV
  [(String, String)]
  Sym cobox_aQn
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQn :: t_aCV
                                 ~ [(String, String)] [" a type equality [(String, String)]
                                                                         ~
                                                                         t_aCV " HTML3.hs:60:13-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCV := [(String, String)]
  Coercion: t_aCV ~ [(String, String)]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCV := [(String, String)]
setEvBind
  ev = cobox_aQn
  tm  = CO <[(String, String)]>_N
kickOutRewritable
  tv =  t_aCV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
30[<C:0,F:0>] [W] cobox_aQn :: t_aCV
                               ~ [(String, String)]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCY :: String
                                ~ t_aCW [" a type equality String
                                                           ~
                                                           t_aCW " HTML3.hs:60:13-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCY :: String
                                 ~ t_aCW [" a type equality String
                                                            ~
                                                            t_aCW " HTML3.hs:60:13-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCY :: String ~ t_aCW [" a type equality String
                                                     ~
                                                     t_aCW " HTML3.hs:60:13-40] (CNonCanonical)
canEvNC:eq
  String
  t_aCW
can_eq_nc
  [W] cobox_aCY :: String ~ t_aCW
  String
  String
  t_aCW
  t_aCW
can_eq_nc
  [W] cobox_aCY :: String ~ t_aCW
  [Char]
  String
  t_aCW
  t_aCW
canEqTyVar
  t_aCW
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQo :: t_aCW ~ String
setEvBind
  ev = cobox_aCY
  tm  = CO Sym cobox_aQo
rewriteEqEvidence
  [W] cobox_aCY :: String ~ t_aCW
  t_aCW
  String
  Sym cobox_aQo
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQo :: t_aCW
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aCW " HTML3.hs:60:13-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCW := String
  Coercion: t_aCW ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCW := String
setEvBind
  ev = cobox_aQo
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aCW
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
31[<C:0,F:0>] [W] cobox_aQo :: t_aCW ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD1 :: HTML ~ t_aCZ [" a type equality HTML
                                                                ~
                                                                t_aCZ " HTML3.hs:55:9-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD1 :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:55:9-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD1 :: HTML ~ t_aCZ [" a type equality HTML
                                                   ~
                                                   t_aCZ " HTML3.hs:55:9-22] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCZ
can_eq_nc
  [W] cobox_aD1 :: HTML ~ t_aCZ
  HTML
  HTML
  t_aCZ
  t_aCZ
canEqTyVar
  t_aCZ
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQp :: t_aCZ ~ HTML
setEvBind
  ev = cobox_aD1
  tm  = CO Sym cobox_aQp
rewriteEqEvidence
  [W] cobox_aD1 :: HTML ~ t_aCZ
  t_aCZ
  HTML
  Sym cobox_aQp
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQp :: t_aCZ ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:55:9-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCZ := HTML
  Coercion: t_aCZ ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aCZ := HTML
setEvBind
  ev = cobox_aQp
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
32[<C:0,F:0>] [W] cobox_aQp :: t_aCZ ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD2 :: String
                                ~ t_aD0 [" a type equality String
                                                           ~
                                                           t_aD0 " HTML3.hs:55:9-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD2 :: String
                                 ~ t_aD0 [" a type equality String
                                                            ~
                                                            t_aD0 " HTML3.hs:55:9-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD2 :: String ~ t_aD0 [" a type equality String
                                                     ~
                                                     t_aD0 " HTML3.hs:55:9-22] (CNonCanonical)
canEvNC:eq
  String
  t_aD0
can_eq_nc
  [W] cobox_aD2 :: String ~ t_aD0
  String
  String
  t_aD0
  t_aD0
can_eq_nc
  [W] cobox_aD2 :: String ~ t_aD0
  [Char]
  String
  t_aD0
  t_aD0
canEqTyVar
  t_aD0
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQq :: t_aD0 ~ String
setEvBind
  ev = cobox_aD2
  tm  = CO Sym cobox_aQq
rewriteEqEvidence
  [W] cobox_aD2 :: String ~ t_aD0
  t_aD0
  String
  Sym cobox_aQq
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQq :: t_aD0
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aD0 " HTML3.hs:55:9-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aD0 := String
  Coercion: t_aD0 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aD0 := String
setEvBind
  ev = cobox_aQq
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aD0
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
33[<C:0,F:0>] [W] cobox_aQq :: t_aD0 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD5 :: HTML ~ t_aD3 [" a type equality HTML
                                                                ~
                                                                t_aD3 " HTML3.hs:47:11-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD5 :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:47:11-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD5 :: HTML ~ t_aD3 [" a type equality HTML
                                                   ~
                                                   t_aD3 " HTML3.hs:47:11-21] (CNonCanonical)
canEvNC:eq
  HTML
  t_aD3
can_eq_nc
  [W] cobox_aD5 :: HTML ~ t_aD3
  HTML
  HTML
  t_aD3
  t_aD3
canEqTyVar
  t_aD3
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQr :: t_aD3 ~ HTML
setEvBind
  ev = cobox_aD5
  tm  = CO Sym cobox_aQr
rewriteEqEvidence
  [W] cobox_aD5 :: HTML ~ t_aD3
  t_aD3
  HTML
  Sym cobox_aQr
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQr :: t_aD3 ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:47:11-21] (CTyEqCan)
Sneaky unification:
  Unifies: t_aD3 := HTML
  Coercion: t_aD3 ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aD3 := HTML
setEvBind
  ev = cobox_aQr
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aD3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
34[<C:0,F:0>] [W] cobox_aQr :: t_aD3 ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD6 :: Doc ~ t_aD4 [" a type equality Doc
                                                               ~
                                                               t_aD4 " HTML3.hs:47:11-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD6 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:47:11-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD6 :: Doc ~ t_aD4 [" a type equality Doc
                                                  ~
                                                  t_aD4 " HTML3.hs:47:11-21] (CNonCanonical)
canEvNC:eq
  Doc
  t_aD4
can_eq_nc
  [W] cobox_aD6 :: Doc ~ t_aD4
  Doc
  Doc
  t_aD4
  t_aD4
can_eq_nc
  [W] cobox_aD6 :: Doc ~ t_aD4
  [String]
  Doc
  t_aD4
  t_aD4
canEqTyVar
  t_aD4
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQs :: t_aD4 ~ Doc
setEvBind
  ev = cobox_aD6
  tm  = CO Sym cobox_aQs
rewriteEqEvidence
  [W] cobox_aD6 :: Doc ~ t_aD4
  t_aD4
  Doc
  Sym cobox_aQs
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQs :: t_aD4 ~ Doc [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:47:11-21] (CTyEqCan)
Sneaky unification:
  Unifies: t_aD4 := Doc
  Coercion: t_aD4 ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aD4 := Doc
setEvBind
  ev = cobox_aQs
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_aD4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
35[<C:0,F:0>] [W] cobox_aQs :: t_aD4 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD8 :: [Requirement]
                                ~ t_aD7 [" a type equality [Requirement]
                                                           ~
                                                           t_aD7 " HTML3.hs:41:11-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD8 :: [Requirement]
                                 ~ t_aD7 [" a type equality [Requirement]
                                                            ~
                                                            t_aD7 " HTML3.hs:41:11-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD8 :: [Requirement]
                   ~ t_aD7 [" a type equality [Requirement]
                                              ~
                                              t_aD7 " HTML3.hs:41:11-23] (CNonCanonical)
canEvNC:eq
  [Requirement]
  t_aD7
can_eq_nc
  [W] cobox_aD8 :: [Requirement] ~ t_aD7
  [Requirement]
  [Requirement]
  t_aD7
  t_aD7
canEqTyVar
  t_aD7
  [Requirement]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQt :: t_aD7 ~ [Requirement]
setEvBind
  ev = cobox_aD8
  tm  = CO Sym cobox_aQt
rewriteEqEvidence
  [W] cobox_aD8 :: [Requirement] ~ t_aD7
  t_aD7
  [Requirement]
  Sym cobox_aQt
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQt :: t_aD7
                                 ~ [Requirement] [" a type equality [Requirement]
                                                                    ~
                                                                    t_aD7 " HTML3.hs:41:11-23] (CTyEqCan)
Sneaky unification:
  Unifies: t_aD7 := [Requirement]
  Coercion: t_aD7 ~ [Requirement]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aD7 := [Requirement]
setEvBind
  ev = cobox_aQt
  tm  = CO <[Requirement]>_N
kickOutRewritable
  tv =  t_aD7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
36[<C:0,F:0>] [W] cobox_aQt :: t_aD7
                               ~ [Requirement]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDq :: [Maybe Requirement]
                                ~ t_aDo [" a type equality [Maybe Requirement]
                                                           ~
                                                           t_aDo " HTML3.hs:36:11-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDq :: [Maybe Requirement]
                                 ~ t_aDo [" a type equality [Maybe Requirement]
                                                            ~
                                                            t_aDo " HTML3.hs:36:11-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDq :: [Maybe Requirement]
                   ~ t_aDo [" a type equality [Maybe Requirement]
                                              ~
                                              t_aDo " HTML3.hs:36:11-50] (CNonCanonical)
canEvNC:eq
  [Maybe Requirement]
  t_aDo
can_eq_nc
  [W] cobox_aDq :: [Maybe Requirement] ~ t_aDo
  [Maybe Requirement]
  [Maybe Requirement]
  t_aDo
  t_aDo
canEqTyVar
  t_aDo
  [Maybe Requirement]
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aQu :: t_aDo ~ [Maybe Requirement]
setEvBind
  ev = cobox_aDq
  tm  = CO Sym cobox_aQu
rewriteEqEvidence
  [W] cobox_aDq :: [Maybe Requirement] ~ t_aDo
  t_aDo
  [Maybe Requirement]
  Sym cobox_aQu
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQu :: t_aDo
                                 ~ [Maybe Requirement] [" a type equality [Maybe Requirement]
                                                                          ~
                                                                          t_aDo " HTML3.hs:36:11-50] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDo := [Maybe Requirement]
  Coercion: t_aDo ~ [Maybe Requirement]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDo := [Maybe Requirement]
setEvBind
  ev = cobox_aQu
  tm  = CO <[Maybe Requirement]>_N
kickOutRewritable
  tv =  t_aDo
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
37[<C:0,F:0>] [W] cobox_aQu :: t_aDo
                               ~ [Maybe Requirement]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDr :: Maybe Requirement
                                ~ t_aDp [" a type equality Maybe Requirement
                                                           ~
                                                           t_aDp " HTML3.hs:36:11-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDr :: Maybe Requirement
                                 ~ t_aDp [" a type equality Maybe Requirement
                                                            ~
                                                            t_aDp " HTML3.hs:36:11-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDr :: Maybe Requirement ~ t_aDp [" a type equality Maybe
                                                                  Requirement
                                                                ~
                                                                t_aDp " HTML3.hs:36:11-50] (CNonCanonical)
canEvNC:eq
  Maybe Requirement
  t_aDp
can_eq_nc
  [W] cobox_aDr :: Maybe Requirement ~ t_aDp
  Maybe Requirement
  Maybe Requirement
  t_aDp
  t_aDp
canEqTyVar
  t_aDp
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aQv :: t_aDp ~ Maybe Requirement
setEvBind
  ev = cobox_aDr
  tm  = CO Sym cobox_aQv
rewriteEqEvidence
  [W] cobox_aDr :: Maybe Requirement ~ t_aDp
  t_aDp
  Maybe Requirement
  Sym cobox_aQv
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQv :: t_aDp
                                 ~ Maybe Requirement [" a type equality Maybe Requirement
                                                                        ~
                                                                        t_aDp " HTML3.hs:36:11-50] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDp := Maybe Requirement
  Coercion: t_aDp ~ Maybe Requirement
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDp := Maybe Requirement
setEvBind
  ev = cobox_aQv
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  t_aDp
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
38[<C:0,F:0>] [W] cobox_aQv :: t_aDp
                               ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDw :: [Requirement]
                                ~ t_aDt [" a type equality [Requirement]
                                                           ~
                                                           t_aDt " HTML3.hs:27:13-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDw :: [Requirement]
                                 ~ t_aDt [" a type equality [Requirement]
                                                            ~
                                                            t_aDt " HTML3.hs:27:13-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDw :: [Requirement]
                   ~ t_aDt [" a type equality [Requirement]
                                              ~
                                              t_aDt " HTML3.hs:27:13-54] (CNonCanonical)
canEvNC:eq
  [Requirement]
  t_aDt
can_eq_nc
  [W] cobox_aDw :: [Requirement] ~ t_aDt
  [Requirement]
  [Requirement]
  t_aDt
  t_aDt
canEqTyVar
  t_aDt
  [Requirement]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQw :: t_aDt ~ [Requirement]
setEvBind
  ev = cobox_aDw
  tm  = CO Sym cobox_aQw
rewriteEqEvidence
  [W] cobox_aDw :: [Requirement] ~ t_aDt
  t_aDt
  [Requirement]
  Sym cobox_aQw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQw :: t_aDt
                                 ~ [Requirement] [" a type equality [Requirement]
                                                                    ~
                                                                    t_aDt " HTML3.hs:27:13-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDt := [Requirement]
  Coercion: t_aDt ~ [Requirement]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDt := [Requirement]
setEvBind
  ev = cobox_aQw
  tm  = CO <[Requirement]>_N
kickOutRewritable
  tv =  t_aDt
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
39[<C:0,F:0>] [W] cobox_aQw :: t_aDt
                               ~ [Requirement]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDx :: HTML ~ t_aDu [" a type equality HTML
                                                                ~
                                                                t_aDu " HTML3.hs:27:13-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDx :: HTML ~ t_aDu [" a type equality HTML
                                                                 ~
                                                                 t_aDu " HTML3.hs:27:13-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDx :: HTML ~ t_aDu [" a type equality HTML
                                                   ~
                                                   t_aDu " HTML3.hs:27:13-54] (CNonCanonical)
canEvNC:eq
  HTML
  t_aDu
can_eq_nc
  [W] cobox_aDx :: HTML ~ t_aDu
  HTML
  HTML
  t_aDu
  t_aDu
canEqTyVar
  t_aDu
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQx :: t_aDu ~ HTML
setEvBind
  ev = cobox_aDx
  tm  = CO Sym cobox_aQx
rewriteEqEvidence
  [W] cobox_aDx :: HTML ~ t_aDu
  t_aDu
  HTML
  Sym cobox_aQx
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQx :: t_aDu ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aDu " HTML3.hs:27:13-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDu := HTML
  Coercion: t_aDu ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDu := HTML
setEvBind
  ev = cobox_aQx
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aDu
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
40[<C:0,F:0>] [W] cobox_aQx :: t_aDu ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDy :: Maybe Requirement
                                ~ t_aDv [" a type equality Maybe Requirement
                                                           ~
                                                           t_aDv " HTML3.hs:27:13-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDy :: Maybe Requirement
                                 ~ t_aDv [" a type equality Maybe Requirement
                                                            ~
                                                            t_aDv " HTML3.hs:27:13-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDy :: Maybe Requirement ~ t_aDv [" a type equality Maybe
                                                                  Requirement
                                                                ~
                                                                t_aDv " HTML3.hs:27:13-54] (CNonCanonical)
canEvNC:eq
  Maybe Requirement
  t_aDv
can_eq_nc
  [W] cobox_aDy :: Maybe Requirement ~ t_aDv
  Maybe Requirement
  Maybe Requirement
  t_aDv
  t_aDv
canEqTyVar
  t_aDv
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aQy :: t_aDv ~ Maybe Requirement
setEvBind
  ev = cobox_aDy
  tm  = CO Sym cobox_aQy
rewriteEqEvidence
  [W] cobox_aDy :: Maybe Requirement ~ t_aDv
  t_aDv
  Maybe Requirement
  Sym cobox_aQy
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQy :: t_aDv
                                 ~ Maybe Requirement [" a type equality Maybe Requirement
                                                                        ~
                                                                        t_aDv " HTML3.hs:27:13-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDv := Maybe Requirement
  Coercion: t_aDv ~ Maybe Requirement
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDv := Maybe Requirement
setEvBind
  ev = cobox_aQy
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  t_aDv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
41[<C:0,F:0>] [W] cobox_aQy :: t_aDv
                               ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDD :: HTML ~ t_aDA [" a type equality HTML
                                                                ~
                                                                t_aDA " HTML3.hs:20:13-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDD :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:20:13-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDD :: HTML ~ t_aDA [" a type equality HTML
                                                   ~
                                                   t_aDA " HTML3.hs:20:13-52] (CNonCanonical)
canEvNC:eq
  HTML
  t_aDA
can_eq_nc
  [W] cobox_aDD :: HTML ~ t_aDA
  HTML
  HTML
  t_aDA
  t_aDA
canEqTyVar
  t_aDA
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQz :: t_aDA ~ HTML
setEvBind
  ev = cobox_aDD
  tm  = CO Sym cobox_aQz
rewriteEqEvidence
  [W] cobox_aDD :: HTML ~ t_aDA
  t_aDA
  HTML
  Sym cobox_aQz
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQz :: t_aDA ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:20:13-52] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDA := HTML
  Coercion: t_aDA ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDA := HTML
setEvBind
  ev = cobox_aQz
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aDA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
42[<C:0,F:0>] [W] cobox_aQz :: t_aDA ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDE :: Requirement
                                ~ t_aDB [" a type equality Requirement
                                                           ~
                                                           t_aDB " HTML3.hs:20:13-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDE :: Requirement
                                 ~ t_aDB [" a type equality Requirement
                                                            ~
                                                            t_aDB " HTML3.hs:20:13-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDE :: Requirement ~ t_aDB [" a type equality Requirement
                                                          ~
                                                          t_aDB " HTML3.hs:20:13-52] (CNonCanonical)
canEvNC:eq
  Requirement
  t_aDB
can_eq_nc
  [W] cobox_aDE :: Requirement ~ t_aDB
  Requirement
  Requirement
  t_aDB
  t_aDB
can_eq_nc
  [W] cobox_aDE :: Requirement ~ t_aDB
  (String, String)
  Requirement
  t_aDB
  t_aDB
canEqTyVar
  t_aDB
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQA :: t_aDB ~ Requirement
setEvBind
  ev = cobox_aDE
  tm  = CO Sym cobox_aQA
rewriteEqEvidence
  [W] cobox_aDE :: Requirement ~ t_aDB
  t_aDB
  Requirement
  Sym cobox_aQA
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQA :: t_aDB
                                 ~ Requirement [" a type equality Requirement
                                                                  ~
                                                                  t_aDB " HTML3.hs:20:13-52] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDB := Requirement
  Coercion: t_aDB ~ Requirement
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDB := Requirement
setEvBind
  ev = cobox_aQA
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  t_aDB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
43[<C:0,F:0>] [W] cobox_aQA :: t_aDB
                               ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDF :: Maybe Requirement
                                ~ t_aDC [" a type equality Maybe Requirement
                                                           ~
                                                           t_aDC " HTML3.hs:20:13-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDF :: Maybe Requirement
                                 ~ t_aDC [" a type equality Maybe Requirement
                                                            ~
                                                            t_aDC " HTML3.hs:20:13-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDF :: Maybe Requirement ~ t_aDC [" a type equality Maybe
                                                                  Requirement
                                                                ~
                                                                t_aDC " HTML3.hs:20:13-52] (CNonCanonical)
canEvNC:eq
  Maybe Requirement
  t_aDC
can_eq_nc
  [W] cobox_aDF :: Maybe Requirement ~ t_aDC
  Maybe Requirement
  Maybe Requirement
  t_aDC
  t_aDC
canEqTyVar
  t_aDC
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aQB :: t_aDC ~ Maybe Requirement
setEvBind
  ev = cobox_aDF
  tm  = CO Sym cobox_aQB
rewriteEqEvidence
  [W] cobox_aDF :: Maybe Requirement ~ t_aDC
  t_aDC
  Maybe Requirement
  Sym cobox_aQB
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQB :: t_aDC
                                 ~ Maybe Requirement [" a type equality Maybe Requirement
                                                                        ~
                                                                        t_aDC " HTML3.hs:20:13-52] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDC := Maybe Requirement
  Coercion: t_aDC ~ Maybe Requirement
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDC := Maybe Requirement
setEvBind
  ev = cobox_aQB
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  t_aDC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
44[<C:0,F:0>] [W] cobox_aQB :: t_aDC
                               ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDH :: HTML ~ t_aDG [" a type equality HTML
                                                                ~
                                                                t_aDG " HTML3.hs:13:14-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDH :: HTML ~ t_aDG [" a type equality HTML
                                                                 ~
                                                                 t_aDG " HTML3.hs:13:14-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDH :: HTML ~ t_aDG [" a type equality HTML
                                                   ~
                                                   t_aDG " HTML3.hs:13:14-17] (CNonCanonical)
canEvNC:eq
  HTML
  t_aDG
can_eq_nc
  [W] cobox_aDH :: HTML ~ t_aDG
  HTML
  HTML
  t_aDG
  t_aDG
canEqTyVar
  t_aDG
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQC :: t_aDG ~ HTML
setEvBind
  ev = cobox_aDH
  tm  = CO Sym cobox_aQC
rewriteEqEvidence
  [W] cobox_aDH :: HTML ~ t_aDG
  t_aDG
  HTML
  Sym cobox_aQC
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQC :: t_aDG ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aDG " HTML3.hs:13:14-17] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDG := HTML
  Coercion: t_aDG ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDG := HTML
setEvBind
  ev = cobox_aQC
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aDG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
45[<C:0,F:0>] [W] cobox_aQC :: t_aDG ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDK :: Int ~ t_aDI [" a type equality Int
                                                               ~
                                                               t_aDI " HTML3.hs:7:8-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDK :: Int ~ t_aDI [" a type equality Int
                                                                ~
                                                                t_aDI " HTML3.hs:7:8-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDK :: Int ~ t_aDI [" a type equality Int
                                                  ~
                                                  t_aDI " HTML3.hs:7:8-18] (CNonCanonical)
canEvNC:eq
  Int
  t_aDI
can_eq_nc
  [W] cobox_aDK :: Int ~ t_aDI
  Int
  Int
  t_aDI
  t_aDI
canEqTyVar
  t_aDI
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQD :: t_aDI ~ Int
setEvBind
  ev = cobox_aDK
  tm  = CO Sym cobox_aQD
rewriteEqEvidence
  [W] cobox_aDK :: Int ~ t_aDI
  t_aDI
  Int
  Sym cobox_aQD
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQD :: t_aDI ~ Int [" a type equality Int
                                                                ~
                                                                t_aDI " HTML3.hs:7:8-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDI := Int
  Coercion: t_aDI ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDI := Int
setEvBind
  ev = cobox_aQD
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aDI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
46[<C:0,F:0>] [W] cobox_aQD :: t_aDI ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDL :: Char ~ t_aDJ [" a type equality Char
                                                                ~
                                                                t_aDJ " HTML3.hs:7:8-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDL :: Char ~ t_aDJ [" a type equality Char
                                                                 ~
                                                                 t_aDJ " HTML3.hs:7:8-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDL :: Char ~ t_aDJ [" a type equality Char
                                                   ~
                                                   t_aDJ " HTML3.hs:7:8-18] (CNonCanonical)
canEvNC:eq
  Char
  t_aDJ
can_eq_nc
  [W] cobox_aDL :: Char ~ t_aDJ
  Char
  Char
  t_aDJ
  t_aDJ
canEqTyVar
  t_aDJ
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQE :: t_aDJ ~ Char
setEvBind
  ev = cobox_aDL
  tm  = CO Sym cobox_aQE
rewriteEqEvidence
  [W] cobox_aDL :: Char ~ t_aDJ
  t_aDJ
  Char
  Sym cobox_aQE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQE :: t_aDJ ~ Char [" a type equality Char
                                                                 ~
                                                                 t_aDJ " HTML3.hs:7:8-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDJ := Char
  Coercion: t_aDJ ~ Char
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDJ := Char
setEvBind
  ev = cobox_aQE
  tm  = CO <Char>_N
kickOutRewritable
  tv =  t_aDJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
47[<C:0,F:0>] [W] cobox_aQE :: t_aDJ ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDO :: Int ~ t_aDM [" a type equality Int
                                                               ~
                                                               t_aDM " HTML3.hs:5:18-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDO :: Int ~ t_aDM [" a type equality Int
                                                                ~
                                                                t_aDM " HTML3.hs:5:18-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDO :: Int ~ t_aDM [" a type equality Int
                                                  ~
                                                  t_aDM " HTML3.hs:5:18-30] (CNonCanonical)
canEvNC:eq
  Int
  t_aDM
can_eq_nc
  [W] cobox_aDO :: Int ~ t_aDM
  Int
  Int
  t_aDM
  t_aDM
canEqTyVar
  t_aDM
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQF :: t_aDM ~ Int
setEvBind
  ev = cobox_aDO
  tm  = CO Sym cobox_aQF
rewriteEqEvidence
  [W] cobox_aDO :: Int ~ t_aDM
  t_aDM
  Int
  Sym cobox_aQF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQF :: t_aDM ~ Int [" a type equality Int
                                                                ~
                                                                t_aDM " HTML3.hs:5:18-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDM := Int
  Coercion: t_aDM ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDM := Int
setEvBind
  ev = cobox_aQF
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aDM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
48[<C:0,F:0>] [W] cobox_aQF :: t_aDM ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDP :: String
                                ~ t_aDN [" a type equality String
                                                           ~
                                                           t_aDN " HTML3.hs:5:18-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDP :: String
                                 ~ t_aDN [" a type equality String
                                                            ~
                                                            t_aDN " HTML3.hs:5:18-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDP :: String ~ t_aDN [" a type equality String
                                                     ~
                                                     t_aDN " HTML3.hs:5:18-30] (CNonCanonical)
canEvNC:eq
  String
  t_aDN
can_eq_nc
  [W] cobox_aDP :: String ~ t_aDN
  String
  String
  t_aDN
  t_aDN
can_eq_nc
  [W] cobox_aDP :: String ~ t_aDN
  [Char]
  String
  t_aDN
  t_aDN
canEqTyVar
  t_aDN
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQG :: t_aDN ~ String
setEvBind
  ev = cobox_aDP
  tm  = CO Sym cobox_aQG
rewriteEqEvidence
  [W] cobox_aDP :: String ~ t_aDN
  t_aDN
  String
  Sym cobox_aQG
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQG :: t_aDN
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aDN " HTML3.hs:5:18-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDN := String
  Coercion: t_aDN ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDN := String
setEvBind
  ev = cobox_aQG
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aDN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
49[<C:0,F:0>] [W] cobox_aQG :: t_aDN ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDT :: String
                                ~ t_aDQ [" a type equality String
                                                           ~
                                                           t_aDQ " HTML3.hs:3:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDT :: String
                                 ~ t_aDQ [" a type equality String
                                                            ~
                                                            t_aDQ " HTML3.hs:3:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDT :: String ~ t_aDQ [" a type equality String
                                                     ~
                                                     t_aDQ " HTML3.hs:3:18-41] (CNonCanonical)
canEvNC:eq
  String
  t_aDQ
can_eq_nc
  [W] cobox_aDT :: String ~ t_aDQ
  String
  String
  t_aDQ
  t_aDQ
can_eq_nc
  [W] cobox_aDT :: String ~ t_aDQ
  [Char]
  String
  t_aDQ
  t_aDQ
canEqTyVar
  t_aDQ
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQH :: t_aDQ ~ String
setEvBind
  ev = cobox_aDT
  tm  = CO Sym cobox_aQH
rewriteEqEvidence
  [W] cobox_aDT :: String ~ t_aDQ
  t_aDQ
  String
  Sym cobox_aQH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQH :: t_aDQ
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aDQ " HTML3.hs:3:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDQ := String
  Coercion: t_aDQ ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDQ := String
setEvBind
  ev = cobox_aQH
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aDQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
50[<C:0,F:0>] [W] cobox_aQH :: t_aDQ ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDU :: String
                                ~ t_aDR [" a type equality String
                                                           ~
                                                           t_aDR " HTML3.hs:3:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDU :: String
                                 ~ t_aDR [" a type equality String
                                                            ~
                                                            t_aDR " HTML3.hs:3:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDU :: String ~ t_aDR [" a type equality String
                                                     ~
                                                     t_aDR " HTML3.hs:3:18-41] (CNonCanonical)
canEvNC:eq
  String
  t_aDR
can_eq_nc
  [W] cobox_aDU :: String ~ t_aDR
  String
  String
  t_aDR
  t_aDR
can_eq_nc
  [W] cobox_aDU :: String ~ t_aDR
  [Char]
  String
  t_aDR
  t_aDR
canEqTyVar
  t_aDR
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQI :: t_aDR ~ String
setEvBind
  ev = cobox_aDU
  tm  = CO Sym cobox_aQI
rewriteEqEvidence
  [W] cobox_aDU :: String ~ t_aDR
  t_aDR
  String
  Sym cobox_aQI
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQI :: t_aDR
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aDR " HTML3.hs:3:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDR := String
  Coercion: t_aDR ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDR := String
setEvBind
  ev = cobox_aQI
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aDR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
51[<C:0,F:0>] [W] cobox_aQI :: t_aDR ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDV :: Bool ~ t_aDS [" a type equality Bool
                                                                ~
                                                                t_aDS " HTML3.hs:3:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDV :: Bool ~ t_aDS [" a type equality Bool
                                                                 ~
                                                                 t_aDS " HTML3.hs:3:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDV :: Bool ~ t_aDS [" a type equality Bool
                                                   ~
                                                   t_aDS " HTML3.hs:3:18-41] (CNonCanonical)
canEvNC:eq
  Bool
  t_aDS
can_eq_nc
  [W] cobox_aDV :: Bool ~ t_aDS
  Bool
  Bool
  t_aDS
  t_aDS
canEqTyVar
  t_aDS
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aQJ :: t_aDS ~ Bool
setEvBind
  ev = cobox_aDV
  tm  = CO Sym cobox_aQJ
rewriteEqEvidence
  [W] cobox_aDV :: Bool ~ t_aDS
  t_aDS
  Bool
  Sym cobox_aQJ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aQJ :: t_aDS ~ Bool [" a type equality Bool
                                                                 ~
                                                                 t_aDS " HTML3.hs:3:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aDS := Bool
  Coercion: t_aDS ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aDS := Bool
setEvBind
  ev = cobox_aQJ
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_aDS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
52[<C:0,F:0>] [W] cobox_aQJ :: t_aDS ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDX :: HTML ~ t_aC2 [" a type equality HTML
                                                                ~
                                                                t_aC2 " HTML3.hs:107:24-129] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDX :: HTML ~ t_aC2 [" a type equality HTML
                                                                 ~
                                                                 t_aC2 " HTML3.hs:107:24-129] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDX :: HTML ~ t_aC2 [" a type equality HTML
                                                   ~
                                                   t_aC2 " HTML3.hs:107:24-129] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC2
can_eq_nc
  [W] cobox_aDX :: HTML ~ t_aC2
  HTML
  HTML
  t_aC2
  t_aC2
canEqTyVar
  t_aC2
  HTML
  Is-swapped
Following bound tyvar t_aC2 = HTML
newWantedEvVar/cache miss [W] cobox_aQK :: HTML ~ HTML
setEvBind
  ev = cobox_aDX
  tm  = CO Sym cobox_aQK
rewriteEqEvidence
  [W] cobox_aDX :: HTML ~ t_aC2
  HTML
  HTML
  Sym cobox_aQK
canEqTyVar2
  t_aC2
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aQK :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aQK
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDY :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:107:34-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDY :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:107:34-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDY :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:107:34-39] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDY :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDY :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQL :: Char ~ Char
setEvBind
  ev = cobox_aDY
  tm  = CO [cobox_aQL]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQL :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQL
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDZ :: HTML ~ HTML [" a type equality HTML
                                                               ~
                                                               HTML " HTML3.hs:107:45-100] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDZ :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:45-100] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDZ :: HTML ~ HTML [" a type equality HTML
                                                  ~
                                                  HTML " HTML3.hs:107:45-100] (CNonCanonical)
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aDZ :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aDZ
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE0 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:107:55-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE0 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:107:55-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE0 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:107:55-60] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aE0 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aE0 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQM :: Char ~ Char
setEvBind
  ev = cobox_aE0
  tm  = CO [cobox_aQM]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQM :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQM
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE1 :: HTML ~ HTML [" a type equality HTML
                                                               ~
                                                               HTML " HTML3.hs:107:66-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE1 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:66-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE1 :: HTML ~ HTML [" a type equality HTML
                                                  ~
                                                  HTML " HTML3.hs:107:66-98] (CNonCanonical)
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aE1 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aE1
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE2 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:107:76-82] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE2 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:107:76-82] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE2 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:107:76-82] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aE2 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aE2 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQN :: Char ~ Char
setEvBind
  ev = cobox_aE2
  tm  = CO [cobox_aQN]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE3 :: HTML ~ HTML [" a type equality HTML
                                                               ~
                                                               HTML " HTML3.hs:107:88-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE3 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:88-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE3 :: HTML ~ HTML [" a type equality HTML
                                                  ~
                                                  HTML " HTML3.hs:107:88-97] (CNonCanonical)
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aE3 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aE3
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE4 :: t_aC0
                                ~ String [" a type equality t_aC0
                                                            ~
                                                            String " HTML3.hs:107:93-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE4 :: t_aC0
                                 ~ String [" a type equality t_aC0
                                                             ~
                                                             String " HTML3.hs:107:93-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE4 :: t_aC0 ~ String [" a type equality t_aC0
                                                     ~
                                                     String " HTML3.hs:107:93-97] (CNonCanonical)
canEvNC:eq
  t_aC0
  String
can_eq_nc
  [W] cobox_aE4 :: t_aC0 ~ String
  t_aC0
  t_aC0
  String
  String
can_eq_nc
  [W] cobox_aE4 :: t_aC0 ~ String
  t_aC0
  t_aC0
  [Char]
  String
canEqTyVar
  t_aC0
  [Char]
  Not-swapped
Following bound tyvar t_aC0 = String
canEqTyVar2
  t_aC0
  [Char]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aE4 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aE4 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQO :: Char ~ Char
setEvBind
  ev = cobox_aE4
  tm  = CO [cobox_aQO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE5 :: HTML ~ HTML [" a type equality HTML
                                                               ~
                                                               HTML " HTML3.hs:107:103-127] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE5 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:107:103-127] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE5 :: HTML ~ HTML [" a type equality HTML
                                                  ~
                                                  HTML " HTML3.hs:107:103-127] (CNonCanonical)
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aE5 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aE5
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE6 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:107:113-118] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE6 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:107:113-118] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE6 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:107:113-118] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aE6 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aE6 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQP :: Char ~ Char
setEvBind
  ev = cobox_aE6
  tm  = CO [cobox_aQP]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQP :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQP
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE7 :: t_aC1
                                ~ [HTML] [" a type equality t_aC1
                                                            ~
                                                            [HTML] " HTML3.hs:107:123-127] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE7 :: t_aC1
                                 ~ [HTML] [" a type equality t_aC1
                                                             ~
                                                             [HTML] " HTML3.hs:107:123-127] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE7 :: t_aC1 ~ [HTML] [" a type equality t_aC1
                                                     ~
                                                     [HTML] " HTML3.hs:107:123-127] (CNonCanonical)
canEvNC:eq
  t_aC1
  [HTML]
can_eq_nc
  [W] cobox_aE7 :: t_aC1 ~ [HTML]
  t_aC1
  t_aC1
  [HTML]
  [HTML]
canEqTyVar
  t_aC1
  [HTML]
  Not-swapped
Following bound tyvar t_aC1 = [HTML]
canEqTyVar2
  t_aC1
  [HTML]
  Not-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aE7 :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aQQ :: HTML ~ HTML
setEvBind
  ev = cobox_aE7
  tm  = CO [cobox_aQQ]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aQQ :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aQQ
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                ~
                                                                t_aC7 " HTML3.hs:104:15-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                 ~
                                                                 t_aC7 " HTML3.hs:104:15-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE9 :: HTML ~ t_aC7 [" a type equality HTML
                                                   ~
                                                   t_aC7 " HTML3.hs:104:15-25] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC7
can_eq_nc
  [W] cobox_aE9 :: HTML ~ t_aC7
  HTML
  HTML
  t_aC7
  t_aC7
canEqTyVar
  t_aC7
  HTML
  Is-swapped
Following bound tyvar t_aC7 = HTML
newWantedEvVar/cache miss [W] cobox_aQR :: HTML ~ HTML
setEvBind
  ev = cobox_aE9
  tm  = CO Sym cobox_aQR
rewriteEqEvidence
  [W] cobox_aE9 :: HTML ~ t_aC7
  HTML
  HTML
  Sym cobox_aQR
canEqTyVar2
  t_aC7
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aQR :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aQR
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEa :: t_aC6
                                ~ String [" a type equality t_aC6
                                                            ~
                                                            String " HTML3.hs:104:20-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEa :: t_aC6
                                 ~ String [" a type equality t_aC6
                                                             ~
                                                             String " HTML3.hs:104:20-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEa :: t_aC6 ~ String [" a type equality t_aC6
                                                     ~
                                                     String " HTML3.hs:104:20-25] (CNonCanonical)
canEvNC:eq
  t_aC6
  String
can_eq_nc
  [W] cobox_aEa :: t_aC6 ~ String
  t_aC6
  t_aC6
  String
  String
can_eq_nc
  [W] cobox_aEa :: t_aC6 ~ String
  t_aC6
  t_aC6
  [Char]
  String
canEqTyVar
  t_aC6
  [Char]
  Not-swapped
Following bound tyvar t_aC6 = String
canEqTyVar2
  t_aC6
  [Char]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEa :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aEa :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQS :: Char ~ Char
setEvBind
  ev = cobox_aEa
  tm  = CO [cobox_aQS]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQS :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQS
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEc :: HTML ~ t_aCc [" a type equality HTML
                                                                ~
                                                                t_aCc " HTML3.hs:101:20-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEc :: HTML ~ t_aCc [" a type equality HTML
                                                                 ~
                                                                 t_aCc " HTML3.hs:101:20-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEc :: HTML ~ t_aCc [" a type equality HTML
                                                   ~
                                                   t_aCc " HTML3.hs:101:20-47] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCc
can_eq_nc
  [W] cobox_aEc :: HTML ~ t_aCc
  HTML
  HTML
  t_aCc
  t_aCc
canEqTyVar
  t_aCc
  HTML
  Is-swapped
Following bound tyvar t_aCc = HTML
newWantedEvVar/cache miss [W] cobox_aQT :: HTML ~ HTML
setEvBind
  ev = cobox_aEc
  tm  = CO Sym cobox_aQT
rewriteEqEvidence
  [W] cobox_aEc :: HTML ~ t_aCc
  HTML
  HTML
  Sym cobox_aQT
canEqTyVar2
  t_aCc
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aQT :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aQT
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEd :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:101:30-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEd :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:101:30-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEd :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:101:30-35] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aEd :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aEd :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQU :: Char ~ Char
setEvBind
  ev = cobox_aEd
  tm  = CO [cobox_aQU]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEe :: t_aCa
                                ~ [Attribute] [" a type equality t_aCa
                                                                 ~
                                                                 [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEe :: t_aCa
                                 ~ [Attribute] [" a type equality t_aCa
                                                                  ~
                                                                  [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEe :: t_aCa ~ [Attribute] [" a type equality t_aCa
                                                          ~
                                                          [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
canEvNC:eq
  t_aCa
  [Attribute]
can_eq_nc
  [W] cobox_aEe :: t_aCa ~ [Attribute]
  t_aCa
  t_aCa
  [Attribute]
  [Attribute]
canEqTyVar
  t_aCa
  [Attribute]
  Not-swapped
Following bound tyvar t_aCa = [Attribute]
canEqTyVar2
  t_aCa
  [Attribute]
  Not-swapped
  [Attribute]
  <[Attribute]>_N
can_eq_nc
  [W] cobox_aEe :: [Attribute] ~ [Attribute]
  [Attribute]
  [Attribute]
  [Attribute]
  [Attribute]
newWantedEvVar/cache miss [W] cobox_aQV :: Attribute ~ Attribute
setEvBind
  ev = cobox_aEe
  tm  = CO [cobox_aQV]_N
canEvNC:eq
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aQV :: Attribute ~ Attribute
  Attribute
  Attribute
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aQV :: Attribute ~ Attribute
  (String, String)
  Attribute
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aQV :: Attribute ~ Attribute
  (String, String)
  Attribute
  (String, String)
  Attribute
newWantedEvVar/cache miss [W] cobox_aQW :: String ~ String
newWantedEvVar/cache miss [W] cobox_aQX :: String ~ String
setEvBind
  ev = cobox_aQV
  tm  = CO (cobox_aQW, cobox_aQX)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aQW :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aQW :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aQW :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQY :: Char ~ Char
setEvBind
  ev = cobox_aQW
  tm  = CO [cobox_aQY]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQY :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQY
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aQX :: String
                                ~ String [" a type equality t_aCa
                                                            ~
                                                            [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aQX :: String
                                 ~ String [" a type equality t_aCa
                                                             ~
                                                             [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aQX :: String ~ String [" a type equality t_aCa
                                                      ~
                                                      [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aQX :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aQX :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aQX :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aQZ :: Char ~ Char
setEvBind
  ev = cobox_aQX
  tm  = CO [cobox_aQZ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aQZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aQZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEf :: t_aCb
                                ~ [HTML] [" a type equality t_aCb
                                                            ~
                                                            [HTML] " HTML3.hs:101:43-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEf :: t_aCb
                                 ~ [HTML] [" a type equality t_aCb
                                                             ~
                                                             [HTML] " HTML3.hs:101:43-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEf :: t_aCb ~ [HTML] [" a type equality t_aCb
                                                     ~
                                                     [HTML] " HTML3.hs:101:43-47] (CNonCanonical)
canEvNC:eq
  t_aCb
  [HTML]
can_eq_nc
  [W] cobox_aEf :: t_aCb ~ [HTML]
  t_aCb
  t_aCb
  [HTML]
  [HTML]
canEqTyVar
  t_aCb
  [HTML]
  Not-swapped
Following bound tyvar t_aCb = [HTML]
canEqTyVar2
  t_aCb
  [HTML]
  Not-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aEf :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aR0 :: HTML ~ HTML
setEvBind
  ev = cobox_aEf
  tm  = CO [cobox_aR0]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aR0 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aR0
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEh :: HTML ~ t_aCn [" a type equality HTML
                                                                ~
                                                                t_aCn " HTML3.hs:95:12-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEh :: HTML ~ t_aCn [" a type equality HTML
                                                                 ~
                                                                 t_aCn " HTML3.hs:95:12-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEh :: HTML ~ t_aCn [" a type equality HTML
                                                   ~
                                                   t_aCn " HTML3.hs:95:12-34] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCn
can_eq_nc
  [W] cobox_aEh :: HTML ~ t_aCn
  HTML
  HTML
  t_aCn
  t_aCn
canEqTyVar
  t_aCn
  HTML
  Is-swapped
Following bound tyvar t_aCn = HTML
newWantedEvVar/cache miss [W] cobox_aR1 :: HTML ~ HTML
setEvBind
  ev = cobox_aEh
  tm  = CO Sym cobox_aR1
rewriteEqEvidence
  [W] cobox_aEh :: HTML ~ t_aCn
  HTML
  HTML
  Sym cobox_aR1
canEqTyVar2
  t_aCn
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aR1 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aR1
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEi :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:95:22-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEi :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:95:22-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEi :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:95:22-25] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aEi :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aEi :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aR2 :: Char ~ Char
setEvBind
  ev = cobox_aEi
  tm  = CO [cobox_aR2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aR2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aR2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEj :: t_aCm
                                ~ [HTML] [" a type equality t_aCm
                                                            ~
                                                            [HTML] " HTML3.hs:95:30-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEj :: t_aCm
                                 ~ [HTML] [" a type equality t_aCm
                                                             ~
                                                             [HTML] " HTML3.hs:95:30-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEj :: t_aCm ~ [HTML] [" a type equality t_aCm
                                                     ~
                                                     [HTML] " HTML3.hs:95:30-34] (CNonCanonical)
canEvNC:eq
  t_aCm
  [HTML]
can_eq_nc
  [W] cobox_aEj :: t_aCm ~ [HTML]
  t_aCm
  t_aCm
  [HTML]
  [HTML]
canEqTyVar
  t_aCm
  [HTML]
  Not-swapped
Following bound tyvar t_aCm = [HTML]
canEqTyVar2
  t_aCm
  [HTML]
  Not-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aEj :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aR3 :: HTML ~ HTML
setEvBind
  ev = cobox_aEj
  tm  = CO [cobox_aR3]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aR3 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aR3
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEl :: HTML ~ t_aCr [" a type equality HTML
                                                                ~
                                                                t_aCr " HTML3.hs:92:12-43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEl :: HTML ~ t_aCr [" a type equality HTML
                                                                 ~
                                                                 t_aCr " HTML3.hs:92:12-43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEl :: HTML ~ t_aCr [" a type equality HTML
                                                   ~
                                                   t_aCr " HTML3.hs:92:12-43] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCr
can_eq_nc
  [W] cobox_aEl :: HTML ~ t_aCr
  HTML
  HTML
  t_aCr
  t_aCr
canEqTyVar
  t_aCr
  HTML
  Is-swapped
Following bound tyvar t_aCr = HTML
newWantedEvVar/cache miss [W] cobox_aR4 :: HTML ~ HTML
setEvBind
  ev = cobox_aEl
  tm  = CO Sym cobox_aR4
rewriteEqEvidence
  [W] cobox_aEl :: HTML ~ t_aCr
  HTML
  HTML
  Sym cobox_aR4
canEqTyVar2
  t_aCr
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aR4 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aR4
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEm :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:92:22-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEm :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:92:22-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEm :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:92:22-25] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aEm :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aEm :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aR5 :: Char ~ Char
setEvBind
  ev = cobox_aEm
  tm  = CO [cobox_aR5]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aR5 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aR5
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEp :: [b_aEo]
                                ~ [HTML] [" a type equality [b_aEo]
                                                            ~
                                                            [HTML] " HTML3.hs:92:31-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEp :: [b_aEo]
                                 ~ [HTML] [" a type equality [b_aEo]
                                                             ~
                                                             [HTML] " HTML3.hs:92:31-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEp :: [b_aEo] ~ [HTML] [" a type equality [b_aEo]
                                                       ~
                                                       [HTML] " HTML3.hs:92:31-42] (CNonCanonical)
canEvNC:eq
  [b_aEo]
  [HTML]
can_eq_nc
  [W] cobox_aEp :: [b_aEo] ~ [HTML]
  [b_aEo]
  [b_aEo]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aR6 :: b_aEo ~ HTML
setEvBind
  ev = cobox_aEp
  tm  = CO [cobox_aR6]_N
canEvNC:eq
  b_aEo
  HTML
can_eq_nc
  [W] cobox_aR6 :: b_aEo ~ HTML
  b_aEo
  b_aEo
  HTML
  HTML
canEqTyVar
  b_aEo
  HTML
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aR6 :: b_aEo
                                 ~ HTML [" a type equality [b_aEo]
                                                           ~
                                                           [HTML] " HTML3.hs:92:31-42] (CTyEqCan)
Sneaky unification:
  Unifies: b_aEo := HTML
  Coercion: b_aEo ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aEo := HTML
setEvBind
  ev = cobox_aR6
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  b_aEo
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
76[<C:0,F:0>] [W] cobox_aR6 :: b_aEo ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEq :: (t_aCm -> t_aCn)
                                ~ (a_aEn -> b_aEo) [" a type equality t_aCm -> t_aCn
                                                                      ~
                                                                      a_aEn
                                                                      -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEq :: (t_aCm -> t_aCn)
                                 ~ (a_aEn -> b_aEo) [" a type equality t_aCm -> t_aCn
                                                                       ~
                                                                       a_aEn
                                                                       -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEq :: (t_aCm -> t_aCn)
                   ~ (a_aEn -> b_aEo) [" a type equality t_aCm -> t_aCn
                                                         ~
                                                         a_aEn
                                                         -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
canEvNC:eq
  t_aCm -> t_aCn
  a_aEn -> b_aEo
can_eq_nc
  [W] cobox_aEq :: (t_aCm -> t_aCn) ~ (a_aEn -> b_aEo)
  t_aCm -> t_aCn
  t_aCm -> t_aCn
  a_aEn -> b_aEo
  a_aEn -> b_aEo
newWantedEvVar/cache miss [W] cobox_aR7 :: t_aCm ~ a_aEn
newWantedEvVar/cache miss [W] cobox_aR8 :: t_aCn ~ b_aEo
setEvBind
  ev = cobox_aEq
  tm  = CO cobox_aR7 -> cobox_aR8
canEvNC:eq
  t_aCm
  a_aEn
can_eq_nc
  [W] cobox_aR7 :: t_aCm ~ a_aEn
  t_aCm
  t_aCm
  a_aEn
  a_aEn
canEqTyVar
  t_aCm
  a_aEn
  Not-swapped
Following bound tyvar t_aCm = [HTML]
canEqTyVar2
  t_aCm
  a_aEn
  Not-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aR7 :: [HTML] ~ a_aEn
  [HTML]
  [HTML]
  a_aEn
  a_aEn
canEqTyVar
  a_aEn
  [HTML]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aR9 :: a_aEn ~ [HTML]
setEvBind
  ev = cobox_aR7
  tm  = CO Sym cobox_aR9
rewriteEqEvidence
  [W] cobox_aR7 :: [HTML] ~ a_aEn
  a_aEn
  [HTML]
  Sym cobox_aR9
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aR9 :: a_aEn
                                 ~ [HTML] [" a type equality t_aCm -> t_aCn
                                                             ~
                                                             a_aEn
                                                             -> b_aEo " HTML3.hs:92:35-36] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEn := [HTML]
  Coercion: a_aEn ~ [HTML]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEn := [HTML]
setEvBind
  ev = cobox_aR9
  tm  = CO <[HTML]>_N
kickOutRewritable
  tv =  a_aEn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
77[<C:0,F:0>] [W] cobox_aR9 :: a_aEn ~ [HTML]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aR8 :: t_aCn
                                ~ b_aEo [" a type equality t_aCm -> t_aCn
                                                           ~
                                                           a_aEn
                                                           -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aR8 :: t_aCn
                                 ~ b_aEo [" a type equality t_aCm -> t_aCn
                                                            ~
                                                            a_aEn
                                                            -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aR8 :: t_aCn ~ b_aEo [" a type equality t_aCm -> t_aCn
                                                    ~
                                                    a_aEn
                                                    -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
canEvNC:eq
  t_aCn
  b_aEo
can_eq_nc
  [W] cobox_aR8 :: t_aCn ~ b_aEo
  t_aCn
  t_aCn
  b_aEo
  b_aEo
canEqTyVar
  t_aCn
  b_aEo
  Not-swapped
Following bound tyvar t_aCn = HTML
canEqTyVar2
  t_aCn
  b_aEo
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aR8 :: HTML ~ b_aEo
  HTML
  HTML
  b_aEo
  b_aEo
canEqTyVar
  b_aEo
  HTML
  Is-swapped
Following bound tyvar b_aEo = HTML
newWantedEvVar/cache miss [W] cobox_aRa :: HTML ~ HTML
setEvBind
  ev = cobox_aR8
  tm  = CO Sym cobox_aRa
rewriteEqEvidence
  [W] cobox_aR8 :: HTML ~ b_aEo
  HTML
  HTML
  Sym cobox_aRa
canEqTyVar2
  b_aEo
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aRa :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aRa
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEr :: t_aCq
                                ~ [a_aEn] [" a type equality t_aCq
                                                             ~
                                                             [a_aEn] " HTML3.hs:92:38-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEr :: t_aCq
                                 ~ [a_aEn] [" a type equality t_aCq
                                                              ~
                                                              [a_aEn] " HTML3.hs:92:38-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEr :: t_aCq ~ [a_aEn] [" a type equality t_aCq
                                                      ~
                                                      [a_aEn] " HTML3.hs:92:38-42] (CNonCanonical)
canEvNC:eq
  t_aCq
  [a_aEn]
can_eq_nc
  [W] cobox_aEr :: t_aCq ~ [a_aEn]
  t_aCq
  t_aCq
  [a_aEn]
  [a_aEn]
canEqTyVar
  t_aCq
  [a_aEn]
  Not-swapped
Following bound tyvar t_aCq = [[HTML]]
canEqTyVar2
  t_aCq
  [a_aEn]
  Not-swapped
  [[HTML]]
  <[[HTML]]>_N
can_eq_nc
  [W] cobox_aEr :: [[HTML]] ~ [a_aEn]
  [[HTML]]
  [[HTML]]
  [a_aEn]
  [a_aEn]
newWantedEvVar/cache miss [W] cobox_aRb :: [HTML] ~ a_aEn
setEvBind
  ev = cobox_aEr
  tm  = CO [cobox_aRb]_N
canEvNC:eq
  [HTML]
  a_aEn
can_eq_nc
  [W] cobox_aRb :: [HTML] ~ a_aEn
  [HTML]
  [HTML]
  a_aEn
  a_aEn
canEqTyVar
  a_aEn
  [HTML]
  Is-swapped
Following bound tyvar a_aEn = [HTML]
newWantedEvVar/cache miss [W] cobox_aRc :: [HTML] ~ [HTML]
setEvBind
  ev = cobox_aRb
  tm  = CO Sym cobox_aRc
rewriteEqEvidence
  [W] cobox_aRb :: [HTML] ~ a_aEn
  [HTML]
  [HTML]
  Sym cobox_aRc
canEqTyVar2
  a_aEn
  [HTML]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aRc :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aRd :: HTML ~ HTML
setEvBind
  ev = cobox_aRc
  tm  = CO [cobox_aRd]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aRd :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aRd
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEw :: t_aEt
                                ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                                      ~
                                                                      t_aEu
                                                                      -> t_aEv " HTML3.hs:62:41-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEw :: t_aEt
                                 ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                                       ~
                                                                       t_aEu
                                                                       -> t_aEv " HTML3.hs:62:41-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEw :: t_aEt ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                               ~
                                                               t_aEu
                                                               -> t_aEv " HTML3.hs:62:41-96] (CNonCanonical)
canEvNC:eq
  t_aEt
  t_aEu -> t_aEv
can_eq_nc
  [W] cobox_aEw :: t_aEt ~ (t_aEu -> t_aEv)
  t_aEt
  t_aEt
  t_aEu -> t_aEv
  t_aEu -> t_aEv
canEqTyVar
  t_aEt
  t_aEu -> t_aEv
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEw :: t_aEt
                                 ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                                       ~
                                                                       t_aEu
                                                                       -> t_aEv " HTML3.hs:62:41-96] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEt := t_aEu -> t_aEv
  Coercion: t_aEt ~ (t_aEu -> t_aEv)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aEt := t_aEu -> t_aEv
setEvBind
  ev = cobox_aEw
  tm  = CO <t_aEu -> t_aEv>_N
kickOutRewritable
  tv =  t_aEt
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
80[<C:0,F:0>] [W] cobox_aEw :: t_aEt
                               ~ (t_aEu -> t_aEv): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEy :: [a_aEx]
                                ~ t_aEv [" a type equality [a_aEx]
                                                           ~
                                                           t_aEv " HTML3.hs:62:56-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEy :: [a_aEx]
                                 ~ t_aEv [" a type equality [a_aEx]
                                                            ~
                                                            t_aEv " HTML3.hs:62:56-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEy :: [a_aEx] ~ t_aEv [" a type equality [a_aEx]
                                                      ~
                                                      t_aEv " HTML3.hs:62:56-96] (CNonCanonical)
canEvNC:eq
  [a_aEx]
  t_aEv
can_eq_nc
  [W] cobox_aEy :: [a_aEx] ~ t_aEv
  [a_aEx]
  [a_aEx]
  t_aEv
  t_aEv
canEqTyVar
  t_aEv
  [a_aEx]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aRe :: t_aEv ~ [a_aEx]
setEvBind
  ev = cobox_aEy
  tm  = CO Sym cobox_aRe
rewriteEqEvidence
  [W] cobox_aEy :: [a_aEx] ~ t_aEv
  t_aEv
  [a_aEx]
  Sym cobox_aRe
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRe :: t_aEv
                                 ~ [a_aEx] [" a type equality [a_aEx]
                                                              ~
                                                              t_aEv " HTML3.hs:62:56-96] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEv := [a_aEx]
  Coercion: t_aEv ~ [a_aEx]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aEv := [a_aEx]
setEvBind
  ev = cobox_aRe
  tm  = CO <[a_aEx]>_N
kickOutRewritable
  tv =  t_aEv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
81[<C:0,F:0>] [W] cobox_aRe :: t_aEv
                               ~ [a_aEx]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aED :: a_aEB
                                ~ [a_aEx] [" a type equality a_aEB
                                                             ~
                                                             [a_aEx] " HTML3.hs:62:56-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aED :: a_aEB
                                 ~ [a_aEx] [" a type equality a_aEB
                                                              ~
                                                              [a_aEx] " HTML3.hs:62:56-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aED :: a_aEB ~ [a_aEx] [" a type equality a_aEB
                                                      ~
                                                      [a_aEx] " HTML3.hs:62:56-62] (CNonCanonical)
canEvNC:eq
  a_aEB
  [a_aEx]
can_eq_nc
  [W] cobox_aED :: a_aEB ~ [a_aEx]
  a_aEB
  a_aEB
  [a_aEx]
  [a_aEx]
canEqTyVar
  a_aEB
  [a_aEx]
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aED :: a_aEB
                                 ~ [a_aEx] [" a type equality a_aEB
                                                              ~
                                                              [a_aEx] " HTML3.hs:62:56-62] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEB := [a_aEx]
  Coercion: a_aEB ~ [a_aEx]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEB := [a_aEx]
setEvBind
  ev = cobox_aED
  tm  = CO <[a_aEx]>_N
kickOutRewritable
  tv =  a_aEB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
82[<C:0,F:0>] [W] cobox_aED :: a_aEB
                               ~ [a_aEx]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEE :: t_aEu
                                ~ (a_aEB, b_aEC) [" a type equality t_aEu
                                                                    ~
                                                                    (a_aEB,
                                                                     b_aEC) " HTML3.hs:62:60-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEE :: t_aEu
                                 ~ (a_aEB, b_aEC) [" a type equality t_aEu
                                                                     ~
                                                                     (a_aEB,
                                                                      b_aEC) " HTML3.hs:62:60-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEE :: t_aEu ~ (a_aEB, b_aEC) [" a type equality t_aEu
                                                             ~
                                                             (a_aEB,
                                                              b_aEC) " HTML3.hs:62:60-62] (CNonCanonical)
canEvNC:eq
  t_aEu
  (a_aEB, b_aEC)
can_eq_nc
  [W] cobox_aEE :: t_aEu ~ (a_aEB, b_aEC)
  t_aEu
  t_aEu
  (a_aEB, b_aEC)
  (a_aEB, b_aEC)
canEqTyVar
  t_aEu
  (a_aEB, b_aEC)
  Not-swapped
Following bound tyvar a_aEB = [a_aEx]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEE :: t_aEu
                                 ~ ([a_aEx], b_aEC) [" a type equality t_aEu
                                                                       ~
                                                                       (a_aEB,
                                                                        b_aEC) " HTML3.hs:62:60-62] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEu := ([a_aEx], b_aEC)
  Coercion: t_aEu ~ ([a_aEx], b_aEC)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aEu := ([a_aEx], b_aEC)
setEvBind
  ev = cobox_aEE
  tm  = CO <([a_aEx], b_aEC)>_N
kickOutRewritable
  tv =  t_aEu
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
83[<C:0,F:0>] [W] cobox_aEE :: t_aEu
                               ~ ([a_aEx], b_aEC): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEG :: [a_aEF]
                                ~ [a_aEx] [" a type equality [a_aEF]
                                                             ~
                                                             [a_aEx] " HTML3.hs:62:67-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEG :: [a_aEF]
                                 ~ [a_aEx] [" a type equality [a_aEF]
                                                              ~
                                                              [a_aEx] " HTML3.hs:62:67-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEG :: [a_aEF] ~ [a_aEx] [" a type equality [a_aEF]
                                                        ~
                                                        [a_aEx] " HTML3.hs:62:67-96] (CNonCanonical)
canEvNC:eq
  [a_aEF]
  [a_aEx]
can_eq_nc
  [W] cobox_aEG :: [a_aEF] ~ [a_aEx]
  [a_aEF]
  [a_aEF]
  [a_aEx]
  [a_aEx]
newWantedEvVar/cache miss [W] cobox_aRf :: a_aEF ~ a_aEx
setEvBind
  ev = cobox_aEG
  tm  = CO [cobox_aRf]_N
canEvNC:eq
  a_aEF
  a_aEx
can_eq_nc
  [W] cobox_aRf :: a_aEF ~ a_aEx
  a_aEF
  a_aEF
  a_aEx
  a_aEx
canEqTyVar
  a_aEF
  a_aEx
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRf :: a_aEF
                                 ~ a_aEx [" a type equality [a_aEF]
                                                            ~
                                                            [a_aEx] " HTML3.hs:62:67-96] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEx := a_aEF
  Coercion: a_aEx ~ a_aEF
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEx := a_aEF
setEvBind
  ev = cobox_aRf
  tm  = CO <a_aEF>_N
kickOutRewritable
  tv =  a_aEx
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
84[<C:0,F:0>] [W] cobox_aRf :: a_aEF ~ a_aEx: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEH :: [Char]
                                ~ [a_aEF] [" a type equality [Char]
                                                             ~
                                                             [a_aEF] " HTML3.hs:62:67-69] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEH :: [Char]
                                 ~ [a_aEF] [" a type equality [Char]
                                                              ~
                                                              [a_aEF] " HTML3.hs:62:67-69] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEH :: [Char] ~ [a_aEF] [" a type equality [Char]
                                                       ~
                                                       [a_aEF] " HTML3.hs:62:67-69] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aEF]
can_eq_nc
  [W] cobox_aEH :: [Char] ~ [a_aEF]
  [Char]
  [Char]
  [a_aEF]
  [a_aEF]
newWantedEvVar/cache miss [W] cobox_aRg :: Char ~ a_aEF
setEvBind
  ev = cobox_aEH
  tm  = CO [cobox_aRg]_N
canEvNC:eq
  Char
  a_aEF
can_eq_nc
  [W] cobox_aRg :: Char ~ a_aEF
  Char
  Char
  a_aEF
  a_aEF
canEqTyVar
  a_aEF
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aRh :: a_aEF ~ Char
setEvBind
  ev = cobox_aRg
  tm  = CO Sym cobox_aRh
rewriteEqEvidence
  [W] cobox_aRg :: Char ~ a_aEF
  a_aEF
  Char
  Sym cobox_aRh
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRh :: a_aEF
                                 ~ Char [" a type equality [Char]
                                                           ~
                                                           [a_aEF] " HTML3.hs:62:67-69] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEF := Char
  Coercion: a_aEF ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEF := Char
setEvBind
  ev = cobox_aRh
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aEF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
85[<C:0,F:0>] [W] cobox_aRh :: a_aEF ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEJ :: [a_aEI]
                                ~ [a_aEF] [" a type equality [a_aEI]
                                                             ~
                                                             [a_aEF] " HTML3.hs:62:74-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEJ :: [a_aEI]
                                 ~ [a_aEF] [" a type equality [a_aEI]
                                                              ~
                                                              [a_aEF] " HTML3.hs:62:74-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEJ :: [a_aEI] ~ [a_aEF] [" a type equality [a_aEI]
                                                        ~
                                                        [a_aEF] " HTML3.hs:62:74-96] (CNonCanonical)
canEvNC:eq
  [a_aEI]
  [a_aEF]
can_eq_nc
  [W] cobox_aEJ :: [a_aEI] ~ [a_aEF]
  [a_aEI]
  [a_aEI]
  [a_aEF]
  [a_aEF]
newWantedEvVar/cache miss [W] cobox_aRi :: a_aEI ~ a_aEF
setEvBind
  ev = cobox_aEJ
  tm  = CO [cobox_aRi]_N
canEvNC:eq
  a_aEI
  a_aEF
can_eq_nc
  [W] cobox_aRi :: a_aEI ~ a_aEF
  a_aEI
  a_aEI
  a_aEF
  a_aEF
canEqTyVar
  a_aEI
  a_aEF
  Not-swapped
Following bound tyvar a_aEF = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRi :: a_aEI
                                 ~ Char [" a type equality [a_aEI]
                                                           ~
                                                           [a_aEF] " HTML3.hs:62:74-96] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEI := Char
  Coercion: a_aEI ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEI := Char
setEvBind
  ev = cobox_aRi
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aEI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
86[<C:0,F:0>] [W] cobox_aRi :: a_aEI ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEK :: [Char]
                                ~ [a_aEI] [" a type equality [Char]
                                                             ~
                                                             [a_aEI] " HTML3.hs:62:74-77] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEK :: [Char]
                                 ~ [a_aEI] [" a type equality [Char]
                                                              ~
                                                              [a_aEI] " HTML3.hs:62:74-77] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEK :: [Char] ~ [a_aEI] [" a type equality [Char]
                                                       ~
                                                       [a_aEI] " HTML3.hs:62:74-77] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aEI]
can_eq_nc
  [W] cobox_aEK :: [Char] ~ [a_aEI]
  [Char]
  [Char]
  [a_aEI]
  [a_aEI]
newWantedEvVar/cache miss [W] cobox_aRj :: Char ~ a_aEI
setEvBind
  ev = cobox_aEK
  tm  = CO [cobox_aRj]_N
canEvNC:eq
  Char
  a_aEI
can_eq_nc
  [W] cobox_aRj :: Char ~ a_aEI
  Char
  Char
  a_aEI
  a_aEI
canEqTyVar
  a_aEI
  Char
  Is-swapped
Following bound tyvar a_aEI = Char
newWantedEvVar/cache miss [W] cobox_aRk :: Char ~ Char
setEvBind
  ev = cobox_aRj
  tm  = CO Sym cobox_aRk
rewriteEqEvidence
  [W] cobox_aRj :: Char ~ a_aEI
  Char
  Char
  Sym cobox_aRk
canEqTyVar2
  a_aEI
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aRk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aRk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEM :: [a_aEL]
                                ~ [a_aEI] [" a type equality [a_aEL]
                                                             ~
                                                             [a_aEI] " HTML3.hs:62:82-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEM :: [a_aEL]
                                 ~ [a_aEI] [" a type equality [a_aEL]
                                                              ~
                                                              [a_aEI] " HTML3.hs:62:82-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEM :: [a_aEL] ~ [a_aEI] [" a type equality [a_aEL]
                                                        ~
                                                        [a_aEI] " HTML3.hs:62:82-96] (CNonCanonical)
canEvNC:eq
  [a_aEL]
  [a_aEI]
can_eq_nc
  [W] cobox_aEM :: [a_aEL] ~ [a_aEI]
  [a_aEL]
  [a_aEL]
  [a_aEI]
  [a_aEI]
newWantedEvVar/cache miss [W] cobox_aRl :: a_aEL ~ a_aEI
setEvBind
  ev = cobox_aEM
  tm  = CO [cobox_aRl]_N
canEvNC:eq
  a_aEL
  a_aEI
can_eq_nc
  [W] cobox_aRl :: a_aEL ~ a_aEI
  a_aEL
  a_aEL
  a_aEI
  a_aEI
canEqTyVar
  a_aEL
  a_aEI
  Not-swapped
Following bound tyvar a_aEI = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRl :: a_aEL
                                 ~ Char [" a type equality [a_aEL]
                                                           ~
                                                           [a_aEI] " HTML3.hs:62:82-96] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEL := Char
  Coercion: a_aEL ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEL := Char
setEvBind
  ev = cobox_aRl
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aEL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
88[<C:0,F:0>] [W] cobox_aRl :: a_aEL ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aER :: b_aEQ
                                ~ [a_aEL] [" a type equality b_aEQ
                                                             ~
                                                             [a_aEL] " HTML3.hs:62:82-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aER :: b_aEQ
                                 ~ [a_aEL] [" a type equality b_aEQ
                                                              ~
                                                              [a_aEL] " HTML3.hs:62:82-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aER :: b_aEQ ~ [a_aEL] [" a type equality b_aEQ
                                                      ~
                                                      [a_aEL] " HTML3.hs:62:82-88] (CNonCanonical)
canEvNC:eq
  b_aEQ
  [a_aEL]
can_eq_nc
  [W] cobox_aER :: b_aEQ ~ [a_aEL]
  b_aEQ
  b_aEQ
  [a_aEL]
  [a_aEL]
canEqTyVar
  b_aEQ
  [a_aEL]
  Not-swapped
Following bound tyvar a_aEL = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aER :: b_aEQ
                                 ~ [Char] [" a type equality b_aEQ
                                                             ~
                                                             [a_aEL] " HTML3.hs:62:82-88] (CTyEqCan)
Sneaky unification:
  Unifies: b_aEQ := [Char]
  Coercion: b_aEQ ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aEQ := [Char]
setEvBind
  ev = cobox_aER
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  b_aEQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
89[<C:0,F:0>] [W] cobox_aER :: b_aEQ ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aES :: t_aEu
                                ~ (a_aEP, b_aEQ) [" a type equality t_aEu
                                                                    ~
                                                                    (a_aEP,
                                                                     b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aES :: t_aEu
                                 ~ (a_aEP, b_aEQ) [" a type equality t_aEu
                                                                     ~
                                                                     (a_aEP,
                                                                      b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aES :: t_aEu ~ (a_aEP, b_aEQ) [" a type equality t_aEu
                                                             ~
                                                             (a_aEP,
                                                              b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
canEvNC:eq
  t_aEu
  (a_aEP, b_aEQ)
can_eq_nc
  [W] cobox_aES :: t_aEu ~ (a_aEP, b_aEQ)
  t_aEu
  t_aEu
  (a_aEP, b_aEQ)
  (a_aEP, b_aEQ)
canEqTyVar
  t_aEu
  (a_aEP, b_aEQ)
  Not-swapped
Following bound tyvar t_aEu = ([a_aEx], b_aEC)
canEqTyVar2
  t_aEu
  (a_aEP, b_aEQ)
  Not-swapped
  ([a_aEx], b_aEC)
  <([a_aEx], b_aEC)>_N
can_eq_nc
  [W] cobox_aES :: ([a_aEx], b_aEC) ~ (a_aEP, b_aEQ)
  ([a_aEx], b_aEC)
  ([a_aEx], b_aEC)
  (a_aEP, b_aEQ)
  (a_aEP, b_aEQ)
newWantedEvVar/cache miss [W] cobox_aRm :: [a_aEx] ~ a_aEP
newWantedEvVar/cache miss [W] cobox_aRn :: b_aEC ~ b_aEQ
setEvBind
  ev = cobox_aES
  tm  = CO (cobox_aRm, cobox_aRn)_N
canEvNC:eq
  [a_aEx]
  a_aEP
can_eq_nc
  [W] cobox_aRm :: [a_aEx] ~ a_aEP
  [a_aEx]
  [a_aEx]
  a_aEP
  a_aEP
canEqTyVar
  a_aEP
  [a_aEx]
  Is-swapped
Following bound tyvar a_aEx = a_aEF
Following bound tyvar a_aEF = Char
newWantedEvVar/cache miss [W] cobox_aRo :: a_aEP ~ [Char]
setEvBind
  ev = cobox_aRm
  tm  = CO Sym cobox_aRo
rewriteEqEvidence
  [W] cobox_aRm :: [a_aEx] ~ a_aEP
  a_aEP
  [Char]
  Sym cobox_aRo
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRo :: a_aEP
                                 ~ [Char] [" a type equality t_aEu
                                                             ~
                                                             (a_aEP,
                                                              b_aEQ) " HTML3.hs:62:86-88] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEP := [Char]
  Coercion: a_aEP ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEP := [Char]
setEvBind
  ev = cobox_aRo
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  a_aEP
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
90[<C:0,F:0>] [W] cobox_aRo :: a_aEP ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aRn :: b_aEC
                                ~ b_aEQ [" a type equality t_aEu
                                                           ~
                                                           (a_aEP,
                                                            b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aRn :: b_aEC
                                 ~ b_aEQ [" a type equality t_aEu
                                                            ~
                                                            (a_aEP,
                                                             b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aRn :: b_aEC ~ b_aEQ [" a type equality t_aEu
                                                    ~
                                                    (a_aEP,
                                                     b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
canEvNC:eq
  b_aEC
  b_aEQ
can_eq_nc
  [W] cobox_aRn :: b_aEC ~ b_aEQ
  b_aEC
  b_aEC
  b_aEQ
  b_aEQ
canEqTyVar
  b_aEC
  b_aEQ
  Not-swapped
Following bound tyvar b_aEQ = [Char]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRn :: b_aEC
                                 ~ [Char] [" a type equality t_aEu
                                                             ~
                                                             (a_aEP,
                                                              b_aEQ) " HTML3.hs:62:86-88] (CTyEqCan)
Sneaky unification:
  Unifies: b_aEC := [Char]
  Coercion: b_aEC ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aEC := [Char]
setEvBind
  ev = cobox_aRn
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  b_aEC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
91[<C:0,F:0>] [W] cobox_aRn :: b_aEC ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aET :: [Char]
                                ~ [a_aEL] [" a type equality [Char]
                                                             ~
                                                             [a_aEL] " HTML3.hs:62:93-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aET :: [Char]
                                 ~ [a_aEL] [" a type equality [Char]
                                                              ~
                                                              [a_aEL] " HTML3.hs:62:93-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aET :: [Char] ~ [a_aEL] [" a type equality [Char]
                                                       ~
                                                       [a_aEL] " HTML3.hs:62:93-96] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aEL]
can_eq_nc
  [W] cobox_aET :: [Char] ~ [a_aEL]
  [Char]
  [Char]
  [a_aEL]
  [a_aEL]
newWantedEvVar/cache miss [W] cobox_aRp :: Char ~ a_aEL
setEvBind
  ev = cobox_aET
  tm  = CO [cobox_aRp]_N
canEvNC:eq
  Char
  a_aEL
can_eq_nc
  [W] cobox_aRp :: Char ~ a_aEL
  Char
  Char
  a_aEL
  a_aEL
canEqTyVar
  a_aEL
  Char
  Is-swapped
Following bound tyvar a_aEL = Char
newWantedEvVar/cache miss [W] cobox_aRq :: Char ~ Char
setEvBind
  ev = cobox_aRp
  tm  = CO Sym cobox_aRq
rewriteEqEvidence
  [W] cobox_aRp :: Char ~ a_aEL
  Char
  Char
  Sym cobox_aRq
canEqTyVar2
  a_aEL
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aRq :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aRq
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEW :: [a_aEV]
                                ~ t_aCW [" a type equality [a_aEV]
                                                           ~
                                                           t_aCW " HTML3.hs:61:17-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEW :: [a_aEV]
                                 ~ t_aCW [" a type equality [a_aEV]
                                                            ~
                                                            t_aCW " HTML3.hs:61:17-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEW :: [a_aEV] ~ t_aCW [" a type equality [a_aEV]
                                                      ~
                                                      t_aCW " HTML3.hs:61:17-55] (CNonCanonical)
canEvNC:eq
  [a_aEV]
  t_aCW
can_eq_nc
  [W] cobox_aEW :: [a_aEV] ~ t_aCW
  [a_aEV]
  [a_aEV]
  t_aCW
  t_aCW
canEqTyVar
  t_aCW
  [a_aEV]
  Is-swapped
Following bound tyvar t_aCW = String
newWantedEvVar/cache miss [W] cobox_aRr :: String ~ [a_aEV]
setEvBind
  ev = cobox_aEW
  tm  = CO Sym cobox_aRr
rewriteEqEvidence
  [W] cobox_aEW :: [a_aEV] ~ t_aCW
  String
  [a_aEV]
  Sym cobox_aRr
canEqTyVar2
  t_aCW
  [a_aEV]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aRr :: String ~ [a_aEV]
  String
  String
  [a_aEV]
  [a_aEV]
can_eq_nc
  [W] cobox_aRr :: String ~ [a_aEV]
  [Char]
  String
  [a_aEV]
  [a_aEV]
newWantedEvVar/cache miss [W] cobox_aRs :: Char ~ a_aEV
setEvBind
  ev = cobox_aRr
  tm  = CO [cobox_aRs]_N
canEvNC:eq
  Char
  a_aEV
can_eq_nc
  [W] cobox_aRs :: Char ~ a_aEV
  Char
  Char
  a_aEV
  a_aEV
canEqTyVar
  a_aEV
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aRt :: a_aEV ~ Char
setEvBind
  ev = cobox_aRs
  tm  = CO Sym cobox_aRt
rewriteEqEvidence
  [W] cobox_aRs :: Char ~ a_aEV
  a_aEV
  Char
  Sym cobox_aRt
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRt :: a_aEV
                                 ~ Char [" a type equality [a_aEV]
                                                           ~
                                                           t_aCW " HTML3.hs:61:17-55] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEV := Char
  Coercion: a_aEV ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEV := Char
setEvBind
  ev = cobox_aRt
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aEV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
93[<C:0,F:0>] [W] cobox_aRt :: a_aEV ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEZ :: [b_aEY]
                                ~ [[a_aEV]] [" a type equality [b_aEY]
                                                               ~
                                                               [[a_aEV]] " HTML3.hs:61:25-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEZ :: [b_aEY]
                                 ~ [[a_aEV]] [" a type equality [b_aEY]
                                                                ~
                                                                [[a_aEV]] " HTML3.hs:61:25-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEZ :: [b_aEY] ~ [[a_aEV]] [" a type equality [b_aEY]
                                                          ~
                                                          [[a_aEV]] " HTML3.hs:61:25-54] (CNonCanonical)
canEvNC:eq
  [b_aEY]
  [[a_aEV]]
can_eq_nc
  [W] cobox_aEZ :: [b_aEY] ~ [[a_aEV]]
  [b_aEY]
  [b_aEY]
  [[a_aEV]]
  [[a_aEV]]
newWantedEvVar/cache miss [W] cobox_aRu :: b_aEY ~ [a_aEV]
setEvBind
  ev = cobox_aEZ
  tm  = CO [cobox_aRu]_N
canEvNC:eq
  b_aEY
  [a_aEV]
can_eq_nc
  [W] cobox_aRu :: b_aEY ~ [a_aEV]
  b_aEY
  b_aEY
  [a_aEV]
  [a_aEV]
canEqTyVar
  b_aEY
  [a_aEV]
  Not-swapped
Following bound tyvar a_aEV = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRu :: b_aEY
                                 ~ [Char] [" a type equality [b_aEY]
                                                             ~
                                                             [[a_aEV]] " HTML3.hs:61:25-54] (CTyEqCan)
Sneaky unification:
  Unifies: b_aEY := [Char]
  Coercion: b_aEY ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aEY := [Char]
setEvBind
  ev = cobox_aRu
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  b_aEY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
94[<C:0,F:0>] [W] cobox_aRu :: b_aEY ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF1 :: ([a_aF0] -> [a_aF0])
                                ~ (a_aEX -> b_aEY) [" a type equality [a_aF0] -> [a_aF0]
                                                                      ~
                                                                      a_aEX
                                                                      -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF1 :: ([a_aF0] -> [a_aF0])
                                 ~ (a_aEX -> b_aEY) [" a type equality [a_aF0] -> [a_aF0]
                                                                       ~
                                                                       a_aEX
                                                                       -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF1 :: ([a_aF0] -> [a_aF0])
                   ~ (a_aEX -> b_aEY) [" a type equality [a_aF0] -> [a_aF0]
                                                         ~
                                                         a_aEX
                                                         -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
canEvNC:eq
  [a_aF0] -> [a_aF0]
  a_aEX -> b_aEY
can_eq_nc
  [W] cobox_aF1 :: ([a_aF0] -> [a_aF0]) ~ (a_aEX -> b_aEY)
  [a_aF0] -> [a_aF0]
  [a_aF0] -> [a_aF0]
  a_aEX -> b_aEY
  a_aEX -> b_aEY
newWantedEvVar/cache miss [W] cobox_aRv :: [a_aF0] ~ a_aEX
newWantedEvVar/cache miss [W] cobox_aRw :: [a_aF0] ~ b_aEY
setEvBind
  ev = cobox_aF1
  tm  = CO cobox_aRv -> cobox_aRw
canEvNC:eq
  [a_aF0]
  a_aEX
can_eq_nc
  [W] cobox_aRv :: [a_aF0] ~ a_aEX
  [a_aF0]
  [a_aF0]
  a_aEX
  a_aEX
canEqTyVar
  a_aEX
  [a_aF0]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aRx :: a_aEX ~ [a_aF0]
setEvBind
  ev = cobox_aRv
  tm  = CO Sym cobox_aRx
rewriteEqEvidence
  [W] cobox_aRv :: [a_aF0] ~ a_aEX
  a_aEX
  [a_aF0]
  Sym cobox_aRx
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRx :: a_aEX
                                 ~ [a_aF0] [" a type equality [a_aF0] -> [a_aF0]
                                                              ~
                                                              a_aEX
                                                              -> b_aEY " HTML3.hs:61:30-33] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEX := [a_aF0]
  Coercion: a_aEX ~ [a_aF0]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aEX := [a_aF0]
setEvBind
  ev = cobox_aRx
  tm  = CO <[a_aF0]>_N
kickOutRewritable
  tv =  a_aEX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
95[<C:0,F:0>] [W] cobox_aRx :: a_aEX
                               ~ [a_aF0]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aRw :: [a_aF0]
                                ~ b_aEY [" a type equality [a_aF0] -> [a_aF0]
                                                           ~
                                                           a_aEX
                                                           -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aRw :: [a_aF0]
                                 ~ b_aEY [" a type equality [a_aF0] -> [a_aF0]
                                                            ~
                                                            a_aEX
                                                            -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aRw :: [a_aF0] ~ b_aEY [" a type equality [a_aF0]
                                                      -> [a_aF0]
                                                      ~
                                                      a_aEX
                                                      -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
canEvNC:eq
  [a_aF0]
  b_aEY
can_eq_nc
  [W] cobox_aRw :: [a_aF0] ~ b_aEY
  [a_aF0]
  [a_aF0]
  b_aEY
  b_aEY
canEqTyVar
  b_aEY
  [a_aF0]
  Is-swapped
Following bound tyvar b_aEY = [Char]
newWantedEvVar/cache miss [W] cobox_aRy :: [Char] ~ [a_aF0]
setEvBind
  ev = cobox_aRw
  tm  = CO Sym cobox_aRy
rewriteEqEvidence
  [W] cobox_aRw :: [a_aF0] ~ b_aEY
  [Char]
  [a_aF0]
  Sym cobox_aRy
canEqTyVar2
  b_aEY
  [a_aF0]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aRy :: [Char] ~ [a_aF0]
  [Char]
  [Char]
  [a_aF0]
  [a_aF0]
newWantedEvVar/cache miss [W] cobox_aRz :: Char ~ a_aF0
setEvBind
  ev = cobox_aRy
  tm  = CO [cobox_aRz]_N
canEvNC:eq
  Char
  a_aF0
can_eq_nc
  [W] cobox_aRz :: Char ~ a_aF0
  Char
  Char
  a_aF0
  a_aF0
canEqTyVar
  a_aF0
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aRA :: a_aF0 ~ Char
setEvBind
  ev = cobox_aRz
  tm  = CO Sym cobox_aRA
rewriteEqEvidence
  [W] cobox_aRz :: Char ~ a_aF0
  a_aF0
  Char
  Sym cobox_aRA
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRA :: a_aF0
                                 ~ Char [" a type equality [a_aF0] -> [a_aF0]
                                                           ~
                                                           a_aEX
                                                           -> b_aEY " HTML3.hs:61:30-33] (CTyEqCan)
Sneaky unification:
  Unifies: a_aF0 := Char
  Coercion: a_aF0 ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aF0 := Char
setEvBind
  ev = cobox_aRA
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aF0
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
96[<C:0,F:0>] [W] cobox_aRA :: a_aF0 ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF2 :: Char ~ a_aF0 [" a type equality Char
                                                                ~
                                                                a_aF0 " HTML3.hs:61:30-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF2 :: Char ~ a_aF0 [" a type equality Char
                                                                 ~
                                                                 a_aF0 " HTML3.hs:61:30-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF2 :: Char ~ a_aF0 [" a type equality Char
                                                   ~
                                                   a_aF0 " HTML3.hs:61:30-32] (CNonCanonical)
canEvNC:eq
  Char
  a_aF0
can_eq_nc
  [W] cobox_aF2 :: Char ~ a_aF0
  Char
  Char
  a_aF0
  a_aF0
canEqTyVar
  a_aF0
  Char
  Is-swapped
Following bound tyvar a_aF0 = Char
newWantedEvVar/cache miss [W] cobox_aRB :: Char ~ Char
setEvBind
  ev = cobox_aF2
  tm  = CO Sym cobox_aRB
rewriteEqEvidence
  [W] cobox_aF2 :: Char ~ a_aF0
  Char
  Char
  Sym cobox_aRB
canEqTyVar2
  a_aF0
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aRB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aRB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF5 :: [b_aF4]
                                ~ [a_aEX] [" a type equality [b_aF4]
                                                             ~
                                                             [a_aEX] " HTML3.hs:61:37-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF5 :: [b_aF4]
                                 ~ [a_aEX] [" a type equality [b_aF4]
                                                              ~
                                                              [a_aEX] " HTML3.hs:61:37-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF5 :: [b_aF4] ~ [a_aEX] [" a type equality [b_aF4]
                                                        ~
                                                        [a_aEX] " HTML3.hs:61:37-53] (CNonCanonical)
canEvNC:eq
  [b_aF4]
  [a_aEX]
can_eq_nc
  [W] cobox_aF5 :: [b_aF4] ~ [a_aEX]
  [b_aF4]
  [b_aF4]
  [a_aEX]
  [a_aEX]
newWantedEvVar/cache miss [W] cobox_aRC :: b_aF4 ~ a_aEX
setEvBind
  ev = cobox_aF5
  tm  = CO [cobox_aRC]_N
canEvNC:eq
  b_aF4
  a_aEX
can_eq_nc
  [W] cobox_aRC :: b_aF4 ~ a_aEX
  b_aF4
  b_aF4
  a_aEX
  a_aEX
canEqTyVar
  b_aF4
  a_aEX
  Not-swapped
Following bound tyvar a_aEX = [a_aF0]
Following bound tyvar a_aF0 = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRC :: b_aF4
                                 ~ [Char] [" a type equality [b_aF4]
                                                             ~
                                                             [a_aEX] " HTML3.hs:61:37-53] (CTyEqCan)
Sneaky unification:
  Unifies: b_aF4 := [Char]
  Coercion: b_aF4 ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aF4 := [Char]
setEvBind
  ev = cobox_aRC
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  b_aF4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
98[<C:0,F:0>] [W] cobox_aRC :: b_aF4 ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF6 :: t_aEt
                                ~ (a_aF3 -> b_aF4) [" a type equality t_aEt
                                                                      ~
                                                                      a_aF3
                                                                      -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF6 :: t_aEt
                                 ~ (a_aF3 -> b_aF4) [" a type equality t_aEt
                                                                       ~
                                                                       a_aF3
                                                                       -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF6 :: t_aEt ~ (a_aF3 -> b_aF4) [" a type equality t_aEt
                                                               ~
                                                               a_aF3
                                                               -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
canEvNC:eq
  t_aEt
  a_aF3 -> b_aF4
can_eq_nc
  [W] cobox_aF6 :: t_aEt ~ (a_aF3 -> b_aF4)
  t_aEt
  t_aEt
  a_aF3 -> b_aF4
  a_aF3 -> b_aF4
canEqTyVar
  t_aEt
  a_aF3 -> b_aF4
  Not-swapped
Following bound tyvar t_aEt = t_aEu -> t_aEv
canEqTyVar2
  t_aEt
  a_aF3 -> b_aF4
  Not-swapped
  t_aEu -> t_aEv
  <t_aEu -> t_aEv>_N
can_eq_nc
  [W] cobox_aF6 :: (t_aEu -> t_aEv) ~ (a_aF3 -> b_aF4)
  t_aEu -> t_aEv
  t_aEu -> t_aEv
  a_aF3 -> b_aF4
  a_aF3 -> b_aF4
newWantedEvVar/cache miss [W] cobox_aRD :: t_aEu ~ a_aF3
newWantedEvVar/cache miss [W] cobox_aRE :: t_aEv ~ b_aF4
setEvBind
  ev = cobox_aF6
  tm  = CO cobox_aRD -> cobox_aRE
canEvNC:eq
  t_aEu
  a_aF3
can_eq_nc
  [W] cobox_aRD :: t_aEu ~ a_aF3
  t_aEu
  t_aEu
  a_aF3
  a_aF3
canEqTyVar
  t_aEu
  a_aF3
  Not-swapped
Following bound tyvar t_aEu = ([a_aEx], b_aEC)
canEqTyVar2
  t_aEu
  a_aF3
  Not-swapped
  ([a_aEx], b_aEC)
  <([a_aEx], b_aEC)>_N
can_eq_nc
  [W] cobox_aRD :: ([a_aEx], b_aEC) ~ a_aF3
  ([a_aEx], b_aEC)
  ([a_aEx], b_aEC)
  a_aF3
  a_aF3
canEqTyVar
  a_aF3
  ([a_aEx], b_aEC)
  Is-swapped
Following bound tyvar a_aEx = a_aEF
Following bound tyvar a_aEF = Char
Following bound tyvar b_aEC = [Char]
newWantedEvVar/cache miss [W] cobox_aRF :: a_aF3 ~ ([Char], [Char])
setEvBind
  ev = cobox_aRD
  tm  = CO Sym cobox_aRF
rewriteEqEvidence
  [W] cobox_aRD :: ([a_aEx], b_aEC) ~ a_aF3
  a_aF3
  ([Char], [Char])
  Sym cobox_aRF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRF :: a_aF3
                                 ~ ([Char], [Char]) [" a type equality t_aEt
                                                                       ~
                                                                       a_aF3
                                                                       -> b_aF4 " HTML3.hs:61:41-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_aF3 := ([Char], [Char])
  Coercion: a_aF3 ~ ([Char], [Char])
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aF3 := ([Char], [Char])
setEvBind
  ev = cobox_aRF
  tm  = CO <([Char], [Char])>_N
kickOutRewritable
  tv =  a_aF3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
99[<C:0,F:0>] [W] cobox_aRF :: a_aF3
                               ~ ([Char], [Char]): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aRE :: t_aEv
                                ~ b_aF4 [" a type equality t_aEt
                                                           ~
                                                           a_aF3
                                                           -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aRE :: t_aEv
                                 ~ b_aF4 [" a type equality t_aEt
                                                            ~
                                                            a_aF3
                                                            -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aRE :: t_aEv ~ b_aF4 [" a type equality t_aEt
                                                    ~
                                                    a_aF3
                                                    -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
canEvNC:eq
  t_aEv
  b_aF4
can_eq_nc
  [W] cobox_aRE :: t_aEv ~ b_aF4
  t_aEv
  t_aEv
  b_aF4
  b_aF4
canEqTyVar
  t_aEv
  b_aF4
  Not-swapped
Following bound tyvar t_aEv = [a_aEx]
canEqTyVar2
  t_aEv
  b_aF4
  Not-swapped
  [a_aEx]
  <[a_aEx]>_N
can_eq_nc
  [W] cobox_aRE :: [a_aEx] ~ b_aF4
  [a_aEx]
  [a_aEx]
  b_aF4
  b_aF4
canEqTyVar
  b_aF4
  [a_aEx]
  Is-swapped
Following bound tyvar b_aF4 = [Char]
newWantedEvVar/cache miss [W] cobox_aRG :: [Char] ~ [a_aEx]
setEvBind
  ev = cobox_aRE
  tm  = CO Sym cobox_aRG
rewriteEqEvidence
  [W] cobox_aRE :: [a_aEx] ~ b_aF4
  [Char]
  [a_aEx]
  Sym cobox_aRG
canEqTyVar2
  b_aF4
  [a_aEx]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aRG :: [Char] ~ [a_aEx]
  [Char]
  [Char]
  [a_aEx]
  [a_aEx]
newWantedEvVar/cache miss [W] cobox_aRH :: Char ~ a_aEx
setEvBind
  ev = cobox_aRG
  tm  = CO [cobox_aRH]_N
canEvNC:eq
  Char
  a_aEx
can_eq_nc
  [W] cobox_aRH :: Char ~ a_aEx
  Char
  Char
  a_aEx
  a_aEx
canEqTyVar
  a_aEx
  Char
  Is-swapped
Following bound tyvar a_aEx = a_aEF
newWantedEvVar/cache miss [W] cobox_aRI :: a_aEF ~ Char
setEvBind
  ev = cobox_aRH
  tm  = CO Sym cobox_aRI
rewriteEqEvidence
  [W] cobox_aRH :: Char ~ a_aEx
  a_aEF
  Char
  Sym cobox_aRI
canEqTyVar2
  a_aEx
  Char
  Is-swapped
  a_aEF
  <a_aEF>_N
can_eq_nc
  [W] cobox_aRI :: a_aEF ~ Char
  a_aEF
  a_aEF
  Char
  Char
canEqTyVar
  a_aEF
  Char
  Not-swapped
Following bound tyvar a_aEF = Char
canEqTyVar2
  a_aEF
  Char
  Not-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aRI :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aRI
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF7 :: t_aCV
                                ~ [a_aF3] [" a type equality t_aCV
                                                             ~
                                                             [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF7 :: t_aCV
                                 ~ [a_aF3] [" a type equality t_aCV
                                                              ~
                                                              [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF7 :: t_aCV ~ [a_aF3] [" a type equality t_aCV
                                                      ~
                                                      [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
canEvNC:eq
  t_aCV
  [a_aF3]
can_eq_nc
  [W] cobox_aF7 :: t_aCV ~ [a_aF3]
  t_aCV
  t_aCV
  [a_aF3]
  [a_aF3]
canEqTyVar
  t_aCV
  [a_aF3]
  Not-swapped
Following bound tyvar t_aCV = [(String, String)]
canEqTyVar2
  t_aCV
  [a_aF3]
  Not-swapped
  [(String, String)]
  <[(String, String)]>_N
can_eq_nc
  [W] cobox_aF7 :: [(String, String)] ~ [a_aF3]
  [(String, String)]
  [(String, String)]
  [a_aF3]
  [a_aF3]
newWantedEvVar/cache miss [W] cobox_aRJ :: (String, String) ~ a_aF3
setEvBind
  ev = cobox_aF7
  tm  = CO [cobox_aRJ]_N
canEvNC:eq
  (String, String)
  a_aF3
can_eq_nc
  [W] cobox_aRJ :: (String, String) ~ a_aF3
  (String, String)
  (String, String)
  a_aF3
  a_aF3
canEqTyVar
  a_aF3
  (String, String)
  Is-swapped
Following bound tyvar a_aF3 = ([Char], [Char])
newWantedEvVar/cache miss
  [W] cobox_aRK :: ([Char], [Char]) ~ (String, String)
setEvBind
  ev = cobox_aRJ
  tm  = CO Sym cobox_aRK
rewriteEqEvidence
  [W] cobox_aRJ :: (String, String) ~ a_aF3
  ([Char], [Char])
  (String, String)
  Sym cobox_aRK
canEqTyVar2
  a_aF3
  (String, String)
  Is-swapped
  ([Char], [Char])
  <([Char], [Char])>_N
can_eq_nc
  [W] cobox_aRK :: ([Char], [Char]) ~ (String, String)
  ([Char], [Char])
  ([Char], [Char])
  (String, String)
  (String, String)
newWantedEvVar/cache miss [W] cobox_aRL :: [Char] ~ String
newWantedEvVar/cache miss [W] cobox_aRM :: [Char] ~ String
setEvBind
  ev = cobox_aRK
  tm  = CO (cobox_aRL, cobox_aRM)_N
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aRL :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aRL :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aRN :: Char ~ Char
setEvBind
  ev = cobox_aRL
  tm  = CO [cobox_aRN]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aRN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aRN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aRM :: [Char]
                                ~ String [" a type equality t_aCV
                                                            ~
                                                            [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aRM :: [Char]
                                 ~ String [" a type equality t_aCV
                                                             ~
                                                             [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aRM :: [Char] ~ String [" a type equality t_aCV
                                                      ~
                                                      [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aRM :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aRM :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aRO :: Char ~ Char
setEvBind
  ev = cobox_aRM
  tm  = CO [cobox_aRO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aRO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aRO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF9 :: HTML ~ t_aCZ [" a type equality HTML
                                                                ~
                                                                t_aCZ " HTML3.hs:56:7-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF9 :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:56:7-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF9 :: HTML ~ t_aCZ [" a type equality HTML
                                                   ~
                                                   t_aCZ " HTML3.hs:56:7-17] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCZ
can_eq_nc
  [W] cobox_aF9 :: HTML ~ t_aCZ
  HTML
  HTML
  t_aCZ
  t_aCZ
canEqTyVar
  t_aCZ
  HTML
  Is-swapped
Following bound tyvar t_aCZ = HTML
newWantedEvVar/cache miss [W] cobox_aRP :: HTML ~ HTML
setEvBind
  ev = cobox_aF9
  tm  = CO Sym cobox_aRP
rewriteEqEvidence
  [W] cobox_aF9 :: HTML ~ t_aCZ
  HTML
  HTML
  Sym cobox_aRP
canEqTyVar2
  t_aCZ
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aRP :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aRP
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFa :: String
                                ~ t_aD0 [" a type equality String
                                                           ~
                                                           t_aD0 " HTML3.hs:56:35-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFa :: String
                                 ~ t_aD0 [" a type equality String
                                                            ~
                                                            t_aD0 " HTML3.hs:56:35-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFa :: String ~ t_aD0 [" a type equality String
                                                     ~
                                                     t_aD0 " HTML3.hs:56:35-40] (CNonCanonical)
canEvNC:eq
  String
  t_aD0
can_eq_nc
  [W] cobox_aFa :: String ~ t_aD0
  String
  String
  t_aD0
  t_aD0
can_eq_nc
  [W] cobox_aFa :: String ~ t_aD0
  [Char]
  String
  t_aD0
  t_aD0
canEqTyVar
  t_aD0
  [Char]
  Is-swapped
Following bound tyvar t_aD0 = String
newWantedEvVar/cache miss [W] cobox_aRQ :: String ~ String
setEvBind
  ev = cobox_aFa
  tm  = CO Sym cobox_aRQ
rewriteEqEvidence
  [W] cobox_aFa :: String ~ t_aD0
  String
  String
  Sym cobox_aRQ
canEqTyVar2
  t_aD0
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aRQ :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aRQ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aRR :: Char ~ Char
setEvBind
  ev = cobox_aRQ
  tm  = CO [cobox_aRR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aRR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aRR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFb :: HTML ~ t_aCZ [" a type equality HTML
                                                                ~
                                                                t_aCZ " HTML3.hs:57:7-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFb :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:57:7-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFb :: HTML ~ t_aCZ [" a type equality HTML
                                                   ~
                                                   t_aCZ " HTML3.hs:57:7-24] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCZ
can_eq_nc
  [W] cobox_aFb :: HTML ~ t_aCZ
  HTML
  HTML
  t_aCZ
  t_aCZ
canEqTyVar
  t_aCZ
  HTML
  Is-swapped
Following bound tyvar t_aCZ = HTML
newWantedEvVar/cache miss [W] cobox_aRS :: HTML ~ HTML
setEvBind
  ev = cobox_aFb
  tm  = CO Sym cobox_aRS
rewriteEqEvidence
  [W] cobox_aFb :: HTML ~ t_aCZ
  HTML
  HTML
  Sym cobox_aRS
canEqTyVar2
  t_aCZ
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aRS :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aRS
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFd :: [a_aFc]
                                ~ t_aD0 [" a type equality [a_aFc]
                                                           ~
                                                           t_aD0 " HTML3.hs:57:35-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFd :: [a_aFc]
                                 ~ t_aD0 [" a type equality [a_aFc]
                                                            ~
                                                            t_aD0 " HTML3.hs:57:35-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFd :: [a_aFc] ~ t_aD0 [" a type equality [a_aFc]
                                                      ~
                                                      t_aD0 " HTML3.hs:57:35-68] (CNonCanonical)
canEvNC:eq
  [a_aFc]
  t_aD0
can_eq_nc
  [W] cobox_aFd :: [a_aFc] ~ t_aD0
  [a_aFc]
  [a_aFc]
  t_aD0
  t_aD0
canEqTyVar
  t_aD0
  [a_aFc]
  Is-swapped
Following bound tyvar t_aD0 = String
newWantedEvVar/cache miss [W] cobox_aRT :: String ~ [a_aFc]
setEvBind
  ev = cobox_aFd
  tm  = CO Sym cobox_aRT
rewriteEqEvidence
  [W] cobox_aFd :: [a_aFc] ~ t_aD0
  String
  [a_aFc]
  Sym cobox_aRT
canEqTyVar2
  t_aD0
  [a_aFc]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aRT :: String ~ [a_aFc]
  String
  String
  [a_aFc]
  [a_aFc]
can_eq_nc
  [W] cobox_aRT :: String ~ [a_aFc]
  [Char]
  String
  [a_aFc]
  [a_aFc]
newWantedEvVar/cache miss [W] cobox_aRU :: Char ~ a_aFc
setEvBind
  ev = cobox_aRT
  tm  = CO [cobox_aRU]_N
canEvNC:eq
  Char
  a_aFc
can_eq_nc
  [W] cobox_aRU :: Char ~ a_aFc
  Char
  Char
  a_aFc
  a_aFc
canEqTyVar
  a_aFc
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aRV :: a_aFc ~ Char
setEvBind
  ev = cobox_aRU
  tm  = CO Sym cobox_aRV
rewriteEqEvidence
  [W] cobox_aRU :: Char ~ a_aFc
  a_aFc
  Char
  Sym cobox_aRV
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRV :: a_aFc
                                 ~ Char [" a type equality [a_aFc]
                                                           ~
                                                           t_aD0 " HTML3.hs:57:35-68] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFc := Char
  Coercion: a_aFc ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFc := Char
setEvBind
  ev = cobox_aRV
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
106[<C:0,F:0>] [W] cobox_aRV :: a_aFc ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFe :: [Char]
                                ~ [a_aFc] [" a type equality [Char]
                                                             ~
                                                             [a_aFc] " HTML3.hs:57:35-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFe :: [Char]
                                 ~ [a_aFc] [" a type equality [Char]
                                                              ~
                                                              [a_aFc] " HTML3.hs:57:35-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFe :: [Char] ~ [a_aFc] [" a type equality [Char]
                                                       ~
                                                       [a_aFc] " HTML3.hs:57:35-37] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aFc]
can_eq_nc
  [W] cobox_aFe :: [Char] ~ [a_aFc]
  [Char]
  [Char]
  [a_aFc]
  [a_aFc]
newWantedEvVar/cache miss [W] cobox_aRW :: Char ~ a_aFc
setEvBind
  ev = cobox_aFe
  tm  = CO [cobox_aRW]_N
canEvNC:eq
  Char
  a_aFc
can_eq_nc
  [W] cobox_aRW :: Char ~ a_aFc
  Char
  Char
  a_aFc
  a_aFc
canEqTyVar
  a_aFc
  Char
  Is-swapped
Following bound tyvar a_aFc = Char
newWantedEvVar/cache miss [W] cobox_aRX :: Char ~ Char
setEvBind
  ev = cobox_aRW
  tm  = CO Sym cobox_aRX
rewriteEqEvidence
  [W] cobox_aRW :: Char ~ a_aFc
  Char
  Char
  Sym cobox_aRX
canEqTyVar2
  a_aFc
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aRX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aRX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFg :: [a_aFf]
                                ~ [a_aFc] [" a type equality [a_aFf]
                                                             ~
                                                             [a_aFc] " HTML3.hs:57:42-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFg :: [a_aFf]
                                 ~ [a_aFc] [" a type equality [a_aFf]
                                                              ~
                                                              [a_aFc] " HTML3.hs:57:42-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFg :: [a_aFf] ~ [a_aFc] [" a type equality [a_aFf]
                                                        ~
                                                        [a_aFc] " HTML3.hs:57:42-68] (CNonCanonical)
canEvNC:eq
  [a_aFf]
  [a_aFc]
can_eq_nc
  [W] cobox_aFg :: [a_aFf] ~ [a_aFc]
  [a_aFf]
  [a_aFf]
  [a_aFc]
  [a_aFc]
newWantedEvVar/cache miss [W] cobox_aRY :: a_aFf ~ a_aFc
setEvBind
  ev = cobox_aFg
  tm  = CO [cobox_aRY]_N
canEvNC:eq
  a_aFf
  a_aFc
can_eq_nc
  [W] cobox_aRY :: a_aFf ~ a_aFc
  a_aFf
  a_aFf
  a_aFc
  a_aFc
canEqTyVar
  a_aFf
  a_aFc
  Not-swapped
Following bound tyvar a_aFc = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aRY :: a_aFf
                                 ~ Char [" a type equality [a_aFf]
                                                           ~
                                                           [a_aFc] " HTML3.hs:57:42-68] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFf := Char
  Coercion: a_aFf ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFf := Char
setEvBind
  ev = cobox_aRY
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFf
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
108[<C:0,F:0>] [W] cobox_aRY :: a_aFf ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFh :: String
                                ~ [a_aFf] [" a type equality String
                                                             ~
                                                             [a_aFf] " HTML3.hs:57:42-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFh :: String
                                 ~ [a_aFf] [" a type equality String
                                                              ~
                                                              [a_aFf] " HTML3.hs:57:42-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFh :: String ~ [a_aFf] [" a type equality String
                                                       ~
                                                       [a_aFf] " HTML3.hs:57:42-44] (CNonCanonical)
canEvNC:eq
  String
  [a_aFf]
can_eq_nc
  [W] cobox_aFh :: String ~ [a_aFf]
  String
  String
  [a_aFf]
  [a_aFf]
can_eq_nc
  [W] cobox_aFh :: String ~ [a_aFf]
  [Char]
  String
  [a_aFf]
  [a_aFf]
newWantedEvVar/cache miss [W] cobox_aRZ :: Char ~ a_aFf
setEvBind
  ev = cobox_aFh
  tm  = CO [cobox_aRZ]_N
canEvNC:eq
  Char
  a_aFf
can_eq_nc
  [W] cobox_aRZ :: Char ~ a_aFf
  Char
  Char
  a_aFf
  a_aFf
canEqTyVar
  a_aFf
  Char
  Is-swapped
Following bound tyvar a_aFf = Char
newWantedEvVar/cache miss [W] cobox_aS0 :: Char ~ Char
setEvBind
  ev = cobox_aRZ
  tm  = CO Sym cobox_aS0
rewriteEqEvidence
  [W] cobox_aRZ :: Char ~ a_aFf
  Char
  Char
  Sym cobox_aS0
canEqTyVar2
  a_aFf
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aS0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aS0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFj :: [a_aFi]
                                ~ [a_aFf] [" a type equality [a_aFi]
                                                             ~
                                                             [a_aFf] " HTML3.hs:57:49-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFj :: [a_aFi]
                                 ~ [a_aFf] [" a type equality [a_aFi]
                                                              ~
                                                              [a_aFf] " HTML3.hs:57:49-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFj :: [a_aFi] ~ [a_aFf] [" a type equality [a_aFi]
                                                        ~
                                                        [a_aFf] " HTML3.hs:57:49-68] (CNonCanonical)
canEvNC:eq
  [a_aFi]
  [a_aFf]
can_eq_nc
  [W] cobox_aFj :: [a_aFi] ~ [a_aFf]
  [a_aFi]
  [a_aFi]
  [a_aFf]
  [a_aFf]
newWantedEvVar/cache miss [W] cobox_aS1 :: a_aFi ~ a_aFf
setEvBind
  ev = cobox_aFj
  tm  = CO [cobox_aS1]_N
canEvNC:eq
  a_aFi
  a_aFf
can_eq_nc
  [W] cobox_aS1 :: a_aFi ~ a_aFf
  a_aFi
  a_aFi
  a_aFf
  a_aFf
canEqTyVar
  a_aFi
  a_aFf
  Not-swapped
Following bound tyvar a_aFf = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aS1 :: a_aFi
                                 ~ Char [" a type equality [a_aFi]
                                                           ~
                                                           [a_aFf] " HTML3.hs:57:49-68] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFi := Char
  Coercion: a_aFi ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFi := Char
setEvBind
  ev = cobox_aS1
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFi
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
110[<C:0,F:0>] [W] cobox_aS1 :: a_aFi ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFk :: t_aCW
                                ~ [a_aFi] [" a type equality t_aCW
                                                             ~
                                                             [a_aFi] " HTML3.hs:57:49-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFk :: t_aCW
                                 ~ [a_aFi] [" a type equality t_aCW
                                                              ~
                                                              [a_aFi] " HTML3.hs:57:49-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFk :: t_aCW ~ [a_aFi] [" a type equality t_aCW
                                                      ~
                                                      [a_aFi] " HTML3.hs:57:49-61] (CNonCanonical)
canEvNC:eq
  t_aCW
  [a_aFi]
can_eq_nc
  [W] cobox_aFk :: t_aCW ~ [a_aFi]
  t_aCW
  t_aCW
  [a_aFi]
  [a_aFi]
canEqTyVar
  t_aCW
  [a_aFi]
  Not-swapped
Following bound tyvar t_aCW = String
canEqTyVar2
  t_aCW
  [a_aFi]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aFk :: String ~ [a_aFi]
  String
  String
  [a_aFi]
  [a_aFi]
can_eq_nc
  [W] cobox_aFk :: String ~ [a_aFi]
  [Char]
  String
  [a_aFi]
  [a_aFi]
newWantedEvVar/cache miss [W] cobox_aS2 :: Char ~ a_aFi
setEvBind
  ev = cobox_aFk
  tm  = CO [cobox_aS2]_N
canEvNC:eq
  Char
  a_aFi
can_eq_nc
  [W] cobox_aS2 :: Char ~ a_aFi
  Char
  Char
  a_aFi
  a_aFi
canEqTyVar
  a_aFi
  Char
  Is-swapped
Following bound tyvar a_aFi = Char
newWantedEvVar/cache miss [W] cobox_aS3 :: Char ~ Char
setEvBind
  ev = cobox_aS2
  tm  = CO Sym cobox_aS3
rewriteEqEvidence
  [W] cobox_aS2 :: Char ~ a_aFi
  Char
  Char
  Sym cobox_aS3
canEqTyVar2
  a_aFi
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aS3 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aS3
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFl :: [Attribute]
                                ~ t_aCV [" a type equality [Attribute]
                                                           ~
                                                           t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFl :: [Attribute]
                                 ~ t_aCV [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFl :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                          ~
                                                          t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
canEvNC:eq
  [Attribute]
  t_aCV
can_eq_nc
  [W] cobox_aFl :: [Attribute] ~ t_aCV
  [Attribute]
  [Attribute]
  t_aCV
  t_aCV
canEqTyVar
  t_aCV
  [Attribute]
  Is-swapped
Following bound tyvar t_aCV = [(String, String)]
newWantedEvVar/cache miss
  [W] cobox_aS4 :: [(String, String)] ~ [Attribute]
setEvBind
  ev = cobox_aFl
  tm  = CO Sym cobox_aS4
rewriteEqEvidence
  [W] cobox_aFl :: [Attribute] ~ t_aCV
  [(String, String)]
  [Attribute]
  Sym cobox_aS4
canEqTyVar2
  t_aCV
  [Attribute]
  Is-swapped
  [(String, String)]
  <[(String, String)]>_N
can_eq_nc
  [W] cobox_aS4 :: [(String, String)] ~ [Attribute]
  [(String, String)]
  [(String, String)]
  [Attribute]
  [Attribute]
newWantedEvVar/cache miss
  [W] cobox_aS5 :: (String, String) ~ Attribute
setEvBind
  ev = cobox_aS4
  tm  = CO [cobox_aS5]_N
canEvNC:eq
  (String, String)
  Attribute
can_eq_nc
  [W] cobox_aS5 :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aS5 :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  (String, String)
  Attribute
newWantedEvVar/cache miss [W] cobox_aS6 :: String ~ String
newWantedEvVar/cache miss [W] cobox_aS7 :: String ~ String
setEvBind
  ev = cobox_aS5
  tm  = CO (cobox_aS6, cobox_aS7)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aS6 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aS6 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aS6 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aS8 :: Char ~ Char
setEvBind
  ev = cobox_aS6
  tm  = CO [cobox_aS8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aS8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aS8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aS7 :: String
                                ~ String [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aS7 :: String
                                 ~ String [" a type equality [Attribute]
                                                             ~
                                                             t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aS7 :: String ~ String [" a type equality [Attribute]
                                                      ~
                                                      t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aS7 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aS7 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aS7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aS9 :: Char ~ Char
setEvBind
  ev = cobox_aS7
  tm  = CO [cobox_aS9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aS9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aS9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFm :: [Char]
                                ~ [a_aFi] [" a type equality [Char]
                                                             ~
                                                             [a_aFi] " HTML3.hs:57:66-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFm :: [Char]
                                 ~ [a_aFi] [" a type equality [Char]
                                                              ~
                                                              [a_aFi] " HTML3.hs:57:66-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFm :: [Char] ~ [a_aFi] [" a type equality [Char]
                                                       ~
                                                       [a_aFi] " HTML3.hs:57:66-68] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aFi]
can_eq_nc
  [W] cobox_aFm :: [Char] ~ [a_aFi]
  [Char]
  [Char]
  [a_aFi]
  [a_aFi]
newWantedEvVar/cache miss [W] cobox_aSa :: Char ~ a_aFi
setEvBind
  ev = cobox_aFm
  tm  = CO [cobox_aSa]_N
canEvNC:eq
  Char
  a_aFi
can_eq_nc
  [W] cobox_aSa :: Char ~ a_aFi
  Char
  Char
  a_aFi
  a_aFi
canEqTyVar
  a_aFi
  Char
  Is-swapped
Following bound tyvar a_aFi = Char
newWantedEvVar/cache miss [W] cobox_aSb :: Char ~ Char
setEvBind
  ev = cobox_aSa
  tm  = CO Sym cobox_aSb
rewriteEqEvidence
  [W] cobox_aSa :: Char ~ a_aFi
  Char
  Char
  Sym cobox_aSb
canEqTyVar2
  a_aFi
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSb :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSb
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFn :: HTML ~ t_aCZ [" a type equality HTML
                                                                ~
                                                                t_aCZ " HTML3.hs:58:7-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFn :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:58:7-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFn :: HTML ~ t_aCZ [" a type equality HTML
                                                   ~
                                                   t_aCZ " HTML3.hs:58:7-30] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCZ
can_eq_nc
  [W] cobox_aFn :: HTML ~ t_aCZ
  HTML
  HTML
  t_aCZ
  t_aCZ
canEqTyVar
  t_aCZ
  HTML
  Is-swapped
Following bound tyvar t_aCZ = HTML
newWantedEvVar/cache miss [W] cobox_aSc :: HTML ~ HTML
setEvBind
  ev = cobox_aFn
  tm  = CO Sym cobox_aSc
rewriteEqEvidence
  [W] cobox_aFn :: HTML ~ t_aCZ
  HTML
  HTML
  Sym cobox_aSc
canEqTyVar2
  t_aCZ
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aSc :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aSc
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFp :: [a_aFo]
                                ~ t_aD0 [" a type equality [a_aFo]
                                                           ~
                                                           t_aD0 " HTML3.hs:58:35-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFp :: [a_aFo]
                                 ~ t_aD0 [" a type equality [a_aFo]
                                                            ~
                                                            t_aD0 " HTML3.hs:58:35-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFp :: [a_aFo] ~ t_aD0 [" a type equality [a_aFo]
                                                      ~
                                                      t_aD0 " HTML3.hs:58:35-114] (CNonCanonical)
canEvNC:eq
  [a_aFo]
  t_aD0
can_eq_nc
  [W] cobox_aFp :: [a_aFo] ~ t_aD0
  [a_aFo]
  [a_aFo]
  t_aD0
  t_aD0
canEqTyVar
  t_aD0
  [a_aFo]
  Is-swapped
Following bound tyvar t_aD0 = String
newWantedEvVar/cache miss [W] cobox_aSd :: String ~ [a_aFo]
setEvBind
  ev = cobox_aFp
  tm  = CO Sym cobox_aSd
rewriteEqEvidence
  [W] cobox_aFp :: [a_aFo] ~ t_aD0
  String
  [a_aFo]
  Sym cobox_aSd
canEqTyVar2
  t_aD0
  [a_aFo]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aSd :: String ~ [a_aFo]
  String
  String
  [a_aFo]
  [a_aFo]
can_eq_nc
  [W] cobox_aSd :: String ~ [a_aFo]
  [Char]
  String
  [a_aFo]
  [a_aFo]
newWantedEvVar/cache miss [W] cobox_aSe :: Char ~ a_aFo
setEvBind
  ev = cobox_aSd
  tm  = CO [cobox_aSe]_N
canEvNC:eq
  Char
  a_aFo
can_eq_nc
  [W] cobox_aSe :: Char ~ a_aFo
  Char
  Char
  a_aFo
  a_aFo
canEqTyVar
  a_aFo
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aSf :: a_aFo ~ Char
setEvBind
  ev = cobox_aSe
  tm  = CO Sym cobox_aSf
rewriteEqEvidence
  [W] cobox_aSe :: Char ~ a_aFo
  a_aFo
  Char
  Sym cobox_aSf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSf :: a_aFo
                                 ~ Char [" a type equality [a_aFo]
                                                           ~
                                                           t_aD0 " HTML3.hs:58:35-114] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFo := Char
  Coercion: a_aFo ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFo := Char
setEvBind
  ev = cobox_aSf
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFo
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
116[<C:0,F:0>] [W] cobox_aSf :: a_aFo ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFq :: [Char]
                                ~ [a_aFo] [" a type equality [Char]
                                                             ~
                                                             [a_aFo] " HTML3.hs:58:35-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFq :: [Char]
                                 ~ [a_aFo] [" a type equality [Char]
                                                              ~
                                                              [a_aFo] " HTML3.hs:58:35-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFq :: [Char] ~ [a_aFo] [" a type equality [Char]
                                                       ~
                                                       [a_aFo] " HTML3.hs:58:35-37] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aFo]
can_eq_nc
  [W] cobox_aFq :: [Char] ~ [a_aFo]
  [Char]
  [Char]
  [a_aFo]
  [a_aFo]
newWantedEvVar/cache miss [W] cobox_aSg :: Char ~ a_aFo
setEvBind
  ev = cobox_aFq
  tm  = CO [cobox_aSg]_N
canEvNC:eq
  Char
  a_aFo
can_eq_nc
  [W] cobox_aSg :: Char ~ a_aFo
  Char
  Char
  a_aFo
  a_aFo
canEqTyVar
  a_aFo
  Char
  Is-swapped
Following bound tyvar a_aFo = Char
newWantedEvVar/cache miss [W] cobox_aSh :: Char ~ Char
setEvBind
  ev = cobox_aSg
  tm  = CO Sym cobox_aSh
rewriteEqEvidence
  [W] cobox_aSg :: Char ~ a_aFo
  Char
  Char
  Sym cobox_aSh
canEqTyVar2
  a_aFo
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFs :: [a_aFr]
                                ~ [a_aFo] [" a type equality [a_aFr]
                                                             ~
                                                             [a_aFo] " HTML3.hs:58:42-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFs :: [a_aFr]
                                 ~ [a_aFo] [" a type equality [a_aFr]
                                                              ~
                                                              [a_aFo] " HTML3.hs:58:42-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFs :: [a_aFr] ~ [a_aFo] [" a type equality [a_aFr]
                                                        ~
                                                        [a_aFo] " HTML3.hs:58:42-114] (CNonCanonical)
canEvNC:eq
  [a_aFr]
  [a_aFo]
can_eq_nc
  [W] cobox_aFs :: [a_aFr] ~ [a_aFo]
  [a_aFr]
  [a_aFr]
  [a_aFo]
  [a_aFo]
newWantedEvVar/cache miss [W] cobox_aSi :: a_aFr ~ a_aFo
setEvBind
  ev = cobox_aFs
  tm  = CO [cobox_aSi]_N
canEvNC:eq
  a_aFr
  a_aFo
can_eq_nc
  [W] cobox_aSi :: a_aFr ~ a_aFo
  a_aFr
  a_aFr
  a_aFo
  a_aFo
canEqTyVar
  a_aFr
  a_aFo
  Not-swapped
Following bound tyvar a_aFo = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSi :: a_aFr
                                 ~ Char [" a type equality [a_aFr]
                                                           ~
                                                           [a_aFo] " HTML3.hs:58:42-114] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFr := Char
  Coercion: a_aFr ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFr := Char
setEvBind
  ev = cobox_aSi
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
118[<C:0,F:0>] [W] cobox_aSi :: a_aFr ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFt :: String
                                ~ [a_aFr] [" a type equality String
                                                             ~
                                                             [a_aFr] " HTML3.hs:58:42-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFt :: String
                                 ~ [a_aFr] [" a type equality String
                                                              ~
                                                              [a_aFr] " HTML3.hs:58:42-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFt :: String ~ [a_aFr] [" a type equality String
                                                       ~
                                                       [a_aFr] " HTML3.hs:58:42-44] (CNonCanonical)
canEvNC:eq
  String
  [a_aFr]
can_eq_nc
  [W] cobox_aFt :: String ~ [a_aFr]
  String
  String
  [a_aFr]
  [a_aFr]
can_eq_nc
  [W] cobox_aFt :: String ~ [a_aFr]
  [Char]
  String
  [a_aFr]
  [a_aFr]
newWantedEvVar/cache miss [W] cobox_aSj :: Char ~ a_aFr
setEvBind
  ev = cobox_aFt
  tm  = CO [cobox_aSj]_N
canEvNC:eq
  Char
  a_aFr
can_eq_nc
  [W] cobox_aSj :: Char ~ a_aFr
  Char
  Char
  a_aFr
  a_aFr
canEqTyVar
  a_aFr
  Char
  Is-swapped
Following bound tyvar a_aFr = Char
newWantedEvVar/cache miss [W] cobox_aSk :: Char ~ Char
setEvBind
  ev = cobox_aSj
  tm  = CO Sym cobox_aSk
rewriteEqEvidence
  [W] cobox_aSj :: Char ~ a_aFr
  Char
  Char
  Sym cobox_aSk
canEqTyVar2
  a_aFr
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFv :: [a_aFu]
                                ~ [a_aFr] [" a type equality [a_aFu]
                                                             ~
                                                             [a_aFr] " HTML3.hs:58:49-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFv :: [a_aFu]
                                 ~ [a_aFr] [" a type equality [a_aFu]
                                                              ~
                                                              [a_aFr] " HTML3.hs:58:49-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFv :: [a_aFu] ~ [a_aFr] [" a type equality [a_aFu]
                                                        ~
                                                        [a_aFr] " HTML3.hs:58:49-114] (CNonCanonical)
canEvNC:eq
  [a_aFu]
  [a_aFr]
can_eq_nc
  [W] cobox_aFv :: [a_aFu] ~ [a_aFr]
  [a_aFu]
  [a_aFu]
  [a_aFr]
  [a_aFr]
newWantedEvVar/cache miss [W] cobox_aSl :: a_aFu ~ a_aFr
setEvBind
  ev = cobox_aFv
  tm  = CO [cobox_aSl]_N
canEvNC:eq
  a_aFu
  a_aFr
can_eq_nc
  [W] cobox_aSl :: a_aFu ~ a_aFr
  a_aFu
  a_aFu
  a_aFr
  a_aFr
canEqTyVar
  a_aFu
  a_aFr
  Not-swapped
Following bound tyvar a_aFr = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSl :: a_aFu
                                 ~ Char [" a type equality [a_aFu]
                                                           ~
                                                           [a_aFr] " HTML3.hs:58:49-114] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFu := Char
  Coercion: a_aFu ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFu := Char
setEvBind
  ev = cobox_aSl
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFu
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
120[<C:0,F:0>] [W] cobox_aSl :: a_aFu ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFw :: t_aCW
                                ~ [a_aFu] [" a type equality t_aCW
                                                             ~
                                                             [a_aFu] " HTML3.hs:58:49-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFw :: t_aCW
                                 ~ [a_aFu] [" a type equality t_aCW
                                                              ~
                                                              [a_aFu] " HTML3.hs:58:49-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFw :: t_aCW ~ [a_aFu] [" a type equality t_aCW
                                                      ~
                                                      [a_aFu] " HTML3.hs:58:49-61] (CNonCanonical)
canEvNC:eq
  t_aCW
  [a_aFu]
can_eq_nc
  [W] cobox_aFw :: t_aCW ~ [a_aFu]
  t_aCW
  t_aCW
  [a_aFu]
  [a_aFu]
canEqTyVar
  t_aCW
  [a_aFu]
  Not-swapped
Following bound tyvar t_aCW = String
canEqTyVar2
  t_aCW
  [a_aFu]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aFw :: String ~ [a_aFu]
  String
  String
  [a_aFu]
  [a_aFu]
can_eq_nc
  [W] cobox_aFw :: String ~ [a_aFu]
  [Char]
  String
  [a_aFu]
  [a_aFu]
newWantedEvVar/cache miss [W] cobox_aSm :: Char ~ a_aFu
setEvBind
  ev = cobox_aFw
  tm  = CO [cobox_aSm]_N
canEvNC:eq
  Char
  a_aFu
can_eq_nc
  [W] cobox_aSm :: Char ~ a_aFu
  Char
  Char
  a_aFu
  a_aFu
canEqTyVar
  a_aFu
  Char
  Is-swapped
Following bound tyvar a_aFu = Char
newWantedEvVar/cache miss [W] cobox_aSn :: Char ~ Char
setEvBind
  ev = cobox_aSm
  tm  = CO Sym cobox_aSn
rewriteEqEvidence
  [W] cobox_aSm :: Char ~ a_aFu
  Char
  Char
  Sym cobox_aSn
canEqTyVar2
  a_aFu
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFx :: [Attribute]
                                ~ t_aCV [" a type equality [Attribute]
                                                           ~
                                                           t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFx :: [Attribute]
                                 ~ t_aCV [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFx :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                          ~
                                                          t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
canEvNC:eq
  [Attribute]
  t_aCV
can_eq_nc
  [W] cobox_aFx :: [Attribute] ~ t_aCV
  [Attribute]
  [Attribute]
  t_aCV
  t_aCV
canEqTyVar
  t_aCV
  [Attribute]
  Is-swapped
Following bound tyvar t_aCV = [(String, String)]
newWantedEvVar/cache miss
  [W] cobox_aSo :: [(String, String)] ~ [Attribute]
setEvBind
  ev = cobox_aFx
  tm  = CO Sym cobox_aSo
rewriteEqEvidence
  [W] cobox_aFx :: [Attribute] ~ t_aCV
  [(String, String)]
  [Attribute]
  Sym cobox_aSo
canEqTyVar2
  t_aCV
  [Attribute]
  Is-swapped
  [(String, String)]
  <[(String, String)]>_N
can_eq_nc
  [W] cobox_aSo :: [(String, String)] ~ [Attribute]
  [(String, String)]
  [(String, String)]
  [Attribute]
  [Attribute]
newWantedEvVar/cache miss
  [W] cobox_aSp :: (String, String) ~ Attribute
setEvBind
  ev = cobox_aSo
  tm  = CO [cobox_aSp]_N
canEvNC:eq
  (String, String)
  Attribute
can_eq_nc
  [W] cobox_aSp :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aSp :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  (String, String)
  Attribute
newWantedEvVar/cache miss [W] cobox_aSq :: String ~ String
newWantedEvVar/cache miss [W] cobox_aSr :: String ~ String
setEvBind
  ev = cobox_aSp
  tm  = CO (cobox_aSq, cobox_aSr)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aSq :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aSq :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aSq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aSs :: Char ~ Char
setEvBind
  ev = cobox_aSq
  tm  = CO [cobox_aSs]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aSs :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSs
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aSr :: String
                                ~ String [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aSr :: String
                                 ~ String [" a type equality [Attribute]
                                                             ~
                                                             t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aSr :: String ~ String [" a type equality [Attribute]
                                                      ~
                                                      t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aSr :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aSr :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aSr :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aSt :: Char ~ Char
setEvBind
  ev = cobox_aSr
  tm  = CO [cobox_aSt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aSt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFz :: [a_aFy]
                                ~ [a_aFu] [" a type equality [a_aFy]
                                                             ~
                                                             [a_aFu] " HTML3.hs:58:66-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFz :: [a_aFy]
                                 ~ [a_aFu] [" a type equality [a_aFy]
                                                              ~
                                                              [a_aFu] " HTML3.hs:58:66-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFz :: [a_aFy] ~ [a_aFu] [" a type equality [a_aFy]
                                                        ~
                                                        [a_aFu] " HTML3.hs:58:66-114] (CNonCanonical)
canEvNC:eq
  [a_aFy]
  [a_aFu]
can_eq_nc
  [W] cobox_aFz :: [a_aFy] ~ [a_aFu]
  [a_aFy]
  [a_aFy]
  [a_aFu]
  [a_aFu]
newWantedEvVar/cache miss [W] cobox_aSu :: a_aFy ~ a_aFu
setEvBind
  ev = cobox_aFz
  tm  = CO [cobox_aSu]_N
canEvNC:eq
  a_aFy
  a_aFu
can_eq_nc
  [W] cobox_aSu :: a_aFy ~ a_aFu
  a_aFy
  a_aFy
  a_aFu
  a_aFu
canEqTyVar
  a_aFy
  a_aFu
  Not-swapped
Following bound tyvar a_aFu = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSu :: a_aFy
                                 ~ Char [" a type equality [a_aFy]
                                                           ~
                                                           [a_aFu] " HTML3.hs:58:66-114] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFy := Char
  Coercion: a_aFy ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFy := Char
setEvBind
  ev = cobox_aSu
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
124[<C:0,F:0>] [W] cobox_aSu :: a_aFy ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFA :: [Char]
                                ~ [a_aFy] [" a type equality [Char]
                                                             ~
                                                             [a_aFy] " HTML3.hs:58:66-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFA :: [Char]
                                 ~ [a_aFy] [" a type equality [Char]
                                                              ~
                                                              [a_aFy] " HTML3.hs:58:66-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFA :: [Char] ~ [a_aFy] [" a type equality [Char]
                                                       ~
                                                       [a_aFy] " HTML3.hs:58:66-68] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aFy]
can_eq_nc
  [W] cobox_aFA :: [Char] ~ [a_aFy]
  [Char]
  [Char]
  [a_aFy]
  [a_aFy]
newWantedEvVar/cache miss [W] cobox_aSv :: Char ~ a_aFy
setEvBind
  ev = cobox_aFA
  tm  = CO [cobox_aSv]_N
canEvNC:eq
  Char
  a_aFy
can_eq_nc
  [W] cobox_aSv :: Char ~ a_aFy
  Char
  Char
  a_aFy
  a_aFy
canEqTyVar
  a_aFy
  Char
  Is-swapped
Following bound tyvar a_aFy = Char
newWantedEvVar/cache miss [W] cobox_aSw :: Char ~ Char
setEvBind
  ev = cobox_aSv
  tm  = CO Sym cobox_aSw
rewriteEqEvidence
  [W] cobox_aSv :: Char ~ a_aFy
  Char
  Char
  Sym cobox_aSw
canEqTyVar2
  a_aFy
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFC :: [a_aFB]
                                ~ [a_aFy] [" a type equality [a_aFB]
                                                             ~
                                                             [a_aFy] " HTML3.hs:58:73-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFC :: [a_aFB]
                                 ~ [a_aFy] [" a type equality [a_aFB]
                                                              ~
                                                              [a_aFy] " HTML3.hs:58:73-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFC :: [a_aFB] ~ [a_aFy] [" a type equality [a_aFB]
                                                        ~
                                                        [a_aFy] " HTML3.hs:58:73-114] (CNonCanonical)
canEvNC:eq
  [a_aFB]
  [a_aFy]
can_eq_nc
  [W] cobox_aFC :: [a_aFB] ~ [a_aFy]
  [a_aFB]
  [a_aFB]
  [a_aFy]
  [a_aFy]
newWantedEvVar/cache miss [W] cobox_aSx :: a_aFB ~ a_aFy
setEvBind
  ev = cobox_aFC
  tm  = CO [cobox_aSx]_N
canEvNC:eq
  a_aFB
  a_aFy
can_eq_nc
  [W] cobox_aSx :: a_aFB ~ a_aFy
  a_aFB
  a_aFB
  a_aFy
  a_aFy
canEqTyVar
  a_aFB
  a_aFy
  Not-swapped
Following bound tyvar a_aFy = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSx :: a_aFB
                                 ~ Char [" a type equality [a_aFB]
                                                           ~
                                                           [a_aFy] " HTML3.hs:58:73-114] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFB := Char
  Coercion: a_aFB ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFB := Char
setEvBind
  ev = cobox_aSx
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
126[<C:0,F:0>] [W] cobox_aSx :: a_aFB ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFH :: [b_aFG]
                                ~ [a_aFB] [" a type equality [b_aFG]
                                                             ~
                                                             [a_aFB] " HTML3.hs:58:73-92] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFH :: [b_aFG]
                                 ~ [a_aFB] [" a type equality [b_aFG]
                                                              ~
                                                              [a_aFB] " HTML3.hs:58:73-92] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFH :: [b_aFG] ~ [a_aFB] [" a type equality [b_aFG]
                                                        ~
                                                        [a_aFB] " HTML3.hs:58:73-92] (CNonCanonical)
canEvNC:eq
  [b_aFG]
  [a_aFB]
can_eq_nc
  [W] cobox_aFH :: [b_aFG] ~ [a_aFB]
  [b_aFG]
  [b_aFG]
  [a_aFB]
  [a_aFB]
newWantedEvVar/cache miss [W] cobox_aSy :: b_aFG ~ a_aFB
setEvBind
  ev = cobox_aFH
  tm  = CO [cobox_aSy]_N
canEvNC:eq
  b_aFG
  a_aFB
can_eq_nc
  [W] cobox_aSy :: b_aFG ~ a_aFB
  b_aFG
  b_aFG
  a_aFB
  a_aFB
canEqTyVar
  b_aFG
  a_aFB
  Not-swapped
Following bound tyvar a_aFB = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSy :: b_aFG
                                 ~ Char [" a type equality [b_aFG]
                                                           ~
                                                           [a_aFB] " HTML3.hs:58:73-92] (CTyEqCan)
Sneaky unification:
  Unifies: b_aFG := Char
  Coercion: b_aFG ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aFG := Char
setEvBind
  ev = cobox_aSy
  tm  = CO <Char>_N
kickOutRewritable
  tv =  b_aFG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
127[<C:0,F:0>] [W] cobox_aSy :: b_aFG ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFI :: (t_aCZ -> t_aD0)
                                ~ (a_aFF -> [b_aFG]) [" a type equality t_aCZ -> t_aD0
                                                                        ~
                                                                        a_aFF
                                                                        -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFI :: (t_aCZ -> t_aD0)
                                 ~ (a_aFF -> [b_aFG]) [" a type equality t_aCZ -> t_aD0
                                                                         ~
                                                                         a_aFF
                                                                         -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFI :: (t_aCZ -> t_aD0)
                   ~ (a_aFF -> [b_aFG]) [" a type equality t_aCZ -> t_aD0
                                                           ~
                                                           a_aFF
                                                           -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
canEvNC:eq
  t_aCZ -> t_aD0
  a_aFF -> [b_aFG]
can_eq_nc
  [W] cobox_aFI :: (t_aCZ -> t_aD0) ~ (a_aFF -> [b_aFG])
  t_aCZ -> t_aD0
  t_aCZ -> t_aD0
  a_aFF -> [b_aFG]
  a_aFF -> [b_aFG]
newWantedEvVar/cache miss [W] cobox_aSz :: t_aCZ ~ a_aFF
newWantedEvVar/cache miss [W] cobox_aSA :: t_aD0 ~ [b_aFG]
setEvBind
  ev = cobox_aFI
  tm  = CO cobox_aSz -> cobox_aSA
canEvNC:eq
  t_aCZ
  a_aFF
can_eq_nc
  [W] cobox_aSz :: t_aCZ ~ a_aFF
  t_aCZ
  t_aCZ
  a_aFF
  a_aFF
canEqTyVar
  t_aCZ
  a_aFF
  Not-swapped
Following bound tyvar t_aCZ = HTML
canEqTyVar2
  t_aCZ
  a_aFF
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aSz :: HTML ~ a_aFF
  HTML
  HTML
  a_aFF
  a_aFF
canEqTyVar
  a_aFF
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aSB :: a_aFF ~ HTML
setEvBind
  ev = cobox_aSz
  tm  = CO Sym cobox_aSB
rewriteEqEvidence
  [W] cobox_aSz :: HTML ~ a_aFF
  a_aFF
  HTML
  Sym cobox_aSB
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSB :: a_aFF
                                 ~ HTML [" a type equality t_aCZ -> t_aD0
                                                           ~
                                                           a_aFF
                                                           -> [b_aFG] " HTML3.hs:58:83-86] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFF := HTML
  Coercion: a_aFF ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFF := HTML
setEvBind
  ev = cobox_aSB
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  a_aFF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
128[<C:0,F:0>] [W] cobox_aSB :: a_aFF ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aSA :: t_aD0
                                ~ [b_aFG] [" a type equality t_aCZ -> t_aD0
                                                             ~
                                                             a_aFF
                                                             -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aSA :: t_aD0
                                 ~ [b_aFG] [" a type equality t_aCZ -> t_aD0
                                                              ~
                                                              a_aFF
                                                              -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aSA :: t_aD0 ~ [b_aFG] [" a type equality t_aCZ -> t_aD0
                                                      ~
                                                      a_aFF
                                                      -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
canEvNC:eq
  t_aD0
  [b_aFG]
can_eq_nc
  [W] cobox_aSA :: t_aD0 ~ [b_aFG]
  t_aD0
  t_aD0
  [b_aFG]
  [b_aFG]
canEqTyVar
  t_aD0
  [b_aFG]
  Not-swapped
Following bound tyvar t_aD0 = String
canEqTyVar2
  t_aD0
  [b_aFG]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aSA :: String ~ [b_aFG]
  String
  String
  [b_aFG]
  [b_aFG]
can_eq_nc
  [W] cobox_aSA :: String ~ [b_aFG]
  [Char]
  String
  [b_aFG]
  [b_aFG]
newWantedEvVar/cache miss [W] cobox_aSC :: Char ~ b_aFG
setEvBind
  ev = cobox_aSA
  tm  = CO [cobox_aSC]_N
canEvNC:eq
  Char
  b_aFG
can_eq_nc
  [W] cobox_aSC :: Char ~ b_aFG
  Char
  Char
  b_aFG
  b_aFG
canEqTyVar
  b_aFG
  Char
  Is-swapped
Following bound tyvar b_aFG = Char
newWantedEvVar/cache miss [W] cobox_aSD :: Char ~ Char
setEvBind
  ev = cobox_aSC
  tm  = CO Sym cobox_aSD
rewriteEqEvidence
  [W] cobox_aSC :: Char ~ b_aFG
  Char
  Char
  Sym cobox_aSD
canEqTyVar2
  b_aFG
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSD :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSD
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFJ :: [HTML]
                                ~ [a_aFF] [" a type equality [HTML]
                                                             ~
                                                             [a_aFF] " HTML3.hs:58:88-92] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFJ :: [HTML]
                                 ~ [a_aFF] [" a type equality [HTML]
                                                              ~
                                                              [a_aFF] " HTML3.hs:58:88-92] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFJ :: [HTML] ~ [a_aFF] [" a type equality [HTML]
                                                       ~
                                                       [a_aFF] " HTML3.hs:58:88-92] (CNonCanonical)
canEvNC:eq
  [HTML]
  [a_aFF]
can_eq_nc
  [W] cobox_aFJ :: [HTML] ~ [a_aFF]
  [HTML]
  [HTML]
  [a_aFF]
  [a_aFF]
newWantedEvVar/cache miss [W] cobox_aSE :: HTML ~ a_aFF
setEvBind
  ev = cobox_aFJ
  tm  = CO [cobox_aSE]_N
canEvNC:eq
  HTML
  a_aFF
can_eq_nc
  [W] cobox_aSE :: HTML ~ a_aFF
  HTML
  HTML
  a_aFF
  a_aFF
canEqTyVar
  a_aFF
  HTML
  Is-swapped
Following bound tyvar a_aFF = HTML
newWantedEvVar/cache miss [W] cobox_aSF :: HTML ~ HTML
setEvBind
  ev = cobox_aSE
  tm  = CO Sym cobox_aSF
rewriteEqEvidence
  [W] cobox_aSE :: HTML ~ a_aFF
  HTML
  HTML
  Sym cobox_aSF
canEqTyVar2
  a_aFF
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aSF :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aSF
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFL :: [a_aFK]
                                ~ [a_aFB] [" a type equality [a_aFK]
                                                             ~
                                                             [a_aFB] " HTML3.hs:58:97-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFL :: [a_aFK]
                                 ~ [a_aFB] [" a type equality [a_aFK]
                                                              ~
                                                              [a_aFB] " HTML3.hs:58:97-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFL :: [a_aFK] ~ [a_aFB] [" a type equality [a_aFK]
                                                        ~
                                                        [a_aFB] " HTML3.hs:58:97-114] (CNonCanonical)
canEvNC:eq
  [a_aFK]
  [a_aFB]
can_eq_nc
  [W] cobox_aFL :: [a_aFK] ~ [a_aFB]
  [a_aFK]
  [a_aFK]
  [a_aFB]
  [a_aFB]
newWantedEvVar/cache miss [W] cobox_aSG :: a_aFK ~ a_aFB
setEvBind
  ev = cobox_aFL
  tm  = CO [cobox_aSG]_N
canEvNC:eq
  a_aFK
  a_aFB
can_eq_nc
  [W] cobox_aSG :: a_aFK ~ a_aFB
  a_aFK
  a_aFK
  a_aFB
  a_aFB
canEqTyVar
  a_aFK
  a_aFB
  Not-swapped
Following bound tyvar a_aFB = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSG :: a_aFK
                                 ~ Char [" a type equality [a_aFK]
                                                           ~
                                                           [a_aFB] " HTML3.hs:58:97-114] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFK := Char
  Coercion: a_aFK ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFK := Char
setEvBind
  ev = cobox_aSG
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
131[<C:0,F:0>] [W] cobox_aSG :: a_aFK ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFM :: [Char]
                                ~ [a_aFK] [" a type equality [Char]
                                                             ~
                                                             [a_aFK] " HTML3.hs:58:97-100] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFM :: [Char]
                                 ~ [a_aFK] [" a type equality [Char]
                                                              ~
                                                              [a_aFK] " HTML3.hs:58:97-100] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFM :: [Char] ~ [a_aFK] [" a type equality [Char]
                                                       ~
                                                       [a_aFK] " HTML3.hs:58:97-100] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aFK]
can_eq_nc
  [W] cobox_aFM :: [Char] ~ [a_aFK]
  [Char]
  [Char]
  [a_aFK]
  [a_aFK]
newWantedEvVar/cache miss [W] cobox_aSH :: Char ~ a_aFK
setEvBind
  ev = cobox_aFM
  tm  = CO [cobox_aSH]_N
canEvNC:eq
  Char
  a_aFK
can_eq_nc
  [W] cobox_aSH :: Char ~ a_aFK
  Char
  Char
  a_aFK
  a_aFK
canEqTyVar
  a_aFK
  Char
  Is-swapped
Following bound tyvar a_aFK = Char
newWantedEvVar/cache miss [W] cobox_aSI :: Char ~ Char
setEvBind
  ev = cobox_aSH
  tm  = CO Sym cobox_aSI
rewriteEqEvidence
  [W] cobox_aSH :: Char ~ a_aFK
  Char
  Char
  Sym cobox_aSI
canEqTyVar2
  a_aFK
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSI :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSI
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFO :: [a_aFN]
                                ~ [a_aFK] [" a type equality [a_aFN]
                                                             ~
                                                             [a_aFK] " HTML3.hs:58:105-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFO :: [a_aFN]
                                 ~ [a_aFK] [" a type equality [a_aFN]
                                                              ~
                                                              [a_aFK] " HTML3.hs:58:105-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFO :: [a_aFN] ~ [a_aFK] [" a type equality [a_aFN]
                                                        ~
                                                        [a_aFK] " HTML3.hs:58:105-114] (CNonCanonical)
canEvNC:eq
  [a_aFN]
  [a_aFK]
can_eq_nc
  [W] cobox_aFO :: [a_aFN] ~ [a_aFK]
  [a_aFN]
  [a_aFN]
  [a_aFK]
  [a_aFK]
newWantedEvVar/cache miss [W] cobox_aSJ :: a_aFN ~ a_aFK
setEvBind
  ev = cobox_aFO
  tm  = CO [cobox_aSJ]_N
canEvNC:eq
  a_aFN
  a_aFK
can_eq_nc
  [W] cobox_aSJ :: a_aFN ~ a_aFK
  a_aFN
  a_aFN
  a_aFK
  a_aFK
canEqTyVar
  a_aFN
  a_aFK
  Not-swapped
Following bound tyvar a_aFK = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aSJ :: a_aFN
                                 ~ Char [" a type equality [a_aFN]
                                                           ~
                                                           [a_aFK] " HTML3.hs:58:105-114] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFN := Char
  Coercion: a_aFN ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFN := Char
setEvBind
  ev = cobox_aSJ
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aFN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
133[<C:0,F:0>] [W] cobox_aSJ :: a_aFN ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFP :: String
                                ~ [a_aFN] [" a type equality String
                                                             ~
                                                             [a_aFN] " HTML3.hs:58:105-107] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFP :: String
                                 ~ [a_aFN] [" a type equality String
                                                              ~
                                                              [a_aFN] " HTML3.hs:58:105-107] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFP :: String ~ [a_aFN] [" a type equality String
                                                       ~
                                                       [a_aFN] " HTML3.hs:58:105-107] (CNonCanonical)
canEvNC:eq
  String
  [a_aFN]
can_eq_nc
  [W] cobox_aFP :: String ~ [a_aFN]
  String
  String
  [a_aFN]
  [a_aFN]
can_eq_nc
  [W] cobox_aFP :: String ~ [a_aFN]
  [Char]
  String
  [a_aFN]
  [a_aFN]
newWantedEvVar/cache miss [W] cobox_aSK :: Char ~ a_aFN
setEvBind
  ev = cobox_aFP
  tm  = CO [cobox_aSK]_N
canEvNC:eq
  Char
  a_aFN
can_eq_nc
  [W] cobox_aSK :: Char ~ a_aFN
  Char
  Char
  a_aFN
  a_aFN
canEqTyVar
  a_aFN
  Char
  Is-swapped
Following bound tyvar a_aFN = Char
newWantedEvVar/cache miss [W] cobox_aSL :: Char ~ Char
setEvBind
  ev = cobox_aSK
  tm  = CO Sym cobox_aSL
rewriteEqEvidence
  [W] cobox_aSK :: Char ~ a_aFN
  Char
  Char
  Sym cobox_aSL
canEqTyVar2
  a_aFN
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSL :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSL
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFQ :: [Char]
                                ~ [a_aFN] [" a type equality [Char]
                                                             ~
                                                             [a_aFN] " HTML3.hs:58:112-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFQ :: [Char]
                                 ~ [a_aFN] [" a type equality [Char]
                                                              ~
                                                              [a_aFN] " HTML3.hs:58:112-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFQ :: [Char] ~ [a_aFN] [" a type equality [Char]
                                                       ~
                                                       [a_aFN] " HTML3.hs:58:112-114] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aFN]
can_eq_nc
  [W] cobox_aFQ :: [Char] ~ [a_aFN]
  [Char]
  [Char]
  [a_aFN]
  [a_aFN]
newWantedEvVar/cache miss [W] cobox_aSM :: Char ~ a_aFN
setEvBind
  ev = cobox_aFQ
  tm  = CO [cobox_aSM]_N
canEvNC:eq
  Char
  a_aFN
can_eq_nc
  [W] cobox_aSM :: Char ~ a_aFN
  Char
  Char
  a_aFN
  a_aFN
canEqTyVar
  a_aFN
  Char
  Is-swapped
Following bound tyvar a_aFN = Char
newWantedEvVar/cache miss [W] cobox_aSN :: Char ~ Char
setEvBind
  ev = cobox_aSM
  tm  = CO Sym cobox_aSN
rewriteEqEvidence
  [W] cobox_aSM :: Char ~ a_aFN
  Char
  Char
  Sym cobox_aSN
canEqTyVar2
  a_aFN
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aSN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFS :: HTML ~ t_aD3 [" a type equality HTML
                                                                ~
                                                                t_aD3 " HTML3.hs:48:9-19] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFS :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:48:9-19] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFS :: HTML ~ t_aD3 [" a type equality HTML
                                                   ~
                                                   t_aD3 " HTML3.hs:48:9-19] (CNonCanonical)
canEvNC:eq
  HTML
  t_aD3
can_eq_nc
  [W] cobox_aFS :: HTML ~ t_aD3
  HTML
  HTML
  t_aD3
  t_aD3
canEqTyVar
  t_aD3
  HTML
  Is-swapped
Following bound tyvar t_aD3 = HTML
newWantedEvVar/cache miss [W] cobox_aSO :: HTML ~ HTML
setEvBind
  ev = cobox_aFS
  tm  = CO Sym cobox_aSO
rewriteEqEvidence
  [W] cobox_aFS :: HTML ~ t_aD3
  HTML
  HTML
  Sym cobox_aSO
canEqTyVar2
  t_aD3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aSO :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aSO
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFT :: Doc ~ t_aD4 [" a type equality Doc
                                                               ~
                                                               t_aD4 " HTML3.hs:48:37-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFT :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:48:37-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFT :: Doc ~ t_aD4 [" a type equality Doc
                                                  ~
                                                  t_aD4 " HTML3.hs:48:37-48] (CNonCanonical)
canEvNC:eq
  Doc
  t_aD4
can_eq_nc
  [W] cobox_aFT :: Doc ~ t_aD4
  Doc
  Doc
  t_aD4
  t_aD4
can_eq_nc
  [W] cobox_aFT :: Doc ~ t_aD4
  [String]
  Doc
  t_aD4
  t_aD4
canEqTyVar
  t_aD4
  [String]
  Is-swapped
Following bound tyvar t_aD4 = Doc
newWantedEvVar/cache miss [W] cobox_aSP :: Doc ~ Doc
setEvBind
  ev = cobox_aFT
  tm  = CO Sym cobox_aSP
rewriteEqEvidence
  [W] cobox_aFT :: Doc ~ t_aD4
  Doc
  Doc
  Sym cobox_aSP
canEqTyVar2
  t_aD4
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aSP :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aSP :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aSQ :: String ~ String
setEvBind
  ev = cobox_aSP
  tm  = CO [cobox_aSQ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aSQ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aSQ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aSQ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aSR :: Char ~ Char
setEvBind
  ev = cobox_aSQ
  tm  = CO [cobox_aSR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aSR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFU :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML3.hs:48:43-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFU :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML3.hs:48:43-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFU :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML3.hs:48:43-48] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aFU :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aFU :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aFU :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aSS :: Char ~ Char
setEvBind
  ev = cobox_aFU
  tm  = CO [cobox_aSS]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aSS :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSS
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFV :: HTML ~ t_aD3 [" a type equality HTML
                                                                ~
                                                                t_aD3 " HTML3.hs:49:9-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFV :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:49:9-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFV :: HTML ~ t_aD3 [" a type equality HTML
                                                   ~
                                                   t_aD3 " HTML3.hs:49:9-26] (CNonCanonical)
canEvNC:eq
  HTML
  t_aD3
can_eq_nc
  [W] cobox_aFV :: HTML ~ t_aD3
  HTML
  HTML
  t_aD3
  t_aD3
canEqTyVar
  t_aD3
  HTML
  Is-swapped
Following bound tyvar t_aD3 = HTML
newWantedEvVar/cache miss [W] cobox_aST :: HTML ~ HTML
setEvBind
  ev = cobox_aFV
  tm  = CO Sym cobox_aST
rewriteEqEvidence
  [W] cobox_aFV :: HTML ~ t_aD3
  HTML
  HTML
  Sym cobox_aST
canEqTyVar2
  t_aD3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aST :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aST
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFW :: Doc ~ t_aD4 [" a type equality Doc
                                                               ~
                                                               t_aD4 " HTML3.hs:49:37-69] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFW :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:49:37-69] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFW :: Doc ~ t_aD4 [" a type equality Doc
                                                  ~
                                                  t_aD4 " HTML3.hs:49:37-69] (CNonCanonical)
canEvNC:eq
  Doc
  t_aD4
can_eq_nc
  [W] cobox_aFW :: Doc ~ t_aD4
  Doc
  Doc
  t_aD4
  t_aD4
can_eq_nc
  [W] cobox_aFW :: Doc ~ t_aD4
  [String]
  Doc
  t_aD4
  t_aD4
canEqTyVar
  t_aD4
  [String]
  Is-swapped
Following bound tyvar t_aD4 = Doc
newWantedEvVar/cache miss [W] cobox_aSU :: Doc ~ Doc
setEvBind
  ev = cobox_aFW
  tm  = CO Sym cobox_aSU
rewriteEqEvidence
  [W] cobox_aFW :: Doc ~ t_aD4
  Doc
  Doc
  Sym cobox_aSU
canEqTyVar2
  t_aD4
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aSU :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aSU :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aSV :: String ~ String
setEvBind
  ev = cobox_aSU
  tm  = CO [cobox_aSV]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aSV :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aSV :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aSV :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aSW :: Char ~ Char
setEvBind
  ev = cobox_aSV
  tm  = CO [cobox_aSW]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aSW :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSW
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFX :: t_aD0
                                ~ String [" a type equality t_aD0
                                                            ~
                                                            String " HTML3.hs:49:44-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFX :: t_aD0
                                 ~ String [" a type equality t_aD0
                                                             ~
                                                             String " HTML3.hs:49:44-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFX :: t_aD0 ~ String [" a type equality t_aD0
                                                     ~
                                                     String " HTML3.hs:49:44-68] (CNonCanonical)
canEvNC:eq
  t_aD0
  String
can_eq_nc
  [W] cobox_aFX :: t_aD0 ~ String
  t_aD0
  t_aD0
  String
  String
can_eq_nc
  [W] cobox_aFX :: t_aD0 ~ String
  t_aD0
  t_aD0
  [Char]
  String
canEqTyVar
  t_aD0
  [Char]
  Not-swapped
Following bound tyvar t_aD0 = String
canEqTyVar2
  t_aD0
  [Char]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aFX :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aFX :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aSX :: Char ~ Char
setEvBind
  ev = cobox_aFX
  tm  = CO [cobox_aSX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aSX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFY :: HTML ~ t_aCZ [" a type equality HTML
                                                                ~
                                                                t_aCZ " HTML3.hs:49:50-67] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFY :: HTML ~ t_aCZ [" a type equality HTML
                                                                 ~
                                                                 t_aCZ " HTML3.hs:49:50-67] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFY :: HTML ~ t_aCZ [" a type equality HTML
                                                   ~
                                                   t_aCZ " HTML3.hs:49:50-67] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCZ
can_eq_nc
  [W] cobox_aFY :: HTML ~ t_aCZ
  HTML
  HTML
  t_aCZ
  t_aCZ
canEqTyVar
  t_aCZ
  HTML
  Is-swapped
Following bound tyvar t_aCZ = HTML
newWantedEvVar/cache miss [W] cobox_aSY :: HTML ~ HTML
setEvBind
  ev = cobox_aFY
  tm  = CO Sym cobox_aSY
rewriteEqEvidence
  [W] cobox_aFY :: HTML ~ t_aCZ
  HTML
  HTML
  Sym cobox_aSY
canEqTyVar2
  t_aCZ
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aSY :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aSY
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFZ :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML3.hs:49:60-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFZ :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML3.hs:49:60-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFZ :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML3.hs:49:60-62] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aFZ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aFZ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aFZ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aSZ :: Char ~ Char
setEvBind
  ev = cobox_aFZ
  tm  = CO [cobox_aSZ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aSZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aSZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aG0 :: [Attribute]
                                ~ [Attribute] [" a type equality [Attribute]
                                                                 ~
                                                                 [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aG0 :: [Attribute]
                                 ~ [Attribute] [" a type equality [Attribute]
                                                                  ~
                                                                  [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aG0 :: [Attribute]
                   ~ [Attribute] [" a type equality [Attribute]
                                                    ~
                                                    [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
canEvNC:eq
  [Attribute]
  [Attribute]
can_eq_nc
  [W] cobox_aG0 :: [Attribute] ~ [Attribute]
  [Attribute]
  [Attribute]
  [Attribute]
  [Attribute]
newWantedEvVar/cache miss [W] cobox_aT0 :: Attribute ~ Attribute
setEvBind
  ev = cobox_aG0
  tm  = CO [cobox_aT0]_N
canEvNC:eq
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aT0 :: Attribute ~ Attribute
  Attribute
  Attribute
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aT0 :: Attribute ~ Attribute
  (String, String)
  Attribute
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aT0 :: Attribute ~ Attribute
  (String, String)
  Attribute
  (String, String)
  Attribute
newWantedEvVar/cache miss [W] cobox_aT1 :: String ~ String
newWantedEvVar/cache miss [W] cobox_aT2 :: String ~ String
setEvBind
  ev = cobox_aT0
  tm  = CO (cobox_aT1, cobox_aT2)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aT1 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aT1 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aT1 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aT3 :: Char ~ Char
setEvBind
  ev = cobox_aT1
  tm  = CO [cobox_aT3]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aT3 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aT3
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aT2 :: String
                                ~ String [" a type equality [Attribute]
                                                            ~
                                                            [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aT2 :: String
                                 ~ String [" a type equality [Attribute]
                                                             ~
                                                             [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aT2 :: String ~ String [" a type equality [Attribute]
                                                      ~
                                                      [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aT2 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aT2 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aT2 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aT4 :: Char ~ Char
setEvBind
  ev = cobox_aT2
  tm  = CO [cobox_aT4]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aT4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aT4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aG1 :: HTML ~ t_aD3 [" a type equality HTML
                                                                ~
                                                                t_aD3 " HTML3.hs:50:9-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aG1 :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:50:9-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aG1 :: HTML ~ t_aD3 [" a type equality HTML
                                                   ~
                                                   t_aD3 " HTML3.hs:50:9-40] (CNonCanonical)
canEvNC:eq
  HTML
  t_aD3
can_eq_nc
  [W] cobox_aG1 :: HTML ~ t_aD3
  HTML
  HTML
  t_aD3
  t_aD3
canEqTyVar
  t_aD3
  HTML
  Is-swapped
Following bound tyvar t_aD3 = HTML
newWantedEvVar/cache miss [W] cobox_aT5 :: HTML ~ HTML
setEvBind
  ev = cobox_aG1
  tm  = CO Sym cobox_aT5
rewriteEqEvidence
  [W] cobox_aG1 :: HTML ~ t_aD3
  HTML
  HTML
  Sym cobox_aT5
canEqTyVar2
  t_aD3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aT5 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aT5
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                 ~
                                                                 [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aG2 :: HTML
                                 ~ [HTML] [" a type equality HTML
                                                             ~
                                                             [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                    ~
                                                    [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
canEvNC:eq
  HTML
  [HTML]
can_eq_nc
  [W] cobox_aG2 :: HTML ~ [HTML]
  HTML
  HTML
  [HTML]
  [HTML]
Emit insoluble
  [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                    ~
                                                    [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aG3 :: Doc ~ t_aD4 [" a type equality Doc
                                                               ~
                                                               t_aD4 " HTML3.hs:50:45-118] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aG3 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:50:45-118] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aG3 :: Doc ~ t_aD4 [" a type equality Doc
                                                  ~
                                                  t_aD4 " HTML3.hs:50:45-118] (CNonCanonical)
canEvNC:eq
  Doc
  t_aD4
can_eq_nc
  [W] cobox_aG3 :: Doc ~ t_aD4
  Doc
  Doc
  t_aD4
  t_aD4
can_eq_nc
  [W] cobox_aG3 :: Doc ~ t_aD4
  [String]
  Doc
  t_aD4
  t_aD4
canEqTyVar
  t_aD4
  [String]
  Is-swapped
Following bound tyvar t_aD4 = Doc
newWantedEvVar/cache miss [W] cobox_aT6 :: Doc ~ Doc
setEvBind
  ev = cobox_aG3
  tm  = CO Sym cobox_aT6
rewriteEqEvidence
  [W] cobox_aG3 :: Doc ~ t_aD4
  Doc
  Doc
  Sym cobox_aT6
canEqTyVar2
  t_aD4
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aT6 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aT6 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aT7 :: String ~ String
setEvBind
  ev = cobox_aT6
  tm  = CO [cobox_aT7]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aT7 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aT7 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aT7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aT8 :: Char ~ Char
setEvBind
  ev = cobox_aT7
  tm  = CO [cobox_aT8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aT8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aT8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aG5 :: [a_aG4]
                                ~ String [" a type equality [a_aG4]
                                                            ~
                                                            String " HTML3.hs:50:52-117] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aG5 :: [a_aG4]
                                 ~ String [" a type equality [a_aG4]
                                                             ~
                                                             String " HTML3.hs:50:52-117] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aG5 :: [a_aG4] ~ String [" a type equality [a_aG4]
                                                       ~
                                                       String " HTML3.hs:50:52-117] (CNonCanonical)
canEvNC:eq
  [a_aG4]
  String
can_eq_nc
  [W] cobox_aG5 :: [a_aG4] ~ String
  [a_aG4]
  [a_aG4]
  String
  String
can_eq_nc
  [W] cobox_aG5 :: [a_aG4] ~ String
  [a_aG4]
  [a_aG4]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aT9 :: a_aG4 ~ Char
setEvBind
  ev = cobox_aG5
  tm  = CO [cobox_aT9]_N
canEvNC:eq
  a_aG4
  Char
can_eq_nc
  [W] cobox_aT9 :: a_aG4 ~ Char
  a_aG4
  a_aG4
  Char
  Char
canEqTyVar
  a_aG4
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aT9 :: a_aG4
                                 ~ Char [" a type equality [a_aG4]
                                                           ~
                                                           String " HTML3.hs:50:52-117] (CTyEqCan)
Sneaky unification:
  Unifies: a_aG4 := Char
  Coercion: a_aG4 ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aG4 := Char
setEvBind
  ev = cobox_aT9
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aG4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
149[<C:0,F:0>] [W] cobox_aT9 :: a_aG4 ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aG6 :: [Char]
                                ~ [a_aG4] [" a type equality [Char]
                                                             ~
                                                             [a_aG4] " HTML3.hs:50:52-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aG6 :: [Char]
                                 ~ [a_aG4] [" a type equality [Char]
                                                              ~
                                                              [a_aG4] " HTML3.hs:50:52-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aG6 :: [Char] ~ [a_aG4] [" a type equality [Char]
                                                       ~
                                                       [a_aG4] " HTML3.hs:50:52-54] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aG4]
can_eq_nc
  [W] cobox_aG6 :: [Char] ~ [a_aG4]
  [Char]
  [Char]
  [a_aG4]
  [a_aG4]
newWantedEvVar/cache miss [W] cobox_aTa :: Char ~ a_aG4
setEvBind
  ev = cobox_aG6
  tm  = CO [cobox_aTa]_N
canEvNC:eq
  Char
  a_aG4
can_eq_nc
  [W] cobox_aTa :: Char ~ a_aG4
  Char
  Char
  a_aG4
  a_aG4
canEqTyVar
  a_aG4
  Char
  Is-swapped
Following bound tyvar a_aG4 = Char
newWantedEvVar/cache miss [W] cobox_aTb :: Char ~ Char
setEvBind
  ev = cobox_aTa
  tm  = CO Sym cobox_aTb
rewriteEqEvidence
  [W] cobox_aTa :: Char ~ a_aG4
  Char
  Char
  Sym cobox_aTb
canEqTyVar2
  a_aG4
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTb :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTb
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aG8 :: [a_aG7]
                                ~ [a_aG4] [" a type equality [a_aG7]
                                                             ~
                                                             [a_aG4] " HTML3.hs:50:59-117] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aG8 :: [a_aG7]
                                 ~ [a_aG4] [" a type equality [a_aG7]
                                                              ~
                                                              [a_aG4] " HTML3.hs:50:59-117] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aG8 :: [a_aG7] ~ [a_aG4] [" a type equality [a_aG7]
                                                        ~
                                                        [a_aG4] " HTML3.hs:50:59-117] (CNonCanonical)
canEvNC:eq
  [a_aG7]
  [a_aG4]
can_eq_nc
  [W] cobox_aG8 :: [a_aG7] ~ [a_aG4]
  [a_aG7]
  [a_aG7]
  [a_aG4]
  [a_aG4]
newWantedEvVar/cache miss [W] cobox_aTc :: a_aG7 ~ a_aG4
setEvBind
  ev = cobox_aG8
  tm  = CO [cobox_aTc]_N
canEvNC:eq
  a_aG7
  a_aG4
can_eq_nc
  [W] cobox_aTc :: a_aG7 ~ a_aG4
  a_aG7
  a_aG7
  a_aG4
  a_aG4
canEqTyVar
  a_aG7
  a_aG4
  Not-swapped
Following bound tyvar a_aG4 = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTc :: a_aG7
                                 ~ Char [" a type equality [a_aG7]
                                                           ~
                                                           [a_aG4] " HTML3.hs:50:59-117] (CTyEqCan)
Sneaky unification:
  Unifies: a_aG7 := Char
  Coercion: a_aG7 ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aG7 := Char
setEvBind
  ev = cobox_aTc
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aG7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
151[<C:0,F:0>] [W] cobox_aTc :: a_aG7 ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aG9 :: String
                                ~ [a_aG7] [" a type equality String
                                                             ~
                                                             [a_aG7] " HTML3.hs:50:59-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aG9 :: String
                                 ~ [a_aG7] [" a type equality String
                                                              ~
                                                              [a_aG7] " HTML3.hs:50:59-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aG9 :: String ~ [a_aG7] [" a type equality String
                                                       ~
                                                       [a_aG7] " HTML3.hs:50:59-61] (CNonCanonical)
canEvNC:eq
  String
  [a_aG7]
can_eq_nc
  [W] cobox_aG9 :: String ~ [a_aG7]
  String
  String
  [a_aG7]
  [a_aG7]
can_eq_nc
  [W] cobox_aG9 :: String ~ [a_aG7]
  [Char]
  String
  [a_aG7]
  [a_aG7]
newWantedEvVar/cache miss [W] cobox_aTd :: Char ~ a_aG7
setEvBind
  ev = cobox_aG9
  tm  = CO [cobox_aTd]_N
canEvNC:eq
  Char
  a_aG7
can_eq_nc
  [W] cobox_aTd :: Char ~ a_aG7
  Char
  Char
  a_aG7
  a_aG7
canEqTyVar
  a_aG7
  Char
  Is-swapped
Following bound tyvar a_aG7 = Char
newWantedEvVar/cache miss [W] cobox_aTe :: Char ~ Char
setEvBind
  ev = cobox_aTd
  tm  = CO Sym cobox_aTe
rewriteEqEvidence
  [W] cobox_aTd :: Char ~ a_aG7
  Char
  Char
  Sym cobox_aTe
canEqTyVar2
  a_aG7
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTe :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTe
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGb :: [a_aGa]
                                ~ [a_aG7] [" a type equality [a_aGa]
                                                             ~
                                                             [a_aG7] " HTML3.hs:50:66-117] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGb :: [a_aGa]
                                 ~ [a_aG7] [" a type equality [a_aGa]
                                                              ~
                                                              [a_aG7] " HTML3.hs:50:66-117] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGb :: [a_aGa] ~ [a_aG7] [" a type equality [a_aGa]
                                                        ~
                                                        [a_aG7] " HTML3.hs:50:66-117] (CNonCanonical)
canEvNC:eq
  [a_aGa]
  [a_aG7]
can_eq_nc
  [W] cobox_aGb :: [a_aGa] ~ [a_aG7]
  [a_aGa]
  [a_aGa]
  [a_aG7]
  [a_aG7]
newWantedEvVar/cache miss [W] cobox_aTf :: a_aGa ~ a_aG7
setEvBind
  ev = cobox_aGb
  tm  = CO [cobox_aTf]_N
canEvNC:eq
  a_aGa
  a_aG7
can_eq_nc
  [W] cobox_aTf :: a_aGa ~ a_aG7
  a_aGa
  a_aGa
  a_aG7
  a_aG7
canEqTyVar
  a_aGa
  a_aG7
  Not-swapped
Following bound tyvar a_aG7 = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTf :: a_aGa
                                 ~ Char [" a type equality [a_aGa]
                                                           ~
                                                           [a_aG7] " HTML3.hs:50:66-117] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGa := Char
  Coercion: a_aGa ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGa := Char
setEvBind
  ev = cobox_aTf
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGa
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
153[<C:0,F:0>] [W] cobox_aTf :: a_aGa ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGc :: t_aCW
                                ~ [a_aGa] [" a type equality t_aCW
                                                             ~
                                                             [a_aGa] " HTML3.hs:50:66-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGc :: t_aCW
                                 ~ [a_aGa] [" a type equality t_aCW
                                                              ~
                                                              [a_aGa] " HTML3.hs:50:66-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGc :: t_aCW ~ [a_aGa] [" a type equality t_aCW
                                                      ~
                                                      [a_aGa] " HTML3.hs:50:66-78] (CNonCanonical)
canEvNC:eq
  t_aCW
  [a_aGa]
can_eq_nc
  [W] cobox_aGc :: t_aCW ~ [a_aGa]
  t_aCW
  t_aCW
  [a_aGa]
  [a_aGa]
canEqTyVar
  t_aCW
  [a_aGa]
  Not-swapped
Following bound tyvar t_aCW = String
canEqTyVar2
  t_aCW
  [a_aGa]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aGc :: String ~ [a_aGa]
  String
  String
  [a_aGa]
  [a_aGa]
can_eq_nc
  [W] cobox_aGc :: String ~ [a_aGa]
  [Char]
  String
  [a_aGa]
  [a_aGa]
newWantedEvVar/cache miss [W] cobox_aTg :: Char ~ a_aGa
setEvBind
  ev = cobox_aGc
  tm  = CO [cobox_aTg]_N
canEvNC:eq
  Char
  a_aGa
can_eq_nc
  [W] cobox_aTg :: Char ~ a_aGa
  Char
  Char
  a_aGa
  a_aGa
canEqTyVar
  a_aGa
  Char
  Is-swapped
Following bound tyvar a_aGa = Char
newWantedEvVar/cache miss [W] cobox_aTh :: Char ~ Char
setEvBind
  ev = cobox_aTg
  tm  = CO Sym cobox_aTh
rewriteEqEvidence
  [W] cobox_aTg :: Char ~ a_aGa
  Char
  Char
  Sym cobox_aTh
canEqTyVar2
  a_aGa
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGd :: [Attribute]
                                ~ t_aCV [" a type equality [Attribute]
                                                           ~
                                                           t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGd :: [Attribute]
                                 ~ t_aCV [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGd :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                          ~
                                                          t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
canEvNC:eq
  [Attribute]
  t_aCV
can_eq_nc
  [W] cobox_aGd :: [Attribute] ~ t_aCV
  [Attribute]
  [Attribute]
  t_aCV
  t_aCV
canEqTyVar
  t_aCV
  [Attribute]
  Is-swapped
Following bound tyvar t_aCV = [(String, String)]
newWantedEvVar/cache miss
  [W] cobox_aTi :: [(String, String)] ~ [Attribute]
setEvBind
  ev = cobox_aGd
  tm  = CO Sym cobox_aTi
rewriteEqEvidence
  [W] cobox_aGd :: [Attribute] ~ t_aCV
  [(String, String)]
  [Attribute]
  Sym cobox_aTi
canEqTyVar2
  t_aCV
  [Attribute]
  Is-swapped
  [(String, String)]
  <[(String, String)]>_N
can_eq_nc
  [W] cobox_aTi :: [(String, String)] ~ [Attribute]
  [(String, String)]
  [(String, String)]
  [Attribute]
  [Attribute]
newWantedEvVar/cache miss
  [W] cobox_aTj :: (String, String) ~ Attribute
setEvBind
  ev = cobox_aTi
  tm  = CO [cobox_aTj]_N
canEvNC:eq
  (String, String)
  Attribute
can_eq_nc
  [W] cobox_aTj :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aTj :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  (String, String)
  Attribute
newWantedEvVar/cache miss [W] cobox_aTk :: String ~ String
newWantedEvVar/cache miss [W] cobox_aTl :: String ~ String
setEvBind
  ev = cobox_aTj
  tm  = CO (cobox_aTk, cobox_aTl)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aTk :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aTk :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aTk :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aTm :: Char ~ Char
setEvBind
  ev = cobox_aTk
  tm  = CO [cobox_aTm]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aTm :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTm
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aTl :: String
                                ~ String [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aTl :: String
                                 ~ String [" a type equality [Attribute]
                                                             ~
                                                             t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aTl :: String ~ String [" a type equality [Attribute]
                                                      ~
                                                      t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aTl :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aTl :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aTl :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aTn :: Char ~ Char
setEvBind
  ev = cobox_aTl
  tm  = CO [cobox_aTn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aTn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGf :: [a_aGe]
                                ~ [a_aGa] [" a type equality [a_aGe]
                                                             ~
                                                             [a_aGa] " HTML3.hs:50:83-117] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGf :: [a_aGe]
                                 ~ [a_aGa] [" a type equality [a_aGe]
                                                              ~
                                                              [a_aGa] " HTML3.hs:50:83-117] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGf :: [a_aGe] ~ [a_aGa] [" a type equality [a_aGe]
                                                        ~
                                                        [a_aGa] " HTML3.hs:50:83-117] (CNonCanonical)
canEvNC:eq
  [a_aGe]
  [a_aGa]
can_eq_nc
  [W] cobox_aGf :: [a_aGe] ~ [a_aGa]
  [a_aGe]
  [a_aGe]
  [a_aGa]
  [a_aGa]
newWantedEvVar/cache miss [W] cobox_aTo :: a_aGe ~ a_aGa
setEvBind
  ev = cobox_aGf
  tm  = CO [cobox_aTo]_N
canEvNC:eq
  a_aGe
  a_aGa
can_eq_nc
  [W] cobox_aTo :: a_aGe ~ a_aGa
  a_aGe
  a_aGe
  a_aGa
  a_aGa
canEqTyVar
  a_aGe
  a_aGa
  Not-swapped
Following bound tyvar a_aGa = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTo :: a_aGe
                                 ~ Char [" a type equality [a_aGe]
                                                           ~
                                                           [a_aGa] " HTML3.hs:50:83-117] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGe := Char
  Coercion: a_aGe ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGe := Char
setEvBind
  ev = cobox_aTo
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGe
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
157[<C:0,F:0>] [W] cobox_aTo :: a_aGe ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGg :: [Char]
                                ~ [a_aGe] [" a type equality [Char]
                                                             ~
                                                             [a_aGe] " HTML3.hs:50:83-85] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGg :: [Char]
                                 ~ [a_aGe] [" a type equality [Char]
                                                              ~
                                                              [a_aGe] " HTML3.hs:50:83-85] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGg :: [Char] ~ [a_aGe] [" a type equality [Char]
                                                       ~
                                                       [a_aGe] " HTML3.hs:50:83-85] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aGe]
can_eq_nc
  [W] cobox_aGg :: [Char] ~ [a_aGe]
  [Char]
  [Char]
  [a_aGe]
  [a_aGe]
newWantedEvVar/cache miss [W] cobox_aTp :: Char ~ a_aGe
setEvBind
  ev = cobox_aGg
  tm  = CO [cobox_aTp]_N
canEvNC:eq
  Char
  a_aGe
can_eq_nc
  [W] cobox_aTp :: Char ~ a_aGe
  Char
  Char
  a_aGe
  a_aGe
canEqTyVar
  a_aGe
  Char
  Is-swapped
Following bound tyvar a_aGe = Char
newWantedEvVar/cache miss [W] cobox_aTq :: Char ~ Char
setEvBind
  ev = cobox_aTp
  tm  = CO Sym cobox_aTq
rewriteEqEvidence
  [W] cobox_aTp :: Char ~ a_aGe
  Char
  Char
  Sym cobox_aTq
canEqTyVar2
  a_aGe
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTq :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTq
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGi :: [a_aGh]
                                ~ [a_aGe] [" a type equality [a_aGh]
                                                             ~
                                                             [a_aGe] " HTML3.hs:50:90-117] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGi :: [a_aGh]
                                 ~ [a_aGe] [" a type equality [a_aGh]
                                                              ~
                                                              [a_aGe] " HTML3.hs:50:90-117] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGi :: [a_aGh] ~ [a_aGe] [" a type equality [a_aGh]
                                                        ~
                                                        [a_aGe] " HTML3.hs:50:90-117] (CNonCanonical)
canEvNC:eq
  [a_aGh]
  [a_aGe]
can_eq_nc
  [W] cobox_aGi :: [a_aGh] ~ [a_aGe]
  [a_aGh]
  [a_aGh]
  [a_aGe]
  [a_aGe]
newWantedEvVar/cache miss [W] cobox_aTr :: a_aGh ~ a_aGe
setEvBind
  ev = cobox_aGi
  tm  = CO [cobox_aTr]_N
canEvNC:eq
  a_aGh
  a_aGe
can_eq_nc
  [W] cobox_aTr :: a_aGh ~ a_aGe
  a_aGh
  a_aGh
  a_aGe
  a_aGe
canEqTyVar
  a_aGh
  a_aGe
  Not-swapped
Following bound tyvar a_aGe = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTr :: a_aGh
                                 ~ Char [" a type equality [a_aGh]
                                                           ~
                                                           [a_aGe] " HTML3.hs:50:90-117] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGh := Char
  Coercion: a_aGh ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGh := Char
setEvBind
  ev = cobox_aTr
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGh
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
159[<C:0,F:0>] [W] cobox_aTr :: a_aGh ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGj :: String
                                ~ [a_aGh] [" a type equality String
                                                             ~
                                                             [a_aGh] " HTML3.hs:50:90-95] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGj :: String
                                 ~ [a_aGh] [" a type equality String
                                                              ~
                                                              [a_aGh] " HTML3.hs:50:90-95] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGj :: String ~ [a_aGh] [" a type equality String
                                                       ~
                                                       [a_aGh] " HTML3.hs:50:90-95] (CNonCanonical)
canEvNC:eq
  String
  [a_aGh]
can_eq_nc
  [W] cobox_aGj :: String ~ [a_aGh]
  String
  String
  [a_aGh]
  [a_aGh]
can_eq_nc
  [W] cobox_aGj :: String ~ [a_aGh]
  [Char]
  String
  [a_aGh]
  [a_aGh]
newWantedEvVar/cache miss [W] cobox_aTs :: Char ~ a_aGh
setEvBind
  ev = cobox_aGj
  tm  = CO [cobox_aTs]_N
canEvNC:eq
  Char
  a_aGh
can_eq_nc
  [W] cobox_aTs :: Char ~ a_aGh
  Char
  Char
  a_aGh
  a_aGh
canEqTyVar
  a_aGh
  Char
  Is-swapped
Following bound tyvar a_aGh = Char
newWantedEvVar/cache miss [W] cobox_aTt :: Char ~ Char
setEvBind
  ev = cobox_aTs
  tm  = CO Sym cobox_aTt
rewriteEqEvidence
  [W] cobox_aTs :: Char ~ a_aGh
  Char
  Char
  Sym cobox_aTt
canEqTyVar2
  a_aGh
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGl :: [a_aGk]
                                ~ [a_aGh] [" a type equality [a_aGk]
                                                             ~
                                                             [a_aGh] " HTML3.hs:50:100-117] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGl :: [a_aGk]
                                 ~ [a_aGh] [" a type equality [a_aGk]
                                                              ~
                                                              [a_aGh] " HTML3.hs:50:100-117] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGl :: [a_aGk] ~ [a_aGh] [" a type equality [a_aGk]
                                                        ~
                                                        [a_aGh] " HTML3.hs:50:100-117] (CNonCanonical)
canEvNC:eq
  [a_aGk]
  [a_aGh]
can_eq_nc
  [W] cobox_aGl :: [a_aGk] ~ [a_aGh]
  [a_aGk]
  [a_aGk]
  [a_aGh]
  [a_aGh]
newWantedEvVar/cache miss [W] cobox_aTu :: a_aGk ~ a_aGh
setEvBind
  ev = cobox_aGl
  tm  = CO [cobox_aTu]_N
canEvNC:eq
  a_aGk
  a_aGh
can_eq_nc
  [W] cobox_aTu :: a_aGk ~ a_aGh
  a_aGk
  a_aGk
  a_aGh
  a_aGh
canEqTyVar
  a_aGk
  a_aGh
  Not-swapped
Following bound tyvar a_aGh = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTu :: a_aGk
                                 ~ Char [" a type equality [a_aGk]
                                                           ~
                                                           [a_aGh] " HTML3.hs:50:100-117] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGk := Char
  Coercion: a_aGk ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGk := Char
setEvBind
  ev = cobox_aTu
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGk
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
161[<C:0,F:0>] [W] cobox_aTu :: a_aGk ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGm :: [Char]
                                ~ [a_aGk] [" a type equality [Char]
                                                             ~
                                                             [a_aGk] " HTML3.hs:50:100-103] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGm :: [Char]
                                 ~ [a_aGk] [" a type equality [Char]
                                                              ~
                                                              [a_aGk] " HTML3.hs:50:100-103] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGm :: [Char] ~ [a_aGk] [" a type equality [Char]
                                                       ~
                                                       [a_aGk] " HTML3.hs:50:100-103] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aGk]
can_eq_nc
  [W] cobox_aGm :: [Char] ~ [a_aGk]
  [Char]
  [Char]
  [a_aGk]
  [a_aGk]
newWantedEvVar/cache miss [W] cobox_aTv :: Char ~ a_aGk
setEvBind
  ev = cobox_aGm
  tm  = CO [cobox_aTv]_N
canEvNC:eq
  Char
  a_aGk
can_eq_nc
  [W] cobox_aTv :: Char ~ a_aGk
  Char
  Char
  a_aGk
  a_aGk
canEqTyVar
  a_aGk
  Char
  Is-swapped
Following bound tyvar a_aGk = Char
newWantedEvVar/cache miss [W] cobox_aTw :: Char ~ Char
setEvBind
  ev = cobox_aTv
  tm  = CO Sym cobox_aTw
rewriteEqEvidence
  [W] cobox_aTv :: Char ~ a_aGk
  Char
  Char
  Sym cobox_aTw
canEqTyVar2
  a_aGk
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGo :: [a_aGn]
                                ~ [a_aGk] [" a type equality [a_aGn]
                                                             ~
                                                             [a_aGk] " HTML3.hs:50:108-117] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGo :: [a_aGn]
                                 ~ [a_aGk] [" a type equality [a_aGn]
                                                              ~
                                                              [a_aGk] " HTML3.hs:50:108-117] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGo :: [a_aGn] ~ [a_aGk] [" a type equality [a_aGn]
                                                        ~
                                                        [a_aGk] " HTML3.hs:50:108-117] (CNonCanonical)
canEvNC:eq
  [a_aGn]
  [a_aGk]
can_eq_nc
  [W] cobox_aGo :: [a_aGn] ~ [a_aGk]
  [a_aGn]
  [a_aGn]
  [a_aGk]
  [a_aGk]
newWantedEvVar/cache miss [W] cobox_aTx :: a_aGn ~ a_aGk
setEvBind
  ev = cobox_aGo
  tm  = CO [cobox_aTx]_N
canEvNC:eq
  a_aGn
  a_aGk
can_eq_nc
  [W] cobox_aTx :: a_aGn ~ a_aGk
  a_aGn
  a_aGn
  a_aGk
  a_aGk
canEqTyVar
  a_aGn
  a_aGk
  Not-swapped
Following bound tyvar a_aGk = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTx :: a_aGn
                                 ~ Char [" a type equality [a_aGn]
                                                           ~
                                                           [a_aGk] " HTML3.hs:50:108-117] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGn := Char
  Coercion: a_aGn ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGn := Char
setEvBind
  ev = cobox_aTx
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
163[<C:0,F:0>] [W] cobox_aTx :: a_aGn ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGp :: String
                                ~ [a_aGn] [" a type equality String
                                                             ~
                                                             [a_aGn] " HTML3.hs:50:108-110] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGp :: String
                                 ~ [a_aGn] [" a type equality String
                                                              ~
                                                              [a_aGn] " HTML3.hs:50:108-110] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGp :: String ~ [a_aGn] [" a type equality String
                                                       ~
                                                       [a_aGn] " HTML3.hs:50:108-110] (CNonCanonical)
canEvNC:eq
  String
  [a_aGn]
can_eq_nc
  [W] cobox_aGp :: String ~ [a_aGn]
  String
  String
  [a_aGn]
  [a_aGn]
can_eq_nc
  [W] cobox_aGp :: String ~ [a_aGn]
  [Char]
  String
  [a_aGn]
  [a_aGn]
newWantedEvVar/cache miss [W] cobox_aTy :: Char ~ a_aGn
setEvBind
  ev = cobox_aGp
  tm  = CO [cobox_aTy]_N
canEvNC:eq
  Char
  a_aGn
can_eq_nc
  [W] cobox_aTy :: Char ~ a_aGn
  Char
  Char
  a_aGn
  a_aGn
canEqTyVar
  a_aGn
  Char
  Is-swapped
Following bound tyvar a_aGn = Char
newWantedEvVar/cache miss [W] cobox_aTz :: Char ~ Char
setEvBind
  ev = cobox_aTy
  tm  = CO Sym cobox_aTz
rewriteEqEvidence
  [W] cobox_aTy :: Char ~ a_aGn
  Char
  Char
  Sym cobox_aTz
canEqTyVar2
  a_aGn
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGq :: [Char]
                                ~ [a_aGn] [" a type equality [Char]
                                                             ~
                                                             [a_aGn] " HTML3.hs:50:115-117] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGq :: [Char]
                                 ~ [a_aGn] [" a type equality [Char]
                                                              ~
                                                              [a_aGn] " HTML3.hs:50:115-117] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGq :: [Char] ~ [a_aGn] [" a type equality [Char]
                                                       ~
                                                       [a_aGn] " HTML3.hs:50:115-117] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aGn]
can_eq_nc
  [W] cobox_aGq :: [Char] ~ [a_aGn]
  [Char]
  [Char]
  [a_aGn]
  [a_aGn]
newWantedEvVar/cache miss [W] cobox_aTA :: Char ~ a_aGn
setEvBind
  ev = cobox_aGq
  tm  = CO [cobox_aTA]_N
canEvNC:eq
  Char
  a_aGn
can_eq_nc
  [W] cobox_aTA :: Char ~ a_aGn
  Char
  Char
  a_aGn
  a_aGn
canEqTyVar
  a_aGn
  Char
  Is-swapped
Following bound tyvar a_aGn = Char
newWantedEvVar/cache miss [W] cobox_aTB :: Char ~ Char
setEvBind
  ev = cobox_aTA
  tm  = CO Sym cobox_aTB
rewriteEqEvidence
  [W] cobox_aTA :: Char ~ a_aGn
  Char
  Char
  Sym cobox_aTB
canEqTyVar2
  a_aGn
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGr :: HTML ~ t_aD3 [" a type equality HTML
                                                                ~
                                                                t_aD3 " HTML3.hs:51:9-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGr :: HTML ~ t_aD3 [" a type equality HTML
                                                                 ~
                                                                 t_aD3 " HTML3.hs:51:9-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGr :: HTML ~ t_aD3 [" a type equality HTML
                                                   ~
                                                   t_aD3 " HTML3.hs:51:9-32] (CNonCanonical)
canEvNC:eq
  HTML
  t_aD3
can_eq_nc
  [W] cobox_aGr :: HTML ~ t_aD3
  HTML
  HTML
  t_aD3
  t_aD3
canEqTyVar
  t_aD3
  HTML
  Is-swapped
Following bound tyvar t_aD3 = HTML
newWantedEvVar/cache miss [W] cobox_aTC :: HTML ~ HTML
setEvBind
  ev = cobox_aGr
  tm  = CO Sym cobox_aTC
rewriteEqEvidence
  [W] cobox_aGr :: HTML ~ t_aD3
  HTML
  HTML
  Sym cobox_aTC
canEqTyVar2
  t_aD3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aTC :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aTC
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGA :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML3.hs:51:37-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGA :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:51:37-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGA :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML3.hs:51:37-53] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aGA :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aGA
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGC :: Int ~ a_aGy [" a type equality Int
                                                               ~
                                                               a_aGy " HTML3.hs:51:37-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGC :: Int ~ a_aGy [" a type equality Int
                                                                ~
                                                                a_aGy " HTML3.hs:51:37-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGC :: Int ~ a_aGy [" a type equality Int
                                                  ~
                                                  a_aGy " HTML3.hs:51:37-48] (CNonCanonical)
canEvNC:eq
  Int
  a_aGy
can_eq_nc
  [W] cobox_aGC :: Int ~ a_aGy
  Int
  Int
  a_aGy
  a_aGy
canEqTyVar
  a_aGy
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aTD :: a_aGy ~ Int
setEvBind
  ev = cobox_aGC
  tm  = CO Sym cobox_aTD
rewriteEqEvidence
  [W] cobox_aGC :: Int ~ a_aGy
  a_aGy
  Int
  Sym cobox_aTD
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTD :: a_aGy ~ Int [" a type equality Int
                                                                ~
                                                                a_aGy " HTML3.hs:51:37-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGy := Int
  Coercion: a_aGy ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGy := Int
setEvBind
  ev = cobox_aTD
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aGy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
168[<C:0,F:0>] [W] cobox_aTD :: a_aGy ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGD :: [HTML]
                                ~ [a_aGB] [" a type equality [HTML]
                                                             ~
                                                             [a_aGB] " HTML3.hs:51:44-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGD :: [HTML]
                                 ~ [a_aGB] [" a type equality [HTML]
                                                              ~
                                                              [a_aGB] " HTML3.hs:51:44-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGD :: [HTML] ~ [a_aGB] [" a type equality [HTML]
                                                       ~
                                                       [a_aGB] " HTML3.hs:51:44-48] (CNonCanonical)
canEvNC:eq
  [HTML]
  [a_aGB]
can_eq_nc
  [W] cobox_aGD :: [HTML] ~ [a_aGB]
  [HTML]
  [HTML]
  [a_aGB]
  [a_aGB]
newWantedEvVar/cache miss [W] cobox_aTE :: HTML ~ a_aGB
setEvBind
  ev = cobox_aGD
  tm  = CO [cobox_aTE]_N
canEvNC:eq
  HTML
  a_aGB
can_eq_nc
  [W] cobox_aTE :: HTML ~ a_aGB
  HTML
  HTML
  a_aGB
  a_aGB
canEqTyVar
  a_aGB
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aTF :: a_aGB ~ HTML
setEvBind
  ev = cobox_aTE
  tm  = CO Sym cobox_aTF
rewriteEqEvidence
  [W] cobox_aTE :: HTML ~ a_aGB
  a_aGB
  HTML
  Sym cobox_aTF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTF :: a_aGB
                                 ~ HTML [" a type equality [HTML]
                                                           ~
                                                           [a_aGB] " HTML3.hs:51:44-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGB := HTML
  Coercion: a_aGB ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGB := HTML
setEvBind
  ev = cobox_aTF
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  a_aGB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
169[<C:0,F:0>] [W] cobox_aTF :: a_aGB ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGG :: (Integer -> a_aGE)
                                ~ (Integer -> a_aGy) [" a type equality Integer -> a_aGE
                                                                        ~
                                                                        Integer
                                                                        -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGG :: (Integer -> a_aGE)
                                 ~ (Integer -> a_aGy) [" a type equality Integer -> a_aGE
                                                                         ~
                                                                         Integer
                                                                         -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGG :: (Integer -> a_aGE)
                   ~ (Integer -> a_aGy) [" a type equality Integer -> a_aGE
                                                           ~
                                                           Integer
                                                           -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
canEvNC:eq
  Integer -> a_aGE
  Integer -> a_aGy
can_eq_nc
  [W] cobox_aGG :: (Integer -> a_aGE) ~ (Integer -> a_aGy)
  Integer -> a_aGE
  Integer -> a_aGE
  Integer -> a_aGy
  Integer -> a_aGy
newWantedEvVar/cache miss [W] cobox_aTG :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aTH :: a_aGE ~ a_aGy
setEvBind
  ev = cobox_aGG
  tm  = CO cobox_aTG -> cobox_aTH
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aTG :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aTG
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aTH :: a_aGE
                                ~ a_aGy [" a type equality Integer -> a_aGE
                                                           ~
                                                           Integer
                                                           -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aTH :: a_aGE
                                 ~ a_aGy [" a type equality Integer -> a_aGE
                                                            ~
                                                            Integer
                                                            -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aTH :: a_aGE ~ a_aGy [" a type equality Integer -> a_aGE
                                                    ~
                                                    Integer
                                                    -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
canEvNC:eq
  a_aGE
  a_aGy
can_eq_nc
  [W] cobox_aTH :: a_aGE ~ a_aGy
  a_aGE
  a_aGE
  a_aGy
  a_aGy
canEqTyVar
  a_aGE
  a_aGy
  Not-swapped
Following bound tyvar a_aGy = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTH :: a_aGE
                                 ~ Int [" a type equality Integer -> a_aGE
                                                          ~
                                                          Integer
                                                          -> a_aGy " HTML3.hs:51:53] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGE := Int
  Coercion: a_aGE ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGE := Int
setEvBind
  ev = cobox_aTH
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aGE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
171[<C:0,F:0>] [W] cobox_aTH :: a_aGE ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGH :: Doc ~ t_aD4 [" a type equality Doc
                                                               ~
                                                               t_aD4 " HTML3.hs:51:57-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGH :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:51:57-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGH :: Doc ~ t_aD4 [" a type equality Doc
                                                  ~
                                                  t_aD4 " HTML3.hs:51:57-114] (CNonCanonical)
canEvNC:eq
  Doc
  t_aD4
can_eq_nc
  [W] cobox_aGH :: Doc ~ t_aD4
  Doc
  Doc
  t_aD4
  t_aD4
can_eq_nc
  [W] cobox_aGH :: Doc ~ t_aD4
  [String]
  Doc
  t_aD4
  t_aD4
canEqTyVar
  t_aD4
  [String]
  Is-swapped
Following bound tyvar t_aD4 = Doc
newWantedEvVar/cache miss [W] cobox_aTI :: Doc ~ Doc
setEvBind
  ev = cobox_aGH
  tm  = CO Sym cobox_aTI
rewriteEqEvidence
  [W] cobox_aGH :: Doc ~ t_aD4
  Doc
  Doc
  Sym cobox_aTI
canEqTyVar2
  t_aD4
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aTI :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aTI :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aTJ :: String ~ String
setEvBind
  ev = cobox_aTI
  tm  = CO [cobox_aTJ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aTJ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aTJ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aTJ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aTK :: Char ~ Char
setEvBind
  ev = cobox_aTJ
  tm  = CO [cobox_aTK]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aTK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGJ :: [a_aGI]
                                ~ String [" a type equality [a_aGI]
                                                            ~
                                                            String " HTML3.hs:51:64-113] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGJ :: [a_aGI]
                                 ~ String [" a type equality [a_aGI]
                                                             ~
                                                             String " HTML3.hs:51:64-113] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGJ :: [a_aGI] ~ String [" a type equality [a_aGI]
                                                       ~
                                                       String " HTML3.hs:51:64-113] (CNonCanonical)
canEvNC:eq
  [a_aGI]
  String
can_eq_nc
  [W] cobox_aGJ :: [a_aGI] ~ String
  [a_aGI]
  [a_aGI]
  String
  String
can_eq_nc
  [W] cobox_aGJ :: [a_aGI] ~ String
  [a_aGI]
  [a_aGI]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aTL :: a_aGI ~ Char
setEvBind
  ev = cobox_aGJ
  tm  = CO [cobox_aTL]_N
canEvNC:eq
  a_aGI
  Char
can_eq_nc
  [W] cobox_aTL :: a_aGI ~ Char
  a_aGI
  a_aGI
  Char
  Char
canEqTyVar
  a_aGI
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTL :: a_aGI
                                 ~ Char [" a type equality [a_aGI]
                                                           ~
                                                           String " HTML3.hs:51:64-113] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGI := Char
  Coercion: a_aGI ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGI := Char
setEvBind
  ev = cobox_aTL
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
173[<C:0,F:0>] [W] cobox_aTL :: a_aGI ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGK :: [Char]
                                ~ [a_aGI] [" a type equality [Char]
                                                             ~
                                                             [a_aGI] " HTML3.hs:51:64-66] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGK :: [Char]
                                 ~ [a_aGI] [" a type equality [Char]
                                                              ~
                                                              [a_aGI] " HTML3.hs:51:64-66] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGK :: [Char] ~ [a_aGI] [" a type equality [Char]
                                                       ~
                                                       [a_aGI] " HTML3.hs:51:64-66] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aGI]
can_eq_nc
  [W] cobox_aGK :: [Char] ~ [a_aGI]
  [Char]
  [Char]
  [a_aGI]
  [a_aGI]
newWantedEvVar/cache miss [W] cobox_aTM :: Char ~ a_aGI
setEvBind
  ev = cobox_aGK
  tm  = CO [cobox_aTM]_N
canEvNC:eq
  Char
  a_aGI
can_eq_nc
  [W] cobox_aTM :: Char ~ a_aGI
  Char
  Char
  a_aGI
  a_aGI
canEqTyVar
  a_aGI
  Char
  Is-swapped
Following bound tyvar a_aGI = Char
newWantedEvVar/cache miss [W] cobox_aTN :: Char ~ Char
setEvBind
  ev = cobox_aTM
  tm  = CO Sym cobox_aTN
rewriteEqEvidence
  [W] cobox_aTM :: Char ~ a_aGI
  Char
  Char
  Sym cobox_aTN
canEqTyVar2
  a_aGI
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGM :: [a_aGL]
                                ~ [a_aGI] [" a type equality [a_aGL]
                                                             ~
                                                             [a_aGI] " HTML3.hs:51:71-113] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGM :: [a_aGL]
                                 ~ [a_aGI] [" a type equality [a_aGL]
                                                              ~
                                                              [a_aGI] " HTML3.hs:51:71-113] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGM :: [a_aGL] ~ [a_aGI] [" a type equality [a_aGL]
                                                        ~
                                                        [a_aGI] " HTML3.hs:51:71-113] (CNonCanonical)
canEvNC:eq
  [a_aGL]
  [a_aGI]
can_eq_nc
  [W] cobox_aGM :: [a_aGL] ~ [a_aGI]
  [a_aGL]
  [a_aGL]
  [a_aGI]
  [a_aGI]
newWantedEvVar/cache miss [W] cobox_aTO :: a_aGL ~ a_aGI
setEvBind
  ev = cobox_aGM
  tm  = CO [cobox_aTO]_N
canEvNC:eq
  a_aGL
  a_aGI
can_eq_nc
  [W] cobox_aTO :: a_aGL ~ a_aGI
  a_aGL
  a_aGL
  a_aGI
  a_aGI
canEqTyVar
  a_aGL
  a_aGI
  Not-swapped
Following bound tyvar a_aGI = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTO :: a_aGL
                                 ~ Char [" a type equality [a_aGL]
                                                           ~
                                                           [a_aGI] " HTML3.hs:51:71-113] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGL := Char
  Coercion: a_aGL ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGL := Char
setEvBind
  ev = cobox_aTO
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
175[<C:0,F:0>] [W] cobox_aTO :: a_aGL ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGN :: String
                                ~ [a_aGL] [" a type equality String
                                                             ~
                                                             [a_aGL] " HTML3.hs:51:71-73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGN :: String
                                 ~ [a_aGL] [" a type equality String
                                                              ~
                                                              [a_aGL] " HTML3.hs:51:71-73] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGN :: String ~ [a_aGL] [" a type equality String
                                                       ~
                                                       [a_aGL] " HTML3.hs:51:71-73] (CNonCanonical)
canEvNC:eq
  String
  [a_aGL]
can_eq_nc
  [W] cobox_aGN :: String ~ [a_aGL]
  String
  String
  [a_aGL]
  [a_aGL]
can_eq_nc
  [W] cobox_aGN :: String ~ [a_aGL]
  [Char]
  String
  [a_aGL]
  [a_aGL]
newWantedEvVar/cache miss [W] cobox_aTP :: Char ~ a_aGL
setEvBind
  ev = cobox_aGN
  tm  = CO [cobox_aTP]_N
canEvNC:eq
  Char
  a_aGL
can_eq_nc
  [W] cobox_aTP :: Char ~ a_aGL
  Char
  Char
  a_aGL
  a_aGL
canEqTyVar
  a_aGL
  Char
  Is-swapped
Following bound tyvar a_aGL = Char
newWantedEvVar/cache miss [W] cobox_aTQ :: Char ~ Char
setEvBind
  ev = cobox_aTP
  tm  = CO Sym cobox_aTQ
rewriteEqEvidence
  [W] cobox_aTP :: Char ~ a_aGL
  Char
  Char
  Sym cobox_aTQ
canEqTyVar2
  a_aGL
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTQ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTQ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGP :: [a_aGO]
                                ~ [a_aGL] [" a type equality [a_aGO]
                                                             ~
                                                             [a_aGL] " HTML3.hs:51:78-113] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGP :: [a_aGO]
                                 ~ [a_aGL] [" a type equality [a_aGO]
                                                              ~
                                                              [a_aGL] " HTML3.hs:51:78-113] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGP :: [a_aGO] ~ [a_aGL] [" a type equality [a_aGO]
                                                        ~
                                                        [a_aGL] " HTML3.hs:51:78-113] (CNonCanonical)
canEvNC:eq
  [a_aGO]
  [a_aGL]
can_eq_nc
  [W] cobox_aGP :: [a_aGO] ~ [a_aGL]
  [a_aGO]
  [a_aGO]
  [a_aGL]
  [a_aGL]
newWantedEvVar/cache miss [W] cobox_aTR :: a_aGO ~ a_aGL
setEvBind
  ev = cobox_aGP
  tm  = CO [cobox_aTR]_N
canEvNC:eq
  a_aGO
  a_aGL
can_eq_nc
  [W] cobox_aTR :: a_aGO ~ a_aGL
  a_aGO
  a_aGO
  a_aGL
  a_aGL
canEqTyVar
  a_aGO
  a_aGL
  Not-swapped
Following bound tyvar a_aGL = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aTR :: a_aGO
                                 ~ Char [" a type equality [a_aGO]
                                                           ~
                                                           [a_aGL] " HTML3.hs:51:78-113] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGO := Char
  Coercion: a_aGO ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGO := Char
setEvBind
  ev = cobox_aTR
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
177[<C:0,F:0>] [W] cobox_aTR :: a_aGO ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGQ :: t_aCW
                                ~ [a_aGO] [" a type equality t_aCW
                                                             ~
                                                             [a_aGO] " HTML3.hs:51:78-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGQ :: t_aCW
                                 ~ [a_aGO] [" a type equality t_aCW
                                                              ~
                                                              [a_aGO] " HTML3.hs:51:78-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGQ :: t_aCW ~ [a_aGO] [" a type equality t_aCW
                                                      ~
                                                      [a_aGO] " HTML3.hs:51:78-90] (CNonCanonical)
canEvNC:eq
  t_aCW
  [a_aGO]
can_eq_nc
  [W] cobox_aGQ :: t_aCW ~ [a_aGO]
  t_aCW
  t_aCW
  [a_aGO]
  [a_aGO]
canEqTyVar
  t_aCW
  [a_aGO]
  Not-swapped
Following bound tyvar t_aCW = String
canEqTyVar2
  t_aCW
  [a_aGO]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aGQ :: String ~ [a_aGO]
  String
  String
  [a_aGO]
  [a_aGO]
can_eq_nc
  [W] cobox_aGQ :: String ~ [a_aGO]
  [Char]
  String
  [a_aGO]
  [a_aGO]
newWantedEvVar/cache miss [W] cobox_aTS :: Char ~ a_aGO
setEvBind
  ev = cobox_aGQ
  tm  = CO [cobox_aTS]_N
canEvNC:eq
  Char
  a_aGO
can_eq_nc
  [W] cobox_aTS :: Char ~ a_aGO
  Char
  Char
  a_aGO
  a_aGO
canEqTyVar
  a_aGO
  Char
  Is-swapped
Following bound tyvar a_aGO = Char
newWantedEvVar/cache miss [W] cobox_aTT :: Char ~ Char
setEvBind
  ev = cobox_aTS
  tm  = CO Sym cobox_aTT
rewriteEqEvidence
  [W] cobox_aTS :: Char ~ a_aGO
  Char
  Char
  Sym cobox_aTT
canEqTyVar2
  a_aGO
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aTT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGR :: [Attribute]
                                ~ t_aCV [" a type equality [Attribute]
                                                           ~
                                                           t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGR :: [Attribute]
                                 ~ t_aCV [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGR :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                          ~
                                                          t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
canEvNC:eq
  [Attribute]
  t_aCV
can_eq_nc
  [W] cobox_aGR :: [Attribute] ~ t_aCV
  [Attribute]
  [Attribute]
  t_aCV
  t_aCV
canEqTyVar
  t_aCV
  [Attribute]
  Is-swapped
Following bound tyvar t_aCV = [(String, String)]
newWantedEvVar/cache miss
  [W] cobox_aTU :: [(String, String)] ~ [Attribute]
setEvBind
  ev = cobox_aGR
  tm  = CO Sym cobox_aTU
rewriteEqEvidence
  [W] cobox_aGR :: [Attribute] ~ t_aCV
  [(String, String)]
  [Attribute]
  Sym cobox_aTU
canEqTyVar2
  t_aCV
  [Attribute]
  Is-swapped
  [(String, String)]
  <[(String, String)]>_N
can_eq_nc
  [W] cobox_aTU :: [(String, String)] ~ [Attribute]
  [(String, String)]
  [(String, String)]
  [Attribute]
  [Attribute]
newWantedEvVar/cache miss
  [W] cobox_aTV :: (String, String) ~ Attribute
setEvBind
  ev = cobox_aTU
  tm  = CO [cobox_aTV]_N
canEvNC:eq
  (String, String)
  Attribute
can_eq_nc
  [W] cobox_aTV :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aTV :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  (String, String)
  Attribute
newWantedEvVar/cache miss [W] cobox_aTW :: String ~ String
newWantedEvVar/cache miss [W] cobox_aTX :: String ~ String
setEvBind
  ev = cobox_aTV
  tm  = CO (cobox_aTW, cobox_aTX)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aTW :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aTW :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aTW :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aTY :: Char ~ Char
setEvBind
  ev = cobox_aTW
  tm  = CO [cobox_aTY]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aTY :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTY
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aTX :: String
                                ~ String [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aTX :: String
                                 ~ String [" a type equality [Attribute]
                                                             ~
                                                             t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aTX :: String ~ String [" a type equality [Attribute]
                                                      ~
                                                      t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aTX :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aTX :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aTX :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aTZ :: Char ~ Char
setEvBind
  ev = cobox_aTX
  tm  = CO [cobox_aTZ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aTZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aTZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGT :: [a_aGS]
                                ~ [a_aGO] [" a type equality [a_aGS]
                                                             ~
                                                             [a_aGO] " HTML3.hs:51:95-113] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGT :: [a_aGS]
                                 ~ [a_aGO] [" a type equality [a_aGS]
                                                              ~
                                                              [a_aGO] " HTML3.hs:51:95-113] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGT :: [a_aGS] ~ [a_aGO] [" a type equality [a_aGS]
                                                        ~
                                                        [a_aGO] " HTML3.hs:51:95-113] (CNonCanonical)
canEvNC:eq
  [a_aGS]
  [a_aGO]
can_eq_nc
  [W] cobox_aGT :: [a_aGS] ~ [a_aGO]
  [a_aGS]
  [a_aGS]
  [a_aGO]
  [a_aGO]
newWantedEvVar/cache miss [W] cobox_aU0 :: a_aGS ~ a_aGO
setEvBind
  ev = cobox_aGT
  tm  = CO [cobox_aU0]_N
canEvNC:eq
  a_aGS
  a_aGO
can_eq_nc
  [W] cobox_aU0 :: a_aGS ~ a_aGO
  a_aGS
  a_aGS
  a_aGO
  a_aGO
canEqTyVar
  a_aGS
  a_aGO
  Not-swapped
Following bound tyvar a_aGO = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aU0 :: a_aGS
                                 ~ Char [" a type equality [a_aGS]
                                                           ~
                                                           [a_aGO] " HTML3.hs:51:95-113] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGS := Char
  Coercion: a_aGS ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGS := Char
setEvBind
  ev = cobox_aU0
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
181[<C:0,F:0>] [W] cobox_aU0 :: a_aGS ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGU :: [Char]
                                ~ [a_aGS] [" a type equality [Char]
                                                             ~
                                                             [a_aGS] " HTML3.hs:51:95-99] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGU :: [Char]
                                 ~ [a_aGS] [" a type equality [Char]
                                                              ~
                                                              [a_aGS] " HTML3.hs:51:95-99] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGU :: [Char] ~ [a_aGS] [" a type equality [Char]
                                                       ~
                                                       [a_aGS] " HTML3.hs:51:95-99] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aGS]
can_eq_nc
  [W] cobox_aGU :: [Char] ~ [a_aGS]
  [Char]
  [Char]
  [a_aGS]
  [a_aGS]
newWantedEvVar/cache miss [W] cobox_aU1 :: Char ~ a_aGS
setEvBind
  ev = cobox_aGU
  tm  = CO [cobox_aU1]_N
canEvNC:eq
  Char
  a_aGS
can_eq_nc
  [W] cobox_aU1 :: Char ~ a_aGS
  Char
  Char
  a_aGS
  a_aGS
canEqTyVar
  a_aGS
  Char
  Is-swapped
Following bound tyvar a_aGS = Char
newWantedEvVar/cache miss [W] cobox_aU2 :: Char ~ Char
setEvBind
  ev = cobox_aU1
  tm  = CO Sym cobox_aU2
rewriteEqEvidence
  [W] cobox_aU1 :: Char ~ a_aGS
  Char
  Char
  Sym cobox_aU2
canEqTyVar2
  a_aGS
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aU2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aU2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGW :: [a_aGV]
                                ~ [a_aGS] [" a type equality [a_aGV]
                                                             ~
                                                             [a_aGS] " HTML3.hs:51:104-113] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGW :: [a_aGV]
                                 ~ [a_aGS] [" a type equality [a_aGV]
                                                              ~
                                                              [a_aGS] " HTML3.hs:51:104-113] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGW :: [a_aGV] ~ [a_aGS] [" a type equality [a_aGV]
                                                        ~
                                                        [a_aGS] " HTML3.hs:51:104-113] (CNonCanonical)
canEvNC:eq
  [a_aGV]
  [a_aGS]
can_eq_nc
  [W] cobox_aGW :: [a_aGV] ~ [a_aGS]
  [a_aGV]
  [a_aGV]
  [a_aGS]
  [a_aGS]
newWantedEvVar/cache miss [W] cobox_aU3 :: a_aGV ~ a_aGS
setEvBind
  ev = cobox_aGW
  tm  = CO [cobox_aU3]_N
canEvNC:eq
  a_aGV
  a_aGS
can_eq_nc
  [W] cobox_aU3 :: a_aGV ~ a_aGS
  a_aGV
  a_aGV
  a_aGS
  a_aGS
canEqTyVar
  a_aGV
  a_aGS
  Not-swapped
Following bound tyvar a_aGS = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aU3 :: a_aGV
                                 ~ Char [" a type equality [a_aGV]
                                                           ~
                                                           [a_aGS] " HTML3.hs:51:104-113] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGV := Char
  Coercion: a_aGV ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGV := Char
setEvBind
  ev = cobox_aU3
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aGV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
183[<C:0,F:0>] [W] cobox_aU3 :: a_aGV ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGX :: String
                                ~ [a_aGV] [" a type equality String
                                                             ~
                                                             [a_aGV] " HTML3.hs:51:104-106] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGX :: String
                                 ~ [a_aGV] [" a type equality String
                                                              ~
                                                              [a_aGV] " HTML3.hs:51:104-106] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGX :: String ~ [a_aGV] [" a type equality String
                                                       ~
                                                       [a_aGV] " HTML3.hs:51:104-106] (CNonCanonical)
canEvNC:eq
  String
  [a_aGV]
can_eq_nc
  [W] cobox_aGX :: String ~ [a_aGV]
  String
  String
  [a_aGV]
  [a_aGV]
can_eq_nc
  [W] cobox_aGX :: String ~ [a_aGV]
  [Char]
  String
  [a_aGV]
  [a_aGV]
newWantedEvVar/cache miss [W] cobox_aU4 :: Char ~ a_aGV
setEvBind
  ev = cobox_aGX
  tm  = CO [cobox_aU4]_N
canEvNC:eq
  Char
  a_aGV
can_eq_nc
  [W] cobox_aU4 :: Char ~ a_aGV
  Char
  Char
  a_aGV
  a_aGV
canEqTyVar
  a_aGV
  Char
  Is-swapped
Following bound tyvar a_aGV = Char
newWantedEvVar/cache miss [W] cobox_aU5 :: Char ~ Char
setEvBind
  ev = cobox_aU4
  tm  = CO Sym cobox_aU5
rewriteEqEvidence
  [W] cobox_aU4 :: Char ~ a_aGV
  Char
  Char
  Sym cobox_aU5
canEqTyVar2
  a_aGV
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aU5 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aU5
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aGY :: [Char]
                                ~ [a_aGV] [" a type equality [Char]
                                                             ~
                                                             [a_aGV] " HTML3.hs:51:111-113] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aGY :: [Char]
                                 ~ [a_aGV] [" a type equality [Char]
                                                              ~
                                                              [a_aGV] " HTML3.hs:51:111-113] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aGY :: [Char] ~ [a_aGV] [" a type equality [Char]
                                                       ~
                                                       [a_aGV] " HTML3.hs:51:111-113] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aGV]
can_eq_nc
  [W] cobox_aGY :: [Char] ~ [a_aGV]
  [Char]
  [Char]
  [a_aGV]
  [a_aGV]
newWantedEvVar/cache miss [W] cobox_aU6 :: Char ~ a_aGV
setEvBind
  ev = cobox_aGY
  tm  = CO [cobox_aU6]_N
canEvNC:eq
  Char
  a_aGV
can_eq_nc
  [W] cobox_aU6 :: Char ~ a_aGV
  Char
  Char
  a_aGV
  a_aGV
canEqTyVar
  a_aGV
  Char
  Is-swapped
Following bound tyvar a_aGV = Char
newWantedEvVar/cache miss [W] cobox_aU7 :: Char ~ Char
setEvBind
  ev = cobox_aU6
  tm  = CO Sym cobox_aU7
rewriteEqEvidence
  [W] cobox_aU6 :: Char ~ a_aGV
  Char
  Char
  Sym cobox_aU7
canEqTyVar2
  a_aGV
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aU7 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aU7
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aH1 :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML3.hs:52:37-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aH1 :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:52:37-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aH1 :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML3.hs:52:37-53] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aH1 :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aH1
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aH3 :: Int ~ a_aGZ [" a type equality Int
                                                               ~
                                                               a_aGZ " HTML3.hs:52:37-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aH3 :: Int ~ a_aGZ [" a type equality Int
                                                                ~
                                                                a_aGZ " HTML3.hs:52:37-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aH3 :: Int ~ a_aGZ [" a type equality Int
                                                  ~
                                                  a_aGZ " HTML3.hs:52:37-48] (CNonCanonical)
canEvNC:eq
  Int
  a_aGZ
can_eq_nc
  [W] cobox_aH3 :: Int ~ a_aGZ
  Int
  Int
  a_aGZ
  a_aGZ
canEqTyVar
  a_aGZ
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aU8 :: a_aGZ ~ Int
setEvBind
  ev = cobox_aH3
  tm  = CO Sym cobox_aU8
rewriteEqEvidence
  [W] cobox_aH3 :: Int ~ a_aGZ
  a_aGZ
  Int
  Sym cobox_aU8
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aU8 :: a_aGZ ~ Int [" a type equality Int
                                                                ~
                                                                a_aGZ " HTML3.hs:52:37-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_aGZ := Int
  Coercion: a_aGZ ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aGZ := Int
setEvBind
  ev = cobox_aU8
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aGZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
187[<C:0,F:0>] [W] cobox_aU8 :: a_aGZ ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aH4 :: [HTML]
                                ~ [a_aH2] [" a type equality [HTML]
                                                             ~
                                                             [a_aH2] " HTML3.hs:52:44-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aH4 :: [HTML]
                                 ~ [a_aH2] [" a type equality [HTML]
                                                              ~
                                                              [a_aH2] " HTML3.hs:52:44-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aH4 :: [HTML] ~ [a_aH2] [" a type equality [HTML]
                                                       ~
                                                       [a_aH2] " HTML3.hs:52:44-48] (CNonCanonical)
canEvNC:eq
  [HTML]
  [a_aH2]
can_eq_nc
  [W] cobox_aH4 :: [HTML] ~ [a_aH2]
  [HTML]
  [HTML]
  [a_aH2]
  [a_aH2]
newWantedEvVar/cache miss [W] cobox_aU9 :: HTML ~ a_aH2
setEvBind
  ev = cobox_aH4
  tm  = CO [cobox_aU9]_N
canEvNC:eq
  HTML
  a_aH2
can_eq_nc
  [W] cobox_aU9 :: HTML ~ a_aH2
  HTML
  HTML
  a_aH2
  a_aH2
canEqTyVar
  a_aH2
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aUa :: a_aH2 ~ HTML
setEvBind
  ev = cobox_aU9
  tm  = CO Sym cobox_aUa
rewriteEqEvidence
  [W] cobox_aU9 :: HTML ~ a_aH2
  a_aH2
  HTML
  Sym cobox_aUa
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUa :: a_aH2
                                 ~ HTML [" a type equality [HTML]
                                                           ~
                                                           [a_aH2] " HTML3.hs:52:44-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_aH2 := HTML
  Coercion: a_aH2 ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aH2 := HTML
setEvBind
  ev = cobox_aUa
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  a_aH2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
188[<C:0,F:0>] [W] cobox_aUa :: a_aH2 ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aH7 :: (Integer -> a_aH5)
                                ~ (Integer -> a_aGZ) [" a type equality Integer -> a_aH5
                                                                        ~
                                                                        Integer
                                                                        -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aH7 :: (Integer -> a_aH5)
                                 ~ (Integer -> a_aGZ) [" a type equality Integer -> a_aH5
                                                                         ~
                                                                         Integer
                                                                         -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aH7 :: (Integer -> a_aH5)
                   ~ (Integer -> a_aGZ) [" a type equality Integer -> a_aH5
                                                           ~
                                                           Integer
                                                           -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
canEvNC:eq
  Integer -> a_aH5
  Integer -> a_aGZ
can_eq_nc
  [W] cobox_aH7 :: (Integer -> a_aH5) ~ (Integer -> a_aGZ)
  Integer -> a_aH5
  Integer -> a_aH5
  Integer -> a_aGZ
  Integer -> a_aGZ
newWantedEvVar/cache miss [W] cobox_aUb :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aUc :: a_aH5 ~ a_aGZ
setEvBind
  ev = cobox_aH7
  tm  = CO cobox_aUb -> cobox_aUc
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aUb :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aUb
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aUc :: a_aH5
                                ~ a_aGZ [" a type equality Integer -> a_aH5
                                                           ~
                                                           Integer
                                                           -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aUc :: a_aH5
                                 ~ a_aGZ [" a type equality Integer -> a_aH5
                                                            ~
                                                            Integer
                                                            -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aUc :: a_aH5 ~ a_aGZ [" a type equality Integer -> a_aH5
                                                    ~
                                                    Integer
                                                    -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
canEvNC:eq
  a_aH5
  a_aGZ
can_eq_nc
  [W] cobox_aUc :: a_aH5 ~ a_aGZ
  a_aH5
  a_aH5
  a_aGZ
  a_aGZ
canEqTyVar
  a_aH5
  a_aGZ
  Not-swapped
Following bound tyvar a_aGZ = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUc :: a_aH5
                                 ~ Int [" a type equality Integer -> a_aH5
                                                          ~
                                                          Integer
                                                          -> a_aGZ " HTML3.hs:52:53] (CTyEqCan)
Sneaky unification:
  Unifies: a_aH5 := Int
  Coercion: a_aH5 ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aH5 := Int
setEvBind
  ev = cobox_aUc
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aH5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
190[<C:0,F:0>] [W] cobox_aUc :: a_aH5 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aH8 :: Doc ~ t_aD4 [" a type equality Doc
                                                               ~
                                                               t_aD4 " HTML3.hs:52:57-153] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aH8 :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:52:57-153] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aH8 :: Doc ~ t_aD4 [" a type equality Doc
                                                  ~
                                                  t_aD4 " HTML3.hs:52:57-153] (CNonCanonical)
canEvNC:eq
  Doc
  t_aD4
can_eq_nc
  [W] cobox_aH8 :: Doc ~ t_aD4
  Doc
  Doc
  t_aD4
  t_aD4
can_eq_nc
  [W] cobox_aH8 :: Doc ~ t_aD4
  [String]
  Doc
  t_aD4
  t_aD4
canEqTyVar
  t_aD4
  [String]
  Is-swapped
Following bound tyvar t_aD4 = Doc
newWantedEvVar/cache miss [W] cobox_aUd :: Doc ~ Doc
setEvBind
  ev = cobox_aH8
  tm  = CO Sym cobox_aUd
rewriteEqEvidence
  [W] cobox_aH8 :: Doc ~ t_aD4
  Doc
  Doc
  Sym cobox_aUd
canEqTyVar2
  t_aD4
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aUd :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aUd :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aUe :: String ~ String
setEvBind
  ev = cobox_aUd
  tm  = CO [cobox_aUe]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUe :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUe :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUe :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUf :: Char ~ Char
setEvBind
  ev = cobox_aUe
  tm  = CO [cobox_aUf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aH9 :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML3.hs:52:57-122] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aH9 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:57-122] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aH9 :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML3.hs:52:57-122] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aH9 :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aH9 :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aH9 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aUg :: String ~ String
setEvBind
  ev = cobox_aH9
  tm  = CO [cobox_aUg]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUg :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUg :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUg :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUh :: Char ~ Char
setEvBind
  ev = cobox_aUg
  tm  = CO [cobox_aUh]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHa :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML3.hs:52:57-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHa :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:57-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHa :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML3.hs:52:57-98] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aHa :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aHa :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aHa :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aUi :: String ~ String
setEvBind
  ev = cobox_aHa
  tm  = CO [cobox_aUi]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUi :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUi :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUi :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUj :: Char ~ Char
setEvBind
  ev = cobox_aUi
  tm  = CO [cobox_aUj]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUj :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUj
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHc :: [a_aHb]
                                ~ String [" a type equality [a_aHb]
                                                            ~
                                                            String " HTML3.hs:52:64-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHc :: [a_aHb]
                                 ~ String [" a type equality [a_aHb]
                                                             ~
                                                             String " HTML3.hs:52:64-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHc :: [a_aHb] ~ String [" a type equality [a_aHb]
                                                       ~
                                                       String " HTML3.hs:52:64-97] (CNonCanonical)
canEvNC:eq
  [a_aHb]
  String
can_eq_nc
  [W] cobox_aHc :: [a_aHb] ~ String
  [a_aHb]
  [a_aHb]
  String
  String
can_eq_nc
  [W] cobox_aHc :: [a_aHb] ~ String
  [a_aHb]
  [a_aHb]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUk :: a_aHb ~ Char
setEvBind
  ev = cobox_aHc
  tm  = CO [cobox_aUk]_N
canEvNC:eq
  a_aHb
  Char
can_eq_nc
  [W] cobox_aUk :: a_aHb ~ Char
  a_aHb
  a_aHb
  Char
  Char
canEqTyVar
  a_aHb
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUk :: a_aHb
                                 ~ Char [" a type equality [a_aHb]
                                                           ~
                                                           String " HTML3.hs:52:64-97] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHb := Char
  Coercion: a_aHb ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHb := Char
setEvBind
  ev = cobox_aUk
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aHb
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
194[<C:0,F:0>] [W] cobox_aUk :: a_aHb ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHd :: [Char]
                                ~ [a_aHb] [" a type equality [Char]
                                                             ~
                                                             [a_aHb] " HTML3.hs:52:64-66] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHd :: [Char]
                                 ~ [a_aHb] [" a type equality [Char]
                                                              ~
                                                              [a_aHb] " HTML3.hs:52:64-66] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHd :: [Char] ~ [a_aHb] [" a type equality [Char]
                                                       ~
                                                       [a_aHb] " HTML3.hs:52:64-66] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aHb]
can_eq_nc
  [W] cobox_aHd :: [Char] ~ [a_aHb]
  [Char]
  [Char]
  [a_aHb]
  [a_aHb]
newWantedEvVar/cache miss [W] cobox_aUl :: Char ~ a_aHb
setEvBind
  ev = cobox_aHd
  tm  = CO [cobox_aUl]_N
canEvNC:eq
  Char
  a_aHb
can_eq_nc
  [W] cobox_aUl :: Char ~ a_aHb
  Char
  Char
  a_aHb
  a_aHb
canEqTyVar
  a_aHb
  Char
  Is-swapped
Following bound tyvar a_aHb = Char
newWantedEvVar/cache miss [W] cobox_aUm :: Char ~ Char
setEvBind
  ev = cobox_aUl
  tm  = CO Sym cobox_aUm
rewriteEqEvidence
  [W] cobox_aUl :: Char ~ a_aHb
  Char
  Char
  Sym cobox_aUm
canEqTyVar2
  a_aHb
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aUm :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUm
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHf :: [a_aHe]
                                ~ [a_aHb] [" a type equality [a_aHe]
                                                             ~
                                                             [a_aHb] " HTML3.hs:52:71-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHf :: [a_aHe]
                                 ~ [a_aHb] [" a type equality [a_aHe]
                                                              ~
                                                              [a_aHb] " HTML3.hs:52:71-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHf :: [a_aHe] ~ [a_aHb] [" a type equality [a_aHe]
                                                        ~
                                                        [a_aHb] " HTML3.hs:52:71-97] (CNonCanonical)
canEvNC:eq
  [a_aHe]
  [a_aHb]
can_eq_nc
  [W] cobox_aHf :: [a_aHe] ~ [a_aHb]
  [a_aHe]
  [a_aHe]
  [a_aHb]
  [a_aHb]
newWantedEvVar/cache miss [W] cobox_aUn :: a_aHe ~ a_aHb
setEvBind
  ev = cobox_aHf
  tm  = CO [cobox_aUn]_N
canEvNC:eq
  a_aHe
  a_aHb
can_eq_nc
  [W] cobox_aUn :: a_aHe ~ a_aHb
  a_aHe
  a_aHe
  a_aHb
  a_aHb
canEqTyVar
  a_aHe
  a_aHb
  Not-swapped
Following bound tyvar a_aHb = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUn :: a_aHe
                                 ~ Char [" a type equality [a_aHe]
                                                           ~
                                                           [a_aHb] " HTML3.hs:52:71-97] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHe := Char
  Coercion: a_aHe ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHe := Char
setEvBind
  ev = cobox_aUn
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aHe
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
196[<C:0,F:0>] [W] cobox_aUn :: a_aHe ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHg :: String
                                ~ [a_aHe] [" a type equality String
                                                             ~
                                                             [a_aHe] " HTML3.hs:52:71-73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHg :: String
                                 ~ [a_aHe] [" a type equality String
                                                              ~
                                                              [a_aHe] " HTML3.hs:52:71-73] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHg :: String ~ [a_aHe] [" a type equality String
                                                       ~
                                                       [a_aHe] " HTML3.hs:52:71-73] (CNonCanonical)
canEvNC:eq
  String
  [a_aHe]
can_eq_nc
  [W] cobox_aHg :: String ~ [a_aHe]
  String
  String
  [a_aHe]
  [a_aHe]
can_eq_nc
  [W] cobox_aHg :: String ~ [a_aHe]
  [Char]
  String
  [a_aHe]
  [a_aHe]
newWantedEvVar/cache miss [W] cobox_aUo :: Char ~ a_aHe
setEvBind
  ev = cobox_aHg
  tm  = CO [cobox_aUo]_N
canEvNC:eq
  Char
  a_aHe
can_eq_nc
  [W] cobox_aUo :: Char ~ a_aHe
  Char
  Char
  a_aHe
  a_aHe
canEqTyVar
  a_aHe
  Char
  Is-swapped
Following bound tyvar a_aHe = Char
newWantedEvVar/cache miss [W] cobox_aUp :: Char ~ Char
setEvBind
  ev = cobox_aUo
  tm  = CO Sym cobox_aUp
rewriteEqEvidence
  [W] cobox_aUo :: Char ~ a_aHe
  Char
  Char
  Sym cobox_aUp
canEqTyVar2
  a_aHe
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aUp :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUp
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHi :: [a_aHh]
                                ~ [a_aHe] [" a type equality [a_aHh]
                                                             ~
                                                             [a_aHe] " HTML3.hs:52:78-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHi :: [a_aHh]
                                 ~ [a_aHe] [" a type equality [a_aHh]
                                                              ~
                                                              [a_aHe] " HTML3.hs:52:78-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHi :: [a_aHh] ~ [a_aHe] [" a type equality [a_aHh]
                                                        ~
                                                        [a_aHe] " HTML3.hs:52:78-97] (CNonCanonical)
canEvNC:eq
  [a_aHh]
  [a_aHe]
can_eq_nc
  [W] cobox_aHi :: [a_aHh] ~ [a_aHe]
  [a_aHh]
  [a_aHh]
  [a_aHe]
  [a_aHe]
newWantedEvVar/cache miss [W] cobox_aUq :: a_aHh ~ a_aHe
setEvBind
  ev = cobox_aHi
  tm  = CO [cobox_aUq]_N
canEvNC:eq
  a_aHh
  a_aHe
can_eq_nc
  [W] cobox_aUq :: a_aHh ~ a_aHe
  a_aHh
  a_aHh
  a_aHe
  a_aHe
canEqTyVar
  a_aHh
  a_aHe
  Not-swapped
Following bound tyvar a_aHe = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUq :: a_aHh
                                 ~ Char [" a type equality [a_aHh]
                                                           ~
                                                           [a_aHe] " HTML3.hs:52:78-97] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHh := Char
  Coercion: a_aHh ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHh := Char
setEvBind
  ev = cobox_aUq
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aHh
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
198[<C:0,F:0>] [W] cobox_aUq :: a_aHh ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHj :: t_aCW
                                ~ [a_aHh] [" a type equality t_aCW
                                                             ~
                                                             [a_aHh] " HTML3.hs:52:78-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHj :: t_aCW
                                 ~ [a_aHh] [" a type equality t_aCW
                                                              ~
                                                              [a_aHh] " HTML3.hs:52:78-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHj :: t_aCW ~ [a_aHh] [" a type equality t_aCW
                                                      ~
                                                      [a_aHh] " HTML3.hs:52:78-90] (CNonCanonical)
canEvNC:eq
  t_aCW
  [a_aHh]
can_eq_nc
  [W] cobox_aHj :: t_aCW ~ [a_aHh]
  t_aCW
  t_aCW
  [a_aHh]
  [a_aHh]
canEqTyVar
  t_aCW
  [a_aHh]
  Not-swapped
Following bound tyvar t_aCW = String
canEqTyVar2
  t_aCW
  [a_aHh]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aHj :: String ~ [a_aHh]
  String
  String
  [a_aHh]
  [a_aHh]
can_eq_nc
  [W] cobox_aHj :: String ~ [a_aHh]
  [Char]
  String
  [a_aHh]
  [a_aHh]
newWantedEvVar/cache miss [W] cobox_aUr :: Char ~ a_aHh
setEvBind
  ev = cobox_aHj
  tm  = CO [cobox_aUr]_N
canEvNC:eq
  Char
  a_aHh
can_eq_nc
  [W] cobox_aUr :: Char ~ a_aHh
  Char
  Char
  a_aHh
  a_aHh
canEqTyVar
  a_aHh
  Char
  Is-swapped
Following bound tyvar a_aHh = Char
newWantedEvVar/cache miss [W] cobox_aUs :: Char ~ Char
setEvBind
  ev = cobox_aUr
  tm  = CO Sym cobox_aUs
rewriteEqEvidence
  [W] cobox_aUr :: Char ~ a_aHh
  Char
  Char
  Sym cobox_aUs
canEqTyVar2
  a_aHh
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aUs :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUs
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHk :: [Attribute]
                                ~ t_aCV [" a type equality [Attribute]
                                                           ~
                                                           t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHk :: [Attribute]
                                 ~ t_aCV [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHk :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                          ~
                                                          t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
canEvNC:eq
  [Attribute]
  t_aCV
can_eq_nc
  [W] cobox_aHk :: [Attribute] ~ t_aCV
  [Attribute]
  [Attribute]
  t_aCV
  t_aCV
canEqTyVar
  t_aCV
  [Attribute]
  Is-swapped
Following bound tyvar t_aCV = [(String, String)]
newWantedEvVar/cache miss
  [W] cobox_aUt :: [(String, String)] ~ [Attribute]
setEvBind
  ev = cobox_aHk
  tm  = CO Sym cobox_aUt
rewriteEqEvidence
  [W] cobox_aHk :: [Attribute] ~ t_aCV
  [(String, String)]
  [Attribute]
  Sym cobox_aUt
canEqTyVar2
  t_aCV
  [Attribute]
  Is-swapped
  [(String, String)]
  <[(String, String)]>_N
can_eq_nc
  [W] cobox_aUt :: [(String, String)] ~ [Attribute]
  [(String, String)]
  [(String, String)]
  [Attribute]
  [Attribute]
newWantedEvVar/cache miss
  [W] cobox_aUu :: (String, String) ~ Attribute
setEvBind
  ev = cobox_aUt
  tm  = CO [cobox_aUu]_N
canEvNC:eq
  (String, String)
  Attribute
can_eq_nc
  [W] cobox_aUu :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aUu :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  (String, String)
  Attribute
newWantedEvVar/cache miss [W] cobox_aUv :: String ~ String
newWantedEvVar/cache miss [W] cobox_aUw :: String ~ String
setEvBind
  ev = cobox_aUu
  tm  = CO (cobox_aUv, cobox_aUw)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUv :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUv :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUv :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUx :: Char ~ Char
setEvBind
  ev = cobox_aUv
  tm  = CO [cobox_aUx]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUx :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUx
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aUw :: String
                                ~ String [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aUw :: String
                                 ~ String [" a type equality [Attribute]
                                                             ~
                                                             t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aUw :: String ~ String [" a type equality [Attribute]
                                                      ~
                                                      t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUw :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUw :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUw :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUy :: Char ~ Char
setEvBind
  ev = cobox_aUw
  tm  = CO [cobox_aUy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHl :: [Char]
                                ~ [a_aHh] [" a type equality [Char]
                                                             ~
                                                             [a_aHh] " HTML3.hs:52:95-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHl :: [Char]
                                 ~ [a_aHh] [" a type equality [Char]
                                                              ~
                                                              [a_aHh] " HTML3.hs:52:95-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHl :: [Char] ~ [a_aHh] [" a type equality [Char]
                                                       ~
                                                       [a_aHh] " HTML3.hs:52:95-97] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aHh]
can_eq_nc
  [W] cobox_aHl :: [Char] ~ [a_aHh]
  [Char]
  [Char]
  [a_aHh]
  [a_aHh]
newWantedEvVar/cache miss [W] cobox_aUz :: Char ~ a_aHh
setEvBind
  ev = cobox_aHl
  tm  = CO [cobox_aUz]_N
canEvNC:eq
  Char
  a_aHh
can_eq_nc
  [W] cobox_aUz :: Char ~ a_aHh
  Char
  Char
  a_aHh
  a_aHh
canEqTyVar
  a_aHh
  Char
  Is-swapped
Following bound tyvar a_aHh = Char
newWantedEvVar/cache miss [W] cobox_aUA :: Char ~ Char
setEvBind
  ev = cobox_aUz
  tm  = CO Sym cobox_aUA
rewriteEqEvidence
  [W] cobox_aUz :: Char ~ a_aHh
  Char
  Char
  Sym cobox_aUA
canEqTyVar2
  a_aHh
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aUA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHm :: t_aD4 ~ Doc [" a type equality t_aD4
                                                               ~
                                                               Doc " HTML3.hs:52:104-122] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHm :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                ~
                                                                Doc " HTML3.hs:52:104-122] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHm :: t_aD4 ~ Doc [" a type equality t_aD4
                                                  ~
                                                  Doc " HTML3.hs:52:104-122] (CNonCanonical)
canEvNC:eq
  t_aD4
  Doc
can_eq_nc
  [W] cobox_aHm :: t_aD4 ~ Doc
  t_aD4
  t_aD4
  Doc
  Doc
can_eq_nc
  [W] cobox_aHm :: t_aD4 ~ Doc
  t_aD4
  t_aD4
  [String]
  Doc
canEqTyVar
  t_aD4
  [String]
  Not-swapped
Following bound tyvar t_aD4 = Doc
canEqTyVar2
  t_aD4
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aHm :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aHm :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aUB :: String ~ String
setEvBind
  ev = cobox_aHm
  tm  = CO [cobox_aUB]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUB :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUB :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUB :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUC :: Char ~ Char
setEvBind
  ev = cobox_aUB
  tm  = CO [cobox_aUC]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUC :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUC
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHo :: a_aHn
                                ~ t_aD3 [" a type equality a_aHn
                                                           ~
                                                           t_aD3 " HTML3.hs:52:112-121] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHo :: a_aHn
                                 ~ t_aD3 [" a type equality a_aHn
                                                            ~
                                                            t_aD3 " HTML3.hs:52:112-121] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHo :: a_aHn ~ t_aD3 [" a type equality a_aHn
                                                    ~
                                                    t_aD3 " HTML3.hs:52:112-121] (CNonCanonical)
canEvNC:eq
  a_aHn
  t_aD3
can_eq_nc
  [W] cobox_aHo :: a_aHn ~ t_aD3
  a_aHn
  a_aHn
  t_aD3
  t_aD3
canEqTyVar
  a_aHn
  t_aD3
  Not-swapped
Following bound tyvar t_aD3 = HTML
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aHo :: a_aHn
                                 ~ HTML [" a type equality a_aHn
                                                           ~
                                                           t_aD3 " HTML3.hs:52:112-121] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHn := HTML
  Coercion: a_aHn ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHn := HTML
setEvBind
  ev = cobox_aHo
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  a_aHn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
204[<C:0,F:0>] [W] cobox_aHo :: a_aHn ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHp :: [HTML]
                                ~ [a_aHn] [" a type equality [HTML]
                                                             ~
                                                             [a_aHn] " HTML3.hs:52:117-121] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHp :: [HTML]
                                 ~ [a_aHn] [" a type equality [HTML]
                                                              ~
                                                              [a_aHn] " HTML3.hs:52:117-121] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHp :: [HTML] ~ [a_aHn] [" a type equality [HTML]
                                                       ~
                                                       [a_aHn] " HTML3.hs:52:117-121] (CNonCanonical)
canEvNC:eq
  [HTML]
  [a_aHn]
can_eq_nc
  [W] cobox_aHp :: [HTML] ~ [a_aHn]
  [HTML]
  [HTML]
  [a_aHn]
  [a_aHn]
newWantedEvVar/cache miss [W] cobox_aUD :: HTML ~ a_aHn
setEvBind
  ev = cobox_aHp
  tm  = CO [cobox_aUD]_N
canEvNC:eq
  HTML
  a_aHn
can_eq_nc
  [W] cobox_aUD :: HTML ~ a_aHn
  HTML
  HTML
  a_aHn
  a_aHn
canEqTyVar
  a_aHn
  HTML
  Is-swapped
Following bound tyvar a_aHn = HTML
newWantedEvVar/cache miss [W] cobox_aUE :: HTML ~ HTML
setEvBind
  ev = cobox_aUD
  tm  = CO Sym cobox_aUE
rewriteEqEvidence
  [W] cobox_aUD :: HTML ~ a_aHn
  HTML
  HTML
  Sym cobox_aUE
canEqTyVar2
  a_aHn
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aUE :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aUE
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHq :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML3.hs:52:128-153] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHq :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:52:128-153] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHq :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML3.hs:52:128-153] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aHq :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aHq :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aHq :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aUF :: String ~ String
setEvBind
  ev = cobox_aHq
  tm  = CO [cobox_aUF]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUF :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUF :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUF :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUG :: Char ~ Char
setEvBind
  ev = cobox_aUF
  tm  = CO [cobox_aUG]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUG :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUG
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHs :: [a_aHr]
                                ~ String [" a type equality [a_aHr]
                                                            ~
                                                            String " HTML3.hs:52:135-152] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHs :: [a_aHr]
                                 ~ String [" a type equality [a_aHr]
                                                             ~
                                                             String " HTML3.hs:52:135-152] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHs :: [a_aHr] ~ String [" a type equality [a_aHr]
                                                       ~
                                                       String " HTML3.hs:52:135-152] (CNonCanonical)
canEvNC:eq
  [a_aHr]
  String
can_eq_nc
  [W] cobox_aHs :: [a_aHr] ~ String
  [a_aHr]
  [a_aHr]
  String
  String
can_eq_nc
  [W] cobox_aHs :: [a_aHr] ~ String
  [a_aHr]
  [a_aHr]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUH :: a_aHr ~ Char
setEvBind
  ev = cobox_aHs
  tm  = CO [cobox_aUH]_N
canEvNC:eq
  a_aHr
  Char
can_eq_nc
  [W] cobox_aUH :: a_aHr ~ Char
  a_aHr
  a_aHr
  Char
  Char
canEqTyVar
  a_aHr
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUH :: a_aHr
                                 ~ Char [" a type equality [a_aHr]
                                                           ~
                                                           String " HTML3.hs:52:135-152] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHr := Char
  Coercion: a_aHr ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHr := Char
setEvBind
  ev = cobox_aUH
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aHr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
207[<C:0,F:0>] [W] cobox_aUH :: a_aHr ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHt :: [Char]
                                ~ [a_aHr] [" a type equality [Char]
                                                             ~
                                                             [a_aHr] " HTML3.hs:52:135-138] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHt :: [Char]
                                 ~ [a_aHr] [" a type equality [Char]
                                                              ~
                                                              [a_aHr] " HTML3.hs:52:135-138] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHt :: [Char] ~ [a_aHr] [" a type equality [Char]
                                                       ~
                                                       [a_aHr] " HTML3.hs:52:135-138] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aHr]
can_eq_nc
  [W] cobox_aHt :: [Char] ~ [a_aHr]
  [Char]
  [Char]
  [a_aHr]
  [a_aHr]
newWantedEvVar/cache miss [W] cobox_aUI :: Char ~ a_aHr
setEvBind
  ev = cobox_aHt
  tm  = CO [cobox_aUI]_N
canEvNC:eq
  Char
  a_aHr
can_eq_nc
  [W] cobox_aUI :: Char ~ a_aHr
  Char
  Char
  a_aHr
  a_aHr
canEqTyVar
  a_aHr
  Char
  Is-swapped
Following bound tyvar a_aHr = Char
newWantedEvVar/cache miss [W] cobox_aUJ :: Char ~ Char
setEvBind
  ev = cobox_aUI
  tm  = CO Sym cobox_aUJ
rewriteEqEvidence
  [W] cobox_aUI :: Char ~ a_aHr
  Char
  Char
  Sym cobox_aUJ
canEqTyVar2
  a_aHr
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aUJ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUJ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHv :: [a_aHu]
                                ~ [a_aHr] [" a type equality [a_aHu]
                                                             ~
                                                             [a_aHr] " HTML3.hs:52:143-152] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHv :: [a_aHu]
                                 ~ [a_aHr] [" a type equality [a_aHu]
                                                              ~
                                                              [a_aHr] " HTML3.hs:52:143-152] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHv :: [a_aHu] ~ [a_aHr] [" a type equality [a_aHu]
                                                        ~
                                                        [a_aHr] " HTML3.hs:52:143-152] (CNonCanonical)
canEvNC:eq
  [a_aHu]
  [a_aHr]
can_eq_nc
  [W] cobox_aHv :: [a_aHu] ~ [a_aHr]
  [a_aHu]
  [a_aHu]
  [a_aHr]
  [a_aHr]
newWantedEvVar/cache miss [W] cobox_aUK :: a_aHu ~ a_aHr
setEvBind
  ev = cobox_aHv
  tm  = CO [cobox_aUK]_N
canEvNC:eq
  a_aHu
  a_aHr
can_eq_nc
  [W] cobox_aUK :: a_aHu ~ a_aHr
  a_aHu
  a_aHu
  a_aHr
  a_aHr
canEqTyVar
  a_aHu
  a_aHr
  Not-swapped
Following bound tyvar a_aHr = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUK :: a_aHu
                                 ~ Char [" a type equality [a_aHu]
                                                           ~
                                                           [a_aHr] " HTML3.hs:52:143-152] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHu := Char
  Coercion: a_aHu ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHu := Char
setEvBind
  ev = cobox_aUK
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aHu
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
209[<C:0,F:0>] [W] cobox_aUK :: a_aHu ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHw :: String
                                ~ [a_aHu] [" a type equality String
                                                             ~
                                                             [a_aHu] " HTML3.hs:52:143-145] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHw :: String
                                 ~ [a_aHu] [" a type equality String
                                                              ~
                                                              [a_aHu] " HTML3.hs:52:143-145] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHw :: String ~ [a_aHu] [" a type equality String
                                                       ~
                                                       [a_aHu] " HTML3.hs:52:143-145] (CNonCanonical)
canEvNC:eq
  String
  [a_aHu]
can_eq_nc
  [W] cobox_aHw :: String ~ [a_aHu]
  String
  String
  [a_aHu]
  [a_aHu]
can_eq_nc
  [W] cobox_aHw :: String ~ [a_aHu]
  [Char]
  String
  [a_aHu]
  [a_aHu]
newWantedEvVar/cache miss [W] cobox_aUL :: Char ~ a_aHu
setEvBind
  ev = cobox_aHw
  tm  = CO [cobox_aUL]_N
canEvNC:eq
  Char
  a_aHu
can_eq_nc
  [W] cobox_aUL :: Char ~ a_aHu
  Char
  Char
  a_aHu
  a_aHu
canEqTyVar
  a_aHu
  Char
  Is-swapped
Following bound tyvar a_aHu = Char
newWantedEvVar/cache miss [W] cobox_aUM :: Char ~ Char
setEvBind
  ev = cobox_aUL
  tm  = CO Sym cobox_aUM
rewriteEqEvidence
  [W] cobox_aUL :: Char ~ a_aHu
  Char
  Char
  Sym cobox_aUM
canEqTyVar2
  a_aHu
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aUM :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUM
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHx :: [Char]
                                ~ [a_aHu] [" a type equality [Char]
                                                             ~
                                                             [a_aHu] " HTML3.hs:52:150-152] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHx :: [Char]
                                 ~ [a_aHu] [" a type equality [Char]
                                                              ~
                                                              [a_aHu] " HTML3.hs:52:150-152] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHx :: [Char] ~ [a_aHu] [" a type equality [Char]
                                                       ~
                                                       [a_aHu] " HTML3.hs:52:150-152] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aHu]
can_eq_nc
  [W] cobox_aHx :: [Char] ~ [a_aHu]
  [Char]
  [Char]
  [a_aHu]
  [a_aHu]
newWantedEvVar/cache miss [W] cobox_aUN :: Char ~ a_aHu
setEvBind
  ev = cobox_aHx
  tm  = CO [cobox_aUN]_N
canEvNC:eq
  Char
  a_aHu
can_eq_nc
  [W] cobox_aUN :: Char ~ a_aHu
  Char
  Char
  a_aHu
  a_aHu
canEqTyVar
  a_aHu
  Char
  Is-swapped
Following bound tyvar a_aHu = Char
newWantedEvVar/cache miss [W] cobox_aUO :: Char ~ Char
setEvBind
  ev = cobox_aUN
  tm  = CO Sym cobox_aUO
rewriteEqEvidence
  [W] cobox_aUN :: Char ~ a_aHu
  Char
  Char
  Sym cobox_aUO
canEqTyVar2
  a_aHu
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aUO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHy :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML3.hs:53:37-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHy :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:53:37-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHy :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML3.hs:53:37-45] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aHy :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aHy
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHz :: Doc ~ t_aD4 [" a type equality Doc
                                                               ~
                                                               t_aD4 " HTML3.hs:53:57-190] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHz :: Doc ~ t_aD4 [" a type equality Doc
                                                                ~
                                                                t_aD4 " HTML3.hs:53:57-190] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHz :: Doc ~ t_aD4 [" a type equality Doc
                                                  ~
                                                  t_aD4 " HTML3.hs:53:57-190] (CNonCanonical)
canEvNC:eq
  Doc
  t_aD4
can_eq_nc
  [W] cobox_aHz :: Doc ~ t_aD4
  Doc
  Doc
  t_aD4
  t_aD4
can_eq_nc
  [W] cobox_aHz :: Doc ~ t_aD4
  [String]
  Doc
  t_aD4
  t_aD4
canEqTyVar
  t_aD4
  [String]
  Is-swapped
Following bound tyvar t_aD4 = Doc
newWantedEvVar/cache miss [W] cobox_aUP :: Doc ~ Doc
setEvBind
  ev = cobox_aHz
  tm  = CO Sym cobox_aUP
rewriteEqEvidence
  [W] cobox_aHz :: Doc ~ t_aD4
  Doc
  Doc
  Sym cobox_aUP
canEqTyVar2
  t_aD4
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aUP :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aUP :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aUQ :: String ~ String
setEvBind
  ev = cobox_aUP
  tm  = CO [cobox_aUQ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUQ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUQ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUQ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUR :: Char ~ Char
setEvBind
  ev = cobox_aUQ
  tm  = CO [cobox_aUR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHA :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML3.hs:53:57-159] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHA :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:57-159] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHA :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML3.hs:53:57-159] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aHA :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aHA :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aHA :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aUS :: String ~ String
setEvBind
  ev = cobox_aHA
  tm  = CO [cobox_aUS]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUS :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUS :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUS :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUT :: Char ~ Char
setEvBind
  ev = cobox_aUS
  tm  = CO [cobox_aUT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHB :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML3.hs:53:57-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHB :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:57-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHB :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML3.hs:53:57-98] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aHB :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aHB :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aHB :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aUU :: String ~ String
setEvBind
  ev = cobox_aHB
  tm  = CO [cobox_aUU]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aUU :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aUU :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aUU :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUV :: Char ~ Char
setEvBind
  ev = cobox_aUU
  tm  = CO [cobox_aUV]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aUV :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUV
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHD :: [a_aHC]
                                ~ String [" a type equality [a_aHC]
                                                            ~
                                                            String " HTML3.hs:53:64-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHD :: [a_aHC]
                                 ~ String [" a type equality [a_aHC]
                                                             ~
                                                             String " HTML3.hs:53:64-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHD :: [a_aHC] ~ String [" a type equality [a_aHC]
                                                       ~
                                                       String " HTML3.hs:53:64-97] (CNonCanonical)
canEvNC:eq
  [a_aHC]
  String
can_eq_nc
  [W] cobox_aHD :: [a_aHC] ~ String
  [a_aHC]
  [a_aHC]
  String
  String
can_eq_nc
  [W] cobox_aHD :: [a_aHC] ~ String
  [a_aHC]
  [a_aHC]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aUW :: a_aHC ~ Char
setEvBind
  ev = cobox_aHD
  tm  = CO [cobox_aUW]_N
canEvNC:eq
  a_aHC
  Char
can_eq_nc
  [W] cobox_aUW :: a_aHC ~ Char
  a_aHC
  a_aHC
  Char
  Char
canEqTyVar
  a_aHC
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUW :: a_aHC
                                 ~ Char [" a type equality [a_aHC]
                                                           ~
                                                           String " HTML3.hs:53:64-97] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHC := Char
  Coercion: a_aHC ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHC := Char
setEvBind
  ev = cobox_aUW
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aHC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
216[<C:0,F:0>] [W] cobox_aUW :: a_aHC ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHE :: [Char]
                                ~ [a_aHC] [" a type equality [Char]
                                                             ~
                                                             [a_aHC] " HTML3.hs:53:64-66] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHE :: [Char]
                                 ~ [a_aHC] [" a type equality [Char]
                                                              ~
                                                              [a_aHC] " HTML3.hs:53:64-66] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHE :: [Char] ~ [a_aHC] [" a type equality [Char]
                                                       ~
                                                       [a_aHC] " HTML3.hs:53:64-66] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aHC]
can_eq_nc
  [W] cobox_aHE :: [Char] ~ [a_aHC]
  [Char]
  [Char]
  [a_aHC]
  [a_aHC]
newWantedEvVar/cache miss [W] cobox_aUX :: Char ~ a_aHC
setEvBind
  ev = cobox_aHE
  tm  = CO [cobox_aUX]_N
canEvNC:eq
  Char
  a_aHC
can_eq_nc
  [W] cobox_aUX :: Char ~ a_aHC
  Char
  Char
  a_aHC
  a_aHC
canEqTyVar
  a_aHC
  Char
  Is-swapped
Following bound tyvar a_aHC = Char
newWantedEvVar/cache miss [W] cobox_aUY :: Char ~ Char
setEvBind
  ev = cobox_aUX
  tm  = CO Sym cobox_aUY
rewriteEqEvidence
  [W] cobox_aUX :: Char ~ a_aHC
  Char
  Char
  Sym cobox_aUY
canEqTyVar2
  a_aHC
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aUY :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aUY
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHG :: [a_aHF]
                                ~ [a_aHC] [" a type equality [a_aHF]
                                                             ~
                                                             [a_aHC] " HTML3.hs:53:71-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHG :: [a_aHF]
                                 ~ [a_aHC] [" a type equality [a_aHF]
                                                              ~
                                                              [a_aHC] " HTML3.hs:53:71-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHG :: [a_aHF] ~ [a_aHC] [" a type equality [a_aHF]
                                                        ~
                                                        [a_aHC] " HTML3.hs:53:71-97] (CNonCanonical)
canEvNC:eq
  [a_aHF]
  [a_aHC]
can_eq_nc
  [W] cobox_aHG :: [a_aHF] ~ [a_aHC]
  [a_aHF]
  [a_aHF]
  [a_aHC]
  [a_aHC]
newWantedEvVar/cache miss [W] cobox_aUZ :: a_aHF ~ a_aHC
setEvBind
  ev = cobox_aHG
  tm  = CO [cobox_aUZ]_N
canEvNC:eq
  a_aHF
  a_aHC
can_eq_nc
  [W] cobox_aUZ :: a_aHF ~ a_aHC
  a_aHF
  a_aHF
  a_aHC
  a_aHC
canEqTyVar
  a_aHF
  a_aHC
  Not-swapped
Following bound tyvar a_aHC = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aUZ :: a_aHF
                                 ~ Char [" a type equality [a_aHF]
                                                           ~
                                                           [a_aHC] " HTML3.hs:53:71-97] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHF := Char
  Coercion: a_aHF ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHF := Char
setEvBind
  ev = cobox_aUZ
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aHF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
218[<C:0,F:0>] [W] cobox_aUZ :: a_aHF ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHH :: String
                                ~ [a_aHF] [" a type equality String
                                                             ~
                                                             [a_aHF] " HTML3.hs:53:71-73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHH :: String
                                 ~ [a_aHF] [" a type equality String
                                                              ~
                                                              [a_aHF] " HTML3.hs:53:71-73] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHH :: String ~ [a_aHF] [" a type equality String
                                                       ~
                                                       [a_aHF] " HTML3.hs:53:71-73] (CNonCanonical)
canEvNC:eq
  String
  [a_aHF]
can_eq_nc
  [W] cobox_aHH :: String ~ [a_aHF]
  String
  String
  [a_aHF]
  [a_aHF]
can_eq_nc
  [W] cobox_aHH :: String ~ [a_aHF]
  [Char]
  String
  [a_aHF]
  [a_aHF]
newWantedEvVar/cache miss [W] cobox_aV0 :: Char ~ a_aHF
setEvBind
  ev = cobox_aHH
  tm  = CO [cobox_aV0]_N
canEvNC:eq
  Char
  a_aHF
can_eq_nc
  [W] cobox_aV0 :: Char ~ a_aHF
  Char
  Char
  a_aHF
  a_aHF
canEqTyVar
  a_aHF
  Char
  Is-swapped
Following bound tyvar a_aHF = Char
newWantedEvVar/cache miss [W] cobox_aV1 :: Char ~ Char
setEvBind
  ev = cobox_aV0
  tm  = CO Sym cobox_aV1
rewriteEqEvidence
  [W] cobox_aV0 :: Char ~ a_aHF
  Char
  Char
  Sym cobox_aV1
canEqTyVar2
  a_aHF
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aV1 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aV1
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHJ :: [a_aHI]
                                ~ [a_aHF] [" a type equality [a_aHI]
                                                             ~
                                                             [a_aHF] " HTML3.hs:53:78-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHJ :: [a_aHI]
                                 ~ [a_aHF] [" a type equality [a_aHI]
                                                              ~
                                                              [a_aHF] " HTML3.hs:53:78-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHJ :: [a_aHI] ~ [a_aHF] [" a type equality [a_aHI]
                                                        ~
                                                        [a_aHF] " HTML3.hs:53:78-97] (CNonCanonical)
canEvNC:eq
  [a_aHI]
  [a_aHF]
can_eq_nc
  [W] cobox_aHJ :: [a_aHI] ~ [a_aHF]
  [a_aHI]
  [a_aHI]
  [a_aHF]
  [a_aHF]
newWantedEvVar/cache miss [W] cobox_aV2 :: a_aHI ~ a_aHF
setEvBind
  ev = cobox_aHJ
  tm  = CO [cobox_aV2]_N
canEvNC:eq
  a_aHI
  a_aHF
can_eq_nc
  [W] cobox_aV2 :: a_aHI ~ a_aHF
  a_aHI
  a_aHI
  a_aHF
  a_aHF
canEqTyVar
  a_aHI
  a_aHF
  Not-swapped
Following bound tyvar a_aHF = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aV2 :: a_aHI
                                 ~ Char [" a type equality [a_aHI]
                                                           ~
                                                           [a_aHF] " HTML3.hs:53:78-97] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHI := Char
  Coercion: a_aHI ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHI := Char
setEvBind
  ev = cobox_aV2
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aHI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
220[<C:0,F:0>] [W] cobox_aV2 :: a_aHI ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHK :: t_aCW
                                ~ [a_aHI] [" a type equality t_aCW
                                                             ~
                                                             [a_aHI] " HTML3.hs:53:78-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHK :: t_aCW
                                 ~ [a_aHI] [" a type equality t_aCW
                                                              ~
                                                              [a_aHI] " HTML3.hs:53:78-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHK :: t_aCW ~ [a_aHI] [" a type equality t_aCW
                                                      ~
                                                      [a_aHI] " HTML3.hs:53:78-90] (CNonCanonical)
canEvNC:eq
  t_aCW
  [a_aHI]
can_eq_nc
  [W] cobox_aHK :: t_aCW ~ [a_aHI]
  t_aCW
  t_aCW
  [a_aHI]
  [a_aHI]
canEqTyVar
  t_aCW
  [a_aHI]
  Not-swapped
Following bound tyvar t_aCW = String
canEqTyVar2
  t_aCW
  [a_aHI]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aHK :: String ~ [a_aHI]
  String
  String
  [a_aHI]
  [a_aHI]
can_eq_nc
  [W] cobox_aHK :: String ~ [a_aHI]
  [Char]
  String
  [a_aHI]
  [a_aHI]
newWantedEvVar/cache miss [W] cobox_aV3 :: Char ~ a_aHI
setEvBind
  ev = cobox_aHK
  tm  = CO [cobox_aV3]_N
canEvNC:eq
  Char
  a_aHI
can_eq_nc
  [W] cobox_aV3 :: Char ~ a_aHI
  Char
  Char
  a_aHI
  a_aHI
canEqTyVar
  a_aHI
  Char
  Is-swapped
Following bound tyvar a_aHI = Char
newWantedEvVar/cache miss [W] cobox_aV4 :: Char ~ Char
setEvBind
  ev = cobox_aV3
  tm  = CO Sym cobox_aV4
rewriteEqEvidence
  [W] cobox_aV3 :: Char ~ a_aHI
  Char
  Char
  Sym cobox_aV4
canEqTyVar2
  a_aHI
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aV4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aV4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHL :: [Attribute]
                                ~ t_aCV [" a type equality [Attribute]
                                                           ~
                                                           t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHL :: [Attribute]
                                 ~ t_aCV [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHL :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                          ~
                                                          t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
canEvNC:eq
  [Attribute]
  t_aCV
can_eq_nc
  [W] cobox_aHL :: [Attribute] ~ t_aCV
  [Attribute]
  [Attribute]
  t_aCV
  t_aCV
canEqTyVar
  t_aCV
  [Attribute]
  Is-swapped
Following bound tyvar t_aCV = [(String, String)]
newWantedEvVar/cache miss
  [W] cobox_aV5 :: [(String, String)] ~ [Attribute]
setEvBind
  ev = cobox_aHL
  tm  = CO Sym cobox_aV5
rewriteEqEvidence
  [W] cobox_aHL :: [Attribute] ~ t_aCV
  [(String, String)]
  [Attribute]
  Sym cobox_aV5
canEqTyVar2
  t_aCV
  [Attribute]
  Is-swapped
  [(String, String)]
  <[(String, String)]>_N
can_eq_nc
  [W] cobox_aV5 :: [(String, String)] ~ [Attribute]
  [(String, String)]
  [(String, String)]
  [Attribute]
  [Attribute]
newWantedEvVar/cache miss
  [W] cobox_aV6 :: (String, String) ~ Attribute
setEvBind
  ev = cobox_aV5
  tm  = CO [cobox_aV6]_N
canEvNC:eq
  (String, String)
  Attribute
can_eq_nc
  [W] cobox_aV6 :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  Attribute
  Attribute
can_eq_nc
  [W] cobox_aV6 :: (String, String) ~ Attribute
  (String, String)
  (String, String)
  (String, String)
  Attribute
newWantedEvVar/cache miss [W] cobox_aV7 :: String ~ String
newWantedEvVar/cache miss [W] cobox_aV8 :: String ~ String
setEvBind
  ev = cobox_aV6
  tm  = CO (cobox_aV7, cobox_aV8)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aV7 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aV7 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aV7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aV9 :: Char ~ Char
setEvBind
  ev = cobox_aV7
  tm  = CO [cobox_aV9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aV9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aV9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aV8 :: String
                                ~ String [" a type equality [Attribute]
                                                            ~
                                                            t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aV8 :: String
                                 ~ String [" a type equality [Attribute]
                                                             ~
                                                             t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aV8 :: String ~ String [" a type equality [Attribute]
                                                      ~
                                                      t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aV8 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aV8 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aV8 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aVa :: Char ~ Char
setEvBind
  ev = cobox_aV8
  tm  = CO [cobox_aVa]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aVa :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVa
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHM :: [Char]
                                ~ [a_aHI] [" a type equality [Char]
                                                             ~
                                                             [a_aHI] " HTML3.hs:53:95-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHM :: [Char]
                                 ~ [a_aHI] [" a type equality [Char]
                                                              ~
                                                              [a_aHI] " HTML3.hs:53:95-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHM :: [Char] ~ [a_aHI] [" a type equality [Char]
                                                       ~
                                                       [a_aHI] " HTML3.hs:53:95-97] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aHI]
can_eq_nc
  [W] cobox_aHM :: [Char] ~ [a_aHI]
  [Char]
  [Char]
  [a_aHI]
  [a_aHI]
newWantedEvVar/cache miss [W] cobox_aVb :: Char ~ a_aHI
setEvBind
  ev = cobox_aHM
  tm  = CO [cobox_aVb]_N
canEvNC:eq
  Char
  a_aHI
can_eq_nc
  [W] cobox_aVb :: Char ~ a_aHI
  Char
  Char
  a_aHI
  a_aHI
canEqTyVar
  a_aHI
  Char
  Is-swapped
Following bound tyvar a_aHI = Char
newWantedEvVar/cache miss [W] cobox_aVc :: Char ~ Char
setEvBind
  ev = cobox_aVb
  tm  = CO Sym cobox_aVc
rewriteEqEvidence
  [W] cobox_aVb :: Char ~ a_aHI
  Char
  Char
  Sym cobox_aVc
canEqTyVar2
  a_aHI
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aVc :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVc
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                               ~
                                                               Doc " HTML3.hs:53:105-158] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                                ~
                                                                Doc " HTML3.hs:53:105-158] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                  ~
                                                  Doc " HTML3.hs:53:105-158] (CNonCanonical)
canEvNC:eq
  b_aHO
  Doc
can_eq_nc
  [W] cobox_aHP :: b_aHO ~ Doc
  b_aHO
  b_aHO
  Doc
  Doc
can_eq_nc
  [W] cobox_aHP :: b_aHO ~ Doc
  b_aHO
  b_aHO
  [String]
  Doc
canEqTyVar
  b_aHO
  [String]
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                                ~
                                                                Doc " HTML3.hs:53:105-158] (CTyEqCan)
Sneaky unification:
  Unifies: b_aHO := Doc
  Coercion: b_aHO ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aHO := Doc
setEvBind
  ev = cobox_aHP
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  b_aHO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
225[<C:0,F:0>] [W] cobox_aHP :: b_aHO ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHQ :: (Doc -> Doc -> Doc)
                                ~ (a_aHN -> b_aHO -> b_aHO) [" a type equality Doc -> Doc -> Doc
                                                                               ~
                                                                               a_aHN
                                                                               -> b_aHO
                                                                               -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHQ :: (Doc -> Doc -> Doc)
                                 ~ (a_aHN -> b_aHO -> b_aHO) [" a type equality Doc -> Doc -> Doc
                                                                                ~
                                                                                a_aHN
                                                                                -> b_aHO
                                                                                -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHQ :: (Doc -> Doc -> Doc)
                   ~ (a_aHN -> b_aHO -> b_aHO) [" a type equality Doc -> Doc -> Doc
                                                                  ~
                                                                  a_aHN
                                                                  -> b_aHO
                                                                  -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
canEvNC:eq
  Doc -> Doc -> Doc
  a_aHN -> b_aHO -> b_aHO
can_eq_nc
  [W] cobox_aHQ :: (Doc -> Doc -> Doc) ~ (a_aHN -> b_aHO -> b_aHO)
  Doc -> Doc -> Doc
  Doc -> Doc -> Doc
  a_aHN -> b_aHO -> b_aHO
  a_aHN -> b_aHO -> b_aHO
newWantedEvVar/cache miss [W] cobox_aVd :: Doc ~ a_aHN
newWantedEvVar/cache miss
  [W] cobox_aVe :: (Doc -> Doc) ~ (b_aHO -> b_aHO)
setEvBind
  ev = cobox_aHQ
  tm  = CO cobox_aVd -> cobox_aVe
canEvNC:eq
  Doc
  a_aHN
can_eq_nc
  [W] cobox_aVd :: Doc ~ a_aHN
  Doc
  Doc
  a_aHN
  a_aHN
can_eq_nc
  [W] cobox_aVd :: Doc ~ a_aHN
  [String]
  Doc
  a_aHN
  a_aHN
canEqTyVar
  a_aHN
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aVf :: a_aHN ~ Doc
setEvBind
  ev = cobox_aVd
  tm  = CO Sym cobox_aVf
rewriteEqEvidence
  [W] cobox_aVd :: Doc ~ a_aHN
  a_aHN
  Doc
  Sym cobox_aVf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVf :: a_aHN ~ Doc [" a type equality Doc
                                                                -> Doc -> Doc
                                                                ~
                                                                a_aHN
                                                                -> b_aHO
                                                                -> b_aHO " HTML3.hs:53:111-115] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHN := Doc
  Coercion: a_aHN ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHN := Doc
setEvBind
  ev = cobox_aVf
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  a_aHN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
226[<C:0,F:0>] [W] cobox_aVf :: a_aHN ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aVe :: (Doc -> Doc)
                                ~ (b_aHO -> b_aHO) [" a type equality Doc -> Doc -> Doc
                                                                      ~
                                                                      a_aHN
                                                                      -> b_aHO
                                                                      -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aVe :: (Doc -> Doc)
                                 ~ (b_aHO -> b_aHO) [" a type equality Doc -> Doc -> Doc
                                                                       ~
                                                                       a_aHN
                                                                       -> b_aHO
                                                                       -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aVe :: (Doc -> Doc)
                   ~ (b_aHO -> b_aHO) [" a type equality Doc -> Doc -> Doc
                                                         ~
                                                         a_aHN
                                                         -> b_aHO
                                                         -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
canEvNC:eq
  Doc -> Doc
  b_aHO -> b_aHO
can_eq_nc
  [W] cobox_aVe :: (Doc -> Doc) ~ (b_aHO -> b_aHO)
  Doc -> Doc
  Doc -> Doc
  b_aHO -> b_aHO
  b_aHO -> b_aHO
newWantedEvVar/cache miss [W] cobox_aVg :: Doc ~ b_aHO
newWantedEvVar/cache miss [W] cobox_aVh :: Doc ~ b_aHO
setEvBind
  ev = cobox_aVe
  tm  = CO cobox_aVg -> cobox_aVh
canEvNC:eq
  Doc
  b_aHO
can_eq_nc
  [W] cobox_aVg :: Doc ~ b_aHO
  Doc
  Doc
  b_aHO
  b_aHO
can_eq_nc
  [W] cobox_aVg :: Doc ~ b_aHO
  [String]
  Doc
  b_aHO
  b_aHO
canEqTyVar
  b_aHO
  [String]
  Is-swapped
Following bound tyvar b_aHO = Doc
newWantedEvVar/cache miss [W] cobox_aVi :: Doc ~ Doc
setEvBind
  ev = cobox_aVg
  tm  = CO Sym cobox_aVi
rewriteEqEvidence
  [W] cobox_aVg :: Doc ~ b_aHO
  Doc
  Doc
  Sym cobox_aVi
canEqTyVar2
  b_aHO
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aVi :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aVi :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aVj :: String ~ String
setEvBind
  ev = cobox_aVi
  tm  = CO [cobox_aVj]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aVj :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aVj :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aVj :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aVk :: Char ~ Char
setEvBind
  ev = cobox_aVj
  tm  = CO [cobox_aVk]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aVk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aVh :: Doc ~ b_aHO [" a type equality Doc
                                                               -> Doc -> Doc
                                                               ~
                                                               a_aHN
                                                               -> b_aHO
                                                               -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aVh :: Doc ~ b_aHO [" a type equality Doc
                                                                -> Doc -> Doc
                                                                ~
                                                                a_aHN
                                                                -> b_aHO
                                                                -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aVh :: Doc ~ b_aHO [" a type equality Doc -> Doc -> Doc
                                                  ~
                                                  a_aHN
                                                  -> b_aHO
                                                  -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
canEvNC:eq
  Doc
  b_aHO
can_eq_nc
  [W] cobox_aVh :: Doc ~ b_aHO
  Doc
  Doc
  b_aHO
  b_aHO
can_eq_nc
  [W] cobox_aVh :: Doc ~ b_aHO
  [String]
  Doc
  b_aHO
  b_aHO
canEqTyVar
  b_aHO
  [String]
  Is-swapped
Following bound tyvar b_aHO = Doc
newWantedEvVar/cache miss [W] cobox_aVl :: Doc ~ Doc
setEvBind
  ev = cobox_aVh
  tm  = CO Sym cobox_aVl
rewriteEqEvidence
  [W] cobox_aVh :: Doc ~ b_aHO
  Doc
  Doc
  Sym cobox_aVl
canEqTyVar2
  b_aHO
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aVl :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aVl :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aVm :: String ~ String
setEvBind
  ev = cobox_aVl
  tm  = CO [cobox_aVm]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aVm :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aVm :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aVm :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aVn :: Char ~ Char
setEvBind
  ev = cobox_aVm
  tm  = CO [cobox_aVn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aVn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHR :: Doc ~ b_aHO [" a type equality Doc
                                                               ~
                                                               b_aHO " HTML3.hs:53:117-120] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHR :: Doc ~ b_aHO [" a type equality Doc
                                                                ~
                                                                b_aHO " HTML3.hs:53:117-120] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHR :: Doc ~ b_aHO [" a type equality Doc
                                                  ~
                                                  b_aHO " HTML3.hs:53:117-120] (CNonCanonical)
canEvNC:eq
  Doc
  b_aHO
can_eq_nc
  [W] cobox_aHR :: Doc ~ b_aHO
  Doc
  Doc
  b_aHO
  b_aHO
can_eq_nc
  [W] cobox_aHR :: Doc ~ b_aHO
  [String]
  Doc
  b_aHO
  b_aHO
canEqTyVar
  b_aHO
  [String]
  Is-swapped
Following bound tyvar b_aHO = Doc
newWantedEvVar/cache miss [W] cobox_aVo :: Doc ~ Doc
setEvBind
  ev = cobox_aHR
  tm  = CO Sym cobox_aVo
rewriteEqEvidence
  [W] cobox_aHR :: Doc ~ b_aHO
  Doc
  Doc
  Sym cobox_aVo
canEqTyVar2
  b_aHO
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aVo :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aVo :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aVp :: String ~ String
setEvBind
  ev = cobox_aVo
  tm  = CO [cobox_aVp]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aVp :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aVp :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aVp :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aVq :: Char ~ Char
setEvBind
  ev = cobox_aVp
  tm  = CO [cobox_aVq]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aVq :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVq
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHU :: [b_aHT]
                                ~ [a_aHN] [" a type equality [b_aHT]
                                                             ~
                                                             [a_aHN] " HTML3.hs:53:123-157] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHU :: [b_aHT]
                                 ~ [a_aHN] [" a type equality [b_aHT]
                                                              ~
                                                              [a_aHN] " HTML3.hs:53:123-157] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHU :: [b_aHT] ~ [a_aHN] [" a type equality [b_aHT]
                                                        ~
                                                        [a_aHN] " HTML3.hs:53:123-157] (CNonCanonical)
canEvNC:eq
  [b_aHT]
  [a_aHN]
can_eq_nc
  [W] cobox_aHU :: [b_aHT] ~ [a_aHN]
  [b_aHT]
  [b_aHT]
  [a_aHN]
  [a_aHN]
newWantedEvVar/cache miss [W] cobox_aVr :: b_aHT ~ a_aHN
setEvBind
  ev = cobox_aHU
  tm  = CO [cobox_aVr]_N
canEvNC:eq
  b_aHT
  a_aHN
can_eq_nc
  [W] cobox_aVr :: b_aHT ~ a_aHN
  b_aHT
  b_aHT
  a_aHN
  a_aHN
canEqTyVar
  b_aHT
  a_aHN
  Not-swapped
Following bound tyvar a_aHN = Doc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVr :: b_aHT
                                 ~ Doc [" a type equality [b_aHT]
                                                          ~
                                                          [a_aHN] " HTML3.hs:53:123-157] (CTyEqCan)
Sneaky unification:
  Unifies: b_aHT := Doc
  Coercion: b_aHT ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aHT := Doc
setEvBind
  ev = cobox_aVr
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  b_aHT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
230[<C:0,F:0>] [W] cobox_aVr :: b_aHT ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHV :: (Doc -> Doc)
                                ~ (a_aHS -> b_aHT) [" a type equality Doc -> Doc
                                                                      ~
                                                                      a_aHS
                                                                      -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHV :: (Doc -> Doc)
                                 ~ (a_aHS -> b_aHT) [" a type equality Doc -> Doc
                                                                       ~
                                                                       a_aHS
                                                                       -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHV :: (Doc -> Doc)
                   ~ (a_aHS -> b_aHT) [" a type equality Doc -> Doc
                                                         ~
                                                         a_aHS
                                                         -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
canEvNC:eq
  Doc -> Doc
  a_aHS -> b_aHT
can_eq_nc
  [W] cobox_aHV :: (Doc -> Doc) ~ (a_aHS -> b_aHT)
  Doc -> Doc
  Doc -> Doc
  a_aHS -> b_aHT
  a_aHS -> b_aHT
newWantedEvVar/cache miss [W] cobox_aVs :: Doc ~ a_aHS
newWantedEvVar/cache miss [W] cobox_aVt :: Doc ~ b_aHT
setEvBind
  ev = cobox_aHV
  tm  = CO cobox_aVs -> cobox_aVt
canEvNC:eq
  Doc
  a_aHS
can_eq_nc
  [W] cobox_aVs :: Doc ~ a_aHS
  Doc
  Doc
  a_aHS
  a_aHS
can_eq_nc
  [W] cobox_aVs :: Doc ~ a_aHS
  [String]
  Doc
  a_aHS
  a_aHS
canEqTyVar
  a_aHS
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aVu :: a_aHS ~ Doc
setEvBind
  ev = cobox_aVs
  tm  = CO Sym cobox_aVu
rewriteEqEvidence
  [W] cobox_aVs :: Doc ~ a_aHS
  a_aHS
  Doc
  Sym cobox_aVu
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVu :: a_aHS ~ Doc [" a type equality Doc
                                                                -> Doc
                                                                ~
                                                                a_aHS
                                                                -> b_aHT " HTML3.hs:53:128-137] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHS := Doc
  Coercion: a_aHS ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHS := Doc
setEvBind
  ev = cobox_aVu
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  a_aHS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
231[<C:0,F:0>] [W] cobox_aVu :: a_aHS ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aVt :: Doc ~ b_aHT [" a type equality Doc
                                                               -> Doc
                                                               ~
                                                               a_aHS
                                                               -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aVt :: Doc ~ b_aHT [" a type equality Doc
                                                                -> Doc
                                                                ~
                                                                a_aHS
                                                                -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aVt :: Doc ~ b_aHT [" a type equality Doc -> Doc
                                                  ~
                                                  a_aHS
                                                  -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
canEvNC:eq
  Doc
  b_aHT
can_eq_nc
  [W] cobox_aVt :: Doc ~ b_aHT
  Doc
  Doc
  b_aHT
  b_aHT
can_eq_nc
  [W] cobox_aVt :: Doc ~ b_aHT
  [String]
  Doc
  b_aHT
  b_aHT
canEqTyVar
  b_aHT
  [String]
  Is-swapped
Following bound tyvar b_aHT = Doc
newWantedEvVar/cache miss [W] cobox_aVv :: Doc ~ Doc
setEvBind
  ev = cobox_aVt
  tm  = CO Sym cobox_aVv
rewriteEqEvidence
  [W] cobox_aVt :: Doc ~ b_aHT
  Doc
  Doc
  Sym cobox_aVv
canEqTyVar2
  b_aHT
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aVv :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aVv :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aVw :: String ~ String
setEvBind
  ev = cobox_aVv
  tm  = CO [cobox_aVw]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aVw :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aVw :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aVw :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aVx :: Char ~ Char
setEvBind
  ev = cobox_aVw
  tm  = CO [cobox_aVx]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aVx :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVx
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHY :: [b_aHX]
                                ~ [a_aHS] [" a type equality [b_aHX]
                                                             ~
                                                             [a_aHS] " HTML3.hs:53:141-156] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHY :: [b_aHX]
                                 ~ [a_aHS] [" a type equality [b_aHX]
                                                              ~
                                                              [a_aHS] " HTML3.hs:53:141-156] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHY :: [b_aHX] ~ [a_aHS] [" a type equality [b_aHX]
                                                        ~
                                                        [a_aHS] " HTML3.hs:53:141-156] (CNonCanonical)
canEvNC:eq
  [b_aHX]
  [a_aHS]
can_eq_nc
  [W] cobox_aHY :: [b_aHX] ~ [a_aHS]
  [b_aHX]
  [b_aHX]
  [a_aHS]
  [a_aHS]
newWantedEvVar/cache miss [W] cobox_aVy :: b_aHX ~ a_aHS
setEvBind
  ev = cobox_aHY
  tm  = CO [cobox_aVy]_N
canEvNC:eq
  b_aHX
  a_aHS
can_eq_nc
  [W] cobox_aVy :: b_aHX ~ a_aHS
  b_aHX
  b_aHX
  a_aHS
  a_aHS
canEqTyVar
  b_aHX
  a_aHS
  Not-swapped
Following bound tyvar a_aHS = Doc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVy :: b_aHX
                                 ~ Doc [" a type equality [b_aHX]
                                                          ~
                                                          [a_aHS] " HTML3.hs:53:141-156] (CTyEqCan)
Sneaky unification:
  Unifies: b_aHX := Doc
  Coercion: b_aHX ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aHX := Doc
setEvBind
  ev = cobox_aVy
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  b_aHX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
233[<C:0,F:0>] [W] cobox_aVy :: b_aHX ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aHZ :: (t_aD3 -> t_aD4)
                                ~ (a_aHW -> b_aHX) [" a type equality t_aD3 -> t_aD4
                                                                      ~
                                                                      a_aHW
                                                                      -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aHZ :: (t_aD3 -> t_aD4)
                                 ~ (a_aHW -> b_aHX) [" a type equality t_aD3 -> t_aD4
                                                                       ~
                                                                       a_aHW
                                                                       -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aHZ :: (t_aD3 -> t_aD4)
                   ~ (a_aHW -> b_aHX) [" a type equality t_aD3 -> t_aD4
                                                         ~
                                                         a_aHW
                                                         -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
canEvNC:eq
  t_aD3 -> t_aD4
  a_aHW -> b_aHX
can_eq_nc
  [W] cobox_aHZ :: (t_aD3 -> t_aD4) ~ (a_aHW -> b_aHX)
  t_aD3 -> t_aD4
  t_aD3 -> t_aD4
  a_aHW -> b_aHX
  a_aHW -> b_aHX
newWantedEvVar/cache miss [W] cobox_aVz :: t_aD3 ~ a_aHW
newWantedEvVar/cache miss [W] cobox_aVA :: t_aD4 ~ b_aHX
setEvBind
  ev = cobox_aHZ
  tm  = CO cobox_aVz -> cobox_aVA
canEvNC:eq
  t_aD3
  a_aHW
can_eq_nc
  [W] cobox_aVz :: t_aD3 ~ a_aHW
  t_aD3
  t_aD3
  a_aHW
  a_aHW
canEqTyVar
  t_aD3
  a_aHW
  Not-swapped
Following bound tyvar t_aD3 = HTML
canEqTyVar2
  t_aD3
  a_aHW
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aVz :: HTML ~ a_aHW
  HTML
  HTML
  a_aHW
  a_aHW
canEqTyVar
  a_aHW
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aVB :: a_aHW ~ HTML
setEvBind
  ev = cobox_aVz
  tm  = CO Sym cobox_aVB
rewriteEqEvidence
  [W] cobox_aVz :: HTML ~ a_aHW
  a_aHW
  HTML
  Sym cobox_aVB
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVB :: a_aHW
                                 ~ HTML [" a type equality t_aD3 -> t_aD4
                                                           ~
                                                           a_aHW
                                                           -> b_aHX " HTML3.hs:53:145-150] (CTyEqCan)
Sneaky unification:
  Unifies: a_aHW := HTML
  Coercion: a_aHW ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aHW := HTML
setEvBind
  ev = cobox_aVB
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  a_aHW
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
234[<C:0,F:0>] [W] cobox_aVB :: a_aHW ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aVA :: t_aD4
                                ~ b_aHX [" a type equality t_aD3 -> t_aD4
                                                           ~
                                                           a_aHW
                                                           -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aVA :: t_aD4
                                 ~ b_aHX [" a type equality t_aD3 -> t_aD4
                                                            ~
                                                            a_aHW
                                                            -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aVA :: t_aD4 ~ b_aHX [" a type equality t_aD3 -> t_aD4
                                                    ~
                                                    a_aHW
                                                    -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
canEvNC:eq
  t_aD4
  b_aHX
can_eq_nc
  [W] cobox_aVA :: t_aD4 ~ b_aHX
  t_aD4
  t_aD4
  b_aHX
  b_aHX
canEqTyVar
  t_aD4
  b_aHX
  Not-swapped
Following bound tyvar t_aD4 = Doc
canEqTyVar2
  t_aD4
  b_aHX
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aVA :: Doc ~ b_aHX
  Doc
  Doc
  b_aHX
  b_aHX
can_eq_nc
  [W] cobox_aVA :: Doc ~ b_aHX
  [String]
  Doc
  b_aHX
  b_aHX
canEqTyVar
  b_aHX
  [String]
  Is-swapped
Following bound tyvar b_aHX = Doc
newWantedEvVar/cache miss [W] cobox_aVC :: Doc ~ Doc
setEvBind
  ev = cobox_aVA
  tm  = CO Sym cobox_aVC
rewriteEqEvidence
  [W] cobox_aVA :: Doc ~ b_aHX
  Doc
  Doc
  Sym cobox_aVC
canEqTyVar2
  b_aHX
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aVC :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aVC :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aVD :: String ~ String
setEvBind
  ev = cobox_aVC
  tm  = CO [cobox_aVD]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aVD :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aVD :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aVD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aVE :: Char ~ Char
setEvBind
  ev = cobox_aVD
  tm  = CO [cobox_aVE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aVE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aI0 :: [HTML]
                                ~ [a_aHW] [" a type equality [HTML]
                                                             ~
                                                             [a_aHW] " HTML3.hs:53:152-156] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aI0 :: [HTML]
                                 ~ [a_aHW] [" a type equality [HTML]
                                                              ~
                                                              [a_aHW] " HTML3.hs:53:152-156] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aI0 :: [HTML] ~ [a_aHW] [" a type equality [HTML]
                                                       ~
                                                       [a_aHW] " HTML3.hs:53:152-156] (CNonCanonical)
canEvNC:eq
  [HTML]
  [a_aHW]
can_eq_nc
  [W] cobox_aI0 :: [HTML] ~ [a_aHW]
  [HTML]
  [HTML]
  [a_aHW]
  [a_aHW]
newWantedEvVar/cache miss [W] cobox_aVF :: HTML ~ a_aHW
setEvBind
  ev = cobox_aI0
  tm  = CO [cobox_aVF]_N
canEvNC:eq
  HTML
  a_aHW
can_eq_nc
  [W] cobox_aVF :: HTML ~ a_aHW
  HTML
  HTML
  a_aHW
  a_aHW
canEqTyVar
  a_aHW
  HTML
  Is-swapped
Following bound tyvar a_aHW = HTML
newWantedEvVar/cache miss [W] cobox_aVG :: HTML ~ HTML
setEvBind
  ev = cobox_aVF
  tm  = CO Sym cobox_aVG
rewriteEqEvidence
  [W] cobox_aVF :: HTML ~ a_aHW
  HTML
  HTML
  Sym cobox_aVG
canEqTyVar2
  a_aHW
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aVG :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aVG
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aI1 :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML3.hs:53:165-190] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aI1 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML3.hs:53:165-190] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aI1 :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML3.hs:53:165-190] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aI1 :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aI1 :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aI1 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aVH :: String ~ String
setEvBind
  ev = cobox_aI1
  tm  = CO [cobox_aVH]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aVH :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aVH :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aVH :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aVI :: Char ~ Char
setEvBind
  ev = cobox_aVH
  tm  = CO [cobox_aVI]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aVI :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVI
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aI3 :: [a_aI2]
                                ~ String [" a type equality [a_aI2]
                                                            ~
                                                            String " HTML3.hs:53:172-189] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aI3 :: [a_aI2]
                                 ~ String [" a type equality [a_aI2]
                                                             ~
                                                             String " HTML3.hs:53:172-189] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aI3 :: [a_aI2] ~ String [" a type equality [a_aI2]
                                                       ~
                                                       String " HTML3.hs:53:172-189] (CNonCanonical)
canEvNC:eq
  [a_aI2]
  String
can_eq_nc
  [W] cobox_aI3 :: [a_aI2] ~ String
  [a_aI2]
  [a_aI2]
  String
  String
can_eq_nc
  [W] cobox_aI3 :: [a_aI2] ~ String
  [a_aI2]
  [a_aI2]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aVJ :: a_aI2 ~ Char
setEvBind
  ev = cobox_aI3
  tm  = CO [cobox_aVJ]_N
canEvNC:eq
  a_aI2
  Char
can_eq_nc
  [W] cobox_aVJ :: a_aI2 ~ Char
  a_aI2
  a_aI2
  Char
  Char
canEqTyVar
  a_aI2
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVJ :: a_aI2
                                 ~ Char [" a type equality [a_aI2]
                                                           ~
                                                           String " HTML3.hs:53:172-189] (CTyEqCan)
Sneaky unification:
  Unifies: a_aI2 := Char
  Coercion: a_aI2 ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aI2 := Char
setEvBind
  ev = cobox_aVJ
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aI2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
238[<C:0,F:0>] [W] cobox_aVJ :: a_aI2 ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aI4 :: [Char]
                                ~ [a_aI2] [" a type equality [Char]
                                                             ~
                                                             [a_aI2] " HTML3.hs:53:172-175] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aI4 :: [Char]
                                 ~ [a_aI2] [" a type equality [Char]
                                                              ~
                                                              [a_aI2] " HTML3.hs:53:172-175] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aI4 :: [Char] ~ [a_aI2] [" a type equality [Char]
                                                       ~
                                                       [a_aI2] " HTML3.hs:53:172-175] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aI2]
can_eq_nc
  [W] cobox_aI4 :: [Char] ~ [a_aI2]
  [Char]
  [Char]
  [a_aI2]
  [a_aI2]
newWantedEvVar/cache miss [W] cobox_aVK :: Char ~ a_aI2
setEvBind
  ev = cobox_aI4
  tm  = CO [cobox_aVK]_N
canEvNC:eq
  Char
  a_aI2
can_eq_nc
  [W] cobox_aVK :: Char ~ a_aI2
  Char
  Char
  a_aI2
  a_aI2
canEqTyVar
  a_aI2
  Char
  Is-swapped
Following bound tyvar a_aI2 = Char
newWantedEvVar/cache miss [W] cobox_aVL :: Char ~ Char
setEvBind
  ev = cobox_aVK
  tm  = CO Sym cobox_aVL
rewriteEqEvidence
  [W] cobox_aVK :: Char ~ a_aI2
  Char
  Char
  Sym cobox_aVL
canEqTyVar2
  a_aI2
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aVL :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVL
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aI6 :: [a_aI5]
                                ~ [a_aI2] [" a type equality [a_aI5]
                                                             ~
                                                             [a_aI2] " HTML3.hs:53:180-189] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aI6 :: [a_aI5]
                                 ~ [a_aI2] [" a type equality [a_aI5]
                                                              ~
                                                              [a_aI2] " HTML3.hs:53:180-189] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aI6 :: [a_aI5] ~ [a_aI2] [" a type equality [a_aI5]
                                                        ~
                                                        [a_aI2] " HTML3.hs:53:180-189] (CNonCanonical)
canEvNC:eq
  [a_aI5]
  [a_aI2]
can_eq_nc
  [W] cobox_aI6 :: [a_aI5] ~ [a_aI2]
  [a_aI5]
  [a_aI5]
  [a_aI2]
  [a_aI2]
newWantedEvVar/cache miss [W] cobox_aVM :: a_aI5 ~ a_aI2
setEvBind
  ev = cobox_aI6
  tm  = CO [cobox_aVM]_N
canEvNC:eq
  a_aI5
  a_aI2
can_eq_nc
  [W] cobox_aVM :: a_aI5 ~ a_aI2
  a_aI5
  a_aI5
  a_aI2
  a_aI2
canEqTyVar
  a_aI5
  a_aI2
  Not-swapped
Following bound tyvar a_aI2 = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVM :: a_aI5
                                 ~ Char [" a type equality [a_aI5]
                                                           ~
                                                           [a_aI2] " HTML3.hs:53:180-189] (CTyEqCan)
Sneaky unification:
  Unifies: a_aI5 := Char
  Coercion: a_aI5 ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aI5 := Char
setEvBind
  ev = cobox_aVM
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aI5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
240[<C:0,F:0>] [W] cobox_aVM :: a_aI5 ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aI7 :: String
                                ~ [a_aI5] [" a type equality String
                                                             ~
                                                             [a_aI5] " HTML3.hs:53:180-182] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aI7 :: String
                                 ~ [a_aI5] [" a type equality String
                                                              ~
                                                              [a_aI5] " HTML3.hs:53:180-182] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aI7 :: String ~ [a_aI5] [" a type equality String
                                                       ~
                                                       [a_aI5] " HTML3.hs:53:180-182] (CNonCanonical)
canEvNC:eq
  String
  [a_aI5]
can_eq_nc
  [W] cobox_aI7 :: String ~ [a_aI5]
  String
  String
  [a_aI5]
  [a_aI5]
can_eq_nc
  [W] cobox_aI7 :: String ~ [a_aI5]
  [Char]
  String
  [a_aI5]
  [a_aI5]
newWantedEvVar/cache miss [W] cobox_aVN :: Char ~ a_aI5
setEvBind
  ev = cobox_aI7
  tm  = CO [cobox_aVN]_N
canEvNC:eq
  Char
  a_aI5
can_eq_nc
  [W] cobox_aVN :: Char ~ a_aI5
  Char
  Char
  a_aI5
  a_aI5
canEqTyVar
  a_aI5
  Char
  Is-swapped
Following bound tyvar a_aI5 = Char
newWantedEvVar/cache miss [W] cobox_aVO :: Char ~ Char
setEvBind
  ev = cobox_aVN
  tm  = CO Sym cobox_aVO
rewriteEqEvidence
  [W] cobox_aVN :: Char ~ a_aI5
  Char
  Char
  Sym cobox_aVO
canEqTyVar2
  a_aI5
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aVO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aI8 :: [Char]
                                ~ [a_aI5] [" a type equality [Char]
                                                             ~
                                                             [a_aI5] " HTML3.hs:53:187-189] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aI8 :: [Char]
                                 ~ [a_aI5] [" a type equality [Char]
                                                              ~
                                                              [a_aI5] " HTML3.hs:53:187-189] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aI8 :: [Char] ~ [a_aI5] [" a type equality [Char]
                                                       ~
                                                       [a_aI5] " HTML3.hs:53:187-189] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aI5]
can_eq_nc
  [W] cobox_aI8 :: [Char] ~ [a_aI5]
  [Char]
  [Char]
  [a_aI5]
  [a_aI5]
newWantedEvVar/cache miss [W] cobox_aVP :: Char ~ a_aI5
setEvBind
  ev = cobox_aI8
  tm  = CO [cobox_aVP]_N
canEvNC:eq
  Char
  a_aI5
can_eq_nc
  [W] cobox_aVP :: Char ~ a_aI5
  Char
  Char
  a_aI5
  a_aI5
canEqTyVar
  a_aI5
  Char
  Is-swapped
Following bound tyvar a_aI5 = Char
newWantedEvVar/cache miss [W] cobox_aVQ :: Char ~ Char
setEvBind
  ev = cobox_aVP
  tm  = CO Sym cobox_aVQ
rewriteEqEvidence
  [W] cobox_aVP :: Char ~ a_aI5
  Char
  Char
  Sym cobox_aVQ
canEqTyVar2
  a_aI5
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aVQ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aVQ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIb :: [t_aIa]
                                ~ t_aD7 [" a type equality [t_aIa]
                                                           ~
                                                           t_aD7 " HTML3.hs:(42,10)-(43,59)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIb :: [t_aIa]
                                 ~ t_aD7 [" a type equality [t_aIa]
                                                            ~
                                                            t_aD7 " HTML3.hs:(42,10)-(43,59)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIb :: [t_aIa] ~ t_aD7 [" a type equality [t_aIa]
                                                      ~
                                                      t_aD7 " HTML3.hs:(42,10)-(43,59)] (CNonCanonical)
canEvNC:eq
  [t_aIa]
  t_aD7
can_eq_nc
  [W] cobox_aIb :: [t_aIa] ~ t_aD7
  [t_aIa]
  [t_aIa]
  t_aD7
  t_aD7
canEqTyVar
  t_aD7
  [t_aIa]
  Is-swapped
Following bound tyvar t_aD7 = [Requirement]
newWantedEvVar/cache miss [W] cobox_aVR :: [Requirement] ~ [t_aIa]
setEvBind
  ev = cobox_aIb
  tm  = CO Sym cobox_aVR
rewriteEqEvidence
  [W] cobox_aIb :: [t_aIa] ~ t_aD7
  [Requirement]
  [t_aIa]
  Sym cobox_aVR
canEqTyVar2
  t_aD7
  [t_aIa]
  Is-swapped
  [Requirement]
  <[Requirement]>_N
can_eq_nc
  [W] cobox_aVR :: [Requirement] ~ [t_aIa]
  [Requirement]
  [Requirement]
  [t_aIa]
  [t_aIa]
newWantedEvVar/cache miss [W] cobox_aVS :: Requirement ~ t_aIa
setEvBind
  ev = cobox_aVR
  tm  = CO [cobox_aVS]_N
canEvNC:eq
  Requirement
  t_aIa
can_eq_nc
  [W] cobox_aVS :: Requirement ~ t_aIa
  Requirement
  Requirement
  t_aIa
  t_aIa
can_eq_nc
  [W] cobox_aVS :: Requirement ~ t_aIa
  (String, String)
  Requirement
  t_aIa
  t_aIa
canEqTyVar
  t_aIa
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aVT :: t_aIa ~ Requirement
setEvBind
  ev = cobox_aVS
  tm  = CO Sym cobox_aVT
rewriteEqEvidence
  [W] cobox_aVS :: Requirement ~ t_aIa
  t_aIa
  Requirement
  Sym cobox_aVT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVT :: t_aIa
                                 ~ Requirement [" a type equality [t_aIa]
                                                                  ~
                                                                  t_aD7 " HTML3.hs:(42,10)-(43,59)] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIa := Requirement
  Coercion: t_aIa ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIa := Requirement
setEvBind
  ev = cobox_aVT
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  t_aIa
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
243[<C:0,F:0>] [W] cobox_aVT :: t_aIa
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIe :: (t_aIc, t_aId)
                                ~ t_aIa [" a type equality (t_aIc, t_aId)
                                                           ~
                                                           t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIe :: (t_aIc, t_aId)
                                 ~ t_aIa [" a type equality (t_aIc, t_aId)
                                                            ~
                                                            t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIe :: (t_aIc, t_aId) ~ t_aIa [" a type equality (t_aIc,
                                                              t_aId)
                                                             ~
                                                             t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
canEvNC:eq
  (t_aIc, t_aId)
  t_aIa
can_eq_nc
  [W] cobox_aIe :: (t_aIc, t_aId) ~ t_aIa
  (t_aIc, t_aId)
  (t_aIc, t_aId)
  t_aIa
  t_aIa
canEqTyVar
  t_aIa
  (t_aIc, t_aId)
  Is-swapped
Following bound tyvar t_aIa = Requirement
newWantedEvVar/cache miss
  [W] cobox_aVU :: Requirement ~ (t_aIc, t_aId)
setEvBind
  ev = cobox_aIe
  tm  = CO Sym cobox_aVU
rewriteEqEvidence
  [W] cobox_aIe :: (t_aIc, t_aId) ~ t_aIa
  Requirement
  (t_aIc, t_aId)
  Sym cobox_aVU
canEqTyVar2
  t_aIa
  (t_aIc, t_aId)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aVU :: Requirement ~ (t_aIc, t_aId)
  Requirement
  Requirement
  (t_aIc, t_aId)
  (t_aIc, t_aId)
can_eq_nc
  [W] cobox_aVU :: Requirement ~ (t_aIc, t_aId)
  (String, String)
  Requirement
  (t_aIc, t_aId)
  (t_aIc, t_aId)
newWantedEvVar/cache miss [W] cobox_aVV :: String ~ t_aIc
newWantedEvVar/cache miss [W] cobox_aVW :: String ~ t_aId
setEvBind
  ev = cobox_aVU
  tm  = CO (cobox_aVV, cobox_aVW)_N
canEvNC:eq
  String
  t_aIc
can_eq_nc
  [W] cobox_aVV :: String ~ t_aIc
  String
  String
  t_aIc
  t_aIc
can_eq_nc
  [W] cobox_aVV :: String ~ t_aIc
  [Char]
  String
  t_aIc
  t_aIc
canEqTyVar
  t_aIc
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aVX :: t_aIc ~ String
setEvBind
  ev = cobox_aVV
  tm  = CO Sym cobox_aVX
rewriteEqEvidence
  [W] cobox_aVV :: String ~ t_aIc
  t_aIc
  String
  Sym cobox_aVX
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVX :: t_aIc
                                 ~ String [" a type equality (t_aIc, t_aId)
                                                             ~
                                                             t_aIa " HTML3.hs:42:11-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIc := String
  Coercion: t_aIc ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIc := String
setEvBind
  ev = cobox_aVX
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
244[<C:0,F:0>] [W] cobox_aVX :: t_aIc
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aVW :: String
                                ~ t_aId [" a type equality (t_aIc, t_aId)
                                                           ~
                                                           t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aVW :: String
                                 ~ t_aId [" a type equality (t_aIc, t_aId)
                                                            ~
                                                            t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aVW :: String ~ t_aId [" a type equality (t_aIc, t_aId)
                                                     ~
                                                     t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
canEvNC:eq
  String
  t_aId
can_eq_nc
  [W] cobox_aVW :: String ~ t_aId
  String
  String
  t_aId
  t_aId
can_eq_nc
  [W] cobox_aVW :: String ~ t_aId
  [Char]
  String
  t_aId
  t_aId
canEqTyVar
  t_aId
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aVY :: t_aId ~ String
setEvBind
  ev = cobox_aVW
  tm  = CO Sym cobox_aVY
rewriteEqEvidence
  [W] cobox_aVW :: String ~ t_aId
  t_aId
  String
  Sym cobox_aVY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aVY :: t_aId
                                 ~ String [" a type equality (t_aIc, t_aId)
                                                             ~
                                                             t_aIa " HTML3.hs:42:11-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aId := String
  Coercion: t_aId ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aId := String
setEvBind
  ev = cobox_aVY
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aId
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
245[<C:0,F:0>] [W] cobox_aVY :: t_aId
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIf :: [Char]
                                ~ t_aIc [" a type equality [Char]
                                                           ~
                                                           t_aIc " HTML3.hs:42:12-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIf :: [Char]
                                 ~ t_aIc [" a type equality [Char]
                                                            ~
                                                            t_aIc " HTML3.hs:42:12-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIf :: [Char] ~ t_aIc [" a type equality [Char]
                                                     ~
                                                     t_aIc " HTML3.hs:42:12-15] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIc
can_eq_nc
  [W] cobox_aIf :: [Char] ~ t_aIc
  [Char]
  [Char]
  t_aIc
  t_aIc
canEqTyVar
  t_aIc
  [Char]
  Is-swapped
Following bound tyvar t_aIc = String
newWantedEvVar/cache miss [W] cobox_aVZ :: String ~ [Char]
setEvBind
  ev = cobox_aIf
  tm  = CO Sym cobox_aVZ
rewriteEqEvidence
  [W] cobox_aIf :: [Char] ~ t_aIc
  String
  [Char]
  Sym cobox_aVZ
canEqTyVar2
  t_aIc
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aVZ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aVZ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aW0 :: Char ~ Char
setEvBind
  ev = cobox_aVZ
  tm  = CO [cobox_aW0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aW0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aW0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIg :: [Char]
                                ~ t_aId [" a type equality [Char]
                                                           ~
                                                           t_aId " HTML3.hs:42:18-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIg :: [Char]
                                 ~ t_aId [" a type equality [Char]
                                                            ~
                                                            t_aId " HTML3.hs:42:18-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIg :: [Char] ~ t_aId [" a type equality [Char]
                                                     ~
                                                     t_aId " HTML3.hs:42:18-21] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aId
can_eq_nc
  [W] cobox_aIg :: [Char] ~ t_aId
  [Char]
  [Char]
  t_aId
  t_aId
canEqTyVar
  t_aId
  [Char]
  Is-swapped
Following bound tyvar t_aId = String
newWantedEvVar/cache miss [W] cobox_aW1 :: String ~ [Char]
setEvBind
  ev = cobox_aIg
  tm  = CO Sym cobox_aW1
rewriteEqEvidence
  [W] cobox_aIg :: [Char] ~ t_aId
  String
  [Char]
  Sym cobox_aW1
canEqTyVar2
  t_aId
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aW1 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aW1 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aW2 :: Char ~ Char
setEvBind
  ev = cobox_aW1
  tm  = CO [cobox_aW2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aW2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aW2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIj :: (t_aIh, t_aIi)
                                ~ t_aIa [" a type equality (t_aIh, t_aIi)
                                                           ~
                                                           t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIj :: (t_aIh, t_aIi)
                                 ~ t_aIa [" a type equality (t_aIh, t_aIi)
                                                            ~
                                                            t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIj :: (t_aIh, t_aIi) ~ t_aIa [" a type equality (t_aIh,
                                                              t_aIi)
                                                             ~
                                                             t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
canEvNC:eq
  (t_aIh, t_aIi)
  t_aIa
can_eq_nc
  [W] cobox_aIj :: (t_aIh, t_aIi) ~ t_aIa
  (t_aIh, t_aIi)
  (t_aIh, t_aIi)
  t_aIa
  t_aIa
canEqTyVar
  t_aIa
  (t_aIh, t_aIi)
  Is-swapped
Following bound tyvar t_aIa = Requirement
newWantedEvVar/cache miss
  [W] cobox_aW3 :: Requirement ~ (t_aIh, t_aIi)
setEvBind
  ev = cobox_aIj
  tm  = CO Sym cobox_aW3
rewriteEqEvidence
  [W] cobox_aIj :: (t_aIh, t_aIi) ~ t_aIa
  Requirement
  (t_aIh, t_aIi)
  Sym cobox_aW3
canEqTyVar2
  t_aIa
  (t_aIh, t_aIi)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aW3 :: Requirement ~ (t_aIh, t_aIi)
  Requirement
  Requirement
  (t_aIh, t_aIi)
  (t_aIh, t_aIi)
can_eq_nc
  [W] cobox_aW3 :: Requirement ~ (t_aIh, t_aIi)
  (String, String)
  Requirement
  (t_aIh, t_aIi)
  (t_aIh, t_aIi)
newWantedEvVar/cache miss [W] cobox_aW4 :: String ~ t_aIh
newWantedEvVar/cache miss [W] cobox_aW5 :: String ~ t_aIi
setEvBind
  ev = cobox_aW3
  tm  = CO (cobox_aW4, cobox_aW5)_N
canEvNC:eq
  String
  t_aIh
can_eq_nc
  [W] cobox_aW4 :: String ~ t_aIh
  String
  String
  t_aIh
  t_aIh
can_eq_nc
  [W] cobox_aW4 :: String ~ t_aIh
  [Char]
  String
  t_aIh
  t_aIh
canEqTyVar
  t_aIh
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aW6 :: t_aIh ~ String
setEvBind
  ev = cobox_aW4
  tm  = CO Sym cobox_aW6
rewriteEqEvidence
  [W] cobox_aW4 :: String ~ t_aIh
  t_aIh
  String
  Sym cobox_aW6
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aW6 :: t_aIh
                                 ~ String [" a type equality (t_aIh, t_aIi)
                                                             ~
                                                             t_aIa " HTML3.hs:42:25-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIh := String
  Coercion: t_aIh ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIh := String
setEvBind
  ev = cobox_aW6
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIh
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
248[<C:0,F:0>] [W] cobox_aW6 :: t_aIh
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aW5 :: String
                                ~ t_aIi [" a type equality (t_aIh, t_aIi)
                                                           ~
                                                           t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aW5 :: String
                                 ~ t_aIi [" a type equality (t_aIh, t_aIi)
                                                            ~
                                                            t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aW5 :: String ~ t_aIi [" a type equality (t_aIh, t_aIi)
                                                     ~
                                                     t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
canEvNC:eq
  String
  t_aIi
can_eq_nc
  [W] cobox_aW5 :: String ~ t_aIi
  String
  String
  t_aIi
  t_aIi
can_eq_nc
  [W] cobox_aW5 :: String ~ t_aIi
  [Char]
  String
  t_aIi
  t_aIi
canEqTyVar
  t_aIi
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aW7 :: t_aIi ~ String
setEvBind
  ev = cobox_aW5
  tm  = CO Sym cobox_aW7
rewriteEqEvidence
  [W] cobox_aW5 :: String ~ t_aIi
  t_aIi
  String
  Sym cobox_aW7
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aW7 :: t_aIi
                                 ~ String [" a type equality (t_aIh, t_aIi)
                                                             ~
                                                             t_aIa " HTML3.hs:42:25-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIi := String
  Coercion: t_aIi ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIi := String
setEvBind
  ev = cobox_aW7
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIi
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
249[<C:0,F:0>] [W] cobox_aW7 :: t_aIi
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIk :: [Char]
                                ~ t_aIh [" a type equality [Char]
                                                           ~
                                                           t_aIh " HTML3.hs:42:26-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIk :: [Char]
                                 ~ t_aIh [" a type equality [Char]
                                                            ~
                                                            t_aIh " HTML3.hs:42:26-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIk :: [Char] ~ t_aIh [" a type equality [Char]
                                                     ~
                                                     t_aIh " HTML3.hs:42:26-31] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIh
can_eq_nc
  [W] cobox_aIk :: [Char] ~ t_aIh
  [Char]
  [Char]
  t_aIh
  t_aIh
canEqTyVar
  t_aIh
  [Char]
  Is-swapped
Following bound tyvar t_aIh = String
newWantedEvVar/cache miss [W] cobox_aW8 :: String ~ [Char]
setEvBind
  ev = cobox_aIk
  tm  = CO Sym cobox_aW8
rewriteEqEvidence
  [W] cobox_aIk :: [Char] ~ t_aIh
  String
  [Char]
  Sym cobox_aW8
canEqTyVar2
  t_aIh
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aW8 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aW8 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aW9 :: Char ~ Char
setEvBind
  ev = cobox_aW8
  tm  = CO [cobox_aW9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aW9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aW9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIl :: [Char]
                                ~ t_aIi [" a type equality [Char]
                                                           ~
                                                           t_aIi " HTML3.hs:42:34-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIl :: [Char]
                                 ~ t_aIi [" a type equality [Char]
                                                            ~
                                                            t_aIi " HTML3.hs:42:34-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIl :: [Char] ~ t_aIi [" a type equality [Char]
                                                     ~
                                                     t_aIi " HTML3.hs:42:34-39] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIi
can_eq_nc
  [W] cobox_aIl :: [Char] ~ t_aIi
  [Char]
  [Char]
  t_aIi
  t_aIi
canEqTyVar
  t_aIi
  [Char]
  Is-swapped
Following bound tyvar t_aIi = String
newWantedEvVar/cache miss [W] cobox_aWa :: String ~ [Char]
setEvBind
  ev = cobox_aIl
  tm  = CO Sym cobox_aWa
rewriteEqEvidence
  [W] cobox_aIl :: [Char] ~ t_aIi
  String
  [Char]
  Sym cobox_aWa
canEqTyVar2
  t_aIi
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWa :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWa :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWb :: Char ~ Char
setEvBind
  ev = cobox_aWa
  tm  = CO [cobox_aWb]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWb :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWb
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIo :: (t_aIm, t_aIn)
                                ~ t_aIa [" a type equality (t_aIm, t_aIn)
                                                           ~
                                                           t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIo :: (t_aIm, t_aIn)
                                 ~ t_aIa [" a type equality (t_aIm, t_aIn)
                                                            ~
                                                            t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIo :: (t_aIm, t_aIn) ~ t_aIa [" a type equality (t_aIm,
                                                              t_aIn)
                                                             ~
                                                             t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
canEvNC:eq
  (t_aIm, t_aIn)
  t_aIa
can_eq_nc
  [W] cobox_aIo :: (t_aIm, t_aIn) ~ t_aIa
  (t_aIm, t_aIn)
  (t_aIm, t_aIn)
  t_aIa
  t_aIa
canEqTyVar
  t_aIa
  (t_aIm, t_aIn)
  Is-swapped
Following bound tyvar t_aIa = Requirement
newWantedEvVar/cache miss
  [W] cobox_aWc :: Requirement ~ (t_aIm, t_aIn)
setEvBind
  ev = cobox_aIo
  tm  = CO Sym cobox_aWc
rewriteEqEvidence
  [W] cobox_aIo :: (t_aIm, t_aIn) ~ t_aIa
  Requirement
  (t_aIm, t_aIn)
  Sym cobox_aWc
canEqTyVar2
  t_aIa
  (t_aIm, t_aIn)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aWc :: Requirement ~ (t_aIm, t_aIn)
  Requirement
  Requirement
  (t_aIm, t_aIn)
  (t_aIm, t_aIn)
can_eq_nc
  [W] cobox_aWc :: Requirement ~ (t_aIm, t_aIn)
  (String, String)
  Requirement
  (t_aIm, t_aIn)
  (t_aIm, t_aIn)
newWantedEvVar/cache miss [W] cobox_aWd :: String ~ t_aIm
newWantedEvVar/cache miss [W] cobox_aWe :: String ~ t_aIn
setEvBind
  ev = cobox_aWc
  tm  = CO (cobox_aWd, cobox_aWe)_N
canEvNC:eq
  String
  t_aIm
can_eq_nc
  [W] cobox_aWd :: String ~ t_aIm
  String
  String
  t_aIm
  t_aIm
can_eq_nc
  [W] cobox_aWd :: String ~ t_aIm
  [Char]
  String
  t_aIm
  t_aIm
canEqTyVar
  t_aIm
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWf :: t_aIm ~ String
setEvBind
  ev = cobox_aWd
  tm  = CO Sym cobox_aWf
rewriteEqEvidence
  [W] cobox_aWd :: String ~ t_aIm
  t_aIm
  String
  Sym cobox_aWf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWf :: t_aIm
                                 ~ String [" a type equality (t_aIm, t_aIn)
                                                             ~
                                                             t_aIa " HTML3.hs:42:43-58] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIm := String
  Coercion: t_aIm ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIm := String
setEvBind
  ev = cobox_aWf
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIm
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
252[<C:0,F:0>] [W] cobox_aWf :: t_aIm
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aWe :: String
                                ~ t_aIn [" a type equality (t_aIm, t_aIn)
                                                           ~
                                                           t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aWe :: String
                                 ~ t_aIn [" a type equality (t_aIm, t_aIn)
                                                            ~
                                                            t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aWe :: String ~ t_aIn [" a type equality (t_aIm, t_aIn)
                                                     ~
                                                     t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
canEvNC:eq
  String
  t_aIn
can_eq_nc
  [W] cobox_aWe :: String ~ t_aIn
  String
  String
  t_aIn
  t_aIn
can_eq_nc
  [W] cobox_aWe :: String ~ t_aIn
  [Char]
  String
  t_aIn
  t_aIn
canEqTyVar
  t_aIn
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWg :: t_aIn ~ String
setEvBind
  ev = cobox_aWe
  tm  = CO Sym cobox_aWg
rewriteEqEvidence
  [W] cobox_aWe :: String ~ t_aIn
  t_aIn
  String
  Sym cobox_aWg
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWg :: t_aIn
                                 ~ String [" a type equality (t_aIm, t_aIn)
                                                             ~
                                                             t_aIa " HTML3.hs:42:43-58] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIn := String
  Coercion: t_aIn ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIn := String
setEvBind
  ev = cobox_aWg
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
253[<C:0,F:0>] [W] cobox_aWg :: t_aIn
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIp :: [Char]
                                ~ t_aIm [" a type equality [Char]
                                                           ~
                                                           t_aIm " HTML3.hs:42:44-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIp :: [Char]
                                 ~ t_aIm [" a type equality [Char]
                                                            ~
                                                            t_aIm " HTML3.hs:42:44-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIp :: [Char] ~ t_aIm [" a type equality [Char]
                                                     ~
                                                     t_aIm " HTML3.hs:42:44-49] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIm
can_eq_nc
  [W] cobox_aIp :: [Char] ~ t_aIm
  [Char]
  [Char]
  t_aIm
  t_aIm
canEqTyVar
  t_aIm
  [Char]
  Is-swapped
Following bound tyvar t_aIm = String
newWantedEvVar/cache miss [W] cobox_aWh :: String ~ [Char]
setEvBind
  ev = cobox_aIp
  tm  = CO Sym cobox_aWh
rewriteEqEvidence
  [W] cobox_aIp :: [Char] ~ t_aIm
  String
  [Char]
  Sym cobox_aWh
canEqTyVar2
  t_aIm
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWh :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWh :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWi :: Char ~ Char
setEvBind
  ev = cobox_aWh
  tm  = CO [cobox_aWi]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWi :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWi
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIq :: [Char]
                                ~ t_aIn [" a type equality [Char]
                                                           ~
                                                           t_aIn " HTML3.hs:42:52-57] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIq :: [Char]
                                 ~ t_aIn [" a type equality [Char]
                                                            ~
                                                            t_aIn " HTML3.hs:42:52-57] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIq :: [Char] ~ t_aIn [" a type equality [Char]
                                                     ~
                                                     t_aIn " HTML3.hs:42:52-57] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIn
can_eq_nc
  [W] cobox_aIq :: [Char] ~ t_aIn
  [Char]
  [Char]
  t_aIn
  t_aIn
canEqTyVar
  t_aIn
  [Char]
  Is-swapped
Following bound tyvar t_aIn = String
newWantedEvVar/cache miss [W] cobox_aWj :: String ~ [Char]
setEvBind
  ev = cobox_aIq
  tm  = CO Sym cobox_aWj
rewriteEqEvidence
  [W] cobox_aIq :: [Char] ~ t_aIn
  String
  [Char]
  Sym cobox_aWj
canEqTyVar2
  t_aIn
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWj :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWj :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWk :: Char ~ Char
setEvBind
  ev = cobox_aWj
  tm  = CO [cobox_aWk]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIt :: (t_aIr, t_aIs)
                                ~ t_aIa [" a type equality (t_aIr, t_aIs)
                                                           ~
                                                           t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIt :: (t_aIr, t_aIs)
                                 ~ t_aIa [" a type equality (t_aIr, t_aIs)
                                                            ~
                                                            t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIt :: (t_aIr, t_aIs) ~ t_aIa [" a type equality (t_aIr,
                                                              t_aIs)
                                                             ~
                                                             t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
canEvNC:eq
  (t_aIr, t_aIs)
  t_aIa
can_eq_nc
  [W] cobox_aIt :: (t_aIr, t_aIs) ~ t_aIa
  (t_aIr, t_aIs)
  (t_aIr, t_aIs)
  t_aIa
  t_aIa
canEqTyVar
  t_aIa
  (t_aIr, t_aIs)
  Is-swapped
Following bound tyvar t_aIa = Requirement
newWantedEvVar/cache miss
  [W] cobox_aWl :: Requirement ~ (t_aIr, t_aIs)
setEvBind
  ev = cobox_aIt
  tm  = CO Sym cobox_aWl
rewriteEqEvidence
  [W] cobox_aIt :: (t_aIr, t_aIs) ~ t_aIa
  Requirement
  (t_aIr, t_aIs)
  Sym cobox_aWl
canEqTyVar2
  t_aIa
  (t_aIr, t_aIs)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aWl :: Requirement ~ (t_aIr, t_aIs)
  Requirement
  Requirement
  (t_aIr, t_aIs)
  (t_aIr, t_aIs)
can_eq_nc
  [W] cobox_aWl :: Requirement ~ (t_aIr, t_aIs)
  (String, String)
  Requirement
  (t_aIr, t_aIs)
  (t_aIr, t_aIs)
newWantedEvVar/cache miss [W] cobox_aWm :: String ~ t_aIr
newWantedEvVar/cache miss [W] cobox_aWn :: String ~ t_aIs
setEvBind
  ev = cobox_aWl
  tm  = CO (cobox_aWm, cobox_aWn)_N
canEvNC:eq
  String
  t_aIr
can_eq_nc
  [W] cobox_aWm :: String ~ t_aIr
  String
  String
  t_aIr
  t_aIr
can_eq_nc
  [W] cobox_aWm :: String ~ t_aIr
  [Char]
  String
  t_aIr
  t_aIr
canEqTyVar
  t_aIr
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWo :: t_aIr ~ String
setEvBind
  ev = cobox_aWm
  tm  = CO Sym cobox_aWo
rewriteEqEvidence
  [W] cobox_aWm :: String ~ t_aIr
  t_aIr
  String
  Sym cobox_aWo
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWo :: t_aIr
                                 ~ String [" a type equality (t_aIr, t_aIs)
                                                             ~
                                                             t_aIa " HTML3.hs:43:11-23] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIr := String
  Coercion: t_aIr ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIr := String
setEvBind
  ev = cobox_aWo
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
256[<C:0,F:0>] [W] cobox_aWo :: t_aIr
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aWn :: String
                                ~ t_aIs [" a type equality (t_aIr, t_aIs)
                                                           ~
                                                           t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aWn :: String
                                 ~ t_aIs [" a type equality (t_aIr, t_aIs)
                                                            ~
                                                            t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aWn :: String ~ t_aIs [" a type equality (t_aIr, t_aIs)
                                                     ~
                                                     t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
canEvNC:eq
  String
  t_aIs
can_eq_nc
  [W] cobox_aWn :: String ~ t_aIs
  String
  String
  t_aIs
  t_aIs
can_eq_nc
  [W] cobox_aWn :: String ~ t_aIs
  [Char]
  String
  t_aIs
  t_aIs
canEqTyVar
  t_aIs
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWp :: t_aIs ~ String
setEvBind
  ev = cobox_aWn
  tm  = CO Sym cobox_aWp
rewriteEqEvidence
  [W] cobox_aWn :: String ~ t_aIs
  t_aIs
  String
  Sym cobox_aWp
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWp :: t_aIs
                                 ~ String [" a type equality (t_aIr, t_aIs)
                                                             ~
                                                             t_aIa " HTML3.hs:43:11-23] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIs := String
  Coercion: t_aIs ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIs := String
setEvBind
  ev = cobox_aWp
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIs
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
257[<C:0,F:0>] [W] cobox_aWp :: t_aIs
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIu :: [Char]
                                ~ t_aIr [" a type equality [Char]
                                                           ~
                                                           t_aIr " HTML3.hs:43:12-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIu :: [Char]
                                 ~ t_aIr [" a type equality [Char]
                                                            ~
                                                            t_aIr " HTML3.hs:43:12-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIu :: [Char] ~ t_aIr [" a type equality [Char]
                                                     ~
                                                     t_aIr " HTML3.hs:43:12-17] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIr
can_eq_nc
  [W] cobox_aIu :: [Char] ~ t_aIr
  [Char]
  [Char]
  t_aIr
  t_aIr
canEqTyVar
  t_aIr
  [Char]
  Is-swapped
Following bound tyvar t_aIr = String
newWantedEvVar/cache miss [W] cobox_aWq :: String ~ [Char]
setEvBind
  ev = cobox_aIu
  tm  = CO Sym cobox_aWq
rewriteEqEvidence
  [W] cobox_aIu :: [Char] ~ t_aIr
  String
  [Char]
  Sym cobox_aWq
canEqTyVar2
  t_aIr
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWq :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWq :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWr :: Char ~ Char
setEvBind
  ev = cobox_aWq
  tm  = CO [cobox_aWr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIv :: [Char]
                                ~ t_aIs [" a type equality [Char]
                                                           ~
                                                           t_aIs " HTML3.hs:43:20-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIv :: [Char]
                                 ~ t_aIs [" a type equality [Char]
                                                            ~
                                                            t_aIs " HTML3.hs:43:20-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIv :: [Char] ~ t_aIs [" a type equality [Char]
                                                     ~
                                                     t_aIs " HTML3.hs:43:20-22] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIs
can_eq_nc
  [W] cobox_aIv :: [Char] ~ t_aIs
  [Char]
  [Char]
  t_aIs
  t_aIs
canEqTyVar
  t_aIs
  [Char]
  Is-swapped
Following bound tyvar t_aIs = String
newWantedEvVar/cache miss [W] cobox_aWs :: String ~ [Char]
setEvBind
  ev = cobox_aIv
  tm  = CO Sym cobox_aWs
rewriteEqEvidence
  [W] cobox_aIv :: [Char] ~ t_aIs
  String
  [Char]
  Sym cobox_aWs
canEqTyVar2
  t_aIs
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWs :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWs :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWt :: Char ~ Char
setEvBind
  ev = cobox_aWs
  tm  = CO [cobox_aWt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIy :: (t_aIw, t_aIx)
                                ~ t_aIa [" a type equality (t_aIw, t_aIx)
                                                           ~
                                                           t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIy :: (t_aIw, t_aIx)
                                 ~ t_aIa [" a type equality (t_aIw, t_aIx)
                                                            ~
                                                            t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIy :: (t_aIw, t_aIx) ~ t_aIa [" a type equality (t_aIw,
                                                              t_aIx)
                                                             ~
                                                             t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
canEvNC:eq
  (t_aIw, t_aIx)
  t_aIa
can_eq_nc
  [W] cobox_aIy :: (t_aIw, t_aIx) ~ t_aIa
  (t_aIw, t_aIx)
  (t_aIw, t_aIx)
  t_aIa
  t_aIa
canEqTyVar
  t_aIa
  (t_aIw, t_aIx)
  Is-swapped
Following bound tyvar t_aIa = Requirement
newWantedEvVar/cache miss
  [W] cobox_aWu :: Requirement ~ (t_aIw, t_aIx)
setEvBind
  ev = cobox_aIy
  tm  = CO Sym cobox_aWu
rewriteEqEvidence
  [W] cobox_aIy :: (t_aIw, t_aIx) ~ t_aIa
  Requirement
  (t_aIw, t_aIx)
  Sym cobox_aWu
canEqTyVar2
  t_aIa
  (t_aIw, t_aIx)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aWu :: Requirement ~ (t_aIw, t_aIx)
  Requirement
  Requirement
  (t_aIw, t_aIx)
  (t_aIw, t_aIx)
can_eq_nc
  [W] cobox_aWu :: Requirement ~ (t_aIw, t_aIx)
  (String, String)
  Requirement
  (t_aIw, t_aIx)
  (t_aIw, t_aIx)
newWantedEvVar/cache miss [W] cobox_aWv :: String ~ t_aIw
newWantedEvVar/cache miss [W] cobox_aWw :: String ~ t_aIx
setEvBind
  ev = cobox_aWu
  tm  = CO (cobox_aWv, cobox_aWw)_N
canEvNC:eq
  String
  t_aIw
can_eq_nc
  [W] cobox_aWv :: String ~ t_aIw
  String
  String
  t_aIw
  t_aIw
can_eq_nc
  [W] cobox_aWv :: String ~ t_aIw
  [Char]
  String
  t_aIw
  t_aIw
canEqTyVar
  t_aIw
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWx :: t_aIw ~ String
setEvBind
  ev = cobox_aWv
  tm  = CO Sym cobox_aWx
rewriteEqEvidence
  [W] cobox_aWv :: String ~ t_aIw
  t_aIw
  String
  Sym cobox_aWx
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWx :: t_aIw
                                 ~ String [" a type equality (t_aIw, t_aIx)
                                                             ~
                                                             t_aIa " HTML3.hs:43:26-39] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIw := String
  Coercion: t_aIw ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIw := String
setEvBind
  ev = cobox_aWx
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
260[<C:0,F:0>] [W] cobox_aWx :: t_aIw
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aWw :: String
                                ~ t_aIx [" a type equality (t_aIw, t_aIx)
                                                           ~
                                                           t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aWw :: String
                                 ~ t_aIx [" a type equality (t_aIw, t_aIx)
                                                            ~
                                                            t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aWw :: String ~ t_aIx [" a type equality (t_aIw, t_aIx)
                                                     ~
                                                     t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
canEvNC:eq
  String
  t_aIx
can_eq_nc
  [W] cobox_aWw :: String ~ t_aIx
  String
  String
  t_aIx
  t_aIx
can_eq_nc
  [W] cobox_aWw :: String ~ t_aIx
  [Char]
  String
  t_aIx
  t_aIx
canEqTyVar
  t_aIx
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWy :: t_aIx ~ String
setEvBind
  ev = cobox_aWw
  tm  = CO Sym cobox_aWy
rewriteEqEvidence
  [W] cobox_aWw :: String ~ t_aIx
  t_aIx
  String
  Sym cobox_aWy
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWy :: t_aIx
                                 ~ String [" a type equality (t_aIw, t_aIx)
                                                             ~
                                                             t_aIa " HTML3.hs:43:26-39] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIx := String
  Coercion: t_aIx ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIx := String
setEvBind
  ev = cobox_aWy
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIx
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
261[<C:0,F:0>] [W] cobox_aWy :: t_aIx
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIz :: [Char]
                                ~ t_aIw [" a type equality [Char]
                                                           ~
                                                           t_aIw " HTML3.hs:43:27-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIz :: [Char]
                                 ~ t_aIw [" a type equality [Char]
                                                            ~
                                                            t_aIw " HTML3.hs:43:27-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIz :: [Char] ~ t_aIw [" a type equality [Char]
                                                     ~
                                                     t_aIw " HTML3.hs:43:27-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIw
can_eq_nc
  [W] cobox_aIz :: [Char] ~ t_aIw
  [Char]
  [Char]
  t_aIw
  t_aIw
canEqTyVar
  t_aIw
  [Char]
  Is-swapped
Following bound tyvar t_aIw = String
newWantedEvVar/cache miss [W] cobox_aWz :: String ~ [Char]
setEvBind
  ev = cobox_aIz
  tm  = CO Sym cobox_aWz
rewriteEqEvidence
  [W] cobox_aIz :: [Char] ~ t_aIw
  String
  [Char]
  Sym cobox_aWz
canEqTyVar2
  t_aIw
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWz :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWz :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWA :: Char ~ Char
setEvBind
  ev = cobox_aWz
  tm  = CO [cobox_aWA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIA :: [Char]
                                ~ t_aIx [" a type equality [Char]
                                                           ~
                                                           t_aIx " HTML3.hs:43:35-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIA :: [Char]
                                 ~ t_aIx [" a type equality [Char]
                                                            ~
                                                            t_aIx " HTML3.hs:43:35-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIA :: [Char] ~ t_aIx [" a type equality [Char]
                                                     ~
                                                     t_aIx " HTML3.hs:43:35-38] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIx
can_eq_nc
  [W] cobox_aIA :: [Char] ~ t_aIx
  [Char]
  [Char]
  t_aIx
  t_aIx
canEqTyVar
  t_aIx
  [Char]
  Is-swapped
Following bound tyvar t_aIx = String
newWantedEvVar/cache miss [W] cobox_aWB :: String ~ [Char]
setEvBind
  ev = cobox_aIA
  tm  = CO Sym cobox_aWB
rewriteEqEvidence
  [W] cobox_aIA :: [Char] ~ t_aIx
  String
  [Char]
  Sym cobox_aWB
canEqTyVar2
  t_aIx
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWB :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWB :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWC :: Char ~ Char
setEvBind
  ev = cobox_aWB
  tm  = CO [cobox_aWC]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWC :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWC
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aID :: (t_aIB, t_aIC)
                                ~ t_aIa [" a type equality (t_aIB, t_aIC)
                                                           ~
                                                           t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aID :: (t_aIB, t_aIC)
                                 ~ t_aIa [" a type equality (t_aIB, t_aIC)
                                                            ~
                                                            t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aID :: (t_aIB, t_aIC) ~ t_aIa [" a type equality (t_aIB,
                                                              t_aIC)
                                                             ~
                                                             t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
canEvNC:eq
  (t_aIB, t_aIC)
  t_aIa
can_eq_nc
  [W] cobox_aID :: (t_aIB, t_aIC) ~ t_aIa
  (t_aIB, t_aIC)
  (t_aIB, t_aIC)
  t_aIa
  t_aIa
canEqTyVar
  t_aIa
  (t_aIB, t_aIC)
  Is-swapped
Following bound tyvar t_aIa = Requirement
newWantedEvVar/cache miss
  [W] cobox_aWD :: Requirement ~ (t_aIB, t_aIC)
setEvBind
  ev = cobox_aID
  tm  = CO Sym cobox_aWD
rewriteEqEvidence
  [W] cobox_aID :: (t_aIB, t_aIC) ~ t_aIa
  Requirement
  (t_aIB, t_aIC)
  Sym cobox_aWD
canEqTyVar2
  t_aIa
  (t_aIB, t_aIC)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aWD :: Requirement ~ (t_aIB, t_aIC)
  Requirement
  Requirement
  (t_aIB, t_aIC)
  (t_aIB, t_aIC)
can_eq_nc
  [W] cobox_aWD :: Requirement ~ (t_aIB, t_aIC)
  (String, String)
  Requirement
  (t_aIB, t_aIC)
  (t_aIB, t_aIC)
newWantedEvVar/cache miss [W] cobox_aWE :: String ~ t_aIB
newWantedEvVar/cache miss [W] cobox_aWF :: String ~ t_aIC
setEvBind
  ev = cobox_aWD
  tm  = CO (cobox_aWE, cobox_aWF)_N
canEvNC:eq
  String
  t_aIB
can_eq_nc
  [W] cobox_aWE :: String ~ t_aIB
  String
  String
  t_aIB
  t_aIB
can_eq_nc
  [W] cobox_aWE :: String ~ t_aIB
  [Char]
  String
  t_aIB
  t_aIB
canEqTyVar
  t_aIB
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWG :: t_aIB ~ String
setEvBind
  ev = cobox_aWE
  tm  = CO Sym cobox_aWG
rewriteEqEvidence
  [W] cobox_aWE :: String ~ t_aIB
  t_aIB
  String
  Sym cobox_aWG
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWG :: t_aIB
                                 ~ String [" a type equality (t_aIB, t_aIC)
                                                             ~
                                                             t_aIa " HTML3.hs:43:42-58] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIB := String
  Coercion: t_aIB ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIB := String
setEvBind
  ev = cobox_aWG
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
264[<C:0,F:0>] [W] cobox_aWG :: t_aIB
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aWF :: String
                                ~ t_aIC [" a type equality (t_aIB, t_aIC)
                                                           ~
                                                           t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aWF :: String
                                 ~ t_aIC [" a type equality (t_aIB, t_aIC)
                                                            ~
                                                            t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aWF :: String ~ t_aIC [" a type equality (t_aIB, t_aIC)
                                                     ~
                                                     t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
canEvNC:eq
  String
  t_aIC
can_eq_nc
  [W] cobox_aWF :: String ~ t_aIC
  String
  String
  t_aIC
  t_aIC
can_eq_nc
  [W] cobox_aWF :: String ~ t_aIC
  [Char]
  String
  t_aIC
  t_aIC
canEqTyVar
  t_aIC
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWH :: t_aIC ~ String
setEvBind
  ev = cobox_aWF
  tm  = CO Sym cobox_aWH
rewriteEqEvidence
  [W] cobox_aWF :: String ~ t_aIC
  t_aIC
  String
  Sym cobox_aWH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWH :: t_aIC
                                 ~ String [" a type equality (t_aIB, t_aIC)
                                                             ~
                                                             t_aIa " HTML3.hs:43:42-58] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIC := String
  Coercion: t_aIC ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIC := String
setEvBind
  ev = cobox_aWH
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aIC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
265[<C:0,F:0>] [W] cobox_aWH :: t_aIC
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIE :: [Char]
                                ~ t_aIB [" a type equality [Char]
                                                           ~
                                                           t_aIB " HTML3.hs:43:43-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIE :: [Char]
                                 ~ t_aIB [" a type equality [Char]
                                                            ~
                                                            t_aIB " HTML3.hs:43:43-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIE :: [Char] ~ t_aIB [" a type equality [Char]
                                                     ~
                                                     t_aIB " HTML3.hs:43:43-48] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIB
can_eq_nc
  [W] cobox_aIE :: [Char] ~ t_aIB
  [Char]
  [Char]
  t_aIB
  t_aIB
canEqTyVar
  t_aIB
  [Char]
  Is-swapped
Following bound tyvar t_aIB = String
newWantedEvVar/cache miss [W] cobox_aWI :: String ~ [Char]
setEvBind
  ev = cobox_aIE
  tm  = CO Sym cobox_aWI
rewriteEqEvidence
  [W] cobox_aIE :: [Char] ~ t_aIB
  String
  [Char]
  Sym cobox_aWI
canEqTyVar2
  t_aIB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWI :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWI :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWJ :: Char ~ Char
setEvBind
  ev = cobox_aWI
  tm  = CO [cobox_aWJ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWJ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWJ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIF :: [Char]
                                ~ t_aIC [" a type equality [Char]
                                                           ~
                                                           t_aIC " HTML3.hs:43:51-57] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIF :: [Char]
                                 ~ t_aIC [" a type equality [Char]
                                                            ~
                                                            t_aIC " HTML3.hs:43:51-57] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIF :: [Char] ~ t_aIC [" a type equality [Char]
                                                     ~
                                                     t_aIC " HTML3.hs:43:51-57] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aIC
can_eq_nc
  [W] cobox_aIF :: [Char] ~ t_aIC
  [Char]
  [Char]
  t_aIC
  t_aIC
canEqTyVar
  t_aIC
  [Char]
  Is-swapped
Following bound tyvar t_aIC = String
newWantedEvVar/cache miss [W] cobox_aWK :: String ~ [Char]
setEvBind
  ev = cobox_aIF
  tm  = CO Sym cobox_aWK
rewriteEqEvidence
  [W] cobox_aIF :: [Char] ~ t_aIC
  String
  [Char]
  Sym cobox_aWK
canEqTyVar2
  t_aIC
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aWK :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aWK :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aWL :: Char ~ Char
setEvBind
  ev = cobox_aWK
  tm  = CO [cobox_aWL]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWL :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWL
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aII :: [t_aIH]
                                ~ t_aDo [" a type equality [t_aIH]
                                                           ~
                                                           t_aDo " HTML3.hs:37:9-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aII :: [t_aIH]
                                 ~ t_aDo [" a type equality [t_aIH]
                                                            ~
                                                            t_aDo " HTML3.hs:37:9-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aII :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                      ~
                                                      t_aDo " HTML3.hs:37:9-20] (CNonCanonical)
canEvNC:eq
  [t_aIH]
  t_aDo
can_eq_nc
  [W] cobox_aII :: [t_aIH] ~ t_aDo
  [t_aIH]
  [t_aIH]
  t_aDo
  t_aDo
canEqTyVar
  t_aDo
  [t_aIH]
  Is-swapped
Following bound tyvar t_aDo = [Maybe Requirement]
newWantedEvVar/cache miss
  [W] cobox_aWM :: [Maybe Requirement] ~ [t_aIH]
setEvBind
  ev = cobox_aII
  tm  = CO Sym cobox_aWM
rewriteEqEvidence
  [W] cobox_aII :: [t_aIH] ~ t_aDo
  [Maybe Requirement]
  [t_aIH]
  Sym cobox_aWM
canEqTyVar2
  t_aDo
  [t_aIH]
  Is-swapped
  [Maybe Requirement]
  <[Maybe Requirement]>_N
can_eq_nc
  [W] cobox_aWM :: [Maybe Requirement] ~ [t_aIH]
  [Maybe Requirement]
  [Maybe Requirement]
  [t_aIH]
  [t_aIH]
newWantedEvVar/cache miss
  [W] cobox_aWN :: Maybe Requirement ~ t_aIH
setEvBind
  ev = cobox_aWM
  tm  = CO [cobox_aWN]_N
canEvNC:eq
  Maybe Requirement
  t_aIH
can_eq_nc
  [W] cobox_aWN :: Maybe Requirement ~ t_aIH
  Maybe Requirement
  Maybe Requirement
  t_aIH
  t_aIH
canEqTyVar
  t_aIH
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aWO :: t_aIH ~ Maybe Requirement
setEvBind
  ev = cobox_aWN
  tm  = CO Sym cobox_aWO
rewriteEqEvidence
  [W] cobox_aWN :: Maybe Requirement ~ t_aIH
  t_aIH
  Maybe Requirement
  Sym cobox_aWO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWO :: t_aIH
                                 ~ Maybe Requirement [" a type equality [t_aIH]
                                                                        ~
                                                                        t_aDo " HTML3.hs:37:9-20] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIH := Maybe Requirement
  Coercion: t_aIH ~ Maybe Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIH := Maybe Requirement
setEvBind
  ev = cobox_aWO
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  t_aIH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
268[<C:0,F:0>] [W] cobox_aWO :: t_aIH
                                ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIK :: Maybe t_aIJ
                                ~ t_aIH [" a type equality Maybe t_aIJ
                                                           ~
                                                           t_aIH " HTML3.hs:37:9-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIK :: Maybe t_aIJ
                                 ~ t_aIH [" a type equality Maybe t_aIJ
                                                            ~
                                                            t_aIH " HTML3.hs:37:9-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIK :: Maybe t_aIJ ~ t_aIH [" a type equality Maybe t_aIJ
                                                          ~
                                                          t_aIH " HTML3.hs:37:9-15] (CNonCanonical)
canEvNC:eq
  Maybe t_aIJ
  t_aIH
can_eq_nc
  [W] cobox_aIK :: Maybe t_aIJ ~ t_aIH
  Maybe t_aIJ
  Maybe t_aIJ
  t_aIH
  t_aIH
canEqTyVar
  t_aIH
  Maybe t_aIJ
  Is-swapped
Following bound tyvar t_aIH = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aWP :: Maybe Requirement ~ Maybe t_aIJ
setEvBind
  ev = cobox_aIK
  tm  = CO Sym cobox_aWP
rewriteEqEvidence
  [W] cobox_aIK :: Maybe t_aIJ ~ t_aIH
  Maybe Requirement
  Maybe t_aIJ
  Sym cobox_aWP
canEqTyVar2
  t_aIH
  Maybe t_aIJ
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aWP :: Maybe Requirement ~ Maybe t_aIJ
  Maybe Requirement
  Maybe Requirement
  Maybe t_aIJ
  Maybe t_aIJ
newWantedEvVar/cache miss [W] cobox_aWQ :: Requirement ~ t_aIJ
setEvBind
  ev = cobox_aWP
  tm  = CO Maybe cobox_aWQ_N
canEvNC:eq
  Requirement
  t_aIJ
can_eq_nc
  [W] cobox_aWQ :: Requirement ~ t_aIJ
  Requirement
  Requirement
  t_aIJ
  t_aIJ
can_eq_nc
  [W] cobox_aWQ :: Requirement ~ t_aIJ
  (String, String)
  Requirement
  t_aIJ
  t_aIJ
canEqTyVar
  t_aIJ
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aWR :: t_aIJ ~ Requirement
setEvBind
  ev = cobox_aWQ
  tm  = CO Sym cobox_aWR
rewriteEqEvidence
  [W] cobox_aWQ :: Requirement ~ t_aIJ
  t_aIJ
  Requirement
  Sym cobox_aWR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aWR :: t_aIJ
                                 ~ Requirement [" a type equality Maybe t_aIJ
                                                                  ~
                                                                  t_aIH " HTML3.hs:37:9-15] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIJ := Requirement
  Coercion: t_aIJ ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIJ := Requirement
setEvBind
  ev = cobox_aWR
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  t_aIJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
269[<C:0,F:0>] [W] cobox_aWR :: t_aIJ
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIL :: t_aDp
                                ~ t_aDp [" a type equality t_aDp
                                                           ~
                                                           t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIL :: t_aDp
                                 ~ t_aDp [" a type equality t_aDp
                                                            ~
                                                            t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIL :: t_aDp ~ t_aDp [" a type equality t_aDp
                                                    ~
                                                    t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
canEvNC:eq
  t_aDp
  t_aDp
can_eq_nc
  [W] cobox_aIL :: t_aDp ~ t_aDp
  t_aDp
  t_aDp
  t_aDp
  t_aDp
canEqTyVar
  t_aDp
  t_aDp
  Not-swapped
Following bound tyvar t_aDp = Maybe Requirement
canEqTyVar2
  t_aDp
  t_aDp
  Not-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aIL :: Maybe Requirement ~ t_aDp
  Maybe Requirement
  Maybe Requirement
  t_aDp
  t_aDp
canEqTyVar
  t_aDp
  Maybe Requirement
  Is-swapped
Following bound tyvar t_aDp = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aWS :: Maybe Requirement ~ Maybe Requirement
setEvBind
  ev = cobox_aIL
  tm  = CO Sym cobox_aWS
rewriteEqEvidence
  [W] cobox_aIL :: Maybe Requirement ~ t_aDp
  Maybe Requirement
  Maybe Requirement
  Sym cobox_aWS
canEqTyVar2
  t_aDp
  Maybe Requirement
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aWS :: Maybe Requirement ~ Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aWT :: Requirement ~ Requirement
setEvBind
  ev = cobox_aWS
  tm  = CO Maybe cobox_aWT_N
canEvNC:eq
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aWT :: Requirement ~ Requirement
  Requirement
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aWT :: Requirement ~ Requirement
  (String, String)
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aWT :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_aWU :: String ~ String
newWantedEvVar/cache miss [W] cobox_aWV :: String ~ String
setEvBind
  ev = cobox_aWT
  tm  = CO (cobox_aWU, cobox_aWV)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aWU :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aWU :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aWU :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aWW :: Char ~ Char
setEvBind
  ev = cobox_aWU
  tm  = CO [cobox_aWW]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWW :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWW
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aWV :: String
                                ~ String [" a type equality t_aDp
                                                            ~
                                                            t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aWV :: String
                                 ~ String [" a type equality t_aDp
                                                             ~
                                                             t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aWV :: String ~ String [" a type equality t_aDp
                                                      ~
                                                      t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aWV :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aWV :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aWV :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aWX :: Char ~ Char
setEvBind
  ev = cobox_aWV
  tm  = CO [cobox_aWX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aWX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aWX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIM :: [t_aIH]
                                ~ t_aDo [" a type equality [t_aIH]
                                                           ~
                                                           t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIM :: [t_aIH]
                                 ~ t_aDo [" a type equality [t_aIH]
                                                            ~
                                                            t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIM :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                      ~
                                                      t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
canEvNC:eq
  [t_aIH]
  t_aDo
can_eq_nc
  [W] cobox_aIM :: [t_aIH] ~ t_aDo
  [t_aIH]
  [t_aIH]
  t_aDo
  t_aDo
canEqTyVar
  t_aDo
  [t_aIH]
  Is-swapped
Following bound tyvar t_aDo = [Maybe Requirement]
newWantedEvVar/cache miss
  [W] cobox_aWY :: [Maybe Requirement] ~ [t_aIH]
setEvBind
  ev = cobox_aIM
  tm  = CO Sym cobox_aWY
rewriteEqEvidence
  [W] cobox_aIM :: [t_aIH] ~ t_aDo
  [Maybe Requirement]
  [t_aIH]
  Sym cobox_aWY
canEqTyVar2
  t_aDo
  [t_aIH]
  Is-swapped
  [Maybe Requirement]
  <[Maybe Requirement]>_N
can_eq_nc
  [W] cobox_aWY :: [Maybe Requirement] ~ [t_aIH]
  [Maybe Requirement]
  [Maybe Requirement]
  [t_aIH]
  [t_aIH]
newWantedEvVar/cache miss
  [W] cobox_aWZ :: Maybe Requirement ~ t_aIH
setEvBind
  ev = cobox_aWY
  tm  = CO [cobox_aWZ]_N
canEvNC:eq
  Maybe Requirement
  t_aIH
can_eq_nc
  [W] cobox_aWZ :: Maybe Requirement ~ t_aIH
  Maybe Requirement
  Maybe Requirement
  t_aIH
  t_aIH
canEqTyVar
  t_aIH
  Maybe Requirement
  Is-swapped
Following bound tyvar t_aIH = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aX0 :: Maybe Requirement ~ Maybe Requirement
setEvBind
  ev = cobox_aWZ
  tm  = CO Sym cobox_aX0
rewriteEqEvidence
  [W] cobox_aWZ :: Maybe Requirement ~ t_aIH
  Maybe Requirement
  Maybe Requirement
  Sym cobox_aX0
canEqTyVar2
  t_aIH
  Maybe Requirement
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aX0 :: Maybe Requirement ~ Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aX1 :: Requirement ~ Requirement
setEvBind
  ev = cobox_aX0
  tm  = CO Maybe cobox_aX1_N
canEvNC:eq
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aX1 :: Requirement ~ Requirement
  Requirement
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aX1 :: Requirement ~ Requirement
  (String, String)
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aX1 :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_aX2 :: String ~ String
newWantedEvVar/cache miss [W] cobox_aX3 :: String ~ String
setEvBind
  ev = cobox_aX1
  tm  = CO (cobox_aX2, cobox_aX3)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aX2 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aX2 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aX2 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aX4 :: Char ~ Char
setEvBind
  ev = cobox_aX2
  tm  = CO [cobox_aX4]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aX4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aX4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aX3 :: String
                                ~ String [" a type equality [t_aIH]
                                                            ~
                                                            t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aX3 :: String
                                 ~ String [" a type equality [t_aIH]
                                                             ~
                                                             t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aX3 :: String ~ String [" a type equality [t_aIH]
                                                      ~
                                                      t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aX3 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aX3 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aX3 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aX5 :: Char ~ Char
setEvBind
  ev = cobox_aX3
  tm  = CO [cobox_aX5]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aX5 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aX5
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIO :: [t_aIN]
                                ~ t_aDo [" a type equality [t_aIN]
                                                           ~
                                                           t_aDo " HTML3.hs:38:8-9] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIO :: [t_aIN]
                                 ~ t_aDo [" a type equality [t_aIN]
                                                            ~
                                                            t_aDo " HTML3.hs:38:8-9] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIO :: [t_aIN] ~ t_aDo [" a type equality [t_aIN]
                                                      ~
                                                      t_aDo " HTML3.hs:38:8-9] (CNonCanonical)
canEvNC:eq
  [t_aIN]
  t_aDo
can_eq_nc
  [W] cobox_aIO :: [t_aIN] ~ t_aDo
  [t_aIN]
  [t_aIN]
  t_aDo
  t_aDo
canEqTyVar
  t_aDo
  [t_aIN]
  Is-swapped
Following bound tyvar t_aDo = [Maybe Requirement]
newWantedEvVar/cache miss
  [W] cobox_aX6 :: [Maybe Requirement] ~ [t_aIN]
setEvBind
  ev = cobox_aIO
  tm  = CO Sym cobox_aX6
rewriteEqEvidence
  [W] cobox_aIO :: [t_aIN] ~ t_aDo
  [Maybe Requirement]
  [t_aIN]
  Sym cobox_aX6
canEqTyVar2
  t_aDo
  [t_aIN]
  Is-swapped
  [Maybe Requirement]
  <[Maybe Requirement]>_N
can_eq_nc
  [W] cobox_aX6 :: [Maybe Requirement] ~ [t_aIN]
  [Maybe Requirement]
  [Maybe Requirement]
  [t_aIN]
  [t_aIN]
newWantedEvVar/cache miss
  [W] cobox_aX7 :: Maybe Requirement ~ t_aIN
setEvBind
  ev = cobox_aX6
  tm  = CO [cobox_aX7]_N
canEvNC:eq
  Maybe Requirement
  t_aIN
can_eq_nc
  [W] cobox_aX7 :: Maybe Requirement ~ t_aIN
  Maybe Requirement
  Maybe Requirement
  t_aIN
  t_aIN
canEqTyVar
  t_aIN
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aX8 :: t_aIN ~ Maybe Requirement
setEvBind
  ev = cobox_aX7
  tm  = CO Sym cobox_aX8
rewriteEqEvidence
  [W] cobox_aX7 :: Maybe Requirement ~ t_aIN
  t_aIN
  Maybe Requirement
  Sym cobox_aX8
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aX8 :: t_aIN
                                 ~ Maybe Requirement [" a type equality [t_aIN]
                                                                        ~
                                                                        t_aDo " HTML3.hs:38:8-9] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIN := Maybe Requirement
  Coercion: t_aIN ~ Maybe Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIN := Maybe Requirement
setEvBind
  ev = cobox_aX8
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  t_aIN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
274[<C:0,F:0>] [W] cobox_aX8 :: t_aIN
                                ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIQ :: Maybe a_aIP
                                ~ t_aDp [" a type equality Maybe a_aIP
                                                           ~
                                                           t_aDp " HTML3.hs:38:25-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIQ :: Maybe a_aIP
                                 ~ t_aDp [" a type equality Maybe a_aIP
                                                            ~
                                                            t_aDp " HTML3.hs:38:25-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIQ :: Maybe a_aIP ~ t_aDp [" a type equality Maybe a_aIP
                                                          ~
                                                          t_aDp " HTML3.hs:38:25-31] (CNonCanonical)
canEvNC:eq
  Maybe a_aIP
  t_aDp
can_eq_nc
  [W] cobox_aIQ :: Maybe a_aIP ~ t_aDp
  Maybe a_aIP
  Maybe a_aIP
  t_aDp
  t_aDp
canEqTyVar
  t_aDp
  Maybe a_aIP
  Is-swapped
Following bound tyvar t_aDp = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aX9 :: Maybe Requirement ~ Maybe a_aIP
setEvBind
  ev = cobox_aIQ
  tm  = CO Sym cobox_aX9
rewriteEqEvidence
  [W] cobox_aIQ :: Maybe a_aIP ~ t_aDp
  Maybe Requirement
  Maybe a_aIP
  Sym cobox_aX9
canEqTyVar2
  t_aDp
  Maybe a_aIP
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aX9 :: Maybe Requirement ~ Maybe a_aIP
  Maybe Requirement
  Maybe Requirement
  Maybe a_aIP
  Maybe a_aIP
newWantedEvVar/cache miss [W] cobox_aXa :: Requirement ~ a_aIP
setEvBind
  ev = cobox_aX9
  tm  = CO Maybe cobox_aXa_N
canEvNC:eq
  Requirement
  a_aIP
can_eq_nc
  [W] cobox_aXa :: Requirement ~ a_aIP
  Requirement
  Requirement
  a_aIP
  a_aIP
can_eq_nc
  [W] cobox_aXa :: Requirement ~ a_aIP
  (String, String)
  Requirement
  a_aIP
  a_aIP
canEqTyVar
  a_aIP
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aXb :: a_aIP ~ Requirement
setEvBind
  ev = cobox_aXa
  tm  = CO Sym cobox_aXb
rewriteEqEvidence
  [W] cobox_aXa :: Requirement ~ a_aIP
  a_aIP
  Requirement
  Sym cobox_aXb
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXb :: a_aIP
                                 ~ Requirement [" a type equality Maybe a_aIP
                                                                  ~
                                                                  t_aDp " HTML3.hs:38:25-31] (CTyEqCan)
Sneaky unification:
  Unifies: a_aIP := Requirement
  Coercion: a_aIP ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aIP := Requirement
setEvBind
  ev = cobox_aXb
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aIP
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
275[<C:0,F:0>] [W] cobox_aXb :: a_aIP
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIS :: [t_aIR]
                                ~ t_aDo [" a type equality [t_aIR]
                                                           ~
                                                           t_aDo " HTML3.hs:39:9-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIS :: [t_aIR]
                                 ~ t_aDo [" a type equality [t_aIR]
                                                            ~
                                                            t_aDo " HTML3.hs:39:9-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIS :: [t_aIR] ~ t_aDo [" a type equality [t_aIR]
                                                      ~
                                                      t_aDo " HTML3.hs:39:9-16] (CNonCanonical)
canEvNC:eq
  [t_aIR]
  t_aDo
can_eq_nc
  [W] cobox_aIS :: [t_aIR] ~ t_aDo
  [t_aIR]
  [t_aIR]
  t_aDo
  t_aDo
canEqTyVar
  t_aDo
  [t_aIR]
  Is-swapped
Following bound tyvar t_aDo = [Maybe Requirement]
newWantedEvVar/cache miss
  [W] cobox_aXc :: [Maybe Requirement] ~ [t_aIR]
setEvBind
  ev = cobox_aIS
  tm  = CO Sym cobox_aXc
rewriteEqEvidence
  [W] cobox_aIS :: [t_aIR] ~ t_aDo
  [Maybe Requirement]
  [t_aIR]
  Sym cobox_aXc
canEqTyVar2
  t_aDo
  [t_aIR]
  Is-swapped
  [Maybe Requirement]
  <[Maybe Requirement]>_N
can_eq_nc
  [W] cobox_aXc :: [Maybe Requirement] ~ [t_aIR]
  [Maybe Requirement]
  [Maybe Requirement]
  [t_aIR]
  [t_aIR]
newWantedEvVar/cache miss
  [W] cobox_aXd :: Maybe Requirement ~ t_aIR
setEvBind
  ev = cobox_aXc
  tm  = CO [cobox_aXd]_N
canEvNC:eq
  Maybe Requirement
  t_aIR
can_eq_nc
  [W] cobox_aXd :: Maybe Requirement ~ t_aIR
  Maybe Requirement
  Maybe Requirement
  t_aIR
  t_aIR
canEqTyVar
  t_aIR
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aXe :: t_aIR ~ Maybe Requirement
setEvBind
  ev = cobox_aXd
  tm  = CO Sym cobox_aXe
rewriteEqEvidence
  [W] cobox_aXd :: Maybe Requirement ~ t_aIR
  t_aIR
  Maybe Requirement
  Sym cobox_aXe
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXe :: t_aIR
                                 ~ Maybe Requirement [" a type equality [t_aIR]
                                                                        ~
                                                                        t_aDo " HTML3.hs:39:9-16] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIR := Maybe Requirement
  Coercion: t_aIR ~ Maybe Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIR := Maybe Requirement
setEvBind
  ev = cobox_aXe
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  t_aIR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
276[<C:0,F:0>] [W] cobox_aXe :: t_aIR
                                ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIU :: Maybe t_aIT
                                ~ t_aIR [" a type equality Maybe t_aIT
                                                           ~
                                                           t_aIR " HTML3.hs:39:9-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIU :: Maybe t_aIT
                                 ~ t_aIR [" a type equality Maybe t_aIT
                                                            ~
                                                            t_aIR " HTML3.hs:39:9-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIU :: Maybe t_aIT ~ t_aIR [" a type equality Maybe t_aIT
                                                          ~
                                                          t_aIR " HTML3.hs:39:9-14] (CNonCanonical)
canEvNC:eq
  Maybe t_aIT
  t_aIR
can_eq_nc
  [W] cobox_aIU :: Maybe t_aIT ~ t_aIR
  Maybe t_aIT
  Maybe t_aIT
  t_aIR
  t_aIR
canEqTyVar
  t_aIR
  Maybe t_aIT
  Is-swapped
Following bound tyvar t_aIR = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aXf :: Maybe Requirement ~ Maybe t_aIT
setEvBind
  ev = cobox_aIU
  tm  = CO Sym cobox_aXf
rewriteEqEvidence
  [W] cobox_aIU :: Maybe t_aIT ~ t_aIR
  Maybe Requirement
  Maybe t_aIT
  Sym cobox_aXf
canEqTyVar2
  t_aIR
  Maybe t_aIT
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aXf :: Maybe Requirement ~ Maybe t_aIT
  Maybe Requirement
  Maybe Requirement
  Maybe t_aIT
  Maybe t_aIT
newWantedEvVar/cache miss [W] cobox_aXg :: Requirement ~ t_aIT
setEvBind
  ev = cobox_aXf
  tm  = CO Maybe cobox_aXg_N
canEvNC:eq
  Requirement
  t_aIT
can_eq_nc
  [W] cobox_aXg :: Requirement ~ t_aIT
  Requirement
  Requirement
  t_aIT
  t_aIT
can_eq_nc
  [W] cobox_aXg :: Requirement ~ t_aIT
  (String, String)
  Requirement
  t_aIT
  t_aIT
canEqTyVar
  t_aIT
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aXh :: t_aIT ~ Requirement
setEvBind
  ev = cobox_aXg
  tm  = CO Sym cobox_aXh
rewriteEqEvidence
  [W] cobox_aXg :: Requirement ~ t_aIT
  t_aIT
  Requirement
  Sym cobox_aXh
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXh :: t_aIT
                                 ~ Requirement [" a type equality Maybe t_aIT
                                                                  ~
                                                                  t_aIR " HTML3.hs:39:9-14] (CTyEqCan)
Sneaky unification:
  Unifies: t_aIT := Requirement
  Coercion: t_aIT ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aIT := Requirement
setEvBind
  ev = cobox_aXh
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  t_aIT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
277[<C:0,F:0>] [W] cobox_aXh :: t_aIT
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIW :: Maybe a_aIV
                                ~ t_aDp [" a type equality Maybe a_aIV
                                                           ~
                                                           t_aDp " HTML3.hs:39:25-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIW :: Maybe a_aIV
                                 ~ t_aDp [" a type equality Maybe a_aIV
                                                            ~
                                                            t_aDp " HTML3.hs:39:25-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIW :: Maybe a_aIV ~ t_aDp [" a type equality Maybe a_aIV
                                                          ~
                                                          t_aDp " HTML3.hs:39:25-30] (CNonCanonical)
canEvNC:eq
  Maybe a_aIV
  t_aDp
can_eq_nc
  [W] cobox_aIW :: Maybe a_aIV ~ t_aDp
  Maybe a_aIV
  Maybe a_aIV
  t_aDp
  t_aDp
canEqTyVar
  t_aDp
  Maybe a_aIV
  Is-swapped
Following bound tyvar t_aDp = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aXi :: Maybe Requirement ~ Maybe a_aIV
setEvBind
  ev = cobox_aIW
  tm  = CO Sym cobox_aXi
rewriteEqEvidence
  [W] cobox_aIW :: Maybe a_aIV ~ t_aDp
  Maybe Requirement
  Maybe a_aIV
  Sym cobox_aXi
canEqTyVar2
  t_aDp
  Maybe a_aIV
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aXi :: Maybe Requirement ~ Maybe a_aIV
  Maybe Requirement
  Maybe Requirement
  Maybe a_aIV
  Maybe a_aIV
newWantedEvVar/cache miss [W] cobox_aXj :: Requirement ~ a_aIV
setEvBind
  ev = cobox_aXi
  tm  = CO Maybe cobox_aXj_N
canEvNC:eq
  Requirement
  a_aIV
can_eq_nc
  [W] cobox_aXj :: Requirement ~ a_aIV
  Requirement
  Requirement
  a_aIV
  a_aIV
can_eq_nc
  [W] cobox_aXj :: Requirement ~ a_aIV
  (String, String)
  Requirement
  a_aIV
  a_aIV
canEqTyVar
  a_aIV
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aXk :: a_aIV ~ Requirement
setEvBind
  ev = cobox_aXj
  tm  = CO Sym cobox_aXk
rewriteEqEvidence
  [W] cobox_aXj :: Requirement ~ a_aIV
  a_aIV
  Requirement
  Sym cobox_aXk
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXk :: a_aIV
                                 ~ Requirement [" a type equality Maybe a_aIV
                                                                  ~
                                                                  t_aDp " HTML3.hs:39:25-30] (CTyEqCan)
Sneaky unification:
  Unifies: a_aIV := Requirement
  Coercion: a_aIV ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aIV := Requirement
setEvBind
  ev = cobox_aXk
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aIV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
278[<C:0,F:0>] [W] cobox_aXk :: a_aIV
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIX :: t_aIT
                                ~ a_aIV [" a type equality t_aIT
                                                           ~
                                                           a_aIV " HTML3.hs:39:30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIX :: t_aIT
                                 ~ a_aIV [" a type equality t_aIT
                                                            ~
                                                            a_aIV " HTML3.hs:39:30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIX :: t_aIT ~ a_aIV [" a type equality t_aIT
                                                    ~
                                                    a_aIV " HTML3.hs:39:30] (CNonCanonical)
canEvNC:eq
  t_aIT
  a_aIV
can_eq_nc
  [W] cobox_aIX :: t_aIT ~ a_aIV
  t_aIT
  t_aIT
  a_aIV
  a_aIV
canEqTyVar
  t_aIT
  a_aIV
  Not-swapped
Following bound tyvar t_aIT = Requirement
canEqTyVar2
  t_aIT
  a_aIV
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aIX :: Requirement ~ a_aIV
  Requirement
  Requirement
  a_aIV
  a_aIV
can_eq_nc
  [W] cobox_aIX :: Requirement ~ a_aIV
  (String, String)
  Requirement
  a_aIV
  a_aIV
canEqTyVar
  a_aIV
  (String, String)
  Is-swapped
Following bound tyvar a_aIV = Requirement
newWantedEvVar/cache miss
  [W] cobox_aXl :: Requirement ~ Requirement
setEvBind
  ev = cobox_aIX
  tm  = CO Sym cobox_aXl
rewriteEqEvidence
  [W] cobox_aIX :: Requirement ~ a_aIV
  Requirement
  Requirement
  Sym cobox_aXl
canEqTyVar2
  a_aIV
  (String, String)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aXl :: Requirement ~ Requirement
  Requirement
  Requirement
  (String, String)
  Requirement
can_eq_nc
  [W] cobox_aXl :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_aXm :: String ~ String
newWantedEvVar/cache miss [W] cobox_aXn :: String ~ String
setEvBind
  ev = cobox_aXl
  tm  = CO (cobox_aXm, cobox_aXn)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aXm :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aXm :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aXm :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXo :: Char ~ Char
setEvBind
  ev = cobox_aXm
  tm  = CO [cobox_aXo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aXn :: String
                                ~ String [" a type equality t_aIT
                                                            ~
                                                            a_aIV " HTML3.hs:39:30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aXn :: String
                                 ~ String [" a type equality t_aIT
                                                             ~
                                                             a_aIV " HTML3.hs:39:30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aXn :: String ~ String [" a type equality t_aIT
                                                      ~
                                                      a_aIV " HTML3.hs:39:30] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aXn :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aXn :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aXn :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXp :: Char ~ Char
setEvBind
  ev = cobox_aXn
  tm  = CO [cobox_aXp]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXp :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXp
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIZ :: HTML ~ t_aDG [" a type equality HTML
                                                                ~
                                                                t_aDG " HTML3.hs:14:13-137] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIZ :: HTML ~ t_aDG [" a type equality HTML
                                                                 ~
                                                                 t_aDG " HTML3.hs:14:13-137] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIZ :: HTML ~ t_aDG [" a type equality HTML
                                                   ~
                                                   t_aDG " HTML3.hs:14:13-137] (CNonCanonical)
canEvNC:eq
  HTML
  t_aDG
can_eq_nc
  [W] cobox_aIZ :: HTML ~ t_aDG
  HTML
  HTML
  t_aDG
  t_aDG
canEqTyVar
  t_aDG
  HTML
  Is-swapped
Following bound tyvar t_aDG = HTML
newWantedEvVar/cache miss [W] cobox_aXq :: HTML ~ HTML
setEvBind
  ev = cobox_aIZ
  tm  = CO Sym cobox_aXq
rewriteEqEvidence
  [W] cobox_aIZ :: HTML ~ t_aDG
  HTML
  HTML
  Sym cobox_aXq
canEqTyVar2
  t_aDG
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aXq :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aXq
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ0 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:23-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ0 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:23-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ0 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:23-28] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJ0 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJ0 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXr :: Char ~ Char
setEvBind
  ev = cobox_aJ0
  tm  = CO [cobox_aXr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ1 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:32-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ1 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:32-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ1 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:32-38] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJ1 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJ1 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXs :: Char ~ Char
setEvBind
  ev = cobox_aJ1
  tm  = CO [cobox_aXs]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXs :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXs
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ2 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:40-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ2 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:40-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ2 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:40-45] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJ2 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJ2 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXt :: Char ~ Char
setEvBind
  ev = cobox_aJ2
  tm  = CO [cobox_aXt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ3 :: HTML ~ HTML [" a type equality HTML
                                                               ~
                                                               HTML " HTML3.hs:14:51-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ3 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:51-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ3 :: HTML ~ HTML [" a type equality HTML
                                                  ~
                                                  HTML " HTML3.hs:14:51-62] (CNonCanonical)
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aJ3 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJ3
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ4 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:56-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ4 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:56-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ4 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:56-62] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJ4 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJ4 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXu :: Char ~ Char
setEvBind
  ev = cobox_aJ4
  tm  = CO [cobox_aXu]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXu :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXu
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ5 :: HTML ~ HTML [" a type equality HTML
                                                               ~
                                                               HTML " HTML3.hs:14:66-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ5 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:66-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ5 :: HTML ~ HTML [" a type equality HTML
                                                  ~
                                                  HTML " HTML3.hs:14:66-98] (CNonCanonical)
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aJ5 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJ5
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ6 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:76-80] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ6 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:76-80] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ6 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:76-80] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJ6 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJ6 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXv :: Char ~ Char
setEvBind
  ev = cobox_aJ6
  tm  = CO [cobox_aXv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ7 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:84-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ7 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:84-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ7 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:84-90] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJ7 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJ7 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXw :: Char ~ Char
setEvBind
  ev = cobox_aJ7
  tm  = CO [cobox_aXw]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ8 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:92-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ8 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:92-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ8 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:92-96] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJ8 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJ8 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXx :: Char ~ Char
setEvBind
  ev = cobox_aJ8
  tm  = CO [cobox_aXx]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXx :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXx
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJ9 :: HTML ~ HTML [" a type equality HTML
                                                               ~
                                                               HTML " HTML3.hs:14:102-135] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJ9 :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:14:102-135] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJ9 :: HTML ~ HTML [" a type equality HTML
                                                  ~
                                                  HTML " HTML3.hs:14:102-135] (CNonCanonical)
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aJ9 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJ9
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJa :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:112-116] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJa :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:112-116] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJa :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:112-116] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJa :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJa :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXy :: Char ~ Char
setEvBind
  ev = cobox_aJa
  tm  = CO [cobox_aXy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJb :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:120-126] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJb :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:120-126] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJb :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:120-126] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJb :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJb :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXz :: Char ~ Char
setEvBind
  ev = cobox_aJb
  tm  = CO [cobox_aXz]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJc :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:14:128-133] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJc :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:14:128-133] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJc :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:14:128-133] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aJc :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aJc :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXA :: Char ~ Char
setEvBind
  ev = cobox_aJc
  tm  = CO [cobox_aXA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJf :: a_aJe
                                ~ (t_aDI -> t_aDJ) [" a type equality a_aJe
                                                                      ~
                                                                      t_aDI
                                                                      -> t_aDJ " HTML3.hs:8:7-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJf :: a_aJe
                                 ~ (t_aDI -> t_aDJ) [" a type equality a_aJe
                                                                       ~
                                                                       t_aDI
                                                                       -> t_aDJ " HTML3.hs:8:7-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJf :: a_aJe ~ (t_aDI -> t_aDJ) [" a type equality a_aJe
                                                               ~
                                                               t_aDI
                                                               -> t_aDJ " HTML3.hs:8:7-15] (CNonCanonical)
canEvNC:eq
  a_aJe
  t_aDI -> t_aDJ
can_eq_nc
  [W] cobox_aJf :: a_aJe ~ (t_aDI -> t_aDJ)
  a_aJe
  a_aJe
  t_aDI -> t_aDJ
  t_aDI -> t_aDJ
canEqTyVar
  a_aJe
  t_aDI -> t_aDJ
  Not-swapped
Following bound tyvar t_aDI = Int
Following bound tyvar t_aDJ = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJf :: a_aJe
                                 ~ (Int -> Char) [" a type equality a_aJe
                                                                    ~
                                                                    t_aDI
                                                                    -> t_aDJ " HTML3.hs:8:7-15] (CTyEqCan)
Sneaky unification:
  Unifies: a_aJe := Int -> Char
  Coercion: a_aJe ~ (Int -> Char)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind a_aJe := Int -> Char
setEvBind
  ev = cobox_aJf
  tm  = CO <Int -> Char>_N
kickOutRewritable
  tv =  a_aJe
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
295[<C:0,F:0>] [W] cobox_aJf :: a_aJe
                                ~ (Int -> Char): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJi :: a_aJh
                                ~ (t_aDM -> t_aDN) [" a type equality a_aJh
                                                                      ~
                                                                      t_aDM
                                                                      -> t_aDN " HTML3.hs:6:11-19] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJi :: a_aJh
                                 ~ (t_aDM -> t_aDN) [" a type equality a_aJh
                                                                       ~
                                                                       t_aDM
                                                                       -> t_aDN " HTML3.hs:6:11-19] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJi :: a_aJh ~ (t_aDM -> t_aDN) [" a type equality a_aJh
                                                               ~
                                                               t_aDM
                                                               -> t_aDN " HTML3.hs:6:11-19] (CNonCanonical)
canEvNC:eq
  a_aJh
  t_aDM -> t_aDN
can_eq_nc
  [W] cobox_aJi :: a_aJh ~ (t_aDM -> t_aDN)
  a_aJh
  a_aJh
  t_aDM -> t_aDN
  t_aDM -> t_aDN
canEqTyVar
  a_aJh
  t_aDM -> t_aDN
  Not-swapped
Following bound tyvar t_aDM = Int
Following bound tyvar t_aDN = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJi :: a_aJh
                                 ~ (Int -> String) [" a type equality a_aJh
                                                                      ~
                                                                      t_aDM
                                                                      -> t_aDN " HTML3.hs:6:11-19] (CTyEqCan)
Sneaky unification:
  Unifies: a_aJh := Int -> String
  Coercion: a_aJh ~ (Int -> String)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind a_aJh := Int -> String
setEvBind
  ev = cobox_aJi
  tm  = CO <Int -> String>_N
kickOutRewritable
  tv =  a_aJh
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
296[<C:0,F:0>] [W] cobox_aJi :: a_aJh
                                ~ (Int -> String): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJy :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML3.hs:73:19-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJy :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:73:19-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJy :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML3.hs:73:19-28] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aJy :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aJy
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJz :: t_aCJ
                                ~ a_aJw [" a type equality t_aCJ
                                                           ~
                                                           a_aJw " HTML3.hs:73:19-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJz :: t_aCJ
                                 ~ a_aJw [" a type equality t_aCJ
                                                            ~
                                                            a_aJw " HTML3.hs:73:19-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJz :: t_aCJ ~ a_aJw [" a type equality t_aCJ
                                                    ~
                                                    a_aJw " HTML3.hs:73:19-23] (CNonCanonical)
canEvNC:eq
  t_aCJ
  a_aJw
can_eq_nc
  [W] cobox_aJz :: t_aCJ ~ a_aJw
  t_aCJ
  t_aCJ
  a_aJw
  a_aJw
canEqTyVar
  t_aCJ
  a_aJw
  Not-swapped
Following bound tyvar t_aCJ = Int
canEqTyVar2
  t_aCJ
  a_aJw
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aJz :: Int ~ a_aJw
  Int
  Int
  a_aJw
  a_aJw
canEqTyVar
  a_aJw
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aXB :: a_aJw ~ Int
setEvBind
  ev = cobox_aJz
  tm  = CO Sym cobox_aXB
rewriteEqEvidence
  [W] cobox_aJz :: Int ~ a_aJw
  a_aJw
  Int
  Sym cobox_aXB
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXB :: a_aJw ~ Int [" a type equality t_aCJ
                                                                ~
                                                                a_aJw " HTML3.hs:73:19-23] (CTyEqCan)
Sneaky unification:
  Unifies: a_aJw := Int
  Coercion: a_aJw ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aJw := Int
setEvBind
  ev = cobox_aXB
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aJw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
298[<C:0,F:0>] [W] cobox_aXB :: a_aJw ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJC :: (Integer -> a_aJA)
                                ~ (Integer -> a_aJw) [" a type equality Integer -> a_aJA
                                                                        ~
                                                                        Integer
                                                                        -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJC :: (Integer -> a_aJA)
                                 ~ (Integer -> a_aJw) [" a type equality Integer -> a_aJA
                                                                         ~
                                                                         Integer
                                                                         -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJC :: (Integer -> a_aJA)
                   ~ (Integer -> a_aJw) [" a type equality Integer -> a_aJA
                                                           ~
                                                           Integer
                                                           -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
canEvNC:eq
  Integer -> a_aJA
  Integer -> a_aJw
can_eq_nc
  [W] cobox_aJC :: (Integer -> a_aJA) ~ (Integer -> a_aJw)
  Integer -> a_aJA
  Integer -> a_aJA
  Integer -> a_aJw
  Integer -> a_aJw
newWantedEvVar/cache miss [W] cobox_aXC :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aXD :: a_aJA ~ a_aJw
setEvBind
  ev = cobox_aJC
  tm  = CO cobox_aXC -> cobox_aXD
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aXC :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aXC
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aXD :: a_aJA
                                ~ a_aJw [" a type equality Integer -> a_aJA
                                                           ~
                                                           Integer
                                                           -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aXD :: a_aJA
                                 ~ a_aJw [" a type equality Integer -> a_aJA
                                                            ~
                                                            Integer
                                                            -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aXD :: a_aJA ~ a_aJw [" a type equality Integer -> a_aJA
                                                    ~
                                                    Integer
                                                    -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
canEvNC:eq
  a_aJA
  a_aJw
can_eq_nc
  [W] cobox_aXD :: a_aJA ~ a_aJw
  a_aJA
  a_aJA
  a_aJw
  a_aJw
canEqTyVar
  a_aJA
  a_aJw
  Not-swapped
Following bound tyvar a_aJw = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXD :: a_aJA
                                 ~ Int [" a type equality Integer -> a_aJA
                                                          ~
                                                          Integer
                                                          -> a_aJw " HTML3.hs:73:27-28] (CTyEqCan)
Sneaky unification:
  Unifies: a_aJA := Int
  Coercion: a_aJA ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aJA := Int
setEvBind
  ev = cobox_aXD
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aJA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
300[<C:0,F:0>] [W] cobox_aXD :: a_aJA ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJD :: t_aDN
                                ~ t_aCK [" a type equality t_aDN
                                                           ~
                                                           t_aCK " HTML3.hs:73:32-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJD :: t_aDN
                                 ~ t_aCK [" a type equality t_aDN
                                                            ~
                                                            t_aCK " HTML3.hs:73:32-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJD :: t_aDN ~ t_aCK [" a type equality t_aDN
                                                    ~
                                                    t_aCK " HTML3.hs:73:32-44] (CNonCanonical)
canEvNC:eq
  t_aDN
  t_aCK
can_eq_nc
  [W] cobox_aJD :: t_aDN ~ t_aCK
  t_aDN
  t_aDN
  t_aCK
  t_aCK
canEqTyVar
  t_aDN
  t_aCK
  Not-swapped
Following bound tyvar t_aDN = String
canEqTyVar2
  t_aDN
  t_aCK
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJD :: String ~ t_aCK
  String
  String
  t_aCK
  t_aCK
can_eq_nc
  [W] cobox_aJD :: String ~ t_aCK
  [Char]
  String
  t_aCK
  t_aCK
canEqTyVar
  t_aCK
  [Char]
  Is-swapped
Following bound tyvar t_aCK = String
newWantedEvVar/cache miss [W] cobox_aXE :: String ~ String
setEvBind
  ev = cobox_aJD
  tm  = CO Sym cobox_aXE
rewriteEqEvidence
  [W] cobox_aJD :: String ~ t_aCK
  String
  String
  Sym cobox_aXE
canEqTyVar2
  t_aCK
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aXE :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aXE :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aXF :: Char ~ Char
setEvBind
  ev = cobox_aXE
  tm  = CO [cobox_aXF]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aXF :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXF
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJE :: t_aCJ
                                ~ t_aDM [" a type equality t_aCJ
                                                           ~
                                                           t_aDM " HTML3.hs:73:40-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJE :: t_aCJ
                                 ~ t_aDM [" a type equality t_aCJ
                                                            ~
                                                            t_aDM " HTML3.hs:73:40-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJE :: t_aCJ ~ t_aDM [" a type equality t_aCJ
                                                    ~
                                                    t_aDM " HTML3.hs:73:40-44] (CNonCanonical)
canEvNC:eq
  t_aCJ
  t_aDM
can_eq_nc
  [W] cobox_aJE :: t_aCJ ~ t_aDM
  t_aCJ
  t_aCJ
  t_aDM
  t_aDM
canEqTyVar
  t_aCJ
  t_aDM
  Not-swapped
Following bound tyvar t_aCJ = Int
canEqTyVar2
  t_aCJ
  t_aDM
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aJE :: Int ~ t_aDM
  Int
  Int
  t_aDM
  t_aDM
canEqTyVar
  t_aDM
  Int
  Is-swapped
Following bound tyvar t_aDM = Int
newWantedEvVar/cache miss [W] cobox_aXG :: Int ~ Int
setEvBind
  ev = cobox_aJE
  tm  = CO Sym cobox_aXG
rewriteEqEvidence
  [W] cobox_aJE :: Int ~ t_aDM
  Int
  Int
  Sym cobox_aXG
canEqTyVar2
  t_aDM
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aXG :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aXG
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJF :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML3.hs:74:19-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJF :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:74:19-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJF :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML3.hs:74:19-27] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aJF :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aJF
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJH :: [t_aJG]
                                ~ t_aCK [" a type equality [t_aJG]
                                                           ~
                                                           t_aCK " HTML3.hs:74:32-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJH :: [t_aJG]
                                 ~ t_aCK [" a type equality [t_aJG]
                                                            ~
                                                            t_aCK " HTML3.hs:74:32-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJH :: [t_aJG] ~ t_aCK [" a type equality [t_aJG]
                                                      ~
                                                      t_aCK " HTML3.hs:74:32-49] (CNonCanonical)
canEvNC:eq
  [t_aJG]
  t_aCK
can_eq_nc
  [W] cobox_aJH :: [t_aJG] ~ t_aCK
  [t_aJG]
  [t_aJG]
  t_aCK
  t_aCK
canEqTyVar
  t_aCK
  [t_aJG]
  Is-swapped
Following bound tyvar t_aCK = String
newWantedEvVar/cache miss [W] cobox_aXH :: String ~ [t_aJG]
setEvBind
  ev = cobox_aJH
  tm  = CO Sym cobox_aXH
rewriteEqEvidence
  [W] cobox_aJH :: [t_aJG] ~ t_aCK
  String
  [t_aJG]
  Sym cobox_aXH
canEqTyVar2
  t_aCK
  [t_aJG]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aXH :: String ~ [t_aJG]
  String
  String
  [t_aJG]
  [t_aJG]
can_eq_nc
  [W] cobox_aXH :: String ~ [t_aJG]
  [Char]
  String
  [t_aJG]
  [t_aJG]
newWantedEvVar/cache miss [W] cobox_aXI :: Char ~ t_aJG
setEvBind
  ev = cobox_aXH
  tm  = CO [cobox_aXI]_N
canEvNC:eq
  Char
  t_aJG
can_eq_nc
  [W] cobox_aXI :: Char ~ t_aJG
  Char
  Char
  t_aJG
  t_aJG
canEqTyVar
  t_aJG
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aXJ :: t_aJG ~ Char
setEvBind
  ev = cobox_aXI
  tm  = CO Sym cobox_aXJ
rewriteEqEvidence
  [W] cobox_aXI :: Char ~ t_aJG
  t_aJG
  Char
  Sym cobox_aXJ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXJ :: t_aJG
                                 ~ Char [" a type equality [t_aJG]
                                                           ~
                                                           t_aCK " HTML3.hs:74:32-49] (CTyEqCan)
Sneaky unification:
  Unifies: t_aJG := Char
  Coercion: t_aJG ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aJG := Char
setEvBind
  ev = cobox_aXJ
  tm  = CO <Char>_N
kickOutRewritable
  tv =  t_aJG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
304[<C:0,F:0>] [W] cobox_aXJ :: t_aJG ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJI :: t_aDJ
                                ~ t_aJG [" a type equality t_aDJ
                                                           ~
                                                           t_aJG " HTML3.hs:74:33-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJI :: t_aDJ
                                 ~ t_aJG [" a type equality t_aDJ
                                                            ~
                                                            t_aJG " HTML3.hs:74:33-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJI :: t_aDJ ~ t_aJG [" a type equality t_aDJ
                                                    ~
                                                    t_aJG " HTML3.hs:74:33-48] (CNonCanonical)
canEvNC:eq
  t_aDJ
  t_aJG
can_eq_nc
  [W] cobox_aJI :: t_aDJ ~ t_aJG
  t_aDJ
  t_aDJ
  t_aJG
  t_aJG
canEqTyVar
  t_aDJ
  t_aJG
  Not-swapped
Following bound tyvar t_aDJ = Char
canEqTyVar2
  t_aDJ
  t_aJG
  Not-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aJI :: Char ~ t_aJG
  Char
  Char
  t_aJG
  t_aJG
canEqTyVar
  t_aJG
  Char
  Is-swapped
Following bound tyvar t_aJG = Char
newWantedEvVar/cache miss [W] cobox_aXK :: Char ~ Char
setEvBind
  ev = cobox_aJI
  tm  = CO Sym cobox_aXK
rewriteEqEvidence
  [W] cobox_aJI :: Char ~ t_aJG
  Char
  Char
  Sym cobox_aXK
canEqTyVar2
  t_aJG
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aXK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJL :: a_aJJ
                                ~ t_aDI [" a type equality a_aJJ
                                                           ~
                                                           t_aDI " HTML3.hs:74:38-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJL :: a_aJJ
                                 ~ t_aDI [" a type equality a_aJJ
                                                            ~
                                                            t_aDI " HTML3.hs:74:38-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJL :: a_aJJ ~ t_aDI [" a type equality a_aJJ
                                                    ~
                                                    t_aDI " HTML3.hs:74:38-47] (CNonCanonical)
canEvNC:eq
  a_aJJ
  t_aDI
can_eq_nc
  [W] cobox_aJL :: a_aJJ ~ t_aDI
  a_aJJ
  a_aJJ
  t_aDI
  t_aDI
canEqTyVar
  a_aJJ
  t_aDI
  Not-swapped
Following bound tyvar t_aDI = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJL :: a_aJJ ~ Int [" a type equality a_aJJ
                                                                ~
                                                                t_aDI " HTML3.hs:74:38-47] (CTyEqCan)
Sneaky unification:
  Unifies: a_aJJ := Int
  Coercion: a_aJJ ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aJJ := Int
setEvBind
  ev = cobox_aJL
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aJJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
306[<C:0,F:0>] [W] cobox_aJL :: a_aJJ ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJM :: t_aCJ
                                ~ a_aJJ [" a type equality t_aCJ
                                                           ~
                                                           a_aJJ " HTML3.hs:74:38-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJM :: t_aCJ
                                 ~ a_aJJ [" a type equality t_aCJ
                                                            ~
                                                            a_aJJ " HTML3.hs:74:38-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJM :: t_aCJ ~ a_aJJ [" a type equality t_aCJ
                                                    ~
                                                    a_aJJ " HTML3.hs:74:38-42] (CNonCanonical)
canEvNC:eq
  t_aCJ
  a_aJJ
can_eq_nc
  [W] cobox_aJM :: t_aCJ ~ a_aJJ
  t_aCJ
  t_aCJ
  a_aJJ
  a_aJJ
canEqTyVar
  t_aCJ
  a_aJJ
  Not-swapped
Following bound tyvar t_aCJ = Int
canEqTyVar2
  t_aCJ
  a_aJJ
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aJM :: Int ~ a_aJJ
  Int
  Int
  a_aJJ
  a_aJJ
canEqTyVar
  a_aJJ
  Int
  Is-swapped
Following bound tyvar a_aJJ = Int
newWantedEvVar/cache miss [W] cobox_aXL :: Int ~ Int
setEvBind
  ev = cobox_aJM
  tm  = CO Sym cobox_aXL
rewriteEqEvidence
  [W] cobox_aJM :: Int ~ a_aJJ
  Int
  Int
  Sym cobox_aXL
canEqTyVar2
  a_aJJ
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aXL :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aXL
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJP :: (Integer -> a_aJN)
                                ~ (Integer -> a_aJJ) [" a type equality Integer -> a_aJN
                                                                        ~
                                                                        Integer
                                                                        -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJP :: (Integer -> a_aJN)
                                 ~ (Integer -> a_aJJ) [" a type equality Integer -> a_aJN
                                                                         ~
                                                                         Integer
                                                                         -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJP :: (Integer -> a_aJN)
                   ~ (Integer -> a_aJJ) [" a type equality Integer -> a_aJN
                                                           ~
                                                           Integer
                                                           -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
canEvNC:eq
  Integer -> a_aJN
  Integer -> a_aJJ
can_eq_nc
  [W] cobox_aJP :: (Integer -> a_aJN) ~ (Integer -> a_aJJ)
  Integer -> a_aJN
  Integer -> a_aJN
  Integer -> a_aJJ
  Integer -> a_aJJ
newWantedEvVar/cache miss [W] cobox_aXM :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aXN :: a_aJN ~ a_aJJ
setEvBind
  ev = cobox_aJP
  tm  = CO cobox_aXM -> cobox_aXN
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aXM :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aXM
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aXN :: a_aJN
                                ~ a_aJJ [" a type equality Integer -> a_aJN
                                                           ~
                                                           Integer
                                                           -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aXN :: a_aJN
                                 ~ a_aJJ [" a type equality Integer -> a_aJN
                                                            ~
                                                            Integer
                                                            -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aXN :: a_aJN ~ a_aJJ [" a type equality Integer -> a_aJN
                                                    ~
                                                    Integer
                                                    -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
canEvNC:eq
  a_aJN
  a_aJJ
can_eq_nc
  [W] cobox_aXN :: a_aJN ~ a_aJJ
  a_aJN
  a_aJN
  a_aJJ
  a_aJJ
canEqTyVar
  a_aJN
  a_aJJ
  Not-swapped
Following bound tyvar a_aJJ = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXN :: a_aJN
                                 ~ Int [" a type equality Integer -> a_aJN
                                                          ~
                                                          Integer
                                                          -> a_aJJ " HTML3.hs:74:46-47] (CTyEqCan)
Sneaky unification:
  Unifies: a_aJN := Int
  Coercion: a_aJN ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aJN := Int
setEvBind
  ev = cobox_aXN
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aJN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
309[<C:0,F:0>] [W] cobox_aXN :: a_aJN ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJU :: t_aJR
                                ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                                      ~
                                                                      t_aJS
                                                                      -> t_aJT " HTML3.hs:70:19-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJU :: t_aJR
                                 ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                                       ~
                                                                       t_aJS
                                                                       -> t_aJT " HTML3.hs:70:19-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJU :: t_aJR ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                               ~
                                                               t_aJS
                                                               -> t_aJT " HTML3.hs:70:19-86] (CNonCanonical)
canEvNC:eq
  t_aJR
  t_aJS -> t_aJT
can_eq_nc
  [W] cobox_aJU :: t_aJR ~ (t_aJS -> t_aJT)
  t_aJR
  t_aJR
  t_aJS -> t_aJT
  t_aJS -> t_aJT
canEqTyVar
  t_aJR
  t_aJS -> t_aJT
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJU :: t_aJR
                                 ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                                       ~
                                                                       t_aJS
                                                                       -> t_aJT " HTML3.hs:70:19-86] (CTyEqCan)
Sneaky unification:
  Unifies: t_aJR := t_aJS -> t_aJT
  Coercion: t_aJR ~ (t_aJS -> t_aJT)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aJR := t_aJS -> t_aJT
setEvBind
  ev = cobox_aJU
  tm  = CO <t_aJS -> t_aJT>_N
kickOutRewritable
  tv =  t_aJR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
310[<C:0,F:0>] [W] cobox_aJU :: t_aJR
                                ~ (t_aJS -> t_aJT): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJW :: [a_aJV]
                                ~ t_aJT [" a type equality [a_aJV]
                                                           ~
                                                           t_aJT " HTML3.hs:70:35-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJW :: [a_aJV]
                                 ~ t_aJT [" a type equality [a_aJV]
                                                            ~
                                                            t_aJT " HTML3.hs:70:35-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJW :: [a_aJV] ~ t_aJT [" a type equality [a_aJV]
                                                      ~
                                                      t_aJT " HTML3.hs:70:35-86] (CNonCanonical)
canEvNC:eq
  [a_aJV]
  t_aJT
can_eq_nc
  [W] cobox_aJW :: [a_aJV] ~ t_aJT
  [a_aJV]
  [a_aJV]
  t_aJT
  t_aJT
canEqTyVar
  t_aJT
  [a_aJV]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aXO :: t_aJT ~ [a_aJV]
setEvBind
  ev = cobox_aJW
  tm  = CO Sym cobox_aXO
rewriteEqEvidence
  [W] cobox_aJW :: [a_aJV] ~ t_aJT
  t_aJT
  [a_aJV]
  Sym cobox_aXO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXO :: t_aJT
                                 ~ [a_aJV] [" a type equality [a_aJV]
                                                              ~
                                                              t_aJT " HTML3.hs:70:35-86] (CTyEqCan)
Sneaky unification:
  Unifies: t_aJT := [a_aJV]
  Coercion: t_aJT ~ [a_aJV]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aJT := [a_aJV]
setEvBind
  ev = cobox_aXO
  tm  = CO <[a_aJV]>_N
kickOutRewritable
  tv =  t_aJT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
311[<C:0,F:0>] [W] cobox_aXO :: t_aJT
                                ~ [a_aJV]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJX :: t_aCK
                                ~ [a_aJV] [" a type equality t_aCK
                                                             ~
                                                             [a_aJV] " HTML3.hs:70:35-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJX :: t_aCK
                                 ~ [a_aJV] [" a type equality t_aCK
                                                              ~
                                                              [a_aJV] " HTML3.hs:70:35-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJX :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                      ~
                                                      [a_aJV] " HTML3.hs:70:35-56] (CNonCanonical)
canEvNC:eq
  t_aCK
  [a_aJV]
can_eq_nc
  [W] cobox_aJX :: t_aCK ~ [a_aJV]
  t_aCK
  t_aCK
  [a_aJV]
  [a_aJV]
canEqTyVar
  t_aCK
  [a_aJV]
  Not-swapped
Following bound tyvar t_aCK = String
canEqTyVar2
  t_aCK
  [a_aJV]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJX :: String ~ [a_aJV]
  String
  String
  [a_aJV]
  [a_aJV]
can_eq_nc
  [W] cobox_aJX :: String ~ [a_aJV]
  [Char]
  String
  [a_aJV]
  [a_aJV]
newWantedEvVar/cache miss [W] cobox_aXP :: Char ~ a_aJV
setEvBind
  ev = cobox_aJX
  tm  = CO [cobox_aXP]_N
canEvNC:eq
  Char
  a_aJV
can_eq_nc
  [W] cobox_aXP :: Char ~ a_aJV
  Char
  Char
  a_aJV
  a_aJV
canEqTyVar
  a_aJV
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aXQ :: a_aJV ~ Char
setEvBind
  ev = cobox_aXP
  tm  = CO Sym cobox_aXQ
rewriteEqEvidence
  [W] cobox_aXP :: Char ~ a_aJV
  a_aJV
  Char
  Sym cobox_aXQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXQ :: a_aJV
                                 ~ Char [" a type equality t_aCK
                                                           ~
                                                           [a_aJV] " HTML3.hs:70:35-56] (CTyEqCan)
Sneaky unification:
  Unifies: a_aJV := Char
  Coercion: a_aJV ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aJV := Char
setEvBind
  ev = cobox_aXQ
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aJV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
312[<C:0,F:0>] [W] cobox_aXQ :: a_aJV ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aK8 :: a_aK6
                                ~ t_aCJ [" a type equality a_aK6
                                                           ~
                                                           t_aCJ " HTML3.hs:70:46-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aK8 :: a_aK6
                                 ~ t_aCJ [" a type equality a_aK6
                                                            ~
                                                            t_aCJ " HTML3.hs:70:46-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aK8 :: a_aK6 ~ t_aCJ [" a type equality a_aK6
                                                    ~
                                                    t_aCJ " HTML3.hs:70:46-55] (CNonCanonical)
canEvNC:eq
  a_aK6
  t_aCJ
can_eq_nc
  [W] cobox_aK8 :: a_aK6 ~ t_aCJ
  a_aK6
  a_aK6
  t_aCJ
  t_aCJ
canEqTyVar
  a_aK6
  t_aCJ
  Not-swapped
Following bound tyvar t_aCJ = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aK8 :: a_aK6 ~ Int [" a type equality a_aK6
                                                                ~
                                                                t_aCJ " HTML3.hs:70:46-55] (CTyEqCan)
Sneaky unification:
  Unifies: a_aK6 := Int
  Coercion: a_aK6 ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aK6 := Int
setEvBind
  ev = cobox_aK8
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aK6
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
313[<C:0,F:0>] [W] cobox_aK8 :: a_aK6 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aK9 :: t_aJS
                                ~ a_aK6 [" a type equality t_aJS
                                                           ~
                                                           a_aK6 " HTML3.hs:70:46-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aK9 :: t_aJS
                                 ~ a_aK6 [" a type equality t_aJS
                                                            ~
                                                            a_aK6 " HTML3.hs:70:46-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aK9 :: t_aJS ~ a_aK6 [" a type equality t_aJS
                                                    ~
                                                    a_aK6 " HTML3.hs:70:46-50] (CNonCanonical)
canEvNC:eq
  t_aJS
  a_aK6
can_eq_nc
  [W] cobox_aK9 :: t_aJS ~ a_aK6
  t_aJS
  t_aJS
  a_aK6
  a_aK6
canEqTyVar
  t_aJS
  a_aK6
  Not-swapped
Following bound tyvar a_aK6 = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aK9 :: t_aJS ~ Int [" a type equality t_aJS
                                                                ~
                                                                a_aK6 " HTML3.hs:70:46-50] (CTyEqCan)
Sneaky unification:
  Unifies: t_aJS := Int
  Coercion: t_aJS ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aJS := Int
setEvBind
  ev = cobox_aK9
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aJS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
314[<C:0,F:0>] [W] cobox_aK9 :: t_aJS ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKc :: (Integer -> a_aKa)
                                ~ (Integer -> a_aK6) [" a type equality Integer -> a_aKa
                                                                        ~
                                                                        Integer
                                                                        -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKc :: (Integer -> a_aKa)
                                 ~ (Integer -> a_aK6) [" a type equality Integer -> a_aKa
                                                                         ~
                                                                         Integer
                                                                         -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKc :: (Integer -> a_aKa)
                   ~ (Integer -> a_aK6) [" a type equality Integer -> a_aKa
                                                           ~
                                                           Integer
                                                           -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
canEvNC:eq
  Integer -> a_aKa
  Integer -> a_aK6
can_eq_nc
  [W] cobox_aKc :: (Integer -> a_aKa) ~ (Integer -> a_aK6)
  Integer -> a_aKa
  Integer -> a_aKa
  Integer -> a_aK6
  Integer -> a_aK6
newWantedEvVar/cache miss [W] cobox_aXR :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aXS :: a_aKa ~ a_aK6
setEvBind
  ev = cobox_aKc
  tm  = CO cobox_aXR -> cobox_aXS
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aXR :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aXR
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aXS :: a_aKa
                                ~ a_aK6 [" a type equality Integer -> a_aKa
                                                           ~
                                                           Integer
                                                           -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aXS :: a_aKa
                                 ~ a_aK6 [" a type equality Integer -> a_aKa
                                                            ~
                                                            Integer
                                                            -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aXS :: a_aKa ~ a_aK6 [" a type equality Integer -> a_aKa
                                                    ~
                                                    Integer
                                                    -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
canEvNC:eq
  a_aKa
  a_aK6
can_eq_nc
  [W] cobox_aXS :: a_aKa ~ a_aK6
  a_aKa
  a_aKa
  a_aK6
  a_aK6
canEqTyVar
  a_aKa
  a_aK6
  Not-swapped
Following bound tyvar a_aK6 = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXS :: a_aKa
                                 ~ Int [" a type equality Integer -> a_aKa
                                                          ~
                                                          Integer
                                                          -> a_aK6 " HTML3.hs:70:54-55] (CTyEqCan)
Sneaky unification:
  Unifies: a_aKa := Int
  Coercion: a_aKa ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aKa := Int
setEvBind
  ev = cobox_aXS
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aKa
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
316[<C:0,F:0>] [W] cobox_aXS :: a_aKa ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKd :: t_aCK
                                ~ [a_aJV] [" a type equality t_aCK
                                                             ~
                                                             [a_aJV] " HTML3.hs:70:61-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKd :: t_aCK
                                 ~ [a_aJV] [" a type equality t_aCK
                                                              ~
                                                              [a_aJV] " HTML3.hs:70:61-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKd :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                      ~
                                                      [a_aJV] " HTML3.hs:70:61-86] (CNonCanonical)
canEvNC:eq
  t_aCK
  [a_aJV]
can_eq_nc
  [W] cobox_aKd :: t_aCK ~ [a_aJV]
  t_aCK
  t_aCK
  [a_aJV]
  [a_aJV]
canEqTyVar
  t_aCK
  [a_aJV]
  Not-swapped
Following bound tyvar t_aCK = String
canEqTyVar2
  t_aCK
  [a_aJV]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aKd :: String ~ [a_aJV]
  String
  String
  [a_aJV]
  [a_aJV]
can_eq_nc
  [W] cobox_aKd :: String ~ [a_aJV]
  [Char]
  String
  [a_aJV]
  [a_aJV]
newWantedEvVar/cache miss [W] cobox_aXT :: Char ~ a_aJV
setEvBind
  ev = cobox_aKd
  tm  = CO [cobox_aXT]_N
canEvNC:eq
  Char
  a_aJV
can_eq_nc
  [W] cobox_aXT :: Char ~ a_aJV
  Char
  Char
  a_aJV
  a_aJV
canEqTyVar
  a_aJV
  Char
  Is-swapped
Following bound tyvar a_aJV = Char
newWantedEvVar/cache miss [W] cobox_aXU :: Char ~ Char
setEvBind
  ev = cobox_aXT
  tm  = CO Sym cobox_aXU
rewriteEqEvidence
  [W] cobox_aXT :: Char ~ a_aJV
  Char
  Char
  Sym cobox_aXU
canEqTyVar2
  a_aJV
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aXU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aXU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKt :: a_aKr
                                ~ t_aCJ [" a type equality a_aKr
                                                           ~
                                                           t_aCJ " HTML3.hs:70:72-85] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKt :: a_aKr
                                 ~ t_aCJ [" a type equality a_aKr
                                                            ~
                                                            t_aCJ " HTML3.hs:70:72-85] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKt :: a_aKr ~ t_aCJ [" a type equality a_aKr
                                                    ~
                                                    t_aCJ " HTML3.hs:70:72-85] (CNonCanonical)
canEvNC:eq
  a_aKr
  t_aCJ
can_eq_nc
  [W] cobox_aKt :: a_aKr ~ t_aCJ
  a_aKr
  a_aKr
  t_aCJ
  t_aCJ
canEqTyVar
  a_aKr
  t_aCJ
  Not-swapped
Following bound tyvar t_aCJ = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aKt :: a_aKr ~ Int [" a type equality a_aKr
                                                                ~
                                                                t_aCJ " HTML3.hs:70:72-85] (CTyEqCan)
Sneaky unification:
  Unifies: a_aKr := Int
  Coercion: a_aKr ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aKr := Int
setEvBind
  ev = cobox_aKt
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aKr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
318[<C:0,F:0>] [W] cobox_aKt :: a_aKr ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKu :: t_aJS
                                ~ a_aKr [" a type equality t_aJS
                                                           ~
                                                           a_aKr " HTML3.hs:70:72-76] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKu :: t_aJS
                                 ~ a_aKr [" a type equality t_aJS
                                                            ~
                                                            a_aKr " HTML3.hs:70:72-76] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKu :: t_aJS ~ a_aKr [" a type equality t_aJS
                                                    ~
                                                    a_aKr " HTML3.hs:70:72-76] (CNonCanonical)
canEvNC:eq
  t_aJS
  a_aKr
can_eq_nc
  [W] cobox_aKu :: t_aJS ~ a_aKr
  t_aJS
  t_aJS
  a_aKr
  a_aKr
canEqTyVar
  t_aJS
  a_aKr
  Not-swapped
Following bound tyvar t_aJS = Int
canEqTyVar2
  t_aJS
  a_aKr
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aKu :: Int ~ a_aKr
  Int
  Int
  a_aKr
  a_aKr
canEqTyVar
  a_aKr
  Int
  Is-swapped
Following bound tyvar a_aKr = Int
newWantedEvVar/cache miss [W] cobox_aXV :: Int ~ Int
setEvBind
  ev = cobox_aKu
  tm  = CO Sym cobox_aXV
rewriteEqEvidence
  [W] cobox_aKu :: Int ~ a_aKr
  Int
  Int
  Sym cobox_aXV
canEqTyVar2
  a_aKr
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aXV :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aXV
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKx :: (Integer -> a_aKv)
                                ~ (Integer -> a_aKr) [" a type equality Integer -> a_aKv
                                                                        ~
                                                                        Integer
                                                                        -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKx :: (Integer -> a_aKv)
                                 ~ (Integer -> a_aKr) [" a type equality Integer -> a_aKv
                                                                         ~
                                                                         Integer
                                                                         -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKx :: (Integer -> a_aKv)
                   ~ (Integer -> a_aKr) [" a type equality Integer -> a_aKv
                                                           ~
                                                           Integer
                                                           -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
canEvNC:eq
  Integer -> a_aKv
  Integer -> a_aKr
can_eq_nc
  [W] cobox_aKx :: (Integer -> a_aKv) ~ (Integer -> a_aKr)
  Integer -> a_aKv
  Integer -> a_aKv
  Integer -> a_aKr
  Integer -> a_aKr
newWantedEvVar/cache miss [W] cobox_aXW :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aXX :: a_aKv ~ a_aKr
setEvBind
  ev = cobox_aKx
  tm  = CO cobox_aXW -> cobox_aXX
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aXW :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aXW
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aXX :: a_aKv
                                ~ a_aKr [" a type equality Integer -> a_aKv
                                                           ~
                                                           Integer
                                                           -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aXX :: a_aKv
                                 ~ a_aKr [" a type equality Integer -> a_aKv
                                                            ~
                                                            Integer
                                                            -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aXX :: a_aKv ~ a_aKr [" a type equality Integer -> a_aKv
                                                    ~
                                                    Integer
                                                    -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
canEvNC:eq
  a_aKv
  a_aKr
can_eq_nc
  [W] cobox_aXX :: a_aKv ~ a_aKr
  a_aKv
  a_aKv
  a_aKr
  a_aKr
canEqTyVar
  a_aKv
  a_aKr
  Not-swapped
Following bound tyvar a_aKr = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aXX :: a_aKv
                                 ~ Int [" a type equality Integer -> a_aKv
                                                          ~
                                                          Integer
                                                          -> a_aKr " HTML3.hs:70:84-85] (CTyEqCan)
Sneaky unification:
  Unifies: a_aKv := Int
  Coercion: a_aKv ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aKv := Int
setEvBind
  ev = cobox_aXX
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aKv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
321[<C:0,F:0>] [W] cobox_aXX :: a_aKv ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKz :: [a_aKy]
                                ~ t_aCQ [" a type equality [a_aKy]
                                                           ~
                                                           t_aCQ " HTML3.hs:69:15-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKz :: [a_aKy]
                                 ~ t_aCQ [" a type equality [a_aKy]
                                                            ~
                                                            t_aCQ " HTML3.hs:69:15-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKz :: [a_aKy] ~ t_aCQ [" a type equality [a_aKy]
                                                      ~
                                                      t_aCQ " HTML3.hs:69:15-56] (CNonCanonical)
canEvNC:eq
  [a_aKy]
  t_aCQ
can_eq_nc
  [W] cobox_aKz :: [a_aKy] ~ t_aCQ
  [a_aKy]
  [a_aKy]
  t_aCQ
  t_aCQ
canEqTyVar
  t_aCQ
  [a_aKy]
  Is-swapped
Following bound tyvar t_aCQ = String
newWantedEvVar/cache miss [W] cobox_aXY :: String ~ [a_aKy]
setEvBind
  ev = cobox_aKz
  tm  = CO Sym cobox_aXY
rewriteEqEvidence
  [W] cobox_aKz :: [a_aKy] ~ t_aCQ
  String
  [a_aKy]
  Sym cobox_aXY
canEqTyVar2
  t_aCQ
  [a_aKy]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aXY :: String ~ [a_aKy]
  String
  String
  [a_aKy]
  [a_aKy]
can_eq_nc
  [W] cobox_aXY :: String ~ [a_aKy]
  [Char]
  String
  [a_aKy]
  [a_aKy]
newWantedEvVar/cache miss [W] cobox_aXZ :: Char ~ a_aKy
setEvBind
  ev = cobox_aXY
  tm  = CO [cobox_aXZ]_N
canEvNC:eq
  Char
  a_aKy
can_eq_nc
  [W] cobox_aXZ :: Char ~ a_aKy
  Char
  Char
  a_aKy
  a_aKy
canEqTyVar
  a_aKy
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aY0 :: a_aKy ~ Char
setEvBind
  ev = cobox_aXZ
  tm  = CO Sym cobox_aY0
rewriteEqEvidence
  [W] cobox_aXZ :: Char ~ a_aKy
  a_aKy
  Char
  Sym cobox_aY0
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aY0 :: a_aKy
                                 ~ Char [" a type equality [a_aKy]
                                                           ~
                                                           t_aCQ " HTML3.hs:69:15-56] (CTyEqCan)
Sneaky unification:
  Unifies: a_aKy := Char
  Coercion: a_aKy ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aKy := Char
setEvBind
  ev = cobox_aY0
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aKy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
322[<C:0,F:0>] [W] cobox_aY0 :: a_aKy ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKA :: [Char]
                                ~ [a_aKy] [" a type equality [Char]
                                                             ~
                                                             [a_aKy] " HTML3.hs:69:15-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKA :: [Char]
                                 ~ [a_aKy] [" a type equality [Char]
                                                              ~
                                                              [a_aKy] " HTML3.hs:69:15-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKA :: [Char] ~ [a_aKy] [" a type equality [Char]
                                                       ~
                                                       [a_aKy] " HTML3.hs:69:15-17] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aKy]
can_eq_nc
  [W] cobox_aKA :: [Char] ~ [a_aKy]
  [Char]
  [Char]
  [a_aKy]
  [a_aKy]
newWantedEvVar/cache miss [W] cobox_aY1 :: Char ~ a_aKy
setEvBind
  ev = cobox_aKA
  tm  = CO [cobox_aY1]_N
canEvNC:eq
  Char
  a_aKy
can_eq_nc
  [W] cobox_aY1 :: Char ~ a_aKy
  Char
  Char
  a_aKy
  a_aKy
canEqTyVar
  a_aKy
  Char
  Is-swapped
Following bound tyvar a_aKy = Char
newWantedEvVar/cache miss [W] cobox_aY2 :: Char ~ Char
setEvBind
  ev = cobox_aY1
  tm  = CO Sym cobox_aY2
rewriteEqEvidence
  [W] cobox_aY1 :: Char ~ a_aKy
  Char
  Char
  Sym cobox_aY2
canEqTyVar2
  a_aKy
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aY2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aY2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKC :: [a_aKB]
                                ~ [a_aKy] [" a type equality [a_aKB]
                                                             ~
                                                             [a_aKy] " HTML3.hs:69:22-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKC :: [a_aKB]
                                 ~ [a_aKy] [" a type equality [a_aKB]
                                                              ~
                                                              [a_aKy] " HTML3.hs:69:22-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKC :: [a_aKB] ~ [a_aKy] [" a type equality [a_aKB]
                                                        ~
                                                        [a_aKy] " HTML3.hs:69:22-56] (CNonCanonical)
canEvNC:eq
  [a_aKB]
  [a_aKy]
can_eq_nc
  [W] cobox_aKC :: [a_aKB] ~ [a_aKy]
  [a_aKB]
  [a_aKB]
  [a_aKy]
  [a_aKy]
newWantedEvVar/cache miss [W] cobox_aY3 :: a_aKB ~ a_aKy
setEvBind
  ev = cobox_aKC
  tm  = CO [cobox_aY3]_N
canEvNC:eq
  a_aKB
  a_aKy
can_eq_nc
  [W] cobox_aY3 :: a_aKB ~ a_aKy
  a_aKB
  a_aKB
  a_aKy
  a_aKy
canEqTyVar
  a_aKB
  a_aKy
  Not-swapped
Following bound tyvar a_aKy = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aY3 :: a_aKB
                                 ~ Char [" a type equality [a_aKB]
                                                           ~
                                                           [a_aKy] " HTML3.hs:69:22-56] (CTyEqCan)
Sneaky unification:
  Unifies: a_aKB := Char
  Coercion: a_aKB ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aKB := Char
setEvBind
  ev = cobox_aY3
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aKB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
324[<C:0,F:0>] [W] cobox_aY3 :: a_aKB ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKF :: t_aJR
                                ~ (t_aKD -> t_aKE) [" a type equality t_aJR
                                                                      ~
                                                                      t_aKD
                                                                      -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKF :: t_aJR
                                 ~ (t_aKD -> t_aKE) [" a type equality t_aJR
                                                                       ~
                                                                       t_aKD
                                                                       -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKF :: t_aJR ~ (t_aKD -> t_aKE) [" a type equality t_aJR
                                                               ~
                                                               t_aKD
                                                               -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
canEvNC:eq
  t_aJR
  t_aKD -> t_aKE
can_eq_nc
  [W] cobox_aKF :: t_aJR ~ (t_aKD -> t_aKE)
  t_aJR
  t_aJR
  t_aKD -> t_aKE
  t_aKD -> t_aKE
canEqTyVar
  t_aJR
  t_aKD -> t_aKE
  Not-swapped
Following bound tyvar t_aJR = t_aJS -> t_aJT
canEqTyVar2
  t_aJR
  t_aKD -> t_aKE
  Not-swapped
  t_aJS -> t_aJT
  <t_aJS -> t_aJT>_N
can_eq_nc
  [W] cobox_aKF :: (t_aJS -> t_aJT) ~ (t_aKD -> t_aKE)
  t_aJS -> t_aJT
  t_aJS -> t_aJT
  t_aKD -> t_aKE
  t_aKD -> t_aKE
newWantedEvVar/cache miss [W] cobox_aY4 :: t_aJS ~ t_aKD
newWantedEvVar/cache miss [W] cobox_aY5 :: t_aJT ~ t_aKE
setEvBind
  ev = cobox_aKF
  tm  = CO cobox_aY4 -> cobox_aY5
canEvNC:eq
  t_aJS
  t_aKD
can_eq_nc
  [W] cobox_aY4 :: t_aJS ~ t_aKD
  t_aJS
  t_aJS
  t_aKD
  t_aKD
canEqTyVar
  t_aJS
  t_aKD
  Not-swapped
Following bound tyvar t_aJS = Int
canEqTyVar2
  t_aJS
  t_aKD
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aY4 :: Int ~ t_aKD
  Int
  Int
  t_aKD
  t_aKD
canEqTyVar
  t_aKD
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aY6 :: t_aKD ~ Int
setEvBind
  ev = cobox_aY4
  tm  = CO Sym cobox_aY6
rewriteEqEvidence
  [W] cobox_aY4 :: Int ~ t_aKD
  t_aKD
  Int
  Sym cobox_aY6
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aY6 :: t_aKD ~ Int [" a type equality t_aJR
                                                                ~
                                                                t_aKD
                                                                -> t_aKE " HTML3.hs:69:22-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKD := Int
  Coercion: t_aKD ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aKD := Int
setEvBind
  ev = cobox_aY6
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aKD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
325[<C:0,F:0>] [W] cobox_aY6 :: t_aKD ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aY5 :: t_aJT
                                ~ t_aKE [" a type equality t_aJR
                                                           ~
                                                           t_aKD
                                                           -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aY5 :: t_aJT
                                 ~ t_aKE [" a type equality t_aJR
                                                            ~
                                                            t_aKD
                                                            -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aY5 :: t_aJT ~ t_aKE [" a type equality t_aJR
                                                    ~
                                                    t_aKD
                                                    -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
canEvNC:eq
  t_aJT
  t_aKE
can_eq_nc
  [W] cobox_aY5 :: t_aJT ~ t_aKE
  t_aJT
  t_aJT
  t_aKE
  t_aKE
canEqTyVar
  t_aJT
  t_aKE
  Not-swapped
Following bound tyvar t_aJT = [a_aJV]
canEqTyVar2
  t_aJT
  t_aKE
  Not-swapped
  [a_aJV]
  <[a_aJV]>_N
can_eq_nc
  [W] cobox_aY5 :: [a_aJV] ~ t_aKE
  [a_aJV]
  [a_aJV]
  t_aKE
  t_aKE
canEqTyVar
  t_aKE
  [a_aJV]
  Is-swapped
Following bound tyvar a_aJV = Char
newWantedEvVar/cache miss [W] cobox_aY7 :: t_aKE ~ [Char]
setEvBind
  ev = cobox_aY5
  tm  = CO Sym cobox_aY7
rewriteEqEvidence
  [W] cobox_aY5 :: [a_aJV] ~ t_aKE
  t_aKE
  [Char]
  Sym cobox_aY7
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aY7 :: t_aKE
                                 ~ [Char] [" a type equality t_aJR
                                                             ~
                                                             t_aKD
                                                             -> t_aKE " HTML3.hs:69:22-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKE := [Char]
  Coercion: t_aKE ~ [Char]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aKE := [Char]
setEvBind
  ev = cobox_aY7
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  t_aKE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
326[<C:0,F:0>] [W] cobox_aY7 :: t_aKE
                                ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKG :: t_aKE
                                ~ [a_aKB] [" a type equality t_aKE
                                                             ~
                                                             [a_aKB] " HTML3.hs:69:22-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKG :: t_aKE
                                 ~ [a_aKB] [" a type equality t_aKE
                                                              ~
                                                              [a_aKB] " HTML3.hs:69:22-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKG :: t_aKE ~ [a_aKB] [" a type equality t_aKE
                                                      ~
                                                      [a_aKB] " HTML3.hs:69:22-30] (CNonCanonical)
canEvNC:eq
  t_aKE
  [a_aKB]
can_eq_nc
  [W] cobox_aKG :: t_aKE ~ [a_aKB]
  t_aKE
  t_aKE
  [a_aKB]
  [a_aKB]
canEqTyVar
  t_aKE
  [a_aKB]
  Not-swapped
Following bound tyvar t_aKE = [Char]
canEqTyVar2
  t_aKE
  [a_aKB]
  Not-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aKG :: [Char] ~ [a_aKB]
  [Char]
  [Char]
  [a_aKB]
  [a_aKB]
newWantedEvVar/cache miss [W] cobox_aY8 :: Char ~ a_aKB
setEvBind
  ev = cobox_aKG
  tm  = CO [cobox_aY8]_N
canEvNC:eq
  Char
  a_aKB
can_eq_nc
  [W] cobox_aY8 :: Char ~ a_aKB
  Char
  Char
  a_aKB
  a_aKB
canEqTyVar
  a_aKB
  Char
  Is-swapped
Following bound tyvar a_aKB = Char
newWantedEvVar/cache miss [W] cobox_aY9 :: Char ~ Char
setEvBind
  ev = cobox_aY8
  tm  = CO Sym cobox_aY9
rewriteEqEvidence
  [W] cobox_aY8 :: Char ~ a_aKB
  Char
  Char
  Sym cobox_aY9
canEqTyVar2
  a_aKB
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aY9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aY9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKH :: t_aCN
                                ~ t_aKD [" a type equality t_aCN
                                                           ~
                                                           t_aKD " HTML3.hs:69:30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKH :: t_aCN
                                 ~ t_aKD [" a type equality t_aCN
                                                            ~
                                                            t_aKD " HTML3.hs:69:30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKH :: t_aCN ~ t_aKD [" a type equality t_aCN
                                                    ~
                                                    t_aKD " HTML3.hs:69:30] (CNonCanonical)
canEvNC:eq
  t_aCN
  t_aKD
can_eq_nc
  [W] cobox_aKH :: t_aCN ~ t_aKD
  t_aCN
  t_aCN
  t_aKD
  t_aKD
canEqTyVar
  t_aCN
  t_aKD
  Not-swapped
Following bound tyvar t_aCN = Int
canEqTyVar2
  t_aCN
  t_aKD
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aKH :: Int ~ t_aKD
  Int
  Int
  t_aKD
  t_aKD
canEqTyVar
  t_aKD
  Int
  Is-swapped
Following bound tyvar t_aKD = Int
newWantedEvVar/cache miss [W] cobox_aYa :: Int ~ Int
setEvBind
  ev = cobox_aKH
  tm  = CO Sym cobox_aYa
rewriteEqEvidence
  [W] cobox_aKH :: Int ~ t_aKD
  Int
  Int
  Sym cobox_aYa
canEqTyVar2
  t_aKD
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aYa :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYa
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKJ :: [a_aKI]
                                ~ [a_aKB] [" a type equality [a_aKI]
                                                             ~
                                                             [a_aKB] " HTML3.hs:69:35-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKJ :: [a_aKI]
                                 ~ [a_aKB] [" a type equality [a_aKI]
                                                              ~
                                                              [a_aKB] " HTML3.hs:69:35-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKJ :: [a_aKI] ~ [a_aKB] [" a type equality [a_aKI]
                                                        ~
                                                        [a_aKB] " HTML3.hs:69:35-56] (CNonCanonical)
canEvNC:eq
  [a_aKI]
  [a_aKB]
can_eq_nc
  [W] cobox_aKJ :: [a_aKI] ~ [a_aKB]
  [a_aKI]
  [a_aKI]
  [a_aKB]
  [a_aKB]
newWantedEvVar/cache miss [W] cobox_aYb :: a_aKI ~ a_aKB
setEvBind
  ev = cobox_aKJ
  tm  = CO [cobox_aYb]_N
canEvNC:eq
  a_aKI
  a_aKB
can_eq_nc
  [W] cobox_aYb :: a_aKI ~ a_aKB
  a_aKI
  a_aKI
  a_aKB
  a_aKB
canEqTyVar
  a_aKI
  a_aKB
  Not-swapped
Following bound tyvar a_aKB = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYb :: a_aKI
                                 ~ Char [" a type equality [a_aKI]
                                                           ~
                                                           [a_aKB] " HTML3.hs:69:35-56] (CTyEqCan)
Sneaky unification:
  Unifies: a_aKI := Char
  Coercion: a_aKI ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aKI := Char
setEvBind
  ev = cobox_aYb
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aKI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
329[<C:0,F:0>] [W] cobox_aYb :: a_aKI ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKM :: t_aJR
                                ~ (t_aKK -> t_aKL) [" a type equality t_aJR
                                                                      ~
                                                                      t_aKK
                                                                      -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKM :: t_aJR
                                 ~ (t_aKK -> t_aKL) [" a type equality t_aJR
                                                                       ~
                                                                       t_aKK
                                                                       -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKM :: t_aJR ~ (t_aKK -> t_aKL) [" a type equality t_aJR
                                                               ~
                                                               t_aKK
                                                               -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
canEvNC:eq
  t_aJR
  t_aKK -> t_aKL
can_eq_nc
  [W] cobox_aKM :: t_aJR ~ (t_aKK -> t_aKL)
  t_aJR
  t_aJR
  t_aKK -> t_aKL
  t_aKK -> t_aKL
canEqTyVar
  t_aJR
  t_aKK -> t_aKL
  Not-swapped
Following bound tyvar t_aJR = t_aJS -> t_aJT
canEqTyVar2
  t_aJR
  t_aKK -> t_aKL
  Not-swapped
  t_aJS -> t_aJT
  <t_aJS -> t_aJT>_N
can_eq_nc
  [W] cobox_aKM :: (t_aJS -> t_aJT) ~ (t_aKK -> t_aKL)
  t_aJS -> t_aJT
  t_aJS -> t_aJT
  t_aKK -> t_aKL
  t_aKK -> t_aKL
newWantedEvVar/cache miss [W] cobox_aYc :: t_aJS ~ t_aKK
newWantedEvVar/cache miss [W] cobox_aYd :: t_aJT ~ t_aKL
setEvBind
  ev = cobox_aKM
  tm  = CO cobox_aYc -> cobox_aYd
canEvNC:eq
  t_aJS
  t_aKK
can_eq_nc
  [W] cobox_aYc :: t_aJS ~ t_aKK
  t_aJS
  t_aJS
  t_aKK
  t_aKK
canEqTyVar
  t_aJS
  t_aKK
  Not-swapped
Following bound tyvar t_aJS = Int
canEqTyVar2
  t_aJS
  t_aKK
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aYc :: Int ~ t_aKK
  Int
  Int
  t_aKK
  t_aKK
canEqTyVar
  t_aKK
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aYe :: t_aKK ~ Int
setEvBind
  ev = cobox_aYc
  tm  = CO Sym cobox_aYe
rewriteEqEvidence
  [W] cobox_aYc :: Int ~ t_aKK
  t_aKK
  Int
  Sym cobox_aYe
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYe :: t_aKK ~ Int [" a type equality t_aJR
                                                                ~
                                                                t_aKK
                                                                -> t_aKL " HTML3.hs:69:35-43] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKK := Int
  Coercion: t_aKK ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aKK := Int
setEvBind
  ev = cobox_aYe
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aKK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
330[<C:0,F:0>] [W] cobox_aYe :: t_aKK ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aYd :: t_aJT
                                ~ t_aKL [" a type equality t_aJR
                                                           ~
                                                           t_aKK
                                                           -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aYd :: t_aJT
                                 ~ t_aKL [" a type equality t_aJR
                                                            ~
                                                            t_aKK
                                                            -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aYd :: t_aJT ~ t_aKL [" a type equality t_aJR
                                                    ~
                                                    t_aKK
                                                    -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
canEvNC:eq
  t_aJT
  t_aKL
can_eq_nc
  [W] cobox_aYd :: t_aJT ~ t_aKL
  t_aJT
  t_aJT
  t_aKL
  t_aKL
canEqTyVar
  t_aJT
  t_aKL
  Not-swapped
Following bound tyvar t_aJT = [a_aJV]
canEqTyVar2
  t_aJT
  t_aKL
  Not-swapped
  [a_aJV]
  <[a_aJV]>_N
can_eq_nc
  [W] cobox_aYd :: [a_aJV] ~ t_aKL
  [a_aJV]
  [a_aJV]
  t_aKL
  t_aKL
canEqTyVar
  t_aKL
  [a_aJV]
  Is-swapped
Following bound tyvar a_aJV = Char
newWantedEvVar/cache miss [W] cobox_aYf :: t_aKL ~ [Char]
setEvBind
  ev = cobox_aYd
  tm  = CO Sym cobox_aYf
rewriteEqEvidence
  [W] cobox_aYd :: [a_aJV] ~ t_aKL
  t_aKL
  [Char]
  Sym cobox_aYf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYf :: t_aKL
                                 ~ [Char] [" a type equality t_aJR
                                                             ~
                                                             t_aKK
                                                             -> t_aKL " HTML3.hs:69:35-43] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKL := [Char]
  Coercion: t_aKL ~ [Char]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aKL := [Char]
setEvBind
  ev = cobox_aYf
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  t_aKL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
331[<C:0,F:0>] [W] cobox_aYf :: t_aKL
                                ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKN :: t_aKL
                                ~ [a_aKI] [" a type equality t_aKL
                                                             ~
                                                             [a_aKI] " HTML3.hs:69:35-43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKN :: t_aKL
                                 ~ [a_aKI] [" a type equality t_aKL
                                                              ~
                                                              [a_aKI] " HTML3.hs:69:35-43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKN :: t_aKL ~ [a_aKI] [" a type equality t_aKL
                                                      ~
                                                      [a_aKI] " HTML3.hs:69:35-43] (CNonCanonical)
canEvNC:eq
  t_aKL
  [a_aKI]
can_eq_nc
  [W] cobox_aKN :: t_aKL ~ [a_aKI]
  t_aKL
  t_aKL
  [a_aKI]
  [a_aKI]
canEqTyVar
  t_aKL
  [a_aKI]
  Not-swapped
Following bound tyvar t_aKL = [Char]
canEqTyVar2
  t_aKL
  [a_aKI]
  Not-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aKN :: [Char] ~ [a_aKI]
  [Char]
  [Char]
  [a_aKI]
  [a_aKI]
newWantedEvVar/cache miss [W] cobox_aYg :: Char ~ a_aKI
setEvBind
  ev = cobox_aKN
  tm  = CO [cobox_aYg]_N
canEvNC:eq
  Char
  a_aKI
can_eq_nc
  [W] cobox_aYg :: Char ~ a_aKI
  Char
  Char
  a_aKI
  a_aKI
canEqTyVar
  a_aKI
  Char
  Is-swapped
Following bound tyvar a_aKI = Char
newWantedEvVar/cache miss [W] cobox_aYh :: Char ~ Char
setEvBind
  ev = cobox_aYg
  tm  = CO Sym cobox_aYh
rewriteEqEvidence
  [W] cobox_aYg :: Char ~ a_aKI
  Char
  Char
  Sym cobox_aYh
canEqTyVar2
  a_aKI
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aYh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKO :: t_aCO
                                ~ t_aKK [" a type equality t_aCO
                                                           ~
                                                           t_aKK " HTML3.hs:69:43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKO :: t_aCO
                                 ~ t_aKK [" a type equality t_aCO
                                                            ~
                                                            t_aKK " HTML3.hs:69:43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKO :: t_aCO ~ t_aKK [" a type equality t_aCO
                                                    ~
                                                    t_aKK " HTML3.hs:69:43] (CNonCanonical)
canEvNC:eq
  t_aCO
  t_aKK
can_eq_nc
  [W] cobox_aKO :: t_aCO ~ t_aKK
  t_aCO
  t_aCO
  t_aKK
  t_aKK
canEqTyVar
  t_aCO
  t_aKK
  Not-swapped
Following bound tyvar t_aCO = Int
canEqTyVar2
  t_aCO
  t_aKK
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aKO :: Int ~ t_aKK
  Int
  Int
  t_aKK
  t_aKK
canEqTyVar
  t_aKK
  Int
  Is-swapped
Following bound tyvar t_aKK = Int
newWantedEvVar/cache miss [W] cobox_aYi :: Int ~ Int
setEvBind
  ev = cobox_aKO
  tm  = CO Sym cobox_aYi
rewriteEqEvidence
  [W] cobox_aKO :: Int ~ t_aKK
  Int
  Int
  Sym cobox_aYi
canEqTyVar2
  t_aKK
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aYi :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYi
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKR :: t_aJR
                                ~ (t_aKP -> t_aKQ) [" a type equality t_aJR
                                                                      ~
                                                                      t_aKP
                                                                      -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKR :: t_aJR
                                 ~ (t_aKP -> t_aKQ) [" a type equality t_aJR
                                                                       ~
                                                                       t_aKP
                                                                       -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKR :: t_aJR ~ (t_aKP -> t_aKQ) [" a type equality t_aJR
                                                               ~
                                                               t_aKP
                                                               -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
canEvNC:eq
  t_aJR
  t_aKP -> t_aKQ
can_eq_nc
  [W] cobox_aKR :: t_aJR ~ (t_aKP -> t_aKQ)
  t_aJR
  t_aJR
  t_aKP -> t_aKQ
  t_aKP -> t_aKQ
canEqTyVar
  t_aJR
  t_aKP -> t_aKQ
  Not-swapped
Following bound tyvar t_aJR = t_aJS -> t_aJT
canEqTyVar2
  t_aJR
  t_aKP -> t_aKQ
  Not-swapped
  t_aJS -> t_aJT
  <t_aJS -> t_aJT>_N
can_eq_nc
  [W] cobox_aKR :: (t_aJS -> t_aJT) ~ (t_aKP -> t_aKQ)
  t_aJS -> t_aJT
  t_aJS -> t_aJT
  t_aKP -> t_aKQ
  t_aKP -> t_aKQ
newWantedEvVar/cache miss [W] cobox_aYj :: t_aJS ~ t_aKP
newWantedEvVar/cache miss [W] cobox_aYk :: t_aJT ~ t_aKQ
setEvBind
  ev = cobox_aKR
  tm  = CO cobox_aYj -> cobox_aYk
canEvNC:eq
  t_aJS
  t_aKP
can_eq_nc
  [W] cobox_aYj :: t_aJS ~ t_aKP
  t_aJS
  t_aJS
  t_aKP
  t_aKP
canEqTyVar
  t_aJS
  t_aKP
  Not-swapped
Following bound tyvar t_aJS = Int
canEqTyVar2
  t_aJS
  t_aKP
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aYj :: Int ~ t_aKP
  Int
  Int
  t_aKP
  t_aKP
canEqTyVar
  t_aKP
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aYl :: t_aKP ~ Int
setEvBind
  ev = cobox_aYj
  tm  = CO Sym cobox_aYl
rewriteEqEvidence
  [W] cobox_aYj :: Int ~ t_aKP
  t_aKP
  Int
  Sym cobox_aYl
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYl :: t_aKP ~ Int [" a type equality t_aJR
                                                                ~
                                                                t_aKP
                                                                -> t_aKQ " HTML3.hs:69:48-56] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKP := Int
  Coercion: t_aKP ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aKP := Int
setEvBind
  ev = cobox_aYl
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aKP
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
334[<C:0,F:0>] [W] cobox_aYl :: t_aKP ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aYk :: t_aJT
                                ~ t_aKQ [" a type equality t_aJR
                                                           ~
                                                           t_aKP
                                                           -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aYk :: t_aJT
                                 ~ t_aKQ [" a type equality t_aJR
                                                            ~
                                                            t_aKP
                                                            -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aYk :: t_aJT ~ t_aKQ [" a type equality t_aJR
                                                    ~
                                                    t_aKP
                                                    -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
canEvNC:eq
  t_aJT
  t_aKQ
can_eq_nc
  [W] cobox_aYk :: t_aJT ~ t_aKQ
  t_aJT
  t_aJT
  t_aKQ
  t_aKQ
canEqTyVar
  t_aJT
  t_aKQ
  Not-swapped
Following bound tyvar t_aJT = [a_aJV]
canEqTyVar2
  t_aJT
  t_aKQ
  Not-swapped
  [a_aJV]
  <[a_aJV]>_N
can_eq_nc
  [W] cobox_aYk :: [a_aJV] ~ t_aKQ
  [a_aJV]
  [a_aJV]
  t_aKQ
  t_aKQ
canEqTyVar
  t_aKQ
  [a_aJV]
  Is-swapped
Following bound tyvar a_aJV = Char
newWantedEvVar/cache miss [W] cobox_aYm :: t_aKQ ~ [Char]
setEvBind
  ev = cobox_aYk
  tm  = CO Sym cobox_aYm
rewriteEqEvidence
  [W] cobox_aYk :: [a_aJV] ~ t_aKQ
  t_aKQ
  [Char]
  Sym cobox_aYm
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYm :: t_aKQ
                                 ~ [Char] [" a type equality t_aJR
                                                             ~
                                                             t_aKP
                                                             -> t_aKQ " HTML3.hs:69:48-56] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKQ := [Char]
  Coercion: t_aKQ ~ [Char]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aKQ := [Char]
setEvBind
  ev = cobox_aYm
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  t_aKQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
335[<C:0,F:0>] [W] cobox_aYm :: t_aKQ
                                ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKS :: t_aKQ
                                ~ [a_aKI] [" a type equality t_aKQ
                                                             ~
                                                             [a_aKI] " HTML3.hs:69:48-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKS :: t_aKQ
                                 ~ [a_aKI] [" a type equality t_aKQ
                                                              ~
                                                              [a_aKI] " HTML3.hs:69:48-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKS :: t_aKQ ~ [a_aKI] [" a type equality t_aKQ
                                                      ~
                                                      [a_aKI] " HTML3.hs:69:48-56] (CNonCanonical)
canEvNC:eq
  t_aKQ
  [a_aKI]
can_eq_nc
  [W] cobox_aKS :: t_aKQ ~ [a_aKI]
  t_aKQ
  t_aKQ
  [a_aKI]
  [a_aKI]
canEqTyVar
  t_aKQ
  [a_aKI]
  Not-swapped
Following bound tyvar t_aKQ = [Char]
canEqTyVar2
  t_aKQ
  [a_aKI]
  Not-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aKS :: [Char] ~ [a_aKI]
  [Char]
  [Char]
  [a_aKI]
  [a_aKI]
newWantedEvVar/cache miss [W] cobox_aYn :: Char ~ a_aKI
setEvBind
  ev = cobox_aKS
  tm  = CO [cobox_aYn]_N
canEvNC:eq
  Char
  a_aKI
can_eq_nc
  [W] cobox_aYn :: Char ~ a_aKI
  Char
  Char
  a_aKI
  a_aKI
canEqTyVar
  a_aKI
  Char
  Is-swapped
Following bound tyvar a_aKI = Char
newWantedEvVar/cache miss [W] cobox_aYo :: Char ~ Char
setEvBind
  ev = cobox_aYn
  tm  = CO Sym cobox_aYo
rewriteEqEvidence
  [W] cobox_aYn :: Char ~ a_aKI
  Char
  Char
  Sym cobox_aYo
canEqTyVar2
  a_aKI
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aYo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKT :: t_aCP
                                ~ t_aKP [" a type equality t_aCP
                                                           ~
                                                           t_aKP " HTML3.hs:69:56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKT :: t_aCP
                                 ~ t_aKP [" a type equality t_aCP
                                                            ~
                                                            t_aKP " HTML3.hs:69:56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKT :: t_aCP ~ t_aKP [" a type equality t_aCP
                                                    ~
                                                    t_aKP " HTML3.hs:69:56] (CNonCanonical)
canEvNC:eq
  t_aCP
  t_aKP
can_eq_nc
  [W] cobox_aKT :: t_aCP ~ t_aKP
  t_aCP
  t_aCP
  t_aKP
  t_aKP
canEqTyVar
  t_aCP
  t_aKP
  Not-swapped
Following bound tyvar t_aCP = Int
canEqTyVar2
  t_aCP
  t_aKP
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aKT :: Int ~ t_aKP
  Int
  Int
  t_aKP
  t_aKP
canEqTyVar
  t_aKP
  Int
  Is-swapped
Following bound tyvar t_aKP = Int
newWantedEvVar/cache miss [W] cobox_aYp :: Int ~ Int
setEvBind
  ev = cobox_aKT
  tm  = CO Sym cobox_aYp
rewriteEqEvidence
  [W] cobox_aKT :: Int ~ t_aKP
  Int
  Int
  Sym cobox_aYp
canEqTyVar2
  t_aKP
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aYp :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYp
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX)
                                ~ t_aCx [" a type equality (t_aKV, t_aKW, t_aKX)
                                                           ~
                                                           t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX)
                                 ~ t_aCx [" a type equality (t_aKV, t_aKW, t_aKX)
                                                            ~
                                                            t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX)
                   ~ t_aCx [" a type equality (t_aKV, t_aKW, t_aKX)
                                              ~
                                              t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
canEvNC:eq
  (t_aKV, t_aKW, t_aKX)
  t_aCx
can_eq_nc
  [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX) ~ t_aCx
  (t_aKV, t_aKW, t_aKX)
  (t_aKV, t_aKW, t_aKX)
  t_aCx
  t_aCx
canEqTyVar
  t_aCx
  (t_aKV, t_aKW, t_aKX)
  Is-swapped
Following bound tyvar t_aCx = (Int, Int, Int)
newWantedEvVar/cache miss
  [W] cobox_aYq :: (Int, Int, Int) ~ (t_aKV, t_aKW, t_aKX)
setEvBind
  ev = cobox_aKY
  tm  = CO Sym cobox_aYq
rewriteEqEvidence
  [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX) ~ t_aCx
  (Int, Int, Int)
  (t_aKV, t_aKW, t_aKX)
  Sym cobox_aYq
canEqTyVar2
  t_aCx
  (t_aKV, t_aKW, t_aKX)
  Is-swapped
  (Int, Int, Int)
  <(Int, Int, Int)>_N
can_eq_nc
  [W] cobox_aYq :: (Int, Int, Int) ~ (t_aKV, t_aKW, t_aKX)
  (Int, Int, Int)
  (Int, Int, Int)
  (t_aKV, t_aKW, t_aKX)
  (t_aKV, t_aKW, t_aKX)
newWantedEvVar/cache miss [W] cobox_aYr :: Int ~ t_aKV
newWantedEvVar/cache miss [W] cobox_aYs :: Int ~ t_aKW
newWantedEvVar/cache miss [W] cobox_aYt :: Int ~ t_aKX
setEvBind
  ev = cobox_aYq
  tm  = CO (cobox_aYr, cobox_aYs, cobox_aYt)_N
canEvNC:eq
  Int
  t_aKV
can_eq_nc
  [W] cobox_aYr :: Int ~ t_aKV
  Int
  Int
  t_aKV
  t_aKV
canEqTyVar
  t_aKV
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aYu :: t_aKV ~ Int
setEvBind
  ev = cobox_aYr
  tm  = CO Sym cobox_aYu
rewriteEqEvidence
  [W] cobox_aYr :: Int ~ t_aKV
  t_aKV
  Int
  Sym cobox_aYu
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYu :: t_aKV
                                 ~ Int [" a type equality (t_aKV, t_aKW, t_aKX)
                                                          ~
                                                          t_aCx " HTML3.hs:89:10-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKV := Int
  Coercion: t_aKV ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aKV := Int
setEvBind
  ev = cobox_aYu
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aKV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
338[<C:0,F:0>] [W] cobox_aYu :: t_aKV ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aYs :: Int
                                ~ t_aKW [" a type equality (t_aKV, t_aKW, t_aKX)
                                                           ~
                                                           t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aYs :: Int
                                 ~ t_aKW [" a type equality (t_aKV, t_aKW, t_aKX)
                                                            ~
                                                            t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aYs :: Int ~ t_aKW [" a type equality (t_aKV,
                                                   t_aKW,
                                                   t_aKX)
                                                  ~
                                                  t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
canEvNC:eq
  Int
  t_aKW
can_eq_nc
  [W] cobox_aYs :: Int ~ t_aKW
  Int
  Int
  t_aKW
  t_aKW
canEqTyVar
  t_aKW
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aYv :: t_aKW ~ Int
setEvBind
  ev = cobox_aYs
  tm  = CO Sym cobox_aYv
rewriteEqEvidence
  [W] cobox_aYs :: Int ~ t_aKW
  t_aKW
  Int
  Sym cobox_aYv
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYv :: t_aKW
                                 ~ Int [" a type equality (t_aKV, t_aKW, t_aKX)
                                                          ~
                                                          t_aCx " HTML3.hs:89:10-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKW := Int
  Coercion: t_aKW ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aKW := Int
setEvBind
  ev = cobox_aYv
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aKW
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
339[<C:0,F:0>] [W] cobox_aYv :: t_aKW ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aYt :: Int
                                ~ t_aKX [" a type equality (t_aKV, t_aKW, t_aKX)
                                                           ~
                                                           t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aYt :: Int
                                 ~ t_aKX [" a type equality (t_aKV, t_aKW, t_aKX)
                                                            ~
                                                            t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aYt :: Int ~ t_aKX [" a type equality (t_aKV,
                                                   t_aKW,
                                                   t_aKX)
                                                  ~
                                                  t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
canEvNC:eq
  Int
  t_aKX
can_eq_nc
  [W] cobox_aYt :: Int ~ t_aKX
  Int
  Int
  t_aKX
  t_aKX
canEqTyVar
  t_aKX
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aYw :: t_aKX ~ Int
setEvBind
  ev = cobox_aYt
  tm  = CO Sym cobox_aYw
rewriteEqEvidence
  [W] cobox_aYt :: Int ~ t_aKX
  t_aKX
  Int
  Sym cobox_aYw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYw :: t_aKX
                                 ~ Int [" a type equality (t_aKV, t_aKW, t_aKX)
                                                          ~
                                                          t_aCx " HTML3.hs:89:10-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aKX := Int
  Coercion: t_aKX ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aKX := Int
setEvBind
  ev = cobox_aYw
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aKX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
340[<C:0,F:0>] [W] cobox_aYw :: t_aKX ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKZ :: HTML ~ t_aCy [" a type equality HTML
                                                                ~
                                                                t_aCy " HTML3.hs:89:22-64] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKZ :: HTML ~ t_aCy [" a type equality HTML
                                                                 ~
                                                                 t_aCy " HTML3.hs:89:22-64] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKZ :: HTML ~ t_aCy [" a type equality HTML
                                                   ~
                                                   t_aCy " HTML3.hs:89:22-64] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCy
can_eq_nc
  [W] cobox_aKZ :: HTML ~ t_aCy
  HTML
  HTML
  t_aCy
  t_aCy
canEqTyVar
  t_aCy
  HTML
  Is-swapped
Following bound tyvar t_aCy = HTML
newWantedEvVar/cache miss [W] cobox_aYx :: HTML ~ HTML
setEvBind
  ev = cobox_aKZ
  tm  = CO Sym cobox_aYx
rewriteEqEvidence
  [W] cobox_aKZ :: HTML ~ t_aCy
  HTML
  HTML
  Sym cobox_aYx
canEqTyVar2
  t_aCy
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aYx :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aYx
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aL0 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:89:32-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aL0 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:89:32-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aL0 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:89:32-35] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aL0 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aL0 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYy :: Char ~ Char
setEvBind
  ev = cobox_aL0
  tm  = CO [cobox_aYy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aL1 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:89:39-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aL1 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:89:39-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aL1 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:89:39-47] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aL1 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aL1 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYz :: Char ~ Char
setEvBind
  ev = cobox_aL1
  tm  = CO [cobox_aYz]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aL2 :: t_aCQ
                                ~ String [" a type equality t_aCQ
                                                            ~
                                                            String " HTML3.hs:89:49-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aL2 :: t_aCQ
                                 ~ String [" a type equality t_aCQ
                                                             ~
                                                             String " HTML3.hs:89:49-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aL2 :: t_aCQ ~ String [" a type equality t_aCQ
                                                     ~
                                                     String " HTML3.hs:89:49-59] (CNonCanonical)
canEvNC:eq
  t_aCQ
  String
can_eq_nc
  [W] cobox_aL2 :: t_aCQ ~ String
  t_aCQ
  t_aCQ
  String
  String
can_eq_nc
  [W] cobox_aL2 :: t_aCQ ~ String
  t_aCQ
  t_aCQ
  [Char]
  String
canEqTyVar
  t_aCQ
  [Char]
  Not-swapped
Following bound tyvar t_aCQ = String
canEqTyVar2
  t_aCQ
  [Char]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aL2 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aL2 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYA :: Char ~ Char
setEvBind
  ev = cobox_aL2
  tm  = CO [cobox_aYA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aL3 :: t_aKV
                                ~ t_aCN [" a type equality t_aKV
                                                           ~
                                                           t_aCN " HTML3.hs:89:55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aL3 :: t_aKV
                                 ~ t_aCN [" a type equality t_aKV
                                                            ~
                                                            t_aCN " HTML3.hs:89:55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aL3 :: t_aKV ~ t_aCN [" a type equality t_aKV
                                                    ~
                                                    t_aCN " HTML3.hs:89:55] (CNonCanonical)
canEvNC:eq
  t_aKV
  t_aCN
can_eq_nc
  [W] cobox_aL3 :: t_aKV ~ t_aCN
  t_aKV
  t_aKV
  t_aCN
  t_aCN
canEqTyVar
  t_aKV
  t_aCN
  Not-swapped
Following bound tyvar t_aKV = Int
canEqTyVar2
  t_aKV
  t_aCN
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aL3 :: Int ~ t_aCN
  Int
  Int
  t_aCN
  t_aCN
canEqTyVar
  t_aCN
  Int
  Is-swapped
Following bound tyvar t_aCN = Int
newWantedEvVar/cache miss [W] cobox_aYB :: Int ~ Int
setEvBind
  ev = cobox_aL3
  tm  = CO Sym cobox_aYB
rewriteEqEvidence
  [W] cobox_aL3 :: Int ~ t_aCN
  Int
  Int
  Sym cobox_aYB
canEqTyVar2
  t_aCN
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aYB :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYB
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aL4 :: t_aKW
                                ~ t_aCO [" a type equality t_aKW
                                                           ~
                                                           t_aCO " HTML3.hs:89:57] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aL4 :: t_aKW
                                 ~ t_aCO [" a type equality t_aKW
                                                            ~
                                                            t_aCO " HTML3.hs:89:57] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aL4 :: t_aKW ~ t_aCO [" a type equality t_aKW
                                                    ~
                                                    t_aCO " HTML3.hs:89:57] (CNonCanonical)
canEvNC:eq
  t_aKW
  t_aCO
can_eq_nc
  [W] cobox_aL4 :: t_aKW ~ t_aCO
  t_aKW
  t_aKW
  t_aCO
  t_aCO
canEqTyVar
  t_aKW
  t_aCO
  Not-swapped
Following bound tyvar t_aKW = Int
canEqTyVar2
  t_aKW
  t_aCO
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aL4 :: Int ~ t_aCO
  Int
  Int
  t_aCO
  t_aCO
canEqTyVar
  t_aCO
  Int
  Is-swapped
Following bound tyvar t_aCO = Int
newWantedEvVar/cache miss [W] cobox_aYC :: Int ~ Int
setEvBind
  ev = cobox_aL4
  tm  = CO Sym cobox_aYC
rewriteEqEvidence
  [W] cobox_aL4 :: Int ~ t_aCO
  Int
  Int
  Sym cobox_aYC
canEqTyVar2
  t_aCO
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aYC :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYC
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aL5 :: t_aKX
                                ~ t_aCP [" a type equality t_aKX
                                                           ~
                                                           t_aCP " HTML3.hs:89:59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aL5 :: t_aKX
                                 ~ t_aCP [" a type equality t_aKX
                                                            ~
                                                            t_aCP " HTML3.hs:89:59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aL5 :: t_aKX ~ t_aCP [" a type equality t_aKX
                                                    ~
                                                    t_aCP " HTML3.hs:89:59] (CNonCanonical)
canEvNC:eq
  t_aKX
  t_aCP
can_eq_nc
  [W] cobox_aL5 :: t_aKX ~ t_aCP
  t_aKX
  t_aKX
  t_aCP
  t_aCP
canEqTyVar
  t_aKX
  t_aCP
  Not-swapped
Following bound tyvar t_aKX = Int
canEqTyVar2
  t_aKX
  t_aCP
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aL5 :: Int ~ t_aCP
  Int
  Int
  t_aCP
  t_aCP
canEqTyVar
  t_aCP
  Int
  Is-swapped
Following bound tyvar t_aCP = Int
newWantedEvVar/cache miss [W] cobox_aYD :: Int ~ Int
setEvBind
  ev = cobox_aL5
  tm  = CO Sym cobox_aYD
rewriteEqEvidence
  [W] cobox_aL5 :: Int ~ t_aCP
  Int
  Int
  Sym cobox_aYD
canEqTyVar2
  t_aCP
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aYD :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYD
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aL7 :: HTML ~ t_aCC [" a type equality HTML
                                                                ~
                                                                t_aCC " HTML3.hs:86:18-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aL7 :: HTML ~ t_aCC [" a type equality HTML
                                                                 ~
                                                                 t_aCC " HTML3.hs:86:18-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aL7 :: HTML ~ t_aCC [" a type equality HTML
                                                   ~
                                                   t_aCC " HTML3.hs:86:18-56] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCC
can_eq_nc
  [W] cobox_aL7 :: HTML ~ t_aCC
  HTML
  HTML
  t_aCC
  t_aCC
canEqTyVar
  t_aCC
  HTML
  Is-swapped
Following bound tyvar t_aCC = HTML
newWantedEvVar/cache miss [W] cobox_aYE :: HTML ~ HTML
setEvBind
  ev = cobox_aL7
  tm  = CO Sym cobox_aYE
rewriteEqEvidence
  [W] cobox_aL7 :: HTML ~ t_aCC
  HTML
  HTML
  Sym cobox_aYE
canEqTyVar2
  t_aCC
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aYE :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aYE
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aL8 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:86:28-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aL8 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:86:28-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aL8 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:86:28-31] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aL8 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aL8 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYF :: Char ~ Char
setEvBind
  ev = cobox_aL8
  tm  = CO [cobox_aYF]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYF :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYF
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLb :: [b_aLa]
                                ~ [HTML] [" a type equality [b_aLa]
                                                            ~
                                                            [HTML] " HTML3.hs:86:37-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLb :: [b_aLa]
                                 ~ [HTML] [" a type equality [b_aLa]
                                                             ~
                                                             [HTML] " HTML3.hs:86:37-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLb :: [b_aLa] ~ [HTML] [" a type equality [b_aLa]
                                                       ~
                                                       [HTML] " HTML3.hs:86:37-55] (CNonCanonical)
canEvNC:eq
  [b_aLa]
  [HTML]
can_eq_nc
  [W] cobox_aLb :: [b_aLa] ~ [HTML]
  [b_aLa]
  [b_aLa]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aYG :: b_aLa ~ HTML
setEvBind
  ev = cobox_aLb
  tm  = CO [cobox_aYG]_N
canEvNC:eq
  b_aLa
  HTML
can_eq_nc
  [W] cobox_aYG :: b_aLa ~ HTML
  b_aLa
  b_aLa
  HTML
  HTML
canEqTyVar
  b_aLa
  HTML
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYG :: b_aLa
                                 ~ HTML [" a type equality [b_aLa]
                                                           ~
                                                           [HTML] " HTML3.hs:86:37-55] (CTyEqCan)
Sneaky unification:
  Unifies: b_aLa := HTML
  Coercion: b_aLa ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aLa := HTML
setEvBind
  ev = cobox_aYG
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  b_aLa
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
350[<C:0,F:0>] [W] cobox_aYG :: b_aLa ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLc :: (t_aCx -> t_aCy)
                                ~ (a_aL9 -> b_aLa) [" a type equality t_aCx -> t_aCy
                                                                      ~
                                                                      a_aL9
                                                                      -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLc :: (t_aCx -> t_aCy)
                                 ~ (a_aL9 -> b_aLa) [" a type equality t_aCx -> t_aCy
                                                                       ~
                                                                       a_aL9
                                                                       -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLc :: (t_aCx -> t_aCy)
                   ~ (a_aL9 -> b_aLa) [" a type equality t_aCx -> t_aCy
                                                         ~
                                                         a_aL9
                                                         -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
canEvNC:eq
  t_aCx -> t_aCy
  a_aL9 -> b_aLa
can_eq_nc
  [W] cobox_aLc :: (t_aCx -> t_aCy) ~ (a_aL9 -> b_aLa)
  t_aCx -> t_aCy
  t_aCx -> t_aCy
  a_aL9 -> b_aLa
  a_aL9 -> b_aLa
newWantedEvVar/cache miss [W] cobox_aYH :: t_aCx ~ a_aL9
newWantedEvVar/cache miss [W] cobox_aYI :: t_aCy ~ b_aLa
setEvBind
  ev = cobox_aLc
  tm  = CO cobox_aYH -> cobox_aYI
canEvNC:eq
  t_aCx
  a_aL9
can_eq_nc
  [W] cobox_aYH :: t_aCx ~ a_aL9
  t_aCx
  t_aCx
  a_aL9
  a_aL9
canEqTyVar
  t_aCx
  a_aL9
  Not-swapped
Following bound tyvar t_aCx = (Int, Int, Int)
canEqTyVar2
  t_aCx
  a_aL9
  Not-swapped
  (Int, Int, Int)
  <(Int, Int, Int)>_N
can_eq_nc
  [W] cobox_aYH :: (Int, Int, Int) ~ a_aL9
  (Int, Int, Int)
  (Int, Int, Int)
  a_aL9
  a_aL9
canEqTyVar
  a_aL9
  (Int, Int, Int)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aYJ :: a_aL9 ~ (Int, Int, Int)
setEvBind
  ev = cobox_aYH
  tm  = CO Sym cobox_aYJ
rewriteEqEvidence
  [W] cobox_aYH :: (Int, Int, Int) ~ a_aL9
  a_aL9
  (Int, Int, Int)
  Sym cobox_aYJ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYJ :: a_aL9
                                 ~ (Int, Int, Int) [" a type equality t_aCx -> t_aCy
                                                                      ~
                                                                      a_aL9
                                                                      -> b_aLa " HTML3.hs:86:41-48] (CTyEqCan)
Sneaky unification:
  Unifies: a_aL9 := (Int, Int, Int)
  Coercion: a_aL9 ~ (Int, Int, Int)
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aL9 := (Int, Int, Int)
setEvBind
  ev = cobox_aYJ
  tm  = CO <(Int, Int, Int)>_N
kickOutRewritable
  tv =  a_aL9
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
351[<C:0,F:0>] [W] cobox_aYJ :: a_aL9
                                ~ (Int, Int, Int): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aYI :: t_aCy
                                ~ b_aLa [" a type equality t_aCx -> t_aCy
                                                           ~
                                                           a_aL9
                                                           -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aYI :: t_aCy
                                 ~ b_aLa [" a type equality t_aCx -> t_aCy
                                                            ~
                                                            a_aL9
                                                            -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aYI :: t_aCy ~ b_aLa [" a type equality t_aCx -> t_aCy
                                                    ~
                                                    a_aL9
                                                    -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
canEvNC:eq
  t_aCy
  b_aLa
can_eq_nc
  [W] cobox_aYI :: t_aCy ~ b_aLa
  t_aCy
  t_aCy
  b_aLa
  b_aLa
canEqTyVar
  t_aCy
  b_aLa
  Not-swapped
Following bound tyvar t_aCy = HTML
canEqTyVar2
  t_aCy
  b_aLa
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aYI :: HTML ~ b_aLa
  HTML
  HTML
  b_aLa
  b_aLa
canEqTyVar
  b_aLa
  HTML
  Is-swapped
Following bound tyvar b_aLa = HTML
newWantedEvVar/cache miss [W] cobox_aYK :: HTML ~ HTML
setEvBind
  ev = cobox_aYI
  tm  = CO Sym cobox_aYK
rewriteEqEvidence
  [W] cobox_aYI :: HTML ~ b_aLa
  HTML
  HTML
  Sym cobox_aYK
canEqTyVar2
  b_aLa
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aYK :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aYK
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLd :: t_aCB
                                ~ [a_aL9] [" a type equality t_aCB
                                                             ~
                                                             [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLd :: t_aCB
                                 ~ [a_aL9] [" a type equality t_aCB
                                                              ~
                                                              [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLd :: t_aCB ~ [a_aL9] [" a type equality t_aCB
                                                      ~
                                                      [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
canEvNC:eq
  t_aCB
  [a_aL9]
can_eq_nc
  [W] cobox_aLd :: t_aCB ~ [a_aL9]
  t_aCB
  t_aCB
  [a_aL9]
  [a_aL9]
canEqTyVar
  t_aCB
  [a_aL9]
  Not-swapped
Following bound tyvar t_aCB = [(Int, Int, Int)]
canEqTyVar2
  t_aCB
  [a_aL9]
  Not-swapped
  [(Int, Int, Int)]
  <[(Int, Int, Int)]>_N
can_eq_nc
  [W] cobox_aLd :: [(Int, Int, Int)] ~ [a_aL9]
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  [a_aL9]
  [a_aL9]
newWantedEvVar/cache miss [W] cobox_aYL :: (Int, Int, Int) ~ a_aL9
setEvBind
  ev = cobox_aLd
  tm  = CO [cobox_aYL]_N
canEvNC:eq
  (Int, Int, Int)
  a_aL9
can_eq_nc
  [W] cobox_aYL :: (Int, Int, Int) ~ a_aL9
  (Int, Int, Int)
  (Int, Int, Int)
  a_aL9
  a_aL9
canEqTyVar
  a_aL9
  (Int, Int, Int)
  Is-swapped
Following bound tyvar a_aL9 = (Int, Int, Int)
newWantedEvVar/cache miss
  [W] cobox_aYM :: (Int, Int, Int) ~ (Int, Int, Int)
setEvBind
  ev = cobox_aYL
  tm  = CO Sym cobox_aYM
rewriteEqEvidence
  [W] cobox_aYL :: (Int, Int, Int) ~ a_aL9
  (Int, Int, Int)
  (Int, Int, Int)
  Sym cobox_aYM
canEqTyVar2
  a_aL9
  (Int, Int, Int)
  Is-swapped
  (Int, Int, Int)
  <(Int, Int, Int)>_N
can_eq_nc
  [W] cobox_aYM :: (Int, Int, Int) ~ (Int, Int, Int)
  (Int, Int, Int)
  (Int, Int, Int)
  (Int, Int, Int)
  (Int, Int, Int)
newWantedEvVar/cache miss [W] cobox_aYN :: Int ~ Int
newWantedEvVar/cache miss [W] cobox_aYO :: Int ~ Int
newWantedEvVar/cache miss [W] cobox_aYP :: Int ~ Int
setEvBind
  ev = cobox_aYM
  tm  = CO (cobox_aYN, cobox_aYO, cobox_aYP)_N
canEvNC:eq
  Int
  Int
can_eq_nc
  [W] cobox_aYN :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYN
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aYO :: Int ~ Int [" a type equality t_aCB
                                                             ~
                                                             [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aYO :: Int ~ Int [" a type equality t_aCB
                                                              ~
                                                              [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aYO :: Int ~ Int [" a type equality t_aCB
                                                ~
                                                [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
canEvNC:eq
  Int
  Int
can_eq_nc
  [W] cobox_aYO :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYO
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aYP :: Int ~ Int [" a type equality t_aCB
                                                             ~
                                                             [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aYP :: Int ~ Int [" a type equality t_aCB
                                                              ~
                                                              [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aYP :: Int ~ Int [" a type equality t_aCB
                                                ~
                                                [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
canEvNC:eq
  Int
  Int
can_eq_nc
  [W] cobox_aYP :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aYP
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLf :: HTML ~ t_aCG [" a type equality HTML
                                                                ~
                                                                t_aCG " HTML3.hs:83:22-95] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLf :: HTML ~ t_aCG [" a type equality HTML
                                                                 ~
                                                                 t_aCG " HTML3.hs:83:22-95] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLf :: HTML ~ t_aCG [" a type equality HTML
                                                   ~
                                                   t_aCG " HTML3.hs:83:22-95] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCG
can_eq_nc
  [W] cobox_aLf :: HTML ~ t_aCG
  HTML
  HTML
  t_aCG
  t_aCG
canEqTyVar
  t_aCG
  HTML
  Is-swapped
Following bound tyvar t_aCG = HTML
newWantedEvVar/cache miss [W] cobox_aYQ :: HTML ~ HTML
setEvBind
  ev = cobox_aLf
  tm  = CO Sym cobox_aYQ
rewriteEqEvidence
  [W] cobox_aLf :: HTML ~ t_aCG
  HTML
  HTML
  Sym cobox_aYQ
canEqTyVar2
  t_aCG
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aYQ :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aYQ
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLg :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:83:32-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLg :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:83:32-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLg :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:83:32-38] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aLg :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aLg :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYR :: Char ~ Char
setEvBind
  ev = cobox_aLg
  tm  = CO [cobox_aYR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLh :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:83:42-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLh :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:83:42-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLh :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:83:42-48] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aLh :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aLh :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYS :: Char ~ Char
setEvBind
  ev = cobox_aLh
  tm  = CO [cobox_aYS]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYS :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYS
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLi :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:83:50-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLi :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:83:50-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLi :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:83:50-54] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aLi :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aLi :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYT :: Char ~ Char
setEvBind
  ev = cobox_aLi
  tm  = CO [cobox_aYT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLj :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:83:58-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLj :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:83:58-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLj :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:83:58-65] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aLj :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aLj :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYU :: Char ~ Char
setEvBind
  ev = cobox_aLj
  tm  = CO [cobox_aYU]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLk :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML3.hs:83:67-71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLk :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML3.hs:83:67-71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLk :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML3.hs:83:67-71] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aLk :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aLk :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aYV :: Char ~ Char
setEvBind
  ev = cobox_aLk
  tm  = CO [cobox_aYV]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aYV :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aYV
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLn :: [b_aLm]
                                ~ [HTML] [" a type equality [b_aLm]
                                                            ~
                                                            [HTML] " HTML3.hs:83:76-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLn :: [b_aLm]
                                 ~ [HTML] [" a type equality [b_aLm]
                                                             ~
                                                             [HTML] " HTML3.hs:83:76-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLn :: [b_aLm] ~ [HTML] [" a type equality [b_aLm]
                                                       ~
                                                       [HTML] " HTML3.hs:83:76-94] (CNonCanonical)
canEvNC:eq
  [b_aLm]
  [HTML]
can_eq_nc
  [W] cobox_aLn :: [b_aLm] ~ [HTML]
  [b_aLm]
  [b_aLm]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aYW :: b_aLm ~ HTML
setEvBind
  ev = cobox_aLn
  tm  = CO [cobox_aYW]_N
canEvNC:eq
  b_aLm
  HTML
can_eq_nc
  [W] cobox_aYW :: b_aLm ~ HTML
  b_aLm
  b_aLm
  HTML
  HTML
canEqTyVar
  b_aLm
  HTML
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYW :: b_aLm
                                 ~ HTML [" a type equality [b_aLm]
                                                           ~
                                                           [HTML] " HTML3.hs:83:76-94] (CTyEqCan)
Sneaky unification:
  Unifies: b_aLm := HTML
  Coercion: b_aLm ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aLm := HTML
setEvBind
  ev = cobox_aYW
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  b_aLm
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
362[<C:0,F:0>] [W] cobox_aYW :: b_aLm ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLo :: (t_aCB -> t_aCC)
                                ~ (a_aLl -> b_aLm) [" a type equality t_aCB -> t_aCC
                                                                      ~
                                                                      a_aLl
                                                                      -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLo :: (t_aCB -> t_aCC)
                                 ~ (a_aLl -> b_aLm) [" a type equality t_aCB -> t_aCC
                                                                       ~
                                                                       a_aLl
                                                                       -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLo :: (t_aCB -> t_aCC)
                   ~ (a_aLl -> b_aLm) [" a type equality t_aCB -> t_aCC
                                                         ~
                                                         a_aLl
                                                         -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
canEvNC:eq
  t_aCB -> t_aCC
  a_aLl -> b_aLm
can_eq_nc
  [W] cobox_aLo :: (t_aCB -> t_aCC) ~ (a_aLl -> b_aLm)
  t_aCB -> t_aCC
  t_aCB -> t_aCC
  a_aLl -> b_aLm
  a_aLl -> b_aLm
newWantedEvVar/cache miss [W] cobox_aYX :: t_aCB ~ a_aLl
newWantedEvVar/cache miss [W] cobox_aYY :: t_aCC ~ b_aLm
setEvBind
  ev = cobox_aLo
  tm  = CO cobox_aYX -> cobox_aYY
canEvNC:eq
  t_aCB
  a_aLl
can_eq_nc
  [W] cobox_aYX :: t_aCB ~ a_aLl
  t_aCB
  t_aCB
  a_aLl
  a_aLl
canEqTyVar
  t_aCB
  a_aLl
  Not-swapped
Following bound tyvar t_aCB = [(Int, Int, Int)]
canEqTyVar2
  t_aCB
  a_aLl
  Not-swapped
  [(Int, Int, Int)]
  <[(Int, Int, Int)]>_N
can_eq_nc
  [W] cobox_aYX :: [(Int, Int, Int)] ~ a_aLl
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  a_aLl
  a_aLl
canEqTyVar
  a_aLl
  [(Int, Int, Int)]
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aYZ :: a_aLl ~ [(Int, Int, Int)]
setEvBind
  ev = cobox_aYX
  tm  = CO Sym cobox_aYZ
rewriteEqEvidence
  [W] cobox_aYX :: [(Int, Int, Int)] ~ a_aLl
  a_aLl
  [(Int, Int, Int)]
  Sym cobox_aYZ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aYZ :: a_aLl
                                 ~ [(Int, Int, Int)] [" a type equality t_aCB -> t_aCC
                                                                        ~
                                                                        a_aLl
                                                                        -> b_aLm " HTML3.hs:83:80-86] (CTyEqCan)
Sneaky unification:
  Unifies: a_aLl := [(Int, Int, Int)]
  Coercion: a_aLl ~ [(Int, Int, Int)]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aLl := [(Int, Int, Int)]
setEvBind
  ev = cobox_aYZ
  tm  = CO <[(Int, Int, Int)]>_N
kickOutRewritable
  tv =  a_aLl
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
363[<C:0,F:0>] [W] cobox_aYZ :: a_aLl
                                ~ [(Int, Int, Int)]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aYY :: t_aCC
                                ~ b_aLm [" a type equality t_aCB -> t_aCC
                                                           ~
                                                           a_aLl
                                                           -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aYY :: t_aCC
                                 ~ b_aLm [" a type equality t_aCB -> t_aCC
                                                            ~
                                                            a_aLl
                                                            -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aYY :: t_aCC ~ b_aLm [" a type equality t_aCB -> t_aCC
                                                    ~
                                                    a_aLl
                                                    -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
canEvNC:eq
  t_aCC
  b_aLm
can_eq_nc
  [W] cobox_aYY :: t_aCC ~ b_aLm
  t_aCC
  t_aCC
  b_aLm
  b_aLm
canEqTyVar
  t_aCC
  b_aLm
  Not-swapped
Following bound tyvar t_aCC = HTML
canEqTyVar2
  t_aCC
  b_aLm
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aYY :: HTML ~ b_aLm
  HTML
  HTML
  b_aLm
  b_aLm
canEqTyVar
  b_aLm
  HTML
  Is-swapped
Following bound tyvar b_aLm = HTML
newWantedEvVar/cache miss [W] cobox_aZ0 :: HTML ~ HTML
setEvBind
  ev = cobox_aYY
  tm  = CO Sym cobox_aZ0
rewriteEqEvidence
  [W] cobox_aYY :: HTML ~ b_aLm
  HTML
  HTML
  Sym cobox_aZ0
canEqTyVar2
  b_aLm
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZ0 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZ0
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLp :: t_aCF
                                ~ [a_aLl] [" a type equality t_aCF
                                                             ~
                                                             [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLp :: t_aCF
                                 ~ [a_aLl] [" a type equality t_aCF
                                                              ~
                                                              [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLp :: t_aCF ~ [a_aLl] [" a type equality t_aCF
                                                      ~
                                                      [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
canEvNC:eq
  t_aCF
  [a_aLl]
can_eq_nc
  [W] cobox_aLp :: t_aCF ~ [a_aLl]
  t_aCF
  t_aCF
  [a_aLl]
  [a_aLl]
canEqTyVar
  t_aCF
  [a_aLl]
  Not-swapped
Following bound tyvar t_aCF = [[(Int, Int, Int)]]
canEqTyVar2
  t_aCF
  [a_aLl]
  Not-swapped
  [[(Int, Int, Int)]]
  <[[(Int, Int, Int)]]>_N
can_eq_nc
  [W] cobox_aLp :: [[(Int, Int, Int)]] ~ [a_aLl]
  [[(Int, Int, Int)]]
  [[(Int, Int, Int)]]
  [a_aLl]
  [a_aLl]
newWantedEvVar/cache miss
  [W] cobox_aZ1 :: [(Int, Int, Int)] ~ a_aLl
setEvBind
  ev = cobox_aLp
  tm  = CO [cobox_aZ1]_N
canEvNC:eq
  [(Int, Int, Int)]
  a_aLl
can_eq_nc
  [W] cobox_aZ1 :: [(Int, Int, Int)] ~ a_aLl
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  a_aLl
  a_aLl
canEqTyVar
  a_aLl
  [(Int, Int, Int)]
  Is-swapped
Following bound tyvar a_aLl = [(Int, Int, Int)]
newWantedEvVar/cache miss
  [W] cobox_aZ2 :: [(Int, Int, Int)] ~ [(Int, Int, Int)]
setEvBind
  ev = cobox_aZ1
  tm  = CO Sym cobox_aZ2
rewriteEqEvidence
  [W] cobox_aZ1 :: [(Int, Int, Int)] ~ a_aLl
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  Sym cobox_aZ2
canEqTyVar2
  a_aLl
  [(Int, Int, Int)]
  Is-swapped
  [(Int, Int, Int)]
  <[(Int, Int, Int)]>_N
can_eq_nc
  [W] cobox_aZ2 :: [(Int, Int, Int)] ~ [(Int, Int, Int)]
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  [(Int, Int, Int)]
newWantedEvVar/cache miss
  [W] cobox_aZ3 :: (Int, Int, Int) ~ (Int, Int, Int)
setEvBind
  ev = cobox_aZ2
  tm  = CO [cobox_aZ3]_N
canEvNC:eq
  (Int, Int, Int)
  (Int, Int, Int)
can_eq_nc
  [W] cobox_aZ3 :: (Int, Int, Int) ~ (Int, Int, Int)
  (Int, Int, Int)
  (Int, Int, Int)
  (Int, Int, Int)
  (Int, Int, Int)
newWantedEvVar/cache miss [W] cobox_aZ4 :: Int ~ Int
newWantedEvVar/cache miss [W] cobox_aZ5 :: Int ~ Int
newWantedEvVar/cache miss [W] cobox_aZ6 :: Int ~ Int
setEvBind
  ev = cobox_aZ3
  tm  = CO (cobox_aZ4, cobox_aZ5, cobox_aZ6)_N
canEvNC:eq
  Int
  Int
can_eq_nc
  [W] cobox_aZ4 :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aZ4
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aZ5 :: Int ~ Int [" a type equality t_aCF
                                                             ~
                                                             [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aZ5 :: Int ~ Int [" a type equality t_aCF
                                                              ~
                                                              [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aZ5 :: Int ~ Int [" a type equality t_aCF
                                                ~
                                                [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
canEvNC:eq
  Int
  Int
can_eq_nc
  [W] cobox_aZ5 :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aZ5
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aZ6 :: Int ~ Int [" a type equality t_aCF
                                                             ~
                                                             [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aZ6 :: Int ~ Int [" a type equality t_aCF
                                                              ~
                                                              [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aZ6 :: Int ~ Int [" a type equality t_aCF
                                                ~
                                                [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
canEvNC:eq
  Int
  Int
can_eq_nc
  [W] cobox_aZ6 :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aZ6
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLr :: HTML ~ t_aCi [" a type equality HTML
                                                                ~
                                                                t_aCi " HTML3.hs:98:20-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLr :: HTML ~ t_aCi [" a type equality HTML
                                                                 ~
                                                                 t_aCi " HTML3.hs:98:20-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLr :: HTML ~ t_aCi [" a type equality HTML
                                                   ~
                                                   t_aCi " HTML3.hs:98:20-70] (CNonCanonical)
canEvNC:eq
  HTML
  t_aCi
can_eq_nc
  [W] cobox_aLr :: HTML ~ t_aCi
  HTML
  HTML
  t_aCi
  t_aCi
canEqTyVar
  t_aCi
  HTML
  Is-swapped
Following bound tyvar t_aCi = HTML
newWantedEvVar/cache miss [W] cobox_aZ7 :: HTML ~ HTML
setEvBind
  ev = cobox_aLr
  tm  = CO Sym cobox_aZ7
rewriteEqEvidence
  [W] cobox_aLr :: HTML ~ t_aCi
  HTML
  HTML
  Sym cobox_aZ7
canEqTyVar2
  t_aCi
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZ7 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZ7
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLt :: [a_aLs]
                                ~ String [" a type equality [a_aLs]
                                                            ~
                                                            String " HTML3.hs:98:31-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLt :: [a_aLs]
                                 ~ String [" a type equality [a_aLs]
                                                             ~
                                                             String " HTML3.hs:98:31-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLt :: [a_aLs] ~ String [" a type equality [a_aLs]
                                                       ~
                                                       String " HTML3.hs:98:31-52] (CNonCanonical)
canEvNC:eq
  [a_aLs]
  String
can_eq_nc
  [W] cobox_aLt :: [a_aLs] ~ String
  [a_aLs]
  [a_aLs]
  String
  String
can_eq_nc
  [W] cobox_aLt :: [a_aLs] ~ String
  [a_aLs]
  [a_aLs]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aZ8 :: a_aLs ~ Char
setEvBind
  ev = cobox_aLt
  tm  = CO [cobox_aZ8]_N
canEvNC:eq
  a_aLs
  Char
can_eq_nc
  [W] cobox_aZ8 :: a_aLs ~ Char
  a_aLs
  a_aLs
  Char
  Char
canEqTyVar
  a_aLs
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZ8 :: a_aLs
                                 ~ Char [" a type equality [a_aLs]
                                                           ~
                                                           String " HTML3.hs:98:31-52] (CTyEqCan)
Sneaky unification:
  Unifies: a_aLs := Char
  Coercion: a_aLs ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aLs := Char
setEvBind
  ev = cobox_aZ8
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aLs
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
369[<C:0,F:0>] [W] cobox_aZ8 :: a_aLs ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLu :: [Char]
                                ~ [a_aLs] [" a type equality [Char]
                                                             ~
                                                             [a_aLs] " HTML3.hs:98:31-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLu :: [Char]
                                 ~ [a_aLs] [" a type equality [Char]
                                                              ~
                                                              [a_aLs] " HTML3.hs:98:31-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLu :: [Char] ~ [a_aLs] [" a type equality [Char]
                                                       ~
                                                       [a_aLs] " HTML3.hs:98:31-33] (CNonCanonical)
canEvNC:eq
  [Char]
  [a_aLs]
can_eq_nc
  [W] cobox_aLu :: [Char] ~ [a_aLs]
  [Char]
  [Char]
  [a_aLs]
  [a_aLs]
newWantedEvVar/cache miss [W] cobox_aZ9 :: Char ~ a_aLs
setEvBind
  ev = cobox_aLu
  tm  = CO [cobox_aZ9]_N
canEvNC:eq
  Char
  a_aLs
can_eq_nc
  [W] cobox_aZ9 :: Char ~ a_aLs
  Char
  Char
  a_aLs
  a_aLs
canEqTyVar
  a_aLs
  Char
  Is-swapped
Following bound tyvar a_aLs = Char
newWantedEvVar/cache miss [W] cobox_aZa :: Char ~ Char
setEvBind
  ev = cobox_aZ9
  tm  = CO Sym cobox_aZa
rewriteEqEvidence
  [W] cobox_aZ9 :: Char ~ a_aLs
  Char
  Char
  Sym cobox_aZa
canEqTyVar2
  a_aLs
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aZa :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZa
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLv :: t_aDN
                                ~ [a_aLs] [" a type equality t_aDN
                                                             ~
                                                             [a_aLs] " HTML3.hs:98:38-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLv :: t_aDN
                                 ~ [a_aLs] [" a type equality t_aDN
                                                              ~
                                                              [a_aLs] " HTML3.hs:98:38-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLv :: t_aDN ~ [a_aLs] [" a type equality t_aDN
                                                      ~
                                                      [a_aLs] " HTML3.hs:98:38-52] (CNonCanonical)
canEvNC:eq
  t_aDN
  [a_aLs]
can_eq_nc
  [W] cobox_aLv :: t_aDN ~ [a_aLs]
  t_aDN
  t_aDN
  [a_aLs]
  [a_aLs]
canEqTyVar
  t_aDN
  [a_aLs]
  Not-swapped
Following bound tyvar t_aDN = String
canEqTyVar2
  t_aDN
  [a_aLs]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aLv :: String ~ [a_aLs]
  String
  String
  [a_aLs]
  [a_aLs]
can_eq_nc
  [W] cobox_aLv :: String ~ [a_aLs]
  [Char]
  String
  [a_aLs]
  [a_aLs]
newWantedEvVar/cache miss [W] cobox_aZb :: Char ~ a_aLs
setEvBind
  ev = cobox_aLv
  tm  = CO [cobox_aZb]_N
canEvNC:eq
  Char
  a_aLs
can_eq_nc
  [W] cobox_aZb :: Char ~ a_aLs
  Char
  Char
  a_aLs
  a_aLs
canEqTyVar
  a_aLs
  Char
  Is-swapped
Following bound tyvar a_aLs = Char
newWantedEvVar/cache miss [W] cobox_aZc :: Char ~ Char
setEvBind
  ev = cobox_aZb
  tm  = CO Sym cobox_aZc
rewriteEqEvidence
  [W] cobox_aZb :: Char ~ a_aLs
  Char
  Char
  Sym cobox_aZc
canEqTyVar2
  a_aLs
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_aZc :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZc
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLw :: t_aCg
                                ~ t_aDM [" a type equality t_aCg
                                                           ~
                                                           t_aDM " HTML3.hs:98:46-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLw :: t_aCg
                                 ~ t_aDM [" a type equality t_aCg
                                                            ~
                                                            t_aDM " HTML3.hs:98:46-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLw :: t_aCg ~ t_aDM [" a type equality t_aCg
                                                    ~
                                                    t_aDM " HTML3.hs:98:46-52] (CNonCanonical)
canEvNC:eq
  t_aCg
  t_aDM
can_eq_nc
  [W] cobox_aLw :: t_aCg ~ t_aDM
  t_aCg
  t_aCg
  t_aDM
  t_aDM
canEqTyVar
  t_aCg
  t_aDM
  Not-swapped
Following bound tyvar t_aCg = Int
canEqTyVar2
  t_aCg
  t_aDM
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aLw :: Int ~ t_aDM
  Int
  Int
  t_aDM
  t_aDM
canEqTyVar
  t_aDM
  Int
  Is-swapped
Following bound tyvar t_aDM = Int
newWantedEvVar/cache miss [W] cobox_aZd :: Int ~ Int
setEvBind
  ev = cobox_aLw
  tm  = CO Sym cobox_aZd
rewriteEqEvidence
  [W] cobox_aLw :: Int ~ t_aDM
  Int
  Int
  Sym cobox_aZd
canEqTyVar2
  t_aDM
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aZd :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aZd
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLx :: HTML ~ HTML [" a type equality HTML
                                                               ~
                                                               HTML " HTML3.hs:98:59-69] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLx :: HTML ~ HTML [" a type equality HTML
                                                                ~
                                                                HTML " HTML3.hs:98:59-69] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLx :: HTML ~ HTML [" a type equality HTML
                                                  ~
                                                  HTML " HTML3.hs:98:59-69] (CNonCanonical)
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aLx :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aLx
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLy :: t_aCh
                                ~ String [" a type equality t_aCh
                                                            ~
                                                            String " HTML3.hs:98:64-69] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLy :: t_aCh
                                 ~ String [" a type equality t_aCh
                                                             ~
                                                             String " HTML3.hs:98:64-69] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLy :: t_aCh ~ String [" a type equality t_aCh
                                                     ~
                                                     String " HTML3.hs:98:64-69] (CNonCanonical)
canEvNC:eq
  t_aCh
  String
can_eq_nc
  [W] cobox_aLy :: t_aCh ~ String
  t_aCh
  t_aCh
  String
  String
can_eq_nc
  [W] cobox_aLy :: t_aCh ~ String
  t_aCh
  t_aCh
  [Char]
  String
canEqTyVar
  t_aCh
  [Char]
  Not-swapped
Following bound tyvar t_aCh = String
canEqTyVar2
  t_aCh
  [Char]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aLy :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aLy :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aZe :: Char ~ Char
setEvBind
  ev = cobox_aLy
  tm  = CO [cobox_aZe]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aZe :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZe
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLA :: t_aC2
                                ~ t_aBY [" a type equality t_aC2
                                                           ~
                                                           t_aBY " HTML3.hs:(110,16)-(112,111)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLA :: t_aC2
                                 ~ t_aBY [" a type equality t_aC2
                                                            ~
                                                            t_aBY " HTML3.hs:(110,16)-(112,111)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLA :: t_aC2 ~ t_aBY [" a type equality t_aC2
                                                    ~
                                                    t_aBY " HTML3.hs:(110,16)-(112,111)] (CNonCanonical)
canEvNC:eq
  t_aC2
  t_aBY
can_eq_nc
  [W] cobox_aLA :: t_aC2 ~ t_aBY
  t_aC2
  t_aC2
  t_aBY
  t_aBY
canEqTyVar
  t_aC2
  t_aBY
  Not-swapped
Following bound tyvar t_aC2 = HTML
canEqTyVar2
  t_aC2
  t_aBY
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aLA :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
Following bound tyvar t_aBY = HTML
newWantedEvVar/cache miss [W] cobox_aZf :: HTML ~ HTML
setEvBind
  ev = cobox_aLA
  tm  = CO Sym cobox_aZf
rewriteEqEvidence
  [W] cobox_aLA :: HTML ~ t_aBY
  HTML
  HTML
  Sym cobox_aZf
canEqTyVar2
  t_aBY
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZf :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZf
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLB :: [Char]
                                ~ t_aC0 [" a type equality [Char]
                                                           ~
                                                           t_aC0 " HTML3.hs:110:25-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLB :: [Char]
                                 ~ t_aC0 [" a type equality [Char]
                                                            ~
                                                            t_aC0 " HTML3.hs:110:25-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLB :: [Char] ~ t_aC0 [" a type equality [Char]
                                                     ~
                                                     t_aC0 " HTML3.hs:110:25-38] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aC0
can_eq_nc
  [W] cobox_aLB :: [Char] ~ t_aC0
  [Char]
  [Char]
  t_aC0
  t_aC0
canEqTyVar
  t_aC0
  [Char]
  Is-swapped
Following bound tyvar t_aC0 = String
newWantedEvVar/cache miss [W] cobox_aZg :: String ~ [Char]
setEvBind
  ev = cobox_aLB
  tm  = CO Sym cobox_aZg
rewriteEqEvidence
  [W] cobox_aLB :: [Char] ~ t_aC0
  String
  [Char]
  Sym cobox_aZg
canEqTyVar2
  t_aC0
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aZg :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aZg :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aZh :: Char ~ Char
setEvBind
  ev = cobox_aZg
  tm  = CO [cobox_aZh]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aZh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLD :: [t_aLC]
                                ~ t_aC1 [" a type equality [t_aLC]
                                                           ~
                                                           t_aC1 " HTML3.hs:(110,40)-(112,111)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLD :: [t_aLC]
                                 ~ t_aC1 [" a type equality [t_aLC]
                                                            ~
                                                            t_aC1 " HTML3.hs:(110,40)-(112,111)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLD :: [t_aLC] ~ t_aC1 [" a type equality [t_aLC]
                                                      ~
                                                      t_aC1 " HTML3.hs:(110,40)-(112,111)] (CNonCanonical)
canEvNC:eq
  [t_aLC]
  t_aC1
can_eq_nc
  [W] cobox_aLD :: [t_aLC] ~ t_aC1
  [t_aLC]
  [t_aLC]
  t_aC1
  t_aC1
canEqTyVar
  t_aC1
  [t_aLC]
  Is-swapped
Following bound tyvar t_aC1 = [HTML]
newWantedEvVar/cache miss [W] cobox_aZi :: [HTML] ~ [t_aLC]
setEvBind
  ev = cobox_aLD
  tm  = CO Sym cobox_aZi
rewriteEqEvidence
  [W] cobox_aLD :: [t_aLC] ~ t_aC1
  [HTML]
  [t_aLC]
  Sym cobox_aZi
canEqTyVar2
  t_aC1
  [t_aLC]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aZi :: [HTML] ~ [t_aLC]
  [HTML]
  [HTML]
  [t_aLC]
  [t_aLC]
newWantedEvVar/cache miss [W] cobox_aZj :: HTML ~ t_aLC
setEvBind
  ev = cobox_aZi
  tm  = CO [cobox_aZj]_N
canEvNC:eq
  HTML
  t_aLC
can_eq_nc
  [W] cobox_aZj :: HTML ~ t_aLC
  HTML
  HTML
  t_aLC
  t_aLC
canEqTyVar
  t_aLC
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZk :: t_aLC ~ HTML
setEvBind
  ev = cobox_aZj
  tm  = CO Sym cobox_aZk
rewriteEqEvidence
  [W] cobox_aZj :: HTML ~ t_aLC
  t_aLC
  HTML
  Sym cobox_aZk
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZk :: t_aLC
                                 ~ HTML [" a type equality [t_aLC]
                                                           ~
                                                           t_aC1 " HTML3.hs:(110,40)-(112,111)] (CTyEqCan)
Sneaky unification:
  Unifies: t_aLC := HTML
  Coercion: t_aLC ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aLC := HTML
setEvBind
  ev = cobox_aZk
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aLC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
377[<C:0,F:0>] [W] cobox_aZk :: t_aLC ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLE :: t_aCi
                                ~ t_aLC [" a type equality t_aCi
                                                           ~
                                                           t_aLC " HTML3.hs:110:42-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLE :: t_aCi
                                 ~ t_aLC [" a type equality t_aCi
                                                            ~
                                                            t_aLC " HTML3.hs:110:42-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLE :: t_aCi ~ t_aLC [" a type equality t_aCi
                                                    ~
                                                    t_aLC " HTML3.hs:110:42-59] (CNonCanonical)
canEvNC:eq
  t_aCi
  t_aLC
can_eq_nc
  [W] cobox_aLE :: t_aCi ~ t_aLC
  t_aCi
  t_aCi
  t_aLC
  t_aLC
canEqTyVar
  t_aCi
  t_aLC
  Not-swapped
Following bound tyvar t_aCi = HTML
canEqTyVar2
  t_aCi
  t_aLC
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aLE :: HTML ~ t_aLC
  HTML
  HTML
  t_aLC
  t_aLC
canEqTyVar
  t_aLC
  HTML
  Is-swapped
Following bound tyvar t_aLC = HTML
newWantedEvVar/cache miss [W] cobox_aZl :: HTML ~ HTML
setEvBind
  ev = cobox_aLE
  tm  = CO Sym cobox_aZl
rewriteEqEvidence
  [W] cobox_aLE :: HTML ~ t_aLC
  HTML
  HTML
  Sym cobox_aZl
canEqTyVar2
  t_aLC
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZl :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZl
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLH :: (Integer -> a_aLF)
                                ~ (Integer -> t_aCg) [" a type equality Integer -> a_aLF
                                                                        ~
                                                                        Integer
                                                                        -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLH :: (Integer -> a_aLF)
                                 ~ (Integer -> t_aCg) [" a type equality Integer -> a_aLF
                                                                         ~
                                                                         Integer
                                                                         -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLH :: (Integer -> a_aLF)
                   ~ (Integer -> t_aCg) [" a type equality Integer -> a_aLF
                                                           ~
                                                           Integer
                                                           -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
canEvNC:eq
  Integer -> a_aLF
  Integer -> t_aCg
can_eq_nc
  [W] cobox_aLH :: (Integer -> a_aLF) ~ (Integer -> t_aCg)
  Integer -> a_aLF
  Integer -> a_aLF
  Integer -> t_aCg
  Integer -> t_aCg
newWantedEvVar/cache miss [W] cobox_aZm :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_aZn :: a_aLF ~ t_aCg
setEvBind
  ev = cobox_aLH
  tm  = CO cobox_aZm -> cobox_aZn
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_aZm :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_aZm
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aZn :: a_aLF
                                ~ t_aCg [" a type equality Integer -> a_aLF
                                                           ~
                                                           Integer
                                                           -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aZn :: a_aLF
                                 ~ t_aCg [" a type equality Integer -> a_aLF
                                                            ~
                                                            Integer
                                                            -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aZn :: a_aLF ~ t_aCg [" a type equality Integer -> a_aLF
                                                    ~
                                                    Integer
                                                    -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
canEvNC:eq
  a_aLF
  t_aCg
can_eq_nc
  [W] cobox_aZn :: a_aLF ~ t_aCg
  a_aLF
  a_aLF
  t_aCg
  t_aCg
canEqTyVar
  a_aLF
  t_aCg
  Not-swapped
Following bound tyvar t_aCg = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZn :: a_aLF
                                 ~ Int [" a type equality Integer -> a_aLF
                                                          ~
                                                          Integer
                                                          -> t_aCg " HTML3.hs:110:44] (CTyEqCan)
Sneaky unification:
  Unifies: a_aLF := Int
  Coercion: a_aLF ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aLF := Int
setEvBind
  ev = cobox_aZn
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aLF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
380[<C:0,F:0>] [W] cobox_aZn :: a_aLF ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLI :: [Char]
                                ~ t_aCh [" a type equality [Char]
                                                           ~
                                                           t_aCh " HTML3.hs:110:46-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLI :: [Char]
                                 ~ t_aCh [" a type equality [Char]
                                                            ~
                                                            t_aCh " HTML3.hs:110:46-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLI :: [Char] ~ t_aCh [" a type equality [Char]
                                                     ~
                                                     t_aCh " HTML3.hs:110:46-59] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aCh
can_eq_nc
  [W] cobox_aLI :: [Char] ~ t_aCh
  [Char]
  [Char]
  t_aCh
  t_aCh
canEqTyVar
  t_aCh
  [Char]
  Is-swapped
Following bound tyvar t_aCh = String
newWantedEvVar/cache miss [W] cobox_aZo :: String ~ [Char]
setEvBind
  ev = cobox_aLI
  tm  = CO Sym cobox_aZo
rewriteEqEvidence
  [W] cobox_aLI :: [Char] ~ t_aCh
  String
  [Char]
  Sym cobox_aZo
canEqTyVar2
  t_aCh
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aZo :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aZo :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aZp :: Char ~ Char
setEvBind
  ev = cobox_aZo
  tm  = CO [cobox_aZp]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aZp :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZp
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLJ :: t_aCr
                                ~ t_aLC [" a type equality t_aCr
                                                           ~
                                                           t_aLC " HTML3.hs:111:41-343] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLJ :: t_aCr
                                 ~ t_aLC [" a type equality t_aCr
                                                            ~
                                                            t_aLC " HTML3.hs:111:41-343] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLJ :: t_aCr ~ t_aLC [" a type equality t_aCr
                                                    ~
                                                    t_aLC " HTML3.hs:111:41-343] (CNonCanonical)
canEvNC:eq
  t_aCr
  t_aLC
can_eq_nc
  [W] cobox_aLJ :: t_aCr ~ t_aLC
  t_aCr
  t_aCr
  t_aLC
  t_aLC
canEqTyVar
  t_aCr
  t_aLC
  Not-swapped
Following bound tyvar t_aCr = HTML
canEqTyVar2
  t_aCr
  t_aLC
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aLJ :: HTML ~ t_aLC
  HTML
  HTML
  t_aLC
  t_aLC
canEqTyVar
  t_aLC
  HTML
  Is-swapped
Following bound tyvar t_aLC = HTML
newWantedEvVar/cache miss [W] cobox_aZq :: HTML ~ HTML
setEvBind
  ev = cobox_aLJ
  tm  = CO Sym cobox_aZq
rewriteEqEvidence
  [W] cobox_aLJ :: HTML ~ t_aLC
  HTML
  HTML
  Sym cobox_aZq
canEqTyVar2
  t_aLC
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZq :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZq
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLL :: [t_aLK]
                                ~ t_aCq [" a type equality [t_aLK]
                                                           ~
                                                           t_aCq " HTML3.hs:111:44-343] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLL :: [t_aLK]
                                 ~ t_aCq [" a type equality [t_aLK]
                                                            ~
                                                            t_aCq " HTML3.hs:111:44-343] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLL :: [t_aLK] ~ t_aCq [" a type equality [t_aLK]
                                                      ~
                                                      t_aCq " HTML3.hs:111:44-343] (CNonCanonical)
canEvNC:eq
  [t_aLK]
  t_aCq
can_eq_nc
  [W] cobox_aLL :: [t_aLK] ~ t_aCq
  [t_aLK]
  [t_aLK]
  t_aCq
  t_aCq
canEqTyVar
  t_aCq
  [t_aLK]
  Is-swapped
Following bound tyvar t_aCq = [[HTML]]
newWantedEvVar/cache miss [W] cobox_aZr :: [[HTML]] ~ [t_aLK]
setEvBind
  ev = cobox_aLL
  tm  = CO Sym cobox_aZr
rewriteEqEvidence
  [W] cobox_aLL :: [t_aLK] ~ t_aCq
  [[HTML]]
  [t_aLK]
  Sym cobox_aZr
canEqTyVar2
  t_aCq
  [t_aLK]
  Is-swapped
  [[HTML]]
  <[[HTML]]>_N
can_eq_nc
  [W] cobox_aZr :: [[HTML]] ~ [t_aLK]
  [[HTML]]
  [[HTML]]
  [t_aLK]
  [t_aLK]
newWantedEvVar/cache miss [W] cobox_aZs :: [HTML] ~ t_aLK
setEvBind
  ev = cobox_aZr
  tm  = CO [cobox_aZs]_N
canEvNC:eq
  [HTML]
  t_aLK
can_eq_nc
  [W] cobox_aZs :: [HTML] ~ t_aLK
  [HTML]
  [HTML]
  t_aLK
  t_aLK
canEqTyVar
  t_aLK
  [HTML]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZt :: t_aLK ~ [HTML]
setEvBind
  ev = cobox_aZs
  tm  = CO Sym cobox_aZt
rewriteEqEvidence
  [W] cobox_aZs :: [HTML] ~ t_aLK
  t_aLK
  [HTML]
  Sym cobox_aZt
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZt :: t_aLK
                                 ~ [HTML] [" a type equality [t_aLK]
                                                             ~
                                                             t_aCq " HTML3.hs:111:44-343] (CTyEqCan)
Sneaky unification:
  Unifies: t_aLK := [HTML]
  Coercion: t_aLK ~ [HTML]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aLK := [HTML]
setEvBind
  ev = cobox_aZt
  tm  = CO <[HTML]>_N
kickOutRewritable
  tv =  t_aLK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
383[<C:0,F:0>] [W] cobox_aZt :: t_aLK
                                ~ [HTML]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLN :: [t_aLM]
                                ~ t_aLK [" a type equality [t_aLM]
                                                           ~
                                                           t_aLK " HTML3.hs:111:45-160] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLN :: [t_aLM]
                                 ~ t_aLK [" a type equality [t_aLM]
                                                            ~
                                                            t_aLK " HTML3.hs:111:45-160] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLN :: [t_aLM] ~ t_aLK [" a type equality [t_aLM]
                                                      ~
                                                      t_aLK " HTML3.hs:111:45-160] (CNonCanonical)
canEvNC:eq
  [t_aLM]
  t_aLK
can_eq_nc
  [W] cobox_aLN :: [t_aLM] ~ t_aLK
  [t_aLM]
  [t_aLM]
  t_aLK
  t_aLK
canEqTyVar
  t_aLK
  [t_aLM]
  Is-swapped
Following bound tyvar t_aLK = [HTML]
newWantedEvVar/cache miss [W] cobox_aZu :: [HTML] ~ [t_aLM]
setEvBind
  ev = cobox_aLN
  tm  = CO Sym cobox_aZu
rewriteEqEvidence
  [W] cobox_aLN :: [t_aLM] ~ t_aLK
  [HTML]
  [t_aLM]
  Sym cobox_aZu
canEqTyVar2
  t_aLK
  [t_aLM]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aZu :: [HTML] ~ [t_aLM]
  [HTML]
  [HTML]
  [t_aLM]
  [t_aLM]
newWantedEvVar/cache miss [W] cobox_aZv :: HTML ~ t_aLM
setEvBind
  ev = cobox_aZu
  tm  = CO [cobox_aZv]_N
canEvNC:eq
  HTML
  t_aLM
can_eq_nc
  [W] cobox_aZv :: HTML ~ t_aLM
  HTML
  HTML
  t_aLM
  t_aLM
canEqTyVar
  t_aLM
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZw :: t_aLM ~ HTML
setEvBind
  ev = cobox_aZv
  tm  = CO Sym cobox_aZw
rewriteEqEvidence
  [W] cobox_aZv :: HTML ~ t_aLM
  t_aLM
  HTML
  Sym cobox_aZw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZw :: t_aLM
                                 ~ HTML [" a type equality [t_aLM]
                                                           ~
                                                           t_aLK " HTML3.hs:111:45-160] (CTyEqCan)
Sneaky unification:
  Unifies: t_aLM := HTML
  Coercion: t_aLM ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aLM := HTML
setEvBind
  ev = cobox_aZw
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aLM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
384[<C:0,F:0>] [W] cobox_aZw :: t_aLM ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLO :: t_aCc
                                ~ t_aLM [" a type equality t_aCc
                                                           ~
                                                           t_aLM " HTML3.hs:111:46-85] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLO :: t_aCc
                                 ~ t_aLM [" a type equality t_aCc
                                                            ~
                                                            t_aLM " HTML3.hs:111:46-85] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLO :: t_aCc ~ t_aLM [" a type equality t_aCc
                                                    ~
                                                    t_aLM " HTML3.hs:111:46-85] (CNonCanonical)
canEvNC:eq
  t_aCc
  t_aLM
can_eq_nc
  [W] cobox_aLO :: t_aCc ~ t_aLM
  t_aCc
  t_aCc
  t_aLM
  t_aLM
canEqTyVar
  t_aCc
  t_aLM
  Not-swapped
Following bound tyvar t_aCc = HTML
canEqTyVar2
  t_aCc
  t_aLM
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aLO :: HTML ~ t_aLM
  HTML
  HTML
  t_aLM
  t_aLM
canEqTyVar
  t_aLM
  HTML
  Is-swapped
Following bound tyvar t_aLM = HTML
newWantedEvVar/cache miss [W] cobox_aZx :: HTML ~ HTML
setEvBind
  ev = cobox_aLO
  tm  = CO Sym cobox_aZx
rewriteEqEvidence
  [W] cobox_aLO :: HTML ~ t_aLM
  HTML
  HTML
  Sym cobox_aZx
canEqTyVar2
  t_aLM
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZx :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZx
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLQ :: [t_aLP]
                                ~ t_aCa [" a type equality [t_aLP]
                                                           ~
                                                           t_aCa " HTML3.hs:111:51-71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLQ :: [t_aLP]
                                 ~ t_aCa [" a type equality [t_aLP]
                                                            ~
                                                            t_aCa " HTML3.hs:111:51-71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLQ :: [t_aLP] ~ t_aCa [" a type equality [t_aLP]
                                                      ~
                                                      t_aCa " HTML3.hs:111:51-71] (CNonCanonical)
canEvNC:eq
  [t_aLP]
  t_aCa
can_eq_nc
  [W] cobox_aLQ :: [t_aLP] ~ t_aCa
  [t_aLP]
  [t_aLP]
  t_aCa
  t_aCa
canEqTyVar
  t_aCa
  [t_aLP]
  Is-swapped
Following bound tyvar t_aCa = [Attribute]
newWantedEvVar/cache miss [W] cobox_aZy :: [Attribute] ~ [t_aLP]
setEvBind
  ev = cobox_aLQ
  tm  = CO Sym cobox_aZy
rewriteEqEvidence
  [W] cobox_aLQ :: [t_aLP] ~ t_aCa
  [Attribute]
  [t_aLP]
  Sym cobox_aZy
canEqTyVar2
  t_aCa
  [t_aLP]
  Is-swapped
  [Attribute]
  <[Attribute]>_N
can_eq_nc
  [W] cobox_aZy :: [Attribute] ~ [t_aLP]
  [Attribute]
  [Attribute]
  [t_aLP]
  [t_aLP]
newWantedEvVar/cache miss [W] cobox_aZz :: Attribute ~ t_aLP
setEvBind
  ev = cobox_aZy
  tm  = CO [cobox_aZz]_N
canEvNC:eq
  Attribute
  t_aLP
can_eq_nc
  [W] cobox_aZz :: Attribute ~ t_aLP
  Attribute
  Attribute
  t_aLP
  t_aLP
can_eq_nc
  [W] cobox_aZz :: Attribute ~ t_aLP
  (String, String)
  Attribute
  t_aLP
  t_aLP
canEqTyVar
  t_aLP
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZA :: t_aLP ~ Attribute
setEvBind
  ev = cobox_aZz
  tm  = CO Sym cobox_aZA
rewriteEqEvidence
  [W] cobox_aZz :: Attribute ~ t_aLP
  t_aLP
  Attribute
  Sym cobox_aZA
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZA :: t_aLP
                                 ~ Attribute [" a type equality [t_aLP]
                                                                ~
                                                                t_aCa " HTML3.hs:111:51-71] (CTyEqCan)
Sneaky unification:
  Unifies: t_aLP := Attribute
  Coercion: t_aLP ~ Attribute
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aLP := Attribute
setEvBind
  ev = cobox_aZA
  tm  = CO <Attribute>_N
kickOutRewritable
  tv =  t_aLP
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
386[<C:0,F:0>] [W] cobox_aZA :: t_aLP
                                ~ Attribute: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLT :: (t_aLR, t_aLS)
                                ~ t_aLP [" a type equality (t_aLR, t_aLS)
                                                           ~
                                                           t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLT :: (t_aLR, t_aLS)
                                 ~ t_aLP [" a type equality (t_aLR, t_aLS)
                                                            ~
                                                            t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLT :: (t_aLR, t_aLS) ~ t_aLP [" a type equality (t_aLR,
                                                              t_aLS)
                                                             ~
                                                             t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
canEvNC:eq
  (t_aLR, t_aLS)
  t_aLP
can_eq_nc
  [W] cobox_aLT :: (t_aLR, t_aLS) ~ t_aLP
  (t_aLR, t_aLS)
  (t_aLR, t_aLS)
  t_aLP
  t_aLP
canEqTyVar
  t_aLP
  (t_aLR, t_aLS)
  Is-swapped
Following bound tyvar t_aLP = Attribute
newWantedEvVar/cache miss
  [W] cobox_aZB :: Attribute ~ (t_aLR, t_aLS)
setEvBind
  ev = cobox_aLT
  tm  = CO Sym cobox_aZB
rewriteEqEvidence
  [W] cobox_aLT :: (t_aLR, t_aLS) ~ t_aLP
  Attribute
  (t_aLR, t_aLS)
  Sym cobox_aZB
canEqTyVar2
  t_aLP
  (t_aLR, t_aLS)
  Is-swapped
  Attribute
  <Attribute>_N
can_eq_nc
  [W] cobox_aZB :: Attribute ~ (t_aLR, t_aLS)
  Attribute
  Attribute
  (t_aLR, t_aLS)
  (t_aLR, t_aLS)
can_eq_nc
  [W] cobox_aZB :: Attribute ~ (t_aLR, t_aLS)
  (String, String)
  Attribute
  (t_aLR, t_aLS)
  (t_aLR, t_aLS)
newWantedEvVar/cache miss [W] cobox_aZC :: String ~ t_aLR
newWantedEvVar/cache miss [W] cobox_aZD :: String ~ t_aLS
setEvBind
  ev = cobox_aZB
  tm  = CO (cobox_aZC, cobox_aZD)_N
canEvNC:eq
  String
  t_aLR
can_eq_nc
  [W] cobox_aZC :: String ~ t_aLR
  String
  String
  t_aLR
  t_aLR
can_eq_nc
  [W] cobox_aZC :: String ~ t_aLR
  [Char]
  String
  t_aLR
  t_aLR
canEqTyVar
  t_aLR
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZE :: t_aLR ~ String
setEvBind
  ev = cobox_aZC
  tm  = CO Sym cobox_aZE
rewriteEqEvidence
  [W] cobox_aZC :: String ~ t_aLR
  t_aLR
  String
  Sym cobox_aZE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZE :: t_aLR
                                 ~ String [" a type equality (t_aLR, t_aLS)
                                                             ~
                                                             t_aLP " HTML3.hs:111:52-70] (CTyEqCan)
Sneaky unification:
  Unifies: t_aLR := String
  Coercion: t_aLR ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aLR := String
setEvBind
  ev = cobox_aZE
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aLR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
387[<C:0,F:0>] [W] cobox_aZE :: t_aLR
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aZD :: String
                                ~ t_aLS [" a type equality (t_aLR, t_aLS)
                                                           ~
                                                           t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aZD :: String
                                 ~ t_aLS [" a type equality (t_aLR, t_aLS)
                                                            ~
                                                            t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aZD :: String ~ t_aLS [" a type equality (t_aLR, t_aLS)
                                                     ~
                                                     t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
canEvNC:eq
  String
  t_aLS
can_eq_nc
  [W] cobox_aZD :: String ~ t_aLS
  String
  String
  t_aLS
  t_aLS
can_eq_nc
  [W] cobox_aZD :: String ~ t_aLS
  [Char]
  String
  t_aLS
  t_aLS
canEqTyVar
  t_aLS
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZF :: t_aLS ~ String
setEvBind
  ev = cobox_aZD
  tm  = CO Sym cobox_aZF
rewriteEqEvidence
  [W] cobox_aZD :: String ~ t_aLS
  t_aLS
  String
  Sym cobox_aZF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZF :: t_aLS
                                 ~ String [" a type equality (t_aLR, t_aLS)
                                                             ~
                                                             t_aLP " HTML3.hs:111:52-70] (CTyEqCan)
Sneaky unification:
  Unifies: t_aLS := String
  Coercion: t_aLS ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aLS := String
setEvBind
  ev = cobox_aZF
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aLS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
388[<C:0,F:0>] [W] cobox_aZF :: t_aLS
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLU :: [Char]
                                ~ t_aLR [" a type equality [Char]
                                                           ~
                                                           t_aLR " HTML3.hs:111:53-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLU :: [Char]
                                 ~ t_aLR [" a type equality [Char]
                                                            ~
                                                            t_aLR " HTML3.hs:111:53-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLU :: [Char] ~ t_aLR [" a type equality [Char]
                                                     ~
                                                     t_aLR " HTML3.hs:111:53-59] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aLR
can_eq_nc
  [W] cobox_aLU :: [Char] ~ t_aLR
  [Char]
  [Char]
  t_aLR
  t_aLR
canEqTyVar
  t_aLR
  [Char]
  Is-swapped
Following bound tyvar t_aLR = String
newWantedEvVar/cache miss [W] cobox_aZG :: String ~ [Char]
setEvBind
  ev = cobox_aLU
  tm  = CO Sym cobox_aZG
rewriteEqEvidence
  [W] cobox_aLU :: [Char] ~ t_aLR
  String
  [Char]
  Sym cobox_aZG
canEqTyVar2
  t_aLR
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aZG :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aZG :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aZH :: Char ~ Char
setEvBind
  ev = cobox_aZG
  tm  = CO [cobox_aZH]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aZH :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZH
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLV :: [Char]
                                ~ t_aLS [" a type equality [Char]
                                                           ~
                                                           t_aLS " HTML3.hs:111:61-69] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLV :: [Char]
                                 ~ t_aLS [" a type equality [Char]
                                                            ~
                                                            t_aLS " HTML3.hs:111:61-69] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLV :: [Char] ~ t_aLS [" a type equality [Char]
                                                     ~
                                                     t_aLS " HTML3.hs:111:61-69] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aLS
can_eq_nc
  [W] cobox_aLV :: [Char] ~ t_aLS
  [Char]
  [Char]
  t_aLS
  t_aLS
canEqTyVar
  t_aLS
  [Char]
  Is-swapped
Following bound tyvar t_aLS = String
newWantedEvVar/cache miss [W] cobox_aZI :: String ~ [Char]
setEvBind
  ev = cobox_aLV
  tm  = CO Sym cobox_aZI
rewriteEqEvidence
  [W] cobox_aLV :: [Char] ~ t_aLS
  String
  [Char]
  Sym cobox_aZI
canEqTyVar2
  t_aLS
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aZI :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aZI :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aZJ :: Char ~ Char
setEvBind
  ev = cobox_aZI
  tm  = CO [cobox_aZJ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aZJ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZJ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLX :: [t_aLW]
                                ~ t_aCb [" a type equality [t_aLW]
                                                           ~
                                                           t_aCb " HTML3.hs:111:73-85] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLX :: [t_aLW]
                                 ~ t_aCb [" a type equality [t_aLW]
                                                            ~
                                                            t_aCb " HTML3.hs:111:73-85] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLX :: [t_aLW] ~ t_aCb [" a type equality [t_aLW]
                                                      ~
                                                      t_aCb " HTML3.hs:111:73-85] (CNonCanonical)
canEvNC:eq
  [t_aLW]
  t_aCb
can_eq_nc
  [W] cobox_aLX :: [t_aLW] ~ t_aCb
  [t_aLW]
  [t_aLW]
  t_aCb
  t_aCb
canEqTyVar
  t_aCb
  [t_aLW]
  Is-swapped
Following bound tyvar t_aCb = [HTML]
newWantedEvVar/cache miss [W] cobox_aZK :: [HTML] ~ [t_aLW]
setEvBind
  ev = cobox_aLX
  tm  = CO Sym cobox_aZK
rewriteEqEvidence
  [W] cobox_aLX :: [t_aLW] ~ t_aCb
  [HTML]
  [t_aLW]
  Sym cobox_aZK
canEqTyVar2
  t_aCb
  [t_aLW]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aZK :: [HTML] ~ [t_aLW]
  [HTML]
  [HTML]
  [t_aLW]
  [t_aLW]
newWantedEvVar/cache miss [W] cobox_aZL :: HTML ~ t_aLW
setEvBind
  ev = cobox_aZK
  tm  = CO [cobox_aZL]_N
canEvNC:eq
  HTML
  t_aLW
can_eq_nc
  [W] cobox_aZL :: HTML ~ t_aLW
  HTML
  HTML
  t_aLW
  t_aLW
canEqTyVar
  t_aLW
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZM :: t_aLW ~ HTML
setEvBind
  ev = cobox_aZL
  tm  = CO Sym cobox_aZM
rewriteEqEvidence
  [W] cobox_aZL :: HTML ~ t_aLW
  t_aLW
  HTML
  Sym cobox_aZM
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZM :: t_aLW
                                 ~ HTML [" a type equality [t_aLW]
                                                           ~
                                                           t_aCb " HTML3.hs:111:73-85] (CTyEqCan)
Sneaky unification:
  Unifies: t_aLW := HTML
  Coercion: t_aLW ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aLW := HTML
setEvBind
  ev = cobox_aZM
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aLW
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
391[<C:0,F:0>] [W] cobox_aZM :: t_aLW ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLY :: t_aC7
                                ~ t_aLW [" a type equality t_aC7
                                                           ~
                                                           t_aLW " HTML3.hs:111:74-84] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLY :: t_aC7
                                 ~ t_aLW [" a type equality t_aC7
                                                            ~
                                                            t_aLW " HTML3.hs:111:74-84] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLY :: t_aC7 ~ t_aLW [" a type equality t_aC7
                                                    ~
                                                    t_aLW " HTML3.hs:111:74-84] (CNonCanonical)
canEvNC:eq
  t_aC7
  t_aLW
can_eq_nc
  [W] cobox_aLY :: t_aC7 ~ t_aLW
  t_aC7
  t_aC7
  t_aLW
  t_aLW
canEqTyVar
  t_aC7
  t_aLW
  Not-swapped
Following bound tyvar t_aC7 = HTML
canEqTyVar2
  t_aC7
  t_aLW
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aLY :: HTML ~ t_aLW
  HTML
  HTML
  t_aLW
  t_aLW
canEqTyVar
  t_aLW
  HTML
  Is-swapped
Following bound tyvar t_aLW = HTML
newWantedEvVar/cache miss [W] cobox_aZN :: HTML ~ HTML
setEvBind
  ev = cobox_aLY
  tm  = CO Sym cobox_aZN
rewriteEqEvidence
  [W] cobox_aLY :: HTML ~ t_aLW
  HTML
  HTML
  Sym cobox_aZN
canEqTyVar2
  t_aLW
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZN :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZN
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aLZ :: [Char]
                                ~ t_aC6 [" a type equality [Char]
                                                           ~
                                                           t_aC6 " HTML3.hs:111:79-84] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aLZ :: [Char]
                                 ~ t_aC6 [" a type equality [Char]
                                                            ~
                                                            t_aC6 " HTML3.hs:111:79-84] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aLZ :: [Char] ~ t_aC6 [" a type equality [Char]
                                                     ~
                                                     t_aC6 " HTML3.hs:111:79-84] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aC6
can_eq_nc
  [W] cobox_aLZ :: [Char] ~ t_aC6
  [Char]
  [Char]
  t_aC6
  t_aC6
canEqTyVar
  t_aC6
  [Char]
  Is-swapped
Following bound tyvar t_aC6 = String
newWantedEvVar/cache miss [W] cobox_aZO :: String ~ [Char]
setEvBind
  ev = cobox_aLZ
  tm  = CO Sym cobox_aZO
rewriteEqEvidence
  [W] cobox_aLZ :: [Char] ~ t_aC6
  String
  [Char]
  Sym cobox_aZO
canEqTyVar2
  t_aC6
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aZO :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aZO :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aZP :: Char ~ Char
setEvBind
  ev = cobox_aZO
  tm  = CO [cobox_aZP]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aZP :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZP
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aM0 :: t_aC7
                                ~ t_aLM [" a type equality t_aC7
                                                           ~
                                                           t_aLM " HTML3.hs:111:88-159] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aM0 :: t_aC7
                                 ~ t_aLM [" a type equality t_aC7
                                                            ~
                                                            t_aLM " HTML3.hs:111:88-159] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aM0 :: t_aC7 ~ t_aLM [" a type equality t_aC7
                                                    ~
                                                    t_aLM " HTML3.hs:111:88-159] (CNonCanonical)
canEvNC:eq
  t_aC7
  t_aLM
can_eq_nc
  [W] cobox_aM0 :: t_aC7 ~ t_aLM
  t_aC7
  t_aC7
  t_aLM
  t_aLM
canEqTyVar
  t_aC7
  t_aLM
  Not-swapped
Following bound tyvar t_aC7 = HTML
canEqTyVar2
  t_aC7
  t_aLM
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aM0 :: HTML ~ t_aLM
  HTML
  HTML
  t_aLM
  t_aLM
canEqTyVar
  t_aLM
  HTML
  Is-swapped
Following bound tyvar t_aLM = HTML
newWantedEvVar/cache miss [W] cobox_aZQ :: HTML ~ HTML
setEvBind
  ev = cobox_aM0
  tm  = CO Sym cobox_aZQ
rewriteEqEvidence
  [W] cobox_aM0 :: HTML ~ t_aLM
  HTML
  HTML
  Sym cobox_aZQ
canEqTyVar2
  t_aLM
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZQ :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZQ
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aM1 :: [Char]
                                ~ t_aC6 [" a type equality [Char]
                                                           ~
                                                           t_aC6 " HTML3.hs:111:93-159] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aM1 :: [Char]
                                 ~ t_aC6 [" a type equality [Char]
                                                            ~
                                                            t_aC6 " HTML3.hs:111:93-159] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aM1 :: [Char] ~ t_aC6 [" a type equality [Char]
                                                     ~
                                                     t_aC6 " HTML3.hs:111:93-159] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aC6
can_eq_nc
  [W] cobox_aM1 :: [Char] ~ t_aC6
  [Char]
  [Char]
  t_aC6
  t_aC6
canEqTyVar
  t_aC6
  [Char]
  Is-swapped
Following bound tyvar t_aC6 = String
newWantedEvVar/cache miss [W] cobox_aZR :: String ~ [Char]
setEvBind
  ev = cobox_aM1
  tm  = CO Sym cobox_aZR
rewriteEqEvidence
  [W] cobox_aM1 :: [Char] ~ t_aC6
  String
  [Char]
  Sym cobox_aZR
canEqTyVar2
  t_aC6
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aZR :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aZR :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aZS :: Char ~ Char
setEvBind
  ev = cobox_aZR
  tm  = CO [cobox_aZS]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aZS :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aZS
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aM3 :: [t_aM2]
                                ~ t_aLK [" a type equality [t_aM2]
                                                           ~
                                                           t_aLK " HTML3.hs:111:162-278] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aM3 :: [t_aM2]
                                 ~ t_aLK [" a type equality [t_aM2]
                                                            ~
                                                            t_aLK " HTML3.hs:111:162-278] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aM3 :: [t_aM2] ~ t_aLK [" a type equality [t_aM2]
                                                      ~
                                                      t_aLK " HTML3.hs:111:162-278] (CNonCanonical)
canEvNC:eq
  [t_aM2]
  t_aLK
can_eq_nc
  [W] cobox_aM3 :: [t_aM2] ~ t_aLK
  [t_aM2]
  [t_aM2]
  t_aLK
  t_aLK
canEqTyVar
  t_aLK
  [t_aM2]
  Is-swapped
Following bound tyvar t_aLK = [HTML]
newWantedEvVar/cache miss [W] cobox_aZT :: [HTML] ~ [t_aM2]
setEvBind
  ev = cobox_aM3
  tm  = CO Sym cobox_aZT
rewriteEqEvidence
  [W] cobox_aM3 :: [t_aM2] ~ t_aLK
  [HTML]
  [t_aM2]
  Sym cobox_aZT
canEqTyVar2
  t_aLK
  [t_aM2]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aZT :: [HTML] ~ [t_aM2]
  [HTML]
  [HTML]
  [t_aM2]
  [t_aM2]
newWantedEvVar/cache miss [W] cobox_aZU :: HTML ~ t_aM2
setEvBind
  ev = cobox_aZT
  tm  = CO [cobox_aZU]_N
canEvNC:eq
  HTML
  t_aM2
can_eq_nc
  [W] cobox_aZU :: HTML ~ t_aM2
  HTML
  HTML
  t_aM2
  t_aM2
canEqTyVar
  t_aM2
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZV :: t_aM2 ~ HTML
setEvBind
  ev = cobox_aZU
  tm  = CO Sym cobox_aZV
rewriteEqEvidence
  [W] cobox_aZU :: HTML ~ t_aM2
  t_aM2
  HTML
  Sym cobox_aZV
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZV :: t_aM2
                                 ~ HTML [" a type equality [t_aM2]
                                                           ~
                                                           t_aLK " HTML3.hs:111:162-278] (CTyEqCan)
Sneaky unification:
  Unifies: t_aM2 := HTML
  Coercion: t_aM2 ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aM2 := HTML
setEvBind
  ev = cobox_aZV
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aM2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
396[<C:0,F:0>] [W] cobox_aZV :: t_aM2 ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aM4 :: t_aCc
                                ~ t_aM2 [" a type equality t_aCc
                                                           ~
                                                           t_aM2 " HTML3.hs:111:163-203] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aM4 :: t_aCc
                                 ~ t_aM2 [" a type equality t_aCc
                                                            ~
                                                            t_aM2 " HTML3.hs:111:163-203] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aM4 :: t_aCc ~ t_aM2 [" a type equality t_aCc
                                                    ~
                                                    t_aM2 " HTML3.hs:111:163-203] (CNonCanonical)
canEvNC:eq
  t_aCc
  t_aM2
can_eq_nc
  [W] cobox_aM4 :: t_aCc ~ t_aM2
  t_aCc
  t_aCc
  t_aM2
  t_aM2
canEqTyVar
  t_aCc
  t_aM2
  Not-swapped
Following bound tyvar t_aCc = HTML
canEqTyVar2
  t_aCc
  t_aM2
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aM4 :: HTML ~ t_aM2
  HTML
  HTML
  t_aM2
  t_aM2
canEqTyVar
  t_aM2
  HTML
  Is-swapped
Following bound tyvar t_aM2 = HTML
newWantedEvVar/cache miss [W] cobox_aZW :: HTML ~ HTML
setEvBind
  ev = cobox_aM4
  tm  = CO Sym cobox_aZW
rewriteEqEvidence
  [W] cobox_aM4 :: HTML ~ t_aM2
  HTML
  HTML
  Sym cobox_aZW
canEqTyVar2
  t_aM2
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aZW :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aZW
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aM6 :: [t_aM5]
                                ~ t_aCa [" a type equality [t_aM5]
                                                           ~
                                                           t_aCa " HTML3.hs:111:168-188] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aM6 :: [t_aM5]
                                 ~ t_aCa [" a type equality [t_aM5]
                                                            ~
                                                            t_aCa " HTML3.hs:111:168-188] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aM6 :: [t_aM5] ~ t_aCa [" a type equality [t_aM5]
                                                      ~
                                                      t_aCa " HTML3.hs:111:168-188] (CNonCanonical)
canEvNC:eq
  [t_aM5]
  t_aCa
can_eq_nc
  [W] cobox_aM6 :: [t_aM5] ~ t_aCa
  [t_aM5]
  [t_aM5]
  t_aCa
  t_aCa
canEqTyVar
  t_aCa
  [t_aM5]
  Is-swapped
Following bound tyvar t_aCa = [Attribute]
newWantedEvVar/cache miss [W] cobox_aZX :: [Attribute] ~ [t_aM5]
setEvBind
  ev = cobox_aM6
  tm  = CO Sym cobox_aZX
rewriteEqEvidence
  [W] cobox_aM6 :: [t_aM5] ~ t_aCa
  [Attribute]
  [t_aM5]
  Sym cobox_aZX
canEqTyVar2
  t_aCa
  [t_aM5]
  Is-swapped
  [Attribute]
  <[Attribute]>_N
can_eq_nc
  [W] cobox_aZX :: [Attribute] ~ [t_aM5]
  [Attribute]
  [Attribute]
  [t_aM5]
  [t_aM5]
newWantedEvVar/cache miss [W] cobox_aZY :: Attribute ~ t_aM5
setEvBind
  ev = cobox_aZX
  tm  = CO [cobox_aZY]_N
canEvNC:eq
  Attribute
  t_aM5
can_eq_nc
  [W] cobox_aZY :: Attribute ~ t_aM5
  Attribute
  Attribute
  t_aM5
  t_aM5
can_eq_nc
  [W] cobox_aZY :: Attribute ~ t_aM5
  (String, String)
  Attribute
  t_aM5
  t_aM5
canEqTyVar
  t_aM5
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aZZ :: t_aM5 ~ Attribute
setEvBind
  ev = cobox_aZY
  tm  = CO Sym cobox_aZZ
rewriteEqEvidence
  [W] cobox_aZY :: Attribute ~ t_aM5
  t_aM5
  Attribute
  Sym cobox_aZZ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aZZ :: t_aM5
                                 ~ Attribute [" a type equality [t_aM5]
                                                                ~
                                                                t_aCa " HTML3.hs:111:168-188] (CTyEqCan)
Sneaky unification:
  Unifies: t_aM5 := Attribute
  Coercion: t_aM5 ~ Attribute
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aM5 := Attribute
setEvBind
  ev = cobox_aZZ
  tm  = CO <Attribute>_N
kickOutRewritable
  tv =  t_aM5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
398[<C:0,F:0>] [W] cobox_aZZ :: t_aM5
                                ~ Attribute: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aM9 :: (t_aM7, t_aM8)
                                ~ t_aM5 [" a type equality (t_aM7, t_aM8)
                                                           ~
                                                           t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aM9 :: (t_aM7, t_aM8)
                                 ~ t_aM5 [" a type equality (t_aM7, t_aM8)
                                                            ~
                                                            t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aM9 :: (t_aM7, t_aM8) ~ t_aM5 [" a type equality (t_aM7,
                                                              t_aM8)
                                                             ~
                                                             t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
canEvNC:eq
  (t_aM7, t_aM8)
  t_aM5
can_eq_nc
  [W] cobox_aM9 :: (t_aM7, t_aM8) ~ t_aM5
  (t_aM7, t_aM8)
  (t_aM7, t_aM8)
  t_aM5
  t_aM5
canEqTyVar
  t_aM5
  (t_aM7, t_aM8)
  Is-swapped
Following bound tyvar t_aM5 = Attribute
newWantedEvVar/cache miss
  [W] cobox_a100 :: Attribute ~ (t_aM7, t_aM8)
setEvBind
  ev = cobox_aM9
  tm  = CO Sym cobox_a100
rewriteEqEvidence
  [W] cobox_aM9 :: (t_aM7, t_aM8) ~ t_aM5
  Attribute
  (t_aM7, t_aM8)
  Sym cobox_a100
canEqTyVar2
  t_aM5
  (t_aM7, t_aM8)
  Is-swapped
  Attribute
  <Attribute>_N
can_eq_nc
  [W] cobox_a100 :: Attribute ~ (t_aM7, t_aM8)
  Attribute
  Attribute
  (t_aM7, t_aM8)
  (t_aM7, t_aM8)
can_eq_nc
  [W] cobox_a100 :: Attribute ~ (t_aM7, t_aM8)
  (String, String)
  Attribute
  (t_aM7, t_aM8)
  (t_aM7, t_aM8)
newWantedEvVar/cache miss [W] cobox_a101 :: String ~ t_aM7
newWantedEvVar/cache miss [W] cobox_a102 :: String ~ t_aM8
setEvBind
  ev = cobox_a100
  tm  = CO (cobox_a101, cobox_a102)_N
canEvNC:eq
  String
  t_aM7
can_eq_nc
  [W] cobox_a101 :: String ~ t_aM7
  String
  String
  t_aM7
  t_aM7
can_eq_nc
  [W] cobox_a101 :: String ~ t_aM7
  [Char]
  String
  t_aM7
  t_aM7
canEqTyVar
  t_aM7
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a103 :: t_aM7 ~ String
setEvBind
  ev = cobox_a101
  tm  = CO Sym cobox_a103
rewriteEqEvidence
  [W] cobox_a101 :: String ~ t_aM7
  t_aM7
  String
  Sym cobox_a103
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a103 :: t_aM7
                                  ~ String [" a type equality (t_aM7, t_aM8)
                                                              ~
                                                              t_aM5 " HTML3.hs:111:169-187] (CTyEqCan)
Sneaky unification:
  Unifies: t_aM7 := String
  Coercion: t_aM7 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aM7 := String
setEvBind
  ev = cobox_a103
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aM7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
399[<C:0,F:0>] [W] cobox_a103 :: t_aM7
                                 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a102 :: String
                                 ~ t_aM8 [" a type equality (t_aM7, t_aM8)
                                                            ~
                                                            t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a102 :: String
                                  ~ t_aM8 [" a type equality (t_aM7, t_aM8)
                                                             ~
                                                             t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a102 :: String ~ t_aM8 [" a type equality (t_aM7, t_aM8)
                                                      ~
                                                      t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
canEvNC:eq
  String
  t_aM8
can_eq_nc
  [W] cobox_a102 :: String ~ t_aM8
  String
  String
  t_aM8
  t_aM8
can_eq_nc
  [W] cobox_a102 :: String ~ t_aM8
  [Char]
  String
  t_aM8
  t_aM8
canEqTyVar
  t_aM8
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a104 :: t_aM8 ~ String
setEvBind
  ev = cobox_a102
  tm  = CO Sym cobox_a104
rewriteEqEvidence
  [W] cobox_a102 :: String ~ t_aM8
  t_aM8
  String
  Sym cobox_a104
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a104 :: t_aM8
                                  ~ String [" a type equality (t_aM7, t_aM8)
                                                              ~
                                                              t_aM5 " HTML3.hs:111:169-187] (CTyEqCan)
Sneaky unification:
  Unifies: t_aM8 := String
  Coercion: t_aM8 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aM8 := String
setEvBind
  ev = cobox_a104
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aM8
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
400[<C:0,F:0>] [W] cobox_a104 :: t_aM8
                                 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMa :: [Char]
                                ~ t_aM7 [" a type equality [Char]
                                                           ~
                                                           t_aM7 " HTML3.hs:111:170-176] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMa :: [Char]
                                 ~ t_aM7 [" a type equality [Char]
                                                            ~
                                                            t_aM7 " HTML3.hs:111:170-176] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMa :: [Char] ~ t_aM7 [" a type equality [Char]
                                                     ~
                                                     t_aM7 " HTML3.hs:111:170-176] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aM7
can_eq_nc
  [W] cobox_aMa :: [Char] ~ t_aM7
  [Char]
  [Char]
  t_aM7
  t_aM7
canEqTyVar
  t_aM7
  [Char]
  Is-swapped
Following bound tyvar t_aM7 = String
newWantedEvVar/cache miss [W] cobox_a105 :: String ~ [Char]
setEvBind
  ev = cobox_aMa
  tm  = CO Sym cobox_a105
rewriteEqEvidence
  [W] cobox_aMa :: [Char] ~ t_aM7
  String
  [Char]
  Sym cobox_a105
canEqTyVar2
  t_aM7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a105 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_a105 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_a106 :: Char ~ Char
setEvBind
  ev = cobox_a105
  tm  = CO [cobox_a106]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a106 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a106
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMb :: [Char]
                                ~ t_aM8 [" a type equality [Char]
                                                           ~
                                                           t_aM8 " HTML3.hs:111:178-186] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMb :: [Char]
                                 ~ t_aM8 [" a type equality [Char]
                                                            ~
                                                            t_aM8 " HTML3.hs:111:178-186] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMb :: [Char] ~ t_aM8 [" a type equality [Char]
                                                     ~
                                                     t_aM8 " HTML3.hs:111:178-186] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aM8
can_eq_nc
  [W] cobox_aMb :: [Char] ~ t_aM8
  [Char]
  [Char]
  t_aM8
  t_aM8
canEqTyVar
  t_aM8
  [Char]
  Is-swapped
Following bound tyvar t_aM8 = String
newWantedEvVar/cache miss [W] cobox_a107 :: String ~ [Char]
setEvBind
  ev = cobox_aMb
  tm  = CO Sym cobox_a107
rewriteEqEvidence
  [W] cobox_aMb :: [Char] ~ t_aM8
  String
  [Char]
  Sym cobox_a107
canEqTyVar2
  t_aM8
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a107 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_a107 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_a108 :: Char ~ Char
setEvBind
  ev = cobox_a107
  tm  = CO [cobox_a108]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a108 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a108
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMd :: [t_aMc]
                                ~ t_aCb [" a type equality [t_aMc]
                                                           ~
                                                           t_aCb " HTML3.hs:111:190-203] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMd :: [t_aMc]
                                 ~ t_aCb [" a type equality [t_aMc]
                                                            ~
                                                            t_aCb " HTML3.hs:111:190-203] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMd :: [t_aMc] ~ t_aCb [" a type equality [t_aMc]
                                                      ~
                                                      t_aCb " HTML3.hs:111:190-203] (CNonCanonical)
canEvNC:eq
  [t_aMc]
  t_aCb
can_eq_nc
  [W] cobox_aMd :: [t_aMc] ~ t_aCb
  [t_aMc]
  [t_aMc]
  t_aCb
  t_aCb
canEqTyVar
  t_aCb
  [t_aMc]
  Is-swapped
Following bound tyvar t_aCb = [HTML]
newWantedEvVar/cache miss [W] cobox_a109 :: [HTML] ~ [t_aMc]
setEvBind
  ev = cobox_aMd
  tm  = CO Sym cobox_a109
rewriteEqEvidence
  [W] cobox_aMd :: [t_aMc] ~ t_aCb
  [HTML]
  [t_aMc]
  Sym cobox_a109
canEqTyVar2
  t_aCb
  [t_aMc]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_a109 :: [HTML] ~ [t_aMc]
  [HTML]
  [HTML]
  [t_aMc]
  [t_aMc]
newWantedEvVar/cache miss [W] cobox_a10a :: HTML ~ t_aMc
setEvBind
  ev = cobox_a109
  tm  = CO [cobox_a10a]_N
canEvNC:eq
  HTML
  t_aMc
can_eq_nc
  [W] cobox_a10a :: HTML ~ t_aMc
  HTML
  HTML
  t_aMc
  t_aMc
canEqTyVar
  t_aMc
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a10b :: t_aMc ~ HTML
setEvBind
  ev = cobox_a10a
  tm  = CO Sym cobox_a10b
rewriteEqEvidence
  [W] cobox_a10a :: HTML ~ t_aMc
  t_aMc
  HTML
  Sym cobox_a10b
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10b :: t_aMc
                                  ~ HTML [" a type equality [t_aMc]
                                                            ~
                                                            t_aCb " HTML3.hs:111:190-203] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMc := HTML
  Coercion: t_aMc ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMc := HTML
setEvBind
  ev = cobox_a10b
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aMc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
403[<C:0,F:0>] [W] cobox_a10b :: t_aMc ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMe :: t_aC7
                                ~ t_aMc [" a type equality t_aC7
                                                           ~
                                                           t_aMc " HTML3.hs:111:191-202] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMe :: t_aC7
                                 ~ t_aMc [" a type equality t_aC7
                                                            ~
                                                            t_aMc " HTML3.hs:111:191-202] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMe :: t_aC7 ~ t_aMc [" a type equality t_aC7
                                                    ~
                                                    t_aMc " HTML3.hs:111:191-202] (CNonCanonical)
canEvNC:eq
  t_aC7
  t_aMc
can_eq_nc
  [W] cobox_aMe :: t_aC7 ~ t_aMc
  t_aC7
  t_aC7
  t_aMc
  t_aMc
canEqTyVar
  t_aC7
  t_aMc
  Not-swapped
Following bound tyvar t_aC7 = HTML
canEqTyVar2
  t_aC7
  t_aMc
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aMe :: HTML ~ t_aMc
  HTML
  HTML
  t_aMc
  t_aMc
canEqTyVar
  t_aMc
  HTML
  Is-swapped
Following bound tyvar t_aMc = HTML
newWantedEvVar/cache miss [W] cobox_a10c :: HTML ~ HTML
setEvBind
  ev = cobox_aMe
  tm  = CO Sym cobox_a10c
rewriteEqEvidence
  [W] cobox_aMe :: HTML ~ t_aMc
  HTML
  HTML
  Sym cobox_a10c
canEqTyVar2
  t_aMc
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a10c :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a10c
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMf :: [Char]
                                ~ t_aC6 [" a type equality [Char]
                                                           ~
                                                           t_aC6 " HTML3.hs:111:196-202] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMf :: [Char]
                                 ~ t_aC6 [" a type equality [Char]
                                                            ~
                                                            t_aC6 " HTML3.hs:111:196-202] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMf :: [Char] ~ t_aC6 [" a type equality [Char]
                                                     ~
                                                     t_aC6 " HTML3.hs:111:196-202] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aC6
can_eq_nc
  [W] cobox_aMf :: [Char] ~ t_aC6
  [Char]
  [Char]
  t_aC6
  t_aC6
canEqTyVar
  t_aC6
  [Char]
  Is-swapped
Following bound tyvar t_aC6 = String
newWantedEvVar/cache miss [W] cobox_a10d :: String ~ [Char]
setEvBind
  ev = cobox_aMf
  tm  = CO Sym cobox_a10d
rewriteEqEvidence
  [W] cobox_aMf :: [Char] ~ t_aC6
  String
  [Char]
  Sym cobox_a10d
canEqTyVar2
  t_aC6
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a10d :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_a10d :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_a10e :: Char ~ Char
setEvBind
  ev = cobox_a10d
  tm  = CO [cobox_a10e]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a10e :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a10e
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMg :: t_aC7
                                ~ t_aM2 [" a type equality t_aC7
                                                           ~
                                                           t_aM2 " HTML3.hs:111:206-277] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMg :: t_aC7
                                 ~ t_aM2 [" a type equality t_aC7
                                                            ~
                                                            t_aM2 " HTML3.hs:111:206-277] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMg :: t_aC7 ~ t_aM2 [" a type equality t_aC7
                                                    ~
                                                    t_aM2 " HTML3.hs:111:206-277] (CNonCanonical)
canEvNC:eq
  t_aC7
  t_aM2
can_eq_nc
  [W] cobox_aMg :: t_aC7 ~ t_aM2
  t_aC7
  t_aC7
  t_aM2
  t_aM2
canEqTyVar
  t_aC7
  t_aM2
  Not-swapped
Following bound tyvar t_aC7 = HTML
canEqTyVar2
  t_aC7
  t_aM2
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aMg :: HTML ~ t_aM2
  HTML
  HTML
  t_aM2
  t_aM2
canEqTyVar
  t_aM2
  HTML
  Is-swapped
Following bound tyvar t_aM2 = HTML
newWantedEvVar/cache miss [W] cobox_a10f :: HTML ~ HTML
setEvBind
  ev = cobox_aMg
  tm  = CO Sym cobox_a10f
rewriteEqEvidence
  [W] cobox_aMg :: HTML ~ t_aM2
  HTML
  HTML
  Sym cobox_a10f
canEqTyVar2
  t_aM2
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a10f :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a10f
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMh :: [Char]
                                ~ t_aC6 [" a type equality [Char]
                                                           ~
                                                           t_aC6 " HTML3.hs:111:211-277] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMh :: [Char]
                                 ~ t_aC6 [" a type equality [Char]
                                                            ~
                                                            t_aC6 " HTML3.hs:111:211-277] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMh :: [Char] ~ t_aC6 [" a type equality [Char]
                                                     ~
                                                     t_aC6 " HTML3.hs:111:211-277] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aC6
can_eq_nc
  [W] cobox_aMh :: [Char] ~ t_aC6
  [Char]
  [Char]
  t_aC6
  t_aC6
canEqTyVar
  t_aC6
  [Char]
  Is-swapped
Following bound tyvar t_aC6 = String
newWantedEvVar/cache miss [W] cobox_a10g :: String ~ [Char]
setEvBind
  ev = cobox_aMh
  tm  = CO Sym cobox_a10g
rewriteEqEvidence
  [W] cobox_aMh :: [Char] ~ t_aC6
  String
  [Char]
  Sym cobox_a10g
canEqTyVar2
  t_aC6
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a10g :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_a10g :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_a10h :: Char ~ Char
setEvBind
  ev = cobox_a10g
  tm  = CO [cobox_a10h]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a10h :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a10h
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMj :: [t_aMi]
                                ~ t_aLK [" a type equality [t_aMi]
                                                           ~
                                                           t_aLK " HTML3.hs:111:280-342] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMj :: [t_aMi]
                                 ~ t_aLK [" a type equality [t_aMi]
                                                            ~
                                                            t_aLK " HTML3.hs:111:280-342] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMj :: [t_aMi] ~ t_aLK [" a type equality [t_aMi]
                                                      ~
                                                      t_aLK " HTML3.hs:111:280-342] (CNonCanonical)
canEvNC:eq
  [t_aMi]
  t_aLK
can_eq_nc
  [W] cobox_aMj :: [t_aMi] ~ t_aLK
  [t_aMi]
  [t_aMi]
  t_aLK
  t_aLK
canEqTyVar
  t_aLK
  [t_aMi]
  Is-swapped
Following bound tyvar t_aLK = [HTML]
newWantedEvVar/cache miss [W] cobox_a10i :: [HTML] ~ [t_aMi]
setEvBind
  ev = cobox_aMj
  tm  = CO Sym cobox_a10i
rewriteEqEvidence
  [W] cobox_aMj :: [t_aMi] ~ t_aLK
  [HTML]
  [t_aMi]
  Sym cobox_a10i
canEqTyVar2
  t_aLK
  [t_aMi]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_a10i :: [HTML] ~ [t_aMi]
  [HTML]
  [HTML]
  [t_aMi]
  [t_aMi]
newWantedEvVar/cache miss [W] cobox_a10j :: HTML ~ t_aMi
setEvBind
  ev = cobox_a10i
  tm  = CO [cobox_a10j]_N
canEvNC:eq
  HTML
  t_aMi
can_eq_nc
  [W] cobox_a10j :: HTML ~ t_aMi
  HTML
  HTML
  t_aMi
  t_aMi
canEqTyVar
  t_aMi
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a10k :: t_aMi ~ HTML
setEvBind
  ev = cobox_a10j
  tm  = CO Sym cobox_a10k
rewriteEqEvidence
  [W] cobox_a10j :: HTML ~ t_aMi
  t_aMi
  HTML
  Sym cobox_a10k
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10k :: t_aMi
                                  ~ HTML [" a type equality [t_aMi]
                                                            ~
                                                            t_aLK " HTML3.hs:111:280-342] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMi := HTML
  Coercion: t_aMi ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMi := HTML
setEvBind
  ev = cobox_a10k
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aMi
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
408[<C:0,F:0>] [W] cobox_a10k :: t_aMi ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMk :: t_aCc
                                ~ t_aMi [" a type equality t_aCc
                                                           ~
                                                           t_aMi " HTML3.hs:111:281-321] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMk :: t_aCc
                                 ~ t_aMi [" a type equality t_aCc
                                                            ~
                                                            t_aMi " HTML3.hs:111:281-321] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMk :: t_aCc ~ t_aMi [" a type equality t_aCc
                                                    ~
                                                    t_aMi " HTML3.hs:111:281-321] (CNonCanonical)
canEvNC:eq
  t_aCc
  t_aMi
can_eq_nc
  [W] cobox_aMk :: t_aCc ~ t_aMi
  t_aCc
  t_aCc
  t_aMi
  t_aMi
canEqTyVar
  t_aCc
  t_aMi
  Not-swapped
Following bound tyvar t_aCc = HTML
canEqTyVar2
  t_aCc
  t_aMi
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aMk :: HTML ~ t_aMi
  HTML
  HTML
  t_aMi
  t_aMi
canEqTyVar
  t_aMi
  HTML
  Is-swapped
Following bound tyvar t_aMi = HTML
newWantedEvVar/cache miss [W] cobox_a10l :: HTML ~ HTML
setEvBind
  ev = cobox_aMk
  tm  = CO Sym cobox_a10l
rewriteEqEvidence
  [W] cobox_aMk :: HTML ~ t_aMi
  HTML
  HTML
  Sym cobox_a10l
canEqTyVar2
  t_aMi
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a10l :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a10l
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMm :: [t_aMl]
                                ~ t_aCa [" a type equality [t_aMl]
                                                           ~
                                                           t_aCa " HTML3.hs:111:286-306] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMm :: [t_aMl]
                                 ~ t_aCa [" a type equality [t_aMl]
                                                            ~
                                                            t_aCa " HTML3.hs:111:286-306] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMm :: [t_aMl] ~ t_aCa [" a type equality [t_aMl]
                                                      ~
                                                      t_aCa " HTML3.hs:111:286-306] (CNonCanonical)
canEvNC:eq
  [t_aMl]
  t_aCa
can_eq_nc
  [W] cobox_aMm :: [t_aMl] ~ t_aCa
  [t_aMl]
  [t_aMl]
  t_aCa
  t_aCa
canEqTyVar
  t_aCa
  [t_aMl]
  Is-swapped
Following bound tyvar t_aCa = [Attribute]
newWantedEvVar/cache miss [W] cobox_a10m :: [Attribute] ~ [t_aMl]
setEvBind
  ev = cobox_aMm
  tm  = CO Sym cobox_a10m
rewriteEqEvidence
  [W] cobox_aMm :: [t_aMl] ~ t_aCa
  [Attribute]
  [t_aMl]
  Sym cobox_a10m
canEqTyVar2
  t_aCa
  [t_aMl]
  Is-swapped
  [Attribute]
  <[Attribute]>_N
can_eq_nc
  [W] cobox_a10m :: [Attribute] ~ [t_aMl]
  [Attribute]
  [Attribute]
  [t_aMl]
  [t_aMl]
newWantedEvVar/cache miss [W] cobox_a10n :: Attribute ~ t_aMl
setEvBind
  ev = cobox_a10m
  tm  = CO [cobox_a10n]_N
canEvNC:eq
  Attribute
  t_aMl
can_eq_nc
  [W] cobox_a10n :: Attribute ~ t_aMl
  Attribute
  Attribute
  t_aMl
  t_aMl
can_eq_nc
  [W] cobox_a10n :: Attribute ~ t_aMl
  (String, String)
  Attribute
  t_aMl
  t_aMl
canEqTyVar
  t_aMl
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a10o :: t_aMl ~ Attribute
setEvBind
  ev = cobox_a10n
  tm  = CO Sym cobox_a10o
rewriteEqEvidence
  [W] cobox_a10n :: Attribute ~ t_aMl
  t_aMl
  Attribute
  Sym cobox_a10o
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10o :: t_aMl
                                  ~ Attribute [" a type equality [t_aMl]
                                                                 ~
                                                                 t_aCa " HTML3.hs:111:286-306] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMl := Attribute
  Coercion: t_aMl ~ Attribute
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMl := Attribute
setEvBind
  ev = cobox_a10o
  tm  = CO <Attribute>_N
kickOutRewritable
  tv =  t_aMl
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
410[<C:0,F:0>] [W] cobox_a10o :: t_aMl
                                 ~ Attribute: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMp :: (t_aMn, t_aMo)
                                ~ t_aMl [" a type equality (t_aMn, t_aMo)
                                                           ~
                                                           t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMp :: (t_aMn, t_aMo)
                                 ~ t_aMl [" a type equality (t_aMn, t_aMo)
                                                            ~
                                                            t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMp :: (t_aMn, t_aMo) ~ t_aMl [" a type equality (t_aMn,
                                                              t_aMo)
                                                             ~
                                                             t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
canEvNC:eq
  (t_aMn, t_aMo)
  t_aMl
can_eq_nc
  [W] cobox_aMp :: (t_aMn, t_aMo) ~ t_aMl
  (t_aMn, t_aMo)
  (t_aMn, t_aMo)
  t_aMl
  t_aMl
canEqTyVar
  t_aMl
  (t_aMn, t_aMo)
  Is-swapped
Following bound tyvar t_aMl = Attribute
newWantedEvVar/cache miss
  [W] cobox_a10p :: Attribute ~ (t_aMn, t_aMo)
setEvBind
  ev = cobox_aMp
  tm  = CO Sym cobox_a10p
rewriteEqEvidence
  [W] cobox_aMp :: (t_aMn, t_aMo) ~ t_aMl
  Attribute
  (t_aMn, t_aMo)
  Sym cobox_a10p
canEqTyVar2
  t_aMl
  (t_aMn, t_aMo)
  Is-swapped
  Attribute
  <Attribute>_N
can_eq_nc
  [W] cobox_a10p :: Attribute ~ (t_aMn, t_aMo)
  Attribute
  Attribute
  (t_aMn, t_aMo)
  (t_aMn, t_aMo)
can_eq_nc
  [W] cobox_a10p :: Attribute ~ (t_aMn, t_aMo)
  (String, String)
  Attribute
  (t_aMn, t_aMo)
  (t_aMn, t_aMo)
newWantedEvVar/cache miss [W] cobox_a10q :: String ~ t_aMn
newWantedEvVar/cache miss [W] cobox_a10r :: String ~ t_aMo
setEvBind
  ev = cobox_a10p
  tm  = CO (cobox_a10q, cobox_a10r)_N
canEvNC:eq
  String
  t_aMn
can_eq_nc
  [W] cobox_a10q :: String ~ t_aMn
  String
  String
  t_aMn
  t_aMn
can_eq_nc
  [W] cobox_a10q :: String ~ t_aMn
  [Char]
  String
  t_aMn
  t_aMn
canEqTyVar
  t_aMn
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a10s :: t_aMn ~ String
setEvBind
  ev = cobox_a10q
  tm  = CO Sym cobox_a10s
rewriteEqEvidence
  [W] cobox_a10q :: String ~ t_aMn
  t_aMn
  String
  Sym cobox_a10s
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10s :: t_aMn
                                  ~ String [" a type equality (t_aMn, t_aMo)
                                                              ~
                                                              t_aMl " HTML3.hs:111:287-305] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMn := String
  Coercion: t_aMn ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMn := String
setEvBind
  ev = cobox_a10s
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aMn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
411[<C:0,F:0>] [W] cobox_a10s :: t_aMn
                                 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a10r :: String
                                 ~ t_aMo [" a type equality (t_aMn, t_aMo)
                                                            ~
                                                            t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a10r :: String
                                  ~ t_aMo [" a type equality (t_aMn, t_aMo)
                                                             ~
                                                             t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a10r :: String ~ t_aMo [" a type equality (t_aMn, t_aMo)
                                                      ~
                                                      t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
canEvNC:eq
  String
  t_aMo
can_eq_nc
  [W] cobox_a10r :: String ~ t_aMo
  String
  String
  t_aMo
  t_aMo
can_eq_nc
  [W] cobox_a10r :: String ~ t_aMo
  [Char]
  String
  t_aMo
  t_aMo
canEqTyVar
  t_aMo
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a10t :: t_aMo ~ String
setEvBind
  ev = cobox_a10r
  tm  = CO Sym cobox_a10t
rewriteEqEvidence
  [W] cobox_a10r :: String ~ t_aMo
  t_aMo
  String
  Sym cobox_a10t
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10t :: t_aMo
                                  ~ String [" a type equality (t_aMn, t_aMo)
                                                              ~
                                                              t_aMl " HTML3.hs:111:287-305] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMo := String
  Coercion: t_aMo ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMo := String
setEvBind
  ev = cobox_a10t
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aMo
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
412[<C:0,F:0>] [W] cobox_a10t :: t_aMo
                                 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMq :: [Char]
                                ~ t_aMn [" a type equality [Char]
                                                           ~
                                                           t_aMn " HTML3.hs:111:288-294] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMq :: [Char]
                                 ~ t_aMn [" a type equality [Char]
                                                            ~
                                                            t_aMn " HTML3.hs:111:288-294] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMq :: [Char] ~ t_aMn [" a type equality [Char]
                                                     ~
                                                     t_aMn " HTML3.hs:111:288-294] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aMn
can_eq_nc
  [W] cobox_aMq :: [Char] ~ t_aMn
  [Char]
  [Char]
  t_aMn
  t_aMn
canEqTyVar
  t_aMn
  [Char]
  Is-swapped
Following bound tyvar t_aMn = String
newWantedEvVar/cache miss [W] cobox_a10u :: String ~ [Char]
setEvBind
  ev = cobox_aMq
  tm  = CO Sym cobox_a10u
rewriteEqEvidence
  [W] cobox_aMq :: [Char] ~ t_aMn
  String
  [Char]
  Sym cobox_a10u
canEqTyVar2
  t_aMn
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a10u :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_a10u :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_a10v :: Char ~ Char
setEvBind
  ev = cobox_a10u
  tm  = CO [cobox_a10v]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a10v :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a10v
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMr :: [Char]
                                ~ t_aMo [" a type equality [Char]
                                                           ~
                                                           t_aMo " HTML3.hs:111:296-304] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMr :: [Char]
                                 ~ t_aMo [" a type equality [Char]
                                                            ~
                                                            t_aMo " HTML3.hs:111:296-304] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMr :: [Char] ~ t_aMo [" a type equality [Char]
                                                     ~
                                                     t_aMo " HTML3.hs:111:296-304] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aMo
can_eq_nc
  [W] cobox_aMr :: [Char] ~ t_aMo
  [Char]
  [Char]
  t_aMo
  t_aMo
canEqTyVar
  t_aMo
  [Char]
  Is-swapped
Following bound tyvar t_aMo = String
newWantedEvVar/cache miss [W] cobox_a10w :: String ~ [Char]
setEvBind
  ev = cobox_aMr
  tm  = CO Sym cobox_a10w
rewriteEqEvidence
  [W] cobox_aMr :: [Char] ~ t_aMo
  String
  [Char]
  Sym cobox_a10w
canEqTyVar2
  t_aMo
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a10w :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_a10w :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_a10x :: Char ~ Char
setEvBind
  ev = cobox_a10w
  tm  = CO [cobox_a10x]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a10x :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a10x
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMt :: [t_aMs]
                                ~ t_aCb [" a type equality [t_aMs]
                                                           ~
                                                           t_aCb " HTML3.hs:111:308-321] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMt :: [t_aMs]
                                 ~ t_aCb [" a type equality [t_aMs]
                                                            ~
                                                            t_aCb " HTML3.hs:111:308-321] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMt :: [t_aMs] ~ t_aCb [" a type equality [t_aMs]
                                                      ~
                                                      t_aCb " HTML3.hs:111:308-321] (CNonCanonical)
canEvNC:eq
  [t_aMs]
  t_aCb
can_eq_nc
  [W] cobox_aMt :: [t_aMs] ~ t_aCb
  [t_aMs]
  [t_aMs]
  t_aCb
  t_aCb
canEqTyVar
  t_aCb
  [t_aMs]
  Is-swapped
Following bound tyvar t_aCb = [HTML]
newWantedEvVar/cache miss [W] cobox_a10y :: [HTML] ~ [t_aMs]
setEvBind
  ev = cobox_aMt
  tm  = CO Sym cobox_a10y
rewriteEqEvidence
  [W] cobox_aMt :: [t_aMs] ~ t_aCb
  [HTML]
  [t_aMs]
  Sym cobox_a10y
canEqTyVar2
  t_aCb
  [t_aMs]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_a10y :: [HTML] ~ [t_aMs]
  [HTML]
  [HTML]
  [t_aMs]
  [t_aMs]
newWantedEvVar/cache miss [W] cobox_a10z :: HTML ~ t_aMs
setEvBind
  ev = cobox_a10y
  tm  = CO [cobox_a10z]_N
canEvNC:eq
  HTML
  t_aMs
can_eq_nc
  [W] cobox_a10z :: HTML ~ t_aMs
  HTML
  HTML
  t_aMs
  t_aMs
canEqTyVar
  t_aMs
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a10A :: t_aMs ~ HTML
setEvBind
  ev = cobox_a10z
  tm  = CO Sym cobox_a10A
rewriteEqEvidence
  [W] cobox_a10z :: HTML ~ t_aMs
  t_aMs
  HTML
  Sym cobox_a10A
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10A :: t_aMs
                                  ~ HTML [" a type equality [t_aMs]
                                                            ~
                                                            t_aCb " HTML3.hs:111:308-321] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMs := HTML
  Coercion: t_aMs ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMs := HTML
setEvBind
  ev = cobox_a10A
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aMs
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
415[<C:0,F:0>] [W] cobox_a10A :: t_aMs ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMu :: t_aC7
                                ~ t_aMs [" a type equality t_aC7
                                                           ~
                                                           t_aMs " HTML3.hs:111:309-320] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMu :: t_aC7
                                 ~ t_aMs [" a type equality t_aC7
                                                            ~
                                                            t_aMs " HTML3.hs:111:309-320] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMu :: t_aC7 ~ t_aMs [" a type equality t_aC7
                                                    ~
                                                    t_aMs " HTML3.hs:111:309-320] (CNonCanonical)
canEvNC:eq
  t_aC7
  t_aMs
can_eq_nc
  [W] cobox_aMu :: t_aC7 ~ t_aMs
  t_aC7
  t_aC7
  t_aMs
  t_aMs
canEqTyVar
  t_aC7
  t_aMs
  Not-swapped
Following bound tyvar t_aC7 = HTML
canEqTyVar2
  t_aC7
  t_aMs
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aMu :: HTML ~ t_aMs
  HTML
  HTML
  t_aMs
  t_aMs
canEqTyVar
  t_aMs
  HTML
  Is-swapped
Following bound tyvar t_aMs = HTML
newWantedEvVar/cache miss [W] cobox_a10B :: HTML ~ HTML
setEvBind
  ev = cobox_aMu
  tm  = CO Sym cobox_a10B
rewriteEqEvidence
  [W] cobox_aMu :: HTML ~ t_aMs
  HTML
  HTML
  Sym cobox_a10B
canEqTyVar2
  t_aMs
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a10B :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a10B
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMv :: [Char]
                                ~ t_aC6 [" a type equality [Char]
                                                           ~
                                                           t_aC6 " HTML3.hs:111:314-320] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMv :: [Char]
                                 ~ t_aC6 [" a type equality [Char]
                                                            ~
                                                            t_aC6 " HTML3.hs:111:314-320] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMv :: [Char] ~ t_aC6 [" a type equality [Char]
                                                     ~
                                                     t_aC6 " HTML3.hs:111:314-320] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aC6
can_eq_nc
  [W] cobox_aMv :: [Char] ~ t_aC6
  [Char]
  [Char]
  t_aC6
  t_aC6
canEqTyVar
  t_aC6
  [Char]
  Is-swapped
Following bound tyvar t_aC6 = String
newWantedEvVar/cache miss [W] cobox_a10C :: String ~ [Char]
setEvBind
  ev = cobox_aMv
  tm  = CO Sym cobox_a10C
rewriteEqEvidence
  [W] cobox_aMv :: [Char] ~ t_aC6
  String
  [Char]
  Sym cobox_a10C
canEqTyVar2
  t_aC6
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a10C :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_a10C :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_a10D :: Char ~ Char
setEvBind
  ev = cobox_a10C
  tm  = CO [cobox_a10D]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a10D :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a10D
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMw :: t_aC7
                                ~ t_aMi [" a type equality t_aC7
                                                           ~
                                                           t_aMi " HTML3.hs:111:324-341] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMw :: t_aC7
                                 ~ t_aMi [" a type equality t_aC7
                                                            ~
                                                            t_aMi " HTML3.hs:111:324-341] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMw :: t_aC7 ~ t_aMi [" a type equality t_aC7
                                                    ~
                                                    t_aMi " HTML3.hs:111:324-341] (CNonCanonical)
canEvNC:eq
  t_aC7
  t_aMi
can_eq_nc
  [W] cobox_aMw :: t_aC7 ~ t_aMi
  t_aC7
  t_aC7
  t_aMi
  t_aMi
canEqTyVar
  t_aC7
  t_aMi
  Not-swapped
Following bound tyvar t_aC7 = HTML
canEqTyVar2
  t_aC7
  t_aMi
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aMw :: HTML ~ t_aMi
  HTML
  HTML
  t_aMi
  t_aMi
canEqTyVar
  t_aMi
  HTML
  Is-swapped
Following bound tyvar t_aMi = HTML
newWantedEvVar/cache miss [W] cobox_a10E :: HTML ~ HTML
setEvBind
  ev = cobox_aMw
  tm  = CO Sym cobox_a10E
rewriteEqEvidence
  [W] cobox_aMw :: HTML ~ t_aMi
  HTML
  HTML
  Sym cobox_a10E
canEqTyVar2
  t_aMi
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a10E :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a10E
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMx :: [Char]
                                ~ t_aC6 [" a type equality [Char]
                                                           ~
                                                           t_aC6 " HTML3.hs:111:329-341] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMx :: [Char]
                                 ~ t_aC6 [" a type equality [Char]
                                                            ~
                                                            t_aC6 " HTML3.hs:111:329-341] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMx :: [Char] ~ t_aC6 [" a type equality [Char]
                                                     ~
                                                     t_aC6 " HTML3.hs:111:329-341] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aC6
can_eq_nc
  [W] cobox_aMx :: [Char] ~ t_aC6
  [Char]
  [Char]
  t_aC6
  t_aC6
canEqTyVar
  t_aC6
  [Char]
  Is-swapped
Following bound tyvar t_aC6 = String
newWantedEvVar/cache miss [W] cobox_a10F :: String ~ [Char]
setEvBind
  ev = cobox_aMx
  tm  = CO Sym cobox_a10F
rewriteEqEvidence
  [W] cobox_aMx :: [Char] ~ t_aC6
  String
  [Char]
  Sym cobox_a10F
canEqTyVar2
  t_aC6
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a10F :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_a10F :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_a10G :: Char ~ Char
setEvBind
  ev = cobox_a10F
  tm  = CO [cobox_a10G]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a10G :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a10G
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMy :: t_aCG
                                ~ t_aLC [" a type equality t_aCG
                                                           ~
                                                           t_aLC " HTML3.hs:112:41-109] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMy :: t_aCG
                                 ~ t_aLC [" a type equality t_aCG
                                                            ~
                                                            t_aLC " HTML3.hs:112:41-109] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMy :: t_aCG ~ t_aLC [" a type equality t_aCG
                                                    ~
                                                    t_aLC " HTML3.hs:112:41-109] (CNonCanonical)
canEvNC:eq
  t_aCG
  t_aLC
can_eq_nc
  [W] cobox_aMy :: t_aCG ~ t_aLC
  t_aCG
  t_aCG
  t_aLC
  t_aLC
canEqTyVar
  t_aCG
  t_aLC
  Not-swapped
Following bound tyvar t_aCG = HTML
canEqTyVar2
  t_aCG
  t_aLC
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aMy :: HTML ~ t_aLC
  HTML
  HTML
  t_aLC
  t_aLC
canEqTyVar
  t_aLC
  HTML
  Is-swapped
Following bound tyvar t_aLC = HTML
newWantedEvVar/cache miss [W] cobox_a10H :: HTML ~ HTML
setEvBind
  ev = cobox_aMy
  tm  = CO Sym cobox_a10H
rewriteEqEvidence
  [W] cobox_aMy :: HTML ~ t_aLC
  HTML
  HTML
  Sym cobox_a10H
canEqTyVar2
  t_aLC
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a10H :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a10H
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMA :: [t_aMz]
                                ~ t_aCF [" a type equality [t_aMz]
                                                           ~
                                                           t_aCF " HTML3.hs:112:52-109] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMA :: [t_aMz]
                                 ~ t_aCF [" a type equality [t_aMz]
                                                            ~
                                                            t_aCF " HTML3.hs:112:52-109] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMA :: [t_aMz] ~ t_aCF [" a type equality [t_aMz]
                                                      ~
                                                      t_aCF " HTML3.hs:112:52-109] (CNonCanonical)
canEvNC:eq
  [t_aMz]
  t_aCF
can_eq_nc
  [W] cobox_aMA :: [t_aMz] ~ t_aCF
  [t_aMz]
  [t_aMz]
  t_aCF
  t_aCF
canEqTyVar
  t_aCF
  [t_aMz]
  Is-swapped
Following bound tyvar t_aCF = [[(Int, Int, Int)]]
newWantedEvVar/cache miss
  [W] cobox_a10I :: [[(Int, Int, Int)]] ~ [t_aMz]
setEvBind
  ev = cobox_aMA
  tm  = CO Sym cobox_a10I
rewriteEqEvidence
  [W] cobox_aMA :: [t_aMz] ~ t_aCF
  [[(Int, Int, Int)]]
  [t_aMz]
  Sym cobox_a10I
canEqTyVar2
  t_aCF
  [t_aMz]
  Is-swapped
  [[(Int, Int, Int)]]
  <[[(Int, Int, Int)]]>_N
can_eq_nc
  [W] cobox_a10I :: [[(Int, Int, Int)]] ~ [t_aMz]
  [[(Int, Int, Int)]]
  [[(Int, Int, Int)]]
  [t_aMz]
  [t_aMz]
newWantedEvVar/cache miss
  [W] cobox_a10J :: [(Int, Int, Int)] ~ t_aMz
setEvBind
  ev = cobox_a10I
  tm  = CO [cobox_a10J]_N
canEvNC:eq
  [(Int, Int, Int)]
  t_aMz
can_eq_nc
  [W] cobox_a10J :: [(Int, Int, Int)] ~ t_aMz
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  t_aMz
  t_aMz
canEqTyVar
  t_aMz
  [(Int, Int, Int)]
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_a10K :: t_aMz ~ [(Int, Int, Int)]
setEvBind
  ev = cobox_a10J
  tm  = CO Sym cobox_a10K
rewriteEqEvidence
  [W] cobox_a10J :: [(Int, Int, Int)] ~ t_aMz
  t_aMz
  [(Int, Int, Int)]
  Sym cobox_a10K
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10K :: t_aMz
                                  ~ [(Int, Int, Int)] [" a type equality [t_aMz]
                                                                         ~
                                                                         t_aCF " HTML3.hs:112:52-109] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMz := [(Int, Int, Int)]
  Coercion: t_aMz ~ [(Int, Int, Int)]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMz := [(Int, Int, Int)]
setEvBind
  ev = cobox_a10K
  tm  = CO <[(Int, Int, Int)]>_N
kickOutRewritable
  tv =  t_aMz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
421[<C:0,F:0>] [W] cobox_a10K :: t_aMz
                                 ~ [(Int, Int, Int)]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMC :: [t_aMB]
                                ~ t_aMz [" a type equality [t_aMB]
                                                           ~
                                                           t_aMz " HTML3.hs:112:53-108] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMC :: [t_aMB]
                                 ~ t_aMz [" a type equality [t_aMB]
                                                            ~
                                                            t_aMz " HTML3.hs:112:53-108] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMC :: [t_aMB] ~ t_aMz [" a type equality [t_aMB]
                                                      ~
                                                      t_aMz " HTML3.hs:112:53-108] (CNonCanonical)
canEvNC:eq
  [t_aMB]
  t_aMz
can_eq_nc
  [W] cobox_aMC :: [t_aMB] ~ t_aMz
  [t_aMB]
  [t_aMB]
  t_aMz
  t_aMz
canEqTyVar
  t_aMz
  [t_aMB]
  Is-swapped
Following bound tyvar t_aMz = [(Int, Int, Int)]
newWantedEvVar/cache miss
  [W] cobox_a10L :: [(Int, Int, Int)] ~ [t_aMB]
setEvBind
  ev = cobox_aMC
  tm  = CO Sym cobox_a10L
rewriteEqEvidence
  [W] cobox_aMC :: [t_aMB] ~ t_aMz
  [(Int, Int, Int)]
  [t_aMB]
  Sym cobox_a10L
canEqTyVar2
  t_aMz
  [t_aMB]
  Is-swapped
  [(Int, Int, Int)]
  <[(Int, Int, Int)]>_N
can_eq_nc
  [W] cobox_a10L :: [(Int, Int, Int)] ~ [t_aMB]
  [(Int, Int, Int)]
  [(Int, Int, Int)]
  [t_aMB]
  [t_aMB]
newWantedEvVar/cache miss [W] cobox_a10M :: (Int, Int, Int) ~ t_aMB
setEvBind
  ev = cobox_a10L
  tm  = CO [cobox_a10M]_N
canEvNC:eq
  (Int, Int, Int)
  t_aMB
can_eq_nc
  [W] cobox_a10M :: (Int, Int, Int) ~ t_aMB
  (Int, Int, Int)
  (Int, Int, Int)
  t_aMB
  t_aMB
canEqTyVar
  t_aMB
  (Int, Int, Int)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a10N :: t_aMB ~ (Int, Int, Int)
setEvBind
  ev = cobox_a10M
  tm  = CO Sym cobox_a10N
rewriteEqEvidence
  [W] cobox_a10M :: (Int, Int, Int) ~ t_aMB
  t_aMB
  (Int, Int, Int)
  Sym cobox_a10N
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10N :: t_aMB
                                  ~ (Int, Int, Int) [" a type equality [t_aMB]
                                                                       ~
                                                                       t_aMz " HTML3.hs:112:53-108] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMB := (Int, Int, Int)
  Coercion: t_aMB ~ (Int, Int, Int)
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMB := (Int, Int, Int)
setEvBind
  ev = cobox_a10N
  tm  = CO <(Int, Int, Int)>_N
kickOutRewritable
  tv =  t_aMB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
422[<C:0,F:0>] [W] cobox_a10N :: t_aMB
                                 ~ (Int, Int, Int): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMG :: (Integer -> a_aME)
                                ~ (Integer -> t_aMD) [" a type equality Integer -> a_aME
                                                                        ~
                                                                        Integer
                                                                        -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMG :: (Integer -> a_aME)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aME
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMG :: (Integer -> a_aME)
                   ~ (Integer -> t_aMD) [" a type equality Integer -> a_aME
                                                           ~
                                                           Integer
                                                           -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
canEvNC:eq
  Integer -> a_aME
  Integer -> t_aMD
can_eq_nc
  [W] cobox_aMG :: (Integer -> a_aME) ~ (Integer -> t_aMD)
  Integer -> a_aME
  Integer -> a_aME
  Integer -> t_aMD
  Integer -> t_aMD
newWantedEvVar/cache miss [W] cobox_a10O :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_a10P :: a_aME ~ t_aMD
setEvBind
  ev = cobox_aMG
  tm  = CO cobox_a10O -> cobox_a10P
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_a10O :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_a10O
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a10P :: a_aME
                                 ~ t_aMD [" a type equality Integer -> a_aME
                                                            ~
                                                            Integer
                                                            -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a10P :: a_aME
                                  ~ t_aMD [" a type equality Integer -> a_aME
                                                             ~
                                                             Integer
                                                             -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a10P :: a_aME ~ t_aMD [" a type equality Integer -> a_aME
                                                     ~
                                                     Integer
                                                     -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
canEvNC:eq
  a_aME
  t_aMD
can_eq_nc
  [W] cobox_a10P :: a_aME ~ t_aMD
  a_aME
  a_aME
  t_aMD
  t_aMD
canEqTyVar
  a_aME
  t_aMD
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10P :: a_aME
                                  ~ t_aMD [" a type equality Integer -> a_aME
                                                             ~
                                                             Integer
                                                             -> t_aMD " HTML3.hs:112:70] (CTyEqCan)
Sneaky unification:
  Unifies: t_aMD := a_aME
  Coercion: t_aMD ~ a_aME
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aMD := a_aME
setEvBind
  ev = cobox_a10P
  tm  = CO <a_aME>_N
kickOutRewritable
  tv =  t_aMD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
424[<C:0,F:0>] [W] cobox_a10P :: a_aME
                                 ~ t_aMD: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMJ :: (Integer -> a_aMH)
                                ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMH
                                                                        ~
                                                                        Integer
                                                                        -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMJ :: (Integer -> a_aMH)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMH
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMJ :: (Integer -> a_aMH)
                   ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMH
                                                           ~
                                                           Integer
                                                           -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
canEvNC:eq
  Integer -> a_aMH
  Integer -> t_aMD
can_eq_nc
  [W] cobox_aMJ :: (Integer -> a_aMH) ~ (Integer -> t_aMD)
  Integer -> a_aMH
  Integer -> a_aMH
  Integer -> t_aMD
  Integer -> t_aMD
newWantedEvVar/cache miss [W] cobox_a10Q :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_a10R :: a_aMH ~ t_aMD
setEvBind
  ev = cobox_aMJ
  tm  = CO cobox_a10Q -> cobox_a10R
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_a10Q :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_a10Q
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a10R :: a_aMH
                                 ~ t_aMD [" a type equality Integer -> a_aMH
                                                            ~
                                                            Integer
                                                            -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a10R :: a_aMH
                                  ~ t_aMD [" a type equality Integer -> a_aMH
                                                             ~
                                                             Integer
                                                             -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a10R :: a_aMH ~ t_aMD [" a type equality Integer -> a_aMH
                                                     ~
                                                     Integer
                                                     -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
canEvNC:eq
  a_aMH
  t_aMD
can_eq_nc
  [W] cobox_a10R :: a_aMH ~ t_aMD
  a_aMH
  a_aMH
  t_aMD
  t_aMD
canEqTyVar
  a_aMH
  t_aMD
  Not-swapped
Following bound tyvar t_aMD = a_aME
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10R :: a_aMH
                                  ~ a_aME [" a type equality Integer -> a_aMH
                                                             ~
                                                             Integer
                                                             -> t_aMD " HTML3.hs:112:72-73] (CTyEqCan)
Sneaky unification:
  Unifies: a_aME := a_aMH
  Coercion: a_aME ~ a_aMH
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aME := a_aMH
setEvBind
  ev = cobox_a10R
  tm  = CO <a_aMH>_N
kickOutRewritable
  tv =  a_aME
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
426[<C:0,F:0>] [W] cobox_a10R :: a_aMH
                                 ~ a_aME: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aMM :: (Integer -> a_aMK)
                                ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMK
                                                                        ~
                                                                        Integer
                                                                        -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aMM :: (Integer -> a_aMK)
                                 ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMK
                                                                         ~
                                                                         Integer
                                                                         -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aMM :: (Integer -> a_aMK)
                   ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMK
                                                           ~
                                                           Integer
                                                           -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
canEvNC:eq
  Integer -> a_aMK
  Integer -> t_aMD
can_eq_nc
  [W] cobox_aMM :: (Integer -> a_aMK) ~ (Integer -> t_aMD)
  Integer -> a_aMK
  Integer -> a_aMK
  Integer -> t_aMD
  Integer -> t_aMD
newWantedEvVar/cache miss [W] cobox_a10S :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_a10T :: a_aMK ~ t_aMD
setEvBind
  ev = cobox_aMM
  tm  = CO cobox_a10S -> cobox_a10T
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_a10S :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_a10S
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a10T :: a_aMK
                                 ~ t_aMD [" a type equality Integer -> a_aMK
                                                            ~
                                                            Integer
                                                            -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a10T :: a_aMK
                                  ~ t_aMD [" a type equality Integer -> a_aMK
                                                             ~
                                                             Integer
                                                             -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a10T :: a_aMK ~ t_aMD [" a type equality Integer -> a_aMK
                                                     ~
                                                     Integer
                                                     -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
canEvNC:eq
  a_aMK
  t_aMD
can_eq_nc
  [W] cobox_a10T :: a_aMK ~ t_aMD
  a_aMK
  a_aMK
  t_aMD
  t_aMD
canEqTyVar
  a_aMK
  t_aMD
  Not-swapped
Following bound tyvar t_aMD = a_aME
Following bound tyvar a_aME = a_aMH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10T :: a_aMK
                                  ~ a_aMH [" a type equality Integer -> a_aMK
                                                             ~
                                                             Integer
                                                             -> t_aMD " HTML3.hs:112:76-78] (CTyEqCan)
Sneaky unification:
  Unifies: a_aMH := a_aMK
  Coercion: a_aMH ~ a_aMK
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aMH := a_aMK
setEvBind
  ev = cobox_a10T
  tm  = CO <a_aMK>_N
kickOutRewritable
  tv =  a_aMH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
428[<C:0,F:0>] [W] cobox_a10T :: a_aMK
                                 ~ a_aMH: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aON :: (Integer -> a_aOL)
                                ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOL
                                                                        ~
                                                                        Integer
                                                                        -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aON :: (Integer -> a_aOL)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOL
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aON :: (Integer -> a_aOL)
                   ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOL
                                                           ~
                                                           Integer
                                                           -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
canEvNC:eq
  Integer -> a_aOL
  Integer -> t_aOK
can_eq_nc
  [W] cobox_aON :: (Integer -> a_aOL) ~ (Integer -> t_aOK)
  Integer -> a_aOL
  Integer -> a_aOL
  Integer -> t_aOK
  Integer -> t_aOK
newWantedEvVar/cache miss [W] cobox_a10U :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_a10V :: a_aOL ~ t_aOK
setEvBind
  ev = cobox_aON
  tm  = CO cobox_a10U -> cobox_a10V
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_a10U :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_a10U
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a10V :: a_aOL
                                 ~ t_aOK [" a type equality Integer -> a_aOL
                                                            ~
                                                            Integer
                                                            -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a10V :: a_aOL
                                  ~ t_aOK [" a type equality Integer -> a_aOL
                                                             ~
                                                             Integer
                                                             -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a10V :: a_aOL ~ t_aOK [" a type equality Integer -> a_aOL
                                                     ~
                                                     Integer
                                                     -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
canEvNC:eq
  a_aOL
  t_aOK
can_eq_nc
  [W] cobox_a10V :: a_aOL ~ t_aOK
  a_aOL
  a_aOL
  t_aOK
  t_aOK
canEqTyVar
  a_aOL
  t_aOK
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10V :: a_aOL
                                  ~ t_aOK [" a type equality Integer -> a_aOL
                                                             ~
                                                             Integer
                                                             -> t_aOK " HTML3.hs:112:88] (CTyEqCan)
Sneaky unification:
  Unifies: t_aOK := a_aOL
  Coercion: t_aOK ~ a_aOL
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aOK := a_aOL
setEvBind
  ev = cobox_a10V
  tm  = CO <a_aOL>_N
kickOutRewritable
  tv =  t_aOK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
430[<C:0,F:0>] [W] cobox_a10V :: a_aOL
                                 ~ t_aOK: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aOQ :: (Integer -> a_aOO)
                                ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOO
                                                                        ~
                                                                        Integer
                                                                        -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aOQ :: (Integer -> a_aOO)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOO
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aOQ :: (Integer -> a_aOO)
                   ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOO
                                                           ~
                                                           Integer
                                                           -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
canEvNC:eq
  Integer -> a_aOO
  Integer -> t_aOK
can_eq_nc
  [W] cobox_aOQ :: (Integer -> a_aOO) ~ (Integer -> t_aOK)
  Integer -> a_aOO
  Integer -> a_aOO
  Integer -> t_aOK
  Integer -> t_aOK
newWantedEvVar/cache miss [W] cobox_a10W :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_a10X :: a_aOO ~ t_aOK
setEvBind
  ev = cobox_aOQ
  tm  = CO cobox_a10W -> cobox_a10X
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_a10W :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_a10W
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a10X :: a_aOO
                                 ~ t_aOK [" a type equality Integer -> a_aOO
                                                            ~
                                                            Integer
                                                            -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a10X :: a_aOO
                                  ~ t_aOK [" a type equality Integer -> a_aOO
                                                             ~
                                                             Integer
                                                             -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a10X :: a_aOO ~ t_aOK [" a type equality Integer -> a_aOO
                                                     ~
                                                     Integer
                                                     -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
canEvNC:eq
  a_aOO
  t_aOK
can_eq_nc
  [W] cobox_a10X :: a_aOO ~ t_aOK
  a_aOO
  a_aOO
  t_aOK
  t_aOK
canEqTyVar
  a_aOO
  t_aOK
  Not-swapped
Following bound tyvar t_aOK = a_aOL
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10X :: a_aOO
                                  ~ a_aOL [" a type equality Integer -> a_aOO
                                                             ~
                                                             Integer
                                                             -> t_aOK " HTML3.hs:112:90-91] (CTyEqCan)
Sneaky unification:
  Unifies: a_aOL := a_aOO
  Coercion: a_aOL ~ a_aOO
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aOL := a_aOO
setEvBind
  ev = cobox_a10X
  tm  = CO <a_aOO>_N
kickOutRewritable
  tv =  a_aOL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
432[<C:0,F:0>] [W] cobox_a10X :: a_aOO
                                 ~ a_aOL: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aOT :: (Integer -> a_aOR)
                                ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOR
                                                                        ~
                                                                        Integer
                                                                        -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aOT :: (Integer -> a_aOR)
                                 ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOR
                                                                         ~
                                                                         Integer
                                                                         -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aOT :: (Integer -> a_aOR)
                   ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOR
                                                           ~
                                                           Integer
                                                           -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
canEvNC:eq
  Integer -> a_aOR
  Integer -> t_aOK
can_eq_nc
  [W] cobox_aOT :: (Integer -> a_aOR) ~ (Integer -> t_aOK)
  Integer -> a_aOR
  Integer -> a_aOR
  Integer -> t_aOK
  Integer -> t_aOK
newWantedEvVar/cache miss [W] cobox_a10Y :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_a10Z :: a_aOR ~ t_aOK
setEvBind
  ev = cobox_aOT
  tm  = CO cobox_a10Y -> cobox_a10Z
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_a10Y :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_a10Y
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a10Z :: a_aOR
                                 ~ t_aOK [" a type equality Integer -> a_aOR
                                                            ~
                                                            Integer
                                                            -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a10Z :: a_aOR
                                  ~ t_aOK [" a type equality Integer -> a_aOR
                                                             ~
                                                             Integer
                                                             -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a10Z :: a_aOR ~ t_aOK [" a type equality Integer -> a_aOR
                                                     ~
                                                     Integer
                                                     -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
canEvNC:eq
  a_aOR
  t_aOK
can_eq_nc
  [W] cobox_a10Z :: a_aOR ~ t_aOK
  a_aOR
  a_aOR
  t_aOK
  t_aOK
canEqTyVar
  a_aOR
  t_aOK
  Not-swapped
Following bound tyvar t_aOK = a_aOL
Following bound tyvar a_aOL = a_aOO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a10Z :: a_aOR
                                  ~ a_aOO [" a type equality Integer -> a_aOR
                                                             ~
                                                             Integer
                                                             -> t_aOK " HTML3.hs:112:94-96] (CTyEqCan)
Sneaky unification:
  Unifies: a_aOO := a_aOR
  Coercion: a_aOO ~ a_aOR
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aOO := a_aOR
setEvBind
  ev = cobox_a10Z
  tm  = CO <a_aOR>_N
kickOutRewritable
  tv =  a_aOO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
434[<C:0,F:0>] [W] cobox_a10Z :: a_aOR
                                 ~ a_aOO: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aOY :: (Integer -> a_aOW)
                                ~ (Integer -> t_aOV) [" a type equality Integer -> a_aOW
                                                                        ~
                                                                        Integer
                                                                        -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aOY :: (Integer -> a_aOW)
                                 ~ (Integer -> t_aOV) [" a type equality Integer -> a_aOW
                                                                         ~
                                                                         Integer
                                                                         -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aOY :: (Integer -> a_aOW)
                   ~ (Integer -> t_aOV) [" a type equality Integer -> a_aOW
                                                           ~
                                                           Integer
                                                           -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
canEvNC:eq
  Integer -> a_aOW
  Integer -> t_aOV
can_eq_nc
  [W] cobox_aOY :: (Integer -> a_aOW) ~ (Integer -> t_aOV)
  Integer -> a_aOW
  Integer -> a_aOW
  Integer -> t_aOV
  Integer -> t_aOV
newWantedEvVar/cache miss [W] cobox_a110 :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_a111 :: a_aOW ~ t_aOV
setEvBind
  ev = cobox_aOY
  tm  = CO cobox_a110 -> cobox_a111
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_a110 :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_a110
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a111 :: a_aOW
                                 ~ t_aOV [" a type equality Integer -> a_aOW
                                                            ~
                                                            Integer
                                                            -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a111 :: a_aOW
                                  ~ t_aOV [" a type equality Integer -> a_aOW
                                                             ~
                                                             Integer
                                                             -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a111 :: a_aOW ~ t_aOV [" a type equality Integer -> a_aOW
                                                     ~
                                                     Integer
                                                     -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
canEvNC:eq
  a_aOW
  t_aOV
can_eq_nc
  [W] cobox_a111 :: a_aOW ~ t_aOV
  a_aOW
  a_aOW
  t_aOV
  t_aOV
canEqTyVar
  a_aOW
  t_aOV
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a111 :: a_aOW
                                  ~ t_aOV [" a type equality Integer -> a_aOW
                                                             ~
                                                             Integer
                                                             -> t_aOV " HTML3.hs:112:106] (CTyEqCan)
Sneaky unification:
  Unifies: t_aOV := a_aOW
  Coercion: t_aOV ~ a_aOW
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aOV := a_aOW
setEvBind
  ev = cobox_a111
  tm  = CO <a_aOW>_N
kickOutRewritable
  tv =  t_aOV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
436[<C:0,F:0>] [W] cobox_a111 :: a_aOW
                                 ~ t_aOV: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1)
                                ~ t_aMB [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                           ~
                                                           t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1)
                                 ~ t_aMB [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                            ~
                                                            t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1)
                   ~ t_aMB [" a type equality (t_aOZ, t_aP0, t_aP1)
                                              ~
                                              t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
canEvNC:eq
  (t_aOZ, t_aP0, t_aP1)
  t_aMB
can_eq_nc
  [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1) ~ t_aMB
  (t_aOZ, t_aP0, t_aP1)
  (t_aOZ, t_aP0, t_aP1)
  t_aMB
  t_aMB
canEqTyVar
  t_aMB
  (t_aOZ, t_aP0, t_aP1)
  Is-swapped
Following bound tyvar t_aMB = (Int, Int, Int)
newWantedEvVar/cache miss
  [W] cobox_a112 :: (Int, Int, Int) ~ (t_aOZ, t_aP0, t_aP1)
setEvBind
  ev = cobox_aP2
  tm  = CO Sym cobox_a112
rewriteEqEvidence
  [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1) ~ t_aMB
  (Int, Int, Int)
  (t_aOZ, t_aP0, t_aP1)
  Sym cobox_a112
canEqTyVar2
  t_aMB
  (t_aOZ, t_aP0, t_aP1)
  Is-swapped
  (Int, Int, Int)
  <(Int, Int, Int)>_N
can_eq_nc
  [W] cobox_a112 :: (Int, Int, Int) ~ (t_aOZ, t_aP0, t_aP1)
  (Int, Int, Int)
  (Int, Int, Int)
  (t_aOZ, t_aP0, t_aP1)
  (t_aOZ, t_aP0, t_aP1)
newWantedEvVar/cache miss [W] cobox_a113 :: Int ~ t_aOZ
newWantedEvVar/cache miss [W] cobox_a114 :: Int ~ t_aP0
newWantedEvVar/cache miss [W] cobox_a115 :: Int ~ t_aP1
setEvBind
  ev = cobox_a112
  tm  = CO (cobox_a113, cobox_a114, cobox_a115)_N
canEvNC:eq
  Int
  t_aOZ
can_eq_nc
  [W] cobox_a113 :: Int ~ t_aOZ
  Int
  Int
  t_aOZ
  t_aOZ
canEqTyVar
  t_aOZ
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a116 :: t_aOZ ~ Int
setEvBind
  ev = cobox_a113
  tm  = CO Sym cobox_a116
rewriteEqEvidence
  [W] cobox_a113 :: Int ~ t_aOZ
  t_aOZ
  Int
  Sym cobox_a116
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a116 :: t_aOZ
                                  ~ Int [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                           ~
                                                           t_aMB " HTML3.hs:112:54-60] (CTyEqCan)
Sneaky unification:
  Unifies: t_aOZ := Int
  Coercion: t_aOZ ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aOZ := Int
setEvBind
  ev = cobox_a116
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aOZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
437[<C:0,F:0>] [W] cobox_a116 :: t_aOZ ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a114 :: Int
                                 ~ t_aP0 [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                            ~
                                                            t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a114 :: Int
                                  ~ t_aP0 [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                             ~
                                                             t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a114 :: Int ~ t_aP0 [" a type equality (t_aOZ,
                                                    t_aP0,
                                                    t_aP1)
                                                   ~
                                                   t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
canEvNC:eq
  Int
  t_aP0
can_eq_nc
  [W] cobox_a114 :: Int ~ t_aP0
  Int
  Int
  t_aP0
  t_aP0
canEqTyVar
  t_aP0
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a117 :: t_aP0 ~ Int
setEvBind
  ev = cobox_a114
  tm  = CO Sym cobox_a117
rewriteEqEvidence
  [W] cobox_a114 :: Int ~ t_aP0
  t_aP0
  Int
  Sym cobox_a117
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a117 :: t_aP0
                                  ~ Int [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                           ~
                                                           t_aMB " HTML3.hs:112:54-60] (CTyEqCan)
Sneaky unification:
  Unifies: t_aP0 := Int
  Coercion: t_aP0 ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aP0 := Int
setEvBind
  ev = cobox_a117
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aP0
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
438[<C:0,F:0>] [W] cobox_a117 :: t_aP0 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a115 :: Int
                                 ~ t_aP1 [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                            ~
                                                            t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a115 :: Int
                                  ~ t_aP1 [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                             ~
                                                             t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a115 :: Int ~ t_aP1 [" a type equality (t_aOZ,
                                                    t_aP0,
                                                    t_aP1)
                                                   ~
                                                   t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
canEvNC:eq
  Int
  t_aP1
can_eq_nc
  [W] cobox_a115 :: Int ~ t_aP1
  Int
  Int
  t_aP1
  t_aP1
canEqTyVar
  t_aP1
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a118 :: t_aP1 ~ Int
setEvBind
  ev = cobox_a115
  tm  = CO Sym cobox_a118
rewriteEqEvidence
  [W] cobox_a115 :: Int ~ t_aP1
  t_aP1
  Int
  Sym cobox_a118
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a118 :: t_aP1
                                  ~ Int [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                           ~
                                                           t_aMB " HTML3.hs:112:54-60] (CTyEqCan)
Sneaky unification:
  Unifies: t_aP1 := Int
  Coercion: t_aP1 ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aP1 := Int
setEvBind
  ev = cobox_a118
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aP1
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
439[<C:0,F:0>] [W] cobox_a118 :: t_aP1 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aP3 :: t_aMD
                                ~ t_aOZ [" a type equality t_aMD
                                                           ~
                                                           t_aOZ " HTML3.hs:112:55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aP3 :: t_aMD
                                 ~ t_aOZ [" a type equality t_aMD
                                                            ~
                                                            t_aOZ " HTML3.hs:112:55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aP3 :: t_aMD ~ t_aOZ [" a type equality t_aMD
                                                    ~
                                                    t_aOZ " HTML3.hs:112:55] (CNonCanonical)
canEvNC:eq
  t_aMD
  t_aOZ
can_eq_nc
  [W] cobox_aP3 :: t_aMD ~ t_aOZ
  t_aMD
  t_aMD
  t_aOZ
  t_aOZ
canEqTyVar
  t_aMD
  t_aOZ
  Not-swapped
Following bound tyvar t_aMD = a_aME
canEqTyVar2
  t_aMD
  t_aOZ
  Not-swapped
  a_aME
  <a_aME>_N
can_eq_nc
  [W] cobox_aP3 :: a_aME ~ t_aOZ
  a_aME
  a_aME
  t_aOZ
  t_aOZ
canEqTyVar
  a_aME
  t_aOZ
  Not-swapped
Following bound tyvar a_aME = a_aMH
canEqTyVar2
  a_aME
  t_aOZ
  Not-swapped
  a_aMH
  <a_aMH>_N
can_eq_nc
  [W] cobox_aP3 :: a_aMH ~ t_aOZ
  a_aMH
  a_aMH
  t_aOZ
  t_aOZ
canEqTyVar
  a_aMH
  t_aOZ
  Not-swapped
Following bound tyvar a_aMH = a_aMK
canEqTyVar2
  a_aMH
  t_aOZ
  Not-swapped
  a_aMK
  <a_aMK>_N
can_eq_nc
  [W] cobox_aP3 :: a_aMK ~ t_aOZ
  a_aMK
  a_aMK
  t_aOZ
  t_aOZ
canEqTyVar
  a_aMK
  t_aOZ
  Not-swapped
Following bound tyvar t_aOZ = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aP3 :: a_aMK ~ Int [" a type equality t_aMD
                                                                ~
                                                                t_aOZ " HTML3.hs:112:55] (CTyEqCan)
Sneaky unification:
  Unifies: a_aMK := Int
  Coercion: a_aMK ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aMK := Int
setEvBind
  ev = cobox_aP3
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aMK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
440[<C:0,F:0>] [W] cobox_aP3 :: a_aMK ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aP4 :: t_aOK
                                ~ t_aP0 [" a type equality t_aOK
                                                           ~
                                                           t_aP0 " HTML3.hs:112:57] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aP4 :: t_aOK
                                 ~ t_aP0 [" a type equality t_aOK
                                                            ~
                                                            t_aP0 " HTML3.hs:112:57] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aP4 :: t_aOK ~ t_aP0 [" a type equality t_aOK
                                                    ~
                                                    t_aP0 " HTML3.hs:112:57] (CNonCanonical)
canEvNC:eq
  t_aOK
  t_aP0
can_eq_nc
  [W] cobox_aP4 :: t_aOK ~ t_aP0
  t_aOK
  t_aOK
  t_aP0
  t_aP0
canEqTyVar
  t_aOK
  t_aP0
  Not-swapped
Following bound tyvar t_aOK = a_aOL
canEqTyVar2
  t_aOK
  t_aP0
  Not-swapped
  a_aOL
  <a_aOL>_N
can_eq_nc
  [W] cobox_aP4 :: a_aOL ~ t_aP0
  a_aOL
  a_aOL
  t_aP0
  t_aP0
canEqTyVar
  a_aOL
  t_aP0
  Not-swapped
Following bound tyvar a_aOL = a_aOO
canEqTyVar2
  a_aOL
  t_aP0
  Not-swapped
  a_aOO
  <a_aOO>_N
can_eq_nc
  [W] cobox_aP4 :: a_aOO ~ t_aP0
  a_aOO
  a_aOO
  t_aP0
  t_aP0
canEqTyVar
  a_aOO
  t_aP0
  Not-swapped
Following bound tyvar a_aOO = a_aOR
canEqTyVar2
  a_aOO
  t_aP0
  Not-swapped
  a_aOR
  <a_aOR>_N
can_eq_nc
  [W] cobox_aP4 :: a_aOR ~ t_aP0
  a_aOR
  a_aOR
  t_aP0
  t_aP0
canEqTyVar
  a_aOR
  t_aP0
  Not-swapped
Following bound tyvar t_aP0 = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aP4 :: a_aOR ~ Int [" a type equality t_aOK
                                                                ~
                                                                t_aP0 " HTML3.hs:112:57] (CTyEqCan)
Sneaky unification:
  Unifies: a_aOR := Int
  Coercion: a_aOR ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aOR := Int
setEvBind
  ev = cobox_aP4
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aOR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
441[<C:0,F:0>] [W] cobox_aP4 :: a_aOR ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aP5 :: t_aOV
                                ~ t_aP1 [" a type equality t_aOV
                                                           ~
                                                           t_aP1 " HTML3.hs:112:59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aP5 :: t_aOV
                                 ~ t_aP1 [" a type equality t_aOV
                                                            ~
                                                            t_aP1 " HTML3.hs:112:59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aP5 :: t_aOV ~ t_aP1 [" a type equality t_aOV
                                                    ~
                                                    t_aP1 " HTML3.hs:112:59] (CNonCanonical)
canEvNC:eq
  t_aOV
  t_aP1
can_eq_nc
  [W] cobox_aP5 :: t_aOV ~ t_aP1
  t_aOV
  t_aOV
  t_aP1
  t_aP1
canEqTyVar
  t_aOV
  t_aP1
  Not-swapped
Following bound tyvar t_aOV = a_aOW
canEqTyVar2
  t_aOV
  t_aP1
  Not-swapped
  a_aOW
  <a_aOW>_N
can_eq_nc
  [W] cobox_aP5 :: a_aOW ~ t_aP1
  a_aOW
  a_aOW
  t_aP1
  t_aP1
canEqTyVar
  a_aOW
  t_aP1
  Not-swapped
Following bound tyvar t_aP1 = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aP5 :: a_aOW ~ Int [" a type equality t_aOV
                                                                ~
                                                                t_aP1 " HTML3.hs:112:59] (CTyEqCan)
Sneaky unification:
  Unifies: a_aOW := Int
  Coercion: a_aOW ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aOW := Int
setEvBind
  ev = cobox_aP5
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aOW
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
442[<C:0,F:0>] [W] cobox_aP5 :: a_aOW ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aP7 :: IO () ~ t_aBW [" a type equality IO
                                                                   ()
                                                                 ~
                                                                 t_aBW " HTML3.hs:115:8-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aP7 :: IO () ~ t_aBW [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_aBW " HTML3.hs:115:8-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aP7 :: IO () ~ t_aBW [" a type equality IO ()
                                                    ~
                                                    t_aBW " HTML3.hs:115:8-35] (CNonCanonical)
canEvNC:eq
  IO ()
  t_aBW
can_eq_nc
  [W] cobox_aP7 :: IO () ~ t_aBW
  IO ()
  IO ()
  t_aBW
  t_aBW
canEqTyVar
  t_aBW
  IO ()
  Is-swapped
Following bound tyvar t_aBW = IO ()
newWantedEvVar/cache miss [W] cobox_a119 :: IO () ~ IO ()
setEvBind
  ev = cobox_aP7
  tm  = CO Sym cobox_a119
rewriteEqEvidence
  [W] cobox_aP7 :: IO () ~ t_aBW
  IO ()
  IO ()
  Sym cobox_a119
canEqTyVar2
  t_aBW
  IO ()
  Is-swapped
  IO ()
  <IO ()>_N
can_eq_nc
  [W] cobox_a119 :: IO () ~ IO ()
  IO ()
  IO ()
  IO ()
  IO ()
newWantedEvVar/cache miss [W] cobox_a11a :: () ~ ()
setEvBind
  ev = cobox_a119
  tm  = CO IO cobox_a11a_N
canEvNC:eq
  ()
  ()
can_eq_nc
  [W] cobox_a11a :: () ~ ()
  ()
  ()
  ()
  ()
setEvBind
  ev = cobox_a11a
  tm  = CO <()>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aP8 :: t_aD4 ~ Doc [" a type equality t_aD4
                                                               ~
                                                               Doc " HTML3.hs:115:16-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aP8 :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                ~
                                                                Doc " HTML3.hs:115:16-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aP8 :: t_aD4 ~ Doc [" a type equality t_aD4
                                                  ~
                                                  Doc " HTML3.hs:115:16-34] (CNonCanonical)
canEvNC:eq
  t_aD4
  Doc
can_eq_nc
  [W] cobox_aP8 :: t_aD4 ~ Doc
  t_aD4
  t_aD4
  Doc
  Doc
can_eq_nc
  [W] cobox_aP8 :: t_aD4 ~ Doc
  t_aD4
  t_aD4
  [String]
  Doc
canEqTyVar
  t_aD4
  [String]
  Not-swapped
Following bound tyvar t_aD4 = Doc
canEqTyVar2
  t_aD4
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aP8 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aP8 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_a11b :: String ~ String
setEvBind
  ev = cobox_aP8
  tm  = CO [cobox_a11b]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a11b :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a11b :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a11b :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11c :: Char ~ Char
setEvBind
  ev = cobox_a11b
  tm  = CO [cobox_a11c]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11c :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11c
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aP9 :: t_aBY
                                ~ t_aD3 [" a type equality t_aBY
                                                           ~
                                                           t_aD3 " HTML3.hs:115:23-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aP9 :: t_aBY
                                 ~ t_aD3 [" a type equality t_aBY
                                                            ~
                                                            t_aD3 " HTML3.hs:115:23-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aP9 :: t_aBY ~ t_aD3 [" a type equality t_aBY
                                                    ~
                                                    t_aD3 " HTML3.hs:115:23-34] (CNonCanonical)
canEvNC:eq
  t_aBY
  t_aD3
can_eq_nc
  [W] cobox_aP9 :: t_aBY ~ t_aD3
  t_aBY
  t_aBY
  t_aD3
  t_aD3
canEqTyVar
  t_aBY
  t_aD3
  Not-swapped
Following bound tyvar t_aBY = HTML
canEqTyVar2
  t_aBY
  t_aD3
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aP9 :: HTML ~ t_aD3
  HTML
  HTML
  t_aD3
  t_aD3
canEqTyVar
  t_aD3
  HTML
  Is-swapped
Following bound tyvar t_aD3 = HTML
newWantedEvVar/cache miss [W] cobox_a11d :: HTML ~ HTML
setEvBind
  ev = cobox_aP9
  tm  = CO Sym cobox_a11d
rewriteEqEvidence
  [W] cobox_aP9 :: HTML ~ t_aD3
  HTML
  HTML
  Sym cobox_a11d
canEqTyVar2
  t_aD3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a11d :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a11d
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPc :: a_aPb
                                ~ (t_aDQ -> t_aDR -> t_aDS) [" a type equality a_aPb
                                                                               ~
                                                                               t_aDQ
                                                                               -> t_aDR
                                                                               -> t_aDS " HTML3.hs:4:12-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPc :: a_aPb
                                 ~ (t_aDQ -> t_aDR -> t_aDS) [" a type equality a_aPb
                                                                                ~
                                                                                t_aDQ
                                                                                -> t_aDR
                                                                                -> t_aDS " HTML3.hs:4:12-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPc :: a_aPb
                   ~ (t_aDQ -> t_aDR -> t_aDS) [" a type equality a_aPb
                                                                  ~
                                                                  t_aDQ
                                                                  -> t_aDR
                                                                  -> t_aDS " HTML3.hs:4:12-20] (CNonCanonical)
canEvNC:eq
  a_aPb
  t_aDQ -> t_aDR -> t_aDS
can_eq_nc
  [W] cobox_aPc :: a_aPb ~ (t_aDQ -> t_aDR -> t_aDS)
  a_aPb
  a_aPb
  t_aDQ -> t_aDR -> t_aDS
  t_aDQ -> t_aDR -> t_aDS
canEqTyVar
  a_aPb
  t_aDQ -> t_aDR -> t_aDS
  Not-swapped
Following bound tyvar t_aDQ = String
Following bound tyvar t_aDR = String
Following bound tyvar t_aDS = Bool
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPc :: a_aPb
                                 ~ (String -> String -> Bool) [" a type equality a_aPb
                                                                                 ~
                                                                                 t_aDQ
                                                                                 -> t_aDR
                                                                                 -> t_aDS " HTML3.hs:4:12-20] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPb := String -> String -> Bool
  Coercion: a_aPb ~ (String -> String -> Bool)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind a_aPb := String -> String -> Bool
setEvBind
  ev = cobox_aPc
  tm  = CO <String -> String -> Bool>_N
kickOutRewritable
  tv =  a_aPb
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
446[<C:0,F:0>] [W] cobox_aPc :: a_aPb
                                ~ (String -> String -> Bool): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPe :: HTML ~ t_aDA [" a type equality HTML
                                                                ~
                                                                t_aDA " HTML3.hs:21:11-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPe :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:21:11-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPe :: HTML ~ t_aDA [" a type equality HTML
                                                   ~
                                                   t_aDA " HTML3.hs:21:11-16] (CNonCanonical)
canEvNC:eq
  HTML
  t_aDA
can_eq_nc
  [W] cobox_aPe :: HTML ~ t_aDA
  HTML
  HTML
  t_aDA
  t_aDA
canEqTyVar
  t_aDA
  HTML
  Is-swapped
Following bound tyvar t_aDA = HTML
newWantedEvVar/cache miss [W] cobox_a11e :: HTML ~ HTML
setEvBind
  ev = cobox_aPe
  tm  = CO Sym cobox_a11e
rewriteEqEvidence
  [W] cobox_aPe :: HTML ~ t_aDA
  HTML
  HTML
  Sym cobox_a11e
canEqTyVar2
  t_aDA
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a11e :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a11e
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPg :: Maybe a_aPf
                                ~ t_aDC [" a type equality Maybe a_aPf
                                                           ~
                                                           t_aDC " HTML3.hs:21:32-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPg :: Maybe a_aPf
                                 ~ t_aDC [" a type equality Maybe a_aPf
                                                            ~
                                                            t_aDC " HTML3.hs:21:32-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPg :: Maybe a_aPf ~ t_aDC [" a type equality Maybe a_aPf
                                                          ~
                                                          t_aDC " HTML3.hs:21:32-38] (CNonCanonical)
canEvNC:eq
  Maybe a_aPf
  t_aDC
can_eq_nc
  [W] cobox_aPg :: Maybe a_aPf ~ t_aDC
  Maybe a_aPf
  Maybe a_aPf
  t_aDC
  t_aDC
canEqTyVar
  t_aDC
  Maybe a_aPf
  Is-swapped
Following bound tyvar t_aDC = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a11f :: Maybe Requirement ~ Maybe a_aPf
setEvBind
  ev = cobox_aPg
  tm  = CO Sym cobox_a11f
rewriteEqEvidence
  [W] cobox_aPg :: Maybe a_aPf ~ t_aDC
  Maybe Requirement
  Maybe a_aPf
  Sym cobox_a11f
canEqTyVar2
  t_aDC
  Maybe a_aPf
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a11f :: Maybe Requirement ~ Maybe a_aPf
  Maybe Requirement
  Maybe Requirement
  Maybe a_aPf
  Maybe a_aPf
newWantedEvVar/cache miss [W] cobox_a11g :: Requirement ~ a_aPf
setEvBind
  ev = cobox_a11f
  tm  = CO Maybe cobox_a11g_N
canEvNC:eq
  Requirement
  a_aPf
can_eq_nc
  [W] cobox_a11g :: Requirement ~ a_aPf
  Requirement
  Requirement
  a_aPf
  a_aPf
can_eq_nc
  [W] cobox_a11g :: Requirement ~ a_aPf
  (String, String)
  Requirement
  a_aPf
  a_aPf
canEqTyVar
  a_aPf
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a11h :: a_aPf ~ Requirement
setEvBind
  ev = cobox_a11g
  tm  = CO Sym cobox_a11h
rewriteEqEvidence
  [W] cobox_a11g :: Requirement ~ a_aPf
  a_aPf
  Requirement
  Sym cobox_a11h
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a11h :: a_aPf
                                  ~ Requirement [" a type equality Maybe a_aPf
                                                                   ~
                                                                   t_aDC " HTML3.hs:21:32-38] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPf := Requirement
  Coercion: a_aPf ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aPf := Requirement
setEvBind
  ev = cobox_a11h
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aPf
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
448[<C:0,F:0>] [W] cobox_a11h :: a_aPf
                                 ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPh :: HTML ~ t_aDA [" a type equality HTML
                                                                ~
                                                                t_aDA " HTML3.hs:22:11-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPh :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:22:11-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPh :: HTML ~ t_aDA [" a type equality HTML
                                                   ~
                                                   t_aDA " HTML3.hs:22:11-23] (CNonCanonical)
canEvNC:eq
  HTML
  t_aDA
can_eq_nc
  [W] cobox_aPh :: HTML ~ t_aDA
  HTML
  HTML
  t_aDA
  t_aDA
canEqTyVar
  t_aDA
  HTML
  Is-swapped
Following bound tyvar t_aDA = HTML
newWantedEvVar/cache miss [W] cobox_a11i :: HTML ~ HTML
setEvBind
  ev = cobox_aPh
  tm  = CO Sym cobox_a11i
rewriteEqEvidence
  [W] cobox_aPh :: HTML ~ t_aDA
  HTML
  HTML
  Sym cobox_a11i
canEqTyVar2
  t_aDA
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a11i :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a11i
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPj :: Maybe a_aPi
                                ~ t_aDC [" a type equality Maybe a_aPi
                                                           ~
                                                           t_aDC " HTML3.hs:22:32-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPj :: Maybe a_aPi
                                 ~ t_aDC [" a type equality Maybe a_aPi
                                                            ~
                                                            t_aDC " HTML3.hs:22:32-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPj :: Maybe a_aPi ~ t_aDC [" a type equality Maybe a_aPi
                                                          ~
                                                          t_aDC " HTML3.hs:22:32-38] (CNonCanonical)
canEvNC:eq
  Maybe a_aPi
  t_aDC
can_eq_nc
  [W] cobox_aPj :: Maybe a_aPi ~ t_aDC
  Maybe a_aPi
  Maybe a_aPi
  t_aDC
  t_aDC
canEqTyVar
  t_aDC
  Maybe a_aPi
  Is-swapped
Following bound tyvar t_aDC = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a11j :: Maybe Requirement ~ Maybe a_aPi
setEvBind
  ev = cobox_aPj
  tm  = CO Sym cobox_a11j
rewriteEqEvidence
  [W] cobox_aPj :: Maybe a_aPi ~ t_aDC
  Maybe Requirement
  Maybe a_aPi
  Sym cobox_a11j
canEqTyVar2
  t_aDC
  Maybe a_aPi
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a11j :: Maybe Requirement ~ Maybe a_aPi
  Maybe Requirement
  Maybe Requirement
  Maybe a_aPi
  Maybe a_aPi
newWantedEvVar/cache miss [W] cobox_a11k :: Requirement ~ a_aPi
setEvBind
  ev = cobox_a11j
  tm  = CO Maybe cobox_a11k_N
canEvNC:eq
  Requirement
  a_aPi
can_eq_nc
  [W] cobox_a11k :: Requirement ~ a_aPi
  Requirement
  Requirement
  a_aPi
  a_aPi
can_eq_nc
  [W] cobox_a11k :: Requirement ~ a_aPi
  (String, String)
  Requirement
  a_aPi
  a_aPi
canEqTyVar
  a_aPi
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a11l :: a_aPi ~ Requirement
setEvBind
  ev = cobox_a11k
  tm  = CO Sym cobox_a11l
rewriteEqEvidence
  [W] cobox_a11k :: Requirement ~ a_aPi
  a_aPi
  Requirement
  Sym cobox_a11l
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a11l :: a_aPi
                                  ~ Requirement [" a type equality Maybe a_aPi
                                                                   ~
                                                                   t_aDC " HTML3.hs:22:32-38] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPi := Requirement
  Coercion: a_aPi ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aPi := Requirement
setEvBind
  ev = cobox_a11l
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aPi
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
450[<C:0,F:0>] [W] cobox_a11l :: a_aPi
                                 ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPk :: HTML ~ t_aDA [" a type equality HTML
                                                                ~
                                                                t_aDA " HTML3.hs:23:11-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPk :: HTML ~ t_aDA [" a type equality HTML
                                                                 ~
                                                                 t_aDA " HTML3.hs:23:11-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPk :: HTML ~ t_aDA [" a type equality HTML
                                                   ~
                                                   t_aDA " HTML3.hs:23:11-31] (CNonCanonical)
canEvNC:eq
  HTML
  t_aDA
can_eq_nc
  [W] cobox_aPk :: HTML ~ t_aDA
  HTML
  HTML
  t_aDA
  t_aDA
canEqTyVar
  t_aDA
  HTML
  Is-swapped
Following bound tyvar t_aDA = HTML
newWantedEvVar/cache miss [W] cobox_a11m :: HTML ~ HTML
setEvBind
  ev = cobox_aPk
  tm  = CO Sym cobox_a11m
rewriteEqEvidence
  [W] cobox_aPk :: HTML ~ t_aDA
  HTML
  HTML
  Sym cobox_a11m
canEqTyVar2
  t_aDA
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a11m :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a11m
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPl :: t_aDS ~ Bool [" a type equality t_aDS
                                                                ~
                                                                Bool " HTML3.hs:23:40-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPl :: t_aDS
                                 ~ Bool [" a type equality t_aDS
                                                           ~
                                                           Bool " HTML3.hs:23:40-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPl :: t_aDS ~ Bool [" a type equality t_aDS
                                                   ~
                                                   Bool " HTML3.hs:23:40-61] (CNonCanonical)
canEvNC:eq
  t_aDS
  Bool
can_eq_nc
  [W] cobox_aPl :: t_aDS ~ Bool
  t_aDS
  t_aDS
  Bool
  Bool
canEqTyVar
  t_aDS
  Bool
  Not-swapped
Following bound tyvar t_aDS = Bool
canEqTyVar2
  t_aDS
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aPl :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aPl
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPm :: String
                                ~ t_aDQ [" a type equality String
                                                           ~
                                                           t_aDQ " HTML3.hs:23:49-51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPm :: String
                                 ~ t_aDQ [" a type equality String
                                                            ~
                                                            t_aDQ " HTML3.hs:23:49-51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPm :: String ~ t_aDQ [" a type equality String
                                                     ~
                                                     t_aDQ " HTML3.hs:23:49-51] (CNonCanonical)
canEvNC:eq
  String
  t_aDQ
can_eq_nc
  [W] cobox_aPm :: String ~ t_aDQ
  String
  String
  t_aDQ
  t_aDQ
can_eq_nc
  [W] cobox_aPm :: String ~ t_aDQ
  [Char]
  String
  t_aDQ
  t_aDQ
canEqTyVar
  t_aDQ
  [Char]
  Is-swapped
Following bound tyvar t_aDQ = String
newWantedEvVar/cache miss [W] cobox_a11n :: String ~ String
setEvBind
  ev = cobox_aPm
  tm  = CO Sym cobox_a11n
rewriteEqEvidence
  [W] cobox_aPm :: String ~ t_aDQ
  String
  String
  Sym cobox_a11n
canEqTyVar2
  t_aDQ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a11n :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_a11n :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11o :: Char ~ Char
setEvBind
  ev = cobox_a11n
  tm  = CO [cobox_a11o]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11o :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11o
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPp :: b_aPo
                                ~ t_aDR [" a type equality b_aPo
                                                           ~
                                                           t_aDR " HTML3.hs:23:54-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPp :: b_aPo
                                 ~ t_aDR [" a type equality b_aPo
                                                            ~
                                                            t_aDR " HTML3.hs:23:54-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPp :: b_aPo ~ t_aDR [" a type equality b_aPo
                                                    ~
                                                    t_aDR " HTML3.hs:23:54-60] (CNonCanonical)
canEvNC:eq
  b_aPo
  t_aDR
can_eq_nc
  [W] cobox_aPp :: b_aPo ~ t_aDR
  b_aPo
  b_aPo
  t_aDR
  t_aDR
canEqTyVar
  b_aPo
  t_aDR
  Not-swapped
Following bound tyvar t_aDR = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPp :: b_aPo
                                 ~ String [" a type equality b_aPo
                                                             ~
                                                             t_aDR " HTML3.hs:23:54-60] (CTyEqCan)
Sneaky unification:
  Unifies: b_aPo := String
  Coercion: b_aPo ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aPo := String
setEvBind
  ev = cobox_aPp
  tm  = CO <String>_N
kickOutRewritable
  tv =  b_aPo
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
454[<C:0,F:0>] [W] cobox_aPp :: b_aPo
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPq :: t_aDB
                                ~ (a_aPn, b_aPo) [" a type equality t_aDB
                                                                    ~
                                                                    (a_aPn,
                                                                     b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPq :: t_aDB
                                 ~ (a_aPn, b_aPo) [" a type equality t_aDB
                                                                     ~
                                                                     (a_aPn,
                                                                      b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPq :: t_aDB ~ (a_aPn, b_aPo) [" a type equality t_aDB
                                                             ~
                                                             (a_aPn,
                                                              b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
canEvNC:eq
  t_aDB
  (a_aPn, b_aPo)
can_eq_nc
  [W] cobox_aPq :: t_aDB ~ (a_aPn, b_aPo)
  t_aDB
  t_aDB
  (a_aPn, b_aPo)
  (a_aPn, b_aPo)
canEqTyVar
  t_aDB
  (a_aPn, b_aPo)
  Not-swapped
Following bound tyvar t_aDB = Requirement
canEqTyVar2
  t_aDB
  (a_aPn, b_aPo)
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aPq :: Requirement ~ (a_aPn, b_aPo)
  Requirement
  Requirement
  (a_aPn, b_aPo)
  (a_aPn, b_aPo)
can_eq_nc
  [W] cobox_aPq :: Requirement ~ (a_aPn, b_aPo)
  (String, String)
  Requirement
  (a_aPn, b_aPo)
  (a_aPn, b_aPo)
newWantedEvVar/cache miss [W] cobox_a11p :: String ~ a_aPn
newWantedEvVar/cache miss [W] cobox_a11q :: String ~ b_aPo
setEvBind
  ev = cobox_aPq
  tm  = CO (cobox_a11p, cobox_a11q)_N
canEvNC:eq
  String
  a_aPn
can_eq_nc
  [W] cobox_a11p :: String ~ a_aPn
  String
  String
  a_aPn
  a_aPn
can_eq_nc
  [W] cobox_a11p :: String ~ a_aPn
  [Char]
  String
  a_aPn
  a_aPn
canEqTyVar
  a_aPn
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a11r :: a_aPn ~ String
setEvBind
  ev = cobox_a11p
  tm  = CO Sym cobox_a11r
rewriteEqEvidence
  [W] cobox_a11p :: String ~ a_aPn
  a_aPn
  String
  Sym cobox_a11r
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a11r :: a_aPn
                                  ~ String [" a type equality t_aDB
                                                              ~
                                                              (a_aPn,
                                                               b_aPo) " HTML3.hs:23:58-60] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPn := String
  Coercion: a_aPn ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aPn := String
setEvBind
  ev = cobox_a11r
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aPn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
455[<C:0,F:0>] [W] cobox_a11r :: a_aPn
                                 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a11q :: String
                                 ~ b_aPo [" a type equality t_aDB
                                                            ~
                                                            (a_aPn,
                                                             b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a11q :: String
                                  ~ b_aPo [" a type equality t_aDB
                                                             ~
                                                             (a_aPn,
                                                              b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a11q :: String ~ b_aPo [" a type equality t_aDB
                                                      ~
                                                      (a_aPn,
                                                       b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
canEvNC:eq
  String
  b_aPo
can_eq_nc
  [W] cobox_a11q :: String ~ b_aPo
  String
  String
  b_aPo
  b_aPo
can_eq_nc
  [W] cobox_a11q :: String ~ b_aPo
  [Char]
  String
  b_aPo
  b_aPo
canEqTyVar
  b_aPo
  [Char]
  Is-swapped
Following bound tyvar b_aPo = String
newWantedEvVar/cache miss [W] cobox_a11s :: String ~ String
setEvBind
  ev = cobox_a11q
  tm  = CO Sym cobox_a11s
rewriteEqEvidence
  [W] cobox_a11q :: String ~ b_aPo
  String
  String
  Sym cobox_a11s
canEqTyVar2
  b_aPo
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a11s :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_a11s :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11t :: Char ~ Char
setEvBind
  ev = cobox_a11s
  tm  = CO [cobox_a11t]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11t :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11t
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPs :: Maybe a_aPr
                                ~ t_aDC [" a type equality Maybe a_aPr
                                                           ~
                                                           t_aDC " HTML3.hs:23:65-72] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPs :: Maybe a_aPr
                                 ~ t_aDC [" a type equality Maybe a_aPr
                                                            ~
                                                            t_aDC " HTML3.hs:23:65-72] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPs :: Maybe a_aPr ~ t_aDC [" a type equality Maybe a_aPr
                                                          ~
                                                          t_aDC " HTML3.hs:23:65-72] (CNonCanonical)
canEvNC:eq
  Maybe a_aPr
  t_aDC
can_eq_nc
  [W] cobox_aPs :: Maybe a_aPr ~ t_aDC
  Maybe a_aPr
  Maybe a_aPr
  t_aDC
  t_aDC
canEqTyVar
  t_aDC
  Maybe a_aPr
  Is-swapped
Following bound tyvar t_aDC = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a11u :: Maybe Requirement ~ Maybe a_aPr
setEvBind
  ev = cobox_aPs
  tm  = CO Sym cobox_a11u
rewriteEqEvidence
  [W] cobox_aPs :: Maybe a_aPr ~ t_aDC
  Maybe Requirement
  Maybe a_aPr
  Sym cobox_a11u
canEqTyVar2
  t_aDC
  Maybe a_aPr
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a11u :: Maybe Requirement ~ Maybe a_aPr
  Maybe Requirement
  Maybe Requirement
  Maybe a_aPr
  Maybe a_aPr
newWantedEvVar/cache miss [W] cobox_a11v :: Requirement ~ a_aPr
setEvBind
  ev = cobox_a11u
  tm  = CO Maybe cobox_a11v_N
canEvNC:eq
  Requirement
  a_aPr
can_eq_nc
  [W] cobox_a11v :: Requirement ~ a_aPr
  Requirement
  Requirement
  a_aPr
  a_aPr
can_eq_nc
  [W] cobox_a11v :: Requirement ~ a_aPr
  (String, String)
  Requirement
  a_aPr
  a_aPr
canEqTyVar
  a_aPr
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a11w :: a_aPr ~ Requirement
setEvBind
  ev = cobox_a11v
  tm  = CO Sym cobox_a11w
rewriteEqEvidence
  [W] cobox_a11v :: Requirement ~ a_aPr
  a_aPr
  Requirement
  Sym cobox_a11w
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a11w :: a_aPr
                                  ~ Requirement [" a type equality Maybe a_aPr
                                                                   ~
                                                                   t_aDC " HTML3.hs:23:65-72] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPr := Requirement
  Coercion: a_aPr ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aPr := Requirement
setEvBind
  ev = cobox_a11w
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aPr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
457[<C:0,F:0>] [W] cobox_a11w :: a_aPr
                                 ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPt :: t_aDB
                                ~ a_aPr [" a type equality t_aDB
                                                           ~
                                                           a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPt :: t_aDB
                                 ~ a_aPr [" a type equality t_aDB
                                                            ~
                                                            a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPt :: t_aDB ~ a_aPr [" a type equality t_aDB
                                                    ~
                                                    a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
canEvNC:eq
  t_aDB
  a_aPr
can_eq_nc
  [W] cobox_aPt :: t_aDB ~ a_aPr
  t_aDB
  t_aDB
  a_aPr
  a_aPr
canEqTyVar
  t_aDB
  a_aPr
  Not-swapped
Following bound tyvar t_aDB = Requirement
canEqTyVar2
  t_aDB
  a_aPr
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aPt :: Requirement ~ a_aPr
  Requirement
  Requirement
  a_aPr
  a_aPr
can_eq_nc
  [W] cobox_aPt :: Requirement ~ a_aPr
  (String, String)
  Requirement
  a_aPr
  a_aPr
canEqTyVar
  a_aPr
  (String, String)
  Is-swapped
Following bound tyvar a_aPr = Requirement
newWantedEvVar/cache miss
  [W] cobox_a11x :: Requirement ~ Requirement
setEvBind
  ev = cobox_aPt
  tm  = CO Sym cobox_a11x
rewriteEqEvidence
  [W] cobox_aPt :: Requirement ~ a_aPr
  Requirement
  Requirement
  Sym cobox_a11x
canEqTyVar2
  a_aPr
  (String, String)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_a11x :: Requirement ~ Requirement
  Requirement
  Requirement
  (String, String)
  Requirement
can_eq_nc
  [W] cobox_a11x :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_a11y :: String ~ String
newWantedEvVar/cache miss [W] cobox_a11z :: String ~ String
setEvBind
  ev = cobox_a11x
  tm  = CO (cobox_a11y, cobox_a11z)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a11y :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a11y :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a11y :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11A :: Char ~ Char
setEvBind
  ev = cobox_a11y
  tm  = CO [cobox_a11A]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11A :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11A
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a11z :: String
                                 ~ String [" a type equality t_aDB
                                                             ~
                                                             a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a11z :: String
                                  ~ String [" a type equality t_aDB
                                                              ~
                                                              a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a11z :: String ~ String [" a type equality t_aDB
                                                       ~
                                                       a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a11z :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a11z :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a11z :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11B :: Char ~ Char
setEvBind
  ev = cobox_a11z
  tm  = CO [cobox_a11B]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11B :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11B
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPu :: t_aDS ~ Bool [" a type equality t_aDS
                                                                ~
                                                                Bool " HTML3.hs:24:40-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPu :: t_aDS
                                 ~ Bool [" a type equality t_aDS
                                                           ~
                                                           Bool " HTML3.hs:24:40-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPu :: t_aDS ~ Bool [" a type equality t_aDS
                                                   ~
                                                   Bool " HTML3.hs:24:40-61] (CNonCanonical)
canEvNC:eq
  t_aDS
  Bool
can_eq_nc
  [W] cobox_aPu :: t_aDS ~ Bool
  t_aDS
  t_aDS
  Bool
  Bool
canEqTyVar
  t_aDS
  Bool
  Not-swapped
Following bound tyvar t_aDS = Bool
canEqTyVar2
  t_aDS
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aPu :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aPu
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPv :: String
                                ~ t_aDQ [" a type equality String
                                                           ~
                                                           t_aDQ " HTML3.hs:24:49-51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPv :: String
                                 ~ t_aDQ [" a type equality String
                                                            ~
                                                            t_aDQ " HTML3.hs:24:49-51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPv :: String ~ t_aDQ [" a type equality String
                                                     ~
                                                     t_aDQ " HTML3.hs:24:49-51] (CNonCanonical)
canEvNC:eq
  String
  t_aDQ
can_eq_nc
  [W] cobox_aPv :: String ~ t_aDQ
  String
  String
  t_aDQ
  t_aDQ
can_eq_nc
  [W] cobox_aPv :: String ~ t_aDQ
  [Char]
  String
  t_aDQ
  t_aDQ
canEqTyVar
  t_aDQ
  [Char]
  Is-swapped
Following bound tyvar t_aDQ = String
newWantedEvVar/cache miss [W] cobox_a11C :: String ~ String
setEvBind
  ev = cobox_aPv
  tm  = CO Sym cobox_a11C
rewriteEqEvidence
  [W] cobox_aPv :: String ~ t_aDQ
  String
  String
  Sym cobox_a11C
canEqTyVar2
  t_aDQ
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a11C :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_a11C :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11D :: Char ~ Char
setEvBind
  ev = cobox_a11C
  tm  = CO [cobox_a11D]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11D :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11D
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPy :: a_aPw
                                ~ t_aDR [" a type equality a_aPw
                                                           ~
                                                           t_aDR " HTML3.hs:24:54-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPy :: a_aPw
                                 ~ t_aDR [" a type equality a_aPw
                                                            ~
                                                            t_aDR " HTML3.hs:24:54-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPy :: a_aPw ~ t_aDR [" a type equality a_aPw
                                                    ~
                                                    t_aDR " HTML3.hs:24:54-60] (CNonCanonical)
canEvNC:eq
  a_aPw
  t_aDR
can_eq_nc
  [W] cobox_aPy :: a_aPw ~ t_aDR
  a_aPw
  a_aPw
  t_aDR
  t_aDR
canEqTyVar
  a_aPw
  t_aDR
  Not-swapped
Following bound tyvar t_aDR = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPy :: a_aPw
                                 ~ String [" a type equality a_aPw
                                                             ~
                                                             t_aDR " HTML3.hs:24:54-60] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPw := String
  Coercion: a_aPw ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aPw := String
setEvBind
  ev = cobox_aPy
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aPw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
462[<C:0,F:0>] [W] cobox_aPy :: a_aPw
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPz :: t_aDB
                                ~ (a_aPw, b_aPx) [" a type equality t_aDB
                                                                    ~
                                                                    (a_aPw,
                                                                     b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPz :: t_aDB
                                 ~ (a_aPw, b_aPx) [" a type equality t_aDB
                                                                     ~
                                                                     (a_aPw,
                                                                      b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPz :: t_aDB ~ (a_aPw, b_aPx) [" a type equality t_aDB
                                                             ~
                                                             (a_aPw,
                                                              b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
canEvNC:eq
  t_aDB
  (a_aPw, b_aPx)
can_eq_nc
  [W] cobox_aPz :: t_aDB ~ (a_aPw, b_aPx)
  t_aDB
  t_aDB
  (a_aPw, b_aPx)
  (a_aPw, b_aPx)
canEqTyVar
  t_aDB
  (a_aPw, b_aPx)
  Not-swapped
Following bound tyvar t_aDB = Requirement
canEqTyVar2
  t_aDB
  (a_aPw, b_aPx)
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aPz :: Requirement ~ (a_aPw, b_aPx)
  Requirement
  Requirement
  (a_aPw, b_aPx)
  (a_aPw, b_aPx)
can_eq_nc
  [W] cobox_aPz :: Requirement ~ (a_aPw, b_aPx)
  (String, String)
  Requirement
  (a_aPw, b_aPx)
  (a_aPw, b_aPx)
newWantedEvVar/cache miss [W] cobox_a11E :: String ~ a_aPw
newWantedEvVar/cache miss [W] cobox_a11F :: String ~ b_aPx
setEvBind
  ev = cobox_aPz
  tm  = CO (cobox_a11E, cobox_a11F)_N
canEvNC:eq
  String
  a_aPw
can_eq_nc
  [W] cobox_a11E :: String ~ a_aPw
  String
  String
  a_aPw
  a_aPw
can_eq_nc
  [W] cobox_a11E :: String ~ a_aPw
  [Char]
  String
  a_aPw
  a_aPw
canEqTyVar
  a_aPw
  [Char]
  Is-swapped
Following bound tyvar a_aPw = String
newWantedEvVar/cache miss [W] cobox_a11G :: String ~ String
setEvBind
  ev = cobox_a11E
  tm  = CO Sym cobox_a11G
rewriteEqEvidence
  [W] cobox_a11E :: String ~ a_aPw
  String
  String
  Sym cobox_a11G
canEqTyVar2
  a_aPw
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_a11G :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_a11G :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11H :: Char ~ Char
setEvBind
  ev = cobox_a11G
  tm  = CO [cobox_a11H]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11H :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11H
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a11F :: String
                                 ~ b_aPx [" a type equality t_aDB
                                                            ~
                                                            (a_aPw,
                                                             b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a11F :: String
                                  ~ b_aPx [" a type equality t_aDB
                                                             ~
                                                             (a_aPw,
                                                              b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a11F :: String ~ b_aPx [" a type equality t_aDB
                                                      ~
                                                      (a_aPw,
                                                       b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
canEvNC:eq
  String
  b_aPx
can_eq_nc
  [W] cobox_a11F :: String ~ b_aPx
  String
  String
  b_aPx
  b_aPx
can_eq_nc
  [W] cobox_a11F :: String ~ b_aPx
  [Char]
  String
  b_aPx
  b_aPx
canEqTyVar
  b_aPx
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a11I :: b_aPx ~ String
setEvBind
  ev = cobox_a11F
  tm  = CO Sym cobox_a11I
rewriteEqEvidence
  [W] cobox_a11F :: String ~ b_aPx
  b_aPx
  String
  Sym cobox_a11I
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a11I :: b_aPx
                                  ~ String [" a type equality t_aDB
                                                              ~
                                                              (a_aPw,
                                                               b_aPx) " HTML3.hs:24:58-60] (CTyEqCan)
Sneaky unification:
  Unifies: b_aPx := String
  Coercion: b_aPx ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aPx := String
setEvBind
  ev = cobox_a11I
  tm  = CO <String>_N
kickOutRewritable
  tv =  b_aPx
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
464[<C:0,F:0>] [W] cobox_a11I :: b_aPx
                                 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPB :: Maybe a_aPA
                                ~ t_aDC [" a type equality Maybe a_aPA
                                                           ~
                                                           t_aDC " HTML3.hs:24:65-71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPB :: Maybe a_aPA
                                 ~ t_aDC [" a type equality Maybe a_aPA
                                                            ~
                                                            t_aDC " HTML3.hs:24:65-71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPB :: Maybe a_aPA ~ t_aDC [" a type equality Maybe a_aPA
                                                          ~
                                                          t_aDC " HTML3.hs:24:65-71] (CNonCanonical)
canEvNC:eq
  Maybe a_aPA
  t_aDC
can_eq_nc
  [W] cobox_aPB :: Maybe a_aPA ~ t_aDC
  Maybe a_aPA
  Maybe a_aPA
  t_aDC
  t_aDC
canEqTyVar
  t_aDC
  Maybe a_aPA
  Is-swapped
Following bound tyvar t_aDC = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a11J :: Maybe Requirement ~ Maybe a_aPA
setEvBind
  ev = cobox_aPB
  tm  = CO Sym cobox_a11J
rewriteEqEvidence
  [W] cobox_aPB :: Maybe a_aPA ~ t_aDC
  Maybe Requirement
  Maybe a_aPA
  Sym cobox_a11J
canEqTyVar2
  t_aDC
  Maybe a_aPA
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a11J :: Maybe Requirement ~ Maybe a_aPA
  Maybe Requirement
  Maybe Requirement
  Maybe a_aPA
  Maybe a_aPA
newWantedEvVar/cache miss [W] cobox_a11K :: Requirement ~ a_aPA
setEvBind
  ev = cobox_a11J
  tm  = CO Maybe cobox_a11K_N
canEvNC:eq
  Requirement
  a_aPA
can_eq_nc
  [W] cobox_a11K :: Requirement ~ a_aPA
  Requirement
  Requirement
  a_aPA
  a_aPA
can_eq_nc
  [W] cobox_a11K :: Requirement ~ a_aPA
  (String, String)
  Requirement
  a_aPA
  a_aPA
canEqTyVar
  a_aPA
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a11L :: a_aPA ~ Requirement
setEvBind
  ev = cobox_a11K
  tm  = CO Sym cobox_a11L
rewriteEqEvidence
  [W] cobox_a11K :: Requirement ~ a_aPA
  a_aPA
  Requirement
  Sym cobox_a11L
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a11L :: a_aPA
                                  ~ Requirement [" a type equality Maybe a_aPA
                                                                   ~
                                                                   t_aDC " HTML3.hs:24:65-71] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPA := Requirement
  Coercion: a_aPA ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aPA := Requirement
setEvBind
  ev = cobox_a11L
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aPA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
465[<C:0,F:0>] [W] cobox_a11L :: a_aPA
                                 ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPC :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML3.hs:25:40-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPC :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML3.hs:25:40-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPC :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML3.hs:25:40-48] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aPC :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aPC
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPD :: t_aDp
                                ~ t_aDC [" a type equality t_aDp
                                                           ~
                                                           t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPD :: t_aDp
                                 ~ t_aDC [" a type equality t_aDp
                                                            ~
                                                            t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPD :: t_aDp ~ t_aDC [" a type equality t_aDp
                                                    ~
                                                    t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
canEvNC:eq
  t_aDp
  t_aDC
can_eq_nc
  [W] cobox_aPD :: t_aDp ~ t_aDC
  t_aDp
  t_aDp
  t_aDC
  t_aDC
canEqTyVar
  t_aDp
  t_aDC
  Not-swapped
Following bound tyvar t_aDp = Maybe Requirement
canEqTyVar2
  t_aDp
  t_aDC
  Not-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aPD :: Maybe Requirement ~ t_aDC
  Maybe Requirement
  Maybe Requirement
  t_aDC
  t_aDC
canEqTyVar
  t_aDC
  Maybe Requirement
  Is-swapped
Following bound tyvar t_aDC = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a11M :: Maybe Requirement ~ Maybe Requirement
setEvBind
  ev = cobox_aPD
  tm  = CO Sym cobox_a11M
rewriteEqEvidence
  [W] cobox_aPD :: Maybe Requirement ~ t_aDC
  Maybe Requirement
  Maybe Requirement
  Sym cobox_a11M
canEqTyVar2
  t_aDC
  Maybe Requirement
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a11M :: Maybe Requirement ~ Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a11N :: Requirement ~ Requirement
setEvBind
  ev = cobox_a11M
  tm  = CO Maybe cobox_a11N_N
canEvNC:eq
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a11N :: Requirement ~ Requirement
  Requirement
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a11N :: Requirement ~ Requirement
  (String, String)
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a11N :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_a11O :: String ~ String
newWantedEvVar/cache miss [W] cobox_a11P :: String ~ String
setEvBind
  ev = cobox_a11N
  tm  = CO (cobox_a11O, cobox_a11P)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a11O :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a11O :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a11O :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11Q :: Char ~ Char
setEvBind
  ev = cobox_a11O
  tm  = CO [cobox_a11Q]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11Q :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11Q
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a11P :: String
                                 ~ String [" a type equality t_aDp
                                                             ~
                                                             t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a11P :: String
                                  ~ String [" a type equality t_aDp
                                                              ~
                                                              t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a11P :: String ~ String [" a type equality t_aDp
                                                       ~
                                                       t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a11P :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a11P :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a11P :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11R :: Char ~ Char
setEvBind
  ev = cobox_a11P
  tm  = CO [cobox_a11R]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11R :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11R
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPG :: [b_aPF]
                                ~ t_aDo [" a type equality [b_aPF]
                                                           ~
                                                           t_aDo " HTML3.hs:25:60-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPG :: [b_aPF]
                                 ~ t_aDo [" a type equality [b_aPF]
                                                            ~
                                                            t_aDo " HTML3.hs:25:60-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPG :: [b_aPF] ~ t_aDo [" a type equality [b_aPF]
                                                      ~
                                                      t_aDo " HTML3.hs:25:60-97] (CNonCanonical)
canEvNC:eq
  [b_aPF]
  t_aDo
can_eq_nc
  [W] cobox_aPG :: [b_aPF] ~ t_aDo
  [b_aPF]
  [b_aPF]
  t_aDo
  t_aDo
canEqTyVar
  t_aDo
  [b_aPF]
  Is-swapped
Following bound tyvar t_aDo = [Maybe Requirement]
newWantedEvVar/cache miss
  [W] cobox_a11S :: [Maybe Requirement] ~ [b_aPF]
setEvBind
  ev = cobox_aPG
  tm  = CO Sym cobox_a11S
rewriteEqEvidence
  [W] cobox_aPG :: [b_aPF] ~ t_aDo
  [Maybe Requirement]
  [b_aPF]
  Sym cobox_a11S
canEqTyVar2
  t_aDo
  [b_aPF]
  Is-swapped
  [Maybe Requirement]
  <[Maybe Requirement]>_N
can_eq_nc
  [W] cobox_a11S :: [Maybe Requirement] ~ [b_aPF]
  [Maybe Requirement]
  [Maybe Requirement]
  [b_aPF]
  [b_aPF]
newWantedEvVar/cache miss
  [W] cobox_a11T :: Maybe Requirement ~ b_aPF
setEvBind
  ev = cobox_a11S
  tm  = CO [cobox_a11T]_N
canEvNC:eq
  Maybe Requirement
  b_aPF
can_eq_nc
  [W] cobox_a11T :: Maybe Requirement ~ b_aPF
  Maybe Requirement
  Maybe Requirement
  b_aPF
  b_aPF
canEqTyVar
  b_aPF
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_a11U :: b_aPF ~ Maybe Requirement
setEvBind
  ev = cobox_a11T
  tm  = CO Sym cobox_a11U
rewriteEqEvidence
  [W] cobox_a11T :: Maybe Requirement ~ b_aPF
  b_aPF
  Maybe Requirement
  Sym cobox_a11U
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a11U :: b_aPF
                                  ~ Maybe Requirement [" a type equality [b_aPF]
                                                                         ~
                                                                         t_aDo " HTML3.hs:25:60-97] (CTyEqCan)
Sneaky unification:
  Unifies: b_aPF := Maybe Requirement
  Coercion: b_aPF ~ Maybe Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aPF := Maybe Requirement
setEvBind
  ev = cobox_a11U
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  b_aPF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
469[<C:0,F:0>] [W] cobox_a11U :: b_aPF
                                 ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPH :: t_aDC
                                ~ b_aPF [" a type equality t_aDC
                                                           ~
                                                           b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPH :: t_aDC
                                 ~ b_aPF [" a type equality t_aDC
                                                            ~
                                                            b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPH :: t_aDC ~ b_aPF [" a type equality t_aDC
                                                    ~
                                                    b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
canEvNC:eq
  t_aDC
  b_aPF
can_eq_nc
  [W] cobox_aPH :: t_aDC ~ b_aPF
  t_aDC
  t_aDC
  b_aPF
  b_aPF
canEqTyVar
  t_aDC
  b_aPF
  Not-swapped
Following bound tyvar t_aDC = Maybe Requirement
canEqTyVar2
  t_aDC
  b_aPF
  Not-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aPH :: Maybe Requirement ~ b_aPF
  Maybe Requirement
  Maybe Requirement
  b_aPF
  b_aPF
canEqTyVar
  b_aPF
  Maybe Requirement
  Is-swapped
Following bound tyvar b_aPF = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a11V :: Maybe Requirement ~ Maybe Requirement
setEvBind
  ev = cobox_aPH
  tm  = CO Sym cobox_a11V
rewriteEqEvidence
  [W] cobox_aPH :: Maybe Requirement ~ b_aPF
  Maybe Requirement
  Maybe Requirement
  Sym cobox_a11V
canEqTyVar2
  b_aPF
  Maybe Requirement
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a11V :: Maybe Requirement ~ Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a11W :: Requirement ~ Requirement
setEvBind
  ev = cobox_a11V
  tm  = CO Maybe cobox_a11W_N
canEvNC:eq
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a11W :: Requirement ~ Requirement
  Requirement
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a11W :: Requirement ~ Requirement
  (String, String)
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a11W :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_a11X :: String ~ String
newWantedEvVar/cache miss [W] cobox_a11Y :: String ~ String
setEvBind
  ev = cobox_a11W
  tm  = CO (cobox_a11X, cobox_a11Y)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a11X :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a11X :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a11X :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a11Z :: Char ~ Char
setEvBind
  ev = cobox_a11X
  tm  = CO [cobox_a11Z]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a11Z :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a11Z
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a11Y :: String
                                 ~ String [" a type equality t_aDC
                                                             ~
                                                             b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a11Y :: String
                                  ~ String [" a type equality t_aDC
                                                              ~
                                                              b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a11Y :: String ~ String [" a type equality t_aDC
                                                       ~
                                                       b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a11Y :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a11Y :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a11Y :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a120 :: Char ~ Char
setEvBind
  ev = cobox_a11Y
  tm  = CO [cobox_a120]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a120 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a120
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPI :: a_aPE
                                ~ t_aDA [" a type equality a_aPE
                                                           ~
                                                           t_aDA " HTML3.hs:25:83-86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPI :: a_aPE
                                 ~ t_aDA [" a type equality a_aPE
                                                            ~
                                                            t_aDA " HTML3.hs:25:83-86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPI :: a_aPE ~ t_aDA [" a type equality a_aPE
                                                    ~
                                                    t_aDA " HTML3.hs:25:83-86] (CNonCanonical)
canEvNC:eq
  a_aPE
  t_aDA
can_eq_nc
  [W] cobox_aPI :: a_aPE ~ t_aDA
  a_aPE
  a_aPE
  t_aDA
  t_aDA
canEqTyVar
  a_aPE
  t_aDA
  Not-swapped
Following bound tyvar t_aDA = HTML
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aPI :: a_aPE
                                 ~ HTML [" a type equality a_aPE
                                                           ~
                                                           t_aDA " HTML3.hs:25:83-86] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPE := HTML
  Coercion: a_aPE ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aPE := HTML
setEvBind
  ev = cobox_aPI
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  a_aPE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
472[<C:0,F:0>] [W] cobox_aPI :: a_aPE ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPJ :: t_aDB
                                ~ t_aDB [" a type equality t_aDB
                                                           ~
                                                           t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPJ :: t_aDB
                                 ~ t_aDB [" a type equality t_aDB
                                                            ~
                                                            t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPJ :: t_aDB ~ t_aDB [" a type equality t_aDB
                                                    ~
                                                    t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
canEvNC:eq
  t_aDB
  t_aDB
can_eq_nc
  [W] cobox_aPJ :: t_aDB ~ t_aDB
  t_aDB
  t_aDB
  t_aDB
  t_aDB
canEqTyVar
  t_aDB
  t_aDB
  Not-swapped
Following bound tyvar t_aDB = Requirement
canEqTyVar2
  t_aDB
  t_aDB
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aPJ :: Requirement ~ t_aDB
  Requirement
  Requirement
  t_aDB
  t_aDB
can_eq_nc
  [W] cobox_aPJ :: Requirement ~ t_aDB
  (String, String)
  Requirement
  t_aDB
  t_aDB
canEqTyVar
  t_aDB
  (String, String)
  Is-swapped
Following bound tyvar t_aDB = Requirement
newWantedEvVar/cache miss
  [W] cobox_a121 :: Requirement ~ Requirement
setEvBind
  ev = cobox_aPJ
  tm  = CO Sym cobox_a121
rewriteEqEvidence
  [W] cobox_aPJ :: Requirement ~ t_aDB
  Requirement
  Requirement
  Sym cobox_a121
canEqTyVar2
  t_aDB
  (String, String)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_a121 :: Requirement ~ Requirement
  Requirement
  Requirement
  (String, String)
  Requirement
can_eq_nc
  [W] cobox_a121 :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_a122 :: String ~ String
newWantedEvVar/cache miss [W] cobox_a123 :: String ~ String
setEvBind
  ev = cobox_a121
  tm  = CO (cobox_a122, cobox_a123)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a122 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a122 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a122 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a124 :: Char ~ Char
setEvBind
  ev = cobox_a122
  tm  = CO [cobox_a124]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a124 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a124
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a123 :: String
                                 ~ String [" a type equality t_aDB
                                                             ~
                                                             t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a123 :: String
                                  ~ String [" a type equality t_aDB
                                                              ~
                                                              t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a123 :: String ~ String [" a type equality t_aDB
                                                       ~
                                                       t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a123 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a123 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a123 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a125 :: Char ~ Char
setEvBind
  ev = cobox_a123
  tm  = CO [cobox_a125]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a125 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a125
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPK :: [HTML]
                                ~ [a_aPE] [" a type equality [HTML]
                                                             ~
                                                             [a_aPE] " HTML3.hs:25:93-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPK :: [HTML]
                                 ~ [a_aPE] [" a type equality [HTML]
                                                              ~
                                                              [a_aPE] " HTML3.hs:25:93-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPK :: [HTML] ~ [a_aPE] [" a type equality [HTML]
                                                       ~
                                                       [a_aPE] " HTML3.hs:25:93-97] (CNonCanonical)
canEvNC:eq
  [HTML]
  [a_aPE]
can_eq_nc
  [W] cobox_aPK :: [HTML] ~ [a_aPE]
  [HTML]
  [HTML]
  [a_aPE]
  [a_aPE]
newWantedEvVar/cache miss [W] cobox_a126 :: HTML ~ a_aPE
setEvBind
  ev = cobox_aPK
  tm  = CO [cobox_a126]_N
canEvNC:eq
  HTML
  a_aPE
can_eq_nc
  [W] cobox_a126 :: HTML ~ a_aPE
  HTML
  HTML
  a_aPE
  a_aPE
canEqTyVar
  a_aPE
  HTML
  Is-swapped
Following bound tyvar a_aPE = HTML
newWantedEvVar/cache miss [W] cobox_a127 :: HTML ~ HTML
setEvBind
  ev = cobox_a126
  tm  = CO Sym cobox_a127
rewriteEqEvidence
  [W] cobox_a126 :: HTML ~ a_aPE
  HTML
  HTML
  Sym cobox_a127
canEqTyVar2
  a_aPE
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a127 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a127
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPM :: t_aDp
                                ~ t_aDv [" a type equality t_aDp
                                                           ~
                                                           t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPM :: t_aDp
                                 ~ t_aDv [" a type equality t_aDp
                                                            ~
                                                            t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPM :: t_aDp ~ t_aDv [" a type equality t_aDp
                                                    ~
                                                    t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
canEvNC:eq
  t_aDp
  t_aDv
can_eq_nc
  [W] cobox_aPM :: t_aDp ~ t_aDv
  t_aDp
  t_aDp
  t_aDv
  t_aDv
canEqTyVar
  t_aDp
  t_aDv
  Not-swapped
Following bound tyvar t_aDp = Maybe Requirement
canEqTyVar2
  t_aDp
  t_aDv
  Not-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aPM :: Maybe Requirement ~ t_aDv
  Maybe Requirement
  Maybe Requirement
  t_aDv
  t_aDv
canEqTyVar
  t_aDv
  Maybe Requirement
  Is-swapped
Following bound tyvar t_aDv = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a128 :: Maybe Requirement ~ Maybe Requirement
setEvBind
  ev = cobox_aPM
  tm  = CO Sym cobox_a128
rewriteEqEvidence
  [W] cobox_aPM :: Maybe Requirement ~ t_aDv
  Maybe Requirement
  Maybe Requirement
  Sym cobox_a128
canEqTyVar2
  t_aDv
  Maybe Requirement
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a128 :: Maybe Requirement ~ Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a129 :: Requirement ~ Requirement
setEvBind
  ev = cobox_a128
  tm  = CO Maybe cobox_a129_N
canEvNC:eq
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a129 :: Requirement ~ Requirement
  Requirement
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a129 :: Requirement ~ Requirement
  (String, String)
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a129 :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_a12a :: String ~ String
newWantedEvVar/cache miss [W] cobox_a12b :: String ~ String
setEvBind
  ev = cobox_a129
  tm  = CO (cobox_a12a, cobox_a12b)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a12a :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a12a :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a12a :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a12c :: Char ~ Char
setEvBind
  ev = cobox_a12a
  tm  = CO [cobox_a12c]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a12c :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a12c
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a12b :: String
                                 ~ String [" a type equality t_aDp
                                                             ~
                                                             t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a12b :: String
                                  ~ String [" a type equality t_aDp
                                                              ~
                                                              t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a12b :: String ~ String [" a type equality t_aDp
                                                       ~
                                                       t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a12b :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a12b :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a12b :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a12d :: Char ~ Char
setEvBind
  ev = cobox_a12b
  tm  = CO [cobox_a12d]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a12d :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a12d
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPP :: [b_aPO]
                                ~ t_aDo [" a type equality [b_aPO]
                                                           ~
                                                           t_aDo " HTML3.hs:28:30-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPP :: [b_aPO]
                                 ~ t_aDo [" a type equality [b_aPO]
                                                            ~
                                                            t_aDo " HTML3.hs:28:30-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPP :: [b_aPO] ~ t_aDo [" a type equality [b_aPO]
                                                      ~
                                                      t_aDo " HTML3.hs:28:30-53] (CNonCanonical)
canEvNC:eq
  [b_aPO]
  t_aDo
can_eq_nc
  [W] cobox_aPP :: [b_aPO] ~ t_aDo
  [b_aPO]
  [b_aPO]
  t_aDo
  t_aDo
canEqTyVar
  t_aDo
  [b_aPO]
  Is-swapped
Following bound tyvar t_aDo = [Maybe Requirement]
newWantedEvVar/cache miss
  [W] cobox_a12e :: [Maybe Requirement] ~ [b_aPO]
setEvBind
  ev = cobox_aPP
  tm  = CO Sym cobox_a12e
rewriteEqEvidence
  [W] cobox_aPP :: [b_aPO] ~ t_aDo
  [Maybe Requirement]
  [b_aPO]
  Sym cobox_a12e
canEqTyVar2
  t_aDo
  [b_aPO]
  Is-swapped
  [Maybe Requirement]
  <[Maybe Requirement]>_N
can_eq_nc
  [W] cobox_a12e :: [Maybe Requirement] ~ [b_aPO]
  [Maybe Requirement]
  [Maybe Requirement]
  [b_aPO]
  [b_aPO]
newWantedEvVar/cache miss
  [W] cobox_a12f :: Maybe Requirement ~ b_aPO
setEvBind
  ev = cobox_a12e
  tm  = CO [cobox_a12f]_N
canEvNC:eq
  Maybe Requirement
  b_aPO
can_eq_nc
  [W] cobox_a12f :: Maybe Requirement ~ b_aPO
  Maybe Requirement
  Maybe Requirement
  b_aPO
  b_aPO
canEqTyVar
  b_aPO
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_a12g :: b_aPO ~ Maybe Requirement
setEvBind
  ev = cobox_a12f
  tm  = CO Sym cobox_a12g
rewriteEqEvidence
  [W] cobox_a12f :: Maybe Requirement ~ b_aPO
  b_aPO
  Maybe Requirement
  Sym cobox_a12g
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a12g :: b_aPO
                                  ~ Maybe Requirement [" a type equality [b_aPO]
                                                                         ~
                                                                         t_aDo " HTML3.hs:28:30-53] (CTyEqCan)
Sneaky unification:
  Unifies: b_aPO := Maybe Requirement
  Coercion: b_aPO ~ Maybe Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aPO := Maybe Requirement
setEvBind
  ev = cobox_a12g
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  b_aPO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
478[<C:0,F:0>] [W] cobox_a12g :: b_aPO
                                 ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPQ :: (t_aDB -> t_aDC)
                                ~ (a_aPN -> b_aPO) [" a type equality t_aDB -> t_aDC
                                                                      ~
                                                                      a_aPN
                                                                      -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPQ :: (t_aDB -> t_aDC)
                                 ~ (a_aPN -> b_aPO) [" a type equality t_aDB -> t_aDC
                                                                       ~
                                                                       a_aPN
                                                                       -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPQ :: (t_aDB -> t_aDC)
                   ~ (a_aPN -> b_aPO) [" a type equality t_aDB -> t_aDC
                                                         ~
                                                         a_aPN
                                                         -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
canEvNC:eq
  t_aDB -> t_aDC
  a_aPN -> b_aPO
can_eq_nc
  [W] cobox_aPQ :: (t_aDB -> t_aDC) ~ (a_aPN -> b_aPO)
  t_aDB -> t_aDC
  t_aDB -> t_aDC
  a_aPN -> b_aPO
  a_aPN -> b_aPO
newWantedEvVar/cache miss [W] cobox_a12h :: t_aDB ~ a_aPN
newWantedEvVar/cache miss [W] cobox_a12i :: t_aDC ~ b_aPO
setEvBind
  ev = cobox_aPQ
  tm  = CO cobox_a12h -> cobox_a12i
canEvNC:eq
  t_aDB
  a_aPN
can_eq_nc
  [W] cobox_a12h :: t_aDB ~ a_aPN
  t_aDB
  t_aDB
  a_aPN
  a_aPN
canEqTyVar
  t_aDB
  a_aPN
  Not-swapped
Following bound tyvar t_aDB = Requirement
canEqTyVar2
  t_aDB
  a_aPN
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_a12h :: Requirement ~ a_aPN
  Requirement
  Requirement
  a_aPN
  a_aPN
can_eq_nc
  [W] cobox_a12h :: Requirement ~ a_aPN
  (String, String)
  Requirement
  a_aPN
  a_aPN
canEqTyVar
  a_aPN
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_a12j :: a_aPN ~ Requirement
setEvBind
  ev = cobox_a12h
  tm  = CO Sym cobox_a12j
rewriteEqEvidence
  [W] cobox_a12h :: Requirement ~ a_aPN
  a_aPN
  Requirement
  Sym cobox_a12j
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_a12j :: a_aPN
                                  ~ Requirement [" a type equality t_aDB -> t_aDC
                                                                   ~
                                                                   a_aPN
                                                                   -> b_aPO " HTML3.hs:28:35-47] (CTyEqCan)
Sneaky unification:
  Unifies: a_aPN := Requirement
  Coercion: a_aPN ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aPN := Requirement
setEvBind
  ev = cobox_a12j
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aPN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
479[<C:0,F:0>] [W] cobox_a12j :: a_aPN
                                 ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a12i :: t_aDC
                                 ~ b_aPO [" a type equality t_aDB -> t_aDC
                                                            ~
                                                            a_aPN
                                                            -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a12i :: t_aDC
                                  ~ b_aPO [" a type equality t_aDB -> t_aDC
                                                             ~
                                                             a_aPN
                                                             -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a12i :: t_aDC ~ b_aPO [" a type equality t_aDB -> t_aDC
                                                     ~
                                                     a_aPN
                                                     -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
canEvNC:eq
  t_aDC
  b_aPO
can_eq_nc
  [W] cobox_a12i :: t_aDC ~ b_aPO
  t_aDC
  t_aDC
  b_aPO
  b_aPO
canEqTyVar
  t_aDC
  b_aPO
  Not-swapped
Following bound tyvar t_aDC = Maybe Requirement
canEqTyVar2
  t_aDC
  b_aPO
  Not-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a12i :: Maybe Requirement ~ b_aPO
  Maybe Requirement
  Maybe Requirement
  b_aPO
  b_aPO
canEqTyVar
  b_aPO
  Maybe Requirement
  Is-swapped
Following bound tyvar b_aPO = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a12k :: Maybe Requirement ~ Maybe Requirement
setEvBind
  ev = cobox_a12i
  tm  = CO Sym cobox_a12k
rewriteEqEvidence
  [W] cobox_a12i :: Maybe Requirement ~ b_aPO
  Maybe Requirement
  Maybe Requirement
  Sym cobox_a12k
canEqTyVar2
  b_aPO
  Maybe Requirement
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_a12k :: Maybe Requirement ~ Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_a12l :: Requirement ~ Requirement
setEvBind
  ev = cobox_a12k
  tm  = CO Maybe cobox_a12l_N
canEvNC:eq
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a12l :: Requirement ~ Requirement
  Requirement
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a12l :: Requirement ~ Requirement
  (String, String)
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_a12l :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_a12m :: String ~ String
newWantedEvVar/cache miss [W] cobox_a12n :: String ~ String
setEvBind
  ev = cobox_a12l
  tm  = CO (cobox_a12m, cobox_a12n)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a12m :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a12m :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a12m :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a12o :: Char ~ Char
setEvBind
  ev = cobox_a12m
  tm  = CO [cobox_a12o]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a12o :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a12o
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a12n :: String
                                 ~ String [" a type equality t_aDB -> t_aDC
                                                             ~
                                                             a_aPN
                                                             -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a12n :: String
                                  ~ String [" a type equality t_aDB -> t_aDC
                                                              ~
                                                              a_aPN
                                                              -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a12n :: String ~ String [" a type equality t_aDB -> t_aDC
                                                       ~
                                                       a_aPN
                                                       -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a12n :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a12n :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a12n :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a12p :: Char ~ Char
setEvBind
  ev = cobox_a12n
  tm  = CO [cobox_a12p]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a12p :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a12p
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPR :: t_aDu
                                ~ t_aDA [" a type equality t_aDu
                                                           ~
                                                           t_aDA " HTML3.hs:28:44-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPR :: t_aDu
                                 ~ t_aDA [" a type equality t_aDu
                                                            ~
                                                            t_aDA " HTML3.hs:28:44-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPR :: t_aDu ~ t_aDA [" a type equality t_aDu
                                                    ~
                                                    t_aDA " HTML3.hs:28:44-47] (CNonCanonical)
canEvNC:eq
  t_aDu
  t_aDA
can_eq_nc
  [W] cobox_aPR :: t_aDu ~ t_aDA
  t_aDu
  t_aDu
  t_aDA
  t_aDA
canEqTyVar
  t_aDu
  t_aDA
  Not-swapped
Following bound tyvar t_aDu = HTML
canEqTyVar2
  t_aDu
  t_aDA
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aPR :: HTML ~ t_aDA
  HTML
  HTML
  t_aDA
  t_aDA
canEqTyVar
  t_aDA
  HTML
  Is-swapped
Following bound tyvar t_aDA = HTML
newWantedEvVar/cache miss [W] cobox_a12q :: HTML ~ HTML
setEvBind
  ev = cobox_aPR
  tm  = CO Sym cobox_a12q
rewriteEqEvidence
  [W] cobox_aPR :: HTML ~ t_aDA
  HTML
  HTML
  Sym cobox_a12q
canEqTyVar2
  t_aDA
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_a12q :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_a12q
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aPS :: t_aDt
                                ~ [a_aPN] [" a type equality t_aDt
                                                             ~
                                                             [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aPS :: t_aDt
                                 ~ [a_aPN] [" a type equality t_aDt
                                                              ~
                                                              [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aPS :: t_aDt ~ [a_aPN] [" a type equality t_aDt
                                                      ~
                                                      [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)
canEvNC:eq
  t_aDt
  [a_aPN]
can_eq_nc
  [W] cobox_aPS :: t_aDt ~ [a_aPN]
  t_aDt
  t_aDt
  [a_aPN]
  [a_aPN]
canEqTyVar
  t_aDt
  [a_aPN]
  Not-swapped
Following bound tyvar t_aDt = [Requirement]
canEqTyVar2
  t_aDt
  [a_aPN]
  Not-swapped
  [Requirement]
  <[Requirement]>_N
can_eq_nc
  [W] cobox_aPS :: [Requirement] ~ [a_aPN]
  [Requirement]
  [Requirement]
  [a_aPN]
  [a_aPN]
newWantedEvVar/cache miss [W] cobox_a12r :: Requirement ~ a_aPN
setEvBind
  ev = cobox_aPS
  tm  = CO [cobox_a12r]_N
canEvNC:eq
  Requirement
  a_aPN
can_eq_nc
  [W] cobox_a12r :: Requirement ~ a_aPN
  Requirement
  Requirement
  a_aPN
  a_aPN
can_eq_nc
  [W] cobox_a12r :: Requirement ~ a_aPN
  (String, String)
  Requirement
  a_aPN
  a_aPN
canEqTyVar
  a_aPN
  (String, String)
  Is-swapped
Following bound tyvar a_aPN = Requirement
newWantedEvVar/cache miss
  [W] cobox_a12s :: Requirement ~ Requirement
setEvBind
  ev = cobox_a12r
  tm  = CO Sym cobox_a12s
rewriteEqEvidence
  [W] cobox_a12r :: Requirement ~ a_aPN
  Requirement
  Requirement
  Sym cobox_a12s
canEqTyVar2
  a_aPN
  (String, String)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_a12s :: Requirement ~ Requirement
  Requirement
  Requirement
  (String, String)
  Requirement
can_eq_nc
  [W] cobox_a12s :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_a12t :: String ~ String
newWantedEvVar/cache miss [W] cobox_a12u :: String ~ String
setEvBind
  ev = cobox_a12s
  tm  = CO (cobox_a12t, cobox_a12u)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a12t :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a12t :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a12t :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a12v :: Char ~ Char
setEvBind
  ev = cobox_a12t
  tm  = CO [cobox_a12v]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a12v :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a12v
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_a12u :: String
                                 ~ String [" a type equality t_aDt
                                                             ~
                                                             [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_a12u :: String
                                  ~ String [" a type equality t_aDt
                                                              ~
                                                              [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_a12u :: String ~ String [" a type equality t_aDt
                                                       ~
                                                       [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_a12u :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_a12u :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_a12u :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_a12w :: Char ~ Char
setEvBind
  ev = cobox_a12u
  tm  = CO [cobox_a12w]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_a12w :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_a12w
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dEq_aGz :: Eq
                                 a_aGy [" a use of ‘==’ " HTML3.hs:51:50-51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dEq_aGz :: Eq
                                  a_aGy [" a use of ‘==’ " HTML3.hs:51:50-51] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dEq_aGz :: Eq
                    a_aGy [" a use of ‘==’ " HTML3.hs:51:50-51] (CNonCanonical)
canEvNC:cls Eq [a_aGy]
Following bound tyvar a_aGy = Int
canClass
  [W] $dEq_aGz :: Eq a_aGy Eq [a_aGy]
  Eq Int
  Just [W] $dEq_aGz :: Eq Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dEq_aGz :: Eq
                                  Int [" a use of ‘==’ " HTML3.hs:51:50-51] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dEq_aGz :: Eq
                                  Int [" a use of ‘==’ " HTML3.hs:51:50-51] (CDictCan)
doTopReact
  [W] $dEq_aGz :: Eq
                    Int [" a use of ‘==’ " HTML3.hs:51:50-51] (CDictCan)
matchClassInst
  pred = Eq Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries:
          Irreds:
          Insolubles = {[W] cobox_aG2 :: HTML
                                         ~ [HTML] [" a type equality HTML
                                                                     ~
                                                                     [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
          Solved dicts 0
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Eq Int
  witness GHC.Classes.$fEqInt Eq Int
updSolvedSetTcs: [W] $dEq_aGz :: Eq Int
doTopReact/found nullary instance for $dEq_aGz
setEvBind
  ev = $dEq_aGz
  tm  = GHC.Classes.$fEqInt @[] []
485[<C:0,F:0>] [W] $dEq_aGz :: Eq
                                 Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 1
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aGF :: Num
                                  a_aGE [" the literal ‘0’ " HTML3.hs:51:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 1
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aGF :: Num
                                   a_aGE [" the literal ‘0’ " HTML3.hs:51:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aGF :: Num
                     a_aGE [" the literal ‘0’ " HTML3.hs:51:53] (CNonCanonical)
canEvNC:cls Num [a_aGE]
Following bound tyvar a_aGE = Int
canClass
  [W] $dNum_aGF :: Num a_aGE Num [a_aGE]
  Num Int
  Just [W] $dNum_aGF :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aGF :: Num
                                   Int [" the literal ‘0’ " HTML3.hs:51:53] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aGF :: Num
                                   Int [" the literal ‘0’ " HTML3.hs:51:53] (CDictCan)
doTopReact
  [W] $dNum_aGF :: Num
                     Int [" the literal ‘0’ " HTML3.hs:51:53] (CDictCan)
matchClassInst
  pred = Num Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries:
          Irreds:
          Insolubles = {[W] cobox_aG2 :: HTML
                                         ~ [HTML] [" a type equality HTML
                                                                     ~
                                                                     [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
          Solved dicts 1
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Num Int
  witness GHC.Num.$fNumInt Num Int
updSolvedSetTcs: [W] $dNum_aGF :: Num Int
doTopReact/found nullary instance for $dNum_aGF
setEvBind
  ev = $dNum_aGF
  tm  = GHC.Num.$fNumInt @[] []
486[<C:0,F:0>] [W] $dNum_aGF :: Num
                                  Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dEq_aH0 :: Eq
                                 a_aGZ [" a use of ‘==’ " HTML3.hs:52:50-51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dEq_aH0 :: Eq
                                  a_aGZ [" a use of ‘==’ " HTML3.hs:52:50-51] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dEq_aH0 :: Eq
                    a_aGZ [" a use of ‘==’ " HTML3.hs:52:50-51] (CNonCanonical)
canEvNC:cls Eq [a_aGZ]
Following bound tyvar a_aGZ = Int
canClass
  [W] $dEq_aH0 :: Eq a_aGZ Eq [a_aGZ]
  Eq Int
  Just [W] $dEq_aH0 :: Eq Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dEq_aH0 :: Eq
                                  Int [" a use of ‘==’ " HTML3.hs:52:50-51] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dEq_aH0 :: Eq
                                  Int [" a use of ‘==’ " HTML3.hs:52:50-51] (CDictCan)
doTopReact
  [W] $dEq_aH0 :: Eq
                    Int [" a use of ‘==’ " HTML3.hs:52:50-51] (CDictCan)
setEvBind
  ev = $dEq_aH0
  tm  = $dEq_aGz
487[<C:0,F:0>] [W] $dEq_aH0 :: Eq Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aH6 :: Num
                                  a_aH5 [" the literal ‘1’ " HTML3.hs:52:53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aH6 :: Num
                                   a_aH5 [" the literal ‘1’ " HTML3.hs:52:53] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aH6 :: Num
                     a_aH5 [" the literal ‘1’ " HTML3.hs:52:53] (CNonCanonical)
canEvNC:cls Num [a_aH5]
Following bound tyvar a_aH5 = Int
canClass
  [W] $dNum_aH6 :: Num a_aH5 Num [a_aH5]
  Num Int
  Just [W] $dNum_aH6 :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aH6 :: Num
                                   Int [" the literal ‘1’ " HTML3.hs:52:53] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aH6 :: Num
                                   Int [" the literal ‘1’ " HTML3.hs:52:53] (CDictCan)
doTopReact
  [W] $dNum_aH6 :: Num
                     Int [" the literal ‘1’ " HTML3.hs:52:53] (CDictCan)
setEvBind
  ev = $dNum_aH6
  tm  = $dNum_aGF
488[<C:0,F:0>] [W] $dNum_aH6 :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dOrd_aJx :: Ord
                                  a_aJw [" a use of ‘<’ " HTML3.hs:73:25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 2
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dOrd_aJx :: Ord
                                   a_aJw [" a use of ‘<’ " HTML3.hs:73:25] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dOrd_aJx :: Ord
                     a_aJw [" a use of ‘<’ " HTML3.hs:73:25] (CNonCanonical)
canEvNC:cls Ord [a_aJw]
Following bound tyvar a_aJw = Int
canClass
  [W] $dOrd_aJx :: Ord a_aJw Ord [a_aJw]
  Ord Int
  Just [W] $dOrd_aJx :: Ord Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dOrd_aJx :: Ord
                                   Int [" a use of ‘<’ " HTML3.hs:73:25] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dOrd_aJx :: Ord
                                   Int [" a use of ‘<’ " HTML3.hs:73:25] (CDictCan)
doTopReact
  [W] $dOrd_aJx :: Ord
                     Int [" a use of ‘<’ " HTML3.hs:73:25] (CDictCan)
matchClassInst
  pred = Ord Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries:
          Irreds:
          Insolubles = {[W] cobox_aG2 :: HTML
                                         ~ [HTML] [" a type equality HTML
                                                                     ~
                                                                     [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
          Solved dicts 2
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Ord Int
  witness GHC.Classes.$fOrdInt Ord Int
updSolvedSetTcs: [W] $dOrd_aJx :: Ord Int
doTopReact/found nullary instance for $dOrd_aJx
setEvBind
  ev = $dOrd_aJx
  tm  = GHC.Classes.$fOrdInt @[] []
489[<C:0,F:0>] [W] $dOrd_aJx :: Ord
                                  Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aJB :: Num
                                  a_aJA [" the literal ‘10’ " HTML3.hs:73:27-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aJB :: Num
                                   a_aJA [" the literal ‘10’ " HTML3.hs:73:27-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aJB :: Num
                     a_aJA [" the literal ‘10’ " HTML3.hs:73:27-28] (CNonCanonical)
canEvNC:cls Num [a_aJA]
Following bound tyvar a_aJA = Int
canClass
  [W] $dNum_aJB :: Num a_aJA Num [a_aJA]
  Num Int
  Just [W] $dNum_aJB :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aJB :: Num
                                   Int [" the literal ‘10’ " HTML3.hs:73:27-28] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aJB :: Num
                                   Int [" the literal ‘10’ " HTML3.hs:73:27-28] (CDictCan)
doTopReact
  [W] $dNum_aJB :: Num
                     Int [" the literal ‘10’ " HTML3.hs:73:27-28] (CDictCan)
setEvBind
  ev = $dNum_aJB
  tm  = $dNum_aGF
490[<C:0,F:0>] [W] $dNum_aJB :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aJK :: Num
                                  a_aJJ [" a use of ‘+’ " HTML3.hs:74:44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aJK :: Num
                                   a_aJJ [" a use of ‘+’ " HTML3.hs:74:44] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aJK :: Num
                     a_aJJ [" a use of ‘+’ " HTML3.hs:74:44] (CNonCanonical)
canEvNC:cls Num [a_aJJ]
Following bound tyvar a_aJJ = Int
canClass
  [W] $dNum_aJK :: Num a_aJJ Num [a_aJJ]
  Num Int
  Just [W] $dNum_aJK :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aJK :: Num
                                   Int [" a use of ‘+’ " HTML3.hs:74:44] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aJK :: Num
                                   Int [" a use of ‘+’ " HTML3.hs:74:44] (CDictCan)
doTopReact
  [W] $dNum_aJK :: Num
                     Int [" a use of ‘+’ " HTML3.hs:74:44] (CDictCan)
setEvBind
  ev = $dNum_aJK
  tm  = $dNum_aGF
491[<C:0,F:0>] [W] $dNum_aJK :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aJO :: Num
                                  a_aJN [" the literal ‘55’ " HTML3.hs:74:46-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aJO :: Num
                                   a_aJN [" the literal ‘55’ " HTML3.hs:74:46-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aJO :: Num
                     a_aJN [" the literal ‘55’ " HTML3.hs:74:46-47] (CNonCanonical)
canEvNC:cls Num [a_aJN]
Following bound tyvar a_aJN = Int
canClass
  [W] $dNum_aJO :: Num a_aJN Num [a_aJN]
  Num Int
  Just [W] $dNum_aJO :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aJO :: Num
                                   Int [" the literal ‘55’ " HTML3.hs:74:46-47] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aJO :: Num
                                   Int [" the literal ‘55’ " HTML3.hs:74:46-47] (CDictCan)
doTopReact
  [W] $dNum_aJO :: Num
                     Int [" the literal ‘55’ " HTML3.hs:74:46-47] (CDictCan)
setEvBind
  ev = $dNum_aJO
  tm  = $dNum_aGF
492[<C:0,F:0>] [W] $dNum_aJO :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dFractional_aK7 :: Fractional
                                         a_aK6 [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dFractional_aK7 :: Fractional
                                          a_aK6 [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dFractional_aK7 :: Fractional
                            a_aK6 [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
canEvNC:cls Fractional [a_aK6]
Following bound tyvar a_aK6 = Int
canClass
  [W] $dFractional_aK7 :: Fractional a_aK6 Fractional [a_aK6]
  Fractional Int
  Just [W] $dFractional_aK7 :: Fractional Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dFractional_aK7 :: Fractional
                                          Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dFractional_aK7 :: Fractional
                                          Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
doTopReact
  [W] $dFractional_aK7 :: Fractional
                            Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
matchClassInst
  pred = Fractional Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries:
          Irreds:
          Insolubles = {[W] cobox_aG2 :: HTML
                                         ~ [HTML] [" a type equality HTML
                                                                     ~
                                                                     [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
          Solved dicts 3
          Solved funeqs 0
  untouchables= 0
matchClass not matching dict Fractional Int
end stage top-level reactions }
493[<C:0,F:0>] [W] $dFractional_aK7 :: Fractional
                                         Int: Kept as inert
End solver pipeline (not discharged) }
  final_item =  [W] $dFractional_aK7 :: Fractional
                                          Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
  inerts     =  Equalities:
                Type-function equalities:
                No-eqs: True
                Dictionaries:
                Irreds:
                Insolubles = {[W] cobox_aG2 :: HTML
                                               ~ [HTML] [" a type equality HTML
                                                                           ~
                                                                           [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
                Solved dicts 3
                Solved funeqs 0
insertInertItemTcS {
  Trying to insert new inert item: [W] $dFractional_aK7 :: Fractional
                                                             Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
insertInertItemTcS }
Start solver pipeline {
  work item =  [W] $dNum_aKb :: Num
                                  a_aKa [" the literal ‘16’ " HTML3.hs:70:54-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aKb :: Num
                                   a_aKa [" the literal ‘16’ " HTML3.hs:70:54-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aKb :: Num
                     a_aKa [" the literal ‘16’ " HTML3.hs:70:54-55] (CNonCanonical)
canEvNC:cls Num [a_aKa]
Following bound tyvar a_aKa = Int
canClass
  [W] $dNum_aKb :: Num a_aKa Num [a_aKa]
  Num Int
  Just [W] $dNum_aKb :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aKb :: Num
                                   Int [" the literal ‘16’ " HTML3.hs:70:54-55] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aKb :: Num
                                   Int [" the literal ‘16’ " HTML3.hs:70:54-55] (CDictCan)
doTopReact
  [W] $dNum_aKb :: Num
                     Int [" the literal ‘16’ " HTML3.hs:70:54-55] (CDictCan)
setEvBind
  ev = $dNum_aKb
  tm  = $dNum_aGF
494[<C:0,F:0>] [W] $dNum_aKb :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dIntegral_aKs :: Integral
                                       a_aKr [" a use of ‘rem’ " HTML3.hs:70:78-82] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 3
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dIntegral_aKs :: Integral
                                        a_aKr [" a use of ‘rem’ " HTML3.hs:70:78-82] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dIntegral_aKs :: Integral
                          a_aKr [" a use of ‘rem’ " HTML3.hs:70:78-82] (CNonCanonical)
canEvNC:cls Integral [a_aKr]
Following bound tyvar a_aKr = Int
canClass
  [W] $dIntegral_aKs :: Integral a_aKr Integral [a_aKr]
  Integral Int
  Just [W] $dIntegral_aKs :: Integral Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dIntegral_aKs :: Integral
                                        Int [" a use of ‘rem’ " HTML3.hs:70:78-82] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dIntegral_aKs :: Integral
                                        Int [" a use of ‘rem’ " HTML3.hs:70:78-82] (CDictCan)
doTopReact
  [W] $dIntegral_aKs :: Integral
                          Int [" a use of ‘rem’ " HTML3.hs:70:78-82] (CDictCan)
matchClassInst
  pred = Integral Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                  Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
          Irreds:
          Insolubles = {[W] cobox_aG2 :: HTML
                                         ~ [HTML] [" a type equality HTML
                                                                     ~
                                                                     [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
          Solved dicts 3
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Integral Int
  witness GHC.Real.$fIntegralInt Integral Int
updSolvedSetTcs: [W] $dIntegral_aKs :: Integral Int
doTopReact/found nullary instance for $dIntegral_aKs
setEvBind
  ev = $dIntegral_aKs
  tm  = GHC.Real.$fIntegralInt @[] []
495[<C:0,F:0>] [W] $dIntegral_aKs :: Integral
                                       Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aKw :: Num
                                  a_aKv [" the literal ‘16’ " HTML3.hs:70:84-85] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aKw :: Num
                                   a_aKv [" the literal ‘16’ " HTML3.hs:70:84-85] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aKw :: Num
                     a_aKv [" the literal ‘16’ " HTML3.hs:70:84-85] (CNonCanonical)
canEvNC:cls Num [a_aKv]
Following bound tyvar a_aKv = Int
canClass
  [W] $dNum_aKw :: Num a_aKv Num [a_aKv]
  Num Int
  Just [W] $dNum_aKw :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aKw :: Num
                                   Int [" the literal ‘16’ " HTML3.hs:70:84-85] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aKw :: Num
                                   Int [" the literal ‘16’ " HTML3.hs:70:84-85] (CDictCan)
doTopReact
  [W] $dNum_aKw :: Num
                     Int [" the literal ‘16’ " HTML3.hs:70:84-85] (CDictCan)
setEvBind
  ev = $dNum_aKw
  tm  = $dNum_aGF
496[<C:0,F:0>] [W] $dNum_aKw :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aLG :: Num
                                  a_aLF [" the literal ‘1’ " HTML3.hs:110:44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aLG :: Num
                                   a_aLF [" the literal ‘1’ " HTML3.hs:110:44] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aLG :: Num
                     a_aLF [" the literal ‘1’ " HTML3.hs:110:44] (CNonCanonical)
canEvNC:cls Num [a_aLF]
Following bound tyvar a_aLF = Int
canClass
  [W] $dNum_aLG :: Num a_aLF Num [a_aLF]
  Num Int
  Just [W] $dNum_aLG :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aLG :: Num
                                   Int [" the literal ‘1’ " HTML3.hs:110:44] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aLG :: Num
                                   Int [" the literal ‘1’ " HTML3.hs:110:44] (CDictCan)
doTopReact
  [W] $dNum_aLG :: Num
                     Int [" the literal ‘1’ " HTML3.hs:110:44] (CDictCan)
setEvBind
  ev = $dNum_aLG
  tm  = $dNum_aGF
497[<C:0,F:0>] [W] $dNum_aLG :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aMF :: Num
                                  a_aME [" the literal ‘0’ " HTML3.hs:112:70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aMF :: Num
                                   a_aME [" the literal ‘0’ " HTML3.hs:112:70] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aMF :: Num
                     a_aME [" the literal ‘0’ " HTML3.hs:112:70] (CNonCanonical)
canEvNC:cls Num [a_aME]
Following bound tyvar a_aME = a_aMH
Following bound tyvar a_aMH = a_aMK
Following bound tyvar a_aMK = Int
canClass
  [W] $dNum_aMF :: Num a_aME Num [a_aME]
  Num Int
  Just [W] $dNum_aMF :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aMF :: Num
                                   Int [" the literal ‘0’ " HTML3.hs:112:70] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aMF :: Num
                                   Int [" the literal ‘0’ " HTML3.hs:112:70] (CDictCan)
doTopReact
  [W] $dNum_aMF :: Num
                     Int [" the literal ‘0’ " HTML3.hs:112:70] (CDictCan)
setEvBind
  ev = $dNum_aMF
  tm  = $dNum_aGF
498[<C:0,F:0>] [W] $dNum_aMF :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aMI :: Num
                                  a_aMH [" the literal ‘25’ " HTML3.hs:112:72-73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aMI :: Num
                                   a_aMH [" the literal ‘25’ " HTML3.hs:112:72-73] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aMI :: Num
                     a_aMH [" the literal ‘25’ " HTML3.hs:112:72-73] (CNonCanonical)
canEvNC:cls Num [a_aMH]
Following bound tyvar a_aMH = a_aMK
Following bound tyvar a_aMK = Int
canClass
  [W] $dNum_aMI :: Num a_aMH Num [a_aMH]
  Num Int
  Just [W] $dNum_aMI :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aMI :: Num
                                   Int [" the literal ‘25’ " HTML3.hs:112:72-73] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aMI :: Num
                                   Int [" the literal ‘25’ " HTML3.hs:112:72-73] (CDictCan)
doTopReact
  [W] $dNum_aMI :: Num
                     Int [" the literal ‘25’ " HTML3.hs:112:72-73] (CDictCan)
setEvBind
  ev = $dNum_aMI
  tm  = $dNum_aGF
499[<C:0,F:0>] [W] $dNum_aMI :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aML :: Num
                                  a_aMK [" the literal ‘250’ " HTML3.hs:112:76-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aML :: Num
                                   a_aMK [" the literal ‘250’ " HTML3.hs:112:76-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aML :: Num
                     a_aMK [" the literal ‘250’ " HTML3.hs:112:76-78] (CNonCanonical)
canEvNC:cls Num [a_aMK]
Following bound tyvar a_aMK = Int
canClass
  [W] $dNum_aML :: Num a_aMK Num [a_aMK]
  Num Int
  Just [W] $dNum_aML :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aML :: Num
                                   Int [" the literal ‘250’ " HTML3.hs:112:76-78] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aML :: Num
                                   Int [" the literal ‘250’ " HTML3.hs:112:76-78] (CDictCan)
doTopReact
  [W] $dNum_aML :: Num
                     Int [" the literal ‘250’ " HTML3.hs:112:76-78] (CDictCan)
setEvBind
  ev = $dNum_aML
  tm  = $dNum_aGF
500[<C:0,F:0>] [W] $dNum_aML :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dEnum_aOJ :: Enum
                                   t_aMD [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 4
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dEnum_aOJ :: Enum
                                    t_aMD [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dEnum_aOJ :: Enum
                      t_aMD [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CNonCanonical)
canEvNC:cls Enum [t_aMD]
Following bound tyvar t_aMD = a_aME
Following bound tyvar a_aME = a_aMH
Following bound tyvar a_aMH = a_aMK
Following bound tyvar a_aMK = Int
canClass
  [W] $dEnum_aOJ :: Enum t_aMD Enum [t_aMD]
  Enum Int
  Just [W] $dEnum_aOJ :: Enum Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dEnum_aOJ :: Enum
                                    Int [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dEnum_aOJ :: Enum
                                    Int [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CDictCan)
doTopReact
  [W] $dEnum_aOJ :: Enum
                      Int [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CDictCan)
matchClassInst
  pred = Enum Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                  Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
          Irreds:
          Insolubles = {[W] cobox_aG2 :: HTML
                                         ~ [HTML] [" a type equality HTML
                                                                     ~
                                                                     [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
          Solved dicts 4
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Enum Int
  witness GHC.Enum.$fEnumInt Enum Int
updSolvedSetTcs: [W] $dEnum_aOJ :: Enum Int
doTopReact/found nullary instance for $dEnum_aOJ
setEvBind
  ev = $dEnum_aOJ
  tm  = GHC.Enum.$fEnumInt @[] []
501[<C:0,F:0>] [W] $dEnum_aOJ :: Enum
                                   Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aOM :: Num
                                  a_aOL [" the literal ‘0’ " HTML3.hs:112:88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aOM :: Num
                                   a_aOL [" the literal ‘0’ " HTML3.hs:112:88] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aOM :: Num
                     a_aOL [" the literal ‘0’ " HTML3.hs:112:88] (CNonCanonical)
canEvNC:cls Num [a_aOL]
Following bound tyvar a_aOL = a_aOO
Following bound tyvar a_aOO = a_aOR
Following bound tyvar a_aOR = Int
canClass
  [W] $dNum_aOM :: Num a_aOL Num [a_aOL]
  Num Int
  Just [W] $dNum_aOM :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aOM :: Num
                                   Int [" the literal ‘0’ " HTML3.hs:112:88] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aOM :: Num
                                   Int [" the literal ‘0’ " HTML3.hs:112:88] (CDictCan)
doTopReact
  [W] $dNum_aOM :: Num
                     Int [" the literal ‘0’ " HTML3.hs:112:88] (CDictCan)
setEvBind
  ev = $dNum_aOM
  tm  = $dNum_aGF
502[<C:0,F:0>] [W] $dNum_aOM :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aOP :: Num
                                  a_aOO [" the literal ‘25’ " HTML3.hs:112:90-91] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aOP :: Num
                                   a_aOO [" the literal ‘25’ " HTML3.hs:112:90-91] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aOP :: Num
                     a_aOO [" the literal ‘25’ " HTML3.hs:112:90-91] (CNonCanonical)
canEvNC:cls Num [a_aOO]
Following bound tyvar a_aOO = a_aOR
Following bound tyvar a_aOR = Int
canClass
  [W] $dNum_aOP :: Num a_aOO Num [a_aOO]
  Num Int
  Just [W] $dNum_aOP :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aOP :: Num
                                   Int [" the literal ‘25’ " HTML3.hs:112:90-91] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aOP :: Num
                                   Int [" the literal ‘25’ " HTML3.hs:112:90-91] (CDictCan)
doTopReact
  [W] $dNum_aOP :: Num
                     Int [" the literal ‘25’ " HTML3.hs:112:90-91] (CDictCan)
setEvBind
  ev = $dNum_aOP
  tm  = $dNum_aGF
503[<C:0,F:0>] [W] $dNum_aOP :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aOS :: Num
                                  a_aOR [" the literal ‘250’ " HTML3.hs:112:94-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aOS :: Num
                                   a_aOR [" the literal ‘250’ " HTML3.hs:112:94-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aOS :: Num
                     a_aOR [" the literal ‘250’ " HTML3.hs:112:94-96] (CNonCanonical)
canEvNC:cls Num [a_aOR]
Following bound tyvar a_aOR = Int
canClass
  [W] $dNum_aOS :: Num a_aOR Num [a_aOR]
  Num Int
  Just [W] $dNum_aOS :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aOS :: Num
                                   Int [" the literal ‘250’ " HTML3.hs:112:94-96] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aOS :: Num
                                   Int [" the literal ‘250’ " HTML3.hs:112:94-96] (CDictCan)
doTopReact
  [W] $dNum_aOS :: Num
                     Int [" the literal ‘250’ " HTML3.hs:112:94-96] (CDictCan)
setEvBind
  ev = $dNum_aOS
  tm  = $dNum_aGF
504[<C:0,F:0>] [W] $dNum_aOS :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dEnum_aOU :: Enum
                                   t_aOK [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dEnum_aOU :: Enum
                                    t_aOK [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dEnum_aOU :: Enum
                      t_aOK [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CNonCanonical)
canEvNC:cls Enum [t_aOK]
Following bound tyvar t_aOK = a_aOL
Following bound tyvar a_aOL = a_aOO
Following bound tyvar a_aOO = a_aOR
Following bound tyvar a_aOR = Int
canClass
  [W] $dEnum_aOU :: Enum t_aOK Enum [t_aOK]
  Enum Int
  Just [W] $dEnum_aOU :: Enum Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dEnum_aOU :: Enum
                                    Int [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dEnum_aOU :: Enum
                                    Int [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CDictCan)
doTopReact
  [W] $dEnum_aOU :: Enum
                      Int [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CDictCan)
setEvBind
  ev = $dEnum_aOU
  tm  = $dEnum_aOJ
505[<C:0,F:0>] [W] $dEnum_aOU :: Enum
                                   Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_aOX :: Num
                                  a_aOW [" the literal ‘0’ " HTML3.hs:112:106] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_aOX :: Num
                                   a_aOW [" the literal ‘0’ " HTML3.hs:112:106] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_aOX :: Num
                     a_aOW [" the literal ‘0’ " HTML3.hs:112:106] (CNonCanonical)
canEvNC:cls Num [a_aOW]
Following bound tyvar a_aOW = Int
canClass
  [W] $dNum_aOX :: Num a_aOW Num [a_aOW]
  Num Int
  Just [W] $dNum_aOX :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_aOX :: Num
                                   Int [" the literal ‘0’ " HTML3.hs:112:106] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_aOX :: Num
                                   Int [" the literal ‘0’ " HTML3.hs:112:106] (CDictCan)
doTopReact
  [W] $dNum_aOX :: Num
                     Int [" the literal ‘0’ " HTML3.hs:112:106] (CDictCan)
setEvBind
  ev = $dNum_aOX
  tm  = $dNum_aGF
506[<C:0,F:0>] [W] $dNum_aOX :: Num
                                  Int: Top react: Dict/Top (cached)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries: [W] $dFractional_aK7 :: Fractional
                                                       Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
               Irreds:
               Insolubles = {[W] cobox_aG2 :: HTML
                                              ~ [HTML] [" a type equality HTML
                                                                          ~
                                                                          [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
               Solved dicts 5
               Solved funeqs 0
solveFlats end } {}
simpl_loop, iteration 1
solveWanteds }
  unsolved_flats   = {[W] $dFractional_aK7 :: Fractional
                                                Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)}
  unsolved_implics = {}
  current evbinds  = {cobox_aBX = CO Sym cobox_aPU,
                      cobox_aBZ = CO Sym cobox_aPV, cobox_aC3 = CO Sym cobox_aPW,
                      cobox_aC4 = CO Sym cobox_aPX, cobox_aC5 = CO Sym cobox_aPY,
                      cobox_aC8 = CO Sym cobox_aPZ, cobox_aC9 = CO Sym cobox_aQ0,
                      cobox_aCd = CO Sym cobox_aQ1, cobox_aCe = CO Sym cobox_aQ2,
                      cobox_aCf = CO Sym cobox_aQ3, cobox_aCj = CO Sym cobox_aQ4,
                      cobox_aCk = CO Sym cobox_aQ5, cobox_aCl = CO Sym cobox_aQ6,
                      cobox_aCo = CO Sym cobox_aQ7, cobox_aCp = CO Sym cobox_aQ8,
                      cobox_aCs = CO Sym cobox_aQ9, cobox_aCt = CO Sym cobox_aQa,
                      cobox_aCz = CO Sym cobox_aQb, cobox_aCA = CO Sym cobox_aQc,
                      cobox_aCD = CO Sym cobox_aQd, cobox_aCE = CO Sym cobox_aQe,
                      cobox_aCH = CO Sym cobox_aQf, cobox_aCI = CO Sym cobox_aQg,
                      cobox_aCL = CO Sym cobox_aQh, cobox_aCM = CO Sym cobox_aQi,
                      cobox_aCR = CO Sym cobox_aQj, cobox_aCS = CO Sym cobox_aQk,
                      cobox_aCT = CO Sym cobox_aQl, cobox_aCU = CO Sym cobox_aQm,
                      cobox_aCX = CO Sym cobox_aQn, cobox_aCY = CO Sym cobox_aQo,
                      cobox_aD1 = CO Sym cobox_aQp, cobox_aD2 = CO Sym cobox_aQq,
                      cobox_aD5 = CO Sym cobox_aQr, cobox_aD6 = CO Sym cobox_aQs,
                      cobox_aD8 = CO Sym cobox_aQt, cobox_aDq = CO Sym cobox_aQu,
                      cobox_aDr = CO Sym cobox_aQv, cobox_aDw = CO Sym cobox_aQw,
                      cobox_aDx = CO Sym cobox_aQx, cobox_aDy = CO Sym cobox_aQy,
                      cobox_aDD = CO Sym cobox_aQz, cobox_aDE = CO Sym cobox_aQA,
                      cobox_aDF = CO Sym cobox_aQB, cobox_aDH = CO Sym cobox_aQC,
                      cobox_aDK = CO Sym cobox_aQD, cobox_aDL = CO Sym cobox_aQE,
                      cobox_aDO = CO Sym cobox_aQF, cobox_aDP = CO Sym cobox_aQG,
                      cobox_aDT = CO Sym cobox_aQH, cobox_aDU = CO Sym cobox_aQI,
                      cobox_aDV = CO Sym cobox_aQJ, cobox_aDX = CO Sym cobox_aQK,
                      cobox_aDY = CO [cobox_aQL]_N, cobox_aDZ = CO <HTML>_N,
                      cobox_aE0 = CO [cobox_aQM]_N, cobox_aE1 = CO <HTML>_N,
                      cobox_aE2 = CO [cobox_aQN]_N, cobox_aE3 = CO <HTML>_N,
                      cobox_aE4 = CO [cobox_aQO]_N, cobox_aE5 = CO <HTML>_N,
                      cobox_aE6 = CO [cobox_aQP]_N, cobox_aE7 = CO [cobox_aQQ]_N,
                      cobox_aE9 = CO Sym cobox_aQR, cobox_aEa = CO [cobox_aQS]_N,
                      cobox_aEc = CO Sym cobox_aQT, cobox_aEd = CO [cobox_aQU]_N,
                      cobox_aEe = CO [cobox_aQV]_N, cobox_aEf = CO [cobox_aR0]_N,
                      cobox_aEh = CO Sym cobox_aR1, cobox_aEi = CO [cobox_aR2]_N,
                      cobox_aEj = CO [cobox_aR3]_N, cobox_aEl = CO Sym cobox_aR4,
                      cobox_aEm = CO [cobox_aR5]_N, cobox_aEp = CO [cobox_aR6]_N,
                      cobox_aEq = CO cobox_aR7 -> cobox_aR8,
                      cobox_aEr = CO [cobox_aRb]_N, cobox_aEw = CO <t_aEu -> t_aEv>_N,
                      cobox_aEy = CO Sym cobox_aRe, cobox_aED = CO <[a_aEx]>_N,
                      cobox_aEE = CO <([a_aEx], b_aEC)>_N, cobox_aEG = CO [cobox_aRf]_N,
                      cobox_aEH = CO [cobox_aRg]_N, cobox_aEJ = CO [cobox_aRi]_N,
                      cobox_aEK = CO [cobox_aRj]_N, cobox_aEM = CO [cobox_aRl]_N,
                      cobox_aER = CO <[Char]>_N, cobox_aES = CO (cobox_aRm, cobox_aRn)_N,
                      cobox_aET = CO [cobox_aRp]_N, cobox_aEW = CO Sym cobox_aRr,
                      cobox_aEZ = CO [cobox_aRu]_N,
                      cobox_aF1 = CO cobox_aRv -> cobox_aRw,
                      cobox_aF2 = CO Sym cobox_aRB, cobox_aF5 = CO [cobox_aRC]_N,
                      cobox_aF6 = CO cobox_aRD -> cobox_aRE,
                      cobox_aF7 = CO [cobox_aRJ]_N, cobox_aF9 = CO Sym cobox_aRP,
                      cobox_aFa = CO Sym cobox_aRQ, cobox_aFb = CO Sym cobox_aRS,
                      cobox_aFd = CO Sym cobox_aRT, cobox_aFe = CO [cobox_aRW]_N,
                      cobox_aFg = CO [cobox_aRY]_N, cobox_aFh = CO [cobox_aRZ]_N,
                      cobox_aFj = CO [cobox_aS1]_N, cobox_aFk = CO [cobox_aS2]_N,
                      cobox_aFl = CO Sym cobox_aS4, cobox_aFm = CO [cobox_aSa]_N,
                      cobox_aFn = CO Sym cobox_aSc, cobox_aFp = CO Sym cobox_aSd,
                      cobox_aFq = CO [cobox_aSg]_N, cobox_aFs = CO [cobox_aSi]_N,
                      cobox_aFt = CO [cobox_aSj]_N, cobox_aFv = CO [cobox_aSl]_N,
                      cobox_aFw = CO [cobox_aSm]_N, cobox_aFx = CO Sym cobox_aSo,
                      cobox_aFz = CO [cobox_aSu]_N, cobox_aFA = CO [cobox_aSv]_N,
                      cobox_aFC = CO [cobox_aSx]_N, cobox_aFH = CO [cobox_aSy]_N,
                      cobox_aFI = CO cobox_aSz -> cobox_aSA,
                      cobox_aFJ = CO [cobox_aSE]_N, cobox_aFL = CO [cobox_aSG]_N,
                      cobox_aFM = CO [cobox_aSH]_N, cobox_aFO = CO [cobox_aSJ]_N,
                      cobox_aFP = CO [cobox_aSK]_N, cobox_aFQ = CO [cobox_aSM]_N,
                      cobox_aFS = CO Sym cobox_aSO, cobox_aFT = CO Sym cobox_aSP,
                      cobox_aFU = CO [cobox_aSS]_N, cobox_aFV = CO Sym cobox_aST,
                      cobox_aFW = CO Sym cobox_aSU, cobox_aFX = CO [cobox_aSX]_N,
                      cobox_aFY = CO Sym cobox_aSY, cobox_aFZ = CO [cobox_aSZ]_N,
                      cobox_aG0 = CO [cobox_aT0]_N, cobox_aG1 = CO Sym cobox_aT5,
                      cobox_aG3 = CO Sym cobox_aT6, cobox_aG5 = CO [cobox_aT9]_N,
                      cobox_aG6 = CO [cobox_aTa]_N, cobox_aG8 = CO [cobox_aTc]_N,
                      cobox_aG9 = CO [cobox_aTd]_N, cobox_aGb = CO [cobox_aTf]_N,
                      cobox_aGc = CO [cobox_aTg]_N, cobox_aGd = CO Sym cobox_aTi,
                      cobox_aGf = CO [cobox_aTo]_N, cobox_aGg = CO [cobox_aTp]_N,
                      cobox_aGi = CO [cobox_aTr]_N, cobox_aGj = CO [cobox_aTs]_N,
                      cobox_aGl = CO [cobox_aTu]_N, cobox_aGm = CO [cobox_aTv]_N,
                      cobox_aGo = CO [cobox_aTx]_N, cobox_aGp = CO [cobox_aTy]_N,
                      cobox_aGq = CO [cobox_aTA]_N, cobox_aGr = CO Sym cobox_aTC,
                      $dEq_aGz = GHC.Classes.$fEqInt @[] [], cobox_aGA = CO <Bool>_N,
                      cobox_aGC = CO Sym cobox_aTD, cobox_aGD = CO [cobox_aTE]_N,
                      $dNum_aGF = GHC.Num.$fNumInt @[] [],
                      cobox_aGG = CO cobox_aTG -> cobox_aTH,
                      cobox_aGH = CO Sym cobox_aTI, cobox_aGJ = CO [cobox_aTL]_N,
                      cobox_aGK = CO [cobox_aTM]_N, cobox_aGM = CO [cobox_aTO]_N,
                      cobox_aGN = CO [cobox_aTP]_N, cobox_aGP = CO [cobox_aTR]_N,
                      cobox_aGQ = CO [cobox_aTS]_N, cobox_aGR = CO Sym cobox_aTU,
                      cobox_aGT = CO [cobox_aU0]_N, cobox_aGU = CO [cobox_aU1]_N,
                      cobox_aGW = CO [cobox_aU3]_N, cobox_aGX = CO [cobox_aU4]_N,
                      cobox_aGY = CO [cobox_aU6]_N, $dEq_aH0 = $dEq_aGz,
                      cobox_aH1 = CO <Bool>_N, cobox_aH3 = CO Sym cobox_aU8,
                      cobox_aH4 = CO [cobox_aU9]_N, $dNum_aH6 = $dNum_aGF,
                      cobox_aH7 = CO cobox_aUb -> cobox_aUc,
                      cobox_aH8 = CO Sym cobox_aUd, cobox_aH9 = CO [cobox_aUg]_N,
                      cobox_aHa = CO [cobox_aUi]_N, cobox_aHc = CO [cobox_aUk]_N,
                      cobox_aHd = CO [cobox_aUl]_N, cobox_aHf = CO [cobox_aUn]_N,
                      cobox_aHg = CO [cobox_aUo]_N, cobox_aHi = CO [cobox_aUq]_N,
                      cobox_aHj = CO [cobox_aUr]_N, cobox_aHk = CO Sym cobox_aUt,
                      cobox_aHl = CO [cobox_aUz]_N, cobox_aHm = CO [cobox_aUB]_N,
                      cobox_aHo = CO <HTML>_N, cobox_aHp = CO [cobox_aUD]_N,
                      cobox_aHq = CO [cobox_aUF]_N, cobox_aHs = CO [cobox_aUH]_N,
                      cobox_aHt = CO [cobox_aUI]_N, cobox_aHv = CO [cobox_aUK]_N,
                      cobox_aHw = CO [cobox_aUL]_N, cobox_aHx = CO [cobox_aUN]_N,
                      cobox_aHy = CO <Bool>_N, cobox_aHz = CO Sym cobox_aUP,
                      cobox_aHA = CO [cobox_aUS]_N, cobox_aHB = CO [cobox_aUU]_N,
                      cobox_aHD = CO [cobox_aUW]_N, cobox_aHE = CO [cobox_aUX]_N,
                      cobox_aHG = CO [cobox_aUZ]_N, cobox_aHH = CO [cobox_aV0]_N,
                      cobox_aHJ = CO [cobox_aV2]_N, cobox_aHK = CO [cobox_aV3]_N,
                      cobox_aHL = CO Sym cobox_aV5, cobox_aHM = CO [cobox_aVb]_N,
                      cobox_aHP = CO <Doc>_N, cobox_aHQ = CO cobox_aVd -> cobox_aVe,
                      cobox_aHR = CO Sym cobox_aVo, cobox_aHU = CO [cobox_aVr]_N,
                      cobox_aHV = CO cobox_aVs -> cobox_aVt,
                      cobox_aHY = CO [cobox_aVy]_N,
                      cobox_aHZ = CO cobox_aVz -> cobox_aVA,
                      cobox_aI0 = CO [cobox_aVF]_N, cobox_aI1 = CO [cobox_aVH]_N,
                      cobox_aI3 = CO [cobox_aVJ]_N, cobox_aI4 = CO [cobox_aVK]_N,
                      cobox_aI6 = CO [cobox_aVM]_N, cobox_aI7 = CO [cobox_aVN]_N,
                      cobox_aI8 = CO [cobox_aVP]_N, cobox_aIb = CO Sym cobox_aVR,
                      cobox_aIe = CO Sym cobox_aVU, cobox_aIf = CO Sym cobox_aVZ,
                      cobox_aIg = CO Sym cobox_aW1, cobox_aIj = CO Sym cobox_aW3,
                      cobox_aIk = CO Sym cobox_aW8, cobox_aIl = CO Sym cobox_aWa,
                      cobox_aIo = CO Sym cobox_aWc, cobox_aIp = CO Sym cobox_aWh,
                      cobox_aIq = CO Sym cobox_aWj, cobox_aIt = CO Sym cobox_aWl,
                      cobox_aIu = CO Sym cobox_aWq, cobox_aIv = CO Sym cobox_aWs,
                      cobox_aIy = CO Sym cobox_aWu, cobox_aIz = CO Sym cobox_aWz,
                      cobox_aIA = CO Sym cobox_aWB, cobox_aID = CO Sym cobox_aWD,
                      cobox_aIE = CO Sym cobox_aWI, cobox_aIF = CO Sym cobox_aWK,
                      cobox_aII = CO Sym cobox_aWM, cobox_aIK = CO Sym cobox_aWP,
                      cobox_aIL = CO Sym cobox_aWS, cobox_aIM = CO Sym cobox_aWY,
                      cobox_aIO = CO Sym cobox_aX6, cobox_aIQ = CO Sym cobox_aX9,
                      cobox_aIS = CO Sym cobox_aXc, cobox_aIU = CO Sym cobox_aXf,
                      cobox_aIW = CO Sym cobox_aXi, cobox_aIX = CO Sym cobox_aXl,
                      cobox_aIZ = CO Sym cobox_aXq, cobox_aJ0 = CO [cobox_aXr]_N,
                      cobox_aJ1 = CO [cobox_aXs]_N, cobox_aJ2 = CO [cobox_aXt]_N,
                      cobox_aJ3 = CO <HTML>_N, cobox_aJ4 = CO [cobox_aXu]_N,
                      cobox_aJ5 = CO <HTML>_N, cobox_aJ6 = CO [cobox_aXv]_N,
                      cobox_aJ7 = CO [cobox_aXw]_N, cobox_aJ8 = CO [cobox_aXx]_N,
                      cobox_aJ9 = CO <HTML>_N, cobox_aJa = CO [cobox_aXy]_N,
                      cobox_aJb = CO [cobox_aXz]_N, cobox_aJc = CO [cobox_aXA]_N,
                      cobox_aJf = CO <Int -> Char>_N, cobox_aJi = CO <Int -> String>_N,
                      $dOrd_aJx = GHC.Classes.$fOrdInt @[] [], cobox_aJy = CO <Bool>_N,
                      cobox_aJz = CO Sym cobox_aXB, $dNum_aJB = $dNum_aGF,
                      cobox_aJC = CO cobox_aXC -> cobox_aXD,
                      cobox_aJD = CO Sym cobox_aXE, cobox_aJE = CO Sym cobox_aXG,
                      cobox_aJF = CO <Bool>_N, cobox_aJH = CO Sym cobox_aXH,
                      cobox_aJI = CO Sym cobox_aXK, $dNum_aJK = $dNum_aGF,
                      cobox_aJL = CO <Int>_N, cobox_aJM = CO Sym cobox_aXL,
                      $dNum_aJO = $dNum_aGF, cobox_aJP = CO cobox_aXM -> cobox_aXN,
                      cobox_aJU = CO <t_aJS -> t_aJT>_N, cobox_aJW = CO Sym cobox_aXO,
                      cobox_aJX = CO [cobox_aXP]_N, cobox_aK8 = CO <Int>_N,
                      cobox_aK9 = CO <Int>_N, $dNum_aKb = $dNum_aGF,
                      cobox_aKc = CO cobox_aXR -> cobox_aXS,
                      cobox_aKd = CO [cobox_aXT]_N,
                      $dIntegral_aKs = GHC.Real.$fIntegralInt @[] [],
                      cobox_aKt = CO <Int>_N, cobox_aKu = CO Sym cobox_aXV,
                      $dNum_aKw = $dNum_aGF, cobox_aKx = CO cobox_aXW -> cobox_aXX,
                      cobox_aKz = CO Sym cobox_aXY, cobox_aKA = CO [cobox_aY1]_N,
                      cobox_aKC = CO [cobox_aY3]_N,
                      cobox_aKF = CO cobox_aY4 -> cobox_aY5,
                      cobox_aKG = CO [cobox_aY8]_N, cobox_aKH = CO Sym cobox_aYa,
                      cobox_aKJ = CO [cobox_aYb]_N,
                      cobox_aKM = CO cobox_aYc -> cobox_aYd,
                      cobox_aKN = CO [cobox_aYg]_N, cobox_aKO = CO Sym cobox_aYi,
                      cobox_aKR = CO cobox_aYj -> cobox_aYk,
                      cobox_aKS = CO [cobox_aYn]_N, cobox_aKT = CO Sym cobox_aYp,
                      cobox_aKY = CO Sym cobox_aYq, cobox_aKZ = CO Sym cobox_aYx,
                      cobox_aL0 = CO [cobox_aYy]_N, cobox_aL1 = CO [cobox_aYz]_N,
                      cobox_aL2 = CO [cobox_aYA]_N, cobox_aL3 = CO Sym cobox_aYB,
                      cobox_aL4 = CO Sym cobox_aYC, cobox_aL5 = CO Sym cobox_aYD,
                      cobox_aL7 = CO Sym cobox_aYE, cobox_aL8 = CO [cobox_aYF]_N,
                      cobox_aLb = CO [cobox_aYG]_N,
                      cobox_aLc = CO cobox_aYH -> cobox_aYI,
                      cobox_aLd = CO [cobox_aYL]_N, cobox_aLf = CO Sym cobox_aYQ,
                      cobox_aLg = CO [cobox_aYR]_N, cobox_aLh = CO [cobox_aYS]_N,
                      cobox_aLi = CO [cobox_aYT]_N, cobox_aLj = CO [cobox_aYU]_N,
                      cobox_aLk = CO [cobox_aYV]_N, cobox_aLn = CO [cobox_aYW]_N,
                      cobox_aLo = CO cobox_aYX -> cobox_aYY,
                      cobox_aLp = CO [cobox_aZ1]_N, cobox_aLr = CO Sym cobox_aZ7,
                      cobox_aLt = CO [cobox_aZ8]_N, cobox_aLu = CO [cobox_aZ9]_N,
                      cobox_aLv = CO [cobox_aZb]_N, cobox_aLw = CO Sym cobox_aZd,
                      cobox_aLx = CO <HTML>_N, cobox_aLy = CO [cobox_aZe]_N,
                      cobox_aLA = CO Sym cobox_aZf, cobox_aLB = CO Sym cobox_aZg,
                      cobox_aLD = CO Sym cobox_aZi, cobox_aLE = CO Sym cobox_aZl,
                      $dNum_aLG = $dNum_aGF, cobox_aLH = CO cobox_aZm -> cobox_aZn,
                      cobox_aLI = CO Sym cobox_aZo, cobox_aLJ = CO Sym cobox_aZq,
                      cobox_aLL = CO Sym cobox_aZr, cobox_aLN = CO Sym cobox_aZu,
                      cobox_aLO = CO Sym cobox_aZx, cobox_aLQ = CO Sym cobox_aZy,
                      cobox_aLT = CO Sym cobox_aZB, cobox_aLU = CO Sym cobox_aZG,
                      cobox_aLV = CO Sym cobox_aZI, cobox_aLX = CO Sym cobox_aZK,
                      cobox_aLY = CO Sym cobox_aZN, cobox_aLZ = CO Sym cobox_aZO,
                      cobox_aM0 = CO Sym cobox_aZQ, cobox_aM1 = CO Sym cobox_aZR,
                      cobox_aM3 = CO Sym cobox_aZT, cobox_aM4 = CO Sym cobox_aZW,
                      cobox_aM6 = CO Sym cobox_aZX, cobox_aM9 = CO Sym cobox_a100,
                      cobox_aMa = CO Sym cobox_a105, cobox_aMb = CO Sym cobox_a107,
                      cobox_aMd = CO Sym cobox_a109, cobox_aMe = CO Sym cobox_a10c,
                      cobox_aMf = CO Sym cobox_a10d, cobox_aMg = CO Sym cobox_a10f,
                      cobox_aMh = CO Sym cobox_a10g, cobox_aMj = CO Sym cobox_a10i,
                      cobox_aMk = CO Sym cobox_a10l, cobox_aMm = CO Sym cobox_a10m,
                      cobox_aMp = CO Sym cobox_a10p, cobox_aMq = CO Sym cobox_a10u,
                      cobox_aMr = CO Sym cobox_a10w, cobox_aMt = CO Sym cobox_a10y,
                      cobox_aMu = CO Sym cobox_a10B, cobox_aMv = CO Sym cobox_a10C,
                      cobox_aMw = CO Sym cobox_a10E, cobox_aMx = CO Sym cobox_a10F,
                      cobox_aMy = CO Sym cobox_a10H, cobox_aMA = CO Sym cobox_a10I,
                      cobox_aMC = CO Sym cobox_a10L, $dNum_aMF = $dNum_aGF,
                      cobox_aMG = CO cobox_a10O -> cobox_a10P, $dNum_aMI = $dNum_aGF,
                      cobox_aMJ = CO cobox_a10Q -> cobox_a10R, $dNum_aML = $dNum_aGF,
                      cobox_aMM = CO cobox_a10S -> cobox_a10T,
                      $dEnum_aOJ = GHC.Enum.$fEnumInt @[] [], $dNum_aOM = $dNum_aGF,
                      cobox_aON = CO cobox_a10U -> cobox_a10V, $dNum_aOP = $dNum_aGF,
                      cobox_aOQ = CO cobox_a10W -> cobox_a10X, $dNum_aOS = $dNum_aGF,
                      cobox_aOT = CO cobox_a10Y -> cobox_a10Z, $dEnum_aOU = $dEnum_aOJ,
                      $dNum_aOX = $dNum_aGF, cobox_aOY = CO cobox_a110 -> cobox_a111,
                      cobox_aP2 = CO Sym cobox_a112, cobox_aP3 = CO <Int>_N,
                      cobox_aP4 = CO <Int>_N, cobox_aP5 = CO <Int>_N,
                      cobox_aP7 = CO Sym cobox_a119, cobox_aP8 = CO [cobox_a11b]_N,
                      cobox_aP9 = CO Sym cobox_a11d,
                      cobox_aPc = CO <String -> String -> Bool>_N,
                      cobox_aPe = CO Sym cobox_a11e, cobox_aPg = CO Sym cobox_a11f,
                      cobox_aPh = CO Sym cobox_a11i, cobox_aPj = CO Sym cobox_a11j,
                      cobox_aPk = CO Sym cobox_a11m, cobox_aPl = CO <Bool>_N,
                      cobox_aPm = CO Sym cobox_a11n, cobox_aPp = CO <String>_N,
                      cobox_aPq = CO (cobox_a11p, cobox_a11q)_N,
                      cobox_aPs = CO Sym cobox_a11u, cobox_aPt = CO Sym cobox_a11x,
                      cobox_aPu = CO <Bool>_N, cobox_aPv = CO Sym cobox_a11C,
                      cobox_aPy = CO <String>_N,
                      cobox_aPz = CO (cobox_a11E, cobox_a11F)_N,
                      cobox_aPB = CO Sym cobox_a11J, cobox_aPC = CO <Bool>_N,
                      cobox_aPD = CO Sym cobox_a11M, cobox_aPG = CO Sym cobox_a11S,
                      cobox_aPH = CO Sym cobox_a11V, cobox_aPI = CO <HTML>_N,
                      cobox_aPJ = CO Sym cobox_a121, cobox_aPK = CO [cobox_a126]_N,
                      cobox_aPM = CO Sym cobox_a128, cobox_aPP = CO Sym cobox_a12e,
                      cobox_aPQ = CO cobox_a12h -> cobox_a12i,
                      cobox_aPR = CO Sym cobox_a12q, cobox_aPS = CO [cobox_a12r]_N,
                      cobox_aPU = CO <IO ()>_N, cobox_aPV = CO <HTML>_N,
                      cobox_aPW = CO <String>_N, cobox_aPX = CO <[HTML]>_N,
                      cobox_aPY = CO <HTML>_N, cobox_aPZ = CO <String>_N,
                      cobox_aQ0 = CO <HTML>_N, cobox_aQ1 = CO <[Attribute]>_N,
                      cobox_aQ2 = CO <[HTML]>_N, cobox_aQ3 = CO <HTML>_N,
                      cobox_aQ4 = CO <Int>_N, cobox_aQ5 = CO <String>_N,
                      cobox_aQ6 = CO <HTML>_N, cobox_aQ7 = CO <[HTML]>_N,
                      cobox_aQ8 = CO <HTML>_N, cobox_aQ9 = CO <[[HTML]]>_N,
                      cobox_aQa = CO <HTML>_N, cobox_aQb = CO <(Int, Int, Int)>_N,
                      cobox_aQc = CO <HTML>_N, cobox_aQd = CO <[(Int, Int, Int)]>_N,
                      cobox_aQe = CO <HTML>_N, cobox_aQf = CO <[[(Int, Int, Int)]]>_N,
                      cobox_aQg = CO <HTML>_N, cobox_aQh = CO <Int>_N,
                      cobox_aQi = CO <String>_N, cobox_aQj = CO <Int>_N,
                      cobox_aQk = CO <Int>_N, cobox_aQl = CO <Int>_N,
                      cobox_aQm = CO <String>_N, cobox_aQn = CO <[(String, String)]>_N,
                      cobox_aQo = CO <String>_N, cobox_aQp = CO <HTML>_N,
                      cobox_aQq = CO <String>_N, cobox_aQr = CO <HTML>_N,
                      cobox_aQs = CO <Doc>_N, cobox_aQt = CO <[Requirement]>_N,
                      cobox_aQu = CO <[Maybe Requirement]>_N,
                      cobox_aQv = CO <Maybe Requirement>_N,
                      cobox_aQw = CO <[Requirement]>_N, cobox_aQx = CO <HTML>_N,
                      cobox_aQy = CO <Maybe Requirement>_N, cobox_aQz = CO <HTML>_N,
                      cobox_aQA = CO <Requirement>_N,
                      cobox_aQB = CO <Maybe Requirement>_N, cobox_aQC = CO <HTML>_N,
                      cobox_aQD = CO <Int>_N, cobox_aQE = CO <Char>_N,
                      cobox_aQF = CO <Int>_N, cobox_aQG = CO <String>_N,
                      cobox_aQH = CO <String>_N, cobox_aQI = CO <String>_N,
                      cobox_aQJ = CO <Bool>_N, cobox_aQK = CO <HTML>_N,
                      cobox_aQL = CO <Char>_N, cobox_aQM = CO <Char>_N,
                      cobox_aQN = CO <Char>_N, cobox_aQO = CO <Char>_N,
                      cobox_aQP = CO <Char>_N, cobox_aQQ = CO <HTML>_N,
                      cobox_aQR = CO <HTML>_N, cobox_aQS = CO <Char>_N,
                      cobox_aQT = CO <HTML>_N, cobox_aQU = CO <Char>_N,
                      cobox_aQV = CO (cobox_aQW, cobox_aQX)_N,
                      cobox_aQW = CO [cobox_aQY]_N, cobox_aQX = CO [cobox_aQZ]_N,
                      cobox_aQY = CO <Char>_N, cobox_aQZ = CO <Char>_N,
                      cobox_aR0 = CO <HTML>_N, cobox_aR1 = CO <HTML>_N,
                      cobox_aR2 = CO <Char>_N, cobox_aR3 = CO <HTML>_N,
                      cobox_aR4 = CO <HTML>_N, cobox_aR5 = CO <Char>_N,
                      cobox_aR6 = CO <HTML>_N, cobox_aR7 = CO Sym cobox_aR9,
                      cobox_aR8 = CO Sym cobox_aRa, cobox_aR9 = CO <[HTML]>_N,
                      cobox_aRa = CO <HTML>_N, cobox_aRb = CO Sym cobox_aRc,
                      cobox_aRc = CO [cobox_aRd]_N, cobox_aRd = CO <HTML>_N,
                      cobox_aRe = CO <[a_aEx]>_N, cobox_aRf = CO <a_aEF>_N,
                      cobox_aRg = CO Sym cobox_aRh, cobox_aRh = CO <Char>_N,
                      cobox_aRi = CO <Char>_N, cobox_aRj = CO Sym cobox_aRk,
                      cobox_aRk = CO <Char>_N, cobox_aRl = CO <Char>_N,
                      cobox_aRm = CO Sym cobox_aRo, cobox_aRn = CO <[Char]>_N,
                      cobox_aRo = CO <[Char]>_N, cobox_aRp = CO Sym cobox_aRq,
                      cobox_aRq = CO <Char>_N, cobox_aRr = CO [cobox_aRs]_N,
                      cobox_aRs = CO Sym cobox_aRt, cobox_aRt = CO <Char>_N,
                      cobox_aRu = CO <[Char]>_N, cobox_aRv = CO Sym cobox_aRx,
                      cobox_aRw = CO Sym cobox_aRy, cobox_aRx = CO <[a_aF0]>_N,
                      cobox_aRy = CO [cobox_aRz]_N, cobox_aRz = CO Sym cobox_aRA,
                      cobox_aRA = CO <Char>_N, cobox_aRB = CO <Char>_N,
                      cobox_aRC = CO <[Char]>_N, cobox_aRD = CO Sym cobox_aRF,
                      cobox_aRE = CO Sym cobox_aRG, cobox_aRF = CO <([Char], [Char])>_N,
                      cobox_aRG = CO [cobox_aRH]_N, cobox_aRH = CO Sym cobox_aRI,
                      cobox_aRI = CO <Char>_N, cobox_aRJ = CO Sym cobox_aRK,
                      cobox_aRK = CO (cobox_aRL, cobox_aRM)_N,
                      cobox_aRL = CO [cobox_aRN]_N, cobox_aRM = CO [cobox_aRO]_N,
                      cobox_aRN = CO <Char>_N, cobox_aRO = CO <Char>_N,
                      cobox_aRP = CO <HTML>_N, cobox_aRQ = CO [cobox_aRR]_N,
                      cobox_aRR = CO <Char>_N, cobox_aRS = CO <HTML>_N,
                      cobox_aRT = CO [cobox_aRU]_N, cobox_aRU = CO Sym cobox_aRV,
                      cobox_aRV = CO <Char>_N, cobox_aRW = CO Sym cobox_aRX,
                      cobox_aRX = CO <Char>_N, cobox_aRY = CO <Char>_N,
                      cobox_aRZ = CO Sym cobox_aS0, cobox_aS0 = CO <Char>_N,
                      cobox_aS1 = CO <Char>_N, cobox_aS2 = CO Sym cobox_aS3,
                      cobox_aS3 = CO <Char>_N, cobox_aS4 = CO [cobox_aS5]_N,
                      cobox_aS5 = CO (cobox_aS6, cobox_aS7)_N,
                      cobox_aS6 = CO [cobox_aS8]_N, cobox_aS7 = CO [cobox_aS9]_N,
                      cobox_aS8 = CO <Char>_N, cobox_aS9 = CO <Char>_N,
                      cobox_aSa = CO Sym cobox_aSb, cobox_aSb = CO <Char>_N,
                      cobox_aSc = CO <HTML>_N, cobox_aSd = CO [cobox_aSe]_N,
                      cobox_aSe = CO Sym cobox_aSf, cobox_aSf = CO <Char>_N,
                      cobox_aSg = CO Sym cobox_aSh, cobox_aSh = CO <Char>_N,
                      cobox_aSi = CO <Char>_N, cobox_aSj = CO Sym cobox_aSk,
                      cobox_aSk = CO <Char>_N, cobox_aSl = CO <Char>_N,
                      cobox_aSm = CO Sym cobox_aSn, cobox_aSn = CO <Char>_N,
                      cobox_aSo = CO [cobox_aSp]_N,
                      cobox_aSp = CO (cobox_aSq, cobox_aSr)_N,
                      cobox_aSq = CO [cobox_aSs]_N, cobox_aSr = CO [cobox_aSt]_N,
                      cobox_aSs = CO <Char>_N, cobox_aSt = CO <Char>_N,
                      cobox_aSu = CO <Char>_N, cobox_aSv = CO Sym cobox_aSw,
                      cobox_aSw = CO <Char>_N, cobox_aSx = CO <Char>_N,
                      cobox_aSy = CO <Char>_N, cobox_aSz = CO Sym cobox_aSB,
                      cobox_aSA = CO [cobox_aSC]_N, cobox_aSB = CO <HTML>_N,
                      cobox_aSC = CO Sym cobox_aSD, cobox_aSD = CO <Char>_N,
                      cobox_aSE = CO Sym cobox_aSF, cobox_aSF = CO <HTML>_N,
                      cobox_aSG = CO <Char>_N, cobox_aSH = CO Sym cobox_aSI,
                      cobox_aSI = CO <Char>_N, cobox_aSJ = CO <Char>_N,
                      cobox_aSK = CO Sym cobox_aSL, cobox_aSL = CO <Char>_N,
                      cobox_aSM = CO Sym cobox_aSN, cobox_aSN = CO <Char>_N,
                      cobox_aSO = CO <HTML>_N, cobox_aSP = CO [cobox_aSQ]_N,
                      cobox_aSQ = CO [cobox_aSR]_N, cobox_aSR = CO <Char>_N,
                      cobox_aSS = CO <Char>_N, cobox_aST = CO <HTML>_N,
                      cobox_aSU = CO [cobox_aSV]_N, cobox_aSV = CO [cobox_aSW]_N,
                      cobox_aSW = CO <Char>_N, cobox_aSX = CO <Char>_N,
                      cobox_aSY = CO <HTML>_N, cobox_aSZ = CO <Char>_N,
                      cobox_aT0 = CO (cobox_aT1, cobox_aT2)_N,
                      cobox_aT1 = CO [cobox_aT3]_N, cobox_aT2 = CO [cobox_aT4]_N,
                      cobox_aT3 = CO <Char>_N, cobox_aT4 = CO <Char>_N,
                      cobox_aT5 = CO <HTML>_N, cobox_aT6 = CO [cobox_aT7]_N,
                      cobox_aT7 = CO [cobox_aT8]_N, cobox_aT8 = CO <Char>_N,
                      cobox_aT9 = CO <Char>_N, cobox_aTa = CO Sym cobox_aTb,
                      cobox_aTb = CO <Char>_N, cobox_aTc = CO <Char>_N,
                      cobox_aTd = CO Sym cobox_aTe, cobox_aTe = CO <Char>_N,
                      cobox_aTf = CO <Char>_N, cobox_aTg = CO Sym cobox_aTh,
                      cobox_aTh = CO <Char>_N, cobox_aTi = CO [cobox_aTj]_N,
                      cobox_aTj = CO (cobox_aTk, cobox_aTl)_N,
                      cobox_aTk = CO [cobox_aTm]_N, cobox_aTl = CO [cobox_aTn]_N,
                      cobox_aTm = CO <Char>_N, cobox_aTn = CO <Char>_N,
                      cobox_aTo = CO <Char>_N, cobox_aTp = CO Sym cobox_aTq,
                      cobox_aTq = CO <Char>_N, cobox_aTr = CO <Char>_N,
                      cobox_aTs = CO Sym cobox_aTt, cobox_aTt = CO <Char>_N,
                      cobox_aTu = CO <Char>_N, cobox_aTv = CO Sym cobox_aTw,
                      cobox_aTw = CO <Char>_N, cobox_aTx = CO <Char>_N,
                      cobox_aTy = CO Sym cobox_aTz, cobox_aTz = CO <Char>_N,
                      cobox_aTA = CO Sym cobox_aTB, cobox_aTB = CO <Char>_N,
                      cobox_aTC = CO <HTML>_N, cobox_aTD = CO <Int>_N,
                      cobox_aTE = CO Sym cobox_aTF, cobox_aTF = CO <HTML>_N,
                      cobox_aTG = CO <Integer>_N, cobox_aTH = CO <Int>_N,
                      cobox_aTI = CO [cobox_aTJ]_N, cobox_aTJ = CO [cobox_aTK]_N,
                      cobox_aTK = CO <Char>_N, cobox_aTL = CO <Char>_N,
                      cobox_aTM = CO Sym cobox_aTN, cobox_aTN = CO <Char>_N,
                      cobox_aTO = CO <Char>_N, cobox_aTP = CO Sym cobox_aTQ,
                      cobox_aTQ = CO <Char>_N, cobox_aTR = CO <Char>_N,
                      cobox_aTS = CO Sym cobox_aTT, cobox_aTT = CO <Char>_N,
                      cobox_aTU = CO [cobox_aTV]_N,
                      cobox_aTV = CO (cobox_aTW, cobox_aTX)_N,
                      cobox_aTW = CO [cobox_aTY]_N, cobox_aTX = CO [cobox_aTZ]_N,
                      cobox_aTY = CO <Char>_N, cobox_aTZ = CO <Char>_N,
                      cobox_aU0 = CO <Char>_N, cobox_aU1 = CO Sym cobox_aU2,
                      cobox_aU2 = CO <Char>_N, cobox_aU3 = CO <Char>_N,
                      cobox_aU4 = CO Sym cobox_aU5, cobox_aU5 = CO <Char>_N,
                      cobox_aU6 = CO Sym cobox_aU7, cobox_aU7 = CO <Char>_N,
                      cobox_aU8 = CO <Int>_N, cobox_aU9 = CO Sym cobox_aUa,
                      cobox_aUa = CO <HTML>_N, cobox_aUb = CO <Integer>_N,
                      cobox_aUc = CO <Int>_N, cobox_aUd = CO [cobox_aUe]_N,
                      cobox_aUe = CO [cobox_aUf]_N, cobox_aUf = CO <Char>_N,
                      cobox_aUg = CO [cobox_aUh]_N, cobox_aUh = CO <Char>_N,
                      cobox_aUi = CO [cobox_aUj]_N, cobox_aUj = CO <Char>_N,
                      cobox_aUk = CO <Char>_N, cobox_aUl = CO Sym cobox_aUm,
                      cobox_aUm = CO <Char>_N, cobox_aUn = CO <Char>_N,
                      cobox_aUo = CO Sym cobox_aUp, cobox_aUp = CO <Char>_N,
                      cobox_aUq = CO <Char>_N, cobox_aUr = CO Sym cobox_aUs,
                      cobox_aUs = CO <Char>_N, cobox_aUt = CO [cobox_aUu]_N,
                      cobox_aUu = CO (cobox_aUv, cobox_aUw)_N,
                      cobox_aUv = CO [cobox_aUx]_N, cobox_aUw = CO [cobox_aUy]_N,
                      cobox_aUx = CO <Char>_N, cobox_aUy = CO <Char>_N,
                      cobox_aUz = CO Sym cobox_aUA, cobox_aUA = CO <Char>_N,
                      cobox_aUB = CO [cobox_aUC]_N, cobox_aUC = CO <Char>_N,
                      cobox_aUD = CO Sym cobox_aUE, cobox_aUE = CO <HTML>_N,
                      cobox_aUF = CO [cobox_aUG]_N, cobox_aUG = CO <Char>_N,
                      cobox_aUH = CO <Char>_N, cobox_aUI = CO Sym cobox_aUJ,
                      cobox_aUJ = CO <Char>_N, cobox_aUK = CO <Char>_N,
                      cobox_aUL = CO Sym cobox_aUM, cobox_aUM = CO <Char>_N,
                      cobox_aUN = CO Sym cobox_aUO, cobox_aUO = CO <Char>_N,
                      cobox_aUP = CO [cobox_aUQ]_N, cobox_aUQ = CO [cobox_aUR]_N,
                      cobox_aUR = CO <Char>_N, cobox_aUS = CO [cobox_aUT]_N,
                      cobox_aUT = CO <Char>_N, cobox_aUU = CO [cobox_aUV]_N,
                      cobox_aUV = CO <Char>_N, cobox_aUW = CO <Char>_N,
                      cobox_aUX = CO Sym cobox_aUY, cobox_aUY = CO <Char>_N,
                      cobox_aUZ = CO <Char>_N, cobox_aV0 = CO Sym cobox_aV1,
                      cobox_aV1 = CO <Char>_N, cobox_aV2 = CO <Char>_N,
                      cobox_aV3 = CO Sym cobox_aV4, cobox_aV4 = CO <Char>_N,
                      cobox_aV5 = CO [cobox_aV6]_N,
                      cobox_aV6 = CO (cobox_aV7, cobox_aV8)_N,
                      cobox_aV7 = CO [cobox_aV9]_N, cobox_aV8 = CO [cobox_aVa]_N,
                      cobox_aV9 = CO <Char>_N, cobox_aVa = CO <Char>_N,
                      cobox_aVb = CO Sym cobox_aVc, cobox_aVc = CO <Char>_N,
                      cobox_aVd = CO Sym cobox_aVf,
                      cobox_aVe = CO cobox_aVg -> cobox_aVh, cobox_aVf = CO <Doc>_N,
                      cobox_aVg = CO Sym cobox_aVi, cobox_aVh = CO Sym cobox_aVl,
                      cobox_aVi = CO [cobox_aVj]_N, cobox_aVj = CO [cobox_aVk]_N,
                      cobox_aVk = CO <Char>_N, cobox_aVl = CO [cobox_aVm]_N,
                      cobox_aVm = CO [cobox_aVn]_N, cobox_aVn = CO <Char>_N,
                      cobox_aVo = CO [cobox_aVp]_N, cobox_aVp = CO [cobox_aVq]_N,
                      cobox_aVq = CO <Char>_N, cobox_aVr = CO <Doc>_N,
                      cobox_aVs = CO Sym cobox_aVu, cobox_aVt = CO Sym cobox_aVv,
                      cobox_aVu = CO <Doc>_N, cobox_aVv = CO [cobox_aVw]_N,
                      cobox_aVw = CO [cobox_aVx]_N, cobox_aVx = CO <Char>_N,
                      cobox_aVy = CO <Doc>_N, cobox_aVz = CO Sym cobox_aVB,
                      cobox_aVA = CO Sym cobox_aVC, cobox_aVB = CO <HTML>_N,
                      cobox_aVC = CO [cobox_aVD]_N, cobox_aVD = CO [cobox_aVE]_N,
                      cobox_aVE = CO <Char>_N, cobox_aVF = CO Sym cobox_aVG,
                      cobox_aVG = CO <HTML>_N, cobox_aVH = CO [cobox_aVI]_N,
                      cobox_aVI = CO <Char>_N, cobox_aVJ = CO <Char>_N,
                      cobox_aVK = CO Sym cobox_aVL, cobox_aVL = CO <Char>_N,
                      cobox_aVM = CO <Char>_N, cobox_aVN = CO Sym cobox_aVO,
                      cobox_aVO = CO <Char>_N, cobox_aVP = CO Sym cobox_aVQ,
                      cobox_aVQ = CO <Char>_N, cobox_aVR = CO [cobox_aVS]_N,
                      cobox_aVS = CO Sym cobox_aVT, cobox_aVT = CO <Requirement>_N,
                      cobox_aVU = CO (cobox_aVV, cobox_aVW)_N,
                      cobox_aVV = CO Sym cobox_aVX, cobox_aVW = CO Sym cobox_aVY,
                      cobox_aVX = CO <String>_N, cobox_aVY = CO <String>_N,
                      cobox_aVZ = CO [cobox_aW0]_N, cobox_aW0 = CO <Char>_N,
                      cobox_aW1 = CO [cobox_aW2]_N, cobox_aW2 = CO <Char>_N,
                      cobox_aW3 = CO (cobox_aW4, cobox_aW5)_N,
                      cobox_aW4 = CO Sym cobox_aW6, cobox_aW5 = CO Sym cobox_aW7,
                      cobox_aW6 = CO <String>_N, cobox_aW7 = CO <String>_N,
                      cobox_aW8 = CO [cobox_aW9]_N, cobox_aW9 = CO <Char>_N,
                      cobox_aWa = CO [cobox_aWb]_N, cobox_aWb = CO <Char>_N,
                      cobox_aWc = CO (cobox_aWd, cobox_aWe)_N,
                      cobox_aWd = CO Sym cobox_aWf, cobox_aWe = CO Sym cobox_aWg,
                      cobox_aWf = CO <String>_N, cobox_aWg = CO <String>_N,
                      cobox_aWh = CO [cobox_aWi]_N, cobox_aWi = CO <Char>_N,
                      cobox_aWj = CO [cobox_aWk]_N, cobox_aWk = CO <Char>_N,
                      cobox_aWl = CO (cobox_aWm, cobox_aWn)_N,
                      cobox_aWm = CO Sym cobox_aWo, cobox_aWn = CO Sym cobox_aWp,
                      cobox_aWo = CO <String>_N, cobox_aWp = CO <String>_N,
                      cobox_aWq = CO [cobox_aWr]_N, cobox_aWr = CO <Char>_N,
                      cobox_aWs = CO [cobox_aWt]_N, cobox_aWt = CO <Char>_N,
                      cobox_aWu = CO (cobox_aWv, cobox_aWw)_N,
                      cobox_aWv = CO Sym cobox_aWx, cobox_aWw = CO Sym cobox_aWy,
                      cobox_aWx = CO <String>_N, cobox_aWy = CO <String>_N,
                      cobox_aWz = CO [cobox_aWA]_N, cobox_aWA = CO <Char>_N,
                      cobox_aWB = CO [cobox_aWC]_N, cobox_aWC = CO <Char>_N,
                      cobox_aWD = CO (cobox_aWE, cobox_aWF)_N,
                      cobox_aWE = CO Sym cobox_aWG, cobox_aWF = CO Sym cobox_aWH,
                      cobox_aWG = CO <String>_N, cobox_aWH = CO <String>_N,
                      cobox_aWI = CO [cobox_aWJ]_N, cobox_aWJ = CO <Char>_N,
                      cobox_aWK = CO [cobox_aWL]_N, cobox_aWL = CO <Char>_N,
                      cobox_aWM = CO [cobox_aWN]_N, cobox_aWN = CO Sym cobox_aWO,
                      cobox_aWO = CO <Maybe Requirement>_N,
                      cobox_aWP = CO Maybe cobox_aWQ_N, cobox_aWQ = CO Sym cobox_aWR,
                      cobox_aWR = CO <Requirement>_N, cobox_aWS = CO Maybe cobox_aWT_N,
                      cobox_aWT = CO (cobox_aWU, cobox_aWV)_N,
                      cobox_aWU = CO [cobox_aWW]_N, cobox_aWV = CO [cobox_aWX]_N,
                      cobox_aWW = CO <Char>_N, cobox_aWX = CO <Char>_N,
                      cobox_aWY = CO [cobox_aWZ]_N, cobox_aWZ = CO Sym cobox_aX0,
                      cobox_aX0 = CO Maybe cobox_aX1_N,
                      cobox_aX1 = CO (cobox_aX2, cobox_aX3)_N,
                      cobox_aX2 = CO [cobox_aX4]_N, cobox_aX3 = CO [cobox_aX5]_N,
                      cobox_aX4 = CO <Char>_N, cobox_aX5 = CO <Char>_N,
                      cobox_aX6 = CO [cobox_aX7]_N, cobox_aX7 = CO Sym cobox_aX8,
                      cobox_aX8 = CO <Maybe Requirement>_N,
                      cobox_aX9 = CO Maybe cobox_aXa_N, cobox_aXa = CO Sym cobox_aXb,
                      cobox_aXb = CO <Requirement>_N, cobox_aXc = CO [cobox_aXd]_N,
                      cobox_aXd = CO Sym cobox_aXe, cobox_aXe = CO <Maybe Requirement>_N,
                      cobox_aXf = CO Maybe cobox_aXg_N, cobox_aXg = CO Sym cobox_aXh,
                      cobox_aXh = CO <Requirement>_N, cobox_aXi = CO Maybe cobox_aXj_N,
                      cobox_aXj = CO Sym cobox_aXk, cobox_aXk = CO <Requirement>_N,
                      cobox_aXl = CO (cobox_aXm, cobox_aXn)_N,
                      cobox_aXm = CO [cobox_aXo]_N, cobox_aXn = CO [cobox_aXp]_N,
                      cobox_aXo = CO <Char>_N, cobox_aXp = CO <Char>_N,
                      cobox_aXq = CO <HTML>_N, cobox_aXr = CO <Char>_N,
                      cobox_aXs = CO <Char>_N, cobox_aXt = CO <Char>_N,
                      cobox_aXu = CO <Char>_N, cobox_aXv = CO <Char>_N,
                      cobox_aXw = CO <Char>_N, cobox_aXx = CO <Char>_N,
                      cobox_aXy = CO <Char>_N, cobox_aXz = CO <Char>_N,
                      cobox_aXA = CO <Char>_N, cobox_aXB = CO <Int>_N,
                      cobox_aXC = CO <Integer>_N, cobox_aXD = CO <Int>_N,
                      cobox_aXE = CO [cobox_aXF]_N, cobox_aXF = CO <Char>_N,
                      cobox_aXG = CO <Int>_N, cobox_aXH = CO [cobox_aXI]_N,
                      cobox_aXI = CO Sym cobox_aXJ, cobox_aXJ = CO <Char>_N,
                      cobox_aXK = CO <Char>_N, cobox_aXL = CO <Int>_N,
                      cobox_aXM = CO <Integer>_N, cobox_aXN = CO <Int>_N,
                      cobox_aXO = CO <[a_aJV]>_N, cobox_aXP = CO Sym cobox_aXQ,
                      cobox_aXQ = CO <Char>_N, cobox_aXR = CO <Integer>_N,
                      cobox_aXS = CO <Int>_N, cobox_aXT = CO Sym cobox_aXU,
                      cobox_aXU = CO <Char>_N, cobox_aXV = CO <Int>_N,
                      cobox_aXW = CO <Integer>_N, cobox_aXX = CO <Int>_N,
                      cobox_aXY = CO [cobox_aXZ]_N, cobox_aXZ = CO Sym cobox_aY0,
                      cobox_aY0 = CO <Char>_N, cobox_aY1 = CO Sym cobox_aY2,
                      cobox_aY2 = CO <Char>_N, cobox_aY3 = CO <Char>_N,
                      cobox_aY4 = CO Sym cobox_aY6, cobox_aY5 = CO Sym cobox_aY7,
                      cobox_aY6 = CO <Int>_N, cobox_aY7 = CO <[Char]>_N,
                      cobox_aY8 = CO Sym cobox_aY9, cobox_aY9 = CO <Char>_N,
                      cobox_aYa = CO <Int>_N, cobox_aYb = CO <Char>_N,
                      cobox_aYc = CO Sym cobox_aYe, cobox_aYd = CO Sym cobox_aYf,
                      cobox_aYe = CO <Int>_N, cobox_aYf = CO <[Char]>_N,
                      cobox_aYg = CO Sym cobox_aYh, cobox_aYh = CO <Char>_N,
                      cobox_aYi = CO <Int>_N, cobox_aYj = CO Sym cobox_aYl,
                      cobox_aYk = CO Sym cobox_aYm, cobox_aYl = CO <Int>_N,
                      cobox_aYm = CO <[Char]>_N, cobox_aYn = CO Sym cobox_aYo,
                      cobox_aYo = CO <Char>_N, cobox_aYp = CO <Int>_N,
                      cobox_aYq = CO (cobox_aYr, cobox_aYs, cobox_aYt)_N,
                      cobox_aYr = CO Sym cobox_aYu, cobox_aYs = CO Sym cobox_aYv,
                      cobox_aYt = CO Sym cobox_aYw, cobox_aYu = CO <Int>_N,
                      cobox_aYv = CO <Int>_N, cobox_aYw = CO <Int>_N,
                      cobox_aYx = CO <HTML>_N, cobox_aYy = CO <Char>_N,
                      cobox_aYz = CO <Char>_N, cobox_aYA = CO <Char>_N,
                      cobox_aYB = CO <Int>_N, cobox_aYC = CO <Int>_N,
                      cobox_aYD = CO <Int>_N, cobox_aYE = CO <HTML>_N,
                      cobox_aYF = CO <Char>_N, cobox_aYG = CO <HTML>_N,
                      cobox_aYH = CO Sym cobox_aYJ, cobox_aYI = CO Sym cobox_aYK,
                      cobox_aYJ = CO <(Int, Int, Int)>_N, cobox_aYK = CO <HTML>_N,
                      cobox_aYL = CO Sym cobox_aYM,
                      cobox_aYM = CO (cobox_aYN, cobox_aYO, cobox_aYP)_N,
                      cobox_aYN = CO <Int>_N, cobox_aYO = CO <Int>_N,
                      cobox_aYP = CO <Int>_N, cobox_aYQ = CO <HTML>_N,
                      cobox_aYR = CO <Char>_N, cobox_aYS = CO <Char>_N,
                      cobox_aYT = CO <Char>_N, cobox_aYU = CO <Char>_N,
                      cobox_aYV = CO <Char>_N, cobox_aYW = CO <HTML>_N,
                      cobox_aYX = CO Sym cobox_aYZ, cobox_aYY = CO Sym cobox_aZ0,
                      cobox_aYZ = CO <[(Int, Int, Int)]>_N, cobox_aZ0 = CO <HTML>_N,
                      cobox_aZ1 = CO Sym cobox_aZ2, cobox_aZ2 = CO [cobox_aZ3]_N,
                      cobox_aZ3 = CO (cobox_aZ4, cobox_aZ5, cobox_aZ6)_N,
                      cobox_aZ4 = CO <Int>_N, cobox_aZ5 = CO <Int>_N,
                      cobox_aZ6 = CO <Int>_N, cobox_aZ7 = CO <HTML>_N,
                      cobox_aZ8 = CO <Char>_N, cobox_aZ9 = CO Sym cobox_aZa,
                      cobox_aZa = CO <Char>_N, cobox_aZb = CO Sym cobox_aZc,
                      cobox_aZc = CO <Char>_N, cobox_aZd = CO <Int>_N,
                      cobox_aZe = CO <Char>_N, cobox_aZf = CO <HTML>_N,
                      cobox_aZg = CO [cobox_aZh]_N, cobox_aZh = CO <Char>_N,
                      cobox_aZi = CO [cobox_aZj]_N, cobox_aZj = CO Sym cobox_aZk,
                      cobox_aZk = CO <HTML>_N, cobox_aZl = CO <HTML>_N,
                      cobox_aZm = CO <Integer>_N, cobox_aZn = CO <Int>_N,
                      cobox_aZo = CO [cobox_aZp]_N, cobox_aZp = CO <Char>_N,
                      cobox_aZq = CO <HTML>_N, cobox_aZr = CO [cobox_aZs]_N,
                      cobox_aZs = CO Sym cobox_aZt, cobox_aZt = CO <[HTML]>_N,
                      cobox_aZu = CO [cobox_aZv]_N, cobox_aZv = CO Sym cobox_aZw,
                      cobox_aZw = CO <HTML>_N, cobox_aZx = CO <HTML>_N,
                      cobox_aZy = CO [cobox_aZz]_N, cobox_aZz = CO Sym cobox_aZA,
                      cobox_aZA = CO <Attribute>_N,
                      cobox_aZB = CO (cobox_aZC, cobox_aZD)_N,
                      cobox_aZC = CO Sym cobox_aZE, cobox_aZD = CO Sym cobox_aZF,
                      cobox_aZE = CO <String>_N, cobox_aZF = CO <String>_N,
                      cobox_aZG = CO [cobox_aZH]_N, cobox_aZH = CO <Char>_N,
                      cobox_aZI = CO [cobox_aZJ]_N, cobox_aZJ = CO <Char>_N,
                      cobox_aZK = CO [cobox_aZL]_N, cobox_aZL = CO Sym cobox_aZM,
                      cobox_aZM = CO <HTML>_N, cobox_aZN = CO <HTML>_N,
                      cobox_aZO = CO [cobox_aZP]_N, cobox_aZP = CO <Char>_N,
                      cobox_aZQ = CO <HTML>_N, cobox_aZR = CO [cobox_aZS]_N,
                      cobox_aZS = CO <Char>_N, cobox_aZT = CO [cobox_aZU]_N,
                      cobox_aZU = CO Sym cobox_aZV, cobox_aZV = CO <HTML>_N,
                      cobox_aZW = CO <HTML>_N, cobox_aZX = CO [cobox_aZY]_N,
                      cobox_aZY = CO Sym cobox_aZZ, cobox_aZZ = CO <Attribute>_N,
                      cobox_a100 = CO (cobox_a101, cobox_a102)_N,
                      cobox_a101 = CO Sym cobox_a103, cobox_a102 = CO Sym cobox_a104,
                      cobox_a103 = CO <String>_N, cobox_a104 = CO <String>_N,
                      cobox_a105 = CO [cobox_a106]_N, cobox_a106 = CO <Char>_N,
                      cobox_a107 = CO [cobox_a108]_N, cobox_a108 = CO <Char>_N,
                      cobox_a109 = CO [cobox_a10a]_N, cobox_a10a = CO Sym cobox_a10b,
                      cobox_a10b = CO <HTML>_N, cobox_a10c = CO <HTML>_N,
                      cobox_a10d = CO [cobox_a10e]_N, cobox_a10e = CO <Char>_N,
                      cobox_a10f = CO <HTML>_N, cobox_a10g = CO [cobox_a10h]_N,
                      cobox_a10h = CO <Char>_N, cobox_a10i = CO [cobox_a10j]_N,
                      cobox_a10j = CO Sym cobox_a10k, cobox_a10k = CO <HTML>_N,
                      cobox_a10l = CO <HTML>_N, cobox_a10m = CO [cobox_a10n]_N,
                      cobox_a10n = CO Sym cobox_a10o, cobox_a10o = CO <Attribute>_N,
                      cobox_a10p = CO (cobox_a10q, cobox_a10r)_N,
                      cobox_a10q = CO Sym cobox_a10s, cobox_a10r = CO Sym cobox_a10t,
                      cobox_a10s = CO <String>_N, cobox_a10t = CO <String>_N,
                      cobox_a10u = CO [cobox_a10v]_N, cobox_a10v = CO <Char>_N,
                      cobox_a10w = CO [cobox_a10x]_N, cobox_a10x = CO <Char>_N,
                      cobox_a10y = CO [cobox_a10z]_N, cobox_a10z = CO Sym cobox_a10A,
                      cobox_a10A = CO <HTML>_N, cobox_a10B = CO <HTML>_N,
                      cobox_a10C = CO [cobox_a10D]_N, cobox_a10D = CO <Char>_N,
                      cobox_a10E = CO <HTML>_N, cobox_a10F = CO [cobox_a10G]_N,
                      cobox_a10G = CO <Char>_N, cobox_a10H = CO <HTML>_N,
                      cobox_a10I = CO [cobox_a10J]_N, cobox_a10J = CO Sym cobox_a10K,
                      cobox_a10K = CO <[(Int, Int, Int)]>_N,
                      cobox_a10L = CO [cobox_a10M]_N, cobox_a10M = CO Sym cobox_a10N,
                      cobox_a10N = CO <(Int, Int, Int)>_N, cobox_a10O = CO <Integer>_N,
                      cobox_a10P = CO <a_aME>_N, cobox_a10Q = CO <Integer>_N,
                      cobox_a10R = CO <a_aMH>_N, cobox_a10S = CO <Integer>_N,
                      cobox_a10T = CO <a_aMK>_N, cobox_a10U = CO <Integer>_N,
                      cobox_a10V = CO <a_aOL>_N, cobox_a10W = CO <Integer>_N,
                      cobox_a10X = CO <a_aOO>_N, cobox_a10Y = CO <Integer>_N,
                      cobox_a10Z = CO <a_aOR>_N, cobox_a110 = CO <Integer>_N,
                      cobox_a111 = CO <a_aOW>_N,
                      cobox_a112 = CO (cobox_a113, cobox_a114, cobox_a115)_N,
                      cobox_a113 = CO Sym cobox_a116, cobox_a114 = CO Sym cobox_a117,
                      cobox_a115 = CO Sym cobox_a118, cobox_a116 = CO <Int>_N,
                      cobox_a117 = CO <Int>_N, cobox_a118 = CO <Int>_N,
                      cobox_a119 = CO IO cobox_a11a_N, cobox_a11a = CO <()>_N,
                      cobox_a11b = CO [cobox_a11c]_N, cobox_a11c = CO <Char>_N,
                      cobox_a11d = CO <HTML>_N, cobox_a11e = CO <HTML>_N,
                      cobox_a11f = CO Maybe cobox_a11g_N, cobox_a11g = CO Sym cobox_a11h,
                      cobox_a11h = CO <Requirement>_N, cobox_a11i = CO <HTML>_N,
                      cobox_a11j = CO Maybe cobox_a11k_N, cobox_a11k = CO Sym cobox_a11l,
                      cobox_a11l = CO <Requirement>_N, cobox_a11m = CO <HTML>_N,
                      cobox_a11n = CO [cobox_a11o]_N, cobox_a11o = CO <Char>_N,
                      cobox_a11p = CO Sym cobox_a11r, cobox_a11q = CO Sym cobox_a11s,
                      cobox_a11r = CO <String>_N, cobox_a11s = CO [cobox_a11t]_N,
                      cobox_a11t = CO <Char>_N, cobox_a11u = CO Maybe cobox_a11v_N,
                      cobox_a11v = CO Sym cobox_a11w, cobox_a11w = CO <Requirement>_N,
                      cobox_a11x = CO (cobox_a11y, cobox_a11z)_N,
                      cobox_a11y = CO [cobox_a11A]_N, cobox_a11z = CO [cobox_a11B]_N,
                      cobox_a11A = CO <Char>_N, cobox_a11B = CO <Char>_N,
                      cobox_a11C = CO [cobox_a11D]_N, cobox_a11D = CO <Char>_N,
                      cobox_a11E = CO Sym cobox_a11G, cobox_a11F = CO Sym cobox_a11I,
                      cobox_a11G = CO [cobox_a11H]_N, cobox_a11H = CO <Char>_N,
                      cobox_a11I = CO <String>_N, cobox_a11J = CO Maybe cobox_a11K_N,
                      cobox_a11K = CO Sym cobox_a11L, cobox_a11L = CO <Requirement>_N,
                      cobox_a11M = CO Maybe cobox_a11N_N,
                      cobox_a11N = CO (cobox_a11O, cobox_a11P)_N,
                      cobox_a11O = CO [cobox_a11Q]_N, cobox_a11P = CO [cobox_a11R]_N,
                      cobox_a11Q = CO <Char>_N, cobox_a11R = CO <Char>_N,
                      cobox_a11S = CO [cobox_a11T]_N, cobox_a11T = CO Sym cobox_a11U,
                      cobox_a11U = CO <Maybe Requirement>_N,
                      cobox_a11V = CO Maybe cobox_a11W_N,
                      cobox_a11W = CO (cobox_a11X, cobox_a11Y)_N,
                      cobox_a11X = CO [cobox_a11Z]_N, cobox_a11Y = CO [cobox_a120]_N,
                      cobox_a11Z = CO <Char>_N, cobox_a120 = CO <Char>_N,
                      cobox_a121 = CO (cobox_a122, cobox_a123)_N,
                      cobox_a122 = CO [cobox_a124]_N, cobox_a123 = CO [cobox_a125]_N,
                      cobox_a124 = CO <Char>_N, cobox_a125 = CO <Char>_N,
                      cobox_a126 = CO Sym cobox_a127, cobox_a127 = CO <HTML>_N,
                      cobox_a128 = CO Maybe cobox_a129_N,
                      cobox_a129 = CO (cobox_a12a, cobox_a12b)_N,
                      cobox_a12a = CO [cobox_a12c]_N, cobox_a12b = CO [cobox_a12d]_N,
                      cobox_a12c = CO <Char>_N, cobox_a12d = CO <Char>_N,
                      cobox_a12e = CO [cobox_a12f]_N, cobox_a12f = CO Sym cobox_a12g,
                      cobox_a12g = CO <Maybe Requirement>_N,
                      cobox_a12h = CO Sym cobox_a12j, cobox_a12i = CO Sym cobox_a12k,
                      cobox_a12j = CO <Requirement>_N,
                      cobox_a12k = CO Maybe cobox_a12l_N,
                      cobox_a12l = CO (cobox_a12m, cobox_a12n)_N,
                      cobox_a12m = CO [cobox_a12o]_N, cobox_a12n = CO [cobox_a12p]_N,
                      cobox_a12o = CO <Char>_N, cobox_a12p = CO <Char>_N,
                      cobox_a12q = CO <HTML>_N, cobox_a12r = CO Sym cobox_a12s,
                      cobox_a12s = CO (cobox_a12t, cobox_a12u)_N,
                      cobox_a12t = CO [cobox_a12v]_N, cobox_a12u = CO [cobox_a12w]_N,
                      cobox_a12v = CO <Char>_N, cobox_a12w = CO <Char>_N}
  current tybinds  = (t_aBW, IO ())
                     (t_aBY, HTML)
                     (t_aC0, String)
                     (t_aC1, [HTML])
                     (t_aC2, HTML)
                     (t_aC6, String)
                     (t_aC7, HTML)
                     (t_aCa, [Attribute])
                     (t_aCb, [HTML])
                     (t_aCc, HTML)
                     (t_aCg, Int)
                     (t_aCh, String)
                     (t_aCi, HTML)
                     (t_aCm, [HTML])
                     (t_aCn, HTML)
                     (t_aCq, [[HTML]])
                     (t_aCr, HTML)
                     (t_aCx, (Int, Int, Int))
                     (t_aCy, HTML)
                     (t_aCB, [(Int, Int, Int)])
                     (t_aCC, HTML)
                     (t_aCF, [[(Int, Int, Int)]])
                     (t_aCG, HTML)
                     (t_aCJ, Int)
                     (t_aCK, String)
                     (t_aCN, Int)
                     (t_aCO, Int)
                     (t_aCP, Int)
                     (t_aCQ, String)
                     (t_aCV, [(String, String)])
                     (t_aCW, String)
                     (t_aCZ, HTML)
                     (t_aD0, String)
                     (t_aD3, HTML)
                     (t_aD4, Doc)
                     (t_aD7, [Requirement])
                     (t_aDo, [Maybe Requirement])
                     (t_aDp, Maybe Requirement)
                     (t_aDt, [Requirement])
                     (t_aDu, HTML)
                     (t_aDv, Maybe Requirement)
                     (t_aDA, HTML)
                     (t_aDB, Requirement)
                     (t_aDC, Maybe Requirement)
                     (t_aDG, HTML)
                     (t_aDI, Int)
                     (t_aDJ, Char)
                     (t_aDM, Int)
                     (t_aDN, String)
                     (t_aDQ, String)
                     (t_aDR, String)
                     (t_aDS, Bool)
                     (a_aEn, [HTML])
                     (b_aEo, HTML)
                     (t_aEt, t_aEu -> t_aEv)
                     (t_aEu, ([a_aEx], b_aEC))
                     (t_aEv, [a_aEx])
                     (a_aEx, a_aEF)
                     (a_aEB, [a_aEx])
                     (b_aEC, [Char])
                     (a_aEF, Char)
                     (a_aEI, Char)
                     (a_aEL, Char)
                     (a_aEP, [Char])
                     (b_aEQ, [Char])
                     (a_aEV, Char)
                     (a_aEX, [a_aF0])
                     (b_aEY, [Char])
                     (a_aF0, Char)
                     (a_aF3, ([Char], [Char]))
                     (b_aF4, [Char])
                     (a_aFc, Char)
                     (a_aFf, Char)
                     (a_aFi, Char)
                     (a_aFo, Char)
                     (a_aFr, Char)
                     (a_aFu, Char)
                     (a_aFy, Char)
                     (a_aFB, Char)
                     (a_aFF, HTML)
                     (b_aFG, Char)
                     (a_aFK, Char)
                     (a_aFN, Char)
                     (a_aG4, Char)
                     (a_aG7, Char)
                     (a_aGa, Char)
                     (a_aGe, Char)
                     (a_aGh, Char)
                     (a_aGk, Char)
                     (a_aGn, Char)
                     (a_aGy, Int)
                     (a_aGB, HTML)
                     (a_aGE, Int)
                     (a_aGI, Char)
                     (a_aGL, Char)
                     (a_aGO, Char)
                     (a_aGS, Char)
                     (a_aGV, Char)
                     (a_aGZ, Int)
                     (a_aH2, HTML)
                     (a_aH5, Int)
                     (a_aHb, Char)
                     (a_aHe, Char)
                     (a_aHh, Char)
                     (a_aHn, HTML)
                     (a_aHr, Char)
                     (a_aHu, Char)
                     (a_aHC, Char)
                     (a_aHF, Char)
                     (a_aHI, Char)
                     (a_aHN, Doc)
                     (b_aHO, Doc)
                     (a_aHS, Doc)
                     (b_aHT, Doc)
                     (a_aHW, HTML)
                     (b_aHX, Doc)
                     (a_aI2, Char)
                     (a_aI5, Char)
                     (t_aIa, Requirement)
                     (t_aIc, String)
                     (t_aId, String)
                     (t_aIh, String)
                     (t_aIi, String)
                     (t_aIm, String)
                     (t_aIn, String)
                     (t_aIr, String)
                     (t_aIs, String)
                     (t_aIw, String)
                     (t_aIx, String)
                     (t_aIB, String)
                     (t_aIC, String)
                     (t_aIH, Maybe Requirement)
                     (t_aIJ, Requirement)
                     (t_aIN, Maybe Requirement)
                     (a_aIP, Requirement)
                     (t_aIR, Maybe Requirement)
                     (t_aIT, Requirement)
                     (a_aIV, Requirement)
                     (a_aJe, Int -> Char)
                     (a_aJh, Int -> String)
                     (a_aJw, Int)
                     (a_aJA, Int)
                     (t_aJG, Char)
                     (a_aJJ, Int)
                     (a_aJN, Int)
                     (t_aJR, t_aJS -> t_aJT)
                     (t_aJS, Int)
                     (t_aJT, [a_aJV])
                     (a_aJV, Char)
                     (a_aK6, Int)
                     (a_aKa, Int)
                     (a_aKr, Int)
                     (a_aKv, Int)
                     (a_aKy, Char)
                     (a_aKB, Char)
                     (t_aKD, Int)
                     (t_aKE, [Char])
                     (a_aKI, Char)
                     (t_aKK, Int)
                     (t_aKL, [Char])
                     (t_aKP, Int)
                     (t_aKQ, [Char])
                     (t_aKV, Int)
                     (t_aKW, Int)
                     (t_aKX, Int)
                     (a_aL9, (Int, Int, Int))
                     (b_aLa, HTML)
                     (a_aLl, [(Int, Int, Int)])
                     (b_aLm, HTML)
                     (a_aLs, Char)
                     (t_aLC, HTML)
                     (a_aLF, Int)
                     (t_aLK, [HTML])
                     (t_aLM, HTML)
                     (t_aLP, Attribute)
                     (t_aLR, String)
                     (t_aLS, String)
                     (t_aLW, HTML)
                     (t_aM2, HTML)
                     (t_aM5, Attribute)
                     (t_aM7, String)
                     (t_aM8, String)
                     (t_aMc, HTML)
                     (t_aMi, HTML)
                     (t_aMl, Attribute)
                     (t_aMn, String)
                     (t_aMo, String)
                     (t_aMs, HTML)
                     (t_aMz, [(Int, Int, Int)])
                     (t_aMB, (Int, Int, Int))
                     (t_aMD, a_aME)
                     (a_aME, a_aMH)
                     (a_aMH, a_aMK)
                     (a_aMK, Int)
                     (t_aOK, a_aOL)
                     (a_aOL, a_aOO)
                     (a_aOO, a_aOR)
                     (a_aOR, Int)
                     (t_aOV, a_aOW)
                     (a_aOW, Int)
                     (t_aOZ, Int)
                     (t_aP0, Int)
                     (t_aP1, Int)
                     (a_aPb, String -> String -> Bool)
                     (a_aPf, Requirement)
                     (a_aPi, Requirement)
                     (a_aPn, String)
                     (b_aPo, String)
                     (a_aPr, Requirement)
                     (a_aPw, String)
                     (b_aPx, String)
                     (a_aPA, Requirement)
                     (a_aPE, HTML)
                     (b_aPF, Maybe Requirement)
                     (a_aPN, Requirement)
                     (b_aPO, Maybe Requirement)
  final wc = WC {wc_flat = [W] $dFractional_aK7 :: Fractional
                                                     Int [" a use of ‘/’ " HTML3.hs:70:52] (CDictCan)
                 wc_insol = [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                              ~
                                                                              [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
writeMetaTyVar t_aBW := IO ()
writeMetaTyVar t_aBY := HTML
writeMetaTyVar t_aC0 := String
writeMetaTyVar t_aC1 := [HTML]
writeMetaTyVar t_aC2 := HTML
writeMetaTyVar t_aC6 := String
writeMetaTyVar t_aC7 := HTML
writeMetaTyVar t_aCa := [Attribute]
writeMetaTyVar t_aCb := [HTML]
writeMetaTyVar t_aCc := HTML
writeMetaTyVar t_aCg := Int
writeMetaTyVar t_aCh := String
writeMetaTyVar t_aCi := HTML
writeMetaTyVar t_aCm := [HTML]
writeMetaTyVar t_aCn := HTML
writeMetaTyVar t_aCq := [[HTML]]
writeMetaTyVar t_aCr := HTML
writeMetaTyVar t_aCx := (Int, Int, Int)
writeMetaTyVar t_aCy := HTML
writeMetaTyVar t_aCB := [(Int, Int, Int)]
writeMetaTyVar t_aCC := HTML
writeMetaTyVar t_aCF := [[(Int, Int, Int)]]
writeMetaTyVar t_aCG := HTML
writeMetaTyVar t_aCJ := Int
writeMetaTyVar t_aCK := String
writeMetaTyVar t_aCN := Int
writeMetaTyVar t_aCO := Int
writeMetaTyVar t_aCP := Int
writeMetaTyVar t_aCQ := String
writeMetaTyVar t_aCV := [(String, String)]
writeMetaTyVar t_aCW := String
writeMetaTyVar t_aCZ := HTML
writeMetaTyVar t_aD0 := String
writeMetaTyVar t_aD3 := HTML
writeMetaTyVar t_aD4 := Doc
writeMetaTyVar t_aD7 := [Requirement]
writeMetaTyVar t_aDo := [Maybe Requirement]
writeMetaTyVar t_aDp := Maybe Requirement
writeMetaTyVar t_aDt := [Requirement]
writeMetaTyVar t_aDu := HTML
writeMetaTyVar t_aDv := Maybe Requirement
writeMetaTyVar t_aDA := HTML
writeMetaTyVar t_aDB := Requirement
writeMetaTyVar t_aDC := Maybe Requirement
writeMetaTyVar t_aDG := HTML
writeMetaTyVar t_aDI := Int
writeMetaTyVar t_aDJ := Char
writeMetaTyVar t_aDM := Int
writeMetaTyVar t_aDN := String
writeMetaTyVar t_aDQ := String
writeMetaTyVar t_aDR := String
writeMetaTyVar t_aDS := Bool
writeMetaTyVar a_aEn := [HTML]
writeMetaTyVar b_aEo := HTML
writeMetaTyVar t_aEt := t_aEu -> t_aEv
writeMetaTyVar t_aEu := ([a_aEx], b_aEC)
writeMetaTyVar t_aEv := [a_aEx]
writeMetaTyVar a_aEx := a_aEF
writeMetaTyVar a_aEB := [a_aEx]
writeMetaTyVar b_aEC := [Char]
writeMetaTyVar a_aEF := Char
writeMetaTyVar a_aEI := Char
writeMetaTyVar a_aEL := Char
writeMetaTyVar a_aEP := [Char]
writeMetaTyVar b_aEQ := [Char]
writeMetaTyVar a_aEV := Char
writeMetaTyVar a_aEX := [a_aF0]
writeMetaTyVar b_aEY := [Char]
writeMetaTyVar a_aF0 := Char
writeMetaTyVar a_aF3 := ([Char], [Char])
writeMetaTyVar b_aF4 := [Char]
writeMetaTyVar a_aFc := Char
writeMetaTyVar a_aFf := Char
writeMetaTyVar a_aFi := Char
writeMetaTyVar a_aFo := Char
writeMetaTyVar a_aFr := Char
writeMetaTyVar a_aFu := Char
writeMetaTyVar a_aFy := Char
writeMetaTyVar a_aFB := Char
writeMetaTyVar a_aFF := HTML
writeMetaTyVar b_aFG := Char
writeMetaTyVar a_aFK := Char
writeMetaTyVar a_aFN := Char
writeMetaTyVar a_aG4 := Char
writeMetaTyVar a_aG7 := Char
writeMetaTyVar a_aGa := Char
writeMetaTyVar a_aGe := Char
writeMetaTyVar a_aGh := Char
writeMetaTyVar a_aGk := Char
writeMetaTyVar a_aGn := Char
writeMetaTyVar a_aGy := Int
writeMetaTyVar a_aGB := HTML
writeMetaTyVar a_aGE := Int
writeMetaTyVar a_aGI := Char
writeMetaTyVar a_aGL := Char
writeMetaTyVar a_aGO := Char
writeMetaTyVar a_aGS := Char
writeMetaTyVar a_aGV := Char
writeMetaTyVar a_aGZ := Int
writeMetaTyVar a_aH2 := HTML
writeMetaTyVar a_aH5 := Int
writeMetaTyVar a_aHb := Char
writeMetaTyVar a_aHe := Char
writeMetaTyVar a_aHh := Char
writeMetaTyVar a_aHn := HTML
writeMetaTyVar a_aHr := Char
writeMetaTyVar a_aHu := Char
writeMetaTyVar a_aHC := Char
writeMetaTyVar a_aHF := Char
writeMetaTyVar a_aHI := Char
writeMetaTyVar a_aHN := Doc
writeMetaTyVar b_aHO := Doc
writeMetaTyVar a_aHS := Doc
writeMetaTyVar b_aHT := Doc
writeMetaTyVar a_aHW := HTML
writeMetaTyVar b_aHX := Doc
writeMetaTyVar a_aI2 := Char
writeMetaTyVar a_aI5 := Char
writeMetaTyVar t_aIa := Requirement
writeMetaTyVar t_aIc := String
writeMetaTyVar t_aId := String
writeMetaTyVar t_aIh := String
writeMetaTyVar t_aIi := String
writeMetaTyVar t_aIm := String
writeMetaTyVar t_aIn := String
writeMetaTyVar t_aIr := String
writeMetaTyVar t_aIs := String
writeMetaTyVar t_aIw := String
writeMetaTyVar t_aIx := String
writeMetaTyVar t_aIB := String
writeMetaTyVar t_aIC := String
writeMetaTyVar t_aIH := Maybe Requirement
writeMetaTyVar t_aIJ := Requirement
writeMetaTyVar t_aIN := Maybe Requirement
writeMetaTyVar a_aIP := Requirement
writeMetaTyVar t_aIR := Maybe Requirement
writeMetaTyVar t_aIT := Requirement
writeMetaTyVar a_aIV := Requirement
writeMetaTyVar a_aJe := Int -> Char
writeMetaTyVar a_aJh := Int -> String
writeMetaTyVar a_aJw := Int
writeMetaTyVar a_aJA := Int
writeMetaTyVar t_aJG := Char
writeMetaTyVar a_aJJ := Int
writeMetaTyVar a_aJN := Int
writeMetaTyVar t_aJR := t_aJS -> t_aJT
writeMetaTyVar t_aJS := Int
writeMetaTyVar t_aJT := [a_aJV]
writeMetaTyVar a_aJV := Char
writeMetaTyVar a_aK6 := Int
writeMetaTyVar a_aKa := Int
writeMetaTyVar a_aKr := Int
writeMetaTyVar a_aKv := Int
writeMetaTyVar a_aKy := Char
writeMetaTyVar a_aKB := Char
writeMetaTyVar t_aKD := Int
writeMetaTyVar t_aKE := [Char]
writeMetaTyVar a_aKI := Char
writeMetaTyVar t_aKK := Int
writeMetaTyVar t_aKL := [Char]
writeMetaTyVar t_aKP := Int
writeMetaTyVar t_aKQ := [Char]
writeMetaTyVar t_aKV := Int
writeMetaTyVar t_aKW := Int
writeMetaTyVar t_aKX := Int
writeMetaTyVar a_aL9 := (Int, Int, Int)
writeMetaTyVar b_aLa := HTML
writeMetaTyVar a_aLl := [(Int, Int, Int)]
writeMetaTyVar b_aLm := HTML
writeMetaTyVar a_aLs := Char
writeMetaTyVar t_aLC := HTML
writeMetaTyVar a_aLF := Int
writeMetaTyVar t_aLK := [HTML]
writeMetaTyVar t_aLM := HTML
writeMetaTyVar t_aLP := Attribute
writeMetaTyVar t_aLR := String
writeMetaTyVar t_aLS := String
writeMetaTyVar t_aLW := HTML
writeMetaTyVar t_aM2 := HTML
writeMetaTyVar t_aM5 := Attribute
writeMetaTyVar t_aM7 := String
writeMetaTyVar t_aM8 := String
writeMetaTyVar t_aMc := HTML
writeMetaTyVar t_aMi := HTML
writeMetaTyVar t_aMl := Attribute
writeMetaTyVar t_aMn := String
writeMetaTyVar t_aMo := String
writeMetaTyVar t_aMs := HTML
writeMetaTyVar t_aMz := [(Int, Int, Int)]
writeMetaTyVar t_aMB := (Int, Int, Int)
writeMetaTyVar t_aMD := a_aME
writeMetaTyVar a_aME := a_aMH
writeMetaTyVar a_aMH := a_aMK
writeMetaTyVar a_aMK := Int
writeMetaTyVar t_aOK := a_aOL
writeMetaTyVar a_aOL := a_aOO
writeMetaTyVar a_aOO := a_aOR
writeMetaTyVar a_aOR := Int
writeMetaTyVar t_aOV := a_aOW
writeMetaTyVar a_aOW := Int
writeMetaTyVar t_aOZ := Int
writeMetaTyVar t_aP0 := Int
writeMetaTyVar t_aP1 := Int
writeMetaTyVar a_aPb := String -> String -> Bool
writeMetaTyVar a_aPf := Requirement
writeMetaTyVar a_aPi := Requirement
writeMetaTyVar a_aPn := String
writeMetaTyVar b_aPo := String
writeMetaTyVar a_aPr := Requirement
writeMetaTyVar a_aPw := String
writeMetaTyVar b_aPx := String
writeMetaTyVar a_aPA := Requirement
writeMetaTyVar a_aPE := HTML
writeMetaTyVar b_aPF := Maybe Requirement
writeMetaTyVar a_aPN := Requirement
writeMetaTyVar b_aPO := Maybe Requirement
Constraint solver steps = 506
End simplifyTop }
reportUnsolved {
reportUnsolved (before unflattening)
  WC {wc_flat = [W] $dFractional_aK7 :: Fractional
                                          Int [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
      wc_insol = [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                   ~
                                                                   [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
reportUnsolved (after unflattening):
  WC {wc_flat = [W] $dFractional_aK7 :: Fractional
                                          Int [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
      wc_insol = [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                   ~
                                                                   [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
reportFlats
  Flats = {}
  Suppress = False
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {[W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                             ~
                                                             [HTML] " HTML3.hs:50:29-39] (CNonCanonical)}
  Suppress = False
tryReporters {
  [[W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                     ~
                                                     [HTML] " HTML3.hs:50:29-39] (CNonCanonical)]
tryReporters: yes
  Utterly wrong [[W] cobox_aG2 :: HTML
                                  ~ [HTML] [" a type equality HTML
                                                              ~
                                                              [HTML] " HTML3.hs:50:29-39] (CNonCanonical)]
relevantBindings
  [atts, tag, ppHTML, toon, toonAtts, ul, li, font, text, document]
Adding error:
  HTML3.hs:50:29:
      Couldn't match expected type ‘[HTML]’ with actual type ‘HTML’
      In the pattern: Text string
      In the pattern: DoubleTag tag atts (Text string)
      In an equation for ‘ppHTML’:
          ppHTML (DoubleTag tag atts (Text string))
            = tekst
                ("<"
                 ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {[W] $dFractional_aK7 :: Fractional
                                     Int [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)}
  Suppress = True
tryReporters {
  [[W] $dFractional_aK7 :: Fractional
                             Int [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)]
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: yes
  Dicts [[W] $dFractional_aK7 :: Fractional
                                   Int [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)]
relevantBindings
  [getal, hexaDec, c, b, a, color, intLetter, showInt, chr,
   voorbeeld, dunUit, regels, ppHTML, toon, toonAtts, ul, li, font,
   text, document]
mk_dict_err
  [W] $dFractional_aK7 :: Fractional
                            Int [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
  False
tryReporters }
reportUnsolved }
InstEnvs (External) {
  instance Control.Applicative.Alternative []
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus m =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance (Control.Arrow.ArrowZero a, Control.Arrow.ArrowPlus a) =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.ArrowPlus a =>
           Control.Applicative.Alternative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Bounded GHC.Types.Word -- Defined in ‘GHC.Enum’
  instance Bounded Ordering -- Defined in ‘GHC.Enum’
  instance Bounded Int -- Defined in ‘GHC.Enum’
  instance Bounded Char -- Defined in ‘GHC.Enum’
  instance Bounded Bool -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g, Bounded h, Bounded i, Bounded j, Bounded k,
            Bounded l, Bounded m, Bounded n, Bounded o) =>
           Bounded (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g, Bounded h, Bounded i, Bounded j, Bounded k,
            Bounded l, Bounded m, Bounded n) =>
           Bounded (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g, Bounded h, Bounded i, Bounded j, Bounded k,
            Bounded l, Bounded m) =>
           Bounded (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g, Bounded h, Bounded i, Bounded j, Bounded k,
            Bounded l) =>
           Bounded (a, b, c, d, e, f, g, h, i, j, k, l)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g, Bounded h, Bounded i, Bounded j,
            Bounded k) =>
           Bounded (a, b, c, d, e, f, g, h, i, j, k)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g, Bounded h, Bounded i, Bounded j) =>
           Bounded (a, b, c, d, e, f, g, h, i, j)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g, Bounded h, Bounded i) =>
           Bounded (a, b, c, d, e, f, g, h, i)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g, Bounded h) =>
           Bounded (a, b, c, d, e, f, g, h)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f, Bounded g) =>
           Bounded (a, b, c, d, e, f, g)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e,
            Bounded f) =>
           Bounded (a, b, c, d, e, f)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d, Bounded e) =>
           Bounded (a, b, c, d, e)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c, Bounded d) =>
           Bounded (a, b, c, d)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b, Bounded c) => Bounded (a, b, c)
    -- Defined in ‘GHC.Enum’
  instance (Bounded a, Bounded b) => Bounded (a, b)
    -- Defined in ‘GHC.Enum’
  instance Bounded () -- Defined in ‘GHC.Enum’
  instance Enum Ordering -- Defined in ‘GHC.Enum’
  instance Enum Integer -- Defined in ‘GHC.Enum’
  instance Enum Int -- Defined in ‘GHC.Enum’
  instance Enum Char -- Defined in ‘GHC.Enum’
  instance Enum Bool -- Defined in ‘GHC.Enum’
  instance Enum () -- Defined in ‘GHC.Enum’
  instance Enum GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Enum (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Enum Float -- Defined in ‘GHC.Float’
  instance Enum Double -- Defined in ‘GHC.Float’
  instance Eq a => Eq [a] -- Defined in ‘GHC.Classes’
  instance Eq GHC.Types.Word -- Defined in ‘GHC.Classes’
  instance Eq Ordering -- Defined in ‘GHC.Classes’
  instance Eq Int -- Defined in ‘GHC.Classes’
  instance Eq Float -- Defined in ‘GHC.Classes’
  instance Eq Double -- Defined in ‘GHC.Classes’
  instance Eq Char -- Defined in ‘GHC.Classes’
  instance Eq Bool -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m, Eq n, Eq o) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m, Eq n) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j) =>
           Eq (a, b, c, d, e, f, g, h, i, j)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i) =>
           Eq (a, b, c, d, e, f, g, h, i)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h) =>
           Eq (a, b, c, d, e, f, g, h)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g) =>
           Eq (a, b, c, d, e, f, g)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f) =>
           Eq (a, b, c, d, e, f)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e) => Eq (a, b, c, d, e)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d) => Eq (a, b, c, d)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c) => Eq (a, b, c)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b) => Eq (a, b) -- Defined in ‘GHC.Classes’
  instance Eq () -- Defined in ‘GHC.Classes’
  instance Eq a => Eq (Maybe a) -- Defined in ‘Data.Maybe’
  instance Eq Integer -- Defined in ‘integer-gmp:GHC.Integer.Type’
  instance Eq a => Eq (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Eq a => Eq (GHC.Real.Ratio a) -- Defined in ‘GHC.Real’
  instance Floating Float -- Defined in ‘GHC.Float’
  instance Floating Double -- Defined in ‘GHC.Float’
  instance Integral a => Fractional (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Fractional Float -- Defined in ‘GHC.Float’
  instance Fractional Double -- Defined in ‘GHC.Float’
  instance Integral GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral Integer -- Defined in ‘GHC.Real’
  instance Integral Int -- Defined in ‘GHC.Real’
  instance Monad Maybe -- Defined in ‘Data.Maybe’
  instance Monad m => Monad (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Monad [] -- Defined in ‘GHC.Base’
  instance Monad IO -- Defined in ‘GHC.Base’
  instance Monad ((->) r) -- Defined in ‘GHC.Base’
  instance Functor Maybe -- Defined in ‘Data.Maybe’
  instance Functor Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m => Functor (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Functor (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Functor (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Functor [] -- Defined in ‘GHC.Base’
  instance Functor IO -- Defined in ‘GHC.Base’
  instance Functor ((->) r) -- Defined in ‘GHC.Base’
  instance Functor ((,) a) -- Defined in ‘GHC.Base’
  instance Num GHC.Types.Word -- Defined in ‘GHC.Num’
  instance Num Integer -- Defined in ‘GHC.Num’
  instance Num Int -- Defined in ‘GHC.Num’
  instance Integral a => Num (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Num Float -- Defined in ‘GHC.Float’
  instance Num Double -- Defined in ‘GHC.Float’
  instance Ord a => Ord [a] -- Defined in ‘GHC.Classes’
  instance Ord GHC.Types.Word -- Defined in ‘GHC.Classes’
  instance Ord Ordering -- Defined in ‘GHC.Classes’
  instance Ord Int -- Defined in ‘GHC.Classes’
  instance Ord Float -- Defined in ‘GHC.Classes’
  instance Ord Double -- Defined in ‘GHC.Classes’
  instance Ord Char -- Defined in ‘GHC.Classes’
  instance Ord Bool -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m, Ord n) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j) =>
           Ord (a, b, c, d, e, f, g, h, i, j)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i) =>
           Ord (a, b, c, d, e, f, g, h, i)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g,
            Ord h) =>
           Ord (a, b, c, d, e, f, g, h)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g) =>
           Ord (a, b, c, d, e, f, g)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f) =>
           Ord (a, b, c, d, e, f)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e) => Ord (a, b, c, d, e)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d) => Ord (a, b, c, d)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c) => Ord (a, b, c)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b) => Ord (a, b) -- Defined in ‘GHC.Classes’
  instance Ord () -- Defined in ‘GHC.Classes’
  instance Ord a => Ord (Maybe a) -- Defined in ‘Data.Maybe’
  instance Ord Integer -- Defined in ‘integer-gmp:GHC.Integer.Type’
  instance Ord a => Ord (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Integral a => Ord (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Read a => Read (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Real GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Real (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Real Integer -- Defined in ‘GHC.Real’
  instance Real Int -- Defined in ‘GHC.Real’
  instance Real Float -- Defined in ‘GHC.Float’
  instance Real Double -- Defined in ‘GHC.Float’
  instance RealFloat Float -- Defined in ‘GHC.Float’
  instance RealFloat Double -- Defined in ‘GHC.Float’
  instance Integral a => RealFrac (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance RealFrac Float -- Defined in ‘GHC.Float’
  instance RealFrac Double -- Defined in ‘GHC.Float’
  instance Show a => Show (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance (Integral a, Show a) => Show (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Show Float -- Defined in ‘GHC.Float’
  instance Show Double -- Defined in ‘GHC.Float’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Applicative
    -- Defined in ‘Control.Applicative’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Alternative
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus [] -- Defined in ‘Control.Monad’
  instance Control.Monad.MonadPlus Maybe
    -- Defined in ‘Control.Monad’
  instance Control.Applicative.Applicative []
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (GHC.ST.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             (base:Control.Monad.ST.Lazy.Imp.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Data.Proxy.Proxy
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative IO
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (Either e)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid m =>
           Control.Applicative.Applicative (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative ((->) a)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Control.Applicative.Applicative ((,) a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedMonad m a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedArrow a b c)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.Const a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0Const
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Data.Monoid.Monoid (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
End InstEnvs }
InstEnvs (Internal) {
End InstEnvs }
famInstEnvs (External) {
  type GHC.Generics.Rep Char
    ~ GHC.Generics.D1
        GHC.Generics.D_Char
        (GHC.Generics.C1
           GHC.Generics.C_Char
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Char)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Double
    ~ GHC.Generics.D1
        GHC.Generics.D_Double
        (GHC.Generics.C1
           GHC.Generics.C_Double
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Double)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Float
    ~ GHC.Generics.D1
        GHC.Generics.D_Float
        (GHC.Generics.C1
           GHC.Generics.C_Float
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Float)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Int
    ~ GHC.Generics.D1
        GHC.Generics.D_Int
        (GHC.Generics.C1
           GHC.Generics.C_Int
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Proxy.Proxy t)
    ~ GHC.Generics.D1
        GHC.Generics.D1Proxy
        (GHC.Generics.C1 GHC.Generics.C1_0Proxy GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f, g)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 g)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 f)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 e)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ()
    ~ GHC.Generics.D1
        GHC.Generics.D1()
        (GHC.Generics.C1 GHC.Generics.C1_0() GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Ordering
    ~ GHC.Generics.D1
        GHC.Generics.D1Ordering
        (GHC.Generics.C1 GHC.Generics.C1_0Ordering GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Ordering GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Ordering GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Bool
    ~ GHC.Generics.D1
        GHC.Generics.D1Bool
        (GHC.Generics.C1 GHC.Generics.C1_0Bool GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Bool GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Either a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Maybe a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep [a]
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 [a])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.U1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1U1
        (GHC.Generics.C1 GHC.Generics.C1_0U1 GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Par1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Par1
        (GHC.Generics.C1
           GHC.Generics.C1_0Par1
           (GHC.Generics.S1 GHC.Generics.S1_0_0Par1 (GHC.Generics.Rec0 p)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Rec1 f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Rec1
        (GHC.Generics.C1
           GHC.Generics.C1_0Rec1
           (GHC.Generics.S1
              GHC.Generics.S1_0_0Rec1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.K1 i c p)
    ~ GHC.Generics.D1
        GHC.Generics.D1K1
        (GHC.Generics.C1
           GHC.Generics.C1_0K1
           (GHC.Generics.S1 GHC.Generics.S1_0_0K1 (GHC.Generics.Rec0 c)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.M1 i c f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1M1
        (GHC.Generics.C1
           GHC.Generics.C1_0M1
           (GHC.Generics.S1 GHC.Generics.S1_0_0M1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:+:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:+:
        (GHC.Generics.C1
           GHC.Generics.C1_0:+:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p)))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1:+:
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:*:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:*:
        (GHC.Generics.C1
           GHC.Generics.C1_0:*:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p))
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:.:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:.:
        (GHC.Generics.C1
           GHC.Generics.C1_0:.:
           (GHC.Generics.S1
              GHC.Generics.S1_0_0:.: (GHC.Generics.Rec0 (f (g p)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Associativity
    ~ GHC.Generics.D1
        GHC.Generics.D1Associativity
        (GHC.Generics.C1 GHC.Generics.C1_0Associativity GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Associativity GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Associativity GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Fixity
    ~ GHC.Generics.D1
        GHC.Generics.D1Fixity
        (GHC.Generics.C1 GHC.Generics.C1_0Fixity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Fixity
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector
                               (GHC.Generics.Rec0 GHC.Generics.Associativity)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Arity
    ~ GHC.Generics.D1
        GHC.Generics.D1Arity
        (GHC.Generics.C1 GHC.Generics.C1_0Arity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Arity
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Monoid.Dual a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Endo a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Endo
        (GHC.Generics.C1
           Data.Monoid.C1_0Endo
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Endo (GHC.Generics.Rec0 (a -> a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.All
    ~ GHC.Generics.D1
        Data.Monoid.D1All
        (GHC.Generics.C1
           Data.Monoid.C1_0All
           (GHC.Generics.S1 Data.Monoid.S1_0_0All (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.Any
    ~ GHC.Generics.D1
        Data.Monoid.D1Any
        (GHC.Generics.C1
           Data.Monoid.C1_0Any
           (GHC.Generics.S1 Data.Monoid.S1_0_0Any (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Sum a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Product a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.First a)
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Last a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Last (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Control.Applicative.Const a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedMonad m a)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec0 (m a))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedArrow a b c)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow
              (GHC.Generics.Rec0 (a b c))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.ZipList a)
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec0 [a])))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 ((,,,,,,) a b c d e f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,,) a b c d e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,) a b c d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,) a b c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,) a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,) a)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 (Either a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Maybe
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 []
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec1 [])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Data.Monoid.Dual
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Sum
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Product
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.First
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Last
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1 Data.Monoid.S1_0_0Last (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 (Control.Applicative.Const a)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedMonad m)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec1 m)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedArrow a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow (GHC.Generics.Rec1 (a b))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 Control.Applicative.ZipList
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec1 [])))
    -- Defined in ‘Control.Applicative’
  type instance a Data.Type.Equality.== b
    ~ Data.Either.EqEither a b
    -- Defined in ‘Data.Either’
End famInstEnvs }
famInstEnvs (Internal) {
End famInstEnvs }
originalCts (simplifyTop)
  fvars =  [(aBW, t_aBW), (aBY, t_aBY), (aC0, t_aC0), (aC1, t_aC1),
            (aC2, t_aC2), (aC6, t_aC6), (aC7, t_aC7), (aCa, t_aCa),
            (aCb, t_aCb), (aCc, t_aCc), (aCg, t_aCg), (aCh, t_aCh),
            (aCi, t_aCi), (aCm, t_aCm), (aCn, t_aCn), (aCq, t_aCq),
            (aCr, t_aCr), (aCx, t_aCx), (aCy, t_aCy), (aCB, t_aCB),
            (aCC, t_aCC), (aCF, t_aCF), (aCG, t_aCG), (aCJ, t_aCJ),
            (aCK, t_aCK), (aCN, t_aCN), (aCO, t_aCO), (aCP, t_aCP),
            (aCQ, t_aCQ), (aCV, t_aCV), (aCW, t_aCW), (aCZ, t_aCZ),
            (aD0, t_aD0), (aD3, t_aD3), (aD4, t_aD4), (aD7, t_aD7),
            (aDo, t_aDo), (aDp, t_aDp), (aDt, t_aDt), (aDu, t_aDu),
            (aDv, t_aDv), (aDA, t_aDA), (aDB, t_aDB), (aDC, t_aDC),
            (aDG, t_aDG), (aDI, t_aDI), (aDJ, t_aDJ), (aDM, t_aDM),
            (aDN, t_aDN), (aDQ, t_aDQ), (aDR, t_aDR), (aDS, t_aDS),
            (aEn, a_aEn), (aEo, b_aEo), (aEt, t_aEt), (aEu, t_aEu),
            (aEv, t_aEv), (aEx, a_aEx), (aEB, a_aEB), (aEC, b_aEC),
            (aEF, a_aEF), (aEI, a_aEI), (aEL, a_aEL), (aEP, a_aEP),
            (aEQ, b_aEQ), (aEV, a_aEV), (aEX, a_aEX), (aEY, b_aEY),
            (aF0, a_aF0), (aF3, a_aF3), (aF4, b_aF4), (aFc, a_aFc),
            (aFf, a_aFf), (aFi, a_aFi), (aFo, a_aFo), (aFr, a_aFr),
            (aFu, a_aFu), (aFy, a_aFy), (aFB, a_aFB), (aFF, a_aFF),
            (aFG, b_aFG), (aFK, a_aFK), (aFN, a_aFN), (aG4, a_aG4),
            (aG7, a_aG7), (aGa, a_aGa), (aGe, a_aGe), (aGh, a_aGh),
            (aGk, a_aGk), (aGn, a_aGn), (aGy, a_aGy), (aGB, a_aGB),
            (aGE, a_aGE), (aGI, a_aGI), (aGL, a_aGL), (aGO, a_aGO),
            (aGS, a_aGS), (aGV, a_aGV), (aGZ, a_aGZ), (aH2, a_aH2),
            (aH5, a_aH5), (aHb, a_aHb), (aHe, a_aHe), (aHh, a_aHh),
            (aHn, a_aHn), (aHr, a_aHr), (aHu, a_aHu), (aHC, a_aHC),
            (aHF, a_aHF), (aHI, a_aHI), (aHN, a_aHN), (aHO, b_aHO),
            (aHS, a_aHS), (aHT, b_aHT), (aHW, a_aHW), (aHX, b_aHX),
            (aI2, a_aI2), (aI5, a_aI5), (aIa, t_aIa), (aIc, t_aIc),
            (aId, t_aId), (aIh, t_aIh), (aIi, t_aIi), (aIm, t_aIm),
            (aIn, t_aIn), (aIr, t_aIr), (aIs, t_aIs), (aIw, t_aIw),
            (aIx, t_aIx), (aIB, t_aIB), (aIC, t_aIC), (aIH, t_aIH),
            (aIJ, t_aIJ), (aIN, t_aIN), (aIP, a_aIP), (aIR, t_aIR),
            (aIT, t_aIT), (aIV, a_aIV), (aJe, a_aJe), (aJh, a_aJh),
            (aJw, a_aJw), (aJA, a_aJA), (aJG, t_aJG), (aJJ, a_aJJ),
            (aJN, a_aJN), (aJR, t_aJR), (aJS, t_aJS), (aJT, t_aJT),
            (aJV, a_aJV), (aK6, a_aK6), (aKa, a_aKa), (aKr, a_aKr),
            (aKv, a_aKv), (aKy, a_aKy), (aKB, a_aKB), (aKD, t_aKD),
            (aKE, t_aKE), (aKI, a_aKI), (aKK, t_aKK), (aKL, t_aKL),
            (aKP, t_aKP), (aKQ, t_aKQ), (aKV, t_aKV), (aKW, t_aKW),
            (aKX, t_aKX), (aL9, a_aL9), (aLa, b_aLa), (aLl, a_aLl),
            (aLm, b_aLm), (aLs, a_aLs), (aLC, t_aLC), (aLF, a_aLF),
            (aLK, t_aLK), (aLM, t_aLM), (aLP, t_aLP), (aLR, t_aLR),
            (aLS, t_aLS), (aLW, t_aLW), (aM2, t_aM2), (aM5, t_aM5),
            (aM7, t_aM7), (aM8, t_aM8), (aMc, t_aMc), (aMi, t_aMi),
            (aMl, t_aMl), (aMn, t_aMn), (aMo, t_aMo), (aMs, t_aMs),
            (aMz, t_aMz), (aMB, t_aMB), (aMD, t_aMD), (aME, a_aME),
            (aMH, a_aMH), (aMK, a_aMK), (aOK, t_aOK), (aOL, a_aOL),
            (aOO, a_aOO), (aOR, a_aOR), (aOV, t_aOV), (aOW, a_aOW),
            (aOZ, t_aOZ), (aP0, t_aP0), (aP1, t_aP1), (aPb, a_aPb),
            (aPf, a_aPf), (aPi, a_aPi), (aPn, a_aPn), (aPo, b_aPo),
            (aPr, a_aPr), (aPw, a_aPw), (aPx, b_aPx), (aPA, a_aPA),
            (aPE, a_aPE), (aPF, b_aPF), (aPN, a_aPN), (aPO, b_aPO)]
  wanted =  WC {wc_flat = [W] cobox_aBX :: IO ()
                                           ~ t_aBW [" a type equality IO ()
                                                                      ~
                                                                      t_aBW " HTML3.hs:114:9-13] (CNonCanonical)
                          [W] cobox_aBZ :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML3.hs:109:17-20] (CNonCanonical)
                          [W] cobox_aC3 :: String ~ t_aC0 [" a type equality String
                                                                             ~
                                                                             t_aC0 " HTML3.hs:106:13-36] (CNonCanonical)
                          [W] cobox_aC4 :: [HTML] ~ t_aC1 [" a type equality [HTML]
                                                                             ~
                                                                             t_aC1 " HTML3.hs:106:13-36] (CNonCanonical)
                          [W] cobox_aC5 :: HTML ~ t_aC2 [" a type equality HTML
                                                                           ~
                                                                           t_aC2 " HTML3.hs:106:13-36] (CNonCanonical)
                          [W] cobox_aC8 :: String ~ t_aC6 [" a type equality String
                                                                             ~
                                                                             t_aC6 " HTML3.hs:103:9-22] (CNonCanonical)
                          [W] cobox_aC9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                           ~
                                                                           t_aC7 " HTML3.hs:103:9-22] (CNonCanonical)
                          [W] cobox_aCd :: [Attribute] ~ t_aCa [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCa " HTML3.hs:100:9-37] (CNonCanonical)
                          [W] cobox_aCe :: [HTML] ~ t_aCb [" a type equality [HTML]
                                                                             ~
                                                                             t_aCb " HTML3.hs:100:9-37] (CNonCanonical)
                          [W] cobox_aCf :: HTML ~ t_aCc [" a type equality HTML
                                                                           ~
                                                                           t_aCc " HTML3.hs:100:9-37] (CNonCanonical)
                          [W] cobox_aCj :: Int ~ t_aCg [" a type equality Int
                                                                          ~
                                                                          t_aCg " HTML3.hs:97:6-26] (CNonCanonical)
                          [W] cobox_aCk :: String ~ t_aCh [" a type equality String
                                                                             ~
                                                                             t_aCh " HTML3.hs:97:6-26] (CNonCanonical)
                          [W] cobox_aCl :: HTML ~ t_aCi [" a type equality HTML
                                                                           ~
                                                                           t_aCi " HTML3.hs:97:6-26] (CNonCanonical)
                          [W] cobox_aCo :: [HTML] ~ t_aCm [" a type equality [HTML]
                                                                             ~
                                                                             t_aCm " HTML3.hs:94:7-20] (CNonCanonical)
                          [W] cobox_aCp :: HTML ~ t_aCn [" a type equality HTML
                                                                           ~
                                                                           t_aCn " HTML3.hs:94:7-20] (CNonCanonical)
                          [W] cobox_aCs :: [[HTML]] ~ t_aCq [" a type equality [[HTML]]
                                                                               ~
                                                                               t_aCq " HTML3.hs:91:7-22] (CNonCanonical)
                          [W] cobox_aCt :: HTML ~ t_aCr [" a type equality HTML
                                                                           ~
                                                                           t_aCr " HTML3.hs:91:7-22] (CNonCanonical)
                          [W] cobox_aCz :: (Int, Int, Int) ~ t_aCx [" a type equality (Int,
                                                                                       Int,
                                                                                       Int)
                                                                                      ~
                                                                                      t_aCx " HTML3.hs:88:13-35] (CNonCanonical)
                          [W] cobox_aCA :: HTML ~ t_aCy [" a type equality HTML
                                                                           ~
                                                                           t_aCy " HTML3.hs:88:13-35] (CNonCanonical)
                          [W] cobox_aCD :: [(Int, Int, Int)]
                                           ~ t_aCB [" a type equality [(Int, Int, Int)]
                                                                      ~
                                                                      t_aCB " HTML3.hs:85:12-36] (CNonCanonical)
                          [W] cobox_aCE :: HTML ~ t_aCC [" a type equality HTML
                                                                           ~
                                                                           t_aCC " HTML3.hs:85:12-36] (CNonCanonical)
                          [W] cobox_aCH :: [[(Int, Int, Int)]]
                                           ~ t_aCF [" a type equality [[(Int, Int, Int)]]
                                                                      ~
                                                                      t_aCF " HTML3.hs:82:15-41] (CNonCanonical)
                          [W] cobox_aCI :: HTML ~ t_aCG [" a type equality HTML
                                                                           ~
                                                                           t_aCG " HTML3.hs:82:15-41] (CNonCanonical)
                          [W] cobox_aCL :: Int ~ t_aCJ [" a type equality Int
                                                                          ~
                                                                          t_aCJ " HTML3.hs:72:14-26] (CNonCanonical)
                          [W] cobox_aCM :: String ~ t_aCK [" a type equality String
                                                                             ~
                                                                             t_aCK " HTML3.hs:72:14-26] (CNonCanonical)
                          [W] cobox_aCR :: Int ~ t_aCN [" a type equality Int
                                                                          ~
                                                                          t_aCN " HTML3.hs:68:10-36] (CNonCanonical)
                          [W] cobox_aCS :: Int ~ t_aCO [" a type equality Int
                                                                          ~
                                                                          t_aCO " HTML3.hs:68:10-36] (CNonCanonical)
                          [W] cobox_aCT :: Int ~ t_aCP [" a type equality Int
                                                                          ~
                                                                          t_aCP " HTML3.hs:68:10-36] (CNonCanonical)
                          [W] cobox_aCU :: String ~ t_aCQ [" a type equality String
                                                                             ~
                                                                             t_aCQ " HTML3.hs:68:10-36] (CNonCanonical)
                          [W] cobox_aCX :: [(String, String)]
                                           ~ t_aCV [" a type equality [(String, String)]
                                                                      ~
                                                                      t_aCV " HTML3.hs:60:13-40] (CNonCanonical)
                          [W] cobox_aCY :: String ~ t_aCW [" a type equality String
                                                                             ~
                                                                             t_aCW " HTML3.hs:60:13-40] (CNonCanonical)
                          [W] cobox_aD1 :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:55:9-22] (CNonCanonical)
                          [W] cobox_aD2 :: String ~ t_aD0 [" a type equality String
                                                                             ~
                                                                             t_aD0 " HTML3.hs:55:9-22] (CNonCanonical)
                          [W] cobox_aD5 :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:47:11-21] (CNonCanonical)
                          [W] cobox_aD6 :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:47:11-21] (CNonCanonical)
                          [W] cobox_aD8 :: [Requirement]
                                           ~ t_aD7 [" a type equality [Requirement]
                                                                      ~
                                                                      t_aD7 " HTML3.hs:41:11-23] (CNonCanonical)
                          [W] cobox_aDq :: [Maybe Requirement]
                                           ~ t_aDo [" a type equality [Maybe Requirement]
                                                                      ~
                                                                      t_aDo " HTML3.hs:36:11-50] (CNonCanonical)
                          [W] cobox_aDr :: Maybe Requirement ~ t_aDp [" a type equality Maybe
                                                                                          Requirement
                                                                                        ~
                                                                                        t_aDp " HTML3.hs:36:11-50] (CNonCanonical)
                          [W] cobox_aDw :: [Requirement]
                                           ~ t_aDt [" a type equality [Requirement]
                                                                      ~
                                                                      t_aDt " HTML3.hs:27:13-54] (CNonCanonical)
                          [W] cobox_aDx :: HTML ~ t_aDu [" a type equality HTML
                                                                           ~
                                                                           t_aDu " HTML3.hs:27:13-54] (CNonCanonical)
                          [W] cobox_aDy :: Maybe Requirement ~ t_aDv [" a type equality Maybe
                                                                                          Requirement
                                                                                        ~
                                                                                        t_aDv " HTML3.hs:27:13-54] (CNonCanonical)
                          [W] cobox_aDD :: HTML ~ t_aDA [" a type equality HTML
                                                                           ~
                                                                           t_aDA " HTML3.hs:20:13-52] (CNonCanonical)
                          [W] cobox_aDE :: Requirement ~ t_aDB [" a type equality Requirement
                                                                                  ~
                                                                                  t_aDB " HTML3.hs:20:13-52] (CNonCanonical)
                          [W] cobox_aDF :: Maybe Requirement ~ t_aDC [" a type equality Maybe
                                                                                          Requirement
                                                                                        ~
                                                                                        t_aDC " HTML3.hs:20:13-52] (CNonCanonical)
                          [W] cobox_aDH :: HTML ~ t_aDG [" a type equality HTML
                                                                           ~
                                                                           t_aDG " HTML3.hs:13:14-17] (CNonCanonical)
                          [W] cobox_aDK :: Int ~ t_aDI [" a type equality Int
                                                                          ~
                                                                          t_aDI " HTML3.hs:7:8-18] (CNonCanonical)
                          [W] cobox_aDL :: Char ~ t_aDJ [" a type equality Char
                                                                           ~
                                                                           t_aDJ " HTML3.hs:7:8-18] (CNonCanonical)
                          [W] cobox_aDO :: Int ~ t_aDM [" a type equality Int
                                                                          ~
                                                                          t_aDM " HTML3.hs:5:18-30] (CNonCanonical)
                          [W] cobox_aDP :: String ~ t_aDN [" a type equality String
                                                                             ~
                                                                             t_aDN " HTML3.hs:5:18-30] (CNonCanonical)
                          [W] cobox_aDT :: String ~ t_aDQ [" a type equality String
                                                                             ~
                                                                             t_aDQ " HTML3.hs:3:18-41] (CNonCanonical)
                          [W] cobox_aDU :: String ~ t_aDR [" a type equality String
                                                                             ~
                                                                             t_aDR " HTML3.hs:3:18-41] (CNonCanonical)
                          [W] cobox_aDV :: Bool ~ t_aDS [" a type equality Bool
                                                                           ~
                                                                           t_aDS " HTML3.hs:3:18-41] (CNonCanonical)
                          [W] cobox_aDX :: HTML ~ t_aC2 [" a type equality HTML
                                                                           ~
                                                                           t_aC2 " HTML3.hs:107:24-129] (CNonCanonical)
                          [W] cobox_aDY :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:107:34-39] (CNonCanonical)
                          [W] cobox_aDZ :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:107:45-100] (CNonCanonical)
                          [W] cobox_aE0 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:107:55-60] (CNonCanonical)
                          [W] cobox_aE1 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:107:66-98] (CNonCanonical)
                          [W] cobox_aE2 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:107:76-82] (CNonCanonical)
                          [W] cobox_aE3 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:107:88-97] (CNonCanonical)
                          [W] cobox_aE4 :: t_aC0 ~ String [" a type equality t_aC0
                                                                             ~
                                                                             String " HTML3.hs:107:93-97] (CNonCanonical)
                          [W] cobox_aE5 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:107:103-127] (CNonCanonical)
                          [W] cobox_aE6 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:107:113-118] (CNonCanonical)
                          [W] cobox_aE7 :: t_aC1 ~ [HTML] [" a type equality t_aC1
                                                                             ~
                                                                             [HTML] " HTML3.hs:107:123-127] (CNonCanonical)
                          [W] cobox_aE9 :: HTML ~ t_aC7 [" a type equality HTML
                                                                           ~
                                                                           t_aC7 " HTML3.hs:104:15-25] (CNonCanonical)
                          [W] cobox_aEa :: t_aC6 ~ String [" a type equality t_aC6
                                                                             ~
                                                                             String " HTML3.hs:104:20-25] (CNonCanonical)
                          [W] cobox_aEc :: HTML ~ t_aCc [" a type equality HTML
                                                                           ~
                                                                           t_aCc " HTML3.hs:101:20-47] (CNonCanonical)
                          [W] cobox_aEd :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:101:30-35] (CNonCanonical)
                          [W] cobox_aEe :: t_aCa ~ [Attribute] [" a type equality t_aCa
                                                                                  ~
                                                                                  [Attribute] " HTML3.hs:101:37-41] (CNonCanonical)
                          [W] cobox_aEf :: t_aCb ~ [HTML] [" a type equality t_aCb
                                                                             ~
                                                                             [HTML] " HTML3.hs:101:43-47] (CNonCanonical)
                          [W] cobox_aEh :: HTML ~ t_aCn [" a type equality HTML
                                                                           ~
                                                                           t_aCn " HTML3.hs:95:12-34] (CNonCanonical)
                          [W] cobox_aEi :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:95:22-25] (CNonCanonical)
                          [W] cobox_aEj :: t_aCm ~ [HTML] [" a type equality t_aCm
                                                                             ~
                                                                             [HTML] " HTML3.hs:95:30-34] (CNonCanonical)
                          [W] cobox_aEl :: HTML ~ t_aCr [" a type equality HTML
                                                                           ~
                                                                           t_aCr " HTML3.hs:92:12-43] (CNonCanonical)
                          [W] cobox_aEm :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:92:22-25] (CNonCanonical)
                          [W] cobox_aEp :: [b_aEo] ~ [HTML] [" a type equality [b_aEo]
                                                                               ~
                                                                               [HTML] " HTML3.hs:92:31-42] (CNonCanonical)
                          [W] cobox_aEq :: (t_aCm -> t_aCn)
                                           ~ (a_aEn -> b_aEo) [" a type equality t_aCm -> t_aCn
                                                                                 ~
                                                                                 a_aEn
                                                                                 -> b_aEo " HTML3.hs:92:35-36] (CNonCanonical)
                          [W] cobox_aEr :: t_aCq ~ [a_aEn] [" a type equality t_aCq
                                                                              ~
                                                                              [a_aEn] " HTML3.hs:92:38-42] (CNonCanonical)
                          [W] cobox_aEw :: t_aEt ~ (t_aEu -> t_aEv) [" a type equality t_aEt
                                                                                       ~
                                                                                       t_aEu
                                                                                       -> t_aEv " HTML3.hs:62:41-96] (CNonCanonical)
                          [W] cobox_aEy :: [a_aEx] ~ t_aEv [" a type equality [a_aEx]
                                                                              ~
                                                                              t_aEv " HTML3.hs:62:56-96] (CNonCanonical)
                          [W] cobox_aED :: a_aEB ~ [a_aEx] [" a type equality a_aEB
                                                                              ~
                                                                              [a_aEx] " HTML3.hs:62:56-62] (CNonCanonical)
                          [W] cobox_aEE :: t_aEu ~ (a_aEB, b_aEC) [" a type equality t_aEu
                                                                                     ~
                                                                                     (a_aEB,
                                                                                      b_aEC) " HTML3.hs:62:60-62] (CNonCanonical)
                          [W] cobox_aEG :: [a_aEF] ~ [a_aEx] [" a type equality [a_aEF]
                                                                                ~
                                                                                [a_aEx] " HTML3.hs:62:67-96] (CNonCanonical)
                          [W] cobox_aEH :: [Char] ~ [a_aEF] [" a type equality [Char]
                                                                               ~
                                                                               [a_aEF] " HTML3.hs:62:67-69] (CNonCanonical)
                          [W] cobox_aEJ :: [a_aEI] ~ [a_aEF] [" a type equality [a_aEI]
                                                                                ~
                                                                                [a_aEF] " HTML3.hs:62:74-96] (CNonCanonical)
                          [W] cobox_aEK :: [Char] ~ [a_aEI] [" a type equality [Char]
                                                                               ~
                                                                               [a_aEI] " HTML3.hs:62:74-77] (CNonCanonical)
                          [W] cobox_aEM :: [a_aEL] ~ [a_aEI] [" a type equality [a_aEL]
                                                                                ~
                                                                                [a_aEI] " HTML3.hs:62:82-96] (CNonCanonical)
                          [W] cobox_aER :: b_aEQ ~ [a_aEL] [" a type equality b_aEQ
                                                                              ~
                                                                              [a_aEL] " HTML3.hs:62:82-88] (CNonCanonical)
                          [W] cobox_aES :: t_aEu ~ (a_aEP, b_aEQ) [" a type equality t_aEu
                                                                                     ~
                                                                                     (a_aEP,
                                                                                      b_aEQ) " HTML3.hs:62:86-88] (CNonCanonical)
                          [W] cobox_aET :: [Char] ~ [a_aEL] [" a type equality [Char]
                                                                               ~
                                                                               [a_aEL] " HTML3.hs:62:93-96] (CNonCanonical)
                          [W] cobox_aEW :: [a_aEV] ~ t_aCW [" a type equality [a_aEV]
                                                                              ~
                                                                              t_aCW " HTML3.hs:61:17-55] (CNonCanonical)
                          [W] cobox_aEZ :: [b_aEY] ~ [[a_aEV]] [" a type equality [b_aEY]
                                                                                  ~
                                                                                  [[a_aEV]] " HTML3.hs:61:25-54] (CNonCanonical)
                          [W] cobox_aF1 :: ([a_aF0] -> [a_aF0])
                                           ~ (a_aEX -> b_aEY) [" a type equality [a_aF0] -> [a_aF0]
                                                                                 ~
                                                                                 a_aEX
                                                                                 -> b_aEY " HTML3.hs:61:30-33] (CNonCanonical)
                          [W] cobox_aF2 :: Char ~ a_aF0 [" a type equality Char
                                                                           ~
                                                                           a_aF0 " HTML3.hs:61:30-32] (CNonCanonical)
                          [W] cobox_aF5 :: [b_aF4] ~ [a_aEX] [" a type equality [b_aF4]
                                                                                ~
                                                                                [a_aEX] " HTML3.hs:61:37-53] (CNonCanonical)
                          [W] cobox_aF6 :: t_aEt ~ (a_aF3 -> b_aF4) [" a type equality t_aEt
                                                                                       ~
                                                                                       a_aF3
                                                                                       -> b_aF4 " HTML3.hs:61:41-48] (CNonCanonical)
                          [W] cobox_aF7 :: t_aCV ~ [a_aF3] [" a type equality t_aCV
                                                                              ~
                                                                              [a_aF3] " HTML3.hs:61:50-53] (CNonCanonical)
                          [W] cobox_aF9 :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:56:7-17] (CNonCanonical)
                          [W] cobox_aFa :: String ~ t_aD0 [" a type equality String
                                                                             ~
                                                                             t_aD0 " HTML3.hs:56:35-40] (CNonCanonical)
                          [W] cobox_aFb :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:57:7-24] (CNonCanonical)
                          [W] cobox_aFd :: [a_aFc] ~ t_aD0 [" a type equality [a_aFc]
                                                                              ~
                                                                              t_aD0 " HTML3.hs:57:35-68] (CNonCanonical)
                          [W] cobox_aFe :: [Char] ~ [a_aFc] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFc] " HTML3.hs:57:35-37] (CNonCanonical)
                          [W] cobox_aFg :: [a_aFf] ~ [a_aFc] [" a type equality [a_aFf]
                                                                                ~
                                                                                [a_aFc] " HTML3.hs:57:42-68] (CNonCanonical)
                          [W] cobox_aFh :: String ~ [a_aFf] [" a type equality String
                                                                               ~
                                                                               [a_aFf] " HTML3.hs:57:42-44] (CNonCanonical)
                          [W] cobox_aFj :: [a_aFi] ~ [a_aFf] [" a type equality [a_aFi]
                                                                                ~
                                                                                [a_aFf] " HTML3.hs:57:49-68] (CNonCanonical)
                          [W] cobox_aFk :: t_aCW ~ [a_aFi] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aFi] " HTML3.hs:57:49-61] (CNonCanonical)
                          [W] cobox_aFl :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:57:58-61] (CNonCanonical)
                          [W] cobox_aFm :: [Char] ~ [a_aFi] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFi] " HTML3.hs:57:66-68] (CNonCanonical)
                          [W] cobox_aFn :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:58:7-30] (CNonCanonical)
                          [W] cobox_aFp :: [a_aFo] ~ t_aD0 [" a type equality [a_aFo]
                                                                              ~
                                                                              t_aD0 " HTML3.hs:58:35-114] (CNonCanonical)
                          [W] cobox_aFq :: [Char] ~ [a_aFo] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFo] " HTML3.hs:58:35-37] (CNonCanonical)
                          [W] cobox_aFs :: [a_aFr] ~ [a_aFo] [" a type equality [a_aFr]
                                                                                ~
                                                                                [a_aFo] " HTML3.hs:58:42-114] (CNonCanonical)
                          [W] cobox_aFt :: String ~ [a_aFr] [" a type equality String
                                                                               ~
                                                                               [a_aFr] " HTML3.hs:58:42-44] (CNonCanonical)
                          [W] cobox_aFv :: [a_aFu] ~ [a_aFr] [" a type equality [a_aFu]
                                                                                ~
                                                                                [a_aFr] " HTML3.hs:58:49-114] (CNonCanonical)
                          [W] cobox_aFw :: t_aCW ~ [a_aFu] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aFu] " HTML3.hs:58:49-61] (CNonCanonical)
                          [W] cobox_aFx :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:58:58-61] (CNonCanonical)
                          [W] cobox_aFz :: [a_aFy] ~ [a_aFu] [" a type equality [a_aFy]
                                                                                ~
                                                                                [a_aFu] " HTML3.hs:58:66-114] (CNonCanonical)
                          [W] cobox_aFA :: [Char] ~ [a_aFy] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFy] " HTML3.hs:58:66-68] (CNonCanonical)
                          [W] cobox_aFC :: [a_aFB] ~ [a_aFy] [" a type equality [a_aFB]
                                                                                ~
                                                                                [a_aFy] " HTML3.hs:58:73-114] (CNonCanonical)
                          [W] cobox_aFH :: [b_aFG] ~ [a_aFB] [" a type equality [b_aFG]
                                                                                ~
                                                                                [a_aFB] " HTML3.hs:58:73-92] (CNonCanonical)
                          [W] cobox_aFI :: (t_aCZ -> t_aD0)
                                           ~ (a_aFF -> [b_aFG]) [" a type equality t_aCZ -> t_aD0
                                                                                   ~
                                                                                   a_aFF
                                                                                   -> [b_aFG] " HTML3.hs:58:83-86] (CNonCanonical)
                          [W] cobox_aFJ :: [HTML] ~ [a_aFF] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aFF] " HTML3.hs:58:88-92] (CNonCanonical)
                          [W] cobox_aFL :: [a_aFK] ~ [a_aFB] [" a type equality [a_aFK]
                                                                                ~
                                                                                [a_aFB] " HTML3.hs:58:97-114] (CNonCanonical)
                          [W] cobox_aFM :: [Char] ~ [a_aFK] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFK] " HTML3.hs:58:97-100] (CNonCanonical)
                          [W] cobox_aFO :: [a_aFN] ~ [a_aFK] [" a type equality [a_aFN]
                                                                                ~
                                                                                [a_aFK] " HTML3.hs:58:105-114] (CNonCanonical)
                          [W] cobox_aFP :: String ~ [a_aFN] [" a type equality String
                                                                               ~
                                                                               [a_aFN] " HTML3.hs:58:105-107] (CNonCanonical)
                          [W] cobox_aFQ :: [Char] ~ [a_aFN] [" a type equality [Char]
                                                                               ~
                                                                               [a_aFN] " HTML3.hs:58:112-114] (CNonCanonical)
                          [W] cobox_aFS :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:48:9-19] (CNonCanonical)
                          [W] cobox_aFT :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:48:37-48] (CNonCanonical)
                          [W] cobox_aFU :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML3.hs:48:43-48] (CNonCanonical)
                          [W] cobox_aFV :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:49:9-26] (CNonCanonical)
                          [W] cobox_aFW :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:49:37-69] (CNonCanonical)
                          [W] cobox_aFX :: t_aD0 ~ String [" a type equality t_aD0
                                                                             ~
                                                                             String " HTML3.hs:49:44-68] (CNonCanonical)
                          [W] cobox_aFY :: HTML ~ t_aCZ [" a type equality HTML
                                                                           ~
                                                                           t_aCZ " HTML3.hs:49:50-67] (CNonCanonical)
                          [W] cobox_aFZ :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML3.hs:49:60-62] (CNonCanonical)
                          [W] cobox_aG0 :: [Attribute]
                                           ~ [Attribute] [" a type equality [Attribute]
                                                                            ~
                                                                            [Attribute] " HTML3.hs:49:64-67] (CNonCanonical)
                          [W] cobox_aG1 :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:50:9-40] (CNonCanonical)
                          [W] cobox_aG2 :: HTML ~ [HTML] [" a type equality HTML
                                                                            ~
                                                                            [HTML] " HTML3.hs:50:29-39] (CNonCanonical)
                          [W] cobox_aG3 :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:50:45-118] (CNonCanonical)
                          [W] cobox_aG5 :: [a_aG4] ~ String [" a type equality [a_aG4]
                                                                               ~
                                                                               String " HTML3.hs:50:52-117] (CNonCanonical)
                          [W] cobox_aG6 :: [Char] ~ [a_aG4] [" a type equality [Char]
                                                                               ~
                                                                               [a_aG4] " HTML3.hs:50:52-54] (CNonCanonical)
                          [W] cobox_aG8 :: [a_aG7] ~ [a_aG4] [" a type equality [a_aG7]
                                                                                ~
                                                                                [a_aG4] " HTML3.hs:50:59-117] (CNonCanonical)
                          [W] cobox_aG9 :: String ~ [a_aG7] [" a type equality String
                                                                               ~
                                                                               [a_aG7] " HTML3.hs:50:59-61] (CNonCanonical)
                          [W] cobox_aGb :: [a_aGa] ~ [a_aG7] [" a type equality [a_aGa]
                                                                                ~
                                                                                [a_aG7] " HTML3.hs:50:66-117] (CNonCanonical)
                          [W] cobox_aGc :: t_aCW ~ [a_aGa] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aGa] " HTML3.hs:50:66-78] (CNonCanonical)
                          [W] cobox_aGd :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:50:75-78] (CNonCanonical)
                          [W] cobox_aGf :: [a_aGe] ~ [a_aGa] [" a type equality [a_aGe]
                                                                                ~
                                                                                [a_aGa] " HTML3.hs:50:83-117] (CNonCanonical)
                          [W] cobox_aGg :: [Char] ~ [a_aGe] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGe] " HTML3.hs:50:83-85] (CNonCanonical)
                          [W] cobox_aGi :: [a_aGh] ~ [a_aGe] [" a type equality [a_aGh]
                                                                                ~
                                                                                [a_aGe] " HTML3.hs:50:90-117] (CNonCanonical)
                          [W] cobox_aGj :: String ~ [a_aGh] [" a type equality String
                                                                               ~
                                                                               [a_aGh] " HTML3.hs:50:90-95] (CNonCanonical)
                          [W] cobox_aGl :: [a_aGk] ~ [a_aGh] [" a type equality [a_aGk]
                                                                                ~
                                                                                [a_aGh] " HTML3.hs:50:100-117] (CNonCanonical)
                          [W] cobox_aGm :: [Char] ~ [a_aGk] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGk] " HTML3.hs:50:100-103] (CNonCanonical)
                          [W] cobox_aGo :: [a_aGn] ~ [a_aGk] [" a type equality [a_aGn]
                                                                                ~
                                                                                [a_aGk] " HTML3.hs:50:108-117] (CNonCanonical)
                          [W] cobox_aGp :: String ~ [a_aGn] [" a type equality String
                                                                               ~
                                                                               [a_aGn] " HTML3.hs:50:108-110] (CNonCanonical)
                          [W] cobox_aGq :: [Char] ~ [a_aGn] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGn] " HTML3.hs:50:115-117] (CNonCanonical)
                          [W] cobox_aGr :: HTML ~ t_aD3 [" a type equality HTML
                                                                           ~
                                                                           t_aD3 " HTML3.hs:51:9-32] (CNonCanonical)
                          [W] $dEq_aGz :: Eq
                                            a_aGy [" a use of ‘==’ " HTML3.hs:51:50-51] (CNonCanonical)
                          [W] cobox_aGA :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:51:37-53] (CNonCanonical)
                          [W] cobox_aGC :: Int ~ a_aGy [" a type equality Int
                                                                          ~
                                                                          a_aGy " HTML3.hs:51:37-48] (CNonCanonical)
                          [W] cobox_aGD :: [HTML] ~ [a_aGB] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aGB] " HTML3.hs:51:44-48] (CNonCanonical)
                          [W] $dNum_aGF :: Num
                                             a_aGE [" the literal ‘0’ " HTML3.hs:51:53] (CNonCanonical)
                          [W] cobox_aGG :: (Integer -> a_aGE)
                                           ~ (Integer -> a_aGy) [" a type equality Integer -> a_aGE
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aGy " HTML3.hs:51:53] (CNonCanonical)
                          [W] cobox_aGH :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:51:57-114] (CNonCanonical)
                          [W] cobox_aGJ :: [a_aGI] ~ String [" a type equality [a_aGI]
                                                                               ~
                                                                               String " HTML3.hs:51:64-113] (CNonCanonical)
                          [W] cobox_aGK :: [Char] ~ [a_aGI] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGI] " HTML3.hs:51:64-66] (CNonCanonical)
                          [W] cobox_aGM :: [a_aGL] ~ [a_aGI] [" a type equality [a_aGL]
                                                                                ~
                                                                                [a_aGI] " HTML3.hs:51:71-113] (CNonCanonical)
                          [W] cobox_aGN :: String ~ [a_aGL] [" a type equality String
                                                                               ~
                                                                               [a_aGL] " HTML3.hs:51:71-73] (CNonCanonical)
                          [W] cobox_aGP :: [a_aGO] ~ [a_aGL] [" a type equality [a_aGO]
                                                                                ~
                                                                                [a_aGL] " HTML3.hs:51:78-113] (CNonCanonical)
                          [W] cobox_aGQ :: t_aCW ~ [a_aGO] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aGO] " HTML3.hs:51:78-90] (CNonCanonical)
                          [W] cobox_aGR :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:51:87-90] (CNonCanonical)
                          [W] cobox_aGT :: [a_aGS] ~ [a_aGO] [" a type equality [a_aGS]
                                                                                ~
                                                                                [a_aGO] " HTML3.hs:51:95-113] (CNonCanonical)
                          [W] cobox_aGU :: [Char] ~ [a_aGS] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGS] " HTML3.hs:51:95-99] (CNonCanonical)
                          [W] cobox_aGW :: [a_aGV] ~ [a_aGS] [" a type equality [a_aGV]
                                                                                ~
                                                                                [a_aGS] " HTML3.hs:51:104-113] (CNonCanonical)
                          [W] cobox_aGX :: String ~ [a_aGV] [" a type equality String
                                                                               ~
                                                                               [a_aGV] " HTML3.hs:51:104-106] (CNonCanonical)
                          [W] cobox_aGY :: [Char] ~ [a_aGV] [" a type equality [Char]
                                                                               ~
                                                                               [a_aGV] " HTML3.hs:51:111-113] (CNonCanonical)
                          [W] $dEq_aH0 :: Eq
                                            a_aGZ [" a use of ‘==’ " HTML3.hs:52:50-51] (CNonCanonical)
                          [W] cobox_aH1 :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:52:37-53] (CNonCanonical)
                          [W] cobox_aH3 :: Int ~ a_aGZ [" a type equality Int
                                                                          ~
                                                                          a_aGZ " HTML3.hs:52:37-48] (CNonCanonical)
                          [W] cobox_aH4 :: [HTML] ~ [a_aH2] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aH2] " HTML3.hs:52:44-48] (CNonCanonical)
                          [W] $dNum_aH6 :: Num
                                             a_aH5 [" the literal ‘1’ " HTML3.hs:52:53] (CNonCanonical)
                          [W] cobox_aH7 :: (Integer -> a_aH5)
                                           ~ (Integer -> a_aGZ) [" a type equality Integer -> a_aH5
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aGZ " HTML3.hs:52:53] (CNonCanonical)
                          [W] cobox_aH8 :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:52:57-153] (CNonCanonical)
                          [W] cobox_aH9 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:52:57-122] (CNonCanonical)
                          [W] cobox_aHa :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:52:57-98] (CNonCanonical)
                          [W] cobox_aHc :: [a_aHb] ~ String [" a type equality [a_aHb]
                                                                               ~
                                                                               String " HTML3.hs:52:64-97] (CNonCanonical)
                          [W] cobox_aHd :: [Char] ~ [a_aHb] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHb] " HTML3.hs:52:64-66] (CNonCanonical)
                          [W] cobox_aHf :: [a_aHe] ~ [a_aHb] [" a type equality [a_aHe]
                                                                                ~
                                                                                [a_aHb] " HTML3.hs:52:71-97] (CNonCanonical)
                          [W] cobox_aHg :: String ~ [a_aHe] [" a type equality String
                                                                               ~
                                                                               [a_aHe] " HTML3.hs:52:71-73] (CNonCanonical)
                          [W] cobox_aHi :: [a_aHh] ~ [a_aHe] [" a type equality [a_aHh]
                                                                                ~
                                                                                [a_aHe] " HTML3.hs:52:78-97] (CNonCanonical)
                          [W] cobox_aHj :: t_aCW ~ [a_aHh] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aHh] " HTML3.hs:52:78-90] (CNonCanonical)
                          [W] cobox_aHk :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:52:87-90] (CNonCanonical)
                          [W] cobox_aHl :: [Char] ~ [a_aHh] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHh] " HTML3.hs:52:95-97] (CNonCanonical)
                          [W] cobox_aHm :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                          ~
                                                                          Doc " HTML3.hs:52:104-122] (CNonCanonical)
                          [W] cobox_aHo :: a_aHn ~ t_aD3 [" a type equality a_aHn
                                                                            ~
                                                                            t_aD3 " HTML3.hs:52:112-121] (CNonCanonical)
                          [W] cobox_aHp :: [HTML] ~ [a_aHn] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aHn] " HTML3.hs:52:117-121] (CNonCanonical)
                          [W] cobox_aHq :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:52:128-153] (CNonCanonical)
                          [W] cobox_aHs :: [a_aHr] ~ String [" a type equality [a_aHr]
                                                                               ~
                                                                               String " HTML3.hs:52:135-152] (CNonCanonical)
                          [W] cobox_aHt :: [Char] ~ [a_aHr] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHr] " HTML3.hs:52:135-138] (CNonCanonical)
                          [W] cobox_aHv :: [a_aHu] ~ [a_aHr] [" a type equality [a_aHu]
                                                                                ~
                                                                                [a_aHr] " HTML3.hs:52:143-152] (CNonCanonical)
                          [W] cobox_aHw :: String ~ [a_aHu] [" a type equality String
                                                                               ~
                                                                               [a_aHu] " HTML3.hs:52:143-145] (CNonCanonical)
                          [W] cobox_aHx :: [Char] ~ [a_aHu] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHu] " HTML3.hs:52:150-152] (CNonCanonical)
                          [W] cobox_aHy :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:53:37-45] (CNonCanonical)
                          [W] cobox_aHz :: Doc ~ t_aD4 [" a type equality Doc
                                                                          ~
                                                                          t_aD4 " HTML3.hs:53:57-190] (CNonCanonical)
                          [W] cobox_aHA :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:53:57-159] (CNonCanonical)
                          [W] cobox_aHB :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:53:57-98] (CNonCanonical)
                          [W] cobox_aHD :: [a_aHC] ~ String [" a type equality [a_aHC]
                                                                               ~
                                                                               String " HTML3.hs:53:64-97] (CNonCanonical)
                          [W] cobox_aHE :: [Char] ~ [a_aHC] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHC] " HTML3.hs:53:64-66] (CNonCanonical)
                          [W] cobox_aHG :: [a_aHF] ~ [a_aHC] [" a type equality [a_aHF]
                                                                                ~
                                                                                [a_aHC] " HTML3.hs:53:71-97] (CNonCanonical)
                          [W] cobox_aHH :: String ~ [a_aHF] [" a type equality String
                                                                               ~
                                                                               [a_aHF] " HTML3.hs:53:71-73] (CNonCanonical)
                          [W] cobox_aHJ :: [a_aHI] ~ [a_aHF] [" a type equality [a_aHI]
                                                                                ~
                                                                                [a_aHF] " HTML3.hs:53:78-97] (CNonCanonical)
                          [W] cobox_aHK :: t_aCW ~ [a_aHI] [" a type equality t_aCW
                                                                              ~
                                                                              [a_aHI] " HTML3.hs:53:78-90] (CNonCanonical)
                          [W] cobox_aHL :: [Attribute] ~ t_aCV [" a type equality [Attribute]
                                                                                  ~
                                                                                  t_aCV " HTML3.hs:53:87-90] (CNonCanonical)
                          [W] cobox_aHM :: [Char] ~ [a_aHI] [" a type equality [Char]
                                                                               ~
                                                                               [a_aHI] " HTML3.hs:53:95-97] (CNonCanonical)
                          [W] cobox_aHP :: b_aHO ~ Doc [" a type equality b_aHO
                                                                          ~
                                                                          Doc " HTML3.hs:53:105-158] (CNonCanonical)
                          [W] cobox_aHQ :: (Doc -> Doc -> Doc)
                                           ~ (a_aHN -> b_aHO -> b_aHO) [" a type equality Doc
                                                                                          -> Doc
                                                                                          -> Doc
                                                                                          ~
                                                                                          a_aHN
                                                                                          -> b_aHO
                                                                                          -> b_aHO " HTML3.hs:53:111-115] (CNonCanonical)
                          [W] cobox_aHR :: Doc ~ b_aHO [" a type equality Doc
                                                                          ~
                                                                          b_aHO " HTML3.hs:53:117-120] (CNonCanonical)
                          [W] cobox_aHU :: [b_aHT] ~ [a_aHN] [" a type equality [b_aHT]
                                                                                ~
                                                                                [a_aHN] " HTML3.hs:53:123-157] (CNonCanonical)
                          [W] cobox_aHV :: (Doc -> Doc)
                                           ~ (a_aHS -> b_aHT) [" a type equality Doc -> Doc
                                                                                 ~
                                                                                 a_aHS
                                                                                 -> b_aHT " HTML3.hs:53:128-137] (CNonCanonical)
                          [W] cobox_aHY :: [b_aHX] ~ [a_aHS] [" a type equality [b_aHX]
                                                                                ~
                                                                                [a_aHS] " HTML3.hs:53:141-156] (CNonCanonical)
                          [W] cobox_aHZ :: (t_aD3 -> t_aD4)
                                           ~ (a_aHW -> b_aHX) [" a type equality t_aD3 -> t_aD4
                                                                                 ~
                                                                                 a_aHW
                                                                                 -> b_aHX " HTML3.hs:53:145-150] (CNonCanonical)
                          [W] cobox_aI0 :: [HTML] ~ [a_aHW] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aHW] " HTML3.hs:53:152-156] (CNonCanonical)
                          [W] cobox_aI1 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML3.hs:53:165-190] (CNonCanonical)
                          [W] cobox_aI3 :: [a_aI2] ~ String [" a type equality [a_aI2]
                                                                               ~
                                                                               String " HTML3.hs:53:172-189] (CNonCanonical)
                          [W] cobox_aI4 :: [Char] ~ [a_aI2] [" a type equality [Char]
                                                                               ~
                                                                               [a_aI2] " HTML3.hs:53:172-175] (CNonCanonical)
                          [W] cobox_aI6 :: [a_aI5] ~ [a_aI2] [" a type equality [a_aI5]
                                                                                ~
                                                                                [a_aI2] " HTML3.hs:53:180-189] (CNonCanonical)
                          [W] cobox_aI7 :: String ~ [a_aI5] [" a type equality String
                                                                               ~
                                                                               [a_aI5] " HTML3.hs:53:180-182] (CNonCanonical)
                          [W] cobox_aI8 :: [Char] ~ [a_aI5] [" a type equality [Char]
                                                                               ~
                                                                               [a_aI5] " HTML3.hs:53:187-189] (CNonCanonical)
                          [W] cobox_aIb :: [t_aIa] ~ t_aD7 [" a type equality [t_aIa]
                                                                              ~
                                                                              t_aD7 " HTML3.hs:(42,10)-(43,59)] (CNonCanonical)
                          [W] cobox_aIe :: (t_aIc, t_aId) ~ t_aIa [" a type equality (t_aIc,
                                                                                      t_aId)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:42:11-22] (CNonCanonical)
                          [W] cobox_aIf :: [Char] ~ t_aIc [" a type equality [Char]
                                                                             ~
                                                                             t_aIc " HTML3.hs:42:12-15] (CNonCanonical)
                          [W] cobox_aIg :: [Char] ~ t_aId [" a type equality [Char]
                                                                             ~
                                                                             t_aId " HTML3.hs:42:18-21] (CNonCanonical)
                          [W] cobox_aIj :: (t_aIh, t_aIi) ~ t_aIa [" a type equality (t_aIh,
                                                                                      t_aIi)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:42:25-40] (CNonCanonical)
                          [W] cobox_aIk :: [Char] ~ t_aIh [" a type equality [Char]
                                                                             ~
                                                                             t_aIh " HTML3.hs:42:26-31] (CNonCanonical)
                          [W] cobox_aIl :: [Char] ~ t_aIi [" a type equality [Char]
                                                                             ~
                                                                             t_aIi " HTML3.hs:42:34-39] (CNonCanonical)
                          [W] cobox_aIo :: (t_aIm, t_aIn) ~ t_aIa [" a type equality (t_aIm,
                                                                                      t_aIn)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:42:43-58] (CNonCanonical)
                          [W] cobox_aIp :: [Char] ~ t_aIm [" a type equality [Char]
                                                                             ~
                                                                             t_aIm " HTML3.hs:42:44-49] (CNonCanonical)
                          [W] cobox_aIq :: [Char] ~ t_aIn [" a type equality [Char]
                                                                             ~
                                                                             t_aIn " HTML3.hs:42:52-57] (CNonCanonical)
                          [W] cobox_aIt :: (t_aIr, t_aIs) ~ t_aIa [" a type equality (t_aIr,
                                                                                      t_aIs)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:43:11-23] (CNonCanonical)
                          [W] cobox_aIu :: [Char] ~ t_aIr [" a type equality [Char]
                                                                             ~
                                                                             t_aIr " HTML3.hs:43:12-17] (CNonCanonical)
                          [W] cobox_aIv :: [Char] ~ t_aIs [" a type equality [Char]
                                                                             ~
                                                                             t_aIs " HTML3.hs:43:20-22] (CNonCanonical)
                          [W] cobox_aIy :: (t_aIw, t_aIx) ~ t_aIa [" a type equality (t_aIw,
                                                                                      t_aIx)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:43:26-39] (CNonCanonical)
                          [W] cobox_aIz :: [Char] ~ t_aIw [" a type equality [Char]
                                                                             ~
                                                                             t_aIw " HTML3.hs:43:27-32] (CNonCanonical)
                          [W] cobox_aIA :: [Char] ~ t_aIx [" a type equality [Char]
                                                                             ~
                                                                             t_aIx " HTML3.hs:43:35-38] (CNonCanonical)
                          [W] cobox_aID :: (t_aIB, t_aIC) ~ t_aIa [" a type equality (t_aIB,
                                                                                      t_aIC)
                                                                                     ~
                                                                                     t_aIa " HTML3.hs:43:42-58] (CNonCanonical)
                          [W] cobox_aIE :: [Char] ~ t_aIB [" a type equality [Char]
                                                                             ~
                                                                             t_aIB " HTML3.hs:43:43-48] (CNonCanonical)
                          [W] cobox_aIF :: [Char] ~ t_aIC [" a type equality [Char]
                                                                             ~
                                                                             t_aIC " HTML3.hs:43:51-57] (CNonCanonical)
                          [W] cobox_aII :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                              ~
                                                                              t_aDo " HTML3.hs:37:9-20] (CNonCanonical)
                          [W] cobox_aIK :: Maybe t_aIJ ~ t_aIH [" a type equality Maybe t_aIJ
                                                                                  ~
                                                                                  t_aIH " HTML3.hs:37:9-15] (CNonCanonical)
                          [W] cobox_aIL :: t_aDp ~ t_aDp [" a type equality t_aDp
                                                                            ~
                                                                            t_aDp " HTML3.hs:37:25-35] (CNonCanonical)
                          [W] cobox_aIM :: [t_aIH] ~ t_aDo [" a type equality [t_aIH]
                                                                              ~
                                                                              t_aDo " HTML3.hs:37:32-35] (CNonCanonical)
                          [W] cobox_aIO :: [t_aIN] ~ t_aDo [" a type equality [t_aIN]
                                                                              ~
                                                                              t_aDo " HTML3.hs:38:8-9] (CNonCanonical)
                          [W] cobox_aIQ :: Maybe a_aIP ~ t_aDp [" a type equality Maybe a_aIP
                                                                                  ~
                                                                                  t_aDp " HTML3.hs:38:25-31] (CNonCanonical)
                          [W] cobox_aIS :: [t_aIR] ~ t_aDo [" a type equality [t_aIR]
                                                                              ~
                                                                              t_aDo " HTML3.hs:39:9-16] (CNonCanonical)
                          [W] cobox_aIU :: Maybe t_aIT ~ t_aIR [" a type equality Maybe t_aIT
                                                                                  ~
                                                                                  t_aIR " HTML3.hs:39:9-14] (CNonCanonical)
                          [W] cobox_aIW :: Maybe a_aIV ~ t_aDp [" a type equality Maybe a_aIV
                                                                                  ~
                                                                                  t_aDp " HTML3.hs:39:25-30] (CNonCanonical)
                          [W] cobox_aIX :: t_aIT ~ a_aIV [" a type equality t_aIT
                                                                            ~
                                                                            a_aIV " HTML3.hs:39:30] (CNonCanonical)
                          [W] cobox_aIZ :: HTML ~ t_aDG [" a type equality HTML
                                                                           ~
                                                                           t_aDG " HTML3.hs:14:13-137] (CNonCanonical)
                          [W] cobox_aJ0 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:23-28] (CNonCanonical)
                          [W] cobox_aJ1 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:32-38] (CNonCanonical)
                          [W] cobox_aJ2 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:40-45] (CNonCanonical)
                          [W] cobox_aJ3 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:14:51-62] (CNonCanonical)
                          [W] cobox_aJ4 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:56-62] (CNonCanonical)
                          [W] cobox_aJ5 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:14:66-98] (CNonCanonical)
                          [W] cobox_aJ6 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:76-80] (CNonCanonical)
                          [W] cobox_aJ7 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:84-90] (CNonCanonical)
                          [W] cobox_aJ8 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:92-96] (CNonCanonical)
                          [W] cobox_aJ9 :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:14:102-135] (CNonCanonical)
                          [W] cobox_aJa :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:112-116] (CNonCanonical)
                          [W] cobox_aJb :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:120-126] (CNonCanonical)
                          [W] cobox_aJc :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:14:128-133] (CNonCanonical)
                          [W] cobox_aJf :: a_aJe ~ (t_aDI -> t_aDJ) [" a type equality a_aJe
                                                                                       ~
                                                                                       t_aDI
                                                                                       -> t_aDJ " HTML3.hs:8:7-15] (CNonCanonical)
                          [W] cobox_aJi :: a_aJh ~ (t_aDM -> t_aDN) [" a type equality a_aJh
                                                                                       ~
                                                                                       t_aDM
                                                                                       -> t_aDN " HTML3.hs:6:11-19] (CNonCanonical)
                          [W] $dOrd_aJx :: Ord
                                             a_aJw [" a use of ‘<’ " HTML3.hs:73:25] (CNonCanonical)
                          [W] cobox_aJy :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:73:19-28] (CNonCanonical)
                          [W] cobox_aJz :: t_aCJ ~ a_aJw [" a type equality t_aCJ
                                                                            ~
                                                                            a_aJw " HTML3.hs:73:19-23] (CNonCanonical)
                          [W] $dNum_aJB :: Num
                                             a_aJA [" the literal ‘10’ " HTML3.hs:73:27-28] (CNonCanonical)
                          [W] cobox_aJC :: (Integer -> a_aJA)
                                           ~ (Integer -> a_aJw) [" a type equality Integer -> a_aJA
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aJw " HTML3.hs:73:27-28] (CNonCanonical)
                          [W] cobox_aJD :: t_aDN ~ t_aCK [" a type equality t_aDN
                                                                            ~
                                                                            t_aCK " HTML3.hs:73:32-44] (CNonCanonical)
                          [W] cobox_aJE :: t_aCJ ~ t_aDM [" a type equality t_aCJ
                                                                            ~
                                                                            t_aDM " HTML3.hs:73:40-44] (CNonCanonical)
                          [W] cobox_aJF :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:74:19-27] (CNonCanonical)
                          [W] cobox_aJH :: [t_aJG] ~ t_aCK [" a type equality [t_aJG]
                                                                              ~
                                                                              t_aCK " HTML3.hs:74:32-49] (CNonCanonical)
                          [W] cobox_aJI :: t_aDJ ~ t_aJG [" a type equality t_aDJ
                                                                            ~
                                                                            t_aJG " HTML3.hs:74:33-48] (CNonCanonical)
                          [W] $dNum_aJK :: Num
                                             a_aJJ [" a use of ‘+’ " HTML3.hs:74:44] (CNonCanonical)
                          [W] cobox_aJL :: a_aJJ ~ t_aDI [" a type equality a_aJJ
                                                                            ~
                                                                            t_aDI " HTML3.hs:74:38-47] (CNonCanonical)
                          [W] cobox_aJM :: t_aCJ ~ a_aJJ [" a type equality t_aCJ
                                                                            ~
                                                                            a_aJJ " HTML3.hs:74:38-42] (CNonCanonical)
                          [W] $dNum_aJO :: Num
                                             a_aJN [" the literal ‘55’ " HTML3.hs:74:46-47] (CNonCanonical)
                          [W] cobox_aJP :: (Integer -> a_aJN)
                                           ~ (Integer -> a_aJJ) [" a type equality Integer -> a_aJN
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aJJ " HTML3.hs:74:46-47] (CNonCanonical)
                          [W] cobox_aJU :: t_aJR ~ (t_aJS -> t_aJT) [" a type equality t_aJR
                                                                                       ~
                                                                                       t_aJS
                                                                                       -> t_aJT " HTML3.hs:70:19-86] (CNonCanonical)
                          [W] cobox_aJW :: [a_aJV] ~ t_aJT [" a type equality [a_aJV]
                                                                              ~
                                                                              t_aJT " HTML3.hs:70:35-86] (CNonCanonical)
                          [W] cobox_aJX :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                              ~
                                                                              [a_aJV] " HTML3.hs:70:35-56] (CNonCanonical)
                          [W] $dFractional_aK7 :: Fractional
                                                    a_aK6 [" a use of ‘/’ " HTML3.hs:70:52] (CNonCanonical)
                          [W] cobox_aK8 :: a_aK6 ~ t_aCJ [" a type equality a_aK6
                                                                            ~
                                                                            t_aCJ " HTML3.hs:70:46-55] (CNonCanonical)
                          [W] cobox_aK9 :: t_aJS ~ a_aK6 [" a type equality t_aJS
                                                                            ~
                                                                            a_aK6 " HTML3.hs:70:46-50] (CNonCanonical)
                          [W] $dNum_aKb :: Num
                                             a_aKa [" the literal ‘16’ " HTML3.hs:70:54-55] (CNonCanonical)
                          [W] cobox_aKc :: (Integer -> a_aKa)
                                           ~ (Integer -> a_aK6) [" a type equality Integer -> a_aKa
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aK6 " HTML3.hs:70:54-55] (CNonCanonical)
                          [W] cobox_aKd :: t_aCK ~ [a_aJV] [" a type equality t_aCK
                                                                              ~
                                                                              [a_aJV] " HTML3.hs:70:61-86] (CNonCanonical)
                          [W] $dIntegral_aKs :: Integral
                                                  a_aKr [" a use of ‘rem’ " HTML3.hs:70:78-82] (CNonCanonical)
                          [W] cobox_aKt :: a_aKr ~ t_aCJ [" a type equality a_aKr
                                                                            ~
                                                                            t_aCJ " HTML3.hs:70:72-85] (CNonCanonical)
                          [W] cobox_aKu :: t_aJS ~ a_aKr [" a type equality t_aJS
                                                                            ~
                                                                            a_aKr " HTML3.hs:70:72-76] (CNonCanonical)
                          [W] $dNum_aKw :: Num
                                             a_aKv [" the literal ‘16’ " HTML3.hs:70:84-85] (CNonCanonical)
                          [W] cobox_aKx :: (Integer -> a_aKv)
                                           ~ (Integer -> a_aKr) [" a type equality Integer -> a_aKv
                                                                                   ~
                                                                                   Integer
                                                                                   -> a_aKr " HTML3.hs:70:84-85] (CNonCanonical)
                          [W] cobox_aKz :: [a_aKy] ~ t_aCQ [" a type equality [a_aKy]
                                                                              ~
                                                                              t_aCQ " HTML3.hs:69:15-56] (CNonCanonical)
                          [W] cobox_aKA :: [Char] ~ [a_aKy] [" a type equality [Char]
                                                                               ~
                                                                               [a_aKy] " HTML3.hs:69:15-17] (CNonCanonical)
                          [W] cobox_aKC :: [a_aKB] ~ [a_aKy] [" a type equality [a_aKB]
                                                                                ~
                                                                                [a_aKy] " HTML3.hs:69:22-56] (CNonCanonical)
                          [W] cobox_aKF :: t_aJR ~ (t_aKD -> t_aKE) [" a type equality t_aJR
                                                                                       ~
                                                                                       t_aKD
                                                                                       -> t_aKE " HTML3.hs:69:22-30] (CNonCanonical)
                          [W] cobox_aKG :: t_aKE ~ [a_aKB] [" a type equality t_aKE
                                                                              ~
                                                                              [a_aKB] " HTML3.hs:69:22-30] (CNonCanonical)
                          [W] cobox_aKH :: t_aCN ~ t_aKD [" a type equality t_aCN
                                                                            ~
                                                                            t_aKD " HTML3.hs:69:30] (CNonCanonical)
                          [W] cobox_aKJ :: [a_aKI] ~ [a_aKB] [" a type equality [a_aKI]
                                                                                ~
                                                                                [a_aKB] " HTML3.hs:69:35-56] (CNonCanonical)
                          [W] cobox_aKM :: t_aJR ~ (t_aKK -> t_aKL) [" a type equality t_aJR
                                                                                       ~
                                                                                       t_aKK
                                                                                       -> t_aKL " HTML3.hs:69:35-43] (CNonCanonical)
                          [W] cobox_aKN :: t_aKL ~ [a_aKI] [" a type equality t_aKL
                                                                              ~
                                                                              [a_aKI] " HTML3.hs:69:35-43] (CNonCanonical)
                          [W] cobox_aKO :: t_aCO ~ t_aKK [" a type equality t_aCO
                                                                            ~
                                                                            t_aKK " HTML3.hs:69:43] (CNonCanonical)
                          [W] cobox_aKR :: t_aJR ~ (t_aKP -> t_aKQ) [" a type equality t_aJR
                                                                                       ~
                                                                                       t_aKP
                                                                                       -> t_aKQ " HTML3.hs:69:48-56] (CNonCanonical)
                          [W] cobox_aKS :: t_aKQ ~ [a_aKI] [" a type equality t_aKQ
                                                                              ~
                                                                              [a_aKI] " HTML3.hs:69:48-56] (CNonCanonical)
                          [W] cobox_aKT :: t_aCP ~ t_aKP [" a type equality t_aCP
                                                                            ~
                                                                            t_aKP " HTML3.hs:69:56] (CNonCanonical)
                          [W] cobox_aKY :: (t_aKV, t_aKW, t_aKX)
                                           ~ t_aCx [" a type equality (t_aKV, t_aKW, t_aKX)
                                                                      ~
                                                                      t_aCx " HTML3.hs:89:10-18] (CNonCanonical)
                          [W] cobox_aKZ :: HTML ~ t_aCy [" a type equality HTML
                                                                           ~
                                                                           t_aCy " HTML3.hs:89:22-64] (CNonCanonical)
                          [W] cobox_aL0 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:89:32-35] (CNonCanonical)
                          [W] cobox_aL1 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:89:39-47] (CNonCanonical)
                          [W] cobox_aL2 :: t_aCQ ~ String [" a type equality t_aCQ
                                                                             ~
                                                                             String " HTML3.hs:89:49-59] (CNonCanonical)
                          [W] cobox_aL3 :: t_aKV ~ t_aCN [" a type equality t_aKV
                                                                            ~
                                                                            t_aCN " HTML3.hs:89:55] (CNonCanonical)
                          [W] cobox_aL4 :: t_aKW ~ t_aCO [" a type equality t_aKW
                                                                            ~
                                                                            t_aCO " HTML3.hs:89:57] (CNonCanonical)
                          [W] cobox_aL5 :: t_aKX ~ t_aCP [" a type equality t_aKX
                                                                            ~
                                                                            t_aCP " HTML3.hs:89:59] (CNonCanonical)
                          [W] cobox_aL7 :: HTML ~ t_aCC [" a type equality HTML
                                                                           ~
                                                                           t_aCC " HTML3.hs:86:18-56] (CNonCanonical)
                          [W] cobox_aL8 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:86:28-31] (CNonCanonical)
                          [W] cobox_aLb :: [b_aLa] ~ [HTML] [" a type equality [b_aLa]
                                                                               ~
                                                                               [HTML] " HTML3.hs:86:37-55] (CNonCanonical)
                          [W] cobox_aLc :: (t_aCx -> t_aCy)
                                           ~ (a_aL9 -> b_aLa) [" a type equality t_aCx -> t_aCy
                                                                                 ~
                                                                                 a_aL9
                                                                                 -> b_aLa " HTML3.hs:86:41-48] (CNonCanonical)
                          [W] cobox_aLd :: t_aCB ~ [a_aL9] [" a type equality t_aCB
                                                                              ~
                                                                              [a_aL9] " HTML3.hs:86:50-55] (CNonCanonical)
                          [W] cobox_aLf :: HTML ~ t_aCG [" a type equality HTML
                                                                           ~
                                                                           t_aCG " HTML3.hs:83:22-95] (CNonCanonical)
                          [W] cobox_aLg :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:32-38] (CNonCanonical)
                          [W] cobox_aLh :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:42-48] (CNonCanonical)
                          [W] cobox_aLi :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:50-54] (CNonCanonical)
                          [W] cobox_aLj :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:58-65] (CNonCanonical)
                          [W] cobox_aLk :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML3.hs:83:67-71] (CNonCanonical)
                          [W] cobox_aLn :: [b_aLm] ~ [HTML] [" a type equality [b_aLm]
                                                                               ~
                                                                               [HTML] " HTML3.hs:83:76-94] (CNonCanonical)
                          [W] cobox_aLo :: (t_aCB -> t_aCC)
                                           ~ (a_aLl -> b_aLm) [" a type equality t_aCB -> t_aCC
                                                                                 ~
                                                                                 a_aLl
                                                                                 -> b_aLm " HTML3.hs:83:80-86] (CNonCanonical)
                          [W] cobox_aLp :: t_aCF ~ [a_aLl] [" a type equality t_aCF
                                                                              ~
                                                                              [a_aLl] " HTML3.hs:83:88-94] (CNonCanonical)
                          [W] cobox_aLr :: HTML ~ t_aCi [" a type equality HTML
                                                                           ~
                                                                           t_aCi " HTML3.hs:98:20-70] (CNonCanonical)
                          [W] cobox_aLt :: [a_aLs] ~ String [" a type equality [a_aLs]
                                                                               ~
                                                                               String " HTML3.hs:98:31-52] (CNonCanonical)
                          [W] cobox_aLu :: [Char] ~ [a_aLs] [" a type equality [Char]
                                                                               ~
                                                                               [a_aLs] " HTML3.hs:98:31-33] (CNonCanonical)
                          [W] cobox_aLv :: t_aDN ~ [a_aLs] [" a type equality t_aDN
                                                                              ~
                                                                              [a_aLs] " HTML3.hs:98:38-52] (CNonCanonical)
                          [W] cobox_aLw :: t_aCg ~ t_aDM [" a type equality t_aCg
                                                                            ~
                                                                            t_aDM " HTML3.hs:98:46-52] (CNonCanonical)
                          [W] cobox_aLx :: HTML ~ HTML [" a type equality HTML
                                                                          ~
                                                                          HTML " HTML3.hs:98:59-69] (CNonCanonical)
                          [W] cobox_aLy :: t_aCh ~ String [" a type equality t_aCh
                                                                             ~
                                                                             String " HTML3.hs:98:64-69] (CNonCanonical)
                          [W] cobox_aLA :: t_aC2 ~ t_aBY [" a type equality t_aC2
                                                                            ~
                                                                            t_aBY " HTML3.hs:(110,16)-(112,111)] (CNonCanonical)
                          [W] cobox_aLB :: [Char] ~ t_aC0 [" a type equality [Char]
                                                                             ~
                                                                             t_aC0 " HTML3.hs:110:25-38] (CNonCanonical)
                          [W] cobox_aLD :: [t_aLC] ~ t_aC1 [" a type equality [t_aLC]
                                                                              ~
                                                                              t_aC1 " HTML3.hs:(110,40)-(112,111)] (CNonCanonical)
                          [W] cobox_aLE :: t_aCi ~ t_aLC [" a type equality t_aCi
                                                                            ~
                                                                            t_aLC " HTML3.hs:110:42-59] (CNonCanonical)
                          [W] $dNum_aLG :: Num
                                             a_aLF [" the literal ‘1’ " HTML3.hs:110:44] (CNonCanonical)
                          [W] cobox_aLH :: (Integer -> a_aLF)
                                           ~ (Integer -> t_aCg) [" a type equality Integer -> a_aLF
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aCg " HTML3.hs:110:44] (CNonCanonical)
                          [W] cobox_aLI :: [Char] ~ t_aCh [" a type equality [Char]
                                                                             ~
                                                                             t_aCh " HTML3.hs:110:46-59] (CNonCanonical)
                          [W] cobox_aLJ :: t_aCr ~ t_aLC [" a type equality t_aCr
                                                                            ~
                                                                            t_aLC " HTML3.hs:111:41-343] (CNonCanonical)
                          [W] cobox_aLL :: [t_aLK] ~ t_aCq [" a type equality [t_aLK]
                                                                              ~
                                                                              t_aCq " HTML3.hs:111:44-343] (CNonCanonical)
                          [W] cobox_aLN :: [t_aLM] ~ t_aLK [" a type equality [t_aLM]
                                                                              ~
                                                                              t_aLK " HTML3.hs:111:45-160] (CNonCanonical)
                          [W] cobox_aLO :: t_aCc ~ t_aLM [" a type equality t_aCc
                                                                            ~
                                                                            t_aLM " HTML3.hs:111:46-85] (CNonCanonical)
                          [W] cobox_aLQ :: [t_aLP] ~ t_aCa [" a type equality [t_aLP]
                                                                              ~
                                                                              t_aCa " HTML3.hs:111:51-71] (CNonCanonical)
                          [W] cobox_aLT :: (t_aLR, t_aLS) ~ t_aLP [" a type equality (t_aLR,
                                                                                      t_aLS)
                                                                                     ~
                                                                                     t_aLP " HTML3.hs:111:52-70] (CNonCanonical)
                          [W] cobox_aLU :: [Char] ~ t_aLR [" a type equality [Char]
                                                                             ~
                                                                             t_aLR " HTML3.hs:111:53-59] (CNonCanonical)
                          [W] cobox_aLV :: [Char] ~ t_aLS [" a type equality [Char]
                                                                             ~
                                                                             t_aLS " HTML3.hs:111:61-69] (CNonCanonical)
                          [W] cobox_aLX :: [t_aLW] ~ t_aCb [" a type equality [t_aLW]
                                                                              ~
                                                                              t_aCb " HTML3.hs:111:73-85] (CNonCanonical)
                          [W] cobox_aLY :: t_aC7 ~ t_aLW [" a type equality t_aC7
                                                                            ~
                                                                            t_aLW " HTML3.hs:111:74-84] (CNonCanonical)
                          [W] cobox_aLZ :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:79-84] (CNonCanonical)
                          [W] cobox_aM0 :: t_aC7 ~ t_aLM [" a type equality t_aC7
                                                                            ~
                                                                            t_aLM " HTML3.hs:111:88-159] (CNonCanonical)
                          [W] cobox_aM1 :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:93-159] (CNonCanonical)
                          [W] cobox_aM3 :: [t_aM2] ~ t_aLK [" a type equality [t_aM2]
                                                                              ~
                                                                              t_aLK " HTML3.hs:111:162-278] (CNonCanonical)
                          [W] cobox_aM4 :: t_aCc ~ t_aM2 [" a type equality t_aCc
                                                                            ~
                                                                            t_aM2 " HTML3.hs:111:163-203] (CNonCanonical)
                          [W] cobox_aM6 :: [t_aM5] ~ t_aCa [" a type equality [t_aM5]
                                                                              ~
                                                                              t_aCa " HTML3.hs:111:168-188] (CNonCanonical)
                          [W] cobox_aM9 :: (t_aM7, t_aM8) ~ t_aM5 [" a type equality (t_aM7,
                                                                                      t_aM8)
                                                                                     ~
                                                                                     t_aM5 " HTML3.hs:111:169-187] (CNonCanonical)
                          [W] cobox_aMa :: [Char] ~ t_aM7 [" a type equality [Char]
                                                                             ~
                                                                             t_aM7 " HTML3.hs:111:170-176] (CNonCanonical)
                          [W] cobox_aMb :: [Char] ~ t_aM8 [" a type equality [Char]
                                                                             ~
                                                                             t_aM8 " HTML3.hs:111:178-186] (CNonCanonical)
                          [W] cobox_aMd :: [t_aMc] ~ t_aCb [" a type equality [t_aMc]
                                                                              ~
                                                                              t_aCb " HTML3.hs:111:190-203] (CNonCanonical)
                          [W] cobox_aMe :: t_aC7 ~ t_aMc [" a type equality t_aC7
                                                                            ~
                                                                            t_aMc " HTML3.hs:111:191-202] (CNonCanonical)
                          [W] cobox_aMf :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:196-202] (CNonCanonical)
                          [W] cobox_aMg :: t_aC7 ~ t_aM2 [" a type equality t_aC7
                                                                            ~
                                                                            t_aM2 " HTML3.hs:111:206-277] (CNonCanonical)
                          [W] cobox_aMh :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:211-277] (CNonCanonical)
                          [W] cobox_aMj :: [t_aMi] ~ t_aLK [" a type equality [t_aMi]
                                                                              ~
                                                                              t_aLK " HTML3.hs:111:280-342] (CNonCanonical)
                          [W] cobox_aMk :: t_aCc ~ t_aMi [" a type equality t_aCc
                                                                            ~
                                                                            t_aMi " HTML3.hs:111:281-321] (CNonCanonical)
                          [W] cobox_aMm :: [t_aMl] ~ t_aCa [" a type equality [t_aMl]
                                                                              ~
                                                                              t_aCa " HTML3.hs:111:286-306] (CNonCanonical)
                          [W] cobox_aMp :: (t_aMn, t_aMo) ~ t_aMl [" a type equality (t_aMn,
                                                                                      t_aMo)
                                                                                     ~
                                                                                     t_aMl " HTML3.hs:111:287-305] (CNonCanonical)
                          [W] cobox_aMq :: [Char] ~ t_aMn [" a type equality [Char]
                                                                             ~
                                                                             t_aMn " HTML3.hs:111:288-294] (CNonCanonical)
                          [W] cobox_aMr :: [Char] ~ t_aMo [" a type equality [Char]
                                                                             ~
                                                                             t_aMo " HTML3.hs:111:296-304] (CNonCanonical)
                          [W] cobox_aMt :: [t_aMs] ~ t_aCb [" a type equality [t_aMs]
                                                                              ~
                                                                              t_aCb " HTML3.hs:111:308-321] (CNonCanonical)
                          [W] cobox_aMu :: t_aC7 ~ t_aMs [" a type equality t_aC7
                                                                            ~
                                                                            t_aMs " HTML3.hs:111:309-320] (CNonCanonical)
                          [W] cobox_aMv :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:314-320] (CNonCanonical)
                          [W] cobox_aMw :: t_aC7 ~ t_aMi [" a type equality t_aC7
                                                                            ~
                                                                            t_aMi " HTML3.hs:111:324-341] (CNonCanonical)
                          [W] cobox_aMx :: [Char] ~ t_aC6 [" a type equality [Char]
                                                                             ~
                                                                             t_aC6 " HTML3.hs:111:329-341] (CNonCanonical)
                          [W] cobox_aMy :: t_aCG ~ t_aLC [" a type equality t_aCG
                                                                            ~
                                                                            t_aLC " HTML3.hs:112:41-109] (CNonCanonical)
                          [W] cobox_aMA :: [t_aMz] ~ t_aCF [" a type equality [t_aMz]
                                                                              ~
                                                                              t_aCF " HTML3.hs:112:52-109] (CNonCanonical)
                          [W] cobox_aMC :: [t_aMB] ~ t_aMz [" a type equality [t_aMB]
                                                                              ~
                                                                              t_aMz " HTML3.hs:112:53-108] (CNonCanonical)
                          [W] $dNum_aMF :: Num
                                             a_aME [" the literal ‘0’ " HTML3.hs:112:70] (CNonCanonical)
                          [W] cobox_aMG :: (Integer -> a_aME)
                                           ~ (Integer -> t_aMD) [" a type equality Integer -> a_aME
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aMD " HTML3.hs:112:70] (CNonCanonical)
                          [W] $dNum_aMI :: Num
                                             a_aMH [" the literal ‘25’ " HTML3.hs:112:72-73] (CNonCanonical)
                          [W] cobox_aMJ :: (Integer -> a_aMH)
                                           ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMH
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aMD " HTML3.hs:112:72-73] (CNonCanonical)
                          [W] $dNum_aML :: Num
                                             a_aMK [" the literal ‘250’ " HTML3.hs:112:76-78] (CNonCanonical)
                          [W] cobox_aMM :: (Integer -> a_aMK)
                                           ~ (Integer -> t_aMD) [" a type equality Integer -> a_aMK
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aMD " HTML3.hs:112:76-78] (CNonCanonical)
                          [W] $dEnum_aOJ :: Enum
                                              t_aMD [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:69-79] (CNonCanonical)
                          [W] $dNum_aOM :: Num
                                             a_aOL [" the literal ‘0’ " HTML3.hs:112:88] (CNonCanonical)
                          [W] cobox_aON :: (Integer -> a_aOL)
                                           ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOL
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aOK " HTML3.hs:112:88] (CNonCanonical)
                          [W] $dNum_aOP :: Num
                                             a_aOO [" the literal ‘25’ " HTML3.hs:112:90-91] (CNonCanonical)
                          [W] cobox_aOQ :: (Integer -> a_aOO)
                                           ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOO
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aOK " HTML3.hs:112:90-91] (CNonCanonical)
                          [W] $dNum_aOS :: Num
                                             a_aOR [" the literal ‘250’ " HTML3.hs:112:94-96] (CNonCanonical)
                          [W] cobox_aOT :: (Integer -> a_aOR)
                                           ~ (Integer -> t_aOK) [" a type equality Integer -> a_aOR
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aOK " HTML3.hs:112:94-96] (CNonCanonical)
                          [W] $dEnum_aOU :: Enum
                                              t_aOK [" the arithmetic sequence ‘0, 25 .. 250’ " HTML3.hs:112:87-97] (CNonCanonical)
                          [W] $dNum_aOX :: Num
                                             a_aOW [" the literal ‘0’ " HTML3.hs:112:106] (CNonCanonical)
                          [W] cobox_aOY :: (Integer -> a_aOW)
                                           ~ (Integer -> t_aOV) [" a type equality Integer -> a_aOW
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_aOV " HTML3.hs:112:106] (CNonCanonical)
                          [W] cobox_aP2 :: (t_aOZ, t_aP0, t_aP1)
                                           ~ t_aMB [" a type equality (t_aOZ, t_aP0, t_aP1)
                                                                      ~
                                                                      t_aMB " HTML3.hs:112:54-60] (CNonCanonical)
                          [W] cobox_aP3 :: t_aMD ~ t_aOZ [" a type equality t_aMD
                                                                            ~
                                                                            t_aOZ " HTML3.hs:112:55] (CNonCanonical)
                          [W] cobox_aP4 :: t_aOK ~ t_aP0 [" a type equality t_aOK
                                                                            ~
                                                                            t_aP0 " HTML3.hs:112:57] (CNonCanonical)
                          [W] cobox_aP5 :: t_aOV ~ t_aP1 [" a type equality t_aOV
                                                                            ~
                                                                            t_aP1 " HTML3.hs:112:59] (CNonCanonical)
                          [W] cobox_aP7 :: IO () ~ t_aBW [" a type equality IO ()
                                                                            ~
                                                                            t_aBW " HTML3.hs:115:8-35] (CNonCanonical)
                          [W] cobox_aP8 :: t_aD4 ~ Doc [" a type equality t_aD4
                                                                          ~
                                                                          Doc " HTML3.hs:115:16-34] (CNonCanonical)
                          [W] cobox_aP9 :: t_aBY ~ t_aD3 [" a type equality t_aBY
                                                                            ~
                                                                            t_aD3 " HTML3.hs:115:23-34] (CNonCanonical)
                          [W] cobox_aPc :: a_aPb
                                           ~ (t_aDQ -> t_aDR -> t_aDS) [" a type equality a_aPb
                                                                                          ~
                                                                                          t_aDQ
                                                                                          -> t_aDR
                                                                                          -> t_aDS " HTML3.hs:4:12-20] (CNonCanonical)
                          [W] cobox_aPe :: HTML ~ t_aDA [" a type equality HTML
                                                                           ~
                                                                           t_aDA " HTML3.hs:21:11-16] (CNonCanonical)
                          [W] cobox_aPg :: Maybe a_aPf ~ t_aDC [" a type equality Maybe a_aPf
                                                                                  ~
                                                                                  t_aDC " HTML3.hs:21:32-38] (CNonCanonical)
                          [W] cobox_aPh :: HTML ~ t_aDA [" a type equality HTML
                                                                           ~
                                                                           t_aDA " HTML3.hs:22:11-23] (CNonCanonical)
                          [W] cobox_aPj :: Maybe a_aPi ~ t_aDC [" a type equality Maybe a_aPi
                                                                                  ~
                                                                                  t_aDC " HTML3.hs:22:32-38] (CNonCanonical)
                          [W] cobox_aPk :: HTML ~ t_aDA [" a type equality HTML
                                                                           ~
                                                                           t_aDA " HTML3.hs:23:11-31] (CNonCanonical)
                          [W] cobox_aPl :: t_aDS ~ Bool [" a type equality t_aDS
                                                                           ~
                                                                           Bool " HTML3.hs:23:40-61] (CNonCanonical)
                          [W] cobox_aPm :: String ~ t_aDQ [" a type equality String
                                                                             ~
                                                                             t_aDQ " HTML3.hs:23:49-51] (CNonCanonical)
                          [W] cobox_aPp :: b_aPo ~ t_aDR [" a type equality b_aPo
                                                                            ~
                                                                            t_aDR " HTML3.hs:23:54-60] (CNonCanonical)
                          [W] cobox_aPq :: t_aDB ~ (a_aPn, b_aPo) [" a type equality t_aDB
                                                                                     ~
                                                                                     (a_aPn,
                                                                                      b_aPo) " HTML3.hs:23:58-60] (CNonCanonical)
                          [W] cobox_aPs :: Maybe a_aPr ~ t_aDC [" a type equality Maybe a_aPr
                                                                                  ~
                                                                                  t_aDC " HTML3.hs:23:65-72] (CNonCanonical)
                          [W] cobox_aPt :: t_aDB ~ a_aPr [" a type equality t_aDB
                                                                            ~
                                                                            a_aPr " HTML3.hs:23:70-72] (CNonCanonical)
                          [W] cobox_aPu :: t_aDS ~ Bool [" a type equality t_aDS
                                                                           ~
                                                                           Bool " HTML3.hs:24:40-61] (CNonCanonical)
                          [W] cobox_aPv :: String ~ t_aDQ [" a type equality String
                                                                             ~
                                                                             t_aDQ " HTML3.hs:24:49-51] (CNonCanonical)
                          [W] cobox_aPy :: a_aPw ~ t_aDR [" a type equality a_aPw
                                                                            ~
                                                                            t_aDR " HTML3.hs:24:54-60] (CNonCanonical)
                          [W] cobox_aPz :: t_aDB ~ (a_aPw, b_aPx) [" a type equality t_aDB
                                                                                     ~
                                                                                     (a_aPw,
                                                                                      b_aPx) " HTML3.hs:24:58-60] (CNonCanonical)
                          [W] cobox_aPB :: Maybe a_aPA ~ t_aDC [" a type equality Maybe a_aPA
                                                                                  ~
                                                                                  t_aDC " HTML3.hs:24:65-71] (CNonCanonical)
                          [W] cobox_aPC :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML3.hs:25:40-48] (CNonCanonical)
                          [W] cobox_aPD :: t_aDp ~ t_aDC [" a type equality t_aDp
                                                                            ~
                                                                            t_aDC " HTML3.hs:25:52-98] (CNonCanonical)
                          [W] cobox_aPG :: [b_aPF] ~ t_aDo [" a type equality [b_aPF]
                                                                              ~
                                                                              t_aDo " HTML3.hs:25:60-97] (CNonCanonical)
                          [W] cobox_aPH :: t_aDC ~ b_aPF [" a type equality t_aDC
                                                                            ~
                                                                            b_aPF " HTML3.hs:25:74-90] (CNonCanonical)
                          [W] cobox_aPI :: a_aPE ~ t_aDA [" a type equality a_aPE
                                                                            ~
                                                                            t_aDA " HTML3.hs:25:83-86] (CNonCanonical)
                          [W] cobox_aPJ :: t_aDB ~ t_aDB [" a type equality t_aDB
                                                                            ~
                                                                            t_aDB " HTML3.hs:25:88-90] (CNonCanonical)
                          [W] cobox_aPK :: [HTML] ~ [a_aPE] [" a type equality [HTML]
                                                                               ~
                                                                               [a_aPE] " HTML3.hs:25:93-97] (CNonCanonical)
                          [W] cobox_aPM :: t_aDp ~ t_aDv [" a type equality t_aDp
                                                                            ~
                                                                            t_aDv " HTML3.hs:28:22-54] (CNonCanonical)
                          [W] cobox_aPP :: [b_aPO] ~ t_aDo [" a type equality [b_aPO]
                                                                              ~
                                                                              t_aDo " HTML3.hs:28:30-53] (CNonCanonical)
                          [W] cobox_aPQ :: (t_aDB -> t_aDC)
                                           ~ (a_aPN -> b_aPO) [" a type equality t_aDB -> t_aDC
                                                                                 ~
                                                                                 a_aPN
                                                                                 -> b_aPO " HTML3.hs:28:35-47] (CNonCanonical)
                          [W] cobox_aPR :: t_aDu ~ t_aDA [" a type equality t_aDu
                                                                            ~
                                                                            t_aDA " HTML3.hs:28:44-47] (CNonCanonical)
                          [W] cobox_aPS :: t_aDt ~ [a_aPN] [" a type equality t_aDt
                                                                              ~
                                                                              [a_aPN] " HTML3.hs:28:50-53] (CNonCanonical)}
Tc9

HTML3.hs:50:29:
    Couldn't match expected type ‘[HTML]’ with actual type ‘HTML’
    In the pattern: Text string
    In the pattern: DoubleTag tag atts (Text string)
    In an equation for ‘ppHTML’:
        ppHTML (DoubleTag tag atts (Text string))
          = tekst
              ("<"
               ++ tag ++ toonAtts atts ++ ">" ++ string ++ "</" ++ tag ++ ">")
