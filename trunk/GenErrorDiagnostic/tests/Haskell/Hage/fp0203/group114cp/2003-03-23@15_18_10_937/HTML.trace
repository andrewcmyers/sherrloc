rn12
rn13
Tc2 (src)
Tc3
kcTyClGroup
  module Pretty
  type Doc = [String]
kcTyClGroup: initial kinds []
env2 []
kcd1 Doc []
tc_lhs_type:
  [String]
  Expected kind ‘k_ags’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_ags := *
kcd2 Doc
Generalise kind
  Doc
  k_ags
  []
  *
kcTyClGroup result [(Doc, *)]
tcTyAndCl generalized kinds [(Doc, *)]
tcTyAndCl-x type Doc = [String]
env2 []
env2 []
tc-syn
  Doc
  [(r8l, AThing *)]
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Doc’]
checkValidType [String] :: *
checkValidType done [String] :: *
env2 []
Adding instances:
addFamInsts
env2 []
tcDeriving
tcDeriving False
tcDeriving 1 []
Adding instances:
Tc3b
tcAmpMissingParentClassWarn/isInsts []
tcAmpMissingParentClassWarn/isInsts []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Monad.join []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.<*> []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.pure []
Tc4
Tc4a
env2 []
Tc5
tc_lhs_type:
  [Doc]
  Expected a type
tc_lhs_type:
  Doc
  Expected kind ‘*’
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Doc] -> Doc
Before unification
utype_defer
  cobox_amO
  [Doc]
  t_amM
  a type equality [Doc] ~ t_amM
  In the type signature for ‘verticaleLijst’:
    verticaleLijst :: [Doc] -> Doc
utype_defer
  cobox_amP
  Doc
  t_amN
  a type equality Doc ~ t_amN
  In the type signature for ‘verticaleLijst’:
    verticaleLijst :: [Doc] -> Doc
checkValidType t_amM -> t_amN :: *
checkValidType done t_amM -> t_amN :: *
tc_lhs_type:
  [Doc]
  Expected a type
tc_lhs_type:
  Doc
  Expected kind ‘*’
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Doc] -> Doc
Before unification
utype_defer
  cobox_amS
  [Doc]
  t_amQ
  a type equality [Doc] ~ t_amQ
  In the type signature for ‘utrechtseLijst’:
    utrechtseLijst :: [Doc] -> Doc
utype_defer
  cobox_amT
  Doc
  t_amR
  a type equality Doc ~ t_amR
  In the type signature for ‘utrechtseLijst’:
    utrechtseLijst :: [Doc] -> Doc
checkValidType t_amQ -> t_amR :: *
checkValidType done t_amQ -> t_amR :: *
tc_lhs_type:
  [Doc]
  Expected a type
tc_lhs_type:
  Doc
  Expected kind ‘*’
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Doc] -> Doc
Before unification
utype_defer
  cobox_amW
  [Doc]
  t_amU
  a type equality [Doc] ~ t_amU
  In the type signature for ‘haskellLijst’:
    haskellLijst :: [Doc] -> Doc
utype_defer
  cobox_amX
  Doc
  t_amV
  a type equality Doc ~ t_amV
  In the type signature for ‘haskellLijst’:
    haskellLijst :: [Doc] -> Doc
checkValidType t_amU -> t_amV :: *
checkValidType done t_amU -> t_amV :: *
tc_lhs_type:
  [Doc]
  Expected a type
tc_lhs_type:
  Doc
  Expected kind ‘*’
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Doc] -> Doc
Before unification
utype_defer
  cobox_an0
  [Doc]
  t_amY
  a type equality [Doc] ~ t_amY
  In the type signature for ‘kommaLijst’: kommaLijst :: [Doc] -> Doc
utype_defer
  cobox_an1
  Doc
  t_amZ
  a type equality Doc ~ t_amZ
  In the type signature for ‘kommaLijst’: kommaLijst :: [Doc] -> Doc
checkValidType t_amY -> t_amZ :: *
checkValidType done t_amY -> t_amZ :: *
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc -> Doc
  Expected a type
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Doc -> Doc -> Doc
Before unification
utype_defer
  cobox_an5
  Doc
  t_an2
  a type equality Doc ~ t_an2
  In the type signature for ‘<+>’: (<+>) :: Doc -> Doc -> Doc
utype_defer
  cobox_an6
  Doc
  t_an3
  a type equality Doc ~ t_an3
  In the type signature for ‘<+>’: (<+>) :: Doc -> Doc -> Doc
utype_defer
  cobox_an7
  Doc
  t_an4
  a type equality Doc ~ t_an4
  In the type signature for ‘<+>’: (<+>) :: Doc -> Doc -> Doc
checkValidType t_an2 -> t_an3 -> t_an4 :: *
checkValidType done t_an2 -> t_an3 -> t_an4 :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen Int -> String
Before unification
utype_defer
  cobox_ana
  Int
  t_an8
  a type equality Int ~ t_an8
  In the type signature for ‘spaties’: spaties :: Int -> String
utype_defer
  cobox_anb
  String
  t_an9
  a type equality String ~ t_an9
  In the type signature for ‘spaties’: spaties :: Int -> String
checkValidType t_an8 -> t_an9 :: *
checkValidType done t_an8 -> t_an9 :: *
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  IO ()
  Expected a type
tc_lhs_type:
  IO
  Expected kind ‘k_anc’
lk1 IO
lk2 IO Type constructor ‘IO’
writeMetaTyVar k_anc := * -> *
tc_lhs_type:
  ()
  The first argument of ‘IO’ should have kind ‘*’
tcCheckHsTypeAndGen Doc -> IO ()
Before unification
utype_defer
  cobox_anm
  Doc
  t_ank
  a type equality Doc ~ t_ank
  In the type signature for ‘layout’: layout :: Doc -> IO ()
utype_defer
  cobox_ann
  IO ()
  t_anl
  a type equality IO () ~ t_anl
  In the type signature for ‘layout’: layout :: Doc -> IO ()
checkValidType t_ank -> t_anl :: *
checkValidType done t_ank -> t_anl :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  Doc -> Doc
  Expected a type
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Int -> Doc -> Doc
Before unification
utype_defer
  cobox_anr
  Int
  t_ano
  a type equality Int ~ t_ano
  In the type signature for ‘springIn’: springIn :: Int -> Doc -> Doc
utype_defer
  cobox_ans
  Doc
  t_anp
  a type equality Doc ~ t_anp
  In the type signature for ‘springIn’: springIn :: Int -> Doc -> Doc
utype_defer
  cobox_ant
  Doc
  t_anq
  a type equality Doc ~ t_anq
  In the type signature for ‘springIn’: springIn :: Int -> Doc -> Doc
checkValidType t_ano -> t_anp -> t_anq :: *
checkValidType done t_ano -> t_anp -> t_anq :: *
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc -> Doc
  Expected a type
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Doc -> Doc -> Doc
Before unification
utype_defer
  cobox_anx
  Doc
  t_anu
  a type equality Doc ~ t_anu
  In the type signature for ‘<->’: (<->) :: Doc -> Doc -> Doc
utype_defer
  cobox_any
  Doc
  t_anv
  a type equality Doc ~ t_anv
  In the type signature for ‘<->’: (<->) :: Doc -> Doc -> Doc
utype_defer
  cobox_anz
  Doc
  t_anw
  a type equality Doc ~ t_anw
  In the type signature for ‘<->’: (<->) :: Doc -> Doc -> Doc
checkValidType t_anu -> t_anv -> t_anw :: *
checkValidType done t_anu -> t_anv -> t_anw :: *
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc -> Doc
  Expected a type
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Doc -> Doc -> Doc
Before unification
utype_defer
  cobox_anD
  Doc
  t_anA
  a type equality Doc ~ t_anA
  In the type signature for ‘<|>’: (<|>) :: Doc -> Doc -> Doc
utype_defer
  cobox_anE
  Doc
  t_anB
  a type equality Doc ~ t_anB
  In the type signature for ‘<|>’: (<|>) :: Doc -> Doc -> Doc
utype_defer
  cobox_anF
  Doc
  t_anC
  a type equality Doc ~ t_anC
  In the type signature for ‘<|>’: (<|>) :: Doc -> Doc -> Doc
checkValidType t_anA -> t_anB -> t_anC :: *
checkValidType done t_anA -> t_anB -> t_anC :: *
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen String -> Doc
Before unification
utype_defer
  cobox_anI
  String
  t_anG
  a type equality String ~ t_anG
  In the type signature for ‘tekst’: tekst :: String -> Doc
utype_defer
  cobox_anJ
  Doc
  t_anH
  a type equality Doc ~ t_anH
  In the type signature for ‘tekst’: tekst :: String -> Doc
checkValidType t_anG -> t_anH :: *
checkValidType done t_anG -> t_anH :: *
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen Doc
Before unification
utype_defer
  cobox_anL
  Doc
  t_anK
  a type equality Doc ~ t_anK
  In the type signature for ‘leeg’: leeg :: Doc
checkValidType t_anK :: OpenKind
checkValidType done t_anK :: OpenKind
env2
  [(verticaleLijst,
    Identifier[verticaleLijst::t_amM -> t_amN, <NotTopLevel>]),
   (utrechtseLijst,
    Identifier[utrechtseLijst::t_amQ -> t_amR, <NotTopLevel>]),
   (haskellLijst,
    Identifier[haskellLijst::t_amU -> t_amV, <NotTopLevel>]),
   (kommaLijst,
    Identifier[kommaLijst::t_amY -> t_amZ, <NotTopLevel>]),
   (<+>, Identifier[<+>::t_an2 -> t_an3 -> t_an4, <NotTopLevel>]),
   (spaties, Identifier[spaties::t_an8 -> t_an9, <NotTopLevel>]),
   (layout, Identifier[layout::t_ank -> t_anl, <NotTopLevel>]),
   (springIn,
    Identifier[springIn::t_ano -> t_anp -> t_anq, <NotTopLevel>]),
   (<->, Identifier[<->::t_anu -> t_anv -> t_anw, <NotTopLevel>]),
   (<|>, Identifier[<|>::t_anA -> t_anB -> t_anC, <NotTopLevel>]),
   (tekst, Identifier[tekst::t_anG -> t_anH, <NotTopLevel>]),
   (leeg, Identifier[leeg::t_anK, <NotTopLevel>])]
------------------------------------------------
Bindings for { [spaties]
Generalisation plan
  CheckGen spaties :: t_an8 -> t_an9
                      []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  spaties
  t_an8 -> t_an9
tcMatchesFun
  spaties
  t_an8 -> t_an9
tcGen
env2 [(n, Identifier[n::t_an8, <NotTopLevel>])]
tcBody t_an9
Instantiating
  replicate with [a_anO]
                 []
utype_defer
  cobox_anP
  [a_anO]
  t_an9
  a type equality [a_anO] ~ t_an9
  In the expression: replicate n ' '
  In an equation for ‘spaties’: spaties n = replicate n ' '
tcPolyExprNC Int
tcGen
utype_defer
  cobox_anQ
  t_an8
  Int
  a type equality t_an8 ~ Int
  In the first argument of ‘replicate’, namely ‘n’
  In the expression: replicate n ' '
tcPolyExprNC a_anO
tcGen
utype_defer
  cobox_anR
  Char
  a_anO
  a type equality Char ~ a_anO
  In the second argument of ‘replicate’, namely ‘' '’
  In the expression: replicate n ' '
  In an equation for ‘spaties’: spaties n = replicate n ' '
addInlinePrags
  spaties
  []
csb2 [spaties]
} End of bindings for
  [spaties]
  NonRecursive
  spaties t_an8 -> t_an9
env2
  [(spaties, Identifier[spaties::t_an8 -> t_an9, <NotTopLevel>])]
------------------------------------------------
Bindings for { [layout]
Generalisation plan
  CheckGen layout :: t_ank -> t_anl
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  layout
  t_ank -> t_anl
tcMatchesFun
  layout
  t_ank -> t_anl
tcGen
env2 [(doc, Identifier[doc::t_ank, <NotTopLevel>])]
tcBody t_anl
utype_defer
  cobox_anT
  IO ()
  t_anl
  a type equality IO () ~ t_anl
  In the expression: putStr (unlines doc)
  In an equation for ‘layout’: layout doc = putStr (unlines doc)
tcPolyExprNC String
tcGen
utype_defer
  cobox_anU
  String
  String
  a type equality String ~ String
  In the first argument of ‘putStr’, namely ‘(unlines doc)’
  In the expression: putStr (unlines doc)
tcPolyExprNC [String]
tcGen
utype_defer
  cobox_anV
  t_ank
  [String]
  a type equality t_ank ~ [String]
  In the first argument of ‘unlines’, namely ‘doc’
  In the first argument of ‘putStr’, namely ‘(unlines doc)’
addInlinePrags
  layout
  []
csb2 [layout]
} End of bindings for
  [layout]
  NonRecursive
  layout t_ank -> t_anl
env2 [(layout, Identifier[layout::t_ank -> t_anl, <NotTopLevel>])]
------------------------------------------------
Bindings for { [springIn]
Generalisation plan
  CheckGen springIn :: t_ano -> t_anp -> t_anq
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  springIn
  t_ano -> t_anp -> t_anq
tcMatchesFun
  springIn
  t_ano -> t_anp -> t_anq
tcGen
env2 [(n, Identifier[n::t_ano, <NotTopLevel>])]
env2 [(regels, Identifier[regels::t_anp, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [spatiesErvoor]
Generalisation plan NoGen
addInlinePrags
  spatiesErvoor
  []
tcMatchesFun
  spatiesErvoor
  t_anX
tcGen
utype_defer
  cobox_ao0
  t_anX
  t_anY -> t_anZ
  a type equality t_anX ~ t_anY -> t_anZ
  In an equation for ‘springIn’:
      springIn n regels
        = map spatiesErvoor regels
        where
            spatiesErvoor regel = spaties n ++ regel
env2 [(regel, Identifier[regel::t_anY, <NotTopLevel>])]
tcBody t_anZ
Non Application rule (++)
Instantiating
  ++ with [a_ao2]
          []
utype_defer
  cobox_ao3
  [a_ao2]
  t_anZ
  a type equality [a_ao2] ~ t_anZ
  In the expression: spaties n ++ regel
  In an equation for ‘spatiesErvoor’:
      spatiesErvoor regel = spaties n ++ regel
  In an equation for ‘springIn’:
      springIn n regels
        = map spatiesErvoor regels
        where
            spatiesErvoor regel = spaties n ++ regel
tcPolyExprNC [a_ao2]
tcGen
utype_defer
  cobox_ao4
  t_an9
  [a_ao2]
  a type equality t_an9 ~ [a_ao2]
  In the first argument of ‘(++)’, namely ‘spaties n’
  In the expression: spaties n ++ regel
tcPolyExprNC t_an8
tcGen
utype_defer
  cobox_ao5
  t_ano
  t_an8
  a type equality t_ano ~ t_an8
  In the first argument of ‘spaties’, namely ‘n’
  In the first argument of ‘(++)’, namely ‘spaties n’
tcPolyExprNC [a_ao2]
tcGen
utype_defer
  cobox_ao6
  t_anY
  [a_ao2]
  a type equality t_anY ~ [a_ao2]
  In the second argument of ‘(++)’, namely ‘regel’
  In the expression: spaties n ++ regel
csb2 [spatiesErvoor]
} End of bindings for
  [spatiesErvoor]
  NonRecursive
  spatiesErvoor t_anX
env2
  [(spatiesErvoor, Identifier[spatiesErvoor::t_anX, <NotTopLevel>])]
tcBody t_anq
Instantiating
  map with [a_ao9, b_aoa]
           []
utype_defer
  cobox_aob
  [b_aoa]
  t_anq
  a type equality [b_aoa] ~ t_anq
  In the expression: map spatiesErvoor regels
  In an equation for ‘springIn’:
      springIn n regels
        = map spatiesErvoor regels
        where
            spatiesErvoor regel = spaties n ++ regel
tcPolyExprNC a_ao9 -> b_aoa
tcGen
utype_defer
  cobox_aoc
  t_anX
  a_ao9 -> b_aoa
  a type equality t_anX ~ a_ao9 -> b_aoa
  In the first argument of ‘map’, namely ‘spatiesErvoor’
  In the expression: map spatiesErvoor regels
tcPolyExprNC [a_ao9]
tcGen
utype_defer
  cobox_aod
  t_anp
  [a_ao9]
  a type equality t_anp ~ [a_ao9]
  In the second argument of ‘map’, namely ‘regels’
  In the expression: map spatiesErvoor regels
addInlinePrags
  springIn
  []
csb2 [springIn]
} End of bindings for
  [springIn]
  NonRecursive
  springIn t_ano -> t_anp -> t_anq
env2
  [(springIn,
    Identifier[springIn::t_ano -> t_anp -> t_anq, <NotTopLevel>])]
------------------------------------------------
Bindings for { [<->]
Generalisation plan
  CheckGen <-> :: t_anu -> t_anv -> t_anw
                  []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  <->
  t_anu -> t_anv -> t_anw
tcMatchesFun
  <->
  t_anu -> t_anv -> t_anw
tcGen
env2 [(boven, Identifier[boven::t_anu, <NotTopLevel>])]
env2 [(onder, Identifier[onder::t_anv, <NotTopLevel>])]
tcBody t_anw
Non Application rule (++)
Instantiating
  ++ with [a_aof]
          []
utype_defer
  cobox_aog
  [a_aof]
  t_anw
  a type equality [a_aof] ~ t_anw
  In the expression: boven ++ onder
  In an equation for ‘<->’: boven <-> onder = boven ++ onder
tcPolyExprNC [a_aof]
tcGen
utype_defer
  cobox_aoh
  t_anu
  [a_aof]
  a type equality t_anu ~ [a_aof]
  In the first argument of ‘(++)’, namely ‘boven’
  In the expression: boven ++ onder
tcPolyExprNC [a_aof]
tcGen
utype_defer
  cobox_aoi
  t_anv
  [a_aof]
  a type equality t_anv ~ [a_aof]
  In the second argument of ‘(++)’, namely ‘onder’
  In the expression: boven ++ onder
addInlinePrags
  <->
  []
csb2 [<->]
} End of bindings for
  [<->]
  NonRecursive
  <-> t_anu -> t_anv -> t_anw
env2
  [(<->, Identifier[<->::t_anu -> t_anv -> t_anw, <NotTopLevel>])]
------------------------------------------------
Bindings for { [<|>]
Generalisation plan
  CheckGen <|> :: t_anA -> t_anB -> t_anC
                  []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  <|>
  t_anA -> t_anB -> t_anC
tcMatchesFun
  <|>
  t_anA -> t_anB -> t_anC
tcGen
utype_defer
  cobox_aol
  [t_aok]
  t_anA
  a type equality [t_aok] ~ t_anA
  In the pattern: []
  In an equation for ‘<|>’: [] <|> rechts = rechts
tcConPat
  []
  []
  [t_aok]
  []
env2 [(rechts, Identifier[rechts::t_anB, <NotTopLevel>])]
tcBody t_anC
utype_defer
  cobox_aom
  t_anB
  t_anC
  a type equality t_anB ~ t_anC
  In the expression: rechts
  In an equation for ‘<|>’: [] <|> rechts = rechts
env2 [(links, Identifier[links::t_anA, <NotTopLevel>])]
utype_defer
  cobox_aoo
  [t_aon]
  t_anB
  a type equality [t_aon] ~ t_anB
  In the pattern: []
  In an equation for ‘<|>’: links <|> [] = links
tcConPat
  []
  []
  [t_aon]
  []
tcBody t_anC
utype_defer
  cobox_aop
  t_anA
  t_anC
  a type equality t_anA ~ t_anC
  In the expression: links
  In an equation for ‘<|>’: links <|> [] = links
env2 [(links, Identifier[links::t_anA, <NotTopLevel>])]
env2 [(rechts, Identifier[rechts::t_anB, <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [inspringing]
Generalisation plan NoGen
addInlinePrags
  inspringing
  []
tcMatchesFun
  inspringing
  t_aoq
tcGen
tcBody t_aoq
Instantiating
  length with [a_aos]
              []
utype_defer
  cobox_aot
  Int
  t_aoq
  a type equality Int ~ t_aoq
  In the expression: length (last links)
  In an equation for ‘inspringing’: inspringing = length (last links)
tcPolyExprNC [a_aos]
tcGen
Instantiating
  last with [a_aov]
            []
utype_defer
  cobox_aow
  a_aov
  [a_aos]
  a type equality a_aov ~ [a_aos]
  In the first argument of ‘length’, namely ‘(last links)’
  In the expression: length (last links)
tcPolyExprNC [a_aov]
tcGen
utype_defer
  cobox_aox
  t_anA
  [a_aov]
  a type equality t_anA ~ [a_aov]
  In the first argument of ‘last’, namely ‘links’
  In the first argument of ‘length’, namely ‘(last links)’
csb2 [inspringing]
} End of bindings for
  [inspringing]
  NonRecursive
  inspringing t_aoq
env2 [(inspringing, Identifier[inspringing::t_aoq, <NotTopLevel>])]
tcBody t_anC
Non Application rule (++)
Instantiating
  ++ with [a_aoy]
          []
utype_defer
  cobox_aoz
  [a_aoy]
  t_anC
  a type equality [a_aoy] ~ t_anC
  In the expression:
    init links
    ++
      [last links ++ head rechts] ++ springIn inspringing (tail rechts)
  In an equation for ‘<|>’:
      links <|> rechts
        = init links
          ++
            [last links ++ head rechts] ++ springIn inspringing (tail rechts)
        where
            inspringing = length (last links)
tcPolyExprNC [a_aoy]
tcGen
Instantiating
  init with [a_aoB]
            []
utype_defer
  cobox_aoC
  [a_aoB]
  [a_aoy]
  a type equality [a_aoB] ~ [a_aoy]
  In the first argument of ‘(++)’, namely ‘init links’
  In the expression:
    init links
    ++
      [last links ++ head rechts] ++ springIn inspringing (tail rechts)
tcPolyExprNC [a_aoB]
tcGen
utype_defer
  cobox_aoD
  t_anA
  [a_aoB]
  a type equality t_anA ~ [a_aoB]
  In the first argument of ‘init’, namely ‘links’
  In the first argument of ‘(++)’, namely ‘init links’
tcPolyExprNC [a_aoy]
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aoE]
          []
utype_defer
  cobox_aoF
  [a_aoE]
  [a_aoy]
  a type equality [a_aoE] ~ [a_aoy]
  In the second argument of ‘(++)’, namely
    ‘[last links ++ head rechts] ++ springIn inspringing (tail rechts)’
  In the expression:
    init links
    ++
      [last links ++ head rechts] ++ springIn inspringing (tail rechts)
  In an equation for ‘<|>’:
      links <|> rechts
        = init links
          ++
            [last links ++ head rechts] ++ springIn inspringing (tail rechts)
        where
            inspringing = length (last links)
tcPolyExprNC [a_aoE]
tcGen
tcPolyExpr a_aoE
tcPolyExprNC a_aoE
tcGen
Non Application rule (++)
Instantiating
  ++ with [a_aoG]
          []
utype_defer
  cobox_aoH
  [a_aoG]
  a_aoE
  a type equality [a_aoG] ~ a_aoE
  In the expression: last links ++ head rechts
  In the first argument of ‘(++)’, namely
    ‘[last links ++ head rechts]’
  In the second argument of ‘(++)’, namely
    ‘[last links ++ head rechts] ++ springIn inspringing (tail rechts)’
tcPolyExprNC [a_aoG]
tcGen
Instantiating
  last with [a_aoI]
            []
utype_defer
  cobox_aoJ
  a_aoI
  [a_aoG]
  a type equality a_aoI ~ [a_aoG]
  In the first argument of ‘(++)’, namely ‘last links’
  In the expression: last links ++ head rechts
tcPolyExprNC [a_aoI]
tcGen
utype_defer
  cobox_aoK
  t_anA
  [a_aoI]
  a type equality t_anA ~ [a_aoI]
  In the first argument of ‘last’, namely ‘links’
  In the first argument of ‘(++)’, namely ‘last links’
tcPolyExprNC [a_aoG]
tcGen
Instantiating
  head with [a_aoM]
            []
utype_defer
  cobox_aoN
  a_aoM
  [a_aoG]
  a type equality a_aoM ~ [a_aoG]
  In the second argument of ‘(++)’, namely ‘head rechts’
  In the expression: last links ++ head rechts
tcPolyExprNC [a_aoM]
tcGen
utype_defer
  cobox_aoO
  t_anB
  [a_aoM]
  a type equality t_anB ~ [a_aoM]
  In the first argument of ‘head’, namely ‘rechts’
  In the second argument of ‘(++)’, namely ‘head rechts’
tcPolyExprNC [a_aoE]
tcGen
utype_defer
  cobox_aoP
  t_anq
  [a_aoE]
  a type equality t_anq ~ [a_aoE]
  In the second argument of ‘(++)’, namely
    ‘springIn inspringing (tail rechts)’
  In the second argument of ‘(++)’, namely
    ‘[last links ++ head rechts] ++ springIn inspringing (tail rechts)’
tcPolyExprNC t_ano
tcGen
utype_defer
  cobox_aoQ
  t_aoq
  t_ano
  a type equality t_aoq ~ t_ano
  In the first argument of ‘springIn’, namely ‘inspringing’
  In the second argument of ‘(++)’, namely
    ‘springIn inspringing (tail rechts)’
tcPolyExprNC t_anp
tcGen
Instantiating
  tail with [a_aoS]
            []
utype_defer
  cobox_aoT
  [a_aoS]
  t_anp
  a type equality [a_aoS] ~ t_anp
  In the second argument of ‘springIn’, namely ‘(tail rechts)’
  In the second argument of ‘(++)’, namely
    ‘springIn inspringing (tail rechts)’
tcPolyExprNC [a_aoS]
tcGen
utype_defer
  cobox_aoU
  t_anB
  [a_aoS]
  a type equality t_anB ~ [a_aoS]
  In the first argument of ‘tail’, namely ‘rechts’
  In the second argument of ‘springIn’, namely ‘(tail rechts)’
addInlinePrags
  <|>
  []
csb2 [<|>]
} End of bindings for
  [<|>]
  NonRecursive
  <|> t_anA -> t_anB -> t_anC
env2
  [(<|>, Identifier[<|>::t_anA -> t_anB -> t_anC, <NotTopLevel>])]
------------------------------------------------
Bindings for { [<+>]
Generalisation plan
  CheckGen <+> :: t_an2 -> t_an3 -> t_an4
                  []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  <+>
  t_an2 -> t_an3 -> t_an4
tcMatchesFun
  <+>
  t_an2 -> t_an3 -> t_an4
tcGen
env2 [(doc1, Identifier[doc1::t_an2, <NotTopLevel>])]
env2 [(doc2, Identifier[doc2::t_an3, <NotTopLevel>])]
tcBody t_an4
Non Application rule (<|>)
utype_defer
  cobox_aoW
  t_anC
  t_an4
  a type equality t_anC ~ t_an4
  In the expression: doc1 <|> springIn 1 doc2
  In an equation for ‘<+>’: doc1 <+> doc2 = doc1 <|> springIn 1 doc2
tcPolyExprNC t_anA
tcGen
utype_defer
  cobox_aoX
  t_an2
  t_anA
  a type equality t_an2 ~ t_anA
  In the first argument of ‘(<|>)’, namely ‘doc1’
  In the expression: doc1 <|> springIn 1 doc2
tcPolyExprNC t_anB
tcGen
utype_defer
  cobox_aoY
  t_anq
  t_anB
  a type equality t_anq ~ t_anB
  In the second argument of ‘(<|>)’, namely ‘springIn 1 doc2’
  In the expression: doc1 <|> springIn 1 doc2
tcPolyExprNC t_ano
tcGen
Instantiating
  fromInteger with [a_aru]
                   [Num a_aru]
instCallConstraints [$dNum_arv]
utype_defer
  cobox_arw
  Integer -> a_aru
  Integer -> t_ano
  a type equality Integer -> a_aru ~ Integer -> t_ano
  In the first argument of ‘springIn’, namely ‘1’
  In the second argument of ‘(<|>)’, namely ‘springIn 1 doc2’
  In the expression: doc1 <|> springIn 1 doc2
tcPolyExprNC t_anp
tcGen
utype_defer
  cobox_arx
  t_an3
  t_anp
  a type equality t_an3 ~ t_anp
  In the second argument of ‘springIn’, namely ‘doc2’
  In the second argument of ‘(<|>)’, namely ‘springIn 1 doc2’
addInlinePrags
  <+>
  []
csb2 [<+>]
} End of bindings for
  [<+>]
  NonRecursive
  <+> t_an2 -> t_an3 -> t_an4
env2
  [(<+>, Identifier[<+>::t_an2 -> t_an3 -> t_an4, <NotTopLevel>])]
------------------------------------------------
Bindings for { [tekst]
Generalisation plan
  CheckGen tekst :: t_anG -> t_anH
                    []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  tekst
  t_anG -> t_anH
tcMatchesFun
  tekst
  t_anG -> t_anH
tcGen
env2 [(string, Identifier[string::t_anG, <NotTopLevel>])]
tcBody t_anH
utype_defer
  cobox_arA
  [t_arz]
  t_anH
  a type equality [t_arz] ~ t_anH
  In the expression: [string]
  In an equation for ‘tekst’: tekst string = [string]
tcPolyExpr t_arz
tcPolyExprNC t_arz
tcGen
utype_defer
  cobox_arB
  t_anG
  t_arz
  a type equality t_anG ~ t_arz
  In the expression: string
  In the expression: [string]
addInlinePrags
  tekst
  []
csb2 [tekst]
} End of bindings for
  [tekst]
  NonRecursive
  tekst t_anG -> t_anH
env2 [(tekst, Identifier[tekst::t_anG -> t_anH, <NotTopLevel>])]
------------------------------------------------
Bindings for { [leeg]
Generalisation plan
  CheckGen leeg :: t_anK
                   []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  leeg
  t_anK
tcMatchesFun
  leeg
  t_anK
tcGen
tcBody t_anK
utype_defer
  cobox_arE
  [t_arD]
  t_anK
  a type equality [t_arD] ~ t_anK
  In the expression: []
  In an equation for ‘leeg’: leeg = []
addInlinePrags
  leeg
  []
csb2 [leeg]
} End of bindings for
  [leeg]
  NonRecursive
  leeg t_anK
env2 [(leeg, Identifier[leeg::t_anK, <NotTopLevel>])]
tc_group rec
  kommaLijst [] = leeg
  kommaLijst [x] = x
  kommaLijst (x : xs) = x <|> tekst "," <+> kommaLijst xs
------------------------------------------------
Bindings for { [kommaLijst]
Generalisation plan
  CheckGen kommaLijst :: t_amY -> t_amZ
                         []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  kommaLijst
  t_amY -> t_amZ
tcMatchesFun
  kommaLijst
  t_amY -> t_amZ
tcGen
utype_defer
  cobox_arH
  [t_arG]
  t_amY
  a type equality [t_arG] ~ t_amY
  In the pattern: []
  In an equation for ‘kommaLijst’: kommaLijst [] = leeg
tcConPat
  []
  []
  [t_arG]
  []
tcBody t_amZ
utype_defer
  cobox_arI
  t_anK
  t_amZ
  a type equality t_anK ~ t_amZ
  In the expression: leeg
  In an equation for ‘kommaLijst’: kommaLijst [] = leeg
utype_defer
  cobox_arK
  [t_arJ]
  t_amY
  a type equality [t_arJ] ~ t_amY
  In the pattern: [x]
  In an equation for ‘kommaLijst’: kommaLijst [x] = x
env2 [(x, Identifier[x::t_arJ, <NotTopLevel>])]
tcBody t_amZ
utype_defer
  cobox_arL
  t_arJ
  t_amZ
  a type equality t_arJ ~ t_amZ
  In the expression: x
  In an equation for ‘kommaLijst’: kommaLijst [x] = x
utype_defer
  cobox_arN
  [t_arM]
  t_amY
  a type equality [t_arM] ~ t_amY
  In the pattern: x : xs
  In an equation for ‘kommaLijst’:
      kommaLijst (x : xs) = x <|> tekst "," <+> kommaLijst xs
tcConPat
  :
  []
  [t_arM]
  [t_arM, [t_arM]]
env2 [(x, Identifier[x::t_arM, <NotTopLevel>])]
env2 [(xs, Identifier[xs::[t_arM], <NotTopLevel>])]
tcBody t_amZ
Non Application rule (<+>)
utype_defer
  cobox_arO
  t_an4
  t_amZ
  a type equality t_an4 ~ t_amZ
  In the expression: x <|> tekst "," <+> kommaLijst xs
  In an equation for ‘kommaLijst’:
      kommaLijst (x : xs) = x <|> tekst "," <+> kommaLijst xs
tcPolyExprNC t_an2
tcGen
Non Application rule (<|>)
utype_defer
  cobox_arP
  t_anC
  t_an2
  a type equality t_anC ~ t_an2
  In the first argument of ‘(<+>)’, namely ‘x <|> tekst ","’
  In the expression: x <|> tekst "," <+> kommaLijst xs
  In an equation for ‘kommaLijst’:
      kommaLijst (x : xs) = x <|> tekst "," <+> kommaLijst xs
tcPolyExprNC t_anA
tcGen
utype_defer
  cobox_arQ
  t_arM
  t_anA
  a type equality t_arM ~ t_anA
  In the first argument of ‘(<|>)’, namely ‘x’
  In the first argument of ‘(<+>)’, namely ‘x <|> tekst ","’
tcPolyExprNC t_anB
tcGen
utype_defer
  cobox_arR
  t_anH
  t_anB
  a type equality t_anH ~ t_anB
  In the second argument of ‘(<|>)’, namely ‘tekst ","’
  In the first argument of ‘(<+>)’, namely ‘x <|> tekst ","’
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_arS
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘","’
  In the second argument of ‘(<|>)’, namely ‘tekst ","’
  In the first argument of ‘(<+>)’, namely ‘x <|> tekst ","’
tcPolyExprNC t_an3
tcGen
utype_defer
  cobox_arT
  t_amZ
  t_an3
  a type equality t_amZ ~ t_an3
  In the second argument of ‘(<+>)’, namely ‘kommaLijst xs’
  In the expression: x <|> tekst "," <+> kommaLijst xs
tcPolyExprNC t_amY
tcGen
utype_defer
  cobox_arU
  [t_arM]
  t_amY
  a type equality [t_arM] ~ t_amY
  In the first argument of ‘kommaLijst’, namely ‘xs’
  In the second argument of ‘(<+>)’, namely ‘kommaLijst xs’
addInlinePrags
  kommaLijst
  []
csb2 [kommaLijst]
} End of bindings for
  [kommaLijst]
  Recursive
  kommaLijst t_amY -> t_amZ
env2
  [(kommaLijst,
    Identifier[kommaLijst::t_amY -> t_amZ, <NotTopLevel>])]
------------------------------------------------
Bindings for { [haskellLijst]
Generalisation plan
  CheckGen haskellLijst :: t_amU -> t_amV
                           []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  haskellLijst
  t_amU -> t_amV
tcMatchesFun
  haskellLijst
  t_amU -> t_amV
tcGen
env2 [(docs, Identifier[docs::t_amU, <NotTopLevel>])]
tcBody t_amV
Non Application rule (<|>)
utype_defer
  cobox_arW
  t_anC
  t_amV
  a type equality t_anC ~ t_amV
  In the expression: tekst "[" <|> kommaLijst docs <|> tekst "]"
  In an equation for ‘haskellLijst’:
      haskellLijst docs = tekst "[" <|> kommaLijst docs <|> tekst "]"
tcPolyExprNC t_anA
tcGen
Non Application rule (<|>)
utype_defer
  cobox_arX
  t_anC
  t_anA
  a type equality t_anC ~ t_anA
  In the first argument of ‘(<|>)’, namely
    ‘tekst "[" <|> kommaLijst docs’
  In the expression: tekst "[" <|> kommaLijst docs <|> tekst "]"
  In an equation for ‘haskellLijst’:
      haskellLijst docs = tekst "[" <|> kommaLijst docs <|> tekst "]"
tcPolyExprNC t_anA
tcGen
utype_defer
  cobox_arY
  t_anH
  t_anA
  a type equality t_anH ~ t_anA
  In the first argument of ‘(<|>)’, namely ‘tekst "["’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "[" <|> kommaLijst docs’
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_arZ
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"["’
  In the first argument of ‘(<|>)’, namely ‘tekst "["’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "[" <|> kommaLijst docs’
tcPolyExprNC t_anB
tcGen
utype_defer
  cobox_as0
  t_amZ
  t_anB
  a type equality t_amZ ~ t_anB
  In the second argument of ‘(<|>)’, namely ‘kommaLijst docs’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "[" <|> kommaLijst docs’
tcPolyExprNC t_amY
tcGen
utype_defer
  cobox_as1
  t_amU
  t_amY
  a type equality t_amU ~ t_amY
  In the first argument of ‘kommaLijst’, namely ‘docs’
  In the second argument of ‘(<|>)’, namely ‘kommaLijst docs’
tcPolyExprNC t_anB
tcGen
utype_defer
  cobox_as2
  t_anH
  t_anB
  a type equality t_anH ~ t_anB
  In the second argument of ‘(<|>)’, namely ‘tekst "]"’
  In the expression: tekst "[" <|> kommaLijst docs <|> tekst "]"
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_as3
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"]"’
  In the second argument of ‘(<|>)’, namely ‘tekst "]"’
  In the expression: tekst "[" <|> kommaLijst docs <|> tekst "]"
addInlinePrags
  haskellLijst
  []
csb2 [haskellLijst]
} End of bindings for
  [haskellLijst]
  NonRecursive
  haskellLijst t_amU -> t_amV
env2
  [(haskellLijst,
    Identifier[haskellLijst::t_amU -> t_amV, <NotTopLevel>])]
------------------------------------------------
Bindings for { [verticaleLijst]
Generalisation plan
  CheckGen verticaleLijst :: t_amM -> t_amN
                             []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  verticaleLijst
  t_amM -> t_amN
tcMatchesFun
  verticaleLijst
  t_amM -> t_amN
tcGen
tcBody t_amM -> t_amN
Instantiating
  foldr with [a_as7, b_as8]
             []
utype_defer
  cobox_as9
  [a_as7] -> b_as8
  t_amM -> t_amN
  a type equality [a_as7] -> b_as8 ~ t_amM -> t_amN
  In the expression: foldr (<->) leeg
  In an equation for ‘verticaleLijst’:
      verticaleLijst = foldr (<->) leeg
tcPolyExprNC a_as7 -> b_as8 -> b_as8
tcGen
utype_defer
  cobox_asa
  t_anu -> t_anv -> t_anw
  a_as7 -> b_as8 -> b_as8
  a type equality t_anu -> t_anv -> t_anw ~ a_as7 -> b_as8 -> b_as8
  In the first argument of ‘foldr’, namely ‘(<->)’
  In the expression: foldr (<->) leeg
tcPolyExprNC b_as8
tcGen
utype_defer
  cobox_asb
  t_anK
  b_as8
  a type equality t_anK ~ b_as8
  In the second argument of ‘foldr’, namely ‘leeg’
  In the expression: foldr (<->) leeg
addInlinePrags
  verticaleLijst
  []
csb2 [verticaleLijst]
} End of bindings for
  [verticaleLijst]
  NonRecursive
  verticaleLijst t_amM -> t_amN
env2
  [(verticaleLijst,
    Identifier[verticaleLijst::t_amM -> t_amN, <NotTopLevel>])]
------------------------------------------------
Bindings for { [utrechtseLijst]
Generalisation plan
  CheckGen utrechtseLijst :: t_amQ -> t_amR
                             []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  utrechtseLijst
  t_amQ -> t_amR
tcMatchesFun
  utrechtseLijst
  t_amQ -> t_amR
tcGen
utype_defer
  cobox_ase
  [t_asd]
  t_amQ
  a type equality [t_asd] ~ t_amQ
  In the pattern: []
  In an equation for ‘utrechtseLijst’: utrechtseLijst [] = tekst "[]"
tcConPat
  []
  []
  [t_asd]
  []
tcBody t_amR
utype_defer
  cobox_asf
  t_anH
  t_amR
  a type equality t_anH ~ t_amR
  In the expression: tekst "[]"
  In an equation for ‘utrechtseLijst’: utrechtseLijst [] = tekst "[]"
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_asg
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"[]"’
  In the expression: tekst "[]"
  In an equation for ‘utrechtseLijst’: utrechtseLijst [] = tekst "[]"
utype_defer
  cobox_asi
  [t_ash]
  t_amQ
  a type equality [t_ash] ~ t_amQ
  In the pattern: doc : docs
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
tcConPat
  :
  []
  [t_ash]
  [t_ash, [t_ash]]
env2 [(doc, Identifier[doc::t_ash, <NotTopLevel>])]
env2 [(docs, Identifier[docs::[t_ash], <NotTopLevel>])]
env2 []
------------------------------------------------
Bindings for { [kommaErvoor]
Generalisation plan NoGen
addInlinePrags
  kommaErvoor
  []
tcMatchesFun
  kommaErvoor
  t_asj
tcGen
utype_defer
  cobox_asm
  t_asj
  t_ask -> t_asl
  a type equality t_asj ~ t_ask -> t_asl
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
env2 [(docc, Identifier[docc::t_ask, <NotTopLevel>])]
tcBody t_asl
Non Application rule (<+>)
utype_defer
  cobox_asn
  t_an4
  t_asl
  a type equality t_an4 ~ t_asl
  In the expression: tekst "," <+> docc
  In an equation for ‘kommaErvoor’:
      kommaErvoor docc = tekst "," <+> docc
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
tcPolyExprNC t_an2
tcGen
utype_defer
  cobox_aso
  t_anH
  t_an2
  a type equality t_anH ~ t_an2
  In the first argument of ‘(<+>)’, namely ‘tekst ","’
  In the expression: tekst "," <+> docc
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_asp
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘","’
  In the first argument of ‘(<+>)’, namely ‘tekst ","’
  In the expression: tekst "," <+> docc
tcPolyExprNC t_an3
tcGen
utype_defer
  cobox_asq
  t_ask
  t_an3
  a type equality t_ask ~ t_an3
  In the second argument of ‘(<+>)’, namely ‘docc’
  In the expression: tekst "," <+> docc
csb2 [kommaErvoor]
} End of bindings for
  [kommaErvoor]
  NonRecursive
  kommaErvoor t_asj
env2 [(kommaErvoor, Identifier[kommaErvoor::t_asj, <NotTopLevel>])]
tcBody t_amR
Non Application rule (<->)
utype_defer
  cobox_asr
  t_anw
  t_amR
  a type equality t_anw ~ t_amR
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
tcPolyExprNC t_anu
tcGen
Non Application rule (<->)
utype_defer
  cobox_ass
  t_anw
  t_anu
  a type equality t_anw ~ t_anu
  In the first argument of ‘(<->)’, namely
    ‘tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)’
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
  In an equation for ‘utrechtseLijst’:
      utrechtseLijst (doc : docs)
        = tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
          <-> tekst "]"
        where
            kommaErvoor docc = tekst "," <+> docc
tcPolyExprNC t_anu
tcGen
Non Application rule (<+>)
utype_defer
  cobox_ast
  t_an4
  t_anu
  a type equality t_an4 ~ t_anu
  In the first argument of ‘(<->)’, namely ‘tekst "[" <+> doc’
  In the first argument of ‘(<->)’, namely
    ‘tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)’
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
tcPolyExprNC t_an2
tcGen
utype_defer
  cobox_asu
  t_anH
  t_an2
  a type equality t_anH ~ t_an2
  In the first argument of ‘(<+>)’, namely ‘tekst "["’
  In the first argument of ‘(<->)’, namely ‘tekst "[" <+> doc’
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_asv
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"["’
  In the first argument of ‘(<+>)’, namely ‘tekst "["’
  In the first argument of ‘(<->)’, namely ‘tekst "[" <+> doc’
tcPolyExprNC t_an3
tcGen
utype_defer
  cobox_asw
  t_ash
  t_an3
  a type equality t_ash ~ t_an3
  In the second argument of ‘(<+>)’, namely ‘doc’
  In the first argument of ‘(<->)’, namely ‘tekst "[" <+> doc’
tcPolyExprNC t_anv
tcGen
utype_defer
  cobox_asx
  t_amN
  t_anv
  a type equality t_amN ~ t_anv
  In the second argument of ‘(<->)’, namely
    ‘verticaleLijst (map kommaErvoor docs)’
  In the first argument of ‘(<->)’, namely
    ‘tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)’
tcPolyExprNC t_amM
tcGen
Instantiating
  map with [a_asy, b_asz]
           []
utype_defer
  cobox_asA
  [b_asz]
  t_amM
  a type equality [b_asz] ~ t_amM
  In the first argument of ‘verticaleLijst’, namely
    ‘(map kommaErvoor docs)’
  In the second argument of ‘(<->)’, namely
    ‘verticaleLijst (map kommaErvoor docs)’
tcPolyExprNC a_asy -> b_asz
tcGen
utype_defer
  cobox_asB
  t_asj
  a_asy -> b_asz
  a type equality t_asj ~ a_asy -> b_asz
  In the first argument of ‘map’, namely ‘kommaErvoor’
  In the first argument of ‘verticaleLijst’, namely
    ‘(map kommaErvoor docs)’
tcPolyExprNC [a_asy]
tcGen
utype_defer
  cobox_asC
  [t_ash]
  [a_asy]
  a type equality [t_ash] ~ [a_asy]
  In the second argument of ‘map’, namely ‘docs’
  In the first argument of ‘verticaleLijst’, namely
    ‘(map kommaErvoor docs)’
tcPolyExprNC t_anv
tcGen
utype_defer
  cobox_asD
  t_anH
  t_anv
  a type equality t_anH ~ t_anv
  In the second argument of ‘(<->)’, namely ‘tekst "]"’
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
tcPolyExprNC t_anG
tcGen
utype_defer
  cobox_asE
  [Char]
  t_anG
  a type equality [Char] ~ t_anG
  In the first argument of ‘tekst’, namely ‘"]"’
  In the second argument of ‘(<->)’, namely ‘tekst "]"’
  In the expression:
    tekst "[" <+> doc <-> verticaleLijst (map kommaErvoor docs)
    <-> tekst "]"
addInlinePrags
  utrechtseLijst
  []
csb2 [utrechtseLijst]
} End of bindings for
  [utrechtseLijst]
  NonRecursive
  utrechtseLijst t_amQ -> t_amR
env2
  [(utrechtseLijst,
    Identifier[utrechtseLijst::t_amQ -> t_amR, <NotTopLevel>])]
Tc6
env2 []
Tc7
End of tcVectDecls: LIE:
  WC {wc_flat = [W] cobox_amO :: [Doc]
                                 ~ t_amM [" a type equality [Doc]
                                                            ~
                                                            t_amM " Pretty.hs:162:19-30] (CNonCanonical)
                [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                ~
                                                                t_amN " Pretty.hs:162:19-30] (CNonCanonical)
                [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                                  ~
                                                                  t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
                [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                ~
                                                                t_amR " Pretty.hs:152:19-30] (CNonCanonical)
                [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                                  ~
                                                                  t_amU " Pretty.hs:148:17-28] (CNonCanonical)
                [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                ~
                                                                t_amV " Pretty.hs:148:17-28] (CNonCanonical)
                [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                                  ~
                                                                  t_amY " Pretty.hs:143:15-26] (CNonCanonical)
                [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                ~
                                                                t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
                [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                ~
                                                                t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                ~
                                                                t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                ~
                                                                t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                ~
                                                                t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
                [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                                   ~
                                                                   t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
                [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                ~
                                                                t_ank " Pretty.hs:94:13-24] (CNonCanonical)
                [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                                  ~
                                                                  t_anl " Pretty.hs:94:13-24] (CNonCanonical)
                [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                ~
                                                                t_ano " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                ~
                                                                t_anp " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                ~
                                                                t_anq " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                ~
                                                                t_anu " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                ~
                                                                t_anv " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                ~
                                                                t_anw " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                ~
                                                                t_anA " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                ~
                                                                t_anB " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                ~
                                                                t_anC " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                                   ~
                                                                   t_anG " Pretty.hs:32:13-25] (CNonCanonical)
                [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                ~
                                                                t_anH " Pretty.hs:32:13-25] (CNonCanonical)
                [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                ~
                                                                t_anK " Pretty.hs:25:13-15] (CNonCanonical)
                [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                                    ~
                                                                    t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
                [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                ~
                                                                Int " Pretty.hs:136:23] (CNonCanonical)
                [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                 ~
                                                                 a_anO " Pretty.hs:136:25-27] (CNonCanonical)
                [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                                  ~
                                                                  t_anl " Pretty.hs:131:5-24] (CNonCanonical)
                [W] cobox_anU :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " Pretty.hs:131:13-23] (CNonCanonical)
                [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                                     ~
                                                                     [String] " Pretty.hs:131:21-23] (CNonCanonical)
                [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                             ~
                                                                             t_anY
                                                                             -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
                [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                                    ~
                                                                    t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
                [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                                    ~
                                                                    [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
                [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                                  ~
                                                                  t_an8 " Pretty.hs:127:35] (CNonCanonical)
                [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                                    ~
                                                                    [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
                [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                                    ~
                                                                    t_anq " Pretty.hs:125:5-28] (CNonCanonical)
                [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                             ~
                                                                             a_ao9
                                                                             -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
                [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                                    ~
                                                                    [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
                [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                                    ~
                                                                    t_anw " Pretty.hs:121:5-18] (CNonCanonical)
                [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                                    ~
                                                                    [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
                [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                                    ~
                                                                    [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
                [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                                    ~
                                                                    t_anA " Pretty.hs:106:1-2] (CNonCanonical)
                [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                                  ~
                                                                  t_anC " Pretty.hs:107:5-10] (CNonCanonical)
                [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                                    ~
                                                                    t_anB " Pretty.hs:108:11-12] (CNonCanonical)
                [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                                  ~
                                                                  t_anC " Pretty.hs:109:5-9] (CNonCanonical)
                [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                ~
                                                                t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
                [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                                    ~
                                                                    [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
                [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                                    ~
                                                                    [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
                [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                                    ~
                                                                    t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
                [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                                      ~
                                                                      [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
                [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                                    ~
                                                                    [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
                [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                                      ~
                                                                      [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
                [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                                    ~
                                                                    a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
                [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                                    ~
                                                                    [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
                [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                                    ~
                                                                    [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
                [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                                    ~
                                                                    [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
                [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                                    ~
                                                                    [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
                [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                                    ~
                                                                    [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
                [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                                  ~
                                                                  t_ano " Pretty.hs:115:14-24] (CNonCanonical)
                [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                                    ~
                                                                    t_anp " Pretty.hs:115:27-37] (CNonCanonical)
                [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                                    ~
                                                                    [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
                [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                                  ~
                                                                  t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
                [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                                  ~
                                                                  t_anA " Pretty.hs:141:17-20] (CNonCanonical)
                [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                                  ~
                                                                  t_anB " Pretty.hs:141:26-40] (CNonCanonical)
                [W] $dNum_arv :: Num
                                   a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
                [W] cobox_arw :: (Integer -> a_aru)
                                 ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                         ~
                                                                         Integer
                                                                         -> t_ano " Pretty.hs:141:35] (CNonCanonical)
                [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                                  ~
                                                                  t_anp " Pretty.hs:141:37-40] (CNonCanonical)
                [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                                    ~
                                                                    t_anH " Pretty.hs:103:5-14] (CNonCanonical)
                [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                                  ~
                                                                  t_arz " Pretty.hs:103:7-12] (CNonCanonical)
                [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                                    ~
                                                                    t_anK " Pretty.hs:99:8-9] (CNonCanonical)
                [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                                    ~
                                                                    t_amY " Pretty.hs:144:12-13] (CNonCanonical)
                [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                                  ~
                                                                  t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
                [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                                    ~
                                                                    t_amY " Pretty.hs:145:12-14] (CNonCanonical)
                [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                                  ~
                                                                  t_amZ " Pretty.hs:145:18] (CNonCanonical)
                [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                    ~
                                                                    t_amY " Pretty.hs:146:13-16] (CNonCanonical)
                [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                                  ~
                                                                  t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
                [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                                  ~
                                                                  t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
                [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                                  ~
                                                                  t_anA " Pretty.hs:146:21] (CNonCanonical)
                [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                                  ~
                                                                  t_anB " Pretty.hs:146:27-35] (CNonCanonical)
                [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:146:33-35] (CNonCanonical)
                [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                                  ~
                                                                  t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
                [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                    ~
                                                                    t_amY " Pretty.hs:146:52-53] (CNonCanonical)
                [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                                  ~
                                                                  t_amV " Pretty.hs:150:5-47] (CNonCanonical)
                [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                                  ~
                                                                  t_anA " Pretty.hs:150:5-33] (CNonCanonical)
                [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                                  ~
                                                                  t_anA " Pretty.hs:150:5-13] (CNonCanonical)
                [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:150:11-13] (CNonCanonical)
                [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                                  ~
                                                                  t_anB " Pretty.hs:150:19-33] (CNonCanonical)
                [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                                  ~
                                                                  t_amY " Pretty.hs:150:30-33] (CNonCanonical)
                [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                                  ~
                                                                  t_anB " Pretty.hs:150:39-47] (CNonCanonical)
                [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:150:45-47] (CNonCanonical)
                [W] cobox_as9 :: ([a_as7] -> b_as8)
                                 ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                       ~
                                                                       t_amM
                                                                       -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
                [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                 ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                -> t_anv -> t_anw
                                                                                ~
                                                                                a_as7
                                                                                -> b_as8
                                                                                -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
                [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                                  ~
                                                                  b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
                [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                                    ~
                                                                    t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
                [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                                  ~
                                                                  t_amR " Pretty.hs:154:5-14] (CNonCanonical)
                [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:154:11-14] (CNonCanonical)
                [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                                    ~
                                                                    t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
                [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                             ~
                                                                             t_ask
                                                                             -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
                [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                                  ~
                                                                  t_asl " Pretty.hs:160:24-41] (CNonCanonical)
                [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                                  ~
                                                                  t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
                [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:160:30-32] (CNonCanonical)
                [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                                  ~
                                                                  t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
                [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                                  ~
                                                                  t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
                [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                                  ~
                                                                  t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
                [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                                  ~
                                                                  t_anu " Pretty.hs:156:6-22] (CNonCanonical)
                [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                                  ~
                                                                  t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
                [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:156:12-14] (CNonCanonical)
                [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                                  ~
                                                                  t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
                [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                                  ~
                                                                  t_anv " Pretty.hs:157:6-42] (CNonCanonical)
                [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                                    ~
                                                                    t_amM " Pretty.hs:157:22-41] (CNonCanonical)
                [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                             ~
                                                                             a_asy
                                                                             -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
                [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                                      ~
                                                                      [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
                [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                                  ~
                                                                  t_anv " Pretty.hs:158:6-14] (CNonCanonical)
                [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:158:12-14] (CNonCanonical)}
Tc7a
checkMain not Main Pretty
Tc8
simplifyTop {
  wanted =  WC {wc_flat = [W] cobox_amO :: [Doc]
                                           ~ t_amM [" a type equality [Doc]
                                                                      ~
                                                                      t_amM " Pretty.hs:162:19-30] (CNonCanonical)
                          [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                          ~
                                                                          t_amN " Pretty.hs:162:19-30] (CNonCanonical)
                          [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                                            ~
                                                                            t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
                          [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                          ~
                                                                          t_amR " Pretty.hs:152:19-30] (CNonCanonical)
                          [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                                            ~
                                                                            t_amU " Pretty.hs:148:17-28] (CNonCanonical)
                          [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                          ~
                                                                          t_amV " Pretty.hs:148:17-28] (CNonCanonical)
                          [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                                            ~
                                                                            t_amY " Pretty.hs:143:15-26] (CNonCanonical)
                          [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                          ~
                                                                          t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
                          [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                          ~
                                                                          t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
                          [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                          ~
                                                                          t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
                          [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                          ~
                                                                          t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
                          [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                          ~
                                                                          t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
                          [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                                             ~
                                                                             t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
                          [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                          ~
                                                                          t_ank " Pretty.hs:94:13-24] (CNonCanonical)
                          [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                                            ~
                                                                            t_anl " Pretty.hs:94:13-24] (CNonCanonical)
                          [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                          ~
                                                                          t_ano " Pretty.hs:83:13-29] (CNonCanonical)
                          [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                          ~
                                                                          t_anp " Pretty.hs:83:13-29] (CNonCanonical)
                          [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                          ~
                                                                          t_anq " Pretty.hs:83:13-29] (CNonCanonical)
                          [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                          ~
                                                                          t_anu " Pretty.hs:77:13-29] (CNonCanonical)
                          [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                          ~
                                                                          t_anv " Pretty.hs:77:13-29] (CNonCanonical)
                          [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                          ~
                                                                          t_anw " Pretty.hs:77:13-29] (CNonCanonical)
                          [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                          ~
                                                                          t_anA " Pretty.hs:55:13-29] (CNonCanonical)
                          [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                          ~
                                                                          t_anB " Pretty.hs:55:13-29] (CNonCanonical)
                          [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                          ~
                                                                          t_anC " Pretty.hs:55:13-29] (CNonCanonical)
                          [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                                             ~
                                                                             t_anG " Pretty.hs:32:13-25] (CNonCanonical)
                          [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                          ~
                                                                          t_anH " Pretty.hs:32:13-25] (CNonCanonical)
                          [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                          ~
                                                                          t_anK " Pretty.hs:25:13-15] (CNonCanonical)
                          [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                                              ~
                                                                              t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
                          [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                          ~
                                                                          Int " Pretty.hs:136:23] (CNonCanonical)
                          [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                           ~
                                                                           a_anO " Pretty.hs:136:25-27] (CNonCanonical)
                          [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                                            ~
                                                                            t_anl " Pretty.hs:131:5-24] (CNonCanonical)
                          [W] cobox_anU :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " Pretty.hs:131:13-23] (CNonCanonical)
                          [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                                               ~
                                                                               [String] " Pretty.hs:131:21-23] (CNonCanonical)
                          [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                                       ~
                                                                                       t_anY
                                                                                       -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
                          [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                                              ~
                                                                              t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
                          [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                                              ~
                                                                              [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
                          [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                                            ~
                                                                            t_an8 " Pretty.hs:127:35] (CNonCanonical)
                          [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                                              ~
                                                                              [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
                          [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                                              ~
                                                                              t_anq " Pretty.hs:125:5-28] (CNonCanonical)
                          [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                                       ~
                                                                                       a_ao9
                                                                                       -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
                          [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                                              ~
                                                                              [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
                          [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                                              ~
                                                                              t_anw " Pretty.hs:121:5-18] (CNonCanonical)
                          [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                                              ~
                                                                              [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
                          [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                                              ~
                                                                              [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
                          [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                                              ~
                                                                              t_anA " Pretty.hs:106:1-2] (CNonCanonical)
                          [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                                            ~
                                                                            t_anC " Pretty.hs:107:5-10] (CNonCanonical)
                          [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                                              ~
                                                                              t_anB " Pretty.hs:108:11-12] (CNonCanonical)
                          [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                                            ~
                                                                            t_anC " Pretty.hs:109:5-9] (CNonCanonical)
                          [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                          ~
                                                                          t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
                          [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                                              ~
                                                                              [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
                          [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                                              ~
                                                                              [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
                          [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                                              ~
                                                                              t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
                          [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                                                ~
                                                                                [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
                          [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                                              ~
                                                                              [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
                          [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                                                ~
                                                                                [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
                          [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                                              ~
                                                                              a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
                          [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                                              ~
                                                                              [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
                          [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                                              ~
                                                                              [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
                          [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                                              ~
                                                                              [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
                          [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                                              ~
                                                                              [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
                          [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                                              ~
                                                                              [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
                          [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                                            ~
                                                                            t_ano " Pretty.hs:115:14-24] (CNonCanonical)
                          [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                                              ~
                                                                              t_anp " Pretty.hs:115:27-37] (CNonCanonical)
                          [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                                              ~
                                                                              [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
                          [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                                            ~
                                                                            t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
                          [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                                            ~
                                                                            t_anA " Pretty.hs:141:17-20] (CNonCanonical)
                          [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                                            ~
                                                                            t_anB " Pretty.hs:141:26-40] (CNonCanonical)
                          [W] $dNum_arv :: Num
                                             a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
                          [W] cobox_arw :: (Integer -> a_aru)
                                           ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                                   ~
                                                                                   Integer
                                                                                   -> t_ano " Pretty.hs:141:35] (CNonCanonical)
                          [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                                            ~
                                                                            t_anp " Pretty.hs:141:37-40] (CNonCanonical)
                          [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                                              ~
                                                                              t_anH " Pretty.hs:103:5-14] (CNonCanonical)
                          [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                                            ~
                                                                            t_arz " Pretty.hs:103:7-12] (CNonCanonical)
                          [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                                              ~
                                                                              t_anK " Pretty.hs:99:8-9] (CNonCanonical)
                          [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                                              ~
                                                                              t_amY " Pretty.hs:144:12-13] (CNonCanonical)
                          [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                                            ~
                                                                            t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
                          [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                                              ~
                                                                              t_amY " Pretty.hs:145:12-14] (CNonCanonical)
                          [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                                            ~
                                                                            t_amZ " Pretty.hs:145:18] (CNonCanonical)
                          [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                              ~
                                                                              t_amY " Pretty.hs:146:13-16] (CNonCanonical)
                          [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                                            ~
                                                                            t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
                          [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                                            ~
                                                                            t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
                          [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                                            ~
                                                                            t_anA " Pretty.hs:146:21] (CNonCanonical)
                          [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                                            ~
                                                                            t_anB " Pretty.hs:146:27-35] (CNonCanonical)
                          [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:146:33-35] (CNonCanonical)
                          [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                                            ~
                                                                            t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
                          [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                              ~
                                                                              t_amY " Pretty.hs:146:52-53] (CNonCanonical)
                          [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                                            ~
                                                                            t_amV " Pretty.hs:150:5-47] (CNonCanonical)
                          [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                                            ~
                                                                            t_anA " Pretty.hs:150:5-33] (CNonCanonical)
                          [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                                            ~
                                                                            t_anA " Pretty.hs:150:5-13] (CNonCanonical)
                          [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:150:11-13] (CNonCanonical)
                          [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                                            ~
                                                                            t_anB " Pretty.hs:150:19-33] (CNonCanonical)
                          [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                                            ~
                                                                            t_amY " Pretty.hs:150:30-33] (CNonCanonical)
                          [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                                            ~
                                                                            t_anB " Pretty.hs:150:39-47] (CNonCanonical)
                          [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:150:45-47] (CNonCanonical)
                          [W] cobox_as9 :: ([a_as7] -> b_as8)
                                           ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                                 ~
                                                                                 t_amM
                                                                                 -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
                          [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                           ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                          -> t_anv
                                                                                          -> t_anw
                                                                                          ~
                                                                                          a_as7
                                                                                          -> b_as8
                                                                                          -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
                          [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                                            ~
                                                                            b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
                          [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                                              ~
                                                                              t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
                          [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                                            ~
                                                                            t_amR " Pretty.hs:154:5-14] (CNonCanonical)
                          [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:154:11-14] (CNonCanonical)
                          [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                                              ~
                                                                              t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
                          [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                                       ~
                                                                                       t_ask
                                                                                       -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
                          [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                                            ~
                                                                            t_asl " Pretty.hs:160:24-41] (CNonCanonical)
                          [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                                            ~
                                                                            t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
                          [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:160:30-32] (CNonCanonical)
                          [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                                            ~
                                                                            t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
                          [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                                            ~
                                                                            t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
                          [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                                            ~
                                                                            t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
                          [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                                            ~
                                                                            t_anu " Pretty.hs:156:6-22] (CNonCanonical)
                          [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                                            ~
                                                                            t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
                          [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:156:12-14] (CNonCanonical)
                          [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                                            ~
                                                                            t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
                          [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                                            ~
                                                                            t_anv " Pretty.hs:157:6-42] (CNonCanonical)
                          [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                                              ~
                                                                              t_amM " Pretty.hs:157:22-41] (CNonCanonical)
                          [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                                       ~
                                                                                       a_asy
                                                                                       -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
                          [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                                                ~
                                                                                [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
                          [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                                            ~
                                                                            t_anv " Pretty.hs:158:6-14] (CNonCanonical)
                          [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                                             ~
                                                                             t_anG " Pretty.hs:158:12-14] (CNonCanonical)}
solveWantedsTcMWithEvBinds
  wanted= WC {wc_flat = [W] cobox_amO :: [Doc]
                                         ~ t_amM [" a type equality [Doc]
                                                                    ~
                                                                    t_amM " Pretty.hs:162:19-30] (CNonCanonical)
                        [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                        ~
                                                                        t_amN " Pretty.hs:162:19-30] (CNonCanonical)
                        [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                                          ~
                                                                          t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
                        [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                        ~
                                                                        t_amR " Pretty.hs:152:19-30] (CNonCanonical)
                        [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                                          ~
                                                                          t_amU " Pretty.hs:148:17-28] (CNonCanonical)
                        [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                        ~
                                                                        t_amV " Pretty.hs:148:17-28] (CNonCanonical)
                        [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                                          ~
                                                                          t_amY " Pretty.hs:143:15-26] (CNonCanonical)
                        [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                        ~
                                                                        t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
                        [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                        ~
                                                                        t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
                        [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                        ~
                                                                        t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
                        [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                        ~
                                                                        t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
                        [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                        ~
                                                                        t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
                        [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                                           ~
                                                                           t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
                        [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                        ~
                                                                        t_ank " Pretty.hs:94:13-24] (CNonCanonical)
                        [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                                          ~
                                                                          t_anl " Pretty.hs:94:13-24] (CNonCanonical)
                        [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                        ~
                                                                        t_ano " Pretty.hs:83:13-29] (CNonCanonical)
                        [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                        ~
                                                                        t_anp " Pretty.hs:83:13-29] (CNonCanonical)
                        [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                        ~
                                                                        t_anq " Pretty.hs:83:13-29] (CNonCanonical)
                        [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                        ~
                                                                        t_anu " Pretty.hs:77:13-29] (CNonCanonical)
                        [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                        ~
                                                                        t_anv " Pretty.hs:77:13-29] (CNonCanonical)
                        [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                        ~
                                                                        t_anw " Pretty.hs:77:13-29] (CNonCanonical)
                        [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                        ~
                                                                        t_anA " Pretty.hs:55:13-29] (CNonCanonical)
                        [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                        ~
                                                                        t_anB " Pretty.hs:55:13-29] (CNonCanonical)
                        [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                        ~
                                                                        t_anC " Pretty.hs:55:13-29] (CNonCanonical)
                        [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                                           ~
                                                                           t_anG " Pretty.hs:32:13-25] (CNonCanonical)
                        [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                        ~
                                                                        t_anH " Pretty.hs:32:13-25] (CNonCanonical)
                        [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                        ~
                                                                        t_anK " Pretty.hs:25:13-15] (CNonCanonical)
                        [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                                            ~
                                                                            t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
                        [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                        ~
                                                                        Int " Pretty.hs:136:23] (CNonCanonical)
                        [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                         ~
                                                                         a_anO " Pretty.hs:136:25-27] (CNonCanonical)
                        [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                                          ~
                                                                          t_anl " Pretty.hs:131:5-24] (CNonCanonical)
                        [W] cobox_anU :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " Pretty.hs:131:13-23] (CNonCanonical)
                        [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                                             ~
                                                                             [String] " Pretty.hs:131:21-23] (CNonCanonical)
                        [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                                     ~
                                                                                     t_anY
                                                                                     -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
                        [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                                            ~
                                                                            t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
                        [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                                            ~
                                                                            [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
                        [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                                          ~
                                                                          t_an8 " Pretty.hs:127:35] (CNonCanonical)
                        [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                                            ~
                                                                            [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
                        [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                                            ~
                                                                            t_anq " Pretty.hs:125:5-28] (CNonCanonical)
                        [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                                     ~
                                                                                     a_ao9
                                                                                     -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
                        [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                                            ~
                                                                            [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
                        [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                                            ~
                                                                            t_anw " Pretty.hs:121:5-18] (CNonCanonical)
                        [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                                            ~
                                                                            [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
                        [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                                            ~
                                                                            [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
                        [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                                            ~
                                                                            t_anA " Pretty.hs:106:1-2] (CNonCanonical)
                        [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                                          ~
                                                                          t_anC " Pretty.hs:107:5-10] (CNonCanonical)
                        [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                                            ~
                                                                            t_anB " Pretty.hs:108:11-12] (CNonCanonical)
                        [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                                          ~
                                                                          t_anC " Pretty.hs:109:5-9] (CNonCanonical)
                        [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                        ~
                                                                        t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
                        [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                                            ~
                                                                            [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
                        [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                                            ~
                                                                            [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
                        [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                                            ~
                                                                            t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
                        [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                                              ~
                                                                              [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
                        [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                                            ~
                                                                            [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
                        [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                                              ~
                                                                              [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
                        [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                                            ~
                                                                            a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
                        [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                                            ~
                                                                            [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
                        [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                                            ~
                                                                            [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
                        [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                                            ~
                                                                            [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
                        [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                                            ~
                                                                            [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
                        [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                                            ~
                                                                            [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
                        [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                                          ~
                                                                          t_ano " Pretty.hs:115:14-24] (CNonCanonical)
                        [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                                            ~
                                                                            t_anp " Pretty.hs:115:27-37] (CNonCanonical)
                        [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                                            ~
                                                                            [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
                        [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                                          ~
                                                                          t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
                        [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                                          ~
                                                                          t_anA " Pretty.hs:141:17-20] (CNonCanonical)
                        [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                                          ~
                                                                          t_anB " Pretty.hs:141:26-40] (CNonCanonical)
                        [W] $dNum_arv :: Num
                                           a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
                        [W] cobox_arw :: (Integer -> a_aru)
                                         ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                                 ~
                                                                                 Integer
                                                                                 -> t_ano " Pretty.hs:141:35] (CNonCanonical)
                        [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                                          ~
                                                                          t_anp " Pretty.hs:141:37-40] (CNonCanonical)
                        [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                                            ~
                                                                            t_anH " Pretty.hs:103:5-14] (CNonCanonical)
                        [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                                          ~
                                                                          t_arz " Pretty.hs:103:7-12] (CNonCanonical)
                        [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                                            ~
                                                                            t_anK " Pretty.hs:99:8-9] (CNonCanonical)
                        [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                                            ~
                                                                            t_amY " Pretty.hs:144:12-13] (CNonCanonical)
                        [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                                          ~
                                                                          t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
                        [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                                            ~
                                                                            t_amY " Pretty.hs:145:12-14] (CNonCanonical)
                        [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                                          ~
                                                                          t_amZ " Pretty.hs:145:18] (CNonCanonical)
                        [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                            ~
                                                                            t_amY " Pretty.hs:146:13-16] (CNonCanonical)
                        [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                                          ~
                                                                          t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
                        [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                                          ~
                                                                          t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
                        [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                                          ~
                                                                          t_anA " Pretty.hs:146:21] (CNonCanonical)
                        [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                                          ~
                                                                          t_anB " Pretty.hs:146:27-35] (CNonCanonical)
                        [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:146:33-35] (CNonCanonical)
                        [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                                          ~
                                                                          t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
                        [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                            ~
                                                                            t_amY " Pretty.hs:146:52-53] (CNonCanonical)
                        [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                                          ~
                                                                          t_amV " Pretty.hs:150:5-47] (CNonCanonical)
                        [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                                          ~
                                                                          t_anA " Pretty.hs:150:5-33] (CNonCanonical)
                        [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                                          ~
                                                                          t_anA " Pretty.hs:150:5-13] (CNonCanonical)
                        [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:150:11-13] (CNonCanonical)
                        [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                                          ~
                                                                          t_anB " Pretty.hs:150:19-33] (CNonCanonical)
                        [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                                          ~
                                                                          t_amY " Pretty.hs:150:30-33] (CNonCanonical)
                        [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                                          ~
                                                                          t_anB " Pretty.hs:150:39-47] (CNonCanonical)
                        [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:150:45-47] (CNonCanonical)
                        [W] cobox_as9 :: ([a_as7] -> b_as8)
                                         ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                               ~
                                                                               t_amM
                                                                               -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
                        [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                         ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                        -> t_anv
                                                                                        -> t_anw
                                                                                        ~
                                                                                        a_as7
                                                                                        -> b_as8
                                                                                        -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
                        [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                                          ~
                                                                          b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
                        [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                                            ~
                                                                            t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
                        [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                                          ~
                                                                          t_amR " Pretty.hs:154:5-14] (CNonCanonical)
                        [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:154:11-14] (CNonCanonical)
                        [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                                            ~
                                                                            t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
                        [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                                     ~
                                                                                     t_ask
                                                                                     -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
                        [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                                          ~
                                                                          t_asl " Pretty.hs:160:24-41] (CNonCanonical)
                        [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                                          ~
                                                                          t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
                        [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:160:30-32] (CNonCanonical)
                        [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                                          ~
                                                                          t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
                        [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                                          ~
                                                                          t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
                        [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                                          ~
                                                                          t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
                        [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                                          ~
                                                                          t_anu " Pretty.hs:156:6-22] (CNonCanonical)
                        [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                                          ~
                                                                          t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
                        [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:156:12-14] (CNonCanonical)
                        [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                                          ~
                                                                          t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
                        [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                                          ~
                                                                          t_anv " Pretty.hs:157:6-42] (CNonCanonical)
                        [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                                            ~
                                                                            t_amM " Pretty.hs:157:22-41] (CNonCanonical)
                        [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                                     ~
                                                                                     a_asy
                                                                                     -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
                        [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                                              ~
                                                                              [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
                        [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                                          ~
                                                                          t_anv " Pretty.hs:158:6-14] (CNonCanonical)
                        [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                                           ~
                                                                           t_anG " Pretty.hs:158:12-14] (CNonCanonical)}
solveWanteds {
  WC {wc_flat = [W] cobox_amO :: [Doc]
                                 ~ t_amM [" a type equality [Doc]
                                                            ~
                                                            t_amM " Pretty.hs:162:19-30] (CNonCanonical)
                [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                ~
                                                                t_amN " Pretty.hs:162:19-30] (CNonCanonical)
                [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                                  ~
                                                                  t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
                [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                ~
                                                                t_amR " Pretty.hs:152:19-30] (CNonCanonical)
                [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                                  ~
                                                                  t_amU " Pretty.hs:148:17-28] (CNonCanonical)
                [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                ~
                                                                t_amV " Pretty.hs:148:17-28] (CNonCanonical)
                [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                                  ~
                                                                  t_amY " Pretty.hs:143:15-26] (CNonCanonical)
                [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                ~
                                                                t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
                [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                ~
                                                                t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                ~
                                                                t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                ~
                                                                t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
                [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                ~
                                                                t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
                [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                                   ~
                                                                   t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
                [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                ~
                                                                t_ank " Pretty.hs:94:13-24] (CNonCanonical)
                [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                                  ~
                                                                  t_anl " Pretty.hs:94:13-24] (CNonCanonical)
                [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                ~
                                                                t_ano " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                ~
                                                                t_anp " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                ~
                                                                t_anq " Pretty.hs:83:13-29] (CNonCanonical)
                [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                ~
                                                                t_anu " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                ~
                                                                t_anv " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                ~
                                                                t_anw " Pretty.hs:77:13-29] (CNonCanonical)
                [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                ~
                                                                t_anA " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                ~
                                                                t_anB " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                ~
                                                                t_anC " Pretty.hs:55:13-29] (CNonCanonical)
                [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                                   ~
                                                                   t_anG " Pretty.hs:32:13-25] (CNonCanonical)
                [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                ~
                                                                t_anH " Pretty.hs:32:13-25] (CNonCanonical)
                [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                ~
                                                                t_anK " Pretty.hs:25:13-15] (CNonCanonical)
                [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                                    ~
                                                                    t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
                [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                ~
                                                                Int " Pretty.hs:136:23] (CNonCanonical)
                [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                 ~
                                                                 a_anO " Pretty.hs:136:25-27] (CNonCanonical)
                [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                                  ~
                                                                  t_anl " Pretty.hs:131:5-24] (CNonCanonical)
                [W] cobox_anU :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " Pretty.hs:131:13-23] (CNonCanonical)
                [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                                     ~
                                                                     [String] " Pretty.hs:131:21-23] (CNonCanonical)
                [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                             ~
                                                                             t_anY
                                                                             -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
                [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                                    ~
                                                                    t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
                [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                                    ~
                                                                    [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
                [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                                  ~
                                                                  t_an8 " Pretty.hs:127:35] (CNonCanonical)
                [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                                    ~
                                                                    [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
                [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                                    ~
                                                                    t_anq " Pretty.hs:125:5-28] (CNonCanonical)
                [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                             ~
                                                                             a_ao9
                                                                             -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
                [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                                    ~
                                                                    [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
                [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                                    ~
                                                                    t_anw " Pretty.hs:121:5-18] (CNonCanonical)
                [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                                    ~
                                                                    [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
                [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                                    ~
                                                                    [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
                [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                                    ~
                                                                    t_anA " Pretty.hs:106:1-2] (CNonCanonical)
                [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                                  ~
                                                                  t_anC " Pretty.hs:107:5-10] (CNonCanonical)
                [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                                    ~
                                                                    t_anB " Pretty.hs:108:11-12] (CNonCanonical)
                [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                                  ~
                                                                  t_anC " Pretty.hs:109:5-9] (CNonCanonical)
                [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                ~
                                                                t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
                [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                                    ~
                                                                    [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
                [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                                    ~
                                                                    [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
                [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                                    ~
                                                                    t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
                [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                                      ~
                                                                      [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
                [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                                    ~
                                                                    [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
                [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                                      ~
                                                                      [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
                [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                                    ~
                                                                    a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
                [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                                    ~
                                                                    [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
                [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                                    ~
                                                                    [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
                [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                                    ~
                                                                    [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
                [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                                    ~
                                                                    [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
                [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                                    ~
                                                                    [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
                [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                                  ~
                                                                  t_ano " Pretty.hs:115:14-24] (CNonCanonical)
                [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                                    ~
                                                                    t_anp " Pretty.hs:115:27-37] (CNonCanonical)
                [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                                    ~
                                                                    [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
                [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                                  ~
                                                                  t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
                [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                                  ~
                                                                  t_anA " Pretty.hs:141:17-20] (CNonCanonical)
                [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                                  ~
                                                                  t_anB " Pretty.hs:141:26-40] (CNonCanonical)
                [W] $dNum_arv :: Num
                                   a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
                [W] cobox_arw :: (Integer -> a_aru)
                                 ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                         ~
                                                                         Integer
                                                                         -> t_ano " Pretty.hs:141:35] (CNonCanonical)
                [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                                  ~
                                                                  t_anp " Pretty.hs:141:37-40] (CNonCanonical)
                [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                                    ~
                                                                    t_anH " Pretty.hs:103:5-14] (CNonCanonical)
                [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                                  ~
                                                                  t_arz " Pretty.hs:103:7-12] (CNonCanonical)
                [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                                    ~
                                                                    t_anK " Pretty.hs:99:8-9] (CNonCanonical)
                [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                                    ~
                                                                    t_amY " Pretty.hs:144:12-13] (CNonCanonical)
                [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                                  ~
                                                                  t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
                [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                                    ~
                                                                    t_amY " Pretty.hs:145:12-14] (CNonCanonical)
                [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                                  ~
                                                                  t_amZ " Pretty.hs:145:18] (CNonCanonical)
                [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                    ~
                                                                    t_amY " Pretty.hs:146:13-16] (CNonCanonical)
                [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                                  ~
                                                                  t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
                [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                                  ~
                                                                  t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
                [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                                  ~
                                                                  t_anA " Pretty.hs:146:21] (CNonCanonical)
                [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                                  ~
                                                                  t_anB " Pretty.hs:146:27-35] (CNonCanonical)
                [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:146:33-35] (CNonCanonical)
                [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                                  ~
                                                                  t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
                [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                                    ~
                                                                    t_amY " Pretty.hs:146:52-53] (CNonCanonical)
                [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                                  ~
                                                                  t_amV " Pretty.hs:150:5-47] (CNonCanonical)
                [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                                  ~
                                                                  t_anA " Pretty.hs:150:5-33] (CNonCanonical)
                [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                                  ~
                                                                  t_anA " Pretty.hs:150:5-13] (CNonCanonical)
                [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:150:11-13] (CNonCanonical)
                [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                                  ~
                                                                  t_anB " Pretty.hs:150:19-33] (CNonCanonical)
                [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                                  ~
                                                                  t_amY " Pretty.hs:150:30-33] (CNonCanonical)
                [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                                  ~
                                                                  t_anB " Pretty.hs:150:39-47] (CNonCanonical)
                [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:150:45-47] (CNonCanonical)
                [W] cobox_as9 :: ([a_as7] -> b_as8)
                                 ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                       ~
                                                                       t_amM
                                                                       -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
                [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                 ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                -> t_anv -> t_anw
                                                                                ~
                                                                                a_as7
                                                                                -> b_as8
                                                                                -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
                [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                                  ~
                                                                  b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
                [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                                    ~
                                                                    t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
                [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                                  ~
                                                                  t_amR " Pretty.hs:154:5-14] (CNonCanonical)
                [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:154:11-14] (CNonCanonical)
                [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                                    ~
                                                                    t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
                [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                             ~
                                                                             t_ask
                                                                             -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
                [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                                  ~
                                                                  t_asl " Pretty.hs:160:24-41] (CNonCanonical)
                [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                                  ~
                                                                  t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
                [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:160:30-32] (CNonCanonical)
                [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                                  ~
                                                                  t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
                [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                                  ~
                                                                  t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
                [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                                  ~
                                                                  t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
                [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                                  ~
                                                                  t_anu " Pretty.hs:156:6-22] (CNonCanonical)
                [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                                  ~
                                                                  t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
                [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:156:12-14] (CNonCanonical)
                [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                                  ~
                                                                  t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
                [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                                  ~
                                                                  t_anv " Pretty.hs:157:6-42] (CNonCanonical)
                [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                                    ~
                                                                    t_amM " Pretty.hs:157:22-41] (CNonCanonical)
                [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                             ~
                                                                             a_asy
                                                                             -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
                [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                                      ~
                                                                      [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
                [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                                  ~
                                                                  t_anv " Pretty.hs:158:6-14] (CNonCanonical)
                [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                                   ~
                                                                   t_anG " Pretty.hs:158:12-14] (CNonCanonical)}
solveFlats {
Start solver pipeline {
  work item =  [W] cobox_amO :: [Doc]
                                ~ t_amM [" a type equality [Doc]
                                                           ~
                                                           t_amM " Pretty.hs:162:19-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amO :: [Doc]
                                 ~ t_amM [" a type equality [Doc]
                                                            ~
                                                            t_amM " Pretty.hs:162:19-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amO :: [Doc] ~ t_amM [" a type equality [Doc]
                                                    ~
                                                    t_amM " Pretty.hs:162:19-30] (CNonCanonical)
canEvNC:eq
  [Doc]
  t_amM
can_eq_nc
  [W] cobox_amO :: [Doc] ~ t_amM
  [Doc]
  [Doc]
  t_amM
  t_amM
canEqTyVar
  t_amM
  [Doc]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asG :: t_amM ~ [Doc]
setEvBind
  ev = cobox_amO
  tm  = CO Sym cobox_asG
rewriteEqEvidence
  [W] cobox_amO :: [Doc] ~ t_amM
  t_amM
  [Doc]
  Sym cobox_asG
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asG :: t_amM
                                 ~ [Doc] [" a type equality [Doc]
                                                            ~
                                                            t_amM " Pretty.hs:162:19-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amM := [Doc]
  Coercion: t_amM ~ [Doc]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amM := [Doc]
setEvBind
  ev = cobox_asG
  tm  = CO <[Doc]>_N
kickOutRewritable
  tv =  t_amM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
1[<C:0,F:0>] [W] cobox_asG :: t_amM ~ [Doc]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                               ~
                                                               t_amN " Pretty.hs:162:19-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                                ~
                                                                t_amN " Pretty.hs:162:19-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amP :: Doc ~ t_amN [" a type equality Doc
                                                  ~
                                                  t_amN " Pretty.hs:162:19-30] (CNonCanonical)
canEvNC:eq
  Doc
  t_amN
can_eq_nc
  [W] cobox_amP :: Doc ~ t_amN
  Doc
  Doc
  t_amN
  t_amN
can_eq_nc
  [W] cobox_amP :: Doc ~ t_amN
  [String]
  Doc
  t_amN
  t_amN
canEqTyVar
  t_amN
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asH :: t_amN ~ Doc
setEvBind
  ev = cobox_amP
  tm  = CO Sym cobox_asH
rewriteEqEvidence
  [W] cobox_amP :: Doc ~ t_amN
  t_amN
  Doc
  Sym cobox_asH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asH :: t_amN ~ Doc [" a type equality Doc
                                                                ~
                                                                t_amN " Pretty.hs:162:19-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amN := Doc
  Coercion: t_amN ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amN := Doc
setEvBind
  ev = cobox_asH
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_amN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
2[<C:0,F:0>] [W] cobox_asH :: t_amN ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amS :: [Doc]
                                ~ t_amQ [" a type equality [Doc]
                                                           ~
                                                           t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amS :: [Doc]
                                 ~ t_amQ [" a type equality [Doc]
                                                            ~
                                                            t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amS :: [Doc] ~ t_amQ [" a type equality [Doc]
                                                    ~
                                                    t_amQ " Pretty.hs:152:19-30] (CNonCanonical)
canEvNC:eq
  [Doc]
  t_amQ
can_eq_nc
  [W] cobox_amS :: [Doc] ~ t_amQ
  [Doc]
  [Doc]
  t_amQ
  t_amQ
canEqTyVar
  t_amQ
  [Doc]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asI :: t_amQ ~ [Doc]
setEvBind
  ev = cobox_amS
  tm  = CO Sym cobox_asI
rewriteEqEvidence
  [W] cobox_amS :: [Doc] ~ t_amQ
  t_amQ
  [Doc]
  Sym cobox_asI
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asI :: t_amQ
                                 ~ [Doc] [" a type equality [Doc]
                                                            ~
                                                            t_amQ " Pretty.hs:152:19-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amQ := [Doc]
  Coercion: t_amQ ~ [Doc]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amQ := [Doc]
setEvBind
  ev = cobox_asI
  tm  = CO <[Doc]>_N
kickOutRewritable
  tv =  t_amQ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
3[<C:0,F:0>] [W] cobox_asI :: t_amQ ~ [Doc]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                               ~
                                                               t_amR " Pretty.hs:152:19-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                                ~
                                                                t_amR " Pretty.hs:152:19-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amT :: Doc ~ t_amR [" a type equality Doc
                                                  ~
                                                  t_amR " Pretty.hs:152:19-30] (CNonCanonical)
canEvNC:eq
  Doc
  t_amR
can_eq_nc
  [W] cobox_amT :: Doc ~ t_amR
  Doc
  Doc
  t_amR
  t_amR
can_eq_nc
  [W] cobox_amT :: Doc ~ t_amR
  [String]
  Doc
  t_amR
  t_amR
canEqTyVar
  t_amR
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asJ :: t_amR ~ Doc
setEvBind
  ev = cobox_amT
  tm  = CO Sym cobox_asJ
rewriteEqEvidence
  [W] cobox_amT :: Doc ~ t_amR
  t_amR
  Doc
  Sym cobox_asJ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asJ :: t_amR ~ Doc [" a type equality Doc
                                                                ~
                                                                t_amR " Pretty.hs:152:19-30] (CTyEqCan)
Sneaky unification:
  Unifies: t_amR := Doc
  Coercion: t_amR ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amR := Doc
setEvBind
  ev = cobox_asJ
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_amR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
4[<C:0,F:0>] [W] cobox_asJ :: t_amR ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amW :: [Doc]
                                ~ t_amU [" a type equality [Doc]
                                                           ~
                                                           t_amU " Pretty.hs:148:17-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amW :: [Doc]
                                 ~ t_amU [" a type equality [Doc]
                                                            ~
                                                            t_amU " Pretty.hs:148:17-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amW :: [Doc] ~ t_amU [" a type equality [Doc]
                                                    ~
                                                    t_amU " Pretty.hs:148:17-28] (CNonCanonical)
canEvNC:eq
  [Doc]
  t_amU
can_eq_nc
  [W] cobox_amW :: [Doc] ~ t_amU
  [Doc]
  [Doc]
  t_amU
  t_amU
canEqTyVar
  t_amU
  [Doc]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asK :: t_amU ~ [Doc]
setEvBind
  ev = cobox_amW
  tm  = CO Sym cobox_asK
rewriteEqEvidence
  [W] cobox_amW :: [Doc] ~ t_amU
  t_amU
  [Doc]
  Sym cobox_asK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asK :: t_amU
                                 ~ [Doc] [" a type equality [Doc]
                                                            ~
                                                            t_amU " Pretty.hs:148:17-28] (CTyEqCan)
Sneaky unification:
  Unifies: t_amU := [Doc]
  Coercion: t_amU ~ [Doc]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amU := [Doc]
setEvBind
  ev = cobox_asK
  tm  = CO <[Doc]>_N
kickOutRewritable
  tv =  t_amU
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
5[<C:0,F:0>] [W] cobox_asK :: t_amU ~ [Doc]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                               ~
                                                               t_amV " Pretty.hs:148:17-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                                ~
                                                                t_amV " Pretty.hs:148:17-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_amX :: Doc ~ t_amV [" a type equality Doc
                                                  ~
                                                  t_amV " Pretty.hs:148:17-28] (CNonCanonical)
canEvNC:eq
  Doc
  t_amV
can_eq_nc
  [W] cobox_amX :: Doc ~ t_amV
  Doc
  Doc
  t_amV
  t_amV
can_eq_nc
  [W] cobox_amX :: Doc ~ t_amV
  [String]
  Doc
  t_amV
  t_amV
canEqTyVar
  t_amV
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asL :: t_amV ~ Doc
setEvBind
  ev = cobox_amX
  tm  = CO Sym cobox_asL
rewriteEqEvidence
  [W] cobox_amX :: Doc ~ t_amV
  t_amV
  Doc
  Sym cobox_asL
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asL :: t_amV ~ Doc [" a type equality Doc
                                                                ~
                                                                t_amV " Pretty.hs:148:17-28] (CTyEqCan)
Sneaky unification:
  Unifies: t_amV := Doc
  Coercion: t_amV ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amV := Doc
setEvBind
  ev = cobox_asL
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_amV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
6[<C:0,F:0>] [W] cobox_asL :: t_amV ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an0 :: [Doc]
                                ~ t_amY [" a type equality [Doc]
                                                           ~
                                                           t_amY " Pretty.hs:143:15-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an0 :: [Doc]
                                 ~ t_amY [" a type equality [Doc]
                                                            ~
                                                            t_amY " Pretty.hs:143:15-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an0 :: [Doc] ~ t_amY [" a type equality [Doc]
                                                    ~
                                                    t_amY " Pretty.hs:143:15-26] (CNonCanonical)
canEvNC:eq
  [Doc]
  t_amY
can_eq_nc
  [W] cobox_an0 :: [Doc] ~ t_amY
  [Doc]
  [Doc]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [Doc]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asM :: t_amY ~ [Doc]
setEvBind
  ev = cobox_an0
  tm  = CO Sym cobox_asM
rewriteEqEvidence
  [W] cobox_an0 :: [Doc] ~ t_amY
  t_amY
  [Doc]
  Sym cobox_asM
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asM :: t_amY
                                 ~ [Doc] [" a type equality [Doc]
                                                            ~
                                                            t_amY " Pretty.hs:143:15-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_amY := [Doc]
  Coercion: t_amY ~ [Doc]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amY := [Doc]
setEvBind
  ev = cobox_asM
  tm  = CO <[Doc]>_N
kickOutRewritable
  tv =  t_amY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
7[<C:0,F:0>] [W] cobox_asM :: t_amY ~ [Doc]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                               ~
                                                               t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                                ~
                                                                t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an1 :: Doc ~ t_amZ [" a type equality Doc
                                                  ~
                                                  t_amZ " Pretty.hs:143:15-26] (CNonCanonical)
canEvNC:eq
  Doc
  t_amZ
can_eq_nc
  [W] cobox_an1 :: Doc ~ t_amZ
  Doc
  Doc
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_an1 :: Doc ~ t_amZ
  [String]
  Doc
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asN :: t_amZ ~ Doc
setEvBind
  ev = cobox_an1
  tm  = CO Sym cobox_asN
rewriteEqEvidence
  [W] cobox_an1 :: Doc ~ t_amZ
  t_amZ
  Doc
  Sym cobox_asN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asN :: t_amZ ~ Doc [" a type equality Doc
                                                                ~
                                                                t_amZ " Pretty.hs:143:15-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_amZ := Doc
  Coercion: t_amZ ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_amZ := Doc
setEvBind
  ev = cobox_asN
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_amZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
8[<C:0,F:0>] [W] cobox_asN :: t_amZ ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                               ~
                                                               t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                                ~
                                                                t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an5 :: Doc ~ t_an2 [" a type equality Doc
                                                  ~
                                                  t_an2 " Pretty.hs:140:10-26] (CNonCanonical)
canEvNC:eq
  Doc
  t_an2
can_eq_nc
  [W] cobox_an5 :: Doc ~ t_an2
  Doc
  Doc
  t_an2
  t_an2
can_eq_nc
  [W] cobox_an5 :: Doc ~ t_an2
  [String]
  Doc
  t_an2
  t_an2
canEqTyVar
  t_an2
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asO :: t_an2 ~ Doc
setEvBind
  ev = cobox_an5
  tm  = CO Sym cobox_asO
rewriteEqEvidence
  [W] cobox_an5 :: Doc ~ t_an2
  t_an2
  Doc
  Sym cobox_asO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asO :: t_an2 ~ Doc [" a type equality Doc
                                                                ~
                                                                t_an2 " Pretty.hs:140:10-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_an2 := Doc
  Coercion: t_an2 ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an2 := Doc
setEvBind
  ev = cobox_asO
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_an2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
9[<C:0,F:0>] [W] cobox_asO :: t_an2 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                               ~
                                                               t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                                ~
                                                                t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an6 :: Doc ~ t_an3 [" a type equality Doc
                                                  ~
                                                  t_an3 " Pretty.hs:140:10-26] (CNonCanonical)
canEvNC:eq
  Doc
  t_an3
can_eq_nc
  [W] cobox_an6 :: Doc ~ t_an3
  Doc
  Doc
  t_an3
  t_an3
can_eq_nc
  [W] cobox_an6 :: Doc ~ t_an3
  [String]
  Doc
  t_an3
  t_an3
canEqTyVar
  t_an3
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asP :: t_an3 ~ Doc
setEvBind
  ev = cobox_an6
  tm  = CO Sym cobox_asP
rewriteEqEvidence
  [W] cobox_an6 :: Doc ~ t_an3
  t_an3
  Doc
  Sym cobox_asP
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asP :: t_an3 ~ Doc [" a type equality Doc
                                                                ~
                                                                t_an3 " Pretty.hs:140:10-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_an3 := Doc
  Coercion: t_an3 ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an3 := Doc
setEvBind
  ev = cobox_asP
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_an3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
10[<C:0,F:0>] [W] cobox_asP :: t_an3 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                               ~
                                                               t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                                ~
                                                                t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_an7 :: Doc ~ t_an4 [" a type equality Doc
                                                  ~
                                                  t_an4 " Pretty.hs:140:10-26] (CNonCanonical)
canEvNC:eq
  Doc
  t_an4
can_eq_nc
  [W] cobox_an7 :: Doc ~ t_an4
  Doc
  Doc
  t_an4
  t_an4
can_eq_nc
  [W] cobox_an7 :: Doc ~ t_an4
  [String]
  Doc
  t_an4
  t_an4
canEqTyVar
  t_an4
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asQ :: t_an4 ~ Doc
setEvBind
  ev = cobox_an7
  tm  = CO Sym cobox_asQ
rewriteEqEvidence
  [W] cobox_an7 :: Doc ~ t_an4
  t_an4
  Doc
  Sym cobox_asQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asQ :: t_an4 ~ Doc [" a type equality Doc
                                                                ~
                                                                t_an4 " Pretty.hs:140:10-26] (CTyEqCan)
Sneaky unification:
  Unifies: t_an4 := Doc
  Coercion: t_an4 ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an4 := Doc
setEvBind
  ev = cobox_asQ
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_an4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
11[<C:0,F:0>] [W] cobox_asQ :: t_an4 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                               ~
                                                               t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                                ~
                                                                t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ana :: Int ~ t_an8 [" a type equality Int
                                                  ~
                                                  t_an8 " Pretty.hs:135:12-24] (CNonCanonical)
canEvNC:eq
  Int
  t_an8
can_eq_nc
  [W] cobox_ana :: Int ~ t_an8
  Int
  Int
  t_an8
  t_an8
canEqTyVar
  t_an8
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asR :: t_an8 ~ Int
setEvBind
  ev = cobox_ana
  tm  = CO Sym cobox_asR
rewriteEqEvidence
  [W] cobox_ana :: Int ~ t_an8
  t_an8
  Int
  Sym cobox_asR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asR :: t_an8 ~ Int [" a type equality Int
                                                                ~
                                                                t_an8 " Pretty.hs:135:12-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_an8 := Int
  Coercion: t_an8 ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an8 := Int
setEvBind
  ev = cobox_asR
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_an8
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
12[<C:0,F:0>] [W] cobox_asR :: t_an8 ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anb :: String
                                ~ t_an9 [" a type equality String
                                                           ~
                                                           t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anb :: String
                                 ~ t_an9 [" a type equality String
                                                            ~
                                                            t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anb :: String ~ t_an9 [" a type equality String
                                                     ~
                                                     t_an9 " Pretty.hs:135:12-24] (CNonCanonical)
canEvNC:eq
  String
  t_an9
can_eq_nc
  [W] cobox_anb :: String ~ t_an9
  String
  String
  t_an9
  t_an9
can_eq_nc
  [W] cobox_anb :: String ~ t_an9
  [Char]
  String
  t_an9
  t_an9
canEqTyVar
  t_an9
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asS :: t_an9 ~ String
setEvBind
  ev = cobox_anb
  tm  = CO Sym cobox_asS
rewriteEqEvidence
  [W] cobox_anb :: String ~ t_an9
  t_an9
  String
  Sym cobox_asS
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asS :: t_an9
                                 ~ String [" a type equality String
                                                             ~
                                                             t_an9 " Pretty.hs:135:12-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_an9 := String
  Coercion: t_an9 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_an9 := String
setEvBind
  ev = cobox_asS
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_an9
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
13[<C:0,F:0>] [W] cobox_asS :: t_an9 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                               ~
                                                               t_ank " Pretty.hs:94:13-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                                ~
                                                                t_ank " Pretty.hs:94:13-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anm :: Doc ~ t_ank [" a type equality Doc
                                                  ~
                                                  t_ank " Pretty.hs:94:13-24] (CNonCanonical)
canEvNC:eq
  Doc
  t_ank
can_eq_nc
  [W] cobox_anm :: Doc ~ t_ank
  Doc
  Doc
  t_ank
  t_ank
can_eq_nc
  [W] cobox_anm :: Doc ~ t_ank
  [String]
  Doc
  t_ank
  t_ank
canEqTyVar
  t_ank
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asT :: t_ank ~ Doc
setEvBind
  ev = cobox_anm
  tm  = CO Sym cobox_asT
rewriteEqEvidence
  [W] cobox_anm :: Doc ~ t_ank
  t_ank
  Doc
  Sym cobox_asT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asT :: t_ank ~ Doc [" a type equality Doc
                                                                ~
                                                                t_ank " Pretty.hs:94:13-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_ank := Doc
  Coercion: t_ank ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ank := Doc
setEvBind
  ev = cobox_asT
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_ank
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
14[<C:0,F:0>] [W] cobox_asT :: t_ank ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ann :: IO () ~ t_anl [" a type equality IO
                                                                   ()
                                                                 ~
                                                                 t_anl " Pretty.hs:94:13-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ann :: IO () ~ t_anl [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_anl " Pretty.hs:94:13-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ann :: IO () ~ t_anl [" a type equality IO ()
                                                    ~
                                                    t_anl " Pretty.hs:94:13-24] (CNonCanonical)
canEvNC:eq
  IO ()
  t_anl
can_eq_nc
  [W] cobox_ann :: IO () ~ t_anl
  IO ()
  IO ()
  t_anl
  t_anl
canEqTyVar
  t_anl
  IO ()
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asU :: t_anl ~ IO ()
setEvBind
  ev = cobox_ann
  tm  = CO Sym cobox_asU
rewriteEqEvidence
  [W] cobox_ann :: IO () ~ t_anl
  t_anl
  IO ()
  Sym cobox_asU
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asU :: t_anl ~ IO () [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_anl " Pretty.hs:94:13-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_anl := IO ()
  Coercion: t_anl ~ IO ()
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anl := IO ()
setEvBind
  ev = cobox_asU
  tm  = CO <IO ()>_N
kickOutRewritable
  tv =  t_anl
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
15[<C:0,F:0>] [W] cobox_asU :: t_anl ~ IO (): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                               ~
                                                               t_ano " Pretty.hs:83:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                                ~
                                                                t_ano " Pretty.hs:83:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anr :: Int ~ t_ano [" a type equality Int
                                                  ~
                                                  t_ano " Pretty.hs:83:13-29] (CNonCanonical)
canEvNC:eq
  Int
  t_ano
can_eq_nc
  [W] cobox_anr :: Int ~ t_ano
  Int
  Int
  t_ano
  t_ano
canEqTyVar
  t_ano
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asV :: t_ano ~ Int
setEvBind
  ev = cobox_anr
  tm  = CO Sym cobox_asV
rewriteEqEvidence
  [W] cobox_anr :: Int ~ t_ano
  t_ano
  Int
  Sym cobox_asV
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asV :: t_ano ~ Int [" a type equality Int
                                                                ~
                                                                t_ano " Pretty.hs:83:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_ano := Int
  Coercion: t_ano ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ano := Int
setEvBind
  ev = cobox_asV
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_ano
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
16[<C:0,F:0>] [W] cobox_asV :: t_ano ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                               ~
                                                               t_anp " Pretty.hs:83:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                                ~
                                                                t_anp " Pretty.hs:83:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ans :: Doc ~ t_anp [" a type equality Doc
                                                  ~
                                                  t_anp " Pretty.hs:83:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anp
can_eq_nc
  [W] cobox_ans :: Doc ~ t_anp
  Doc
  Doc
  t_anp
  t_anp
can_eq_nc
  [W] cobox_ans :: Doc ~ t_anp
  [String]
  Doc
  t_anp
  t_anp
canEqTyVar
  t_anp
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asW :: t_anp ~ Doc
setEvBind
  ev = cobox_ans
  tm  = CO Sym cobox_asW
rewriteEqEvidence
  [W] cobox_ans :: Doc ~ t_anp
  t_anp
  Doc
  Sym cobox_asW
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asW :: t_anp ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anp " Pretty.hs:83:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anp := Doc
  Coercion: t_anp ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anp := Doc
setEvBind
  ev = cobox_asW
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anp
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
17[<C:0,F:0>] [W] cobox_asW :: t_anp ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                               ~
                                                               t_anq " Pretty.hs:83:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                                ~
                                                                t_anq " Pretty.hs:83:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ant :: Doc ~ t_anq [" a type equality Doc
                                                  ~
                                                  t_anq " Pretty.hs:83:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anq
can_eq_nc
  [W] cobox_ant :: Doc ~ t_anq
  Doc
  Doc
  t_anq
  t_anq
can_eq_nc
  [W] cobox_ant :: Doc ~ t_anq
  [String]
  Doc
  t_anq
  t_anq
canEqTyVar
  t_anq
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asX :: t_anq ~ Doc
setEvBind
  ev = cobox_ant
  tm  = CO Sym cobox_asX
rewriteEqEvidence
  [W] cobox_ant :: Doc ~ t_anq
  t_anq
  Doc
  Sym cobox_asX
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asX :: t_anq ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anq " Pretty.hs:83:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anq := Doc
  Coercion: t_anq ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anq := Doc
setEvBind
  ev = cobox_asX
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
18[<C:0,F:0>] [W] cobox_asX :: t_anq ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                               ~
                                                               t_anu " Pretty.hs:77:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                                ~
                                                                t_anu " Pretty.hs:77:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anx :: Doc ~ t_anu [" a type equality Doc
                                                  ~
                                                  t_anu " Pretty.hs:77:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anu
can_eq_nc
  [W] cobox_anx :: Doc ~ t_anu
  Doc
  Doc
  t_anu
  t_anu
can_eq_nc
  [W] cobox_anx :: Doc ~ t_anu
  [String]
  Doc
  t_anu
  t_anu
canEqTyVar
  t_anu
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asY :: t_anu ~ Doc
setEvBind
  ev = cobox_anx
  tm  = CO Sym cobox_asY
rewriteEqEvidence
  [W] cobox_anx :: Doc ~ t_anu
  t_anu
  Doc
  Sym cobox_asY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asY :: t_anu ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anu " Pretty.hs:77:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anu := Doc
  Coercion: t_anu ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anu := Doc
setEvBind
  ev = cobox_asY
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anu
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
19[<C:0,F:0>] [W] cobox_asY :: t_anu ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                               ~
                                                               t_anv " Pretty.hs:77:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                                ~
                                                                t_anv " Pretty.hs:77:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_any :: Doc ~ t_anv [" a type equality Doc
                                                  ~
                                                  t_anv " Pretty.hs:77:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anv
can_eq_nc
  [W] cobox_any :: Doc ~ t_anv
  Doc
  Doc
  t_anv
  t_anv
can_eq_nc
  [W] cobox_any :: Doc ~ t_anv
  [String]
  Doc
  t_anv
  t_anv
canEqTyVar
  t_anv
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_asZ :: t_anv ~ Doc
setEvBind
  ev = cobox_any
  tm  = CO Sym cobox_asZ
rewriteEqEvidence
  [W] cobox_any :: Doc ~ t_anv
  t_anv
  Doc
  Sym cobox_asZ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asZ :: t_anv ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anv " Pretty.hs:77:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anv := Doc
  Coercion: t_anv ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anv := Doc
setEvBind
  ev = cobox_asZ
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
20[<C:0,F:0>] [W] cobox_asZ :: t_anv ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                               ~
                                                               t_anw " Pretty.hs:77:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                                ~
                                                                t_anw " Pretty.hs:77:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anz :: Doc ~ t_anw [" a type equality Doc
                                                  ~
                                                  t_anw " Pretty.hs:77:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anw
can_eq_nc
  [W] cobox_anz :: Doc ~ t_anw
  Doc
  Doc
  t_anw
  t_anw
can_eq_nc
  [W] cobox_anz :: Doc ~ t_anw
  [String]
  Doc
  t_anw
  t_anw
canEqTyVar
  t_anw
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at0 :: t_anw ~ Doc
setEvBind
  ev = cobox_anz
  tm  = CO Sym cobox_at0
rewriteEqEvidence
  [W] cobox_anz :: Doc ~ t_anw
  t_anw
  Doc
  Sym cobox_at0
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at0 :: t_anw ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anw " Pretty.hs:77:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anw := Doc
  Coercion: t_anw ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anw := Doc
setEvBind
  ev = cobox_at0
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
21[<C:0,F:0>] [W] cobox_at0 :: t_anw ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                               ~
                                                               t_anA " Pretty.hs:55:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                                ~
                                                                t_anA " Pretty.hs:55:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anD :: Doc ~ t_anA [" a type equality Doc
                                                  ~
                                                  t_anA " Pretty.hs:55:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anA
can_eq_nc
  [W] cobox_anD :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_anD :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at1 :: t_anA ~ Doc
setEvBind
  ev = cobox_anD
  tm  = CO Sym cobox_at1
rewriteEqEvidence
  [W] cobox_anD :: Doc ~ t_anA
  t_anA
  Doc
  Sym cobox_at1
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at1 :: t_anA ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anA " Pretty.hs:55:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anA := Doc
  Coercion: t_anA ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anA := Doc
setEvBind
  ev = cobox_at1
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
22[<C:0,F:0>] [W] cobox_at1 :: t_anA ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                               ~
                                                               t_anB " Pretty.hs:55:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                                ~
                                                                t_anB " Pretty.hs:55:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anE :: Doc ~ t_anB [" a type equality Doc
                                                  ~
                                                  t_anB " Pretty.hs:55:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anB
can_eq_nc
  [W] cobox_anE :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_anE :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at2 :: t_anB ~ Doc
setEvBind
  ev = cobox_anE
  tm  = CO Sym cobox_at2
rewriteEqEvidence
  [W] cobox_anE :: Doc ~ t_anB
  t_anB
  Doc
  Sym cobox_at2
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at2 :: t_anB ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anB " Pretty.hs:55:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anB := Doc
  Coercion: t_anB ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anB := Doc
setEvBind
  ev = cobox_at2
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
23[<C:0,F:0>] [W] cobox_at2 :: t_anB ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                               ~
                                                               t_anC " Pretty.hs:55:13-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                                ~
                                                                t_anC " Pretty.hs:55:13-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anF :: Doc ~ t_anC [" a type equality Doc
                                                  ~
                                                  t_anC " Pretty.hs:55:13-29] (CNonCanonical)
canEvNC:eq
  Doc
  t_anC
can_eq_nc
  [W] cobox_anF :: Doc ~ t_anC
  Doc
  Doc
  t_anC
  t_anC
can_eq_nc
  [W] cobox_anF :: Doc ~ t_anC
  [String]
  Doc
  t_anC
  t_anC
canEqTyVar
  t_anC
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at3 :: t_anC ~ Doc
setEvBind
  ev = cobox_anF
  tm  = CO Sym cobox_at3
rewriteEqEvidence
  [W] cobox_anF :: Doc ~ t_anC
  t_anC
  Doc
  Sym cobox_at3
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at3 :: t_anC ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anC " Pretty.hs:55:13-29] (CTyEqCan)
Sneaky unification:
  Unifies: t_anC := Doc
  Coercion: t_anC ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anC := Doc
setEvBind
  ev = cobox_at3
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anC
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
24[<C:0,F:0>] [W] cobox_at3 :: t_anC ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anI :: String
                                ~ t_anG [" a type equality String
                                                           ~
                                                           t_anG " Pretty.hs:32:13-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anI :: String
                                 ~ t_anG [" a type equality String
                                                            ~
                                                            t_anG " Pretty.hs:32:13-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anI :: String ~ t_anG [" a type equality String
                                                     ~
                                                     t_anG " Pretty.hs:32:13-25] (CNonCanonical)
canEvNC:eq
  String
  t_anG
can_eq_nc
  [W] cobox_anI :: String ~ t_anG
  String
  String
  t_anG
  t_anG
can_eq_nc
  [W] cobox_anI :: String ~ t_anG
  [Char]
  String
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at4 :: t_anG ~ String
setEvBind
  ev = cobox_anI
  tm  = CO Sym cobox_at4
rewriteEqEvidence
  [W] cobox_anI :: String ~ t_anG
  t_anG
  String
  Sym cobox_at4
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at4 :: t_anG
                                 ~ String [" a type equality String
                                                             ~
                                                             t_anG " Pretty.hs:32:13-25] (CTyEqCan)
Sneaky unification:
  Unifies: t_anG := String
  Coercion: t_anG ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anG := String
setEvBind
  ev = cobox_at4
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_anG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
25[<C:0,F:0>] [W] cobox_at4 :: t_anG ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                               ~
                                                               t_anH " Pretty.hs:32:13-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                                ~
                                                                t_anH " Pretty.hs:32:13-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anJ :: Doc ~ t_anH [" a type equality Doc
                                                  ~
                                                  t_anH " Pretty.hs:32:13-25] (CNonCanonical)
canEvNC:eq
  Doc
  t_anH
can_eq_nc
  [W] cobox_anJ :: Doc ~ t_anH
  Doc
  Doc
  t_anH
  t_anH
can_eq_nc
  [W] cobox_anJ :: Doc ~ t_anH
  [String]
  Doc
  t_anH
  t_anH
canEqTyVar
  t_anH
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at5 :: t_anH ~ Doc
setEvBind
  ev = cobox_anJ
  tm  = CO Sym cobox_at5
rewriteEqEvidence
  [W] cobox_anJ :: Doc ~ t_anH
  t_anH
  Doc
  Sym cobox_at5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at5 :: t_anH ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anH " Pretty.hs:32:13-25] (CTyEqCan)
Sneaky unification:
  Unifies: t_anH := Doc
  Coercion: t_anH ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anH := Doc
setEvBind
  ev = cobox_at5
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
26[<C:0,F:0>] [W] cobox_at5 :: t_anH ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                               ~
                                                               t_anK " Pretty.hs:25:13-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                                ~
                                                                t_anK " Pretty.hs:25:13-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anL :: Doc ~ t_anK [" a type equality Doc
                                                  ~
                                                  t_anK " Pretty.hs:25:13-15] (CNonCanonical)
canEvNC:eq
  Doc
  t_anK
can_eq_nc
  [W] cobox_anL :: Doc ~ t_anK
  Doc
  Doc
  t_anK
  t_anK
can_eq_nc
  [W] cobox_anL :: Doc ~ t_anK
  [String]
  Doc
  t_anK
  t_anK
canEqTyVar
  t_anK
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at6 :: t_anK ~ Doc
setEvBind
  ev = cobox_anL
  tm  = CO Sym cobox_at6
rewriteEqEvidence
  [W] cobox_anL :: Doc ~ t_anK
  t_anK
  Doc
  Sym cobox_at6
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at6 :: t_anK ~ Doc [" a type equality Doc
                                                                ~
                                                                t_anK " Pretty.hs:25:13-15] (CTyEqCan)
Sneaky unification:
  Unifies: t_anK := Doc
  Coercion: t_anK ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anK := Doc
setEvBind
  ev = cobox_at6
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_anK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
27[<C:0,F:0>] [W] cobox_at6 :: t_anK ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anP :: [a_anO]
                                ~ t_an9 [" a type equality [a_anO]
                                                           ~
                                                           t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anP :: [a_anO]
                                 ~ t_an9 [" a type equality [a_anO]
                                                            ~
                                                            t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anP :: [a_anO] ~ t_an9 [" a type equality [a_anO]
                                                      ~
                                                      t_an9 " Pretty.hs:136:13-27] (CNonCanonical)
canEvNC:eq
  [a_anO]
  t_an9
can_eq_nc
  [W] cobox_anP :: [a_anO] ~ t_an9
  [a_anO]
  [a_anO]
  t_an9
  t_an9
canEqTyVar
  t_an9
  [a_anO]
  Is-swapped
Following bound tyvar t_an9 = String
newWantedEvVar/cache miss [W] cobox_at7 :: String ~ [a_anO]
setEvBind
  ev = cobox_anP
  tm  = CO Sym cobox_at7
rewriteEqEvidence
  [W] cobox_anP :: [a_anO] ~ t_an9
  String
  [a_anO]
  Sym cobox_at7
canEqTyVar2
  t_an9
  [a_anO]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_at7 :: String ~ [a_anO]
  String
  String
  [a_anO]
  [a_anO]
can_eq_nc
  [W] cobox_at7 :: String ~ [a_anO]
  [Char]
  String
  [a_anO]
  [a_anO]
newWantedEvVar/cache miss [W] cobox_at8 :: Char ~ a_anO
setEvBind
  ev = cobox_at7
  tm  = CO [cobox_at8]_N
canEvNC:eq
  Char
  a_anO
can_eq_nc
  [W] cobox_at8 :: Char ~ a_anO
  Char
  Char
  a_anO
  a_anO
canEqTyVar
  a_anO
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_at9 :: a_anO ~ Char
setEvBind
  ev = cobox_at8
  tm  = CO Sym cobox_at9
rewriteEqEvidence
  [W] cobox_at8 :: Char ~ a_anO
  a_anO
  Char
  Sym cobox_at9
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_at9 :: a_anO
                                 ~ Char [" a type equality [a_anO]
                                                           ~
                                                           t_an9 " Pretty.hs:136:13-27] (CTyEqCan)
Sneaky unification:
  Unifies: a_anO := Char
  Coercion: a_anO ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_anO := Char
setEvBind
  ev = cobox_at9
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_anO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
28[<C:0,F:0>] [W] cobox_at9 :: a_anO ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                               ~
                                                               Int " Pretty.hs:136:23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                                ~
                                                                Int " Pretty.hs:136:23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anQ :: t_an8 ~ Int [" a type equality t_an8
                                                  ~
                                                  Int " Pretty.hs:136:23] (CNonCanonical)
canEvNC:eq
  t_an8
  Int
can_eq_nc
  [W] cobox_anQ :: t_an8 ~ Int
  t_an8
  t_an8
  Int
  Int
canEqTyVar
  t_an8
  Int
  Not-swapped
Following bound tyvar t_an8 = Int
canEqTyVar2
  t_an8
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_anQ :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_anQ
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                ~
                                                                a_anO " Pretty.hs:136:25-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                                 ~
                                                                 a_anO " Pretty.hs:136:25-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anR :: Char ~ a_anO [" a type equality Char
                                                   ~
                                                   a_anO " Pretty.hs:136:25-27] (CNonCanonical)
canEvNC:eq
  Char
  a_anO
can_eq_nc
  [W] cobox_anR :: Char ~ a_anO
  Char
  Char
  a_anO
  a_anO
canEqTyVar
  a_anO
  Char
  Is-swapped
Following bound tyvar a_anO = Char
newWantedEvVar/cache miss [W] cobox_ata :: Char ~ Char
setEvBind
  ev = cobox_anR
  tm  = CO Sym cobox_ata
rewriteEqEvidence
  [W] cobox_anR :: Char ~ a_anO
  Char
  Char
  Sym cobox_ata
canEqTyVar2
  a_anO
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_ata :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ata
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anT :: IO () ~ t_anl [" a type equality IO
                                                                   ()
                                                                 ~
                                                                 t_anl " Pretty.hs:131:5-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anT :: IO () ~ t_anl [" a type equality IO
                                                                    ()
                                                                  ~
                                                                  t_anl " Pretty.hs:131:5-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anT :: IO () ~ t_anl [" a type equality IO ()
                                                    ~
                                                    t_anl " Pretty.hs:131:5-24] (CNonCanonical)
canEvNC:eq
  IO ()
  t_anl
can_eq_nc
  [W] cobox_anT :: IO () ~ t_anl
  IO ()
  IO ()
  t_anl
  t_anl
canEqTyVar
  t_anl
  IO ()
  Is-swapped
Following bound tyvar t_anl = IO ()
newWantedEvVar/cache miss [W] cobox_atb :: IO () ~ IO ()
setEvBind
  ev = cobox_anT
  tm  = CO Sym cobox_atb
rewriteEqEvidence
  [W] cobox_anT :: IO () ~ t_anl
  IO ()
  IO ()
  Sym cobox_atb
canEqTyVar2
  t_anl
  IO ()
  Is-swapped
  IO ()
  <IO ()>_N
can_eq_nc
  [W] cobox_atb :: IO () ~ IO ()
  IO ()
  IO ()
  IO ()
  IO ()
newWantedEvVar/cache miss [W] cobox_atc :: () ~ ()
setEvBind
  ev = cobox_atb
  tm  = CO IO cobox_atc_N
canEvNC:eq
  ()
  ()
can_eq_nc
  [W] cobox_atc :: () ~ ()
  ()
  ()
  ()
  ()
setEvBind
  ev = cobox_atc
  tm  = CO <()>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anU :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " Pretty.hs:131:13-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anU :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " Pretty.hs:131:13-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anU :: String ~ String [" a type equality String
                                                      ~
                                                      String " Pretty.hs:131:13-23] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_anU :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_anU :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_anU :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atd :: Char ~ Char
setEvBind
  ev = cobox_anU
  tm  = CO [cobox_atd]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atd :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atd
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_anV :: t_ank
                                ~ [String] [" a type equality t_ank
                                                              ~
                                                              [String] " Pretty.hs:131:21-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_anV :: t_ank
                                 ~ [String] [" a type equality t_ank
                                                               ~
                                                               [String] " Pretty.hs:131:21-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_anV :: t_ank ~ [String] [" a type equality t_ank
                                                       ~
                                                       [String] " Pretty.hs:131:21-23] (CNonCanonical)
canEvNC:eq
  t_ank
  [String]
can_eq_nc
  [W] cobox_anV :: t_ank ~ [String]
  t_ank
  t_ank
  [String]
  [String]
canEqTyVar
  t_ank
  [String]
  Not-swapped
Following bound tyvar t_ank = Doc
canEqTyVar2
  t_ank
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_anV :: Doc ~ [String]
  Doc
  Doc
  [String]
  [String]
can_eq_nc
  [W] cobox_anV :: Doc ~ [String]
  [String]
  Doc
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_ate :: String ~ String
setEvBind
  ev = cobox_anV
  tm  = CO [cobox_ate]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_ate :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_ate :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_ate :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atf :: Char ~ Char
setEvBind
  ev = cobox_ate
  tm  = CO [cobox_atf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao0 :: t_anX
                                ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                      ~
                                                                      t_anY
                                                                      -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao0 :: t_anX
                                 ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                       ~
                                                                       t_anY
                                                                       -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                               ~
                                                               t_anY
                                                               -> t_anZ " Pretty.hs:127:5-44] (CNonCanonical)
canEvNC:eq
  t_anX
  t_anY -> t_anZ
can_eq_nc
  [W] cobox_ao0 :: t_anX ~ (t_anY -> t_anZ)
  t_anX
  t_anX
  t_anY -> t_anZ
  t_anY -> t_anZ
canEqTyVar
  t_anX
  t_anY -> t_anZ
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ao0 :: t_anX
                                 ~ (t_anY -> t_anZ) [" a type equality t_anX
                                                                       ~
                                                                       t_anY
                                                                       -> t_anZ " Pretty.hs:127:5-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_anX := t_anY -> t_anZ
  Coercion: t_anX ~ (t_anY -> t_anZ)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anX := t_anY -> t_anZ
setEvBind
  ev = cobox_ao0
  tm  = CO <t_anY -> t_anZ>_N
kickOutRewritable
  tv =  t_anX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
34[<C:0,F:0>] [W] cobox_ao0 :: t_anX
                               ~ (t_anY -> t_anZ): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao3 :: [a_ao2]
                                ~ t_anZ [" a type equality [a_ao2]
                                                           ~
                                                           t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao3 :: [a_ao2]
                                 ~ t_anZ [" a type equality [a_ao2]
                                                            ~
                                                            t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao3 :: [a_ao2] ~ t_anZ [" a type equality [a_ao2]
                                                      ~
                                                      t_anZ " Pretty.hs:127:27-44] (CNonCanonical)
canEvNC:eq
  [a_ao2]
  t_anZ
can_eq_nc
  [W] cobox_ao3 :: [a_ao2] ~ t_anZ
  [a_ao2]
  [a_ao2]
  t_anZ
  t_anZ
canEqTyVar
  t_anZ
  [a_ao2]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atg :: t_anZ ~ [a_ao2]
setEvBind
  ev = cobox_ao3
  tm  = CO Sym cobox_atg
rewriteEqEvidence
  [W] cobox_ao3 :: [a_ao2] ~ t_anZ
  t_anZ
  [a_ao2]
  Sym cobox_atg
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atg :: t_anZ
                                 ~ [a_ao2] [" a type equality [a_ao2]
                                                              ~
                                                              t_anZ " Pretty.hs:127:27-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_anZ := [a_ao2]
  Coercion: t_anZ ~ [a_ao2]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anZ := [a_ao2]
setEvBind
  ev = cobox_atg
  tm  = CO <[a_ao2]>_N
kickOutRewritable
  tv =  t_anZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
35[<C:0,F:0>] [W] cobox_atg :: t_anZ
                               ~ [a_ao2]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao4 :: t_an9
                                ~ [a_ao2] [" a type equality t_an9
                                                             ~
                                                             [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao4 :: t_an9
                                 ~ [a_ao2] [" a type equality t_an9
                                                              ~
                                                              [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao4 :: t_an9 ~ [a_ao2] [" a type equality t_an9
                                                      ~
                                                      [a_ao2] " Pretty.hs:127:27-35] (CNonCanonical)
canEvNC:eq
  t_an9
  [a_ao2]
can_eq_nc
  [W] cobox_ao4 :: t_an9 ~ [a_ao2]
  t_an9
  t_an9
  [a_ao2]
  [a_ao2]
canEqTyVar
  t_an9
  [a_ao2]
  Not-swapped
Following bound tyvar t_an9 = String
canEqTyVar2
  t_an9
  [a_ao2]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_ao4 :: String ~ [a_ao2]
  String
  String
  [a_ao2]
  [a_ao2]
can_eq_nc
  [W] cobox_ao4 :: String ~ [a_ao2]
  [Char]
  String
  [a_ao2]
  [a_ao2]
newWantedEvVar/cache miss [W] cobox_ath :: Char ~ a_ao2
setEvBind
  ev = cobox_ao4
  tm  = CO [cobox_ath]_N
canEvNC:eq
  Char
  a_ao2
can_eq_nc
  [W] cobox_ath :: Char ~ a_ao2
  Char
  Char
  a_ao2
  a_ao2
canEqTyVar
  a_ao2
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ati :: a_ao2 ~ Char
setEvBind
  ev = cobox_ath
  tm  = CO Sym cobox_ati
rewriteEqEvidence
  [W] cobox_ath :: Char ~ a_ao2
  a_ao2
  Char
  Sym cobox_ati
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ati :: a_ao2
                                 ~ Char [" a type equality t_an9
                                                           ~
                                                           [a_ao2] " Pretty.hs:127:27-35] (CTyEqCan)
Sneaky unification:
  Unifies: a_ao2 := Char
  Coercion: a_ao2 ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ao2 := Char
setEvBind
  ev = cobox_ati
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_ao2
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
36[<C:0,F:0>] [W] cobox_ati :: a_ao2 ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao5 :: t_ano
                                ~ t_an8 [" a type equality t_ano
                                                           ~
                                                           t_an8 " Pretty.hs:127:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao5 :: t_ano
                                 ~ t_an8 [" a type equality t_ano
                                                            ~
                                                            t_an8 " Pretty.hs:127:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao5 :: t_ano ~ t_an8 [" a type equality t_ano
                                                    ~
                                                    t_an8 " Pretty.hs:127:35] (CNonCanonical)
canEvNC:eq
  t_ano
  t_an8
can_eq_nc
  [W] cobox_ao5 :: t_ano ~ t_an8
  t_ano
  t_ano
  t_an8
  t_an8
canEqTyVar
  t_ano
  t_an8
  Not-swapped
Following bound tyvar t_ano = Int
canEqTyVar2
  t_ano
  t_an8
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_ao5 :: Int ~ t_an8
  Int
  Int
  t_an8
  t_an8
canEqTyVar
  t_an8
  Int
  Is-swapped
Following bound tyvar t_an8 = Int
newWantedEvVar/cache miss [W] cobox_atj :: Int ~ Int
setEvBind
  ev = cobox_ao5
  tm  = CO Sym cobox_atj
rewriteEqEvidence
  [W] cobox_ao5 :: Int ~ t_an8
  Int
  Int
  Sym cobox_atj
canEqTyVar2
  t_an8
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_atj :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_atj
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ao6 :: t_anY
                                ~ [a_ao2] [" a type equality t_anY
                                                             ~
                                                             [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ao6 :: t_anY
                                 ~ [a_ao2] [" a type equality t_anY
                                                              ~
                                                              [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ao6 :: t_anY ~ [a_ao2] [" a type equality t_anY
                                                      ~
                                                      [a_ao2] " Pretty.hs:127:40-44] (CNonCanonical)
canEvNC:eq
  t_anY
  [a_ao2]
can_eq_nc
  [W] cobox_ao6 :: t_anY ~ [a_ao2]
  t_anY
  t_anY
  [a_ao2]
  [a_ao2]
canEqTyVar
  t_anY
  [a_ao2]
  Not-swapped
Following bound tyvar a_ao2 = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ao6 :: t_anY
                                 ~ [Char] [" a type equality t_anY
                                                             ~
                                                             [a_ao2] " Pretty.hs:127:40-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_anY := [Char]
  Coercion: t_anY ~ [Char]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_anY := [Char]
setEvBind
  ev = cobox_ao6
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  t_anY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
38[<C:0,F:0>] [W] cobox_ao6 :: t_anY ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aob :: [b_aoa]
                                ~ t_anq [" a type equality [b_aoa]
                                                           ~
                                                           t_anq " Pretty.hs:125:5-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aob :: [b_aoa]
                                 ~ t_anq [" a type equality [b_aoa]
                                                            ~
                                                            t_anq " Pretty.hs:125:5-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aob :: [b_aoa] ~ t_anq [" a type equality [b_aoa]
                                                      ~
                                                      t_anq " Pretty.hs:125:5-28] (CNonCanonical)
canEvNC:eq
  [b_aoa]
  t_anq
can_eq_nc
  [W] cobox_aob :: [b_aoa] ~ t_anq
  [b_aoa]
  [b_aoa]
  t_anq
  t_anq
canEqTyVar
  t_anq
  [b_aoa]
  Is-swapped
Following bound tyvar t_anq = Doc
newWantedEvVar/cache miss [W] cobox_atk :: Doc ~ [b_aoa]
setEvBind
  ev = cobox_aob
  tm  = CO Sym cobox_atk
rewriteEqEvidence
  [W] cobox_aob :: [b_aoa] ~ t_anq
  Doc
  [b_aoa]
  Sym cobox_atk
canEqTyVar2
  t_anq
  [b_aoa]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atk :: Doc ~ [b_aoa]
  Doc
  Doc
  [b_aoa]
  [b_aoa]
can_eq_nc
  [W] cobox_atk :: Doc ~ [b_aoa]
  [String]
  Doc
  [b_aoa]
  [b_aoa]
newWantedEvVar/cache miss [W] cobox_atl :: String ~ b_aoa
setEvBind
  ev = cobox_atk
  tm  = CO [cobox_atl]_N
canEvNC:eq
  String
  b_aoa
can_eq_nc
  [W] cobox_atl :: String ~ b_aoa
  String
  String
  b_aoa
  b_aoa
can_eq_nc
  [W] cobox_atl :: String ~ b_aoa
  [Char]
  String
  b_aoa
  b_aoa
canEqTyVar
  b_aoa
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atm :: b_aoa ~ String
setEvBind
  ev = cobox_atl
  tm  = CO Sym cobox_atm
rewriteEqEvidence
  [W] cobox_atl :: String ~ b_aoa
  b_aoa
  String
  Sym cobox_atm
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atm :: b_aoa
                                 ~ String [" a type equality [b_aoa]
                                                             ~
                                                             t_anq " Pretty.hs:125:5-28] (CTyEqCan)
Sneaky unification:
  Unifies: b_aoa := String
  Coercion: b_aoa ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aoa := String
setEvBind
  ev = cobox_atm
  tm  = CO <String>_N
kickOutRewritable
  tv =  b_aoa
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
39[<C:0,F:0>] [W] cobox_atm :: b_aoa ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoc :: t_anX
                                ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                      ~
                                                                      a_ao9
                                                                      -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoc :: t_anX
                                 ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                                       ~
                                                                       a_ao9
                                                                       -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa) [" a type equality t_anX
                                                               ~
                                                               a_ao9
                                                               -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
canEvNC:eq
  t_anX
  a_ao9 -> b_aoa
can_eq_nc
  [W] cobox_aoc :: t_anX ~ (a_ao9 -> b_aoa)
  t_anX
  t_anX
  a_ao9 -> b_aoa
  a_ao9 -> b_aoa
canEqTyVar
  t_anX
  a_ao9 -> b_aoa
  Not-swapped
Following bound tyvar t_anX = t_anY -> t_anZ
canEqTyVar2
  t_anX
  a_ao9 -> b_aoa
  Not-swapped
  t_anY -> t_anZ
  <t_anY -> t_anZ>_N
can_eq_nc
  [W] cobox_aoc :: (t_anY -> t_anZ) ~ (a_ao9 -> b_aoa)
  t_anY -> t_anZ
  t_anY -> t_anZ
  a_ao9 -> b_aoa
  a_ao9 -> b_aoa
newWantedEvVar/cache miss [W] cobox_atn :: t_anY ~ a_ao9
newWantedEvVar/cache miss [W] cobox_ato :: t_anZ ~ b_aoa
setEvBind
  ev = cobox_aoc
  tm  = CO cobox_atn -> cobox_ato
canEvNC:eq
  t_anY
  a_ao9
can_eq_nc
  [W] cobox_atn :: t_anY ~ a_ao9
  t_anY
  t_anY
  a_ao9
  a_ao9
canEqTyVar
  t_anY
  a_ao9
  Not-swapped
Following bound tyvar t_anY = [Char]
canEqTyVar2
  t_anY
  a_ao9
  Not-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_atn :: [Char] ~ a_ao9
  [Char]
  [Char]
  a_ao9
  a_ao9
canEqTyVar
  a_ao9
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atp :: a_ao9 ~ [Char]
setEvBind
  ev = cobox_atn
  tm  = CO Sym cobox_atp
rewriteEqEvidence
  [W] cobox_atn :: [Char] ~ a_ao9
  a_ao9
  [Char]
  Sym cobox_atp
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atp :: a_ao9
                                 ~ [Char] [" a type equality t_anX
                                                             ~
                                                             a_ao9
                                                             -> b_aoa " Pretty.hs:125:9-21] (CTyEqCan)
Sneaky unification:
  Unifies: a_ao9 := [Char]
  Coercion: a_ao9 ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_ao9 := [Char]
setEvBind
  ev = cobox_atp
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  a_ao9
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
40[<C:0,F:0>] [W] cobox_atp :: a_ao9 ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ato :: t_anZ
                                ~ b_aoa [" a type equality t_anX
                                                           ~
                                                           a_ao9
                                                           -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ato :: t_anZ
                                 ~ b_aoa [" a type equality t_anX
                                                            ~
                                                            a_ao9
                                                            -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ato :: t_anZ ~ b_aoa [" a type equality t_anX
                                                    ~
                                                    a_ao9
                                                    -> b_aoa " Pretty.hs:125:9-21] (CNonCanonical)
canEvNC:eq
  t_anZ
  b_aoa
can_eq_nc
  [W] cobox_ato :: t_anZ ~ b_aoa
  t_anZ
  t_anZ
  b_aoa
  b_aoa
canEqTyVar
  t_anZ
  b_aoa
  Not-swapped
Following bound tyvar t_anZ = [a_ao2]
canEqTyVar2
  t_anZ
  b_aoa
  Not-swapped
  [a_ao2]
  <[a_ao2]>_N
can_eq_nc
  [W] cobox_ato :: [a_ao2] ~ b_aoa
  [a_ao2]
  [a_ao2]
  b_aoa
  b_aoa
canEqTyVar
  b_aoa
  [a_ao2]
  Is-swapped
Following bound tyvar b_aoa = String
newWantedEvVar/cache miss [W] cobox_atq :: String ~ [a_ao2]
setEvBind
  ev = cobox_ato
  tm  = CO Sym cobox_atq
rewriteEqEvidence
  [W] cobox_ato :: [a_ao2] ~ b_aoa
  String
  [a_ao2]
  Sym cobox_atq
canEqTyVar2
  b_aoa
  [a_ao2]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_atq :: String ~ [a_ao2]
  String
  String
  [a_ao2]
  [a_ao2]
can_eq_nc
  [W] cobox_atq :: String ~ [a_ao2]
  [Char]
  String
  [a_ao2]
  [a_ao2]
newWantedEvVar/cache miss [W] cobox_atr :: Char ~ a_ao2
setEvBind
  ev = cobox_atq
  tm  = CO [cobox_atr]_N
canEvNC:eq
  Char
  a_ao2
can_eq_nc
  [W] cobox_atr :: Char ~ a_ao2
  Char
  Char
  a_ao2
  a_ao2
canEqTyVar
  a_ao2
  Char
  Is-swapped
Following bound tyvar a_ao2 = Char
newWantedEvVar/cache miss [W] cobox_ats :: Char ~ Char
setEvBind
  ev = cobox_atr
  tm  = CO Sym cobox_ats
rewriteEqEvidence
  [W] cobox_atr :: Char ~ a_ao2
  Char
  Char
  Sym cobox_ats
canEqTyVar2
  a_ao2
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_ats :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ats
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aod :: t_anp
                                ~ [a_ao9] [" a type equality t_anp
                                                             ~
                                                             [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aod :: t_anp
                                 ~ [a_ao9] [" a type equality t_anp
                                                              ~
                                                              [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aod :: t_anp ~ [a_ao9] [" a type equality t_anp
                                                      ~
                                                      [a_ao9] " Pretty.hs:125:23-28] (CNonCanonical)
canEvNC:eq
  t_anp
  [a_ao9]
can_eq_nc
  [W] cobox_aod :: t_anp ~ [a_ao9]
  t_anp
  t_anp
  [a_ao9]
  [a_ao9]
canEqTyVar
  t_anp
  [a_ao9]
  Not-swapped
Following bound tyvar t_anp = Doc
canEqTyVar2
  t_anp
  [a_ao9]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aod :: Doc ~ [a_ao9]
  Doc
  Doc
  [a_ao9]
  [a_ao9]
can_eq_nc
  [W] cobox_aod :: Doc ~ [a_ao9]
  [String]
  Doc
  [a_ao9]
  [a_ao9]
newWantedEvVar/cache miss [W] cobox_att :: String ~ a_ao9
setEvBind
  ev = cobox_aod
  tm  = CO [cobox_att]_N
canEvNC:eq
  String
  a_ao9
can_eq_nc
  [W] cobox_att :: String ~ a_ao9
  String
  String
  a_ao9
  a_ao9
can_eq_nc
  [W] cobox_att :: String ~ a_ao9
  [Char]
  String
  a_ao9
  a_ao9
canEqTyVar
  a_ao9
  [Char]
  Is-swapped
Following bound tyvar a_ao9 = [Char]
newWantedEvVar/cache miss [W] cobox_atu :: [Char] ~ String
setEvBind
  ev = cobox_att
  tm  = CO Sym cobox_atu
rewriteEqEvidence
  [W] cobox_att :: String ~ a_ao9
  [Char]
  String
  Sym cobox_atu
canEqTyVar2
  a_ao9
  [Char]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_atu :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atv :: Char ~ Char
setEvBind
  ev = cobox_atu
  tm  = CO [cobox_atv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aog :: [a_aof]
                                ~ t_anw [" a type equality [a_aof]
                                                           ~
                                                           t_anw " Pretty.hs:121:5-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aog :: [a_aof]
                                 ~ t_anw [" a type equality [a_aof]
                                                            ~
                                                            t_anw " Pretty.hs:121:5-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aog :: [a_aof] ~ t_anw [" a type equality [a_aof]
                                                      ~
                                                      t_anw " Pretty.hs:121:5-18] (CNonCanonical)
canEvNC:eq
  [a_aof]
  t_anw
can_eq_nc
  [W] cobox_aog :: [a_aof] ~ t_anw
  [a_aof]
  [a_aof]
  t_anw
  t_anw
canEqTyVar
  t_anw
  [a_aof]
  Is-swapped
Following bound tyvar t_anw = Doc
newWantedEvVar/cache miss [W] cobox_atw :: Doc ~ [a_aof]
setEvBind
  ev = cobox_aog
  tm  = CO Sym cobox_atw
rewriteEqEvidence
  [W] cobox_aog :: [a_aof] ~ t_anw
  Doc
  [a_aof]
  Sym cobox_atw
canEqTyVar2
  t_anw
  [a_aof]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atw :: Doc ~ [a_aof]
  Doc
  Doc
  [a_aof]
  [a_aof]
can_eq_nc
  [W] cobox_atw :: Doc ~ [a_aof]
  [String]
  Doc
  [a_aof]
  [a_aof]
newWantedEvVar/cache miss [W] cobox_atx :: String ~ a_aof
setEvBind
  ev = cobox_atw
  tm  = CO [cobox_atx]_N
canEvNC:eq
  String
  a_aof
can_eq_nc
  [W] cobox_atx :: String ~ a_aof
  String
  String
  a_aof
  a_aof
can_eq_nc
  [W] cobox_atx :: String ~ a_aof
  [Char]
  String
  a_aof
  a_aof
canEqTyVar
  a_aof
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aty :: a_aof ~ String
setEvBind
  ev = cobox_atx
  tm  = CO Sym cobox_aty
rewriteEqEvidence
  [W] cobox_atx :: String ~ a_aof
  a_aof
  String
  Sym cobox_aty
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aty :: a_aof
                                 ~ String [" a type equality [a_aof]
                                                             ~
                                                             t_anw " Pretty.hs:121:5-18] (CTyEqCan)
Sneaky unification:
  Unifies: a_aof := String
  Coercion: a_aof ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aof := String
setEvBind
  ev = cobox_aty
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aof
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
43[<C:0,F:0>] [W] cobox_aty :: a_aof ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoh :: t_anu
                                ~ [a_aof] [" a type equality t_anu
                                                             ~
                                                             [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoh :: t_anu
                                 ~ [a_aof] [" a type equality t_anu
                                                              ~
                                                              [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoh :: t_anu ~ [a_aof] [" a type equality t_anu
                                                      ~
                                                      [a_aof] " Pretty.hs:121:5-9] (CNonCanonical)
canEvNC:eq
  t_anu
  [a_aof]
can_eq_nc
  [W] cobox_aoh :: t_anu ~ [a_aof]
  t_anu
  t_anu
  [a_aof]
  [a_aof]
canEqTyVar
  t_anu
  [a_aof]
  Not-swapped
Following bound tyvar t_anu = Doc
canEqTyVar2
  t_anu
  [a_aof]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoh :: Doc ~ [a_aof]
  Doc
  Doc
  [a_aof]
  [a_aof]
can_eq_nc
  [W] cobox_aoh :: Doc ~ [a_aof]
  [String]
  Doc
  [a_aof]
  [a_aof]
newWantedEvVar/cache miss [W] cobox_atz :: String ~ a_aof
setEvBind
  ev = cobox_aoh
  tm  = CO [cobox_atz]_N
canEvNC:eq
  String
  a_aof
can_eq_nc
  [W] cobox_atz :: String ~ a_aof
  String
  String
  a_aof
  a_aof
can_eq_nc
  [W] cobox_atz :: String ~ a_aof
  [Char]
  String
  a_aof
  a_aof
canEqTyVar
  a_aof
  [Char]
  Is-swapped
Following bound tyvar a_aof = String
newWantedEvVar/cache miss [W] cobox_atA :: String ~ String
setEvBind
  ev = cobox_atz
  tm  = CO Sym cobox_atA
rewriteEqEvidence
  [W] cobox_atz :: String ~ a_aof
  String
  String
  Sym cobox_atA
canEqTyVar2
  a_aof
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_atA :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_atA :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atB :: Char ~ Char
setEvBind
  ev = cobox_atA
  tm  = CO [cobox_atB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoi :: t_anv
                                ~ [a_aof] [" a type equality t_anv
                                                             ~
                                                             [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoi :: t_anv
                                 ~ [a_aof] [" a type equality t_anv
                                                              ~
                                                              [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoi :: t_anv ~ [a_aof] [" a type equality t_anv
                                                      ~
                                                      [a_aof] " Pretty.hs:121:14-18] (CNonCanonical)
canEvNC:eq
  t_anv
  [a_aof]
can_eq_nc
  [W] cobox_aoi :: t_anv ~ [a_aof]
  t_anv
  t_anv
  [a_aof]
  [a_aof]
canEqTyVar
  t_anv
  [a_aof]
  Not-swapped
Following bound tyvar t_anv = Doc
canEqTyVar2
  t_anv
  [a_aof]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoi :: Doc ~ [a_aof]
  Doc
  Doc
  [a_aof]
  [a_aof]
can_eq_nc
  [W] cobox_aoi :: Doc ~ [a_aof]
  [String]
  Doc
  [a_aof]
  [a_aof]
newWantedEvVar/cache miss [W] cobox_atC :: String ~ a_aof
setEvBind
  ev = cobox_aoi
  tm  = CO [cobox_atC]_N
canEvNC:eq
  String
  a_aof
can_eq_nc
  [W] cobox_atC :: String ~ a_aof
  String
  String
  a_aof
  a_aof
can_eq_nc
  [W] cobox_atC :: String ~ a_aof
  [Char]
  String
  a_aof
  a_aof
canEqTyVar
  a_aof
  [Char]
  Is-swapped
Following bound tyvar a_aof = String
newWantedEvVar/cache miss [W] cobox_atD :: String ~ String
setEvBind
  ev = cobox_atC
  tm  = CO Sym cobox_atD
rewriteEqEvidence
  [W] cobox_atC :: String ~ a_aof
  String
  String
  Sym cobox_atD
canEqTyVar2
  a_aof
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_atD :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_atD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atE :: Char ~ Char
setEvBind
  ev = cobox_atD
  tm  = CO [cobox_atE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aol :: [t_aok]
                                ~ t_anA [" a type equality [t_aok]
                                                           ~
                                                           t_anA " Pretty.hs:106:1-2] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aol :: [t_aok]
                                 ~ t_anA [" a type equality [t_aok]
                                                            ~
                                                            t_anA " Pretty.hs:106:1-2] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aol :: [t_aok] ~ t_anA [" a type equality [t_aok]
                                                      ~
                                                      t_anA " Pretty.hs:106:1-2] (CNonCanonical)
canEvNC:eq
  [t_aok]
  t_anA
can_eq_nc
  [W] cobox_aol :: [t_aok] ~ t_anA
  [t_aok]
  [t_aok]
  t_anA
  t_anA
canEqTyVar
  t_anA
  [t_aok]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_atF :: Doc ~ [t_aok]
setEvBind
  ev = cobox_aol
  tm  = CO Sym cobox_atF
rewriteEqEvidence
  [W] cobox_aol :: [t_aok] ~ t_anA
  Doc
  [t_aok]
  Sym cobox_atF
canEqTyVar2
  t_anA
  [t_aok]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atF :: Doc ~ [t_aok]
  Doc
  Doc
  [t_aok]
  [t_aok]
can_eq_nc
  [W] cobox_atF :: Doc ~ [t_aok]
  [String]
  Doc
  [t_aok]
  [t_aok]
newWantedEvVar/cache miss [W] cobox_atG :: String ~ t_aok
setEvBind
  ev = cobox_atF
  tm  = CO [cobox_atG]_N
canEvNC:eq
  String
  t_aok
can_eq_nc
  [W] cobox_atG :: String ~ t_aok
  String
  String
  t_aok
  t_aok
can_eq_nc
  [W] cobox_atG :: String ~ t_aok
  [Char]
  String
  t_aok
  t_aok
canEqTyVar
  t_aok
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atH :: t_aok ~ String
setEvBind
  ev = cobox_atG
  tm  = CO Sym cobox_atH
rewriteEqEvidence
  [W] cobox_atG :: String ~ t_aok
  t_aok
  String
  Sym cobox_atH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atH :: t_aok
                                 ~ String [" a type equality [t_aok]
                                                             ~
                                                             t_anA " Pretty.hs:106:1-2] (CTyEqCan)
Sneaky unification:
  Unifies: t_aok := String
  Coercion: t_aok ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aok := String
setEvBind
  ev = cobox_atH
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aok
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
46[<C:0,F:0>] [W] cobox_atH :: t_aok ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aom :: t_anB
                                ~ t_anC [" a type equality t_anB
                                                           ~
                                                           t_anC " Pretty.hs:107:5-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aom :: t_anB
                                 ~ t_anC [" a type equality t_anB
                                                            ~
                                                            t_anC " Pretty.hs:107:5-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aom :: t_anB ~ t_anC [" a type equality t_anB
                                                    ~
                                                    t_anC " Pretty.hs:107:5-10] (CNonCanonical)
canEvNC:eq
  t_anB
  t_anC
can_eq_nc
  [W] cobox_aom :: t_anB ~ t_anC
  t_anB
  t_anB
  t_anC
  t_anC
canEqTyVar
  t_anB
  t_anC
  Not-swapped
Following bound tyvar t_anB = Doc
canEqTyVar2
  t_anB
  t_anC
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aom :: Doc ~ t_anC
  Doc
  Doc
  t_anC
  t_anC
can_eq_nc
  [W] cobox_aom :: Doc ~ t_anC
  [String]
  Doc
  t_anC
  t_anC
canEqTyVar
  t_anC
  [String]
  Is-swapped
Following bound tyvar t_anC = Doc
newWantedEvVar/cache miss [W] cobox_atI :: Doc ~ Doc
setEvBind
  ev = cobox_aom
  tm  = CO Sym cobox_atI
rewriteEqEvidence
  [W] cobox_aom :: Doc ~ t_anC
  Doc
  Doc
  Sym cobox_atI
canEqTyVar2
  t_anC
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atI :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_atI :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_atJ :: String ~ String
setEvBind
  ev = cobox_atI
  tm  = CO [cobox_atJ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_atJ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_atJ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_atJ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atK :: Char ~ Char
setEvBind
  ev = cobox_atJ
  tm  = CO [cobox_atK]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoo :: [t_aon]
                                ~ t_anB [" a type equality [t_aon]
                                                           ~
                                                           t_anB " Pretty.hs:108:11-12] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoo :: [t_aon]
                                 ~ t_anB [" a type equality [t_aon]
                                                            ~
                                                            t_anB " Pretty.hs:108:11-12] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoo :: [t_aon] ~ t_anB [" a type equality [t_aon]
                                                      ~
                                                      t_anB " Pretty.hs:108:11-12] (CNonCanonical)
canEvNC:eq
  [t_aon]
  t_anB
can_eq_nc
  [W] cobox_aoo :: [t_aon] ~ t_anB
  [t_aon]
  [t_aon]
  t_anB
  t_anB
canEqTyVar
  t_anB
  [t_aon]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_atL :: Doc ~ [t_aon]
setEvBind
  ev = cobox_aoo
  tm  = CO Sym cobox_atL
rewriteEqEvidence
  [W] cobox_aoo :: [t_aon] ~ t_anB
  Doc
  [t_aon]
  Sym cobox_atL
canEqTyVar2
  t_anB
  [t_aon]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atL :: Doc ~ [t_aon]
  Doc
  Doc
  [t_aon]
  [t_aon]
can_eq_nc
  [W] cobox_atL :: Doc ~ [t_aon]
  [String]
  Doc
  [t_aon]
  [t_aon]
newWantedEvVar/cache miss [W] cobox_atM :: String ~ t_aon
setEvBind
  ev = cobox_atL
  tm  = CO [cobox_atM]_N
canEvNC:eq
  String
  t_aon
can_eq_nc
  [W] cobox_atM :: String ~ t_aon
  String
  String
  t_aon
  t_aon
can_eq_nc
  [W] cobox_atM :: String ~ t_aon
  [Char]
  String
  t_aon
  t_aon
canEqTyVar
  t_aon
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atN :: t_aon ~ String
setEvBind
  ev = cobox_atM
  tm  = CO Sym cobox_atN
rewriteEqEvidence
  [W] cobox_atM :: String ~ t_aon
  t_aon
  String
  Sym cobox_atN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atN :: t_aon
                                 ~ String [" a type equality [t_aon]
                                                             ~
                                                             t_anB " Pretty.hs:108:11-12] (CTyEqCan)
Sneaky unification:
  Unifies: t_aon := String
  Coercion: t_aon ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aon := String
setEvBind
  ev = cobox_atN
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aon
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
48[<C:0,F:0>] [W] cobox_atN :: t_aon ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aop :: t_anA
                                ~ t_anC [" a type equality t_anA
                                                           ~
                                                           t_anC " Pretty.hs:109:5-9] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aop :: t_anA
                                 ~ t_anC [" a type equality t_anA
                                                            ~
                                                            t_anC " Pretty.hs:109:5-9] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aop :: t_anA ~ t_anC [" a type equality t_anA
                                                    ~
                                                    t_anC " Pretty.hs:109:5-9] (CNonCanonical)
canEvNC:eq
  t_anA
  t_anC
can_eq_nc
  [W] cobox_aop :: t_anA ~ t_anC
  t_anA
  t_anA
  t_anC
  t_anC
canEqTyVar
  t_anA
  t_anC
  Not-swapped
Following bound tyvar t_anA = Doc
canEqTyVar2
  t_anA
  t_anC
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aop :: Doc ~ t_anC
  Doc
  Doc
  t_anC
  t_anC
can_eq_nc
  [W] cobox_aop :: Doc ~ t_anC
  [String]
  Doc
  t_anC
  t_anC
canEqTyVar
  t_anC
  [String]
  Is-swapped
Following bound tyvar t_anC = Doc
newWantedEvVar/cache miss [W] cobox_atO :: Doc ~ Doc
setEvBind
  ev = cobox_aop
  tm  = CO Sym cobox_atO
rewriteEqEvidence
  [W] cobox_aop :: Doc ~ t_anC
  Doc
  Doc
  Sym cobox_atO
canEqTyVar2
  t_anC
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atO :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_atO :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_atP :: String ~ String
setEvBind
  ev = cobox_atO
  tm  = CO [cobox_atP]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_atP :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_atP :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_atP :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atQ :: Char ~ Char
setEvBind
  ev = cobox_atP
  tm  = CO [cobox_atQ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_atQ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_atQ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                               ~
                                                               t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                                ~
                                                                t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aot :: Int ~ t_aoq [" a type equality Int
                                                  ~
                                                  t_aoq " Pretty.hs:117:19-37] (CNonCanonical)
canEvNC:eq
  Int
  t_aoq
can_eq_nc
  [W] cobox_aot :: Int ~ t_aoq
  Int
  Int
  t_aoq
  t_aoq
canEqTyVar
  t_aoq
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atR :: t_aoq ~ Int
setEvBind
  ev = cobox_aot
  tm  = CO Sym cobox_atR
rewriteEqEvidence
  [W] cobox_aot :: Int ~ t_aoq
  t_aoq
  Int
  Sym cobox_atR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atR :: t_aoq ~ Int [" a type equality Int
                                                                ~
                                                                t_aoq " Pretty.hs:117:19-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_aoq := Int
  Coercion: t_aoq ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aoq := Int
setEvBind
  ev = cobox_atR
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aoq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
50[<C:0,F:0>] [W] cobox_atR :: t_aoq ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aow :: a_aov
                                ~ [a_aos] [" a type equality a_aov
                                                             ~
                                                             [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aow :: a_aov
                                 ~ [a_aos] [" a type equality a_aov
                                                              ~
                                                              [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aow :: a_aov ~ [a_aos] [" a type equality a_aov
                                                      ~
                                                      [a_aos] " Pretty.hs:117:27-36] (CNonCanonical)
canEvNC:eq
  a_aov
  [a_aos]
can_eq_nc
  [W] cobox_aow :: a_aov ~ [a_aos]
  a_aov
  a_aov
  [a_aos]
  [a_aos]
canEqTyVar
  a_aov
  [a_aos]
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aow :: a_aov
                                 ~ [a_aos] [" a type equality a_aov
                                                              ~
                                                              [a_aos] " Pretty.hs:117:27-36] (CTyEqCan)
Sneaky unification:
  Unifies: a_aov := [a_aos]
  Coercion: a_aov ~ [a_aos]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aov := [a_aos]
setEvBind
  ev = cobox_aow
  tm  = CO <[a_aos]>_N
kickOutRewritable
  tv =  a_aov
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
51[<C:0,F:0>] [W] cobox_aow :: a_aov
                               ~ [a_aos]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aox :: t_anA
                                ~ [a_aov] [" a type equality t_anA
                                                             ~
                                                             [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aox :: t_anA
                                 ~ [a_aov] [" a type equality t_anA
                                                              ~
                                                              [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aox :: t_anA ~ [a_aov] [" a type equality t_anA
                                                      ~
                                                      [a_aov] " Pretty.hs:117:32-36] (CNonCanonical)
canEvNC:eq
  t_anA
  [a_aov]
can_eq_nc
  [W] cobox_aox :: t_anA ~ [a_aov]
  t_anA
  t_anA
  [a_aov]
  [a_aov]
canEqTyVar
  t_anA
  [a_aov]
  Not-swapped
Following bound tyvar t_anA = Doc
canEqTyVar2
  t_anA
  [a_aov]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aox :: Doc ~ [a_aov]
  Doc
  Doc
  [a_aov]
  [a_aov]
can_eq_nc
  [W] cobox_aox :: Doc ~ [a_aov]
  [String]
  Doc
  [a_aov]
  [a_aov]
newWantedEvVar/cache miss [W] cobox_atS :: String ~ a_aov
setEvBind
  ev = cobox_aox
  tm  = CO [cobox_atS]_N
canEvNC:eq
  String
  a_aov
can_eq_nc
  [W] cobox_atS :: String ~ a_aov
  String
  String
  a_aov
  a_aov
can_eq_nc
  [W] cobox_atS :: String ~ a_aov
  [Char]
  String
  a_aov
  a_aov
canEqTyVar
  a_aov
  [Char]
  Is-swapped
Following bound tyvar a_aov = [a_aos]
newWantedEvVar/cache miss [W] cobox_atT :: [a_aos] ~ String
setEvBind
  ev = cobox_atS
  tm  = CO Sym cobox_atT
rewriteEqEvidence
  [W] cobox_atS :: String ~ a_aov
  [a_aos]
  String
  Sym cobox_atT
canEqTyVar2
  a_aov
  [Char]
  Is-swapped
  [a_aos]
  <[a_aos]>_N
can_eq_nc
  [W] cobox_atT :: [a_aos] ~ String
  [a_aos]
  [a_aos]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_atU :: a_aos ~ Char
setEvBind
  ev = cobox_atT
  tm  = CO [cobox_atU]_N
canEvNC:eq
  a_aos
  Char
can_eq_nc
  [W] cobox_atU :: a_aos ~ Char
  a_aos
  a_aos
  Char
  Char
canEqTyVar
  a_aos
  Char
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atU :: a_aos
                                 ~ Char [" a type equality t_anA
                                                           ~
                                                           [a_aov] " Pretty.hs:117:32-36] (CTyEqCan)
Sneaky unification:
  Unifies: a_aos := Char
  Coercion: a_aos ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aos := Char
setEvBind
  ev = cobox_atU
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aos
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
52[<C:0,F:0>] [W] cobox_atU :: a_aos ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoz :: [a_aoy]
                                ~ t_anC [" a type equality [a_aoy]
                                                           ~
                                                           t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoz :: [a_aoy]
                                 ~ t_anC [" a type equality [a_aoy]
                                                            ~
                                                            t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoz :: [a_aoy] ~ t_anC [" a type equality [a_aoy]
                                                      ~
                                                      t_anC " Pretty.hs:(111,5)-(115,38)] (CNonCanonical)
canEvNC:eq
  [a_aoy]
  t_anC
can_eq_nc
  [W] cobox_aoz :: [a_aoy] ~ t_anC
  [a_aoy]
  [a_aoy]
  t_anC
  t_anC
canEqTyVar
  t_anC
  [a_aoy]
  Is-swapped
Following bound tyvar t_anC = Doc
newWantedEvVar/cache miss [W] cobox_atV :: Doc ~ [a_aoy]
setEvBind
  ev = cobox_aoz
  tm  = CO Sym cobox_atV
rewriteEqEvidence
  [W] cobox_aoz :: [a_aoy] ~ t_anC
  Doc
  [a_aoy]
  Sym cobox_atV
canEqTyVar2
  t_anC
  [a_aoy]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_atV :: Doc ~ [a_aoy]
  Doc
  Doc
  [a_aoy]
  [a_aoy]
can_eq_nc
  [W] cobox_atV :: Doc ~ [a_aoy]
  [String]
  Doc
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_atW :: String ~ a_aoy
setEvBind
  ev = cobox_atV
  tm  = CO [cobox_atW]_N
canEvNC:eq
  String
  a_aoy
can_eq_nc
  [W] cobox_atW :: String ~ a_aoy
  String
  String
  a_aoy
  a_aoy
can_eq_nc
  [W] cobox_atW :: String ~ a_aoy
  [Char]
  String
  a_aoy
  a_aoy
canEqTyVar
  a_aoy
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_atX :: a_aoy ~ String
setEvBind
  ev = cobox_atW
  tm  = CO Sym cobox_atX
rewriteEqEvidence
  [W] cobox_atW :: String ~ a_aoy
  a_aoy
  String
  Sym cobox_atX
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atX :: a_aoy
                                 ~ String [" a type equality [a_aoy]
                                                             ~
                                                             t_anC " Pretty.hs:(111,5)-(115,38)] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoy := String
  Coercion: a_aoy ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoy := String
setEvBind
  ev = cobox_atX
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aoy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
53[<C:0,F:0>] [W] cobox_atX :: a_aoy ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoC :: [a_aoB]
                                ~ [a_aoy] [" a type equality [a_aoB]
                                                             ~
                                                             [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoC :: [a_aoB]
                                 ~ [a_aoy] [" a type equality [a_aoB]
                                                              ~
                                                              [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoC :: [a_aoB] ~ [a_aoy] [" a type equality [a_aoB]
                                                        ~
                                                        [a_aoy] " Pretty.hs:111:5-14] (CNonCanonical)
canEvNC:eq
  [a_aoB]
  [a_aoy]
can_eq_nc
  [W] cobox_aoC :: [a_aoB] ~ [a_aoy]
  [a_aoB]
  [a_aoB]
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_atY :: a_aoB ~ a_aoy
setEvBind
  ev = cobox_aoC
  tm  = CO [cobox_atY]_N
canEvNC:eq
  a_aoB
  a_aoy
can_eq_nc
  [W] cobox_atY :: a_aoB ~ a_aoy
  a_aoB
  a_aoB
  a_aoy
  a_aoy
canEqTyVar
  a_aoB
  a_aoy
  Not-swapped
Following bound tyvar a_aoy = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_atY :: a_aoB
                                 ~ String [" a type equality [a_aoB]
                                                             ~
                                                             [a_aoy] " Pretty.hs:111:5-14] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoB := String
  Coercion: a_aoB ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoB := String
setEvBind
  ev = cobox_atY
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aoB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
54[<C:0,F:0>] [W] cobox_atY :: a_aoB ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoD :: t_anA
                                ~ [a_aoB] [" a type equality t_anA
                                                             ~
                                                             [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoD :: t_anA
                                 ~ [a_aoB] [" a type equality t_anA
                                                              ~
                                                              [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoD :: t_anA ~ [a_aoB] [" a type equality t_anA
                                                      ~
                                                      [a_aoB] " Pretty.hs:111:10-14] (CNonCanonical)
canEvNC:eq
  t_anA
  [a_aoB]
can_eq_nc
  [W] cobox_aoD :: t_anA ~ [a_aoB]
  t_anA
  t_anA
  [a_aoB]
  [a_aoB]
canEqTyVar
  t_anA
  [a_aoB]
  Not-swapped
Following bound tyvar t_anA = Doc
canEqTyVar2
  t_anA
  [a_aoB]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoD :: Doc ~ [a_aoB]
  Doc
  Doc
  [a_aoB]
  [a_aoB]
can_eq_nc
  [W] cobox_aoD :: Doc ~ [a_aoB]
  [String]
  Doc
  [a_aoB]
  [a_aoB]
newWantedEvVar/cache miss [W] cobox_atZ :: String ~ a_aoB
setEvBind
  ev = cobox_aoD
  tm  = CO [cobox_atZ]_N
canEvNC:eq
  String
  a_aoB
can_eq_nc
  [W] cobox_atZ :: String ~ a_aoB
  String
  String
  a_aoB
  a_aoB
can_eq_nc
  [W] cobox_atZ :: String ~ a_aoB
  [Char]
  String
  a_aoB
  a_aoB
canEqTyVar
  a_aoB
  [Char]
  Is-swapped
Following bound tyvar a_aoB = String
newWantedEvVar/cache miss [W] cobox_au0 :: String ~ String
setEvBind
  ev = cobox_atZ
  tm  = CO Sym cobox_au0
rewriteEqEvidence
  [W] cobox_atZ :: String ~ a_aoB
  String
  String
  Sym cobox_au0
canEqTyVar2
  a_aoB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_au0 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_au0 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_au1 :: Char ~ Char
setEvBind
  ev = cobox_au0
  tm  = CO [cobox_au1]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_au1 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_au1
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoF :: [a_aoE]
                                ~ [a_aoy] [" a type equality [a_aoE]
                                                             ~
                                                             [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoF :: [a_aoE]
                                 ~ [a_aoy] [" a type equality [a_aoE]
                                                              ~
                                                              [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoF :: [a_aoE] ~ [a_aoy] [" a type equality [a_aoE]
                                                        ~
                                                        [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CNonCanonical)
canEvNC:eq
  [a_aoE]
  [a_aoy]
can_eq_nc
  [W] cobox_aoF :: [a_aoE] ~ [a_aoy]
  [a_aoE]
  [a_aoE]
  [a_aoy]
  [a_aoy]
newWantedEvVar/cache miss [W] cobox_au2 :: a_aoE ~ a_aoy
setEvBind
  ev = cobox_aoF
  tm  = CO [cobox_au2]_N
canEvNC:eq
  a_aoE
  a_aoy
can_eq_nc
  [W] cobox_au2 :: a_aoE ~ a_aoy
  a_aoE
  a_aoE
  a_aoy
  a_aoy
canEqTyVar
  a_aoE
  a_aoy
  Not-swapped
Following bound tyvar a_aoy = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_au2 :: a_aoE
                                 ~ String [" a type equality [a_aoE]
                                                             ~
                                                             [a_aoy] " Pretty.hs:(113,5)-(115,38)] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoE := String
  Coercion: a_aoE ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoE := String
setEvBind
  ev = cobox_au2
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aoE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
56[<C:0,F:0>] [W] cobox_au2 :: a_aoE ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoH :: [a_aoG]
                                ~ a_aoE [" a type equality [a_aoG]
                                                           ~
                                                           a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoH :: [a_aoG]
                                 ~ a_aoE [" a type equality [a_aoG]
                                                            ~
                                                            a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoH :: [a_aoG] ~ a_aoE [" a type equality [a_aoG]
                                                      ~
                                                      a_aoE " Pretty.hs:113:7-31] (CNonCanonical)
canEvNC:eq
  [a_aoG]
  a_aoE
can_eq_nc
  [W] cobox_aoH :: [a_aoG] ~ a_aoE
  [a_aoG]
  [a_aoG]
  a_aoE
  a_aoE
canEqTyVar
  a_aoE
  [a_aoG]
  Is-swapped
Following bound tyvar a_aoE = String
newWantedEvVar/cache miss [W] cobox_au3 :: String ~ [a_aoG]
setEvBind
  ev = cobox_aoH
  tm  = CO Sym cobox_au3
rewriteEqEvidence
  [W] cobox_aoH :: [a_aoG] ~ a_aoE
  String
  [a_aoG]
  Sym cobox_au3
canEqTyVar2
  a_aoE
  [a_aoG]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_au3 :: String ~ [a_aoG]
  String
  String
  [a_aoG]
  [a_aoG]
can_eq_nc
  [W] cobox_au3 :: String ~ [a_aoG]
  [Char]
  String
  [a_aoG]
  [a_aoG]
newWantedEvVar/cache miss [W] cobox_au4 :: Char ~ a_aoG
setEvBind
  ev = cobox_au3
  tm  = CO [cobox_au4]_N
canEvNC:eq
  Char
  a_aoG
can_eq_nc
  [W] cobox_au4 :: Char ~ a_aoG
  Char
  Char
  a_aoG
  a_aoG
canEqTyVar
  a_aoG
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_au5 :: a_aoG ~ Char
setEvBind
  ev = cobox_au4
  tm  = CO Sym cobox_au5
rewriteEqEvidence
  [W] cobox_au4 :: Char ~ a_aoG
  a_aoG
  Char
  Sym cobox_au5
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_au5 :: a_aoG
                                 ~ Char [" a type equality [a_aoG]
                                                           ~
                                                           a_aoE " Pretty.hs:113:7-31] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoG := Char
  Coercion: a_aoG ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoG := Char
setEvBind
  ev = cobox_au5
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aoG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
57[<C:0,F:0>] [W] cobox_au5 :: a_aoG ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoJ :: a_aoI
                                ~ [a_aoG] [" a type equality a_aoI
                                                             ~
                                                             [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoJ :: a_aoI
                                 ~ [a_aoG] [" a type equality a_aoI
                                                              ~
                                                              [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoJ :: a_aoI ~ [a_aoG] [" a type equality a_aoI
                                                      ~
                                                      [a_aoG] " Pretty.hs:113:7-16] (CNonCanonical)
canEvNC:eq
  a_aoI
  [a_aoG]
can_eq_nc
  [W] cobox_aoJ :: a_aoI ~ [a_aoG]
  a_aoI
  a_aoI
  [a_aoG]
  [a_aoG]
canEqTyVar
  a_aoI
  [a_aoG]
  Not-swapped
Following bound tyvar a_aoG = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aoJ :: a_aoI
                                 ~ [Char] [" a type equality a_aoI
                                                             ~
                                                             [a_aoG] " Pretty.hs:113:7-16] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoI := [Char]
  Coercion: a_aoI ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoI := [Char]
setEvBind
  ev = cobox_aoJ
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  a_aoI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
58[<C:0,F:0>] [W] cobox_aoJ :: a_aoI ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoK :: t_anA
                                ~ [a_aoI] [" a type equality t_anA
                                                             ~
                                                             [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoK :: t_anA
                                 ~ [a_aoI] [" a type equality t_anA
                                                              ~
                                                              [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoK :: t_anA ~ [a_aoI] [" a type equality t_anA
                                                      ~
                                                      [a_aoI] " Pretty.hs:113:12-16] (CNonCanonical)
canEvNC:eq
  t_anA
  [a_aoI]
can_eq_nc
  [W] cobox_aoK :: t_anA ~ [a_aoI]
  t_anA
  t_anA
  [a_aoI]
  [a_aoI]
canEqTyVar
  t_anA
  [a_aoI]
  Not-swapped
Following bound tyvar t_anA = Doc
canEqTyVar2
  t_anA
  [a_aoI]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoK :: Doc ~ [a_aoI]
  Doc
  Doc
  [a_aoI]
  [a_aoI]
can_eq_nc
  [W] cobox_aoK :: Doc ~ [a_aoI]
  [String]
  Doc
  [a_aoI]
  [a_aoI]
newWantedEvVar/cache miss [W] cobox_au6 :: String ~ a_aoI
setEvBind
  ev = cobox_aoK
  tm  = CO [cobox_au6]_N
canEvNC:eq
  String
  a_aoI
can_eq_nc
  [W] cobox_au6 :: String ~ a_aoI
  String
  String
  a_aoI
  a_aoI
can_eq_nc
  [W] cobox_au6 :: String ~ a_aoI
  [Char]
  String
  a_aoI
  a_aoI
canEqTyVar
  a_aoI
  [Char]
  Is-swapped
Following bound tyvar a_aoI = [Char]
newWantedEvVar/cache miss [W] cobox_au7 :: [Char] ~ String
setEvBind
  ev = cobox_au6
  tm  = CO Sym cobox_au7
rewriteEqEvidence
  [W] cobox_au6 :: String ~ a_aoI
  [Char]
  String
  Sym cobox_au7
canEqTyVar2
  a_aoI
  [Char]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_au7 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_au8 :: Char ~ Char
setEvBind
  ev = cobox_au7
  tm  = CO [cobox_au8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_au8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_au8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoN :: a_aoM
                                ~ [a_aoG] [" a type equality a_aoM
                                                             ~
                                                             [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoN :: a_aoM
                                 ~ [a_aoG] [" a type equality a_aoM
                                                              ~
                                                              [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoN :: a_aoM ~ [a_aoG] [" a type equality a_aoM
                                                      ~
                                                      [a_aoG] " Pretty.hs:113:21-31] (CNonCanonical)
canEvNC:eq
  a_aoM
  [a_aoG]
can_eq_nc
  [W] cobox_aoN :: a_aoM ~ [a_aoG]
  a_aoM
  a_aoM
  [a_aoG]
  [a_aoG]
canEqTyVar
  a_aoM
  [a_aoG]
  Not-swapped
Following bound tyvar a_aoG = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aoN :: a_aoM
                                 ~ [Char] [" a type equality a_aoM
                                                             ~
                                                             [a_aoG] " Pretty.hs:113:21-31] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoM := [Char]
  Coercion: a_aoM ~ [Char]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoM := [Char]
setEvBind
  ev = cobox_aoN
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  a_aoM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
60[<C:0,F:0>] [W] cobox_aoN :: a_aoM ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoO :: t_anB
                                ~ [a_aoM] [" a type equality t_anB
                                                             ~
                                                             [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoO :: t_anB
                                 ~ [a_aoM] [" a type equality t_anB
                                                              ~
                                                              [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoO :: t_anB ~ [a_aoM] [" a type equality t_anB
                                                      ~
                                                      [a_aoM] " Pretty.hs:113:26-31] (CNonCanonical)
canEvNC:eq
  t_anB
  [a_aoM]
can_eq_nc
  [W] cobox_aoO :: t_anB ~ [a_aoM]
  t_anB
  t_anB
  [a_aoM]
  [a_aoM]
canEqTyVar
  t_anB
  [a_aoM]
  Not-swapped
Following bound tyvar t_anB = Doc
canEqTyVar2
  t_anB
  [a_aoM]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoO :: Doc ~ [a_aoM]
  Doc
  Doc
  [a_aoM]
  [a_aoM]
can_eq_nc
  [W] cobox_aoO :: Doc ~ [a_aoM]
  [String]
  Doc
  [a_aoM]
  [a_aoM]
newWantedEvVar/cache miss [W] cobox_au9 :: String ~ a_aoM
setEvBind
  ev = cobox_aoO
  tm  = CO [cobox_au9]_N
canEvNC:eq
  String
  a_aoM
can_eq_nc
  [W] cobox_au9 :: String ~ a_aoM
  String
  String
  a_aoM
  a_aoM
can_eq_nc
  [W] cobox_au9 :: String ~ a_aoM
  [Char]
  String
  a_aoM
  a_aoM
canEqTyVar
  a_aoM
  [Char]
  Is-swapped
Following bound tyvar a_aoM = [Char]
newWantedEvVar/cache miss [W] cobox_aua :: [Char] ~ String
setEvBind
  ev = cobox_au9
  tm  = CO Sym cobox_aua
rewriteEqEvidence
  [W] cobox_au9 :: String ~ a_aoM
  [Char]
  String
  Sym cobox_aua
canEqTyVar2
  a_aoM
  [Char]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_aua :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aub :: Char ~ Char
setEvBind
  ev = cobox_aua
  tm  = CO [cobox_aub]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aub :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aub
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoP :: t_anq
                                ~ [a_aoE] [" a type equality t_anq
                                                             ~
                                                             [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoP :: t_anq
                                 ~ [a_aoE] [" a type equality t_anq
                                                              ~
                                                              [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoP :: t_anq ~ [a_aoE] [" a type equality t_anq
                                                      ~
                                                      [a_aoE] " Pretty.hs:115:5-38] (CNonCanonical)
canEvNC:eq
  t_anq
  [a_aoE]
can_eq_nc
  [W] cobox_aoP :: t_anq ~ [a_aoE]
  t_anq
  t_anq
  [a_aoE]
  [a_aoE]
canEqTyVar
  t_anq
  [a_aoE]
  Not-swapped
Following bound tyvar t_anq = Doc
canEqTyVar2
  t_anq
  [a_aoE]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoP :: Doc ~ [a_aoE]
  Doc
  Doc
  [a_aoE]
  [a_aoE]
can_eq_nc
  [W] cobox_aoP :: Doc ~ [a_aoE]
  [String]
  Doc
  [a_aoE]
  [a_aoE]
newWantedEvVar/cache miss [W] cobox_auc :: String ~ a_aoE
setEvBind
  ev = cobox_aoP
  tm  = CO [cobox_auc]_N
canEvNC:eq
  String
  a_aoE
can_eq_nc
  [W] cobox_auc :: String ~ a_aoE
  String
  String
  a_aoE
  a_aoE
can_eq_nc
  [W] cobox_auc :: String ~ a_aoE
  [Char]
  String
  a_aoE
  a_aoE
canEqTyVar
  a_aoE
  [Char]
  Is-swapped
Following bound tyvar a_aoE = String
newWantedEvVar/cache miss [W] cobox_aud :: String ~ String
setEvBind
  ev = cobox_auc
  tm  = CO Sym cobox_aud
rewriteEqEvidence
  [W] cobox_auc :: String ~ a_aoE
  String
  String
  Sym cobox_aud
canEqTyVar2
  a_aoE
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aud :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aud :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aue :: Char ~ Char
setEvBind
  ev = cobox_aud
  tm  = CO [cobox_aue]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aue :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aue
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoQ :: t_aoq
                                ~ t_ano [" a type equality t_aoq
                                                           ~
                                                           t_ano " Pretty.hs:115:14-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoQ :: t_aoq
                                 ~ t_ano [" a type equality t_aoq
                                                            ~
                                                            t_ano " Pretty.hs:115:14-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoQ :: t_aoq ~ t_ano [" a type equality t_aoq
                                                    ~
                                                    t_ano " Pretty.hs:115:14-24] (CNonCanonical)
canEvNC:eq
  t_aoq
  t_ano
can_eq_nc
  [W] cobox_aoQ :: t_aoq ~ t_ano
  t_aoq
  t_aoq
  t_ano
  t_ano
canEqTyVar
  t_aoq
  t_ano
  Not-swapped
Following bound tyvar t_aoq = Int
canEqTyVar2
  t_aoq
  t_ano
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aoQ :: Int ~ t_ano
  Int
  Int
  t_ano
  t_ano
canEqTyVar
  t_ano
  Int
  Is-swapped
Following bound tyvar t_ano = Int
newWantedEvVar/cache miss [W] cobox_auf :: Int ~ Int
setEvBind
  ev = cobox_aoQ
  tm  = CO Sym cobox_auf
rewriteEqEvidence
  [W] cobox_aoQ :: Int ~ t_ano
  Int
  Int
  Sym cobox_auf
canEqTyVar2
  t_ano
  Int
  Is-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_auf :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_auf
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoT :: [a_aoS]
                                ~ t_anp [" a type equality [a_aoS]
                                                           ~
                                                           t_anp " Pretty.hs:115:27-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoT :: [a_aoS]
                                 ~ t_anp [" a type equality [a_aoS]
                                                            ~
                                                            t_anp " Pretty.hs:115:27-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoT :: [a_aoS] ~ t_anp [" a type equality [a_aoS]
                                                      ~
                                                      t_anp " Pretty.hs:115:27-37] (CNonCanonical)
canEvNC:eq
  [a_aoS]
  t_anp
can_eq_nc
  [W] cobox_aoT :: [a_aoS] ~ t_anp
  [a_aoS]
  [a_aoS]
  t_anp
  t_anp
canEqTyVar
  t_anp
  [a_aoS]
  Is-swapped
Following bound tyvar t_anp = Doc
newWantedEvVar/cache miss [W] cobox_aug :: Doc ~ [a_aoS]
setEvBind
  ev = cobox_aoT
  tm  = CO Sym cobox_aug
rewriteEqEvidence
  [W] cobox_aoT :: [a_aoS] ~ t_anp
  Doc
  [a_aoS]
  Sym cobox_aug
canEqTyVar2
  t_anp
  [a_aoS]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aug :: Doc ~ [a_aoS]
  Doc
  Doc
  [a_aoS]
  [a_aoS]
can_eq_nc
  [W] cobox_aug :: Doc ~ [a_aoS]
  [String]
  Doc
  [a_aoS]
  [a_aoS]
newWantedEvVar/cache miss [W] cobox_auh :: String ~ a_aoS
setEvBind
  ev = cobox_aug
  tm  = CO [cobox_auh]_N
canEvNC:eq
  String
  a_aoS
can_eq_nc
  [W] cobox_auh :: String ~ a_aoS
  String
  String
  a_aoS
  a_aoS
can_eq_nc
  [W] cobox_auh :: String ~ a_aoS
  [Char]
  String
  a_aoS
  a_aoS
canEqTyVar
  a_aoS
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aui :: a_aoS ~ String
setEvBind
  ev = cobox_auh
  tm  = CO Sym cobox_aui
rewriteEqEvidence
  [W] cobox_auh :: String ~ a_aoS
  a_aoS
  String
  Sym cobox_aui
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aui :: a_aoS
                                 ~ String [" a type equality [a_aoS]
                                                             ~
                                                             t_anp " Pretty.hs:115:27-37] (CTyEqCan)
Sneaky unification:
  Unifies: a_aoS := String
  Coercion: a_aoS ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aoS := String
setEvBind
  ev = cobox_aui
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aoS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
64[<C:0,F:0>] [W] cobox_aui :: a_aoS ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoU :: t_anB
                                ~ [a_aoS] [" a type equality t_anB
                                                             ~
                                                             [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoU :: t_anB
                                 ~ [a_aoS] [" a type equality t_anB
                                                              ~
                                                              [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoU :: t_anB ~ [a_aoS] [" a type equality t_anB
                                                      ~
                                                      [a_aoS] " Pretty.hs:115:32-37] (CNonCanonical)
canEvNC:eq
  t_anB
  [a_aoS]
can_eq_nc
  [W] cobox_aoU :: t_anB ~ [a_aoS]
  t_anB
  t_anB
  [a_aoS]
  [a_aoS]
canEqTyVar
  t_anB
  [a_aoS]
  Not-swapped
Following bound tyvar t_anB = Doc
canEqTyVar2
  t_anB
  [a_aoS]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoU :: Doc ~ [a_aoS]
  Doc
  Doc
  [a_aoS]
  [a_aoS]
can_eq_nc
  [W] cobox_aoU :: Doc ~ [a_aoS]
  [String]
  Doc
  [a_aoS]
  [a_aoS]
newWantedEvVar/cache miss [W] cobox_auj :: String ~ a_aoS
setEvBind
  ev = cobox_aoU
  tm  = CO [cobox_auj]_N
canEvNC:eq
  String
  a_aoS
can_eq_nc
  [W] cobox_auj :: String ~ a_aoS
  String
  String
  a_aoS
  a_aoS
can_eq_nc
  [W] cobox_auj :: String ~ a_aoS
  [Char]
  String
  a_aoS
  a_aoS
canEqTyVar
  a_aoS
  [Char]
  Is-swapped
Following bound tyvar a_aoS = String
newWantedEvVar/cache miss [W] cobox_auk :: String ~ String
setEvBind
  ev = cobox_auj
  tm  = CO Sym cobox_auk
rewriteEqEvidence
  [W] cobox_auj :: String ~ a_aoS
  String
  String
  Sym cobox_auk
canEqTyVar2
  a_aoS
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_auk :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_auk :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aul :: Char ~ Char
setEvBind
  ev = cobox_auk
  tm  = CO [cobox_aul]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aul :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aul
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoW :: t_anC
                                ~ t_an4 [" a type equality t_anC
                                                           ~
                                                           t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoW :: t_anC
                                 ~ t_an4 [" a type equality t_anC
                                                            ~
                                                            t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoW :: t_anC ~ t_an4 [" a type equality t_anC
                                                    ~
                                                    t_an4 " Pretty.hs:141:17-40] (CNonCanonical)
canEvNC:eq
  t_anC
  t_an4
can_eq_nc
  [W] cobox_aoW :: t_anC ~ t_an4
  t_anC
  t_anC
  t_an4
  t_an4
canEqTyVar
  t_anC
  t_an4
  Not-swapped
Following bound tyvar t_anC = Doc
canEqTyVar2
  t_anC
  t_an4
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoW :: Doc ~ t_an4
  Doc
  Doc
  t_an4
  t_an4
can_eq_nc
  [W] cobox_aoW :: Doc ~ t_an4
  [String]
  Doc
  t_an4
  t_an4
canEqTyVar
  t_an4
  [String]
  Is-swapped
Following bound tyvar t_an4 = Doc
newWantedEvVar/cache miss [W] cobox_aum :: Doc ~ Doc
setEvBind
  ev = cobox_aoW
  tm  = CO Sym cobox_aum
rewriteEqEvidence
  [W] cobox_aoW :: Doc ~ t_an4
  Doc
  Doc
  Sym cobox_aum
canEqTyVar2
  t_an4
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aum :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aum :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aun :: String ~ String
setEvBind
  ev = cobox_aum
  tm  = CO [cobox_aun]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aun :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aun :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aun :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auo :: Char ~ Char
setEvBind
  ev = cobox_aun
  tm  = CO [cobox_auo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoX :: t_an2
                                ~ t_anA [" a type equality t_an2
                                                           ~
                                                           t_anA " Pretty.hs:141:17-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoX :: t_an2
                                 ~ t_anA [" a type equality t_an2
                                                            ~
                                                            t_anA " Pretty.hs:141:17-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoX :: t_an2 ~ t_anA [" a type equality t_an2
                                                    ~
                                                    t_anA " Pretty.hs:141:17-20] (CNonCanonical)
canEvNC:eq
  t_an2
  t_anA
can_eq_nc
  [W] cobox_aoX :: t_an2 ~ t_anA
  t_an2
  t_an2
  t_anA
  t_anA
canEqTyVar
  t_an2
  t_anA
  Not-swapped
Following bound tyvar t_an2 = Doc
canEqTyVar2
  t_an2
  t_anA
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoX :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_aoX :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_aup :: Doc ~ Doc
setEvBind
  ev = cobox_aoX
  tm  = CO Sym cobox_aup
rewriteEqEvidence
  [W] cobox_aoX :: Doc ~ t_anA
  Doc
  Doc
  Sym cobox_aup
canEqTyVar2
  t_anA
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aup :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aup :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auq :: String ~ String
setEvBind
  ev = cobox_aup
  tm  = CO [cobox_auq]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auq :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auq :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aur :: Char ~ Char
setEvBind
  ev = cobox_auq
  tm  = CO [cobox_aur]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aur :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aur
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aoY :: t_anq
                                ~ t_anB [" a type equality t_anq
                                                           ~
                                                           t_anB " Pretty.hs:141:26-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aoY :: t_anq
                                 ~ t_anB [" a type equality t_anq
                                                            ~
                                                            t_anB " Pretty.hs:141:26-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aoY :: t_anq ~ t_anB [" a type equality t_anq
                                                    ~
                                                    t_anB " Pretty.hs:141:26-40] (CNonCanonical)
canEvNC:eq
  t_anq
  t_anB
can_eq_nc
  [W] cobox_aoY :: t_anq ~ t_anB
  t_anq
  t_anq
  t_anB
  t_anB
canEqTyVar
  t_anq
  t_anB
  Not-swapped
Following bound tyvar t_anq = Doc
canEqTyVar2
  t_anq
  t_anB
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aoY :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_aoY :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_aus :: Doc ~ Doc
setEvBind
  ev = cobox_aoY
  tm  = CO Sym cobox_aus
rewriteEqEvidence
  [W] cobox_aoY :: Doc ~ t_anB
  Doc
  Doc
  Sym cobox_aus
canEqTyVar2
  t_anB
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aus :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aus :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aut :: String ~ String
setEvBind
  ev = cobox_aus
  tm  = CO [cobox_aut]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aut :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aut :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aut :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auu :: Char ~ Char
setEvBind
  ev = cobox_aut
  tm  = CO [cobox_auu]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auu :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auu
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arw :: (Integer -> a_aru)
                                ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                        ~
                                                                        Integer
                                                                        -> t_ano " Pretty.hs:141:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arw :: (Integer -> a_aru)
                                 ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                                         ~
                                                                         Integer
                                                                         -> t_ano " Pretty.hs:141:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arw :: (Integer -> a_aru)
                   ~ (Integer -> t_ano) [" a type equality Integer -> a_aru
                                                           ~
                                                           Integer
                                                           -> t_ano " Pretty.hs:141:35] (CNonCanonical)
canEvNC:eq
  Integer -> a_aru
  Integer -> t_ano
can_eq_nc
  [W] cobox_arw :: (Integer -> a_aru) ~ (Integer -> t_ano)
  Integer -> a_aru
  Integer -> a_aru
  Integer -> t_ano
  Integer -> t_ano
newWantedEvVar/cache miss [W] cobox_auv :: Integer ~ Integer
newWantedEvVar/cache miss [W] cobox_auw :: a_aru ~ t_ano
setEvBind
  ev = cobox_arw
  tm  = CO cobox_auv -> cobox_auw
canEvNC:eq
  Integer
  Integer
can_eq_nc
  [W] cobox_auv :: Integer ~ Integer
  Integer
  Integer
  Integer
  Integer
setEvBind
  ev = cobox_auv
  tm  = CO <Integer>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_auw :: a_aru
                                ~ t_ano [" a type equality Integer -> a_aru
                                                           ~
                                                           Integer
                                                           -> t_ano " Pretty.hs:141:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_auw :: a_aru
                                 ~ t_ano [" a type equality Integer -> a_aru
                                                            ~
                                                            Integer
                                                            -> t_ano " Pretty.hs:141:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_auw :: a_aru ~ t_ano [" a type equality Integer -> a_aru
                                                    ~
                                                    Integer
                                                    -> t_ano " Pretty.hs:141:35] (CNonCanonical)
canEvNC:eq
  a_aru
  t_ano
can_eq_nc
  [W] cobox_auw :: a_aru ~ t_ano
  a_aru
  a_aru
  t_ano
  t_ano
canEqTyVar
  a_aru
  t_ano
  Not-swapped
Following bound tyvar t_ano = Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auw :: a_aru
                                 ~ Int [" a type equality Integer -> a_aru
                                                          ~
                                                          Integer
                                                          -> t_ano " Pretty.hs:141:35] (CTyEqCan)
Sneaky unification:
  Unifies: a_aru := Int
  Coercion: a_aru ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aru := Int
setEvBind
  ev = cobox_auw
  tm  = CO <Int>_N
kickOutRewritable
  tv =  a_aru
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
70[<C:0,F:0>] [W] cobox_auw :: a_aru ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arx :: t_an3
                                ~ t_anp [" a type equality t_an3
                                                           ~
                                                           t_anp " Pretty.hs:141:37-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arx :: t_an3
                                 ~ t_anp [" a type equality t_an3
                                                            ~
                                                            t_anp " Pretty.hs:141:37-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arx :: t_an3 ~ t_anp [" a type equality t_an3
                                                    ~
                                                    t_anp " Pretty.hs:141:37-40] (CNonCanonical)
canEvNC:eq
  t_an3
  t_anp
can_eq_nc
  [W] cobox_arx :: t_an3 ~ t_anp
  t_an3
  t_an3
  t_anp
  t_anp
canEqTyVar
  t_an3
  t_anp
  Not-swapped
Following bound tyvar t_an3 = Doc
canEqTyVar2
  t_an3
  t_anp
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arx :: Doc ~ t_anp
  Doc
  Doc
  t_anp
  t_anp
can_eq_nc
  [W] cobox_arx :: Doc ~ t_anp
  [String]
  Doc
  t_anp
  t_anp
canEqTyVar
  t_anp
  [String]
  Is-swapped
Following bound tyvar t_anp = Doc
newWantedEvVar/cache miss [W] cobox_aux :: Doc ~ Doc
setEvBind
  ev = cobox_arx
  tm  = CO Sym cobox_aux
rewriteEqEvidence
  [W] cobox_arx :: Doc ~ t_anp
  Doc
  Doc
  Sym cobox_aux
canEqTyVar2
  t_anp
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aux :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aux :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auy :: String ~ String
setEvBind
  ev = cobox_aux
  tm  = CO [cobox_auy]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auy :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auy :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auy :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auz :: Char ~ Char
setEvBind
  ev = cobox_auy
  tm  = CO [cobox_auz]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arA :: [t_arz]
                                ~ t_anH [" a type equality [t_arz]
                                                           ~
                                                           t_anH " Pretty.hs:103:5-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arA :: [t_arz]
                                 ~ t_anH [" a type equality [t_arz]
                                                            ~
                                                            t_anH " Pretty.hs:103:5-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arA :: [t_arz] ~ t_anH [" a type equality [t_arz]
                                                      ~
                                                      t_anH " Pretty.hs:103:5-14] (CNonCanonical)
canEvNC:eq
  [t_arz]
  t_anH
can_eq_nc
  [W] cobox_arA :: [t_arz] ~ t_anH
  [t_arz]
  [t_arz]
  t_anH
  t_anH
canEqTyVar
  t_anH
  [t_arz]
  Is-swapped
Following bound tyvar t_anH = Doc
newWantedEvVar/cache miss [W] cobox_auA :: Doc ~ [t_arz]
setEvBind
  ev = cobox_arA
  tm  = CO Sym cobox_auA
rewriteEqEvidence
  [W] cobox_arA :: [t_arz] ~ t_anH
  Doc
  [t_arz]
  Sym cobox_auA
canEqTyVar2
  t_anH
  [t_arz]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auA :: Doc ~ [t_arz]
  Doc
  Doc
  [t_arz]
  [t_arz]
can_eq_nc
  [W] cobox_auA :: Doc ~ [t_arz]
  [String]
  Doc
  [t_arz]
  [t_arz]
newWantedEvVar/cache miss [W] cobox_auB :: String ~ t_arz
setEvBind
  ev = cobox_auA
  tm  = CO [cobox_auB]_N
canEvNC:eq
  String
  t_arz
can_eq_nc
  [W] cobox_auB :: String ~ t_arz
  String
  String
  t_arz
  t_arz
can_eq_nc
  [W] cobox_auB :: String ~ t_arz
  [Char]
  String
  t_arz
  t_arz
canEqTyVar
  t_arz
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auC :: t_arz ~ String
setEvBind
  ev = cobox_auB
  tm  = CO Sym cobox_auC
rewriteEqEvidence
  [W] cobox_auB :: String ~ t_arz
  t_arz
  String
  Sym cobox_auC
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auC :: t_arz
                                 ~ String [" a type equality [t_arz]
                                                             ~
                                                             t_anH " Pretty.hs:103:5-14] (CTyEqCan)
Sneaky unification:
  Unifies: t_arz := String
  Coercion: t_arz ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arz := String
setEvBind
  ev = cobox_auC
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_arz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
72[<C:0,F:0>] [W] cobox_auC :: t_arz ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arB :: t_anG
                                ~ t_arz [" a type equality t_anG
                                                           ~
                                                           t_arz " Pretty.hs:103:7-12] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arB :: t_anG
                                 ~ t_arz [" a type equality t_anG
                                                            ~
                                                            t_arz " Pretty.hs:103:7-12] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arB :: t_anG ~ t_arz [" a type equality t_anG
                                                    ~
                                                    t_arz " Pretty.hs:103:7-12] (CNonCanonical)
canEvNC:eq
  t_anG
  t_arz
can_eq_nc
  [W] cobox_arB :: t_anG ~ t_arz
  t_anG
  t_anG
  t_arz
  t_arz
canEqTyVar
  t_anG
  t_arz
  Not-swapped
Following bound tyvar t_anG = String
canEqTyVar2
  t_anG
  t_arz
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_arB :: String ~ t_arz
  String
  String
  t_arz
  t_arz
can_eq_nc
  [W] cobox_arB :: String ~ t_arz
  [Char]
  String
  t_arz
  t_arz
canEqTyVar
  t_arz
  [Char]
  Is-swapped
Following bound tyvar t_arz = String
newWantedEvVar/cache miss [W] cobox_auD :: String ~ String
setEvBind
  ev = cobox_arB
  tm  = CO Sym cobox_auD
rewriteEqEvidence
  [W] cobox_arB :: String ~ t_arz
  String
  String
  Sym cobox_auD
canEqTyVar2
  t_arz
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_auD :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_auD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auE :: Char ~ Char
setEvBind
  ev = cobox_auD
  tm  = CO [cobox_auE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arE :: [t_arD]
                                ~ t_anK [" a type equality [t_arD]
                                                           ~
                                                           t_anK " Pretty.hs:99:8-9] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arE :: [t_arD]
                                 ~ t_anK [" a type equality [t_arD]
                                                            ~
                                                            t_anK " Pretty.hs:99:8-9] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arE :: [t_arD] ~ t_anK [" a type equality [t_arD]
                                                      ~
                                                      t_anK " Pretty.hs:99:8-9] (CNonCanonical)
canEvNC:eq
  [t_arD]
  t_anK
can_eq_nc
  [W] cobox_arE :: [t_arD] ~ t_anK
  [t_arD]
  [t_arD]
  t_anK
  t_anK
canEqTyVar
  t_anK
  [t_arD]
  Is-swapped
Following bound tyvar t_anK = Doc
newWantedEvVar/cache miss [W] cobox_auF :: Doc ~ [t_arD]
setEvBind
  ev = cobox_arE
  tm  = CO Sym cobox_auF
rewriteEqEvidence
  [W] cobox_arE :: [t_arD] ~ t_anK
  Doc
  [t_arD]
  Sym cobox_auF
canEqTyVar2
  t_anK
  [t_arD]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auF :: Doc ~ [t_arD]
  Doc
  Doc
  [t_arD]
  [t_arD]
can_eq_nc
  [W] cobox_auF :: Doc ~ [t_arD]
  [String]
  Doc
  [t_arD]
  [t_arD]
newWantedEvVar/cache miss [W] cobox_auG :: String ~ t_arD
setEvBind
  ev = cobox_auF
  tm  = CO [cobox_auG]_N
canEvNC:eq
  String
  t_arD
can_eq_nc
  [W] cobox_auG :: String ~ t_arD
  String
  String
  t_arD
  t_arD
can_eq_nc
  [W] cobox_auG :: String ~ t_arD
  [Char]
  String
  t_arD
  t_arD
canEqTyVar
  t_arD
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auH :: t_arD ~ String
setEvBind
  ev = cobox_auG
  tm  = CO Sym cobox_auH
rewriteEqEvidence
  [W] cobox_auG :: String ~ t_arD
  t_arD
  String
  Sym cobox_auH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auH :: t_arD
                                 ~ String [" a type equality [t_arD]
                                                             ~
                                                             t_anK " Pretty.hs:99:8-9] (CTyEqCan)
Sneaky unification:
  Unifies: t_arD := String
  Coercion: t_arD ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arD := String
setEvBind
  ev = cobox_auH
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_arD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
74[<C:0,F:0>] [W] cobox_auH :: t_arD ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arH :: [t_arG]
                                ~ t_amY [" a type equality [t_arG]
                                                           ~
                                                           t_amY " Pretty.hs:144:12-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arH :: [t_arG]
                                 ~ t_amY [" a type equality [t_arG]
                                                            ~
                                                            t_amY " Pretty.hs:144:12-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arH :: [t_arG] ~ t_amY [" a type equality [t_arG]
                                                      ~
                                                      t_amY " Pretty.hs:144:12-13] (CNonCanonical)
canEvNC:eq
  [t_arG]
  t_amY
can_eq_nc
  [W] cobox_arH :: [t_arG] ~ t_amY
  [t_arG]
  [t_arG]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [t_arG]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_auI :: [Doc] ~ [t_arG]
setEvBind
  ev = cobox_arH
  tm  = CO Sym cobox_auI
rewriteEqEvidence
  [W] cobox_arH :: [t_arG] ~ t_amY
  [Doc]
  [t_arG]
  Sym cobox_auI
canEqTyVar2
  t_amY
  [t_arG]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_auI :: [Doc] ~ [t_arG]
  [Doc]
  [Doc]
  [t_arG]
  [t_arG]
newWantedEvVar/cache miss [W] cobox_auJ :: Doc ~ t_arG
setEvBind
  ev = cobox_auI
  tm  = CO [cobox_auJ]_N
canEvNC:eq
  Doc
  t_arG
can_eq_nc
  [W] cobox_auJ :: Doc ~ t_arG
  Doc
  Doc
  t_arG
  t_arG
can_eq_nc
  [W] cobox_auJ :: Doc ~ t_arG
  [String]
  Doc
  t_arG
  t_arG
canEqTyVar
  t_arG
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auK :: t_arG ~ Doc
setEvBind
  ev = cobox_auJ
  tm  = CO Sym cobox_auK
rewriteEqEvidence
  [W] cobox_auJ :: Doc ~ t_arG
  t_arG
  Doc
  Sym cobox_auK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auK :: t_arG
                                 ~ Doc [" a type equality [t_arG]
                                                          ~
                                                          t_amY " Pretty.hs:144:12-13] (CTyEqCan)
Sneaky unification:
  Unifies: t_arG := Doc
  Coercion: t_arG ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arG := Doc
setEvBind
  ev = cobox_auK
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_arG
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
75[<C:0,F:0>] [W] cobox_auK :: t_arG ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arI :: t_anK
                                ~ t_amZ [" a type equality t_anK
                                                           ~
                                                           t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arI :: t_anK
                                 ~ t_amZ [" a type equality t_anK
                                                            ~
                                                            t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arI :: t_anK ~ t_amZ [" a type equality t_anK
                                                    ~
                                                    t_amZ " Pretty.hs:144:17-20] (CNonCanonical)
canEvNC:eq
  t_anK
  t_amZ
can_eq_nc
  [W] cobox_arI :: t_anK ~ t_amZ
  t_anK
  t_anK
  t_amZ
  t_amZ
canEqTyVar
  t_anK
  t_amZ
  Not-swapped
Following bound tyvar t_anK = Doc
canEqTyVar2
  t_anK
  t_amZ
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arI :: Doc ~ t_amZ
  Doc
  Doc
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_arI :: Doc ~ t_amZ
  [String]
  Doc
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [String]
  Is-swapped
Following bound tyvar t_amZ = Doc
newWantedEvVar/cache miss [W] cobox_auL :: Doc ~ Doc
setEvBind
  ev = cobox_arI
  tm  = CO Sym cobox_auL
rewriteEqEvidence
  [W] cobox_arI :: Doc ~ t_amZ
  Doc
  Doc
  Sym cobox_auL
canEqTyVar2
  t_amZ
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auL :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_auL :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auM :: String ~ String
setEvBind
  ev = cobox_auL
  tm  = CO [cobox_auM]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auM :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auM :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auM :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auN :: Char ~ Char
setEvBind
  ev = cobox_auM
  tm  = CO [cobox_auN]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arK :: [t_arJ]
                                ~ t_amY [" a type equality [t_arJ]
                                                           ~
                                                           t_amY " Pretty.hs:145:12-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arK :: [t_arJ]
                                 ~ t_amY [" a type equality [t_arJ]
                                                            ~
                                                            t_amY " Pretty.hs:145:12-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arK :: [t_arJ] ~ t_amY [" a type equality [t_arJ]
                                                      ~
                                                      t_amY " Pretty.hs:145:12-14] (CNonCanonical)
canEvNC:eq
  [t_arJ]
  t_amY
can_eq_nc
  [W] cobox_arK :: [t_arJ] ~ t_amY
  [t_arJ]
  [t_arJ]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [t_arJ]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_auO :: [Doc] ~ [t_arJ]
setEvBind
  ev = cobox_arK
  tm  = CO Sym cobox_auO
rewriteEqEvidence
  [W] cobox_arK :: [t_arJ] ~ t_amY
  [Doc]
  [t_arJ]
  Sym cobox_auO
canEqTyVar2
  t_amY
  [t_arJ]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_auO :: [Doc] ~ [t_arJ]
  [Doc]
  [Doc]
  [t_arJ]
  [t_arJ]
newWantedEvVar/cache miss [W] cobox_auP :: Doc ~ t_arJ
setEvBind
  ev = cobox_auO
  tm  = CO [cobox_auP]_N
canEvNC:eq
  Doc
  t_arJ
can_eq_nc
  [W] cobox_auP :: Doc ~ t_arJ
  Doc
  Doc
  t_arJ
  t_arJ
can_eq_nc
  [W] cobox_auP :: Doc ~ t_arJ
  [String]
  Doc
  t_arJ
  t_arJ
canEqTyVar
  t_arJ
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auQ :: t_arJ ~ Doc
setEvBind
  ev = cobox_auP
  tm  = CO Sym cobox_auQ
rewriteEqEvidence
  [W] cobox_auP :: Doc ~ t_arJ
  t_arJ
  Doc
  Sym cobox_auQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auQ :: t_arJ
                                 ~ Doc [" a type equality [t_arJ]
                                                          ~
                                                          t_amY " Pretty.hs:145:12-14] (CTyEqCan)
Sneaky unification:
  Unifies: t_arJ := Doc
  Coercion: t_arJ ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arJ := Doc
setEvBind
  ev = cobox_auQ
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_arJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
77[<C:0,F:0>] [W] cobox_auQ :: t_arJ ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arL :: t_arJ
                                ~ t_amZ [" a type equality t_arJ
                                                           ~
                                                           t_amZ " Pretty.hs:145:18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arL :: t_arJ
                                 ~ t_amZ [" a type equality t_arJ
                                                            ~
                                                            t_amZ " Pretty.hs:145:18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arL :: t_arJ ~ t_amZ [" a type equality t_arJ
                                                    ~
                                                    t_amZ " Pretty.hs:145:18] (CNonCanonical)
canEvNC:eq
  t_arJ
  t_amZ
can_eq_nc
  [W] cobox_arL :: t_arJ ~ t_amZ
  t_arJ
  t_arJ
  t_amZ
  t_amZ
canEqTyVar
  t_arJ
  t_amZ
  Not-swapped
Following bound tyvar t_arJ = Doc
canEqTyVar2
  t_arJ
  t_amZ
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arL :: Doc ~ t_amZ
  Doc
  Doc
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_arL :: Doc ~ t_amZ
  [String]
  Doc
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [String]
  Is-swapped
Following bound tyvar t_amZ = Doc
newWantedEvVar/cache miss [W] cobox_auR :: Doc ~ Doc
setEvBind
  ev = cobox_arL
  tm  = CO Sym cobox_auR
rewriteEqEvidence
  [W] cobox_arL :: Doc ~ t_amZ
  Doc
  Doc
  Sym cobox_auR
canEqTyVar2
  t_amZ
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auR :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_auR :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auS :: String ~ String
setEvBind
  ev = cobox_auR
  tm  = CO [cobox_auS]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auS :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auS :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auS :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auT :: Char ~ Char
setEvBind
  ev = cobox_auS
  tm  = CO [cobox_auT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arN :: [t_arM]
                                ~ t_amY [" a type equality [t_arM]
                                                           ~
                                                           t_amY " Pretty.hs:146:13-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arN :: [t_arM]
                                 ~ t_amY [" a type equality [t_arM]
                                                            ~
                                                            t_amY " Pretty.hs:146:13-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arN :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                      ~
                                                      t_amY " Pretty.hs:146:13-16] (CNonCanonical)
canEvNC:eq
  [t_arM]
  t_amY
can_eq_nc
  [W] cobox_arN :: [t_arM] ~ t_amY
  [t_arM]
  [t_arM]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [t_arM]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_auU :: [Doc] ~ [t_arM]
setEvBind
  ev = cobox_arN
  tm  = CO Sym cobox_auU
rewriteEqEvidence
  [W] cobox_arN :: [t_arM] ~ t_amY
  [Doc]
  [t_arM]
  Sym cobox_auU
canEqTyVar2
  t_amY
  [t_arM]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_auU :: [Doc] ~ [t_arM]
  [Doc]
  [Doc]
  [t_arM]
  [t_arM]
newWantedEvVar/cache miss [W] cobox_auV :: Doc ~ t_arM
setEvBind
  ev = cobox_auU
  tm  = CO [cobox_auV]_N
canEvNC:eq
  Doc
  t_arM
can_eq_nc
  [W] cobox_auV :: Doc ~ t_arM
  Doc
  Doc
  t_arM
  t_arM
can_eq_nc
  [W] cobox_auV :: Doc ~ t_arM
  [String]
  Doc
  t_arM
  t_arM
canEqTyVar
  t_arM
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_auW :: t_arM ~ Doc
setEvBind
  ev = cobox_auV
  tm  = CO Sym cobox_auW
rewriteEqEvidence
  [W] cobox_auV :: Doc ~ t_arM
  t_arM
  Doc
  Sym cobox_auW
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_auW :: t_arM
                                 ~ Doc [" a type equality [t_arM]
                                                          ~
                                                          t_amY " Pretty.hs:146:13-16] (CTyEqCan)
Sneaky unification:
  Unifies: t_arM := Doc
  Coercion: t_arM ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_arM := Doc
setEvBind
  ev = cobox_auW
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_arM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
79[<C:0,F:0>] [W] cobox_auW :: t_arM ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arO :: t_an4
                                ~ t_amZ [" a type equality t_an4
                                                           ~
                                                           t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arO :: t_an4
                                 ~ t_amZ [" a type equality t_an4
                                                            ~
                                                            t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arO :: t_an4 ~ t_amZ [" a type equality t_an4
                                                    ~
                                                    t_amZ " Pretty.hs:146:21-53] (CNonCanonical)
canEvNC:eq
  t_an4
  t_amZ
can_eq_nc
  [W] cobox_arO :: t_an4 ~ t_amZ
  t_an4
  t_an4
  t_amZ
  t_amZ
canEqTyVar
  t_an4
  t_amZ
  Not-swapped
Following bound tyvar t_an4 = Doc
canEqTyVar2
  t_an4
  t_amZ
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arO :: Doc ~ t_amZ
  Doc
  Doc
  t_amZ
  t_amZ
can_eq_nc
  [W] cobox_arO :: Doc ~ t_amZ
  [String]
  Doc
  t_amZ
  t_amZ
canEqTyVar
  t_amZ
  [String]
  Is-swapped
Following bound tyvar t_amZ = Doc
newWantedEvVar/cache miss [W] cobox_auX :: Doc ~ Doc
setEvBind
  ev = cobox_arO
  tm  = CO Sym cobox_auX
rewriteEqEvidence
  [W] cobox_arO :: Doc ~ t_amZ
  Doc
  Doc
  Sym cobox_auX
canEqTyVar2
  t_amZ
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_auX :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_auX :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_auY :: String ~ String
setEvBind
  ev = cobox_auX
  tm  = CO [cobox_auY]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_auY :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_auY :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_auY :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_auZ :: Char ~ Char
setEvBind
  ev = cobox_auY
  tm  = CO [cobox_auZ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_auZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_auZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arP :: t_anC
                                ~ t_an2 [" a type equality t_anC
                                                           ~
                                                           t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arP :: t_anC
                                 ~ t_an2 [" a type equality t_anC
                                                            ~
                                                            t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arP :: t_anC ~ t_an2 [" a type equality t_anC
                                                    ~
                                                    t_an2 " Pretty.hs:146:21-35] (CNonCanonical)
canEvNC:eq
  t_anC
  t_an2
can_eq_nc
  [W] cobox_arP :: t_anC ~ t_an2
  t_anC
  t_anC
  t_an2
  t_an2
canEqTyVar
  t_anC
  t_an2
  Not-swapped
Following bound tyvar t_anC = Doc
canEqTyVar2
  t_anC
  t_an2
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arP :: Doc ~ t_an2
  Doc
  Doc
  t_an2
  t_an2
can_eq_nc
  [W] cobox_arP :: Doc ~ t_an2
  [String]
  Doc
  t_an2
  t_an2
canEqTyVar
  t_an2
  [String]
  Is-swapped
Following bound tyvar t_an2 = Doc
newWantedEvVar/cache miss [W] cobox_av0 :: Doc ~ Doc
setEvBind
  ev = cobox_arP
  tm  = CO Sym cobox_av0
rewriteEqEvidence
  [W] cobox_arP :: Doc ~ t_an2
  Doc
  Doc
  Sym cobox_av0
canEqTyVar2
  t_an2
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_av0 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_av0 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_av1 :: String ~ String
setEvBind
  ev = cobox_av0
  tm  = CO [cobox_av1]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_av1 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_av1 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_av1 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_av2 :: Char ~ Char
setEvBind
  ev = cobox_av1
  tm  = CO [cobox_av2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_av2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_av2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arQ :: t_arM
                                ~ t_anA [" a type equality t_arM
                                                           ~
                                                           t_anA " Pretty.hs:146:21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arQ :: t_arM
                                 ~ t_anA [" a type equality t_arM
                                                            ~
                                                            t_anA " Pretty.hs:146:21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arQ :: t_arM ~ t_anA [" a type equality t_arM
                                                    ~
                                                    t_anA " Pretty.hs:146:21] (CNonCanonical)
canEvNC:eq
  t_arM
  t_anA
can_eq_nc
  [W] cobox_arQ :: t_arM ~ t_anA
  t_arM
  t_arM
  t_anA
  t_anA
canEqTyVar
  t_arM
  t_anA
  Not-swapped
Following bound tyvar t_arM = Doc
canEqTyVar2
  t_arM
  t_anA
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arQ :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_arQ :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_av3 :: Doc ~ Doc
setEvBind
  ev = cobox_arQ
  tm  = CO Sym cobox_av3
rewriteEqEvidence
  [W] cobox_arQ :: Doc ~ t_anA
  Doc
  Doc
  Sym cobox_av3
canEqTyVar2
  t_anA
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_av3 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_av3 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_av4 :: String ~ String
setEvBind
  ev = cobox_av3
  tm  = CO [cobox_av4]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_av4 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_av4 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_av4 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_av5 :: Char ~ Char
setEvBind
  ev = cobox_av4
  tm  = CO [cobox_av5]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_av5 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_av5
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arR :: t_anH
                                ~ t_anB [" a type equality t_anH
                                                           ~
                                                           t_anB " Pretty.hs:146:27-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arR :: t_anH
                                 ~ t_anB [" a type equality t_anH
                                                            ~
                                                            t_anB " Pretty.hs:146:27-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arR :: t_anH ~ t_anB [" a type equality t_anH
                                                    ~
                                                    t_anB " Pretty.hs:146:27-35] (CNonCanonical)
canEvNC:eq
  t_anH
  t_anB
can_eq_nc
  [W] cobox_arR :: t_anH ~ t_anB
  t_anH
  t_anH
  t_anB
  t_anB
canEqTyVar
  t_anH
  t_anB
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_anB
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arR :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_arR :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_av6 :: Doc ~ Doc
setEvBind
  ev = cobox_arR
  tm  = CO Sym cobox_av6
rewriteEqEvidence
  [W] cobox_arR :: Doc ~ t_anB
  Doc
  Doc
  Sym cobox_av6
canEqTyVar2
  t_anB
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_av6 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_av6 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_av7 :: String ~ String
setEvBind
  ev = cobox_av6
  tm  = CO [cobox_av7]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_av7 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_av7 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_av7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_av8 :: Char ~ Char
setEvBind
  ev = cobox_av7
  tm  = CO [cobox_av8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_av8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_av8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arS :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:146:33-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arS :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:146:33-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arS :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:146:33-35] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_arS :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_av9 :: String ~ [Char]
setEvBind
  ev = cobox_arS
  tm  = CO Sym cobox_av9
rewriteEqEvidence
  [W] cobox_arS :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_av9
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_av9 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_av9 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_ava :: Char ~ Char
setEvBind
  ev = cobox_av9
  tm  = CO [cobox_ava]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_ava :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ava
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arT :: t_amZ
                                ~ t_an3 [" a type equality t_amZ
                                                           ~
                                                           t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arT :: t_amZ
                                 ~ t_an3 [" a type equality t_amZ
                                                            ~
                                                            t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arT :: t_amZ ~ t_an3 [" a type equality t_amZ
                                                    ~
                                                    t_an3 " Pretty.hs:146:41-53] (CNonCanonical)
canEvNC:eq
  t_amZ
  t_an3
can_eq_nc
  [W] cobox_arT :: t_amZ ~ t_an3
  t_amZ
  t_amZ
  t_an3
  t_an3
canEqTyVar
  t_amZ
  t_an3
  Not-swapped
Following bound tyvar t_amZ = Doc
canEqTyVar2
  t_amZ
  t_an3
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arT :: Doc ~ t_an3
  Doc
  Doc
  t_an3
  t_an3
can_eq_nc
  [W] cobox_arT :: Doc ~ t_an3
  [String]
  Doc
  t_an3
  t_an3
canEqTyVar
  t_an3
  [String]
  Is-swapped
Following bound tyvar t_an3 = Doc
newWantedEvVar/cache miss [W] cobox_avb :: Doc ~ Doc
setEvBind
  ev = cobox_arT
  tm  = CO Sym cobox_avb
rewriteEqEvidence
  [W] cobox_arT :: Doc ~ t_an3
  Doc
  Doc
  Sym cobox_avb
canEqTyVar2
  t_an3
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avb :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avb :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avc :: String ~ String
setEvBind
  ev = cobox_avb
  tm  = CO [cobox_avc]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avc :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avc :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avc :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avd :: Char ~ Char
setEvBind
  ev = cobox_avc
  tm  = CO [cobox_avd]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avd :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avd
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arU :: [t_arM]
                                ~ t_amY [" a type equality [t_arM]
                                                           ~
                                                           t_amY " Pretty.hs:146:52-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arU :: [t_arM]
                                 ~ t_amY [" a type equality [t_arM]
                                                            ~
                                                            t_amY " Pretty.hs:146:52-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arU :: [t_arM] ~ t_amY [" a type equality [t_arM]
                                                      ~
                                                      t_amY " Pretty.hs:146:52-53] (CNonCanonical)
canEvNC:eq
  [t_arM]
  t_amY
can_eq_nc
  [W] cobox_arU :: [t_arM] ~ t_amY
  [t_arM]
  [t_arM]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [t_arM]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_ave :: [Doc] ~ [t_arM]
setEvBind
  ev = cobox_arU
  tm  = CO Sym cobox_ave
rewriteEqEvidence
  [W] cobox_arU :: [t_arM] ~ t_amY
  [Doc]
  [t_arM]
  Sym cobox_ave
canEqTyVar2
  t_amY
  [t_arM]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_ave :: [Doc] ~ [t_arM]
  [Doc]
  [Doc]
  [t_arM]
  [t_arM]
newWantedEvVar/cache miss [W] cobox_avf :: Doc ~ t_arM
setEvBind
  ev = cobox_ave
  tm  = CO [cobox_avf]_N
canEvNC:eq
  Doc
  t_arM
can_eq_nc
  [W] cobox_avf :: Doc ~ t_arM
  Doc
  Doc
  t_arM
  t_arM
can_eq_nc
  [W] cobox_avf :: Doc ~ t_arM
  [String]
  Doc
  t_arM
  t_arM
canEqTyVar
  t_arM
  [String]
  Is-swapped
Following bound tyvar t_arM = Doc
newWantedEvVar/cache miss [W] cobox_avg :: Doc ~ Doc
setEvBind
  ev = cobox_avf
  tm  = CO Sym cobox_avg
rewriteEqEvidence
  [W] cobox_avf :: Doc ~ t_arM
  Doc
  Doc
  Sym cobox_avg
canEqTyVar2
  t_arM
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avg :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avg :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avh :: String ~ String
setEvBind
  ev = cobox_avg
  tm  = CO [cobox_avh]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avh :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avh :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avh :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avi :: Char ~ Char
setEvBind
  ev = cobox_avh
  tm  = CO [cobox_avi]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avi :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avi
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arW :: t_anC
                                ~ t_amV [" a type equality t_anC
                                                           ~
                                                           t_amV " Pretty.hs:150:5-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arW :: t_anC
                                 ~ t_amV [" a type equality t_anC
                                                            ~
                                                            t_amV " Pretty.hs:150:5-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arW :: t_anC ~ t_amV [" a type equality t_anC
                                                    ~
                                                    t_amV " Pretty.hs:150:5-47] (CNonCanonical)
canEvNC:eq
  t_anC
  t_amV
can_eq_nc
  [W] cobox_arW :: t_anC ~ t_amV
  t_anC
  t_anC
  t_amV
  t_amV
canEqTyVar
  t_anC
  t_amV
  Not-swapped
Following bound tyvar t_anC = Doc
canEqTyVar2
  t_anC
  t_amV
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arW :: Doc ~ t_amV
  Doc
  Doc
  t_amV
  t_amV
can_eq_nc
  [W] cobox_arW :: Doc ~ t_amV
  [String]
  Doc
  t_amV
  t_amV
canEqTyVar
  t_amV
  [String]
  Is-swapped
Following bound tyvar t_amV = Doc
newWantedEvVar/cache miss [W] cobox_avj :: Doc ~ Doc
setEvBind
  ev = cobox_arW
  tm  = CO Sym cobox_avj
rewriteEqEvidence
  [W] cobox_arW :: Doc ~ t_amV
  Doc
  Doc
  Sym cobox_avj
canEqTyVar2
  t_amV
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avj :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avj :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avk :: String ~ String
setEvBind
  ev = cobox_avj
  tm  = CO [cobox_avk]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avk :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avk :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avk :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avl :: Char ~ Char
setEvBind
  ev = cobox_avk
  tm  = CO [cobox_avl]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avl :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avl
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arX :: t_anC
                                ~ t_anA [" a type equality t_anC
                                                           ~
                                                           t_anA " Pretty.hs:150:5-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arX :: t_anC
                                 ~ t_anA [" a type equality t_anC
                                                            ~
                                                            t_anA " Pretty.hs:150:5-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arX :: t_anC ~ t_anA [" a type equality t_anC
                                                    ~
                                                    t_anA " Pretty.hs:150:5-33] (CNonCanonical)
canEvNC:eq
  t_anC
  t_anA
can_eq_nc
  [W] cobox_arX :: t_anC ~ t_anA
  t_anC
  t_anC
  t_anA
  t_anA
canEqTyVar
  t_anC
  t_anA
  Not-swapped
Following bound tyvar t_anC = Doc
canEqTyVar2
  t_anC
  t_anA
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arX :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_arX :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_avm :: Doc ~ Doc
setEvBind
  ev = cobox_arX
  tm  = CO Sym cobox_avm
rewriteEqEvidence
  [W] cobox_arX :: Doc ~ t_anA
  Doc
  Doc
  Sym cobox_avm
canEqTyVar2
  t_anA
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avm :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avm :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avn :: String ~ String
setEvBind
  ev = cobox_avm
  tm  = CO [cobox_avn]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avn :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avn :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avn :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avo :: Char ~ Char
setEvBind
  ev = cobox_avn
  tm  = CO [cobox_avo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arY :: t_anH
                                ~ t_anA [" a type equality t_anH
                                                           ~
                                                           t_anA " Pretty.hs:150:5-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arY :: t_anH
                                 ~ t_anA [" a type equality t_anH
                                                            ~
                                                            t_anA " Pretty.hs:150:5-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arY :: t_anH ~ t_anA [" a type equality t_anH
                                                    ~
                                                    t_anA " Pretty.hs:150:5-13] (CNonCanonical)
canEvNC:eq
  t_anH
  t_anA
can_eq_nc
  [W] cobox_arY :: t_anH ~ t_anA
  t_anH
  t_anH
  t_anA
  t_anA
canEqTyVar
  t_anH
  t_anA
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_anA
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_arY :: Doc ~ t_anA
  Doc
  Doc
  t_anA
  t_anA
can_eq_nc
  [W] cobox_arY :: Doc ~ t_anA
  [String]
  Doc
  t_anA
  t_anA
canEqTyVar
  t_anA
  [String]
  Is-swapped
Following bound tyvar t_anA = Doc
newWantedEvVar/cache miss [W] cobox_avp :: Doc ~ Doc
setEvBind
  ev = cobox_arY
  tm  = CO Sym cobox_avp
rewriteEqEvidence
  [W] cobox_arY :: Doc ~ t_anA
  Doc
  Doc
  Sym cobox_avp
canEqTyVar2
  t_anA
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avp :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avp :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avq :: String ~ String
setEvBind
  ev = cobox_avp
  tm  = CO [cobox_avq]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avq :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avq :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avr :: Char ~ Char
setEvBind
  ev = cobox_avq
  tm  = CO [cobox_avr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_arZ :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:150:11-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_arZ :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:150:11-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_arZ :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:150:11-13] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_arZ :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_avs :: String ~ [Char]
setEvBind
  ev = cobox_arZ
  tm  = CO Sym cobox_avs
rewriteEqEvidence
  [W] cobox_arZ :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_avs
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_avs :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_avs :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_avt :: Char ~ Char
setEvBind
  ev = cobox_avs
  tm  = CO [cobox_avt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as0 :: t_amZ
                                ~ t_anB [" a type equality t_amZ
                                                           ~
                                                           t_anB " Pretty.hs:150:19-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as0 :: t_amZ
                                 ~ t_anB [" a type equality t_amZ
                                                            ~
                                                            t_anB " Pretty.hs:150:19-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as0 :: t_amZ ~ t_anB [" a type equality t_amZ
                                                    ~
                                                    t_anB " Pretty.hs:150:19-33] (CNonCanonical)
canEvNC:eq
  t_amZ
  t_anB
can_eq_nc
  [W] cobox_as0 :: t_amZ ~ t_anB
  t_amZ
  t_amZ
  t_anB
  t_anB
canEqTyVar
  t_amZ
  t_anB
  Not-swapped
Following bound tyvar t_amZ = Doc
canEqTyVar2
  t_amZ
  t_anB
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_as0 :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_as0 :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_avu :: Doc ~ Doc
setEvBind
  ev = cobox_as0
  tm  = CO Sym cobox_avu
rewriteEqEvidence
  [W] cobox_as0 :: Doc ~ t_anB
  Doc
  Doc
  Sym cobox_avu
canEqTyVar2
  t_anB
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avu :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avu :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avv :: String ~ String
setEvBind
  ev = cobox_avu
  tm  = CO [cobox_avv]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avv :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avv :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avv :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avw :: Char ~ Char
setEvBind
  ev = cobox_avv
  tm  = CO [cobox_avw]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as1 :: t_amU
                                ~ t_amY [" a type equality t_amU
                                                           ~
                                                           t_amY " Pretty.hs:150:30-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as1 :: t_amU
                                 ~ t_amY [" a type equality t_amU
                                                            ~
                                                            t_amY " Pretty.hs:150:30-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as1 :: t_amU ~ t_amY [" a type equality t_amU
                                                    ~
                                                    t_amY " Pretty.hs:150:30-33] (CNonCanonical)
canEvNC:eq
  t_amU
  t_amY
can_eq_nc
  [W] cobox_as1 :: t_amU ~ t_amY
  t_amU
  t_amU
  t_amY
  t_amY
canEqTyVar
  t_amU
  t_amY
  Not-swapped
Following bound tyvar t_amU = [Doc]
canEqTyVar2
  t_amU
  t_amY
  Not-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_as1 :: [Doc] ~ t_amY
  [Doc]
  [Doc]
  t_amY
  t_amY
canEqTyVar
  t_amY
  [Doc]
  Is-swapped
Following bound tyvar t_amY = [Doc]
newWantedEvVar/cache miss [W] cobox_avx :: [Doc] ~ [Doc]
setEvBind
  ev = cobox_as1
  tm  = CO Sym cobox_avx
rewriteEqEvidence
  [W] cobox_as1 :: [Doc] ~ t_amY
  [Doc]
  [Doc]
  Sym cobox_avx
canEqTyVar2
  t_amY
  [Doc]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_avx :: [Doc] ~ [Doc]
  [Doc]
  [Doc]
  [Doc]
  [Doc]
newWantedEvVar/cache miss [W] cobox_avy :: Doc ~ Doc
setEvBind
  ev = cobox_avx
  tm  = CO [cobox_avy]_N
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_avy :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_avy :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_avy :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avz :: String ~ String
setEvBind
  ev = cobox_avy
  tm  = CO [cobox_avz]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avz :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avz :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avz :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avA :: Char ~ Char
setEvBind
  ev = cobox_avz
  tm  = CO [cobox_avA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as2 :: t_anH
                                ~ t_anB [" a type equality t_anH
                                                           ~
                                                           t_anB " Pretty.hs:150:39-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as2 :: t_anH
                                 ~ t_anB [" a type equality t_anH
                                                            ~
                                                            t_anB " Pretty.hs:150:39-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as2 :: t_anH ~ t_anB [" a type equality t_anH
                                                    ~
                                                    t_anB " Pretty.hs:150:39-47] (CNonCanonical)
canEvNC:eq
  t_anH
  t_anB
can_eq_nc
  [W] cobox_as2 :: t_anH ~ t_anB
  t_anH
  t_anH
  t_anB
  t_anB
canEqTyVar
  t_anH
  t_anB
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_anB
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_as2 :: Doc ~ t_anB
  Doc
  Doc
  t_anB
  t_anB
can_eq_nc
  [W] cobox_as2 :: Doc ~ t_anB
  [String]
  Doc
  t_anB
  t_anB
canEqTyVar
  t_anB
  [String]
  Is-swapped
Following bound tyvar t_anB = Doc
newWantedEvVar/cache miss [W] cobox_avB :: Doc ~ Doc
setEvBind
  ev = cobox_as2
  tm  = CO Sym cobox_avB
rewriteEqEvidence
  [W] cobox_as2 :: Doc ~ t_anB
  Doc
  Doc
  Sym cobox_avB
canEqTyVar2
  t_anB
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avB :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avB :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avC :: String ~ String
setEvBind
  ev = cobox_avB
  tm  = CO [cobox_avC]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avC :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avC :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avC :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avD :: Char ~ Char
setEvBind
  ev = cobox_avC
  tm  = CO [cobox_avD]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avD :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avD
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as3 :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:150:45-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as3 :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:150:45-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as3 :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:150:45-47] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_as3 :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_avE :: String ~ [Char]
setEvBind
  ev = cobox_as3
  tm  = CO Sym cobox_avE
rewriteEqEvidence
  [W] cobox_as3 :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_avE
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_avE :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_avE :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_avF :: Char ~ Char
setEvBind
  ev = cobox_avE
  tm  = CO [cobox_avF]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avF :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avF
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_as9 :: ([a_as7] -> b_as8)
                                ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                      ~
                                                                      t_amM
                                                                      -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_as9 :: ([a_as7] -> b_as8)
                                 ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                                       ~
                                                                       t_amM
                                                                       -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_as9 :: ([a_as7] -> b_as8)
                   ~ (t_amM -> t_amN) [" a type equality [a_as7] -> b_as8
                                                         ~
                                                         t_amM
                                                         -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
canEvNC:eq
  [a_as7] -> b_as8
  t_amM -> t_amN
can_eq_nc
  [W] cobox_as9 :: ([a_as7] -> b_as8) ~ (t_amM -> t_amN)
  [a_as7] -> b_as8
  [a_as7] -> b_as8
  t_amM -> t_amN
  t_amM -> t_amN
newWantedEvVar/cache miss [W] cobox_avG :: [a_as7] ~ t_amM
newWantedEvVar/cache miss [W] cobox_avH :: b_as8 ~ t_amN
setEvBind
  ev = cobox_as9
  tm  = CO cobox_avG -> cobox_avH
canEvNC:eq
  [a_as7]
  t_amM
can_eq_nc
  [W] cobox_avG :: [a_as7] ~ t_amM
  [a_as7]
  [a_as7]
  t_amM
  t_amM
canEqTyVar
  t_amM
  [a_as7]
  Is-swapped
Following bound tyvar t_amM = [Doc]
newWantedEvVar/cache miss [W] cobox_avI :: [Doc] ~ [a_as7]
setEvBind
  ev = cobox_avG
  tm  = CO Sym cobox_avI
rewriteEqEvidence
  [W] cobox_avG :: [a_as7] ~ t_amM
  [Doc]
  [a_as7]
  Sym cobox_avI
canEqTyVar2
  t_amM
  [a_as7]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_avI :: [Doc] ~ [a_as7]
  [Doc]
  [Doc]
  [a_as7]
  [a_as7]
newWantedEvVar/cache miss [W] cobox_avJ :: Doc ~ a_as7
setEvBind
  ev = cobox_avI
  tm  = CO [cobox_avJ]_N
canEvNC:eq
  Doc
  a_as7
can_eq_nc
  [W] cobox_avJ :: Doc ~ a_as7
  Doc
  Doc
  a_as7
  a_as7
can_eq_nc
  [W] cobox_avJ :: Doc ~ a_as7
  [String]
  Doc
  a_as7
  a_as7
canEqTyVar
  a_as7
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_avK :: a_as7 ~ Doc
setEvBind
  ev = cobox_avJ
  tm  = CO Sym cobox_avK
rewriteEqEvidence
  [W] cobox_avJ :: Doc ~ a_as7
  a_as7
  Doc
  Sym cobox_avK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_avK :: a_as7
                                 ~ Doc [" a type equality [a_as7] -> b_as8
                                                          ~
                                                          t_amM
                                                          -> t_amN " Pretty.hs:163:18-33] (CTyEqCan)
Sneaky unification:
  Unifies: a_as7 := Doc
  Coercion: a_as7 ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_as7 := Doc
setEvBind
  ev = cobox_avK
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  a_as7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
95[<C:0,F:0>] [W] cobox_avK :: a_as7 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_avH :: b_as8
                                ~ t_amN [" a type equality [a_as7] -> b_as8
                                                           ~
                                                           t_amM
                                                           -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_avH :: b_as8
                                 ~ t_amN [" a type equality [a_as7] -> b_as8
                                                            ~
                                                            t_amM
                                                            -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_avH :: b_as8 ~ t_amN [" a type equality [a_as7] -> b_as8
                                                    ~
                                                    t_amM
                                                    -> t_amN " Pretty.hs:163:18-33] (CNonCanonical)
canEvNC:eq
  b_as8
  t_amN
can_eq_nc
  [W] cobox_avH :: b_as8 ~ t_amN
  b_as8
  b_as8
  t_amN
  t_amN
canEqTyVar
  b_as8
  t_amN
  Not-swapped
Following bound tyvar t_amN = Doc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_avH :: b_as8
                                 ~ Doc [" a type equality [a_as7] -> b_as8
                                                          ~
                                                          t_amM
                                                          -> t_amN " Pretty.hs:163:18-33] (CTyEqCan)
Sneaky unification:
  Unifies: b_as8 := Doc
  Coercion: b_as8 ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_as8 := Doc
setEvBind
  ev = cobox_avH
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  b_as8
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
96[<C:0,F:0>] [W] cobox_avH :: b_as8 ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                               -> t_anv -> t_anw
                                                                               ~
                                                                               a_as7
                                                                               -> b_as8
                                                                               -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                                 ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                                -> t_anv -> t_anw
                                                                                ~
                                                                                a_as7
                                                                                -> b_as8
                                                                                -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                   ~ (a_as7 -> b_as8 -> b_as8) [" a type equality t_anu
                                                                  -> t_anv -> t_anw
                                                                  ~
                                                                  a_as7
                                                                  -> b_as8
                                                                  -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canEvNC:eq
  t_anu -> t_anv -> t_anw
  a_as7 -> b_as8 -> b_as8
can_eq_nc
  [W] cobox_asa :: (t_anu -> t_anv -> t_anw)
                   ~ (a_as7 -> b_as8 -> b_as8)
  t_anu -> t_anv -> t_anw
  t_anu -> t_anv -> t_anw
  a_as7 -> b_as8 -> b_as8
  a_as7 -> b_as8 -> b_as8
newWantedEvVar/cache miss [W] cobox_avL :: t_anu ~ a_as7
newWantedEvVar/cache miss
  [W] cobox_avM :: (t_anv -> t_anw) ~ (b_as8 -> b_as8)
setEvBind
  ev = cobox_asa
  tm  = CO cobox_avL -> cobox_avM
canEvNC:eq
  t_anu
  a_as7
can_eq_nc
  [W] cobox_avL :: t_anu ~ a_as7
  t_anu
  t_anu
  a_as7
  a_as7
canEqTyVar
  t_anu
  a_as7
  Not-swapped
Following bound tyvar t_anu = Doc
canEqTyVar2
  t_anu
  a_as7
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avL :: Doc ~ a_as7
  Doc
  Doc
  a_as7
  a_as7
can_eq_nc
  [W] cobox_avL :: Doc ~ a_as7
  [String]
  Doc
  a_as7
  a_as7
canEqTyVar
  a_as7
  [String]
  Is-swapped
Following bound tyvar a_as7 = Doc
newWantedEvVar/cache miss [W] cobox_avN :: Doc ~ Doc
setEvBind
  ev = cobox_avL
  tm  = CO Sym cobox_avN
rewriteEqEvidence
  [W] cobox_avL :: Doc ~ a_as7
  Doc
  Doc
  Sym cobox_avN
canEqTyVar2
  a_as7
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avN :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avN :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avO :: String ~ String
setEvBind
  ev = cobox_avN
  tm  = CO [cobox_avO]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avO :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avO :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avO :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avP :: Char ~ Char
setEvBind
  ev = cobox_avO
  tm  = CO [cobox_avP]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avP :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avP
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_avM :: (t_anv -> t_anw)
                                ~ (b_as8 -> b_as8) [" a type equality t_anu -> t_anv -> t_anw
                                                                      ~
                                                                      a_as7
                                                                      -> b_as8
                                                                      -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_avM :: (t_anv -> t_anw)
                                 ~ (b_as8 -> b_as8) [" a type equality t_anu -> t_anv -> t_anw
                                                                       ~
                                                                       a_as7
                                                                       -> b_as8
                                                                       -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_avM :: (t_anv -> t_anw)
                   ~ (b_as8 -> b_as8) [" a type equality t_anu -> t_anv -> t_anw
                                                         ~
                                                         a_as7
                                                         -> b_as8
                                                         -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canEvNC:eq
  t_anv -> t_anw
  b_as8 -> b_as8
can_eq_nc
  [W] cobox_avM :: (t_anv -> t_anw) ~ (b_as8 -> b_as8)
  t_anv -> t_anw
  t_anv -> t_anw
  b_as8 -> b_as8
  b_as8 -> b_as8
newWantedEvVar/cache miss [W] cobox_avQ :: t_anv ~ b_as8
newWantedEvVar/cache miss [W] cobox_avR :: t_anw ~ b_as8
setEvBind
  ev = cobox_avM
  tm  = CO cobox_avQ -> cobox_avR
canEvNC:eq
  t_anv
  b_as8
can_eq_nc
  [W] cobox_avQ :: t_anv ~ b_as8
  t_anv
  t_anv
  b_as8
  b_as8
canEqTyVar
  t_anv
  b_as8
  Not-swapped
Following bound tyvar t_anv = Doc
canEqTyVar2
  t_anv
  b_as8
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avQ :: Doc ~ b_as8
  Doc
  Doc
  b_as8
  b_as8
can_eq_nc
  [W] cobox_avQ :: Doc ~ b_as8
  [String]
  Doc
  b_as8
  b_as8
canEqTyVar
  b_as8
  [String]
  Is-swapped
Following bound tyvar b_as8 = Doc
newWantedEvVar/cache miss [W] cobox_avS :: Doc ~ Doc
setEvBind
  ev = cobox_avQ
  tm  = CO Sym cobox_avS
rewriteEqEvidence
  [W] cobox_avQ :: Doc ~ b_as8
  Doc
  Doc
  Sym cobox_avS
canEqTyVar2
  b_as8
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avS :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avS :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avT :: String ~ String
setEvBind
  ev = cobox_avS
  tm  = CO [cobox_avT]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avT :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avT :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avT :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avU :: Char ~ Char
setEvBind
  ev = cobox_avT
  tm  = CO [cobox_avU]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_avR :: t_anw
                                ~ b_as8 [" a type equality t_anu -> t_anv -> t_anw
                                                           ~
                                                           a_as7
                                                           -> b_as8
                                                           -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_avR :: t_anw
                                 ~ b_as8 [" a type equality t_anu -> t_anv -> t_anw
                                                            ~
                                                            a_as7
                                                            -> b_as8
                                                            -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_avR :: t_anw ~ b_as8 [" a type equality t_anu
                                                    -> t_anv -> t_anw
                                                    ~
                                                    a_as7
                                                    -> b_as8
                                                    -> b_as8 " Pretty.hs:163:24-28] (CNonCanonical)
canEvNC:eq
  t_anw
  b_as8
can_eq_nc
  [W] cobox_avR :: t_anw ~ b_as8
  t_anw
  t_anw
  b_as8
  b_as8
canEqTyVar
  t_anw
  b_as8
  Not-swapped
Following bound tyvar t_anw = Doc
canEqTyVar2
  t_anw
  b_as8
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avR :: Doc ~ b_as8
  Doc
  Doc
  b_as8
  b_as8
can_eq_nc
  [W] cobox_avR :: Doc ~ b_as8
  [String]
  Doc
  b_as8
  b_as8
canEqTyVar
  b_as8
  [String]
  Is-swapped
Following bound tyvar b_as8 = Doc
newWantedEvVar/cache miss [W] cobox_avV :: Doc ~ Doc
setEvBind
  ev = cobox_avR
  tm  = CO Sym cobox_avV
rewriteEqEvidence
  [W] cobox_avR :: Doc ~ b_as8
  Doc
  Doc
  Sym cobox_avV
canEqTyVar2
  b_as8
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avV :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avV :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avW :: String ~ String
setEvBind
  ev = cobox_avV
  tm  = CO [cobox_avW]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avW :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avW :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avW :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_avX :: Char ~ Char
setEvBind
  ev = cobox_avW
  tm  = CO [cobox_avX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_avX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_avX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asb :: t_anK
                                ~ b_as8 [" a type equality t_anK
                                                           ~
                                                           b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asb :: t_anK
                                 ~ b_as8 [" a type equality t_anK
                                                            ~
                                                            b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asb :: t_anK ~ b_as8 [" a type equality t_anK
                                                    ~
                                                    b_as8 " Pretty.hs:163:30-33] (CNonCanonical)
canEvNC:eq
  t_anK
  b_as8
can_eq_nc
  [W] cobox_asb :: t_anK ~ b_as8
  t_anK
  t_anK
  b_as8
  b_as8
canEqTyVar
  t_anK
  b_as8
  Not-swapped
Following bound tyvar t_anK = Doc
canEqTyVar2
  t_anK
  b_as8
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asb :: Doc ~ b_as8
  Doc
  Doc
  b_as8
  b_as8
can_eq_nc
  [W] cobox_asb :: Doc ~ b_as8
  [String]
  Doc
  b_as8
  b_as8
canEqTyVar
  b_as8
  [String]
  Is-swapped
Following bound tyvar b_as8 = Doc
newWantedEvVar/cache miss [W] cobox_avY :: Doc ~ Doc
setEvBind
  ev = cobox_asb
  tm  = CO Sym cobox_avY
rewriteEqEvidence
  [W] cobox_asb :: Doc ~ b_as8
  Doc
  Doc
  Sym cobox_avY
canEqTyVar2
  b_as8
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_avY :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_avY :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_avZ :: String ~ String
setEvBind
  ev = cobox_avY
  tm  = CO [cobox_avZ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_avZ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_avZ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_avZ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aw0 :: Char ~ Char
setEvBind
  ev = cobox_avZ
  tm  = CO [cobox_aw0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aw0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aw0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ase :: [t_asd]
                                ~ t_amQ [" a type equality [t_asd]
                                                           ~
                                                           t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ase :: [t_asd]
                                 ~ t_amQ [" a type equality [t_asd]
                                                            ~
                                                            t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ase :: [t_asd] ~ t_amQ [" a type equality [t_asd]
                                                      ~
                                                      t_amQ " Pretty.hs:153:16-17] (CNonCanonical)
canEvNC:eq
  [t_asd]
  t_amQ
can_eq_nc
  [W] cobox_ase :: [t_asd] ~ t_amQ
  [t_asd]
  [t_asd]
  t_amQ
  t_amQ
canEqTyVar
  t_amQ
  [t_asd]
  Is-swapped
Following bound tyvar t_amQ = [Doc]
newWantedEvVar/cache miss [W] cobox_aw1 :: [Doc] ~ [t_asd]
setEvBind
  ev = cobox_ase
  tm  = CO Sym cobox_aw1
rewriteEqEvidence
  [W] cobox_ase :: [t_asd] ~ t_amQ
  [Doc]
  [t_asd]
  Sym cobox_aw1
canEqTyVar2
  t_amQ
  [t_asd]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_aw1 :: [Doc] ~ [t_asd]
  [Doc]
  [Doc]
  [t_asd]
  [t_asd]
newWantedEvVar/cache miss [W] cobox_aw2 :: Doc ~ t_asd
setEvBind
  ev = cobox_aw1
  tm  = CO [cobox_aw2]_N
canEvNC:eq
  Doc
  t_asd
can_eq_nc
  [W] cobox_aw2 :: Doc ~ t_asd
  Doc
  Doc
  t_asd
  t_asd
can_eq_nc
  [W] cobox_aw2 :: Doc ~ t_asd
  [String]
  Doc
  t_asd
  t_asd
canEqTyVar
  t_asd
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aw3 :: t_asd ~ Doc
setEvBind
  ev = cobox_aw2
  tm  = CO Sym cobox_aw3
rewriteEqEvidence
  [W] cobox_aw2 :: Doc ~ t_asd
  t_asd
  Doc
  Sym cobox_aw3
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aw3 :: t_asd
                                 ~ Doc [" a type equality [t_asd]
                                                          ~
                                                          t_amQ " Pretty.hs:153:16-17] (CTyEqCan)
Sneaky unification:
  Unifies: t_asd := Doc
  Coercion: t_asd ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_asd := Doc
setEvBind
  ev = cobox_aw3
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_asd
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
101[<C:0,F:0>] [W] cobox_aw3 :: t_asd ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asf :: t_anH
                                ~ t_amR [" a type equality t_anH
                                                           ~
                                                           t_amR " Pretty.hs:154:5-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asf :: t_anH
                                 ~ t_amR [" a type equality t_anH
                                                            ~
                                                            t_amR " Pretty.hs:154:5-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asf :: t_anH ~ t_amR [" a type equality t_anH
                                                    ~
                                                    t_amR " Pretty.hs:154:5-14] (CNonCanonical)
canEvNC:eq
  t_anH
  t_amR
can_eq_nc
  [W] cobox_asf :: t_anH ~ t_amR
  t_anH
  t_anH
  t_amR
  t_amR
canEqTyVar
  t_anH
  t_amR
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_amR
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asf :: Doc ~ t_amR
  Doc
  Doc
  t_amR
  t_amR
can_eq_nc
  [W] cobox_asf :: Doc ~ t_amR
  [String]
  Doc
  t_amR
  t_amR
canEqTyVar
  t_amR
  [String]
  Is-swapped
Following bound tyvar t_amR = Doc
newWantedEvVar/cache miss [W] cobox_aw4 :: Doc ~ Doc
setEvBind
  ev = cobox_asf
  tm  = CO Sym cobox_aw4
rewriteEqEvidence
  [W] cobox_asf :: Doc ~ t_amR
  Doc
  Doc
  Sym cobox_aw4
canEqTyVar2
  t_amR
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aw4 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aw4 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aw5 :: String ~ String
setEvBind
  ev = cobox_aw4
  tm  = CO [cobox_aw5]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aw5 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aw5 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aw5 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aw6 :: Char ~ Char
setEvBind
  ev = cobox_aw5
  tm  = CO [cobox_aw6]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aw6 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aw6
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asg :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:154:11-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asg :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:154:11-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asg :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:154:11-14] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_asg :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_aw7 :: String ~ [Char]
setEvBind
  ev = cobox_asg
  tm  = CO Sym cobox_aw7
rewriteEqEvidence
  [W] cobox_asg :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_aw7
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aw7 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aw7 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aw8 :: Char ~ Char
setEvBind
  ev = cobox_aw7
  tm  = CO [cobox_aw8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aw8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aw8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asi :: [t_ash]
                                ~ t_amQ [" a type equality [t_ash]
                                                           ~
                                                           t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asi :: [t_ash]
                                 ~ t_amQ [" a type equality [t_ash]
                                                            ~
                                                            t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asi :: [t_ash] ~ t_amQ [" a type equality [t_ash]
                                                      ~
                                                      t_amQ " Pretty.hs:155:17-24] (CNonCanonical)
canEvNC:eq
  [t_ash]
  t_amQ
can_eq_nc
  [W] cobox_asi :: [t_ash] ~ t_amQ
  [t_ash]
  [t_ash]
  t_amQ
  t_amQ
canEqTyVar
  t_amQ
  [t_ash]
  Is-swapped
Following bound tyvar t_amQ = [Doc]
newWantedEvVar/cache miss [W] cobox_aw9 :: [Doc] ~ [t_ash]
setEvBind
  ev = cobox_asi
  tm  = CO Sym cobox_aw9
rewriteEqEvidence
  [W] cobox_asi :: [t_ash] ~ t_amQ
  [Doc]
  [t_ash]
  Sym cobox_aw9
canEqTyVar2
  t_amQ
  [t_ash]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_aw9 :: [Doc] ~ [t_ash]
  [Doc]
  [Doc]
  [t_ash]
  [t_ash]
newWantedEvVar/cache miss [W] cobox_awa :: Doc ~ t_ash
setEvBind
  ev = cobox_aw9
  tm  = CO [cobox_awa]_N
canEvNC:eq
  Doc
  t_ash
can_eq_nc
  [W] cobox_awa :: Doc ~ t_ash
  Doc
  Doc
  t_ash
  t_ash
can_eq_nc
  [W] cobox_awa :: Doc ~ t_ash
  [String]
  Doc
  t_ash
  t_ash
canEqTyVar
  t_ash
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_awb :: t_ash ~ Doc
setEvBind
  ev = cobox_awa
  tm  = CO Sym cobox_awb
rewriteEqEvidence
  [W] cobox_awa :: Doc ~ t_ash
  t_ash
  Doc
  Sym cobox_awb
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awb :: t_ash
                                 ~ Doc [" a type equality [t_ash]
                                                          ~
                                                          t_amQ " Pretty.hs:155:17-24] (CTyEqCan)
Sneaky unification:
  Unifies: t_ash := Doc
  Coercion: t_ash ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ash := Doc
setEvBind
  ev = cobox_awb
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_ash
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
104[<C:0,F:0>] [W] cobox_awb :: t_ash ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asm :: t_asj
                                ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                      ~
                                                                      t_ask
                                                                      -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asm :: t_asj
                                 ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                       ~
                                                                       t_ask
                                                                       -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asm :: t_asj ~ (t_ask -> t_asl) [" a type equality t_asj
                                                               ~
                                                               t_ask
                                                               -> t_asl " Pretty.hs:160:5-41] (CNonCanonical)
canEvNC:eq
  t_asj
  t_ask -> t_asl
can_eq_nc
  [W] cobox_asm :: t_asj ~ (t_ask -> t_asl)
  t_asj
  t_asj
  t_ask -> t_asl
  t_ask -> t_asl
canEqTyVar
  t_asj
  t_ask -> t_asl
  Not-swapped
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asm :: t_asj
                                 ~ (t_ask -> t_asl) [" a type equality t_asj
                                                                       ~
                                                                       t_ask
                                                                       -> t_asl " Pretty.hs:160:5-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_asj := t_ask -> t_asl
  Coercion: t_asj ~ (t_ask -> t_asl)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_asj := t_ask -> t_asl
setEvBind
  ev = cobox_asm
  tm  = CO <t_ask -> t_asl>_N
kickOutRewritable
  tv =  t_asj
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
105[<C:0,F:0>] [W] cobox_asm :: t_asj
                                ~ (t_ask -> t_asl): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asn :: t_an4
                                ~ t_asl [" a type equality t_an4
                                                           ~
                                                           t_asl " Pretty.hs:160:24-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asn :: t_an4
                                 ~ t_asl [" a type equality t_an4
                                                            ~
                                                            t_asl " Pretty.hs:160:24-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asn :: t_an4 ~ t_asl [" a type equality t_an4
                                                    ~
                                                    t_asl " Pretty.hs:160:24-41] (CNonCanonical)
canEvNC:eq
  t_an4
  t_asl
can_eq_nc
  [W] cobox_asn :: t_an4 ~ t_asl
  t_an4
  t_an4
  t_asl
  t_asl
canEqTyVar
  t_an4
  t_asl
  Not-swapped
Following bound tyvar t_an4 = Doc
canEqTyVar2
  t_an4
  t_asl
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asn :: Doc ~ t_asl
  Doc
  Doc
  t_asl
  t_asl
can_eq_nc
  [W] cobox_asn :: Doc ~ t_asl
  [String]
  Doc
  t_asl
  t_asl
canEqTyVar
  t_asl
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_awc :: t_asl ~ Doc
setEvBind
  ev = cobox_asn
  tm  = CO Sym cobox_awc
rewriteEqEvidence
  [W] cobox_asn :: Doc ~ t_asl
  t_asl
  Doc
  Sym cobox_awc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awc :: t_asl ~ Doc [" a type equality t_an4
                                                                ~
                                                                t_asl " Pretty.hs:160:24-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_asl := Doc
  Coercion: t_asl ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_asl := Doc
setEvBind
  ev = cobox_awc
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_asl
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
106[<C:0,F:0>] [W] cobox_awc :: t_asl ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aso :: t_anH
                                ~ t_an2 [" a type equality t_anH
                                                           ~
                                                           t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aso :: t_anH
                                 ~ t_an2 [" a type equality t_anH
                                                            ~
                                                            t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aso :: t_anH ~ t_an2 [" a type equality t_anH
                                                    ~
                                                    t_an2 " Pretty.hs:160:24-32] (CNonCanonical)
canEvNC:eq
  t_anH
  t_an2
can_eq_nc
  [W] cobox_aso :: t_anH ~ t_an2
  t_anH
  t_anH
  t_an2
  t_an2
canEqTyVar
  t_anH
  t_an2
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_an2
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aso :: Doc ~ t_an2
  Doc
  Doc
  t_an2
  t_an2
can_eq_nc
  [W] cobox_aso :: Doc ~ t_an2
  [String]
  Doc
  t_an2
  t_an2
canEqTyVar
  t_an2
  [String]
  Is-swapped
Following bound tyvar t_an2 = Doc
newWantedEvVar/cache miss [W] cobox_awd :: Doc ~ Doc
setEvBind
  ev = cobox_aso
  tm  = CO Sym cobox_awd
rewriteEqEvidence
  [W] cobox_aso :: Doc ~ t_an2
  Doc
  Doc
  Sym cobox_awd
canEqTyVar2
  t_an2
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awd :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awd :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awe :: String ~ String
setEvBind
  ev = cobox_awd
  tm  = CO [cobox_awe]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awe :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awe :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awe :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awf :: Char ~ Char
setEvBind
  ev = cobox_awe
  tm  = CO [cobox_awf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asp :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:160:30-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asp :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:160:30-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asp :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:160:30-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_asp :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_awg :: String ~ [Char]
setEvBind
  ev = cobox_asp
  tm  = CO Sym cobox_awg
rewriteEqEvidence
  [W] cobox_asp :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_awg
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_awg :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_awg :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_awh :: Char ~ Char
setEvBind
  ev = cobox_awg
  tm  = CO [cobox_awh]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asq :: t_ask
                                ~ t_an3 [" a type equality t_ask
                                                           ~
                                                           t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asq :: t_ask
                                 ~ t_an3 [" a type equality t_ask
                                                            ~
                                                            t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asq :: t_ask ~ t_an3 [" a type equality t_ask
                                                    ~
                                                    t_an3 " Pretty.hs:160:38-41] (CNonCanonical)
canEvNC:eq
  t_ask
  t_an3
can_eq_nc
  [W] cobox_asq :: t_ask ~ t_an3
  t_ask
  t_ask
  t_an3
  t_an3
canEqTyVar
  t_ask
  t_an3
  Not-swapped
Following bound tyvar t_an3 = Doc
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_asq :: t_ask ~ Doc [" a type equality t_ask
                                                                ~
                                                                t_an3 " Pretty.hs:160:38-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_ask := Doc
  Coercion: t_ask ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ask := Doc
setEvBind
  ev = cobox_asq
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_ask
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
109[<C:0,F:0>] [W] cobox_asq :: t_ask ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asr :: t_anw
                                ~ t_amR [" a type equality t_anw
                                                           ~
                                                           t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asr :: t_anw
                                 ~ t_amR [" a type equality t_anw
                                                            ~
                                                            t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asr :: t_anw ~ t_amR [" a type equality t_anw
                                                    ~
                                                    t_amR " Pretty.hs:(156,6)-(158,14)] (CNonCanonical)
canEvNC:eq
  t_anw
  t_amR
can_eq_nc
  [W] cobox_asr :: t_anw ~ t_amR
  t_anw
  t_anw
  t_amR
  t_amR
canEqTyVar
  t_anw
  t_amR
  Not-swapped
Following bound tyvar t_anw = Doc
canEqTyVar2
  t_anw
  t_amR
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asr :: Doc ~ t_amR
  Doc
  Doc
  t_amR
  t_amR
can_eq_nc
  [W] cobox_asr :: Doc ~ t_amR
  [String]
  Doc
  t_amR
  t_amR
canEqTyVar
  t_amR
  [String]
  Is-swapped
Following bound tyvar t_amR = Doc
newWantedEvVar/cache miss [W] cobox_awi :: Doc ~ Doc
setEvBind
  ev = cobox_asr
  tm  = CO Sym cobox_awi
rewriteEqEvidence
  [W] cobox_asr :: Doc ~ t_amR
  Doc
  Doc
  Sym cobox_awi
canEqTyVar2
  t_amR
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awi :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awi :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awj :: String ~ String
setEvBind
  ev = cobox_awi
  tm  = CO [cobox_awj]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awj :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awj :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awj :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awk :: Char ~ Char
setEvBind
  ev = cobox_awj
  tm  = CO [cobox_awk]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ass :: t_anw
                                ~ t_anu [" a type equality t_anw
                                                           ~
                                                           t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ass :: t_anw
                                 ~ t_anu [" a type equality t_anw
                                                            ~
                                                            t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ass :: t_anw ~ t_anu [" a type equality t_anw
                                                    ~
                                                    t_anu " Pretty.hs:(156,6)-(157,42)] (CNonCanonical)
canEvNC:eq
  t_anw
  t_anu
can_eq_nc
  [W] cobox_ass :: t_anw ~ t_anu
  t_anw
  t_anw
  t_anu
  t_anu
canEqTyVar
  t_anw
  t_anu
  Not-swapped
Following bound tyvar t_anw = Doc
canEqTyVar2
  t_anw
  t_anu
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_ass :: Doc ~ t_anu
  Doc
  Doc
  t_anu
  t_anu
can_eq_nc
  [W] cobox_ass :: Doc ~ t_anu
  [String]
  Doc
  t_anu
  t_anu
canEqTyVar
  t_anu
  [String]
  Is-swapped
Following bound tyvar t_anu = Doc
newWantedEvVar/cache miss [W] cobox_awl :: Doc ~ Doc
setEvBind
  ev = cobox_ass
  tm  = CO Sym cobox_awl
rewriteEqEvidence
  [W] cobox_ass :: Doc ~ t_anu
  Doc
  Doc
  Sym cobox_awl
canEqTyVar2
  t_anu
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awl :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awl :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awm :: String ~ String
setEvBind
  ev = cobox_awl
  tm  = CO [cobox_awm]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awm :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awm :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awm :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awn :: Char ~ Char
setEvBind
  ev = cobox_awm
  tm  = CO [cobox_awn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ast :: t_an4
                                ~ t_anu [" a type equality t_an4
                                                           ~
                                                           t_anu " Pretty.hs:156:6-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ast :: t_an4
                                 ~ t_anu [" a type equality t_an4
                                                            ~
                                                            t_anu " Pretty.hs:156:6-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ast :: t_an4 ~ t_anu [" a type equality t_an4
                                                    ~
                                                    t_anu " Pretty.hs:156:6-22] (CNonCanonical)
canEvNC:eq
  t_an4
  t_anu
can_eq_nc
  [W] cobox_ast :: t_an4 ~ t_anu
  t_an4
  t_an4
  t_anu
  t_anu
canEqTyVar
  t_an4
  t_anu
  Not-swapped
Following bound tyvar t_an4 = Doc
canEqTyVar2
  t_an4
  t_anu
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_ast :: Doc ~ t_anu
  Doc
  Doc
  t_anu
  t_anu
can_eq_nc
  [W] cobox_ast :: Doc ~ t_anu
  [String]
  Doc
  t_anu
  t_anu
canEqTyVar
  t_anu
  [String]
  Is-swapped
Following bound tyvar t_anu = Doc
newWantedEvVar/cache miss [W] cobox_awo :: Doc ~ Doc
setEvBind
  ev = cobox_ast
  tm  = CO Sym cobox_awo
rewriteEqEvidence
  [W] cobox_ast :: Doc ~ t_anu
  Doc
  Doc
  Sym cobox_awo
canEqTyVar2
  t_anu
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awo :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awo :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awp :: String ~ String
setEvBind
  ev = cobox_awo
  tm  = CO [cobox_awp]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awp :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awp :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awp :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awq :: Char ~ Char
setEvBind
  ev = cobox_awp
  tm  = CO [cobox_awq]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awq :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awq
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asu :: t_anH
                                ~ t_an2 [" a type equality t_anH
                                                           ~
                                                           t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asu :: t_anH
                                 ~ t_an2 [" a type equality t_anH
                                                            ~
                                                            t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asu :: t_anH ~ t_an2 [" a type equality t_anH
                                                    ~
                                                    t_an2 " Pretty.hs:156:6-14] (CNonCanonical)
canEvNC:eq
  t_anH
  t_an2
can_eq_nc
  [W] cobox_asu :: t_anH ~ t_an2
  t_anH
  t_anH
  t_an2
  t_an2
canEqTyVar
  t_anH
  t_an2
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_an2
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asu :: Doc ~ t_an2
  Doc
  Doc
  t_an2
  t_an2
can_eq_nc
  [W] cobox_asu :: Doc ~ t_an2
  [String]
  Doc
  t_an2
  t_an2
canEqTyVar
  t_an2
  [String]
  Is-swapped
Following bound tyvar t_an2 = Doc
newWantedEvVar/cache miss [W] cobox_awr :: Doc ~ Doc
setEvBind
  ev = cobox_asu
  tm  = CO Sym cobox_awr
rewriteEqEvidence
  [W] cobox_asu :: Doc ~ t_an2
  Doc
  Doc
  Sym cobox_awr
canEqTyVar2
  t_an2
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awr :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awr :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aws :: String ~ String
setEvBind
  ev = cobox_awr
  tm  = CO [cobox_aws]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aws :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aws :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aws :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awt :: Char ~ Char
setEvBind
  ev = cobox_aws
  tm  = CO [cobox_awt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asv :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:156:12-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asv :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:156:12-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asv :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:156:12-14] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_asv :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_awu :: String ~ [Char]
setEvBind
  ev = cobox_asv
  tm  = CO Sym cobox_awu
rewriteEqEvidence
  [W] cobox_asv :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_awu
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_awu :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_awu :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_awv :: Char ~ Char
setEvBind
  ev = cobox_awu
  tm  = CO [cobox_awv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asw :: t_ash
                                ~ t_an3 [" a type equality t_ash
                                                           ~
                                                           t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asw :: t_ash
                                 ~ t_an3 [" a type equality t_ash
                                                            ~
                                                            t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asw :: t_ash ~ t_an3 [" a type equality t_ash
                                                    ~
                                                    t_an3 " Pretty.hs:156:20-22] (CNonCanonical)
canEvNC:eq
  t_ash
  t_an3
can_eq_nc
  [W] cobox_asw :: t_ash ~ t_an3
  t_ash
  t_ash
  t_an3
  t_an3
canEqTyVar
  t_ash
  t_an3
  Not-swapped
Following bound tyvar t_ash = Doc
canEqTyVar2
  t_ash
  t_an3
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asw :: Doc ~ t_an3
  Doc
  Doc
  t_an3
  t_an3
can_eq_nc
  [W] cobox_asw :: Doc ~ t_an3
  [String]
  Doc
  t_an3
  t_an3
canEqTyVar
  t_an3
  [String]
  Is-swapped
Following bound tyvar t_an3 = Doc
newWantedEvVar/cache miss [W] cobox_aww :: Doc ~ Doc
setEvBind
  ev = cobox_asw
  tm  = CO Sym cobox_aww
rewriteEqEvidence
  [W] cobox_asw :: Doc ~ t_an3
  Doc
  Doc
  Sym cobox_aww
canEqTyVar2
  t_an3
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aww :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aww :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awx :: String ~ String
setEvBind
  ev = cobox_aww
  tm  = CO [cobox_awx]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awx :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awx :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awx :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awy :: Char ~ Char
setEvBind
  ev = cobox_awx
  tm  = CO [cobox_awy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asx :: t_amN
                                ~ t_anv [" a type equality t_amN
                                                           ~
                                                           t_anv " Pretty.hs:157:6-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asx :: t_amN
                                 ~ t_anv [" a type equality t_amN
                                                            ~
                                                            t_anv " Pretty.hs:157:6-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asx :: t_amN ~ t_anv [" a type equality t_amN
                                                    ~
                                                    t_anv " Pretty.hs:157:6-42] (CNonCanonical)
canEvNC:eq
  t_amN
  t_anv
can_eq_nc
  [W] cobox_asx :: t_amN ~ t_anv
  t_amN
  t_amN
  t_anv
  t_anv
canEqTyVar
  t_amN
  t_anv
  Not-swapped
Following bound tyvar t_amN = Doc
canEqTyVar2
  t_amN
  t_anv
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asx :: Doc ~ t_anv
  Doc
  Doc
  t_anv
  t_anv
can_eq_nc
  [W] cobox_asx :: Doc ~ t_anv
  [String]
  Doc
  t_anv
  t_anv
canEqTyVar
  t_anv
  [String]
  Is-swapped
Following bound tyvar t_anv = Doc
newWantedEvVar/cache miss [W] cobox_awz :: Doc ~ Doc
setEvBind
  ev = cobox_asx
  tm  = CO Sym cobox_awz
rewriteEqEvidence
  [W] cobox_asx :: Doc ~ t_anv
  Doc
  Doc
  Sym cobox_awz
canEqTyVar2
  t_anv
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awz :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awz :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awA :: String ~ String
setEvBind
  ev = cobox_awz
  tm  = CO [cobox_awA]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awA :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awA :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awA :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awB :: Char ~ Char
setEvBind
  ev = cobox_awA
  tm  = CO [cobox_awB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asA :: [b_asz]
                                ~ t_amM [" a type equality [b_asz]
                                                           ~
                                                           t_amM " Pretty.hs:157:22-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asA :: [b_asz]
                                 ~ t_amM [" a type equality [b_asz]
                                                            ~
                                                            t_amM " Pretty.hs:157:22-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asA :: [b_asz] ~ t_amM [" a type equality [b_asz]
                                                      ~
                                                      t_amM " Pretty.hs:157:22-41] (CNonCanonical)
canEvNC:eq
  [b_asz]
  t_amM
can_eq_nc
  [W] cobox_asA :: [b_asz] ~ t_amM
  [b_asz]
  [b_asz]
  t_amM
  t_amM
canEqTyVar
  t_amM
  [b_asz]
  Is-swapped
Following bound tyvar t_amM = [Doc]
newWantedEvVar/cache miss [W] cobox_awC :: [Doc] ~ [b_asz]
setEvBind
  ev = cobox_asA
  tm  = CO Sym cobox_awC
rewriteEqEvidence
  [W] cobox_asA :: [b_asz] ~ t_amM
  [Doc]
  [b_asz]
  Sym cobox_awC
canEqTyVar2
  t_amM
  [b_asz]
  Is-swapped
  [Doc]
  <[Doc]>_N
can_eq_nc
  [W] cobox_awC :: [Doc] ~ [b_asz]
  [Doc]
  [Doc]
  [b_asz]
  [b_asz]
newWantedEvVar/cache miss [W] cobox_awD :: Doc ~ b_asz
setEvBind
  ev = cobox_awC
  tm  = CO [cobox_awD]_N
canEvNC:eq
  Doc
  b_asz
can_eq_nc
  [W] cobox_awD :: Doc ~ b_asz
  Doc
  Doc
  b_asz
  b_asz
can_eq_nc
  [W] cobox_awD :: Doc ~ b_asz
  [String]
  Doc
  b_asz
  b_asz
canEqTyVar
  b_asz
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_awE :: b_asz ~ Doc
setEvBind
  ev = cobox_awD
  tm  = CO Sym cobox_awE
rewriteEqEvidence
  [W] cobox_awD :: Doc ~ b_asz
  b_asz
  Doc
  Sym cobox_awE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awE :: b_asz
                                 ~ Doc [" a type equality [b_asz]
                                                          ~
                                                          t_amM " Pretty.hs:157:22-41] (CTyEqCan)
Sneaky unification:
  Unifies: b_asz := Doc
  Coercion: b_asz ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_asz := Doc
setEvBind
  ev = cobox_awE
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  b_asz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
117[<C:0,F:0>] [W] cobox_awE :: b_asz ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asB :: t_asj
                                ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                      ~
                                                                      a_asy
                                                                      -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asB :: t_asj
                                 ~ (a_asy -> b_asz) [" a type equality t_asj
                                                                       ~
                                                                       a_asy
                                                                       -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asB :: t_asj ~ (a_asy -> b_asz) [" a type equality t_asj
                                                               ~
                                                               a_asy
                                                               -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
canEvNC:eq
  t_asj
  a_asy -> b_asz
can_eq_nc
  [W] cobox_asB :: t_asj ~ (a_asy -> b_asz)
  t_asj
  t_asj
  a_asy -> b_asz
  a_asy -> b_asz
canEqTyVar
  t_asj
  a_asy -> b_asz
  Not-swapped
Following bound tyvar t_asj = t_ask -> t_asl
canEqTyVar2
  t_asj
  a_asy -> b_asz
  Not-swapped
  t_ask -> t_asl
  <t_ask -> t_asl>_N
can_eq_nc
  [W] cobox_asB :: (t_ask -> t_asl) ~ (a_asy -> b_asz)
  t_ask -> t_asl
  t_ask -> t_asl
  a_asy -> b_asz
  a_asy -> b_asz
newWantedEvVar/cache miss [W] cobox_awF :: t_ask ~ a_asy
newWantedEvVar/cache miss [W] cobox_awG :: t_asl ~ b_asz
setEvBind
  ev = cobox_asB
  tm  = CO cobox_awF -> cobox_awG
canEvNC:eq
  t_ask
  a_asy
can_eq_nc
  [W] cobox_awF :: t_ask ~ a_asy
  t_ask
  t_ask
  a_asy
  a_asy
canEqTyVar
  t_ask
  a_asy
  Not-swapped
Following bound tyvar t_ask = Doc
canEqTyVar2
  t_ask
  a_asy
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awF :: Doc ~ a_asy
  Doc
  Doc
  a_asy
  a_asy
can_eq_nc
  [W] cobox_awF :: Doc ~ a_asy
  [String]
  Doc
  a_asy
  a_asy
canEqTyVar
  a_asy
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_awH :: a_asy ~ Doc
setEvBind
  ev = cobox_awF
  tm  = CO Sym cobox_awH
rewriteEqEvidence
  [W] cobox_awF :: Doc ~ a_asy
  a_asy
  Doc
  Sym cobox_awH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_awH :: a_asy ~ Doc [" a type equality t_asj
                                                                ~
                                                                a_asy
                                                                -> b_asz " Pretty.hs:157:26-36] (CTyEqCan)
Sneaky unification:
  Unifies: a_asy := Doc
  Coercion: a_asy ~ Doc
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_asy := Doc
setEvBind
  ev = cobox_awH
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  a_asy
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
118[<C:0,F:0>] [W] cobox_awH :: a_asy ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_awG :: t_asl
                                ~ b_asz [" a type equality t_asj
                                                           ~
                                                           a_asy
                                                           -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_awG :: t_asl
                                 ~ b_asz [" a type equality t_asj
                                                            ~
                                                            a_asy
                                                            -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_awG :: t_asl ~ b_asz [" a type equality t_asj
                                                    ~
                                                    a_asy
                                                    -> b_asz " Pretty.hs:157:26-36] (CNonCanonical)
canEvNC:eq
  t_asl
  b_asz
can_eq_nc
  [W] cobox_awG :: t_asl ~ b_asz
  t_asl
  t_asl
  b_asz
  b_asz
canEqTyVar
  t_asl
  b_asz
  Not-swapped
Following bound tyvar t_asl = Doc
canEqTyVar2
  t_asl
  b_asz
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awG :: Doc ~ b_asz
  Doc
  Doc
  b_asz
  b_asz
can_eq_nc
  [W] cobox_awG :: Doc ~ b_asz
  [String]
  Doc
  b_asz
  b_asz
canEqTyVar
  b_asz
  [String]
  Is-swapped
Following bound tyvar b_asz = Doc
newWantedEvVar/cache miss [W] cobox_awI :: Doc ~ Doc
setEvBind
  ev = cobox_awG
  tm  = CO Sym cobox_awI
rewriteEqEvidence
  [W] cobox_awG :: Doc ~ b_asz
  Doc
  Doc
  Sym cobox_awI
canEqTyVar2
  b_asz
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awI :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awI :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awJ :: String ~ String
setEvBind
  ev = cobox_awI
  tm  = CO [cobox_awJ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awJ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awJ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awJ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awK :: Char ~ Char
setEvBind
  ev = cobox_awJ
  tm  = CO [cobox_awK]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asC :: [t_ash]
                                ~ [a_asy] [" a type equality [t_ash]
                                                             ~
                                                             [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asC :: [t_ash]
                                 ~ [a_asy] [" a type equality [t_ash]
                                                              ~
                                                              [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asC :: [t_ash] ~ [a_asy] [" a type equality [t_ash]
                                                        ~
                                                        [a_asy] " Pretty.hs:157:38-41] (CNonCanonical)
canEvNC:eq
  [t_ash]
  [a_asy]
can_eq_nc
  [W] cobox_asC :: [t_ash] ~ [a_asy]
  [t_ash]
  [t_ash]
  [a_asy]
  [a_asy]
newWantedEvVar/cache miss [W] cobox_awL :: t_ash ~ a_asy
setEvBind
  ev = cobox_asC
  tm  = CO [cobox_awL]_N
canEvNC:eq
  t_ash
  a_asy
can_eq_nc
  [W] cobox_awL :: t_ash ~ a_asy
  t_ash
  t_ash
  a_asy
  a_asy
canEqTyVar
  t_ash
  a_asy
  Not-swapped
Following bound tyvar t_ash = Doc
canEqTyVar2
  t_ash
  a_asy
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awL :: Doc ~ a_asy
  Doc
  Doc
  a_asy
  a_asy
can_eq_nc
  [W] cobox_awL :: Doc ~ a_asy
  [String]
  Doc
  a_asy
  a_asy
canEqTyVar
  a_asy
  [String]
  Is-swapped
Following bound tyvar a_asy = Doc
newWantedEvVar/cache miss [W] cobox_awM :: Doc ~ Doc
setEvBind
  ev = cobox_awL
  tm  = CO Sym cobox_awM
rewriteEqEvidence
  [W] cobox_awL :: Doc ~ a_asy
  Doc
  Doc
  Sym cobox_awM
canEqTyVar2
  a_asy
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awM :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awM :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awN :: String ~ String
setEvBind
  ev = cobox_awM
  tm  = CO [cobox_awN]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awN :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awN :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awN :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awO :: Char ~ Char
setEvBind
  ev = cobox_awN
  tm  = CO [cobox_awO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asD :: t_anH
                                ~ t_anv [" a type equality t_anH
                                                           ~
                                                           t_anv " Pretty.hs:158:6-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asD :: t_anH
                                 ~ t_anv [" a type equality t_anH
                                                            ~
                                                            t_anv " Pretty.hs:158:6-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asD :: t_anH ~ t_anv [" a type equality t_anH
                                                    ~
                                                    t_anv " Pretty.hs:158:6-14] (CNonCanonical)
canEvNC:eq
  t_anH
  t_anv
can_eq_nc
  [W] cobox_asD :: t_anH ~ t_anv
  t_anH
  t_anH
  t_anv
  t_anv
canEqTyVar
  t_anH
  t_anv
  Not-swapped
Following bound tyvar t_anH = Doc
canEqTyVar2
  t_anH
  t_anv
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_asD :: Doc ~ t_anv
  Doc
  Doc
  t_anv
  t_anv
can_eq_nc
  [W] cobox_asD :: Doc ~ t_anv
  [String]
  Doc
  t_anv
  t_anv
canEqTyVar
  t_anv
  [String]
  Is-swapped
Following bound tyvar t_anv = Doc
newWantedEvVar/cache miss [W] cobox_awP :: Doc ~ Doc
setEvBind
  ev = cobox_asD
  tm  = CO Sym cobox_awP
rewriteEqEvidence
  [W] cobox_asD :: Doc ~ t_anv
  Doc
  Doc
  Sym cobox_awP
canEqTyVar2
  t_anv
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_awP :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_awP :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_awQ :: String ~ String
setEvBind
  ev = cobox_awP
  tm  = CO [cobox_awQ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_awQ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_awQ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_awQ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_awR :: Char ~ Char
setEvBind
  ev = cobox_awQ
  tm  = CO [cobox_awR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_asE :: [Char]
                                ~ t_anG [" a type equality [Char]
                                                           ~
                                                           t_anG " Pretty.hs:158:12-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_asE :: [Char]
                                 ~ t_anG [" a type equality [Char]
                                                            ~
                                                            t_anG " Pretty.hs:158:12-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_asE :: [Char] ~ t_anG [" a type equality [Char]
                                                     ~
                                                     t_anG " Pretty.hs:158:12-14] (CNonCanonical)
canEvNC:eq
  [Char]
  t_anG
can_eq_nc
  [W] cobox_asE :: [Char] ~ t_anG
  [Char]
  [Char]
  t_anG
  t_anG
canEqTyVar
  t_anG
  [Char]
  Is-swapped
Following bound tyvar t_anG = String
newWantedEvVar/cache miss [W] cobox_awS :: String ~ [Char]
setEvBind
  ev = cobox_asE
  tm  = CO Sym cobox_awS
rewriteEqEvidence
  [W] cobox_asE :: [Char] ~ t_anG
  String
  [Char]
  Sym cobox_awS
canEqTyVar2
  t_anG
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_awS :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_awS :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_awT :: Char ~ Char
setEvBind
  ev = cobox_awS
  tm  = CO [cobox_awT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_awT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_awT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] $dNum_arv :: Num
                                  a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] $dNum_arv :: Num
                                   a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
canonicalize (non-canonical)
  [W] $dNum_arv :: Num
                     a_aru [" the literal ‘1’ " Pretty.hs:141:35] (CNonCanonical)
canEvNC:cls Num [a_aru]
Following bound tyvar a_aru = Int
canClass
  [W] $dNum_arv :: Num a_aru Num [a_aru]
  Num Int
  Just [W] $dNum_arv :: Num Int
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] $dNum_arv :: Num
                                   Int [" the literal ‘1’ " Pretty.hs:141:35] (CDictCan)
end stage interact with inerts }
runStage top-level reactions {
  workitem   =  [W] $dNum_arv :: Num
                                   Int [" the literal ‘1’ " Pretty.hs:141:35] (CDictCan)
doTopReact
  [W] $dNum_arv :: Num
                     Int [" the literal ‘1’ " Pretty.hs:141:35] (CDictCan)
matchClassInst
  pred = Num Int
  inerts= Equalities:
          Type-function equalities:
          No-eqs: True
          Dictionaries:
          Irreds:
          Insolubles = {}
          Solved dicts 0
          Solved funeqs 0
  untouchables= 0
matchClass success
  dict Num Int
  witness GHC.Num.$fNumInt Num Int
updSolvedSetTcs: [W] $dNum_arv :: Num Int
doTopReact/found nullary instance for $dNum_arv
setEvBind
  ev = $dNum_arv
  tm  = GHC.Num.$fNumInt @[] []
123[<C:0,F:0>] [W] $dNum_arv :: Num
                                  Int: Top react: Dict/Top (solved, no new work)
end stage top-level reactions }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 1
               Solved funeqs 0
solveFlats end } {}
simpl_loop, iteration 1
solveWanteds }
  unsolved_flats   = {}
  unsolved_implics = {}
  current evbinds  = {cobox_amO = CO Sym cobox_asG,
                      cobox_amP = CO Sym cobox_asH, cobox_amS = CO Sym cobox_asI,
                      cobox_amT = CO Sym cobox_asJ, cobox_amW = CO Sym cobox_asK,
                      cobox_amX = CO Sym cobox_asL, cobox_an0 = CO Sym cobox_asM,
                      cobox_an1 = CO Sym cobox_asN, cobox_an5 = CO Sym cobox_asO,
                      cobox_an6 = CO Sym cobox_asP, cobox_an7 = CO Sym cobox_asQ,
                      cobox_ana = CO Sym cobox_asR, cobox_anb = CO Sym cobox_asS,
                      cobox_anm = CO Sym cobox_asT, cobox_ann = CO Sym cobox_asU,
                      cobox_anr = CO Sym cobox_asV, cobox_ans = CO Sym cobox_asW,
                      cobox_ant = CO Sym cobox_asX, cobox_anx = CO Sym cobox_asY,
                      cobox_any = CO Sym cobox_asZ, cobox_anz = CO Sym cobox_at0,
                      cobox_anD = CO Sym cobox_at1, cobox_anE = CO Sym cobox_at2,
                      cobox_anF = CO Sym cobox_at3, cobox_anI = CO Sym cobox_at4,
                      cobox_anJ = CO Sym cobox_at5, cobox_anL = CO Sym cobox_at6,
                      cobox_anP = CO Sym cobox_at7, cobox_anQ = CO <Int>_N,
                      cobox_anR = CO Sym cobox_ata, cobox_anT = CO Sym cobox_atb,
                      cobox_anU = CO [cobox_atd]_N, cobox_anV = CO [cobox_ate]_N,
                      cobox_ao0 = CO <t_anY -> t_anZ>_N, cobox_ao3 = CO Sym cobox_atg,
                      cobox_ao4 = CO [cobox_ath]_N, cobox_ao5 = CO Sym cobox_atj,
                      cobox_ao6 = CO <[Char]>_N, cobox_aob = CO Sym cobox_atk,
                      cobox_aoc = CO cobox_atn -> cobox_ato,
                      cobox_aod = CO [cobox_att]_N, cobox_aog = CO Sym cobox_atw,
                      cobox_aoh = CO [cobox_atz]_N, cobox_aoi = CO [cobox_atC]_N,
                      cobox_aol = CO Sym cobox_atF, cobox_aom = CO Sym cobox_atI,
                      cobox_aoo = CO Sym cobox_atL, cobox_aop = CO Sym cobox_atO,
                      cobox_aot = CO Sym cobox_atR, cobox_aow = CO <[a_aos]>_N,
                      cobox_aox = CO [cobox_atS]_N, cobox_aoz = CO Sym cobox_atV,
                      cobox_aoC = CO [cobox_atY]_N, cobox_aoD = CO [cobox_atZ]_N,
                      cobox_aoF = CO [cobox_au2]_N, cobox_aoH = CO Sym cobox_au3,
                      cobox_aoJ = CO <[Char]>_N, cobox_aoK = CO [cobox_au6]_N,
                      cobox_aoN = CO <[Char]>_N, cobox_aoO = CO [cobox_au9]_N,
                      cobox_aoP = CO [cobox_auc]_N, cobox_aoQ = CO Sym cobox_auf,
                      cobox_aoT = CO Sym cobox_aug, cobox_aoU = CO [cobox_auj]_N,
                      cobox_aoW = CO Sym cobox_aum, cobox_aoX = CO Sym cobox_aup,
                      cobox_aoY = CO Sym cobox_aus, $dNum_arv = GHC.Num.$fNumInt @[] [],
                      cobox_arw = CO cobox_auv -> cobox_auw,
                      cobox_arx = CO Sym cobox_aux, cobox_arA = CO Sym cobox_auA,
                      cobox_arB = CO Sym cobox_auD, cobox_arE = CO Sym cobox_auF,
                      cobox_arH = CO Sym cobox_auI, cobox_arI = CO Sym cobox_auL,
                      cobox_arK = CO Sym cobox_auO, cobox_arL = CO Sym cobox_auR,
                      cobox_arN = CO Sym cobox_auU, cobox_arO = CO Sym cobox_auX,
                      cobox_arP = CO Sym cobox_av0, cobox_arQ = CO Sym cobox_av3,
                      cobox_arR = CO Sym cobox_av6, cobox_arS = CO Sym cobox_av9,
                      cobox_arT = CO Sym cobox_avb, cobox_arU = CO Sym cobox_ave,
                      cobox_arW = CO Sym cobox_avj, cobox_arX = CO Sym cobox_avm,
                      cobox_arY = CO Sym cobox_avp, cobox_arZ = CO Sym cobox_avs,
                      cobox_as0 = CO Sym cobox_avu, cobox_as1 = CO Sym cobox_avx,
                      cobox_as2 = CO Sym cobox_avB, cobox_as3 = CO Sym cobox_avE,
                      cobox_as9 = CO cobox_avG -> cobox_avH,
                      cobox_asa = CO cobox_avL -> cobox_avM,
                      cobox_asb = CO Sym cobox_avY, cobox_ase = CO Sym cobox_aw1,
                      cobox_asf = CO Sym cobox_aw4, cobox_asg = CO Sym cobox_aw7,
                      cobox_asi = CO Sym cobox_aw9, cobox_asm = CO <t_ask -> t_asl>_N,
                      cobox_asn = CO Sym cobox_awc, cobox_aso = CO Sym cobox_awd,
                      cobox_asp = CO Sym cobox_awg, cobox_asq = CO <Doc>_N,
                      cobox_asr = CO Sym cobox_awi, cobox_ass = CO Sym cobox_awl,
                      cobox_ast = CO Sym cobox_awo, cobox_asu = CO Sym cobox_awr,
                      cobox_asv = CO Sym cobox_awu, cobox_asw = CO Sym cobox_aww,
                      cobox_asx = CO Sym cobox_awz, cobox_asA = CO Sym cobox_awC,
                      cobox_asB = CO cobox_awF -> cobox_awG,
                      cobox_asC = CO [cobox_awL]_N, cobox_asD = CO Sym cobox_awP,
                      cobox_asE = CO Sym cobox_awS, cobox_asG = CO <[Doc]>_N,
                      cobox_asH = CO <Doc>_N, cobox_asI = CO <[Doc]>_N,
                      cobox_asJ = CO <Doc>_N, cobox_asK = CO <[Doc]>_N,
                      cobox_asL = CO <Doc>_N, cobox_asM = CO <[Doc]>_N,
                      cobox_asN = CO <Doc>_N, cobox_asO = CO <Doc>_N,
                      cobox_asP = CO <Doc>_N, cobox_asQ = CO <Doc>_N,
                      cobox_asR = CO <Int>_N, cobox_asS = CO <String>_N,
                      cobox_asT = CO <Doc>_N, cobox_asU = CO <IO ()>_N,
                      cobox_asV = CO <Int>_N, cobox_asW = CO <Doc>_N,
                      cobox_asX = CO <Doc>_N, cobox_asY = CO <Doc>_N,
                      cobox_asZ = CO <Doc>_N, cobox_at0 = CO <Doc>_N,
                      cobox_at1 = CO <Doc>_N, cobox_at2 = CO <Doc>_N,
                      cobox_at3 = CO <Doc>_N, cobox_at4 = CO <String>_N,
                      cobox_at5 = CO <Doc>_N, cobox_at6 = CO <Doc>_N,
                      cobox_at7 = CO [cobox_at8]_N, cobox_at8 = CO Sym cobox_at9,
                      cobox_at9 = CO <Char>_N, cobox_ata = CO <Char>_N,
                      cobox_atb = CO IO cobox_atc_N, cobox_atc = CO <()>_N,
                      cobox_atd = CO <Char>_N, cobox_ate = CO [cobox_atf]_N,
                      cobox_atf = CO <Char>_N, cobox_atg = CO <[a_ao2]>_N,
                      cobox_ath = CO Sym cobox_ati, cobox_ati = CO <Char>_N,
                      cobox_atj = CO <Int>_N, cobox_atk = CO [cobox_atl]_N,
                      cobox_atl = CO Sym cobox_atm, cobox_atm = CO <String>_N,
                      cobox_atn = CO Sym cobox_atp, cobox_ato = CO Sym cobox_atq,
                      cobox_atp = CO <[Char]>_N, cobox_atq = CO [cobox_atr]_N,
                      cobox_atr = CO Sym cobox_ats, cobox_ats = CO <Char>_N,
                      cobox_att = CO Sym cobox_atu, cobox_atu = CO [cobox_atv]_N,
                      cobox_atv = CO <Char>_N, cobox_atw = CO [cobox_atx]_N,
                      cobox_atx = CO Sym cobox_aty, cobox_aty = CO <String>_N,
                      cobox_atz = CO Sym cobox_atA, cobox_atA = CO [cobox_atB]_N,
                      cobox_atB = CO <Char>_N, cobox_atC = CO Sym cobox_atD,
                      cobox_atD = CO [cobox_atE]_N, cobox_atE = CO <Char>_N,
                      cobox_atF = CO [cobox_atG]_N, cobox_atG = CO Sym cobox_atH,
                      cobox_atH = CO <String>_N, cobox_atI = CO [cobox_atJ]_N,
                      cobox_atJ = CO [cobox_atK]_N, cobox_atK = CO <Char>_N,
                      cobox_atL = CO [cobox_atM]_N, cobox_atM = CO Sym cobox_atN,
                      cobox_atN = CO <String>_N, cobox_atO = CO [cobox_atP]_N,
                      cobox_atP = CO [cobox_atQ]_N, cobox_atQ = CO <Char>_N,
                      cobox_atR = CO <Int>_N, cobox_atS = CO Sym cobox_atT,
                      cobox_atT = CO [cobox_atU]_N, cobox_atU = CO <Char>_N,
                      cobox_atV = CO [cobox_atW]_N, cobox_atW = CO Sym cobox_atX,
                      cobox_atX = CO <String>_N, cobox_atY = CO <String>_N,
                      cobox_atZ = CO Sym cobox_au0, cobox_au0 = CO [cobox_au1]_N,
                      cobox_au1 = CO <Char>_N, cobox_au2 = CO <String>_N,
                      cobox_au3 = CO [cobox_au4]_N, cobox_au4 = CO Sym cobox_au5,
                      cobox_au5 = CO <Char>_N, cobox_au6 = CO Sym cobox_au7,
                      cobox_au7 = CO [cobox_au8]_N, cobox_au8 = CO <Char>_N,
                      cobox_au9 = CO Sym cobox_aua, cobox_aua = CO [cobox_aub]_N,
                      cobox_aub = CO <Char>_N, cobox_auc = CO Sym cobox_aud,
                      cobox_aud = CO [cobox_aue]_N, cobox_aue = CO <Char>_N,
                      cobox_auf = CO <Int>_N, cobox_aug = CO [cobox_auh]_N,
                      cobox_auh = CO Sym cobox_aui, cobox_aui = CO <String>_N,
                      cobox_auj = CO Sym cobox_auk, cobox_auk = CO [cobox_aul]_N,
                      cobox_aul = CO <Char>_N, cobox_aum = CO [cobox_aun]_N,
                      cobox_aun = CO [cobox_auo]_N, cobox_auo = CO <Char>_N,
                      cobox_aup = CO [cobox_auq]_N, cobox_auq = CO [cobox_aur]_N,
                      cobox_aur = CO <Char>_N, cobox_aus = CO [cobox_aut]_N,
                      cobox_aut = CO [cobox_auu]_N, cobox_auu = CO <Char>_N,
                      cobox_auv = CO <Integer>_N, cobox_auw = CO <Int>_N,
                      cobox_aux = CO [cobox_auy]_N, cobox_auy = CO [cobox_auz]_N,
                      cobox_auz = CO <Char>_N, cobox_auA = CO [cobox_auB]_N,
                      cobox_auB = CO Sym cobox_auC, cobox_auC = CO <String>_N,
                      cobox_auD = CO [cobox_auE]_N, cobox_auE = CO <Char>_N,
                      cobox_auF = CO [cobox_auG]_N, cobox_auG = CO Sym cobox_auH,
                      cobox_auH = CO <String>_N, cobox_auI = CO [cobox_auJ]_N,
                      cobox_auJ = CO Sym cobox_auK, cobox_auK = CO <Doc>_N,
                      cobox_auL = CO [cobox_auM]_N, cobox_auM = CO [cobox_auN]_N,
                      cobox_auN = CO <Char>_N, cobox_auO = CO [cobox_auP]_N,
                      cobox_auP = CO Sym cobox_auQ, cobox_auQ = CO <Doc>_N,
                      cobox_auR = CO [cobox_auS]_N, cobox_auS = CO [cobox_auT]_N,
                      cobox_auT = CO <Char>_N, cobox_auU = CO [cobox_auV]_N,
                      cobox_auV = CO Sym cobox_auW, cobox_auW = CO <Doc>_N,
                      cobox_auX = CO [cobox_auY]_N, cobox_auY = CO [cobox_auZ]_N,
                      cobox_auZ = CO <Char>_N, cobox_av0 = CO [cobox_av1]_N,
                      cobox_av1 = CO [cobox_av2]_N, cobox_av2 = CO <Char>_N,
                      cobox_av3 = CO [cobox_av4]_N, cobox_av4 = CO [cobox_av5]_N,
                      cobox_av5 = CO <Char>_N, cobox_av6 = CO [cobox_av7]_N,
                      cobox_av7 = CO [cobox_av8]_N, cobox_av8 = CO <Char>_N,
                      cobox_av9 = CO [cobox_ava]_N, cobox_ava = CO <Char>_N,
                      cobox_avb = CO [cobox_avc]_N, cobox_avc = CO [cobox_avd]_N,
                      cobox_avd = CO <Char>_N, cobox_ave = CO [cobox_avf]_N,
                      cobox_avf = CO Sym cobox_avg, cobox_avg = CO [cobox_avh]_N,
                      cobox_avh = CO [cobox_avi]_N, cobox_avi = CO <Char>_N,
                      cobox_avj = CO [cobox_avk]_N, cobox_avk = CO [cobox_avl]_N,
                      cobox_avl = CO <Char>_N, cobox_avm = CO [cobox_avn]_N,
                      cobox_avn = CO [cobox_avo]_N, cobox_avo = CO <Char>_N,
                      cobox_avp = CO [cobox_avq]_N, cobox_avq = CO [cobox_avr]_N,
                      cobox_avr = CO <Char>_N, cobox_avs = CO [cobox_avt]_N,
                      cobox_avt = CO <Char>_N, cobox_avu = CO [cobox_avv]_N,
                      cobox_avv = CO [cobox_avw]_N, cobox_avw = CO <Char>_N,
                      cobox_avx = CO [cobox_avy]_N, cobox_avy = CO [cobox_avz]_N,
                      cobox_avz = CO [cobox_avA]_N, cobox_avA = CO <Char>_N,
                      cobox_avB = CO [cobox_avC]_N, cobox_avC = CO [cobox_avD]_N,
                      cobox_avD = CO <Char>_N, cobox_avE = CO [cobox_avF]_N,
                      cobox_avF = CO <Char>_N, cobox_avG = CO Sym cobox_avI,
                      cobox_avH = CO <Doc>_N, cobox_avI = CO [cobox_avJ]_N,
                      cobox_avJ = CO Sym cobox_avK, cobox_avK = CO <Doc>_N,
                      cobox_avL = CO Sym cobox_avN,
                      cobox_avM = CO cobox_avQ -> cobox_avR,
                      cobox_avN = CO [cobox_avO]_N, cobox_avO = CO [cobox_avP]_N,
                      cobox_avP = CO <Char>_N, cobox_avQ = CO Sym cobox_avS,
                      cobox_avR = CO Sym cobox_avV, cobox_avS = CO [cobox_avT]_N,
                      cobox_avT = CO [cobox_avU]_N, cobox_avU = CO <Char>_N,
                      cobox_avV = CO [cobox_avW]_N, cobox_avW = CO [cobox_avX]_N,
                      cobox_avX = CO <Char>_N, cobox_avY = CO [cobox_avZ]_N,
                      cobox_avZ = CO [cobox_aw0]_N, cobox_aw0 = CO <Char>_N,
                      cobox_aw1 = CO [cobox_aw2]_N, cobox_aw2 = CO Sym cobox_aw3,
                      cobox_aw3 = CO <Doc>_N, cobox_aw4 = CO [cobox_aw5]_N,
                      cobox_aw5 = CO [cobox_aw6]_N, cobox_aw6 = CO <Char>_N,
                      cobox_aw7 = CO [cobox_aw8]_N, cobox_aw8 = CO <Char>_N,
                      cobox_aw9 = CO [cobox_awa]_N, cobox_awa = CO Sym cobox_awb,
                      cobox_awb = CO <Doc>_N, cobox_awc = CO <Doc>_N,
                      cobox_awd = CO [cobox_awe]_N, cobox_awe = CO [cobox_awf]_N,
                      cobox_awf = CO <Char>_N, cobox_awg = CO [cobox_awh]_N,
                      cobox_awh = CO <Char>_N, cobox_awi = CO [cobox_awj]_N,
                      cobox_awj = CO [cobox_awk]_N, cobox_awk = CO <Char>_N,
                      cobox_awl = CO [cobox_awm]_N, cobox_awm = CO [cobox_awn]_N,
                      cobox_awn = CO <Char>_N, cobox_awo = CO [cobox_awp]_N,
                      cobox_awp = CO [cobox_awq]_N, cobox_awq = CO <Char>_N,
                      cobox_awr = CO [cobox_aws]_N, cobox_aws = CO [cobox_awt]_N,
                      cobox_awt = CO <Char>_N, cobox_awu = CO [cobox_awv]_N,
                      cobox_awv = CO <Char>_N, cobox_aww = CO [cobox_awx]_N,
                      cobox_awx = CO [cobox_awy]_N, cobox_awy = CO <Char>_N,
                      cobox_awz = CO [cobox_awA]_N, cobox_awA = CO [cobox_awB]_N,
                      cobox_awB = CO <Char>_N, cobox_awC = CO [cobox_awD]_N,
                      cobox_awD = CO Sym cobox_awE, cobox_awE = CO <Doc>_N,
                      cobox_awF = CO Sym cobox_awH, cobox_awG = CO Sym cobox_awI,
                      cobox_awH = CO <Doc>_N, cobox_awI = CO [cobox_awJ]_N,
                      cobox_awJ = CO [cobox_awK]_N, cobox_awK = CO <Char>_N,
                      cobox_awL = CO Sym cobox_awM, cobox_awM = CO [cobox_awN]_N,
                      cobox_awN = CO [cobox_awO]_N, cobox_awO = CO <Char>_N,
                      cobox_awP = CO [cobox_awQ]_N, cobox_awQ = CO [cobox_awR]_N,
                      cobox_awR = CO <Char>_N, cobox_awS = CO [cobox_awT]_N,
                      cobox_awT = CO <Char>_N}
  current tybinds  = (t_amM, [Doc])
                     (t_amN, Doc)
                     (t_amQ, [Doc])
                     (t_amR, Doc)
                     (t_amU, [Doc])
                     (t_amV, Doc)
                     (t_amY, [Doc])
                     (t_amZ, Doc)
                     (t_an2, Doc)
                     (t_an3, Doc)
                     (t_an4, Doc)
                     (t_an8, Int)
                     (t_an9, String)
                     (t_ank, Doc)
                     (t_anl, IO ())
                     (t_ano, Int)
                     (t_anp, Doc)
                     (t_anq, Doc)
                     (t_anu, Doc)
                     (t_anv, Doc)
                     (t_anw, Doc)
                     (t_anA, Doc)
                     (t_anB, Doc)
                     (t_anC, Doc)
                     (t_anG, String)
                     (t_anH, Doc)
                     (t_anK, Doc)
                     (a_anO, Char)
                     (t_anX, t_anY -> t_anZ)
                     (t_anY, [Char])
                     (t_anZ, [a_ao2])
                     (a_ao2, Char)
                     (a_ao9, [Char])
                     (b_aoa, String)
                     (a_aof, String)
                     (t_aok, String)
                     (t_aon, String)
                     (t_aoq, Int)
                     (a_aos, Char)
                     (a_aov, [a_aos])
                     (a_aoy, String)
                     (a_aoB, String)
                     (a_aoE, String)
                     (a_aoG, Char)
                     (a_aoI, [Char])
                     (a_aoM, [Char])
                     (a_aoS, String)
                     (a_aru, Int)
                     (t_arz, String)
                     (t_arD, String)
                     (t_arG, Doc)
                     (t_arJ, Doc)
                     (t_arM, Doc)
                     (a_as7, Doc)
                     (b_as8, Doc)
                     (t_asd, Doc)
                     (t_ash, Doc)
                     (t_asj, t_ask -> t_asl)
                     (t_ask, Doc)
                     (t_asl, Doc)
                     (a_asy, Doc)
                     (b_asz, Doc)
  final wc = WC {}
writeMetaTyVar t_amM := [Doc]
writeMetaTyVar t_amN := Doc
writeMetaTyVar t_amQ := [Doc]
writeMetaTyVar t_amR := Doc
writeMetaTyVar t_amU := [Doc]
writeMetaTyVar t_amV := Doc
writeMetaTyVar t_amY := [Doc]
writeMetaTyVar t_amZ := Doc
writeMetaTyVar t_an2 := Doc
writeMetaTyVar t_an3 := Doc
writeMetaTyVar t_an4 := Doc
writeMetaTyVar t_an8 := Int
writeMetaTyVar t_an9 := String
writeMetaTyVar t_ank := Doc
writeMetaTyVar t_anl := IO ()
writeMetaTyVar t_ano := Int
writeMetaTyVar t_anp := Doc
writeMetaTyVar t_anq := Doc
writeMetaTyVar t_anu := Doc
writeMetaTyVar t_anv := Doc
writeMetaTyVar t_anw := Doc
writeMetaTyVar t_anA := Doc
writeMetaTyVar t_anB := Doc
writeMetaTyVar t_anC := Doc
writeMetaTyVar t_anG := String
writeMetaTyVar t_anH := Doc
writeMetaTyVar t_anK := Doc
writeMetaTyVar a_anO := Char
writeMetaTyVar t_anX := t_anY -> t_anZ
writeMetaTyVar t_anY := [Char]
writeMetaTyVar t_anZ := [a_ao2]
writeMetaTyVar a_ao2 := Char
writeMetaTyVar a_ao9 := [Char]
writeMetaTyVar b_aoa := String
writeMetaTyVar a_aof := String
writeMetaTyVar t_aok := String
writeMetaTyVar t_aon := String
writeMetaTyVar t_aoq := Int
writeMetaTyVar a_aos := Char
writeMetaTyVar a_aov := [a_aos]
writeMetaTyVar a_aoy := String
writeMetaTyVar a_aoB := String
writeMetaTyVar a_aoE := String
writeMetaTyVar a_aoG := Char
writeMetaTyVar a_aoI := [Char]
writeMetaTyVar a_aoM := [Char]
writeMetaTyVar a_aoS := String
writeMetaTyVar a_aru := Int
writeMetaTyVar t_arz := String
writeMetaTyVar t_arD := String
writeMetaTyVar t_arG := Doc
writeMetaTyVar t_arJ := Doc
writeMetaTyVar t_arM := Doc
writeMetaTyVar a_as7 := Doc
writeMetaTyVar b_as8 := Doc
writeMetaTyVar t_asd := Doc
writeMetaTyVar t_ash := Doc
writeMetaTyVar t_asj := t_ask -> t_asl
writeMetaTyVar t_ask := Doc
writeMetaTyVar t_asl := Doc
writeMetaTyVar a_asy := Doc
writeMetaTyVar b_asz := Doc
Constraint solver steps = 123
End simplifyTop }
reportUnsolved {
reportUnsolved }
Tc9
checkHiBootIface
  []
  []
  []
rn12
rn13
Tc2 (src)
Tc3
kcTyClGroup
  module HTML
  type Attributen = String
kcTyClGroup: initial kinds []
env2 []
kcd1 Attributen []
tc_lhs_type:
  String
  Expected kind ‘k_aB1’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_aB1 := *
kcd2 Attributen
Generalise kind
  Attributen
  k_aB1
  []
  *
kcTyClGroup result [(Attributen, *)]
tcTyAndCl generalized kinds [(Attributen, *)]
tcTyAndCl-x type Attributen = String
env2 []
env2 []
tc-syn
  Attributen
  [(rwV, AThing *)]
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Attributen’]
checkValidType String :: *
checkValidType done String :: *
env2 []
kcTyClGroup
  module HTML
  data HTML
    = SingleTag String [Attributen] |
      ClosedTag String [Attributen] [HTML] |
      Tekst String
env2 []
kcTyClGroup: initial kinds
  [(HTML, AThing *), (SingleTag, APromotionErr RecDataConPE),
   (ClosedTag, APromotionErr RecDataConPE),
   (Tekst, APromotionErr RecDataConPE)]
env2 []
env2 []
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [Attributen]
  Expected a type
tc_lhs_type:
  Attributen
  Expected kind ‘*’
lk1 Attributen
lk2 Attributen Type constructor ‘Attributen’
env2 []
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [Attributen]
  Expected a type
tc_lhs_type:
  Attributen
  Expected kind ‘*’
lk1 Attributen
lk2 Attributen Type constructor ‘Attributen’
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML AThing *
env2 []
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
Generalise kind
  HTML
  *
  []
  *
kcTyClGroup result [(HTML, *)]
tcTyAndCl generalized kinds [(HTML, *)]
tcTyAndCl-x
  data HTML
    = SingleTag String [Attributen] |
      ClosedTag String [Attributen] [HTML] |
      Tekst String
env2 []
env2 []
tcConDecl 1 SingleTag
env2 []
tcHsTyVarBndrs {
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
env2 []
tcConArg 1 String
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcConArg 2 String
tcConArg 1 [Attributen]
tc_lhs_type:
  [Attributen]
  Expected a type
tc_lhs_type:
  Attributen
  Expected kind ‘*’
lk1 Attributen
lk2 Attributen Type constructor ‘Attributen’
tcConArg 2 [Attributen]
tcHsTyVarBndrs }
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
tcConDecl 1 ClosedTag
env2 []
tcHsTyVarBndrs {
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
env2 []
tcConArg 1 String
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcConArg 2 String
tcConArg 1 [Attributen]
tc_lhs_type:
  [Attributen]
  Expected a type
tc_lhs_type:
  Attributen
  Expected kind ‘*’
lk1 Attributen
lk2 Attributen Type constructor ‘Attributen’
tcConArg 2 [Attributen]
tcConArg 1 [HTML]
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML AThing *
tcConArg 2 [HTML]
tcHsTyVarBndrs }
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
tcConDecl 1 Tekst
env2 []
tcHsTyVarBndrs {
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
env2 []
tcConArg 1 String
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcConArg 2 String
tcHsTyVarBndrs }
  Hs kind vars: []
  Hs type vars: []
  Kind vars: []
  Type vars: []
Starting validity check [Type constructor ‘HTML’]
cvtc1 HTML
cvtc2 HTML
checkValidDataCon
  SingleTag
  HTML
checkValidType String -> [Attributen] -> HTML :: *
checkValidType done String -> [Attributen] -> HTML :: *
Done validity of data con SingleTag String -> [Attributen] -> HTML
checkValidDataCon
  ClosedTag
  HTML
checkValidType String -> [Attributen] -> [HTML] -> HTML :: *
checkValidType done String -> [Attributen] -> [HTML] -> HTML :: *
Done validity of data con
  ClosedTag String -> [Attributen] -> [HTML] -> HTML
checkValidDataCon
  Tekst
  HTML
checkValidType String -> HTML :: *
checkValidType done String -> HTML :: *
Done validity of data con Tekst String -> HTML
env2 []
kcTyClGroup
  module HTML
  type Requirement = (String, String)
kcTyClGroup: initial kinds []
env2 []
kcd1 Requirement []
tc_lhs_type:
  (String, String)
  Expected kind ‘k_aBc’
tc_lhs_type:
  String
  Expected kind ‘k_aBd’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_aBd := *
tc_lhs_type:
  String
  Expected kind ‘k_aBe’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_aBe := *
writeMetaTyVar k_aBc := *
kcd2 Requirement
Generalise kind
  Requirement
  k_aBc
  []
  *
kcTyClGroup result [(Requirement, *)]
tcTyAndCl generalized kinds [(Requirement, *)]
tcTyAndCl-x type Requirement = (String, String)
env2 []
env2 []
tc-syn
  Requirement
  [(rrs, AThing *)]
tc_lhs_type:
  (String, String)
  Expected kind ‘*’
tc_lhs_type:
  String
  The first argument of a tuple should have kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String
  The second argument of a tuple should have kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Requirement’]
checkValidType (String, String) :: *
checkValidType done (String, String) :: *
env2 []
Adding instances:
addFamInsts
env2 []
tcDeriving
tcDeriving False
tcDeriving 1 []
Adding instances:
Tc3b
tcAmpMissingParentClassWarn/isInsts []
tcAmpMissingParentClassWarn/isInsts []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Monad.join []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.<*> []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.pure []
Tc4
Tc4a
env2 []
Tc5
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [HTML] -> Doc
Before unification
utype_defer
  cobox_aBh
  [HTML]
  t_aBf
  a type equality [HTML] ~ t_aBf
  In the type signature for ‘ppLijstHTML’:
    ppLijstHTML :: [HTML] -> Doc
utype_defer
  cobox_aBi
  Doc
  t_aBg
  a type equality Doc ~ t_aBg
  In the type signature for ‘ppLijstHTML’:
    ppLijstHTML :: [HTML] -> Doc
checkValidType t_aBf -> t_aBg :: *
checkValidType done t_aBf -> t_aBg :: *
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen HTML -> Doc
Before unification
utype_defer
  cobox_aBl
  HTML
  t_aBj
  a type equality HTML ~ t_aBj
  In the type signature for ‘ppHTML’: ppHTML :: HTML -> Doc
utype_defer
  cobox_aBm
  Doc
  t_aBk
  a type equality Doc ~ t_aBk
  In the type signature for ‘ppHTML’: ppHTML :: HTML -> Doc
checkValidType t_aBj -> t_aBk :: *
checkValidType done t_aBj -> t_aBk :: *
tc_lhs_type:
  [Attributen]
  Expected a type
tc_lhs_type:
  Attributen
  Expected kind ‘*’
lk1 Attributen
lk2 Attributen Type constructor ‘Attributen’
tc_lhs_type:
  Doc
  Expected a type
lk1 Doc
lk2 Doc Type constructor ‘Doc’
tcCheckHsTypeAndGen [Attributen] -> Doc
Before unification
utype_defer
  cobox_aBp
  [Attributen]
  t_aBn
  a type equality [Attributen] ~ t_aBn
  In the type signature for ‘prepAttr’:
    prepAttr :: [Attributen] -> Doc
utype_defer
  cobox_aBq
  Doc
  t_aBo
  a type equality Doc ~ t_aBo
  In the type signature for ‘prepAttr’:
    prepAttr :: [Attributen] -> Doc
checkValidType t_aBn -> t_aBo :: *
checkValidType done t_aBn -> t_aBo :: *
tc_lhs_type:
  [HTML]
  Expected a type
tc_lhs_type:
  HTML
  Expected kind ‘*’
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcCheckHsTypeAndGen [HTML] -> Bool
Before unification
utype_defer
  cobox_aBt
  [HTML]
  t_aBr
  a type equality [HTML] ~ t_aBr
  In the type signature for ‘doorloopElementen’:
    doorloopElementen :: [HTML] -> Bool
utype_defer
  cobox_aBu
  Bool
  t_aBs
  a type equality Bool ~ t_aBs
  In the type signature for ‘doorloopElementen’:
    doorloopElementen :: [HTML] -> Bool
checkValidType t_aBr -> t_aBs :: *
checkValidType done t_aBr -> t_aBs :: *
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcCheckHsTypeAndGen HTML -> Bool
Before unification
utype_defer
  cobox_aBx
  HTML
  t_aBv
  a type equality HTML ~ t_aBv
  In the type signature for ‘controleerElement’:
    controleerElement :: HTML -> Bool
utype_defer
  cobox_aBy
  Bool
  t_aBw
  a type equality Bool ~ t_aBw
  In the type signature for ‘controleerElement’:
    controleerElement :: HTML -> Bool
checkValidType t_aBv -> t_aBw :: *
checkValidType done t_aBv -> t_aBw :: *
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcCheckHsTypeAndGen HTML -> Bool
Before unification
utype_defer
  cobox_aBB
  HTML
  t_aBz
  a type equality HTML ~ t_aBz
  In the type signature for ‘simple’: simple :: HTML -> Bool
utype_defer
  cobox_aBC
  Bool
  t_aBA
  a type equality Bool ~ t_aBA
  In the type signature for ‘simple’: simple :: HTML -> Bool
checkValidType t_aBz -> t_aBA :: *
checkValidType done t_aBz -> t_aBA :: *
tc_lhs_type:
  [Requirement]
  Expected a type
tc_lhs_type:
  Requirement
  Expected kind ‘*’
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tc_lhs_type:
  HTML -> Maybe Requirement
  Expected a type
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Maybe Requirement
  Expected a type
tc_lhs_type:
  Maybe
  Expected kind ‘k_aBD’
lk1 Maybe
lk2 Maybe Type constructor ‘Maybe’
writeMetaTyVar k_aBD := * -> *
tc_lhs_type:
  Requirement
  The first argument of ‘Maybe’ should have kind ‘*’
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tcCheckHsTypeAndGen [Requirement] -> HTML -> Maybe Requirement
Before unification
utype_defer
  cobox_aBU
  [Requirement]
  t_aBR
  a type equality [Requirement] ~ t_aBR
  In the type signature for ‘validate’:
    validate :: [Requirement] -> HTML -> Maybe Requirement
utype_defer
  cobox_aBV
  HTML
  t_aBS
  a type equality HTML ~ t_aBS
  In the type signature for ‘validate’:
    validate :: [Requirement] -> HTML -> Maybe Requirement
utype_defer
  cobox_aBW
  Maybe Requirement
  t_aBT
  a type equality Maybe Requirement ~ t_aBT
  In the type signature for ‘validate’:
    validate :: [Requirement] -> HTML -> Maybe Requirement
checkValidType t_aBR -> t_aBS -> t_aBT :: *
checkValidType done t_aBR -> t_aBS -> t_aBT :: *
tc_lhs_type:
  Requirement
  Expected a type
lk1 Requirement
lk2 Requirement Type constructor ‘Requirement’
tc_lhs_type:
  HTML -> Bool
  Expected a type
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcCheckHsTypeAndGen Requirement -> HTML -> Bool
Before unification
utype_defer
  cobox_aC0
  Requirement
  t_aBX
  a type equality Requirement ~ t_aBX
  In the type signature for ‘validate1’:
    validate1 :: Requirement -> HTML -> Bool
utype_defer
  cobox_aC1
  HTML
  t_aBY
  a type equality HTML ~ t_aBY
  In the type signature for ‘validate1’:
    validate1 :: Requirement -> HTML -> Bool
utype_defer
  cobox_aC2
  Bool
  t_aBZ
  a type equality Bool ~ t_aBZ
  In the type signature for ‘validate1’:
    validate1 :: Requirement -> HTML -> Bool
checkValidType t_aBX -> t_aBY -> t_aBZ :: *
checkValidType done t_aBX -> t_aBY -> t_aBZ :: *
tc_lhs_type:
  HTML
  Expected a type
lk1 HTML
lk2 HTML Type constructor ‘HTML’
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen HTML -> String
Before unification
utype_defer
  cobox_aC5
  HTML
  t_aC3
  a type equality HTML ~ t_aC3
  In the type signature for ‘getTagName’:
    getTagName :: HTML -> String
utype_defer
  cobox_aC6
  String
  t_aC4
  a type equality String ~ t_aC4
  In the type signature for ‘getTagName’:
    getTagName :: HTML -> String
checkValidType t_aC3 -> t_aC4 :: *
checkValidType done t_aC3 -> t_aC4 :: *
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  String -> Bool
  Expected a type
tc_lhs_type:
  String
  Expected a type
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  Bool
  Expected a type
lk1 Bool
lk2 Bool Type constructor ‘Bool’
tcCheckHsTypeAndGen String -> String -> Bool
Before unification
utype_defer
  cobox_aCa
  String
  t_aC7
  a type equality String ~ t_aC7
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
utype_defer
  cobox_aCb
  String
  t_aC8
  a type equality String ~ t_aC8
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
utype_defer
  cobox_aCc
  Bool
  t_aC9
  a type equality Bool ~ t_aC9
  In the type signature for ‘eqString’:
    eqString :: String -> String -> Bool
checkValidType t_aC7 -> t_aC8 -> t_aC9 :: *
checkValidType done t_aC7 -> t_aC8 -> t_aC9 :: *
env2
  [(ppLijstHTML,
    Identifier[ppLijstHTML::t_aBf -> t_aBg, <NotTopLevel>]),
   (ppHTML, Identifier[ppHTML::t_aBj -> t_aBk, <NotTopLevel>]),
   (prepAttr, Identifier[prepAttr::t_aBn -> t_aBo, <NotTopLevel>]),
   (doorloopElementen,
    Identifier[doorloopElementen::t_aBr -> t_aBs, <NotTopLevel>]),
   (controleerElement,
    Identifier[controleerElement::t_aBv -> t_aBw, <NotTopLevel>]),
   (simple, Identifier[simple::t_aBz -> t_aBA, <NotTopLevel>]),
   (validate,
    Identifier[validate::t_aBR -> t_aBS -> t_aBT, <NotTopLevel>]),
   (validate1,
    Identifier[validate1::t_aBX -> t_aBY -> t_aBZ, <NotTopLevel>]),
   (getTagName,
    Identifier[getTagName::t_aC3 -> t_aC4, <NotTopLevel>]),
   (eqString,
    Identifier[eqString::t_aC7 -> t_aC8 -> t_aC9, <NotTopLevel>])]
------------------------------------------------
Bindings for { [prepAttr]
Generalisation plan
  CheckGen prepAttr :: t_aBn -> t_aBo
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  prepAttr
  t_aBn -> t_aBo
tcMatchesFun
  prepAttr
  t_aBn -> t_aBo
tcGen
utype_defer
  cobox_aCf
  [t_aCe]
  t_aBn
  a type equality [t_aCe] ~ t_aBn
  In the pattern: []
  In an equation for ‘prepAttr’: prepAttr [] = tekst ""
tcConPat
  []
  []
  [t_aCe]
  []
tcBody t_aBo
utype_defer
  cobox_aCg
  Doc
  t_aBo
  a type equality Doc ~ t_aBo
  In the expression: tekst ""
  In an equation for ‘prepAttr’: prepAttr [] = tekst ""
tcPolyExprNC String
tcGen
utype_defer
  cobox_aCh
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘""’
  In the expression: tekst ""
  In an equation for ‘prepAttr’: prepAttr [] = tekst ""
env2 [(attributen, Identifier[attributen::t_aBn, <NotTopLevel>])]
tcBody t_aBo
Non Application rule (<|>)
utype_defer
  cobox_aCi
  Doc
  t_aBo
  a type equality Doc ~ t_aBo
  In the expression: tekst " " <|> unwords attributen
  In an equation for ‘prepAttr’:
      prepAttr attributen = tekst " " <|> unwords attributen
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aCj
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely ‘tekst " "’
  In the expression: tekst " " <|> unwords attributen
tcPolyExprNC String
tcGen
utype_defer
  cobox_aCk
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘" "’
  In the first argument of ‘(<|>)’, namely ‘tekst " "’
  In the expression: tekst " " <|> unwords attributen
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aCl
  String
  Doc
  a type equality String ~ Doc
  In the second argument of ‘(<|>)’, namely ‘unwords attributen’
  In the expression: tekst " " <|> unwords attributen
tcPolyExprNC [String]
tcGen
utype_defer
  cobox_aCm
  t_aBn
  [String]
  a type equality t_aBn ~ [String]
  In the first argument of ‘unwords’, namely ‘attributen’
  In the second argument of ‘(<|>)’, namely ‘unwords attributen’
addInlinePrags
  prepAttr
  []
csb2 [prepAttr]
} End of bindings for
  [prepAttr]
  NonRecursive
  prepAttr t_aBn -> t_aBo
env2
  [(prepAttr, Identifier[prepAttr::t_aBn -> t_aBo, <NotTopLevel>])]
------------------------------------------------
Bindings for { [controleerElement]
Generalisation plan
  CheckGen controleerElement :: t_aBv -> t_aBw
                                []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  controleerElement
  t_aBv -> t_aBw
tcMatchesFun
  controleerElement
  t_aBv -> t_aBw
tcGen
utype_defer
  cobox_aCo
  HTML
  t_aBv
  a type equality HTML ~ t_aBv
  In the pattern: Tekst _
  In an equation for ‘controleerElement’:
      controleerElement (Tekst _) = True
tcConPat
  Tekst
  []
  HTML
  [String]
tcBody t_aBw
utype_defer
  cobox_aCp
  Bool
  t_aBw
  a type equality Bool ~ t_aBw
  In the expression: True
  In an equation for ‘controleerElement’:
      controleerElement (Tekst _) = True
utype_defer
  cobox_aCq
  HTML
  t_aBv
  a type equality HTML ~ t_aBv
  In the pattern: ClosedTag _ _ [_]
  In an equation for ‘controleerElement’:
      controleerElement (ClosedTag _ _ [_]) = True
tcConPat
  ClosedTag
  []
  HTML
  [String, [Attributen], [HTML]]
tcBody t_aBw
utype_defer
  cobox_aCr
  Bool
  t_aBw
  a type equality Bool ~ t_aBw
  In the expression: True
  In an equation for ‘controleerElement’:
      controleerElement (ClosedTag _ _ [_]) = True
utype_defer
  cobox_aCs
  HTML
  t_aBv
  a type equality HTML ~ t_aBv
  In the pattern: SingleTag _ _
  In an equation for ‘controleerElement’:
      controleerElement (SingleTag _ _) = True
tcConPat
  SingleTag
  []
  HTML
  [String, [Attributen]]
tcBody t_aBw
utype_defer
  cobox_aCt
  Bool
  t_aBw
  a type equality Bool ~ t_aBw
  In the expression: True
  In an equation for ‘controleerElement’:
      controleerElement (SingleTag _ _) = True
tcBody t_aBw
utype_defer
  cobox_aCu
  Bool
  t_aBw
  a type equality Bool ~ t_aBw
  In the expression: False
  In an equation for ‘controleerElement’: controleerElement _ = False
addInlinePrags
  controleerElement
  []
csb2 [controleerElement]
} End of bindings for
  [controleerElement]
  NonRecursive
  controleerElement t_aBv -> t_aBw
env2
  [(controleerElement,
    Identifier[controleerElement::t_aBv -> t_aBw, <NotTopLevel>])]
tc_group rec
  doorloopElementen (x : xs)
    = controleerElement x && doorloopElementen xs
  doorloopElementen [] = True
------------------------------------------------
Bindings for { [doorloopElementen]
Generalisation plan
  CheckGen doorloopElementen :: t_aBr -> t_aBs
                                []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  doorloopElementen
  t_aBr -> t_aBs
tcMatchesFun
  doorloopElementen
  t_aBr -> t_aBs
tcGen
utype_defer
  cobox_aCx
  [t_aCw]
  t_aBr
  a type equality [t_aCw] ~ t_aBr
  In the pattern: x : xs
  In an equation for ‘doorloopElementen’:
      doorloopElementen (x : xs)
        = controleerElement x && doorloopElementen xs
tcConPat
  :
  []
  [t_aCw]
  [t_aCw, [t_aCw]]
env2 [(x, Identifier[x::t_aCw, <NotTopLevel>])]
env2 [(xs, Identifier[xs::[t_aCw], <NotTopLevel>])]
tcBody t_aBs
Non Application rule (&&)
utype_defer
  cobox_aCy
  Bool
  t_aBs
  a type equality Bool ~ t_aBs
  In the expression: controleerElement x && doorloopElementen xs
  In an equation for ‘doorloopElementen’:
      doorloopElementen (x : xs)
        = controleerElement x && doorloopElementen xs
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aCz
  t_aBw
  Bool
  a type equality t_aBw ~ Bool
  In the first argument of ‘(&&)’, namely ‘controleerElement x’
  In the expression: controleerElement x && doorloopElementen xs
tcPolyExprNC t_aBv
tcGen
utype_defer
  cobox_aCA
  t_aCw
  t_aBv
  a type equality t_aCw ~ t_aBv
  In the first argument of ‘controleerElement’, namely ‘x’
  In the first argument of ‘(&&)’, namely ‘controleerElement x’
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aCB
  t_aBs
  Bool
  a type equality t_aBs ~ Bool
  In the second argument of ‘(&&)’, namely ‘doorloopElementen xs’
  In the expression: controleerElement x && doorloopElementen xs
tcPolyExprNC t_aBr
tcGen
utype_defer
  cobox_aCC
  [t_aCw]
  t_aBr
  a type equality [t_aCw] ~ t_aBr
  In the first argument of ‘doorloopElementen’, namely ‘xs’
  In the second argument of ‘(&&)’, namely ‘doorloopElementen xs’
utype_defer
  cobox_aCE
  [t_aCD]
  t_aBr
  a type equality [t_aCD] ~ t_aBr
  In the pattern: []
  In an equation for ‘doorloopElementen’: doorloopElementen [] = True
tcConPat
  []
  []
  [t_aCD]
  []
tcBody t_aBs
utype_defer
  cobox_aCF
  Bool
  t_aBs
  a type equality Bool ~ t_aBs
  In the expression: True
  In an equation for ‘doorloopElementen’: doorloopElementen [] = True
addInlinePrags
  doorloopElementen
  []
csb2 [doorloopElementen]
} End of bindings for
  [doorloopElementen]
  Recursive
  doorloopElementen t_aBr -> t_aBs
env2
  [(doorloopElementen,
    Identifier[doorloopElementen::t_aBr -> t_aBs, <NotTopLevel>])]
tc_group rec
  ppHTML (ClosedTag name att html)
    | not (doorloopElementen html)
    = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
      <-> springIn 2 (ppLijstHTML html)
      <-> tekst "</" <|> tekst name <|> tekst ">"
    | otherwise
    = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
      <|> (ppLijstHTML html)
      <|> tekst "</"
      <|> tekst name
      <|> tekst ">"
  ppHTML (SingleTag name att)
    = tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
  ppHTML (Tekst woorden) = tekst woorden
  ppLijstHTML (x : xs) = ppHTML x <|> ppLijstHTML xs
  ppLijstHTML [] = tekst ""
------------------------------------------------
Bindings for { [ppLijstHTML]
Generalisation plan
  CheckGen ppLijstHTML :: t_aBf -> t_aBg
                          []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  ppLijstHTML
  t_aBf -> t_aBg
tcMatchesFun
  ppLijstHTML
  t_aBf -> t_aBg
tcGen
utype_defer
  cobox_aCI
  [t_aCH]
  t_aBf
  a type equality [t_aCH] ~ t_aBf
  In the pattern: x : xs
  In an equation for ‘ppLijstHTML’:
      ppLijstHTML (x : xs) = ppHTML x <|> ppLijstHTML xs
tcConPat
  :
  []
  [t_aCH]
  [t_aCH, [t_aCH]]
env2 [(x, Identifier[x::t_aCH, <NotTopLevel>])]
env2 [(xs, Identifier[xs::[t_aCH], <NotTopLevel>])]
tcBody t_aBg
Non Application rule (<|>)
utype_defer
  cobox_aCJ
  Doc
  t_aBg
  a type equality Doc ~ t_aBg
  In the expression: ppHTML x <|> ppLijstHTML xs
  In an equation for ‘ppLijstHTML’:
      ppLijstHTML (x : xs) = ppHTML x <|> ppLijstHTML xs
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aCK
  t_aBk
  Doc
  a type equality t_aBk ~ Doc
  In the first argument of ‘(<|>)’, namely ‘ppHTML x’
  In the expression: ppHTML x <|> ppLijstHTML xs
tcPolyExprNC t_aBj
tcGen
utype_defer
  cobox_aCL
  t_aCH
  t_aBj
  a type equality t_aCH ~ t_aBj
  In the first argument of ‘ppHTML’, namely ‘x’
  In the first argument of ‘(<|>)’, namely ‘ppHTML x’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aCM
  t_aBg
  Doc
  a type equality t_aBg ~ Doc
  In the second argument of ‘(<|>)’, namely ‘ppLijstHTML xs’
  In the expression: ppHTML x <|> ppLijstHTML xs
tcPolyExprNC t_aBf
tcGen
utype_defer
  cobox_aCN
  [t_aCH]
  t_aBf
  a type equality [t_aCH] ~ t_aBf
  In the first argument of ‘ppLijstHTML’, namely ‘xs’
  In the second argument of ‘(<|>)’, namely ‘ppLijstHTML xs’
utype_defer
  cobox_aCP
  [t_aCO]
  t_aBf
  a type equality [t_aCO] ~ t_aBf
  In the pattern: []
  In an equation for ‘ppLijstHTML’: ppLijstHTML [] = tekst ""
tcConPat
  []
  []
  [t_aCO]
  []
tcBody t_aBg
utype_defer
  cobox_aCQ
  Doc
  t_aBg
  a type equality Doc ~ t_aBg
  In the expression: tekst ""
  In an equation for ‘ppLijstHTML’: ppLijstHTML [] = tekst ""
tcPolyExprNC String
tcGen
utype_defer
  cobox_aCR
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘""’
  In the expression: tekst ""
  In an equation for ‘ppLijstHTML’: ppLijstHTML [] = tekst ""
addInlinePrags
  ppLijstHTML
  []
csb2 [ppLijstHTML]
} End of bindings for
  [ppLijstHTML]
  Recursive
  ppLijstHTML t_aBf -> t_aBg
env2
  [(ppLijstHTML,
    Identifier[ppLijstHTML::t_aBf -> t_aBg, <NotTopLevel>])]
------------------------------------------------
Bindings for { [ppHTML]
Generalisation plan
  CheckGen ppHTML :: t_aBj -> t_aBk
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  ppHTML
  t_aBj -> t_aBk
tcMatchesFun
  ppHTML
  t_aBj -> t_aBk
tcGen
utype_defer
  cobox_aCT
  HTML
  t_aBj
  a type equality HTML ~ t_aBj
  In the pattern: ClosedTag name att html
  In an equation for ‘ppHTML’:
      ppHTML (ClosedTag name att html)
        | not (doorloopElementen html)
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <-> springIn 2 (ppLijstHTML html)
          <-> tekst "</" <|> tekst name <|> tekst ">"
        | otherwise
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <|> (ppLijstHTML html)
          <|> tekst "</"
          <|> tekst name
          <|> tekst ">"
tcConPat
  ClosedTag
  []
  HTML
  [String, [Attributen], [HTML]]
env2 [(name, Identifier[name::String, <NotTopLevel>])]
env2 [(att, Identifier[att::[Attributen], <NotTopLevel>])]
env2 [(html, Identifier[html::[HTML], <NotTopLevel>])]
utype_defer
  cobox_aCU
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: not (doorloopElementen html)
  In a stmt of a pattern guard for
                 an equation for ‘ppHTML’:
    not (doorloopElementen html)
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aCV
  t_aBs
  Bool
  a type equality t_aBs ~ Bool
  In the first argument of ‘not’, namely ‘(doorloopElementen html)’
  In the expression: not (doorloopElementen html)
tcPolyExprNC t_aBr
tcGen
utype_defer
  cobox_aCW
  [HTML]
  t_aBr
  a type equality [HTML] ~ t_aBr
  In the first argument of ‘doorloopElementen’, namely ‘html’
  In the first argument of ‘not’, namely ‘(doorloopElementen html)’
tcBody t_aBk
Non Application rule (<->)
utype_defer
  cobox_aCX
  Doc
  t_aBk
  a type equality Doc ~ t_aBk
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <-> springIn 2 (ppLijstHTML html)
    <-> tekst "</" <|> tekst name <|> tekst ">"
  In an equation for ‘ppHTML’:
      ppHTML (ClosedTag name att html)
        | not (doorloopElementen html)
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <-> springIn 2 (ppLijstHTML html)
          <-> tekst "</" <|> tekst name <|> tekst ">"
        | otherwise
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <|> (ppLijstHTML html)
          <|> tekst "</"
          <|> tekst name
          <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<->)
utype_defer
  cobox_aCY
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <-> springIn 2 (ppLijstHTML html)’
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <-> springIn 2 (ppLijstHTML html)
    <-> tekst "</" <|> tekst name <|> tekst ">"
  In an equation for ‘ppHTML’:
      ppHTML (ClosedTag name att html)
        | not (doorloopElementen html)
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <-> springIn 2 (ppLijstHTML html)
          <-> tekst "</" <|> tekst name <|> tekst ">"
        | otherwise
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <|> (ppLijstHTML html)
          <|> tekst "</"
          <|> tekst name
          <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aCZ
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <-> springIn 2 (ppLijstHTML html)’
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <-> springIn 2 (ppLijstHTML html)
    <-> tekst "</" <|> tekst name <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aD0
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att’
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <-> springIn 2 (ppLijstHTML html)’
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aD1
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att’
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aD2
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely ‘tekst "<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aD3
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘"<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aD4
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst name’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aD5
  String
  String
  a type equality String ~ String
  In the first argument of ‘tekst’, namely ‘name’
  In the second argument of ‘(<|>)’, namely ‘tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aD6
  t_aBo
  Doc
  a type equality t_aBo ~ Doc
  In the second argument of ‘(<|>)’, namely ‘prepAttr att’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att’
tcPolyExprNC t_aBn
tcGen
utype_defer
  cobox_aD7
  [Attributen]
  t_aBn
  a type equality [Attributen] ~ t_aBn
  In the first argument of ‘prepAttr’, namely ‘att’
  In the second argument of ‘(<|>)’, namely ‘prepAttr att’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aD8
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aD9
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘">"’
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDa
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<->)’, namely
    ‘springIn 2 (ppLijstHTML html)’
  In the first argument of ‘(<->)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <-> springIn 2 (ppLijstHTML html)’
tcPolyExprNC Int
tcGen
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDb
  t_aBg
  Doc
  a type equality t_aBg ~ Doc
  In the second argument of ‘springIn’, namely ‘(ppLijstHTML html)’
  In the second argument of ‘(<->)’, namely
    ‘springIn 2 (ppLijstHTML html)’
tcPolyExprNC t_aBf
tcGen
utype_defer
  cobox_aDc
  [HTML]
  t_aBf
  a type equality [HTML] ~ t_aBf
  In the first argument of ‘ppLijstHTML’, namely ‘html’
  In the second argument of ‘springIn’, namely ‘(ppLijstHTML html)’
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDd
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<->)’, namely
    ‘tekst "</" <|> tekst name <|> tekst ">"’
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <-> springIn 2 (ppLijstHTML html)
    <-> tekst "</" <|> tekst name <|> tekst ">"
  In an equation for ‘ppHTML’:
      ppHTML (ClosedTag name att html)
        | not (doorloopElementen html)
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <-> springIn 2 (ppLijstHTML html)
          <-> tekst "</" <|> tekst name <|> tekst ">"
        | otherwise
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <|> (ppLijstHTML html)
          <|> tekst "</"
          <|> tekst name
          <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDe
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely
    ‘tekst "</" <|> tekst name’
  In the second argument of ‘(<->)’, namely
    ‘tekst "</" <|> tekst name <|> tekst ">"’
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <-> springIn 2 (ppLijstHTML html)
    <-> tekst "</" <|> tekst name <|> tekst ">"
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDf
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely ‘tekst "</"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "</" <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDg
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘"</"’
  In the first argument of ‘(<|>)’, namely ‘tekst "</"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "</" <|> tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDh
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst name’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "</" <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDi
  String
  String
  a type equality String ~ String
  In the first argument of ‘tekst’, namely ‘name’
  In the second argument of ‘(<|>)’, namely ‘tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDj
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the second argument of ‘(<->)’, namely
    ‘tekst "</" <|> tekst name <|> tekst ">"’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDk
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘">"’
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the second argument of ‘(<->)’, namely
    ‘tekst "</" <|> tekst name <|> tekst ">"’
utype_defer
  cobox_aDl
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: otherwise
  In a stmt of a pattern guard for
                 an equation for ‘ppHTML’:
    otherwise
tcBody t_aBk
Non Application rule (<|>)
utype_defer
  cobox_aDm
  Doc
  t_aBk
  a type equality Doc ~ t_aBk
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <|> (ppLijstHTML html)
    <|> tekst "</"
    <|> tekst name
    <|> tekst ">"
  In an equation for ‘ppHTML’:
      ppHTML (ClosedTag name att html)
        | not (doorloopElementen html)
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <-> springIn 2 (ppLijstHTML html)
          <-> tekst "</" <|> tekst name <|> tekst ">"
        | otherwise
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <|> (ppLijstHTML html)
          <|> tekst "</"
          <|> tekst name
          <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDn
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"
     <|> tekst name’
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <|> (ppLijstHTML html)
    <|> tekst "</"
    <|> tekst name
    <|> tekst ">"
  In an equation for ‘ppHTML’:
      ppHTML (ClosedTag name att html)
        | not (doorloopElementen html)
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <-> springIn 2 (ppLijstHTML html)
          <-> tekst "</" <|> tekst name <|> tekst ">"
        | otherwise
        = tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
          <|> (ppLijstHTML html)
          <|> tekst "</"
          <|> tekst name
          <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDo
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"
     <|> tekst name’
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <|> (ppLijstHTML html)
    <|> tekst "</"
    <|> tekst name
    <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDp
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"
     <|> tekst name’
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDq
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"’
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDr
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)’
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDs
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDt
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely ‘tekst "<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDu
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘"<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDv
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst name’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDw
  String
  String
  a type equality String ~ String
  In the first argument of ‘tekst’, namely ‘name’
  In the second argument of ‘(<|>)’, namely ‘tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDx
  t_aBo
  Doc
  a type equality t_aBo ~ Doc
  In the second argument of ‘(<|>)’, namely ‘prepAttr att’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att’
tcPolyExprNC t_aBn
tcGen
utype_defer
  cobox_aDy
  [Attributen]
  t_aBn
  a type equality [Attributen] ~ t_aBn
  In the first argument of ‘prepAttr’, namely ‘att’
  In the second argument of ‘(<|>)’, namely ‘prepAttr att’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDz
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDA
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘">"’
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDB
  t_aBg
  Doc
  a type equality t_aBg ~ Doc
  In the second argument of ‘(<|>)’, namely ‘(ppLijstHTML html)’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)’
tcPolyExprNC t_aBf
tcGen
utype_defer
  cobox_aDC
  [HTML]
  t_aBf
  a type equality [HTML] ~ t_aBf
  In the first argument of ‘ppLijstHTML’, namely ‘html’
  In the second argument of ‘(<|>)’, namely ‘(ppLijstHTML html)’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDD
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst "</"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDE
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘"</"’
  In the second argument of ‘(<|>)’, namely ‘tekst "</"’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDF
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst name’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
     <|> (ppLijstHTML html)
     <|> tekst "</"
     <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDG
  String
  String
  a type equality String ~ String
  In the first argument of ‘tekst’, namely ‘name’
  In the second argument of ‘(<|>)’, namely ‘tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDH
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <|> (ppLijstHTML html)
    <|> tekst "</"
    <|> tekst name
    <|> tekst ">"
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDI
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘">"’
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the expression:
    tekst "<" <|> tekst name <|> prepAttr att <|> tekst ">"
    <|> (ppLijstHTML html)
    <|> tekst "</"
    <|> tekst name
    <|> tekst ">"
utype_defer
  cobox_aDJ
  HTML
  t_aBj
  a type equality HTML ~ t_aBj
  In the pattern: SingleTag name att
  In an equation for ‘ppHTML’:
      ppHTML (SingleTag name att)
        = tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
tcConPat
  SingleTag
  []
  HTML
  [String, [Attributen]]
env2 [(name, Identifier[name::String, <NotTopLevel>])]
env2 [(att, Identifier[att::[Attributen], <NotTopLevel>])]
tcBody t_aBk
Non Application rule (<|>)
utype_defer
  cobox_aDK
  Doc
  t_aBk
  a type equality Doc ~ t_aBk
  In the expression:
    tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
  In an equation for ‘ppHTML’:
      ppHTML (SingleTag name att)
        = tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDL
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> tekst (unwords att)’
  In the expression:
    tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
  In an equation for ‘ppHTML’:
      ppHTML (SingleTag name att)
        = tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
tcPolyExprNC Doc
tcGen
Non Application rule (<|>)
utype_defer
  cobox_aDM
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> tekst (unwords att)’
  In the expression:
    tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDN
  Doc
  Doc
  a type equality Doc ~ Doc
  In the first argument of ‘(<|>)’, namely ‘tekst "<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDO
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘"<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<"’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDP
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst name’
  In the first argument of ‘(<|>)’, namely ‘tekst "<" <|> tekst name’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDQ
  String
  String
  a type equality String ~ String
  In the first argument of ‘tekst’, namely ‘name’
  In the second argument of ‘(<|>)’, namely ‘tekst name’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDR
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst (unwords att)’
  In the first argument of ‘(<|>)’, namely
    ‘tekst "<" <|> tekst name <|> tekst (unwords att)’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDS
  String
  String
  a type equality String ~ String
  In the first argument of ‘tekst’, namely ‘(unwords att)’
  In the second argument of ‘(<|>)’, namely ‘tekst (unwords att)’
tcPolyExprNC [String]
tcGen
utype_defer
  cobox_aDT
  [Attributen]
  [String]
  a type equality [Attributen] ~ [String]
  In the first argument of ‘unwords’, namely ‘att’
  In the first argument of ‘tekst’, namely ‘(unwords att)’
tcPolyExprNC Doc
tcGen
utype_defer
  cobox_aDU
  Doc
  Doc
  a type equality Doc ~ Doc
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the expression:
    tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDV
  [Char]
  String
  a type equality [Char] ~ String
  In the first argument of ‘tekst’, namely ‘">"’
  In the second argument of ‘(<|>)’, namely ‘tekst ">"’
  In the expression:
    tekst "<" <|> tekst name <|> tekst (unwords att) <|> tekst ">"
utype_defer
  cobox_aDW
  HTML
  t_aBj
  a type equality HTML ~ t_aBj
  In the pattern: Tekst woorden
  In an equation for ‘ppHTML’: ppHTML (Tekst woorden) = tekst woorden
tcConPat
  Tekst
  []
  HTML
  [String]
env2 [(woorden, Identifier[woorden::String, <NotTopLevel>])]
tcBody t_aBk
utype_defer
  cobox_aDX
  Doc
  t_aBk
  a type equality Doc ~ t_aBk
  In the expression: tekst woorden
  In an equation for ‘ppHTML’: ppHTML (Tekst woorden) = tekst woorden
tcPolyExprNC String
tcGen
utype_defer
  cobox_aDY
  String
  String
  a type equality String ~ String
  In the first argument of ‘tekst’, namely ‘woorden’
  In the expression: tekst woorden
addInlinePrags
  ppHTML
  []
csb2 [ppHTML]
} End of bindings for
  [ppHTML]
  Recursive
  ppHTML t_aBj -> t_aBk
env2 [(ppHTML, Identifier[ppHTML::t_aBj -> t_aBk, <NotTopLevel>])]
------------------------------------------------
Bindings for { [simple]
Generalisation plan
  CheckGen simple :: t_aBz -> t_aBA
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  simple
  t_aBz -> t_aBA
tcMatchesFun
  simple
  t_aBz -> t_aBA
tcGen
utype_defer
  cobox_aE0
  HTML
  t_aBz
  a type equality HTML ~ t_aBz
  In the pattern: ClosedTag _ _ x
  In an equation for ‘simple’:
      simple (ClosedTag _ _ x) = doorloopElementen x
tcConPat
  ClosedTag
  []
  HTML
  [String, [Attributen], [HTML]]
env2 [(x, Identifier[x::[HTML], <NotTopLevel>])]
tcBody t_aBA
utype_defer
  cobox_aE1
  t_aBs
  t_aBA
  a type equality t_aBs ~ t_aBA
  In the expression: doorloopElementen x
  In an equation for ‘simple’:
      simple (ClosedTag _ _ x) = doorloopElementen x
tcPolyExprNC t_aBr
tcGen
utype_defer
  cobox_aE2
  [HTML]
  t_aBr
  a type equality [HTML] ~ t_aBr
  In the first argument of ‘doorloopElementen’, namely ‘x’
  In the expression: doorloopElementen x
tcBody t_aBA
utype_defer
  cobox_aE3
  Bool
  t_aBA
  a type equality Bool ~ t_aBA
  In the expression: True
  In an equation for ‘simple’: simple _ = True
addInlinePrags
  simple
  []
csb2 [simple]
} End of bindings for
  [simple]
  NonRecursive
  simple t_aBz -> t_aBA
env2 [(simple, Identifier[simple::t_aBz -> t_aBA, <NotTopLevel>])]
------------------------------------------------
Bindings for { [getTagName]
Generalisation plan
  CheckGen getTagName :: t_aC3 -> t_aC4
                         []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  getTagName
  t_aC3 -> t_aC4
tcMatchesFun
  getTagName
  t_aC3 -> t_aC4
tcGen
utype_defer
  cobox_aE5
  HTML
  t_aC3
  a type equality HTML ~ t_aC3
  In the pattern: ClosedTag name _ _
  In an equation for ‘getTagName’:
      getTagName (ClosedTag name _ _) = name
tcConPat
  ClosedTag
  []
  HTML
  [String, [Attributen], [HTML]]
env2 [(name, Identifier[name::String, <NotTopLevel>])]
tcBody t_aC4
utype_defer
  cobox_aE6
  String
  t_aC4
  a type equality String ~ t_aC4
  In the expression: name
  In an equation for ‘getTagName’:
      getTagName (ClosedTag name _ _) = name
utype_defer
  cobox_aE7
  HTML
  t_aC3
  a type equality HTML ~ t_aC3
  In the pattern: SingleTag name _
  In an equation for ‘getTagName’:
      getTagName (SingleTag name _) = name
tcConPat
  SingleTag
  []
  HTML
  [String, [Attributen]]
env2 [(name, Identifier[name::String, <NotTopLevel>])]
tcBody t_aC4
utype_defer
  cobox_aE8
  String
  t_aC4
  a type equality String ~ t_aC4
  In the expression: name
  In an equation for ‘getTagName’:
      getTagName (SingleTag name _) = name
utype_defer
  cobox_aE9
  HTML
  t_aC3
  a type equality HTML ~ t_aC3
  In the pattern: Tekst _
  In an equation for ‘getTagName’: getTagName (Tekst _) = ""
tcConPat
  Tekst
  []
  HTML
  [String]
tcBody t_aC4
utype_defer
  cobox_aEa
  [Char]
  t_aC4
  a type equality [Char] ~ t_aC4
  In the expression: ""
  In an equation for ‘getTagName’: getTagName (Tekst _) = ""
addInlinePrags
  getTagName
  []
csb2 [getTagName]
} End of bindings for
  [getTagName]
  NonRecursive
  getTagName t_aC3 -> t_aC4
env2
  [(getTagName,
    Identifier[getTagName::t_aC3 -> t_aC4, <NotTopLevel>])]
------------------------------------------------
Bindings for { [eqString]
Generalisation plan
  CheckGen eqString :: t_aC7 -> t_aC8 -> t_aC9
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  eqString
  t_aC7 -> t_aC8 -> t_aC9
tcMatchesFun
  eqString
  t_aC7 -> t_aC8 -> t_aC9
tcGen
tcBody t_aC7 -> t_aC8 -> t_aC9
Instantiating
  undefined with [a_aEc]
                 []
utype_defer
  cobox_aEd
  a_aEc
  t_aC7 -> t_aC8 -> t_aC9
  a type equality a_aEc ~ t_aC7 -> t_aC8 -> t_aC9
  In the expression: undefined
  In an equation for ‘eqString’: eqString = undefined
addInlinePrags
  eqString
  []
csb2 [eqString]
} End of bindings for
  [eqString]
  NonRecursive
  eqString t_aC7 -> t_aC8 -> t_aC9
env2
  [(eqString,
    Identifier[eqString::t_aC7 -> t_aC8 -> t_aC9, <NotTopLevel>])]
tc_group rec
  validate1 (a, b) (ClosedTag naam att (x : xs))
    | (eqString (getTagName x) b)
    = (eqString a naam)
      &&
        (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
    | otherwise
    = (validate1 (a, b) x)
      && (validate1 (a, b) (ClosedTag naam att xs))
  validate1 _ _ = True
------------------------------------------------
Bindings for { [validate1]
Generalisation plan
  CheckGen validate1 :: t_aBX -> t_aBY -> t_aBZ
                        []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  validate1
  t_aBX -> t_aBY -> t_aBZ
tcMatchesFun
  validate1
  t_aBX -> t_aBY -> t_aBZ
tcGen
utype_defer
  cobox_aEh
  (t_aEf, t_aEg)
  t_aBX
  a type equality (t_aEf, t_aEg) ~ t_aBX
  In the pattern: (a, b)
  In an equation for ‘validate1’:
      validate1 (a, b) (ClosedTag naam att (x : xs))
        | (eqString (getTagName x) b)
        = (eqString a naam)
          &&
            (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
        | otherwise
        = (validate1 (a, b) x)
          && (validate1 (a, b) (ClosedTag naam att xs))
env2 [(a, Identifier[a::t_aEf, <NotTopLevel>])]
env2 [(b, Identifier[b::t_aEg, <NotTopLevel>])]
utype_defer
  cobox_aEi
  HTML
  t_aBY
  a type equality HTML ~ t_aBY
  In the pattern: ClosedTag naam att (x : xs)
  In an equation for ‘validate1’:
      validate1 (a, b) (ClosedTag naam att (x : xs))
        | (eqString (getTagName x) b)
        = (eqString a naam)
          &&
            (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
        | otherwise
        = (validate1 (a, b) x)
          && (validate1 (a, b) (ClosedTag naam att xs))
tcConPat
  ClosedTag
  []
  HTML
  [String, [Attributen], [HTML]]
env2 [(naam, Identifier[naam::String, <NotTopLevel>])]
env2 [(att, Identifier[att::[Attributen], <NotTopLevel>])]
tcConPat
  :
  []
  [HTML]
  [HTML, [HTML]]
env2 [(x, Identifier[x::HTML, <NotTopLevel>])]
env2 [(xs, Identifier[xs::[HTML], <NotTopLevel>])]
utype_defer
  cobox_aEj
  t_aC9
  Bool
  a type equality t_aC9 ~ Bool
  In the expression: (eqString (getTagName x) b)
  In a stmt of a pattern guard for
                 an equation for ‘validate1’:
    (eqString (getTagName x) b)
tcPolyExprNC t_aC7
tcGen
utype_defer
  cobox_aEk
  t_aC4
  t_aC7
  a type equality t_aC4 ~ t_aC7
  In the first argument of ‘eqString’, namely ‘(getTagName x)’
  In the expression: (eqString (getTagName x) b)
tcPolyExprNC t_aC3
tcGen
utype_defer
  cobox_aEl
  HTML
  t_aC3
  a type equality HTML ~ t_aC3
  In the first argument of ‘getTagName’, namely ‘x’
  In the first argument of ‘eqString’, namely ‘(getTagName x)’
tcPolyExprNC t_aC8
tcGen
utype_defer
  cobox_aEm
  t_aEg
  t_aC8
  a type equality t_aEg ~ t_aC8
  In the second argument of ‘eqString’, namely ‘b’
  In the expression: (eqString (getTagName x) b)
tcBody t_aBZ
Non Application rule (&&)
utype_defer
  cobox_aEn
  Bool
  t_aBZ
  a type equality Bool ~ t_aBZ
  In the expression:
    (eqString a naam)
    &&
      (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
  In an equation for ‘validate1’:
      validate1 (a, b) (ClosedTag naam att (x : xs))
        | (eqString (getTagName x) b)
        = (eqString a naam)
          &&
            (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
        | otherwise
        = (validate1 (a, b) x)
          && (validate1 (a, b) (ClosedTag naam att xs))
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aEo
  t_aC9
  Bool
  a type equality t_aC9 ~ Bool
  In the first argument of ‘(&&)’, namely ‘(eqString a naam)’
  In the expression:
    (eqString a naam)
    &&
      (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
tcPolyExprNC t_aC7
tcGen
utype_defer
  cobox_aEp
  t_aEf
  t_aC7
  a type equality t_aEf ~ t_aC7
  In the first argument of ‘eqString’, namely ‘a’
  In the first argument of ‘(&&)’, namely ‘(eqString a naam)’
tcPolyExprNC t_aC8
tcGen
utype_defer
  cobox_aEq
  String
  t_aC8
  a type equality String ~ t_aC8
  In the second argument of ‘eqString’, namely ‘naam’
  In the first argument of ‘(&&)’, namely ‘(eqString a naam)’
tcPolyExprNC Bool
tcGen
Non Application rule (&&)
utype_defer
  cobox_aEr
  Bool
  Bool
  a type equality Bool ~ Bool
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) x)
     && (validate1 (a, b) (ClosedTag naam att xs))’
  In the expression:
    (eqString a naam)
    &&
      (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
  In an equation for ‘validate1’:
      validate1 (a, b) (ClosedTag naam att (x : xs))
        | (eqString (getTagName x) b)
        = (eqString a naam)
          &&
            (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
        | otherwise
        = (validate1 (a, b) x)
          && (validate1 (a, b) (ClosedTag naam att xs))
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aEs
  t_aBZ
  Bool
  a type equality t_aBZ ~ Bool
  In the first argument of ‘(&&)’, namely ‘(validate1 (a, b) x)’
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) x)
     && (validate1 (a, b) (ClosedTag naam att xs))’
tcPolyExprNC t_aBX
tcGen
utype_defer
  cobox_aEv
  (t_aEt, t_aEu)
  t_aBX
  a type equality (t_aEt, t_aEu) ~ t_aBX
  In the first argument of ‘validate1’, namely ‘(a, b)’
  In the first argument of ‘(&&)’, namely ‘(validate1 (a, b) x)’
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) x)
     && (validate1 (a, b) (ClosedTag naam att xs))’
tcPolyExpr t_aEt
tcPolyExprNC t_aEt
tcGen
utype_defer
  cobox_aEw
  t_aEf
  t_aEt
  a type equality t_aEf ~ t_aEt
  In the expression: a
  In the first argument of ‘validate1’, namely ‘(a, b)’
tcPolyExpr t_aEu
tcPolyExprNC t_aEu
tcGen
utype_defer
  cobox_aEx
  t_aEg
  t_aEu
  a type equality t_aEg ~ t_aEu
  In the expression: b
  In the first argument of ‘validate1’, namely ‘(a, b)’
tcPolyExprNC t_aBY
tcGen
utype_defer
  cobox_aEy
  HTML
  t_aBY
  a type equality HTML ~ t_aBY
  In the second argument of ‘validate1’, namely ‘x’
  In the first argument of ‘(&&)’, namely ‘(validate1 (a, b) x)’
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aEz
  t_aBZ
  Bool
  a type equality t_aBZ ~ Bool
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) (ClosedTag naam att xs))’
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) x)
     && (validate1 (a, b) (ClosedTag naam att xs))’
tcPolyExprNC t_aBX
tcGen
utype_defer
  cobox_aEC
  (t_aEA, t_aEB)
  t_aBX
  a type equality (t_aEA, t_aEB) ~ t_aBX
  In the first argument of ‘validate1’, namely ‘(a, b)’
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) (ClosedTag naam att xs))’
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) x)
     && (validate1 (a, b) (ClosedTag naam att xs))’
tcPolyExpr t_aEA
tcPolyExprNC t_aEA
tcGen
utype_defer
  cobox_aED
  t_aEf
  t_aEA
  a type equality t_aEf ~ t_aEA
  In the expression: a
  In the first argument of ‘validate1’, namely ‘(a, b)’
tcPolyExpr t_aEB
tcPolyExprNC t_aEB
tcGen
utype_defer
  cobox_aEE
  t_aEg
  t_aEB
  a type equality t_aEg ~ t_aEB
  In the expression: b
  In the first argument of ‘validate1’, namely ‘(a, b)’
tcPolyExprNC t_aBY
tcGen
utype_defer
  cobox_aEF
  HTML
  t_aBY
  a type equality HTML ~ t_aBY
  In the second argument of ‘validate1’, namely
    ‘(ClosedTag naam att xs)’
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) (ClosedTag naam att xs))’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aEG
  String
  String
  a type equality String ~ String
  In the first argument of ‘ClosedTag’, namely ‘naam’
  In the second argument of ‘validate1’, namely
    ‘(ClosedTag naam att xs)’
tcPolyExprNC [Attributen]
tcGen
utype_defer
  cobox_aEH
  [Attributen]
  [Attributen]
  a type equality [Attributen] ~ [Attributen]
  In the second argument of ‘ClosedTag’, namely ‘att’
  In the second argument of ‘validate1’, namely
    ‘(ClosedTag naam att xs)’
tcPolyExprNC [HTML]
tcGen
utype_defer
  cobox_aEI
  [HTML]
  [HTML]
  a type equality [HTML] ~ [HTML]
  In the third argument of ‘ClosedTag’, namely ‘xs’
  In the second argument of ‘validate1’, namely
    ‘(ClosedTag naam att xs)’
utype_defer
  cobox_aEJ
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: otherwise
  In a stmt of a pattern guard for
                 an equation for ‘validate1’:
    otherwise
tcBody t_aBZ
Non Application rule (&&)
utype_defer
  cobox_aEK
  Bool
  t_aBZ
  a type equality Bool ~ t_aBZ
  In the expression:
    (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
  In an equation for ‘validate1’:
      validate1 (a, b) (ClosedTag naam att (x : xs))
        | (eqString (getTagName x) b)
        = (eqString a naam)
          &&
            (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
        | otherwise
        = (validate1 (a, b) x)
          && (validate1 (a, b) (ClosedTag naam att xs))
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aEL
  t_aBZ
  Bool
  a type equality t_aBZ ~ Bool
  In the first argument of ‘(&&)’, namely ‘(validate1 (a, b) x)’
  In the expression:
    (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
tcPolyExprNC t_aBX
tcGen
utype_defer
  cobox_aEO
  (t_aEM, t_aEN)
  t_aBX
  a type equality (t_aEM, t_aEN) ~ t_aBX
  In the first argument of ‘validate1’, namely ‘(a, b)’
  In the first argument of ‘(&&)’, namely ‘(validate1 (a, b) x)’
  In the expression:
    (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
tcPolyExpr t_aEM
tcPolyExprNC t_aEM
tcGen
utype_defer
  cobox_aEP
  t_aEf
  t_aEM
  a type equality t_aEf ~ t_aEM
  In the expression: a
  In the first argument of ‘validate1’, namely ‘(a, b)’
tcPolyExpr t_aEN
tcPolyExprNC t_aEN
tcGen
utype_defer
  cobox_aEQ
  t_aEg
  t_aEN
  a type equality t_aEg ~ t_aEN
  In the expression: b
  In the first argument of ‘validate1’, namely ‘(a, b)’
tcPolyExprNC t_aBY
tcGen
utype_defer
  cobox_aER
  HTML
  t_aBY
  a type equality HTML ~ t_aBY
  In the second argument of ‘validate1’, namely ‘x’
  In the first argument of ‘(&&)’, namely ‘(validate1 (a, b) x)’
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aES
  t_aBZ
  Bool
  a type equality t_aBZ ~ Bool
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) (ClosedTag naam att xs))’
  In the expression:
    (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
tcPolyExprNC t_aBX
tcGen
utype_defer
  cobox_aEV
  (t_aET, t_aEU)
  t_aBX
  a type equality (t_aET, t_aEU) ~ t_aBX
  In the first argument of ‘validate1’, namely ‘(a, b)’
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) (ClosedTag naam att xs))’
  In the expression:
    (validate1 (a, b) x) && (validate1 (a, b) (ClosedTag naam att xs))
tcPolyExpr t_aET
tcPolyExprNC t_aET
tcGen
utype_defer
  cobox_aEW
  t_aEf
  t_aET
  a type equality t_aEf ~ t_aET
  In the expression: a
  In the first argument of ‘validate1’, namely ‘(a, b)’
tcPolyExpr t_aEU
tcPolyExprNC t_aEU
tcGen
utype_defer
  cobox_aEX
  t_aEg
  t_aEU
  a type equality t_aEg ~ t_aEU
  In the expression: b
  In the first argument of ‘validate1’, namely ‘(a, b)’
tcPolyExprNC t_aBY
tcGen
utype_defer
  cobox_aEY
  HTML
  t_aBY
  a type equality HTML ~ t_aBY
  In the second argument of ‘validate1’, namely
    ‘(ClosedTag naam att xs)’
  In the second argument of ‘(&&)’, namely
    ‘(validate1 (a, b) (ClosedTag naam att xs))’
tcPolyExprNC String
tcGen
utype_defer
  cobox_aEZ
  String
  String
  a type equality String ~ String
  In the first argument of ‘ClosedTag’, namely ‘naam’
  In the second argument of ‘validate1’, namely
    ‘(ClosedTag naam att xs)’
tcPolyExprNC [Attributen]
tcGen
utype_defer
  cobox_aF0
  [Attributen]
  [Attributen]
  a type equality [Attributen] ~ [Attributen]
  In the second argument of ‘ClosedTag’, namely ‘att’
  In the second argument of ‘validate1’, namely
    ‘(ClosedTag naam att xs)’
tcPolyExprNC [HTML]
tcGen
utype_defer
  cobox_aF1
  [HTML]
  [HTML]
  a type equality [HTML] ~ [HTML]
  In the third argument of ‘ClosedTag’, namely ‘xs’
  In the second argument of ‘validate1’, namely
    ‘(ClosedTag naam att xs)’
tcBody t_aBZ
utype_defer
  cobox_aF2
  Bool
  t_aBZ
  a type equality Bool ~ t_aBZ
  In the expression: True
  In an equation for ‘validate1’: validate1 _ _ = True
addInlinePrags
  validate1
  []
csb2 [validate1]
} End of bindings for
  [validate1]
  Recursive
  validate1 t_aBX -> t_aBY -> t_aBZ
env2
  [(validate1,
    Identifier[validate1::t_aBX -> t_aBY -> t_aBZ, <NotTopLevel>])]
tc_group rec
  validate (tuple : xs) naam
    | not (eqString (snd tuple) (getTagName naam))
    = if (validate1 tuple naam) then validate xs naam else Just tuple
    | otherwise = Just tuple
  validate [] _ = Nothing
------------------------------------------------
Bindings for { [validate]
Generalisation plan
  CheckGen validate :: t_aBR -> t_aBS -> t_aBT
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  validate
  t_aBR -> t_aBS -> t_aBT
tcMatchesFun
  validate
  t_aBR -> t_aBS -> t_aBT
tcGen
utype_defer
  cobox_aF5
  [t_aF4]
  t_aBR
  a type equality [t_aF4] ~ t_aBR
  In the pattern: tuple : xs
  In an equation for ‘validate’:
      validate (tuple : xs) naam
        | not (eqString (snd tuple) (getTagName naam))
        = if (validate1 tuple naam) then validate xs naam else Just tuple
        | otherwise = Just tuple
tcConPat
  :
  []
  [t_aF4]
  [t_aF4, [t_aF4]]
env2 [(tuple, Identifier[tuple::t_aF4, <NotTopLevel>])]
env2 [(xs, Identifier[xs::[t_aF4], <NotTopLevel>])]
env2 [(naam, Identifier[naam::t_aBS, <NotTopLevel>])]
utype_defer
  cobox_aF6
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: not (eqString (snd tuple) (getTagName naam))
  In a stmt of a pattern guard for
                 an equation for ‘validate’:
    not (eqString (snd tuple) (getTagName naam))
tcPolyExprNC Bool
tcGen
utype_defer
  cobox_aF7
  t_aC9
  Bool
  a type equality t_aC9 ~ Bool
  In the first argument of ‘not’, namely
    ‘(eqString (snd tuple) (getTagName naam))’
  In the expression: not (eqString (snd tuple) (getTagName naam))
tcPolyExprNC t_aC7
tcGen
Instantiating
  snd with [a_aFa, b_aFb]
           []
utype_defer
  cobox_aFc
  b_aFb
  t_aC7
  a type equality b_aFb ~ t_aC7
  In the first argument of ‘eqString’, namely ‘(snd tuple)’
  In the first argument of ‘not’, namely
    ‘(eqString (snd tuple) (getTagName naam))’
tcPolyExprNC (a_aFa, b_aFb)
tcGen
utype_defer
  cobox_aFd
  t_aF4
  (a_aFa, b_aFb)
  a type equality t_aF4 ~ (a_aFa, b_aFb)
  In the first argument of ‘snd’, namely ‘tuple’
  In the first argument of ‘eqString’, namely ‘(snd tuple)’
tcPolyExprNC t_aC8
tcGen
utype_defer
  cobox_aFe
  t_aC4
  t_aC8
  a type equality t_aC4 ~ t_aC8
  In the second argument of ‘eqString’, namely ‘(getTagName naam)’
  In the first argument of ‘not’, namely
    ‘(eqString (snd tuple) (getTagName naam))’
tcPolyExprNC t_aC3
tcGen
utype_defer
  cobox_aFf
  t_aBS
  t_aC3
  a type equality t_aBS ~ t_aC3
  In the first argument of ‘getTagName’, namely ‘naam’
  In the second argument of ‘eqString’, namely ‘(getTagName naam)’
tcBody t_aBT
utype_defer
  cobox_aFg
  t_aBZ
  Bool
  a type equality t_aBZ ~ Bool
  In the expression: (validate1 tuple naam)
  In the expression:
    if (validate1 tuple naam) then validate xs naam else Just tuple
tcPolyExprNC t_aBX
tcGen
utype_defer
  cobox_aFh
  t_aF4
  t_aBX
  a type equality t_aF4 ~ t_aBX
  In the first argument of ‘validate1’, namely ‘tuple’
  In the expression: (validate1 tuple naam)
tcPolyExprNC t_aBY
tcGen
utype_defer
  cobox_aFi
  t_aBS
  t_aBY
  a type equality t_aBS ~ t_aBY
  In the second argument of ‘validate1’, namely ‘naam’
  In the expression: (validate1 tuple naam)
utype_defer
  cobox_aFj
  t_aBT
  t_aBT
  a type equality t_aBT ~ t_aBT
  In the expression: validate xs naam
  In the expression:
    if (validate1 tuple naam) then validate xs naam else Just tuple
tcPolyExprNC t_aBR
tcGen
utype_defer
  cobox_aFk
  [t_aF4]
  t_aBR
  a type equality [t_aF4] ~ t_aBR
  In the first argument of ‘validate’, namely ‘xs’
  In the expression: validate xs naam
tcPolyExprNC t_aBS
tcGen
utype_defer
  cobox_aFl
  t_aBS
  t_aBS
  a type equality t_aBS ~ t_aBS
  In the second argument of ‘validate’, namely ‘naam’
  In the expression: validate xs naam
Instantiating
  Data.Maybe.Just with [a_aFm]
                       []
utype_defer
  cobox_aFn
  Maybe a_aFm
  t_aBT
  a type equality Maybe a_aFm ~ t_aBT
  In the expression: Just tuple
  In the expression:
    if (validate1 tuple naam) then validate xs naam else Just tuple
tcPolyExprNC a_aFm
tcGen
utype_defer
  cobox_aFo
  t_aF4
  a_aFm
  a type equality t_aF4 ~ a_aFm
  In the first argument of ‘Just’, namely ‘tuple’
  In the expression: Just tuple
utype_defer
  cobox_aFp
  Bool
  Bool
  a type equality Bool ~ Bool
  In the expression: otherwise
  In a stmt of a pattern guard for
                 an equation for ‘validate’:
    otherwise
tcBody t_aBT
Instantiating
  Data.Maybe.Just with [a_aFq]
                       []
utype_defer
  cobox_aFr
  Maybe a_aFq
  t_aBT
  a type equality Maybe a_aFq ~ t_aBT
  In the expression: Just tuple
  In an equation for ‘validate’:
      validate (tuple : xs) naam
        | not (eqString (snd tuple) (getTagName naam))
        = if (validate1 tuple naam) then validate xs naam else Just tuple
        | otherwise = Just tuple
tcPolyExprNC a_aFq
tcGen
utype_defer
  cobox_aFs
  t_aF4
  a_aFq
  a type equality t_aF4 ~ a_aFq
  In the first argument of ‘Just’, namely ‘tuple’
  In the expression: Just tuple
utype_defer
  cobox_aFu
  [t_aFt]
  t_aBR
  a type equality [t_aFt] ~ t_aBR
  In the pattern: []
  In an equation for ‘validate’: validate [] _ = Nothing
tcConPat
  []
  []
  [t_aFt]
  []
tcBody t_aBT
Instantiating
  Data.Maybe.Nothing with [a_aFv]
                          []
utype_defer
  cobox_aFw
  Maybe a_aFv
  t_aBT
  a type equality Maybe a_aFv ~ t_aBT
  In the expression: Nothing
  In an equation for ‘validate’: validate [] _ = Nothing
addInlinePrags
  validate
  []
csb2 [validate]
} End of bindings for
  [validate]
  Recursive
  validate t_aBR -> t_aBS -> t_aBT
env2
  [(validate,
    Identifier[validate::t_aBR -> t_aBS -> t_aBT, <NotTopLevel>])]
Tc6
env2 []
Tc7
End of tcVectDecls: LIE:
  WC {wc_flat = [W] cobox_aBh :: [HTML]
                                 ~ t_aBf [" a type equality [HTML]
                                                            ~
                                                            t_aBf " HTML.hs:62:16-28] (CNonCanonical)
                [W] cobox_aBi :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:62:16-28] (CNonCanonical)
                [W] cobox_aBl :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:53:11-21] (CNonCanonical)
                [W] cobox_aBm :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:53:11-21] (CNonCanonical)
                [W] cobox_aBp :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:49:13-31] (CNonCanonical)
                [W] cobox_aBq :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:49:13-31] (CNonCanonical)
                [W] cobox_aBt :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                   ~
                                                                   t_aBr " HTML.hs:45:22-35] (CNonCanonical)
                [W] cobox_aBu :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:45:22-35] (CNonCanonical)
                [W] cobox_aBx :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:39:22-33] (CNonCanonical)
                [W] cobox_aBy :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:39:22-33] (CNonCanonical)
                [W] cobox_aBB :: HTML ~ t_aBz [" a type equality HTML
                                                                 ~
                                                                 t_aBz " HTML.hs:35:11-22] (CNonCanonical)
                [W] cobox_aBC :: Bool ~ t_aBA [" a type equality Bool
                                                                 ~
                                                                 t_aBA " HTML.hs:35:11-22] (CNonCanonical)
                [W] cobox_aBU :: [Requirement]
                                 ~ t_aBR [" a type equality [Requirement]
                                                            ~
                                                            t_aBR " HTML.hs:26:13-54] (CNonCanonical)
                [W] cobox_aBV :: HTML ~ t_aBS [" a type equality HTML
                                                                 ~
                                                                 t_aBS " HTML.hs:26:13-54] (CNonCanonical)
                [W] cobox_aBW :: Maybe Requirement ~ t_aBT [" a type equality Maybe
                                                                                Requirement
                                                                              ~
                                                                              t_aBT " HTML.hs:26:13-54] (CNonCanonical)
                [W] cobox_aC0 :: Requirement ~ t_aBX [" a type equality Requirement
                                                                        ~
                                                                        t_aBX " HTML.hs:21:14-40] (CNonCanonical)
                [W] cobox_aC1 :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:21:14-40] (CNonCanonical)
                [W] cobox_aC2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:21:14-40] (CNonCanonical)
                [W] cobox_aC5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:16:15-28] (CNonCanonical)
                [W] cobox_aC6 :: String ~ t_aC4 [" a type equality String
                                                                   ~
                                                                   t_aC4 " HTML.hs:16:15-28] (CNonCanonical)
                [W] cobox_aCa :: String ~ t_aC7 [" a type equality String
                                                                   ~
                                                                   t_aC7 " HTML.hs:4:18-41] (CNonCanonical)
                [W] cobox_aCb :: String ~ t_aC8 [" a type equality String
                                                                   ~
                                                                   t_aC8 " HTML.hs:4:18-41] (CNonCanonical)
                [W] cobox_aCc :: Bool ~ t_aC9 [" a type equality Bool
                                                                 ~
                                                                 t_aC9 " HTML.hs:4:18-41] (CNonCanonical)
                [W] cobox_aCf :: [t_aCe] ~ t_aBn [" a type equality [t_aCe]
                                                                    ~
                                                                    t_aBn " HTML.hs:50:10-11] (CNonCanonical)
                [W] cobox_aCg :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:50:15-22] (CNonCanonical)
                [W] cobox_aCh :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:50:21-22] (CNonCanonical)
                [W] cobox_aCi :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:51:23-54] (CNonCanonical)
                [W] cobox_aCj :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:51:23-31] (CNonCanonical)
                [W] cobox_aCk :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:51:29-31] (CNonCanonical)
                [W] cobox_aCl :: String ~ Doc [" a type equality String
                                                                 ~
                                                                 Doc " HTML.hs:51:37-54] (CNonCanonical)
                [W] cobox_aCm :: t_aBn ~ [String] [" a type equality t_aBn
                                                                     ~
                                                                     [String] " HTML.hs:51:45-54] (CNonCanonical)
                [W] cobox_aCo :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:40:20-26] (CNonCanonical)
                [W] cobox_aCp :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:40:31-34] (CNonCanonical)
                [W] cobox_aCq :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:41:20-36] (CNonCanonical)
                [W] cobox_aCr :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:41:41-44] (CNonCanonical)
                [W] cobox_aCs :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:42:20-32] (CNonCanonical)
                [W] cobox_aCt :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:42:37-40] (CNonCanonical)
                [W] cobox_aCu :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:43:23-27] (CNonCanonical)
                [W] cobox_aCx :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                    ~
                                                                    t_aBr " HTML.hs:46:20-23] (CNonCanonical)
                [W] cobox_aCy :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:46:28-70] (CNonCanonical)
                [W] cobox_aCz :: t_aBw ~ Bool [" a type equality t_aBw
                                                                 ~
                                                                 Bool " HTML.hs:46:28-46] (CNonCanonical)
                [W] cobox_aCA :: t_aCw ~ t_aBv [" a type equality t_aCw
                                                                  ~
                                                                  t_aBv " HTML.hs:46:46] (CNonCanonical)
                [W] cobox_aCB :: t_aBs ~ Bool [" a type equality t_aBs
                                                                 ~
                                                                 Bool " HTML.hs:46:51-70] (CNonCanonical)
                [W] cobox_aCC :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                    ~
                                                                    t_aBr " HTML.hs:46:69-70] (CNonCanonical)
                [W] cobox_aCE :: [t_aCD] ~ t_aBr [" a type equality [t_aCD]
                                                                    ~
                                                                    t_aBr " HTML.hs:47:19-20] (CNonCanonical)
                [W] cobox_aCF :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:47:24-27] (CNonCanonical)
                [W] cobox_aCI :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                    ~
                                                                    t_aBf " HTML.hs:63:14-17] (CNonCanonical)
                [W] cobox_aCJ :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:63:22-48] (CNonCanonical)
                [W] cobox_aCK :: t_aBk ~ Doc [" a type equality t_aBk
                                                                ~
                                                                Doc " HTML.hs:63:22-29] (CNonCanonical)
                [W] cobox_aCL :: t_aCH ~ t_aBj [" a type equality t_aCH
                                                                  ~
                                                                  t_aBj " HTML.hs:63:29] (CNonCanonical)
                [W] cobox_aCM :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:63:35-48] (CNonCanonical)
                [W] cobox_aCN :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                    ~
                                                                    t_aBf " HTML.hs:63:47-48] (CNonCanonical)
                [W] cobox_aCP :: [t_aCO] ~ t_aBf [" a type equality [t_aCO]
                                                                    ~
                                                                    t_aBf " HTML.hs:64:13-14] (CNonCanonical)
                [W] cobox_aCQ :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:64:18-25] (CNonCanonical)
                [W] cobox_aCR :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:64:24-25] (CNonCanonical)
                [W] cobox_aCT :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:54:9-31] (CNonCanonical)
                [W] cobox_aCU :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:54:36-62] (CNonCanonical)
                [W] cobox_aCV :: t_aBs ~ Bool [" a type equality t_aBs
                                                                 ~
                                                                 Bool " HTML.hs:54:40-61] (CNonCanonical)
                [W] cobox_aCW :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                   ~
                                                                   t_aBr " HTML.hs:54:58-61] (CNonCanonical)
                [W] cobox_aCX :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:(54,66)-(56,108)] (CNonCanonical)
                [W] cobox_aCY :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(54,66)-(55,98)] (CNonCanonical)
                [W] cobox_aCZ :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-120] (CNonCanonical)
                [W] cobox_aD0 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-106] (CNonCanonical)
                [W] cobox_aD1 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-89] (CNonCanonical)
                [W] cobox_aD2 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-74] (CNonCanonical)
                [W] cobox_aD3 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:54:72-74] (CNonCanonical)
                [W] cobox_aD4 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:80-89] (CNonCanonical)
                [W] cobox_aD5 :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:54:86-89] (CNonCanonical)
                [W] cobox_aD6 :: t_aBo ~ Doc [" a type equality t_aBo
                                                                ~
                                                                Doc " HTML.hs:54:95-106] (CNonCanonical)
                [W] cobox_aD7 :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:54:104-106] (CNonCanonical)
                [W] cobox_aD8 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:112-120] (CNonCanonical)
                [W] cobox_aD9 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:54:118-120] (CNonCanonical)
                [W] cobox_aDa :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:55:70-98] (CNonCanonical)
                [W] cobox_aDb :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:55:82-97] (CNonCanonical)
                [W] cobox_aDc :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                   ~
                                                                   t_aBf " HTML.hs:55:94-97] (CNonCanonical)
                [W] cobox_aDd :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-108] (CNonCanonical)
                [W] cobox_aDe :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-94] (CNonCanonical)
                [W] cobox_aDf :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-79] (CNonCanonical)
                [W] cobox_aDg :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:56:76-79] (CNonCanonical)
                [W] cobox_aDh :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:85-94] (CNonCanonical)
                [W] cobox_aDi :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:56:91-94] (CNonCanonical)
                [W] cobox_aDj :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:100-108] (CNonCanonical)
                [W] cobox_aDk :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:56:106-108] (CNonCanonical)
                [W] cobox_aDl :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:57:36-44] (CNonCanonical)
                [W] cobox_aDm :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:(57,48)-(58,113)] (CNonCanonical)
                [W] cobox_aDn :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,99)] (CNonCanonical)
                [W] cobox_aDo :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,84)] (CNonCanonical)
                [W] cobox_aDp :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,69)] (CNonCanonical)
                [W] cobox_aDq :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-102] (CNonCanonical)
                [W] cobox_aDr :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-88] (CNonCanonical)
                [W] cobox_aDs :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-71] (CNonCanonical)
                [W] cobox_aDt :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-56] (CNonCanonical)
                [W] cobox_aDu :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:57:54-56] (CNonCanonical)
                [W] cobox_aDv :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:62-71] (CNonCanonical)
                [W] cobox_aDw :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:57:68-71] (CNonCanonical)
                [W] cobox_aDx :: t_aBo ~ Doc [" a type equality t_aBo
                                                                ~
                                                                Doc " HTML.hs:57:77-88] (CNonCanonical)
                [W] cobox_aDy :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:57:86-88] (CNonCanonical)
                [W] cobox_aDz :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:94-102] (CNonCanonical)
                [W] cobox_aDA :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:57:100-102] (CNonCanonical)
                [W] cobox_aDB :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:58:53-68] (CNonCanonical)
                [W] cobox_aDC :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                   ~
                                                                   t_aBf " HTML.hs:58:65-68] (CNonCanonical)
                [W] cobox_aDD :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:75-84] (CNonCanonical)
                [W] cobox_aDE :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:58:81-84] (CNonCanonical)
                [W] cobox_aDF :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:90-99] (CNonCanonical)
                [W] cobox_aDG :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:58:96-99] (CNonCanonical)
                [W] cobox_aDH :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:105-113] (CNonCanonical)
                [W] cobox_aDI :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:58:111-113] (CNonCanonical)
                [W] cobox_aDJ :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:59:9-26] (CNonCanonical)
                [W] cobox_aDK :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:59:31-92] (CNonCanonical)
                [W] cobox_aDL :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-78] (CNonCanonical)
                [W] cobox_aDM :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-54] (CNonCanonical)
                [W] cobox_aDN :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-39] (CNonCanonical)
                [W] cobox_aDO :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:59:37-39] (CNonCanonical)
                [W] cobox_aDP :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:45-54] (CNonCanonical)
                [W] cobox_aDQ :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:59:51-54] (CNonCanonical)
                [W] cobox_aDR :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:60-78] (CNonCanonical)
                [W] cobox_aDS :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:59:67-77] (CNonCanonical)
                [W] cobox_aDT :: [Attributen]
                                 ~ [String] [" a type equality [Attributen]
                                                               ~
                                                               [String] " HTML.hs:59:75-77] (CNonCanonical)
                [W] cobox_aDU :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:84-92] (CNonCanonical)
                [W] cobox_aDV :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:59:90-92] (CNonCanonical)
                [W] cobox_aDW :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:60:9-21] (CNonCanonical)
                [W] cobox_aDX :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:60:26-38] (CNonCanonical)
                [W] cobox_aDY :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:60:32-38] (CNonCanonical)
                [W] cobox_aE0 :: HTML ~ t_aBz [" a type equality HTML
                                                                 ~
                                                                 t_aBz " HTML.hs:36:9-23] (CNonCanonical)
                [W] cobox_aE1 :: t_aBs ~ t_aBA [" a type equality t_aBs
                                                                  ~
                                                                  t_aBA " HTML.hs:36:28-46] (CNonCanonical)
                [W] cobox_aE2 :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                   ~
                                                                   t_aBr " HTML.hs:36:46] (CNonCanonical)
                [W] cobox_aE3 :: Bool ~ t_aBA [" a type equality Bool
                                                                 ~
                                                                 t_aBA " HTML.hs:37:12-15] (CNonCanonical)
                [W] cobox_aE5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:17:13-30] (CNonCanonical)
                [W] cobox_aE6 :: String ~ t_aC4 [" a type equality String
                                                                   ~
                                                                   t_aC4 " HTML.hs:17:35-38] (CNonCanonical)
                [W] cobox_aE7 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:18:13-28] (CNonCanonical)
                [W] cobox_aE8 :: String ~ t_aC4 [" a type equality String
                                                                   ~
                                                                   t_aC4 " HTML.hs:18:33-36] (CNonCanonical)
                [W] cobox_aE9 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:19:13-19] (CNonCanonical)
                [W] cobox_aEa :: [Char] ~ t_aC4 [" a type equality [Char]
                                                                   ~
                                                                   t_aC4 " HTML.hs:19:24-25] (CNonCanonical)
                [W] cobox_aEd :: a_aEc
                                 ~ (t_aC7 -> t_aC8 -> t_aC9) [" a type equality a_aEc
                                                                                ~
                                                                                t_aC7
                                                                                -> t_aC8
                                                                                -> t_aC9 " HTML.hs:5:12-20] (CNonCanonical)
                [W] cobox_aEh :: (t_aEf, t_aEg) ~ t_aBX [" a type equality (t_aEf,
                                                                            t_aEg)
                                                                           ~
                                                                           t_aBX " HTML.hs:22:11-15] (CNonCanonical)
                [W] cobox_aEi :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:18-42] (CNonCanonical)
                [W] cobox_aEj :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                 ~
                                                                 Bool " HTML.hs:22:47-71] (CNonCanonical)
                [W] cobox_aEk :: t_aC4 ~ t_aC7 [" a type equality t_aC4
                                                                  ~
                                                                  t_aC7 " HTML.hs:22:57-68] (CNonCanonical)
                [W] cobox_aEl :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:22:68] (CNonCanonical)
                [W] cobox_aEm :: t_aEg ~ t_aC8 [" a type equality t_aEg
                                                                  ~
                                                                  t_aC8 " HTML.hs:22:71] (CNonCanonical)
                [W] cobox_aEn :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:22:76-160] (CNonCanonical)
                [W] cobox_aEo :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                 ~
                                                                 Bool " HTML.hs:22:77-91] (CNonCanonical)
                [W] cobox_aEp :: t_aEf ~ t_aC7 [" a type equality t_aEf
                                                                  ~
                                                                  t_aC7 " HTML.hs:22:86] (CNonCanonical)
                [W] cobox_aEq :: String ~ t_aC8 [" a type equality String
                                                                   ~
                                                                   t_aC8 " HTML.hs:22:88-91] (CNonCanonical)
                [W] cobox_aEr :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:22:97-160] (CNonCanonical)
                [W] cobox_aEs :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:22:98-114] (CNonCanonical)
                [W] cobox_aEv :: (t_aEt, t_aEu) ~ t_aBX [" a type equality (t_aEt,
                                                                            t_aEu)
                                                                           ~
                                                                           t_aBX " HTML.hs:22:108-112] (CNonCanonical)
                [W] cobox_aEw :: t_aEf ~ t_aEt [" a type equality t_aEf
                                                                  ~
                                                                  t_aEt " HTML.hs:22:109] (CNonCanonical)
                [W] cobox_aEx :: t_aEg ~ t_aEu [" a type equality t_aEg
                                                                  ~
                                                                  t_aEu " HTML.hs:22:111] (CNonCanonical)
                [W] cobox_aEy :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:114] (CNonCanonical)
                [W] cobox_aEz :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:22:121-159] (CNonCanonical)
                [W] cobox_aEC :: (t_aEA, t_aEB) ~ t_aBX [" a type equality (t_aEA,
                                                                            t_aEB)
                                                                           ~
                                                                           t_aBX " HTML.hs:22:131-135] (CNonCanonical)
                [W] cobox_aED :: t_aEf ~ t_aEA [" a type equality t_aEf
                                                                  ~
                                                                  t_aEA " HTML.hs:22:132] (CNonCanonical)
                [W] cobox_aEE :: t_aEg ~ t_aEB [" a type equality t_aEg
                                                                  ~
                                                                  t_aEB " HTML.hs:22:134] (CNonCanonical)
                [W] cobox_aEF :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:138-158] (CNonCanonical)
                [W] cobox_aEG :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:22:148-151] (CNonCanonical)
                [W] cobox_aEH :: [Attributen]
                                 ~ [Attributen] [" a type equality [Attributen]
                                                                   ~
                                                                   [Attributen] " HTML.hs:22:153-155] (CNonCanonical)
                [W] cobox_aEI :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                    ~
                                                                    [HTML] " HTML.hs:22:157-158] (CNonCanonical)
                [W] cobox_aEJ :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:23:46-54] (CNonCanonical)
                [W] cobox_aEK :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:23:58-121] (CNonCanonical)
                [W] cobox_aEL :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:23:59-75] (CNonCanonical)
                [W] cobox_aEO :: (t_aEM, t_aEN) ~ t_aBX [" a type equality (t_aEM,
                                                                            t_aEN)
                                                                           ~
                                                                           t_aBX " HTML.hs:23:69-73] (CNonCanonical)
                [W] cobox_aEP :: t_aEf ~ t_aEM [" a type equality t_aEf
                                                                  ~
                                                                  t_aEM " HTML.hs:23:70] (CNonCanonical)
                [W] cobox_aEQ :: t_aEg ~ t_aEN [" a type equality t_aEg
                                                                  ~
                                                                  t_aEN " HTML.hs:23:72] (CNonCanonical)
                [W] cobox_aER :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:23:75] (CNonCanonical)
                [W] cobox_aES :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:23:82-120] (CNonCanonical)
                [W] cobox_aEV :: (t_aET, t_aEU) ~ t_aBX [" a type equality (t_aET,
                                                                            t_aEU)
                                                                           ~
                                                                           t_aBX " HTML.hs:23:92-96] (CNonCanonical)
                [W] cobox_aEW :: t_aEf ~ t_aET [" a type equality t_aEf
                                                                  ~
                                                                  t_aET " HTML.hs:23:93] (CNonCanonical)
                [W] cobox_aEX :: t_aEg ~ t_aEU [" a type equality t_aEg
                                                                  ~
                                                                  t_aEU " HTML.hs:23:95] (CNonCanonical)
                [W] cobox_aEY :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:23:99-119] (CNonCanonical)
                [W] cobox_aEZ :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:23:109-112] (CNonCanonical)
                [W] cobox_aF0 :: [Attributen]
                                 ~ [Attributen] [" a type equality [Attributen]
                                                                   ~
                                                                   [Attributen] " HTML.hs:23:114-116] (CNonCanonical)
                [W] cobox_aF1 :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                    ~
                                                                    [HTML] " HTML.hs:23:118-119] (CNonCanonical)
                [W] cobox_aF2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:24:17-20] (CNonCanonical)
                [W] cobox_aF5 :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                    ~
                                                                    t_aBR " HTML.hs:27:11-18] (CNonCanonical)
                [W] cobox_aF6 :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:27:28-70] (CNonCanonical)
                [W] cobox_aF7 :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                 ~
                                                                 Bool " HTML.hs:27:32-69] (CNonCanonical)
                [W] cobox_aFc :: b_aFb ~ t_aC7 [" a type equality b_aFb
                                                                  ~
                                                                  t_aC7 " HTML.hs:27:42-50] (CNonCanonical)
                [W] cobox_aFd :: t_aF4 ~ (a_aFa, b_aFb) [" a type equality t_aF4
                                                                           ~
                                                                           (a_aFa,
                                                                            b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
                [W] cobox_aFe :: t_aC4 ~ t_aC8 [" a type equality t_aC4
                                                                  ~
                                                                  t_aC8 " HTML.hs:27:54-68] (CNonCanonical)
                [W] cobox_aFf :: t_aBS ~ t_aC3 [" a type equality t_aBS
                                                                  ~
                                                                  t_aC3 " HTML.hs:27:65-68] (CNonCanonical)
                [W] cobox_aFg :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:27:78-97] (CNonCanonical)
                [W] cobox_aFh :: t_aF4 ~ t_aBX [" a type equality t_aF4
                                                                  ~
                                                                  t_aBX " HTML.hs:27:88-92] (CNonCanonical)
                [W] cobox_aFi :: t_aBS ~ t_aBY [" a type equality t_aBS
                                                                  ~
                                                                  t_aBY " HTML.hs:27:94-97] (CNonCanonical)
                [W] cobox_aFj :: t_aBT ~ t_aBT [" a type equality t_aBT
                                                                  ~
                                                                  t_aBT " HTML.hs:28:80-95] (CNonCanonical)
                [W] cobox_aFk :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                    ~
                                                                    t_aBR " HTML.hs:28:89-90] (CNonCanonical)
                [W] cobox_aFl :: t_aBS ~ t_aBS [" a type equality t_aBS
                                                                  ~
                                                                  t_aBS " HTML.hs:28:92-95] (CNonCanonical)
                [W] cobox_aFn :: Maybe a_aFm ~ t_aBT [" a type equality Maybe a_aFm
                                                                        ~
                                                                        t_aBT " HTML.hs:30:80-89] (CNonCanonical)
                [W] cobox_aFo :: t_aF4 ~ a_aFm [" a type equality t_aF4
                                                                  ~
                                                                  a_aFm " HTML.hs:30:85-89] (CNonCanonical)
                [W] cobox_aFp :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:31:28-36] (CNonCanonical)
                [W] cobox_aFr :: Maybe a_aFq ~ t_aBT [" a type equality Maybe a_aFq
                                                                        ~
                                                                        t_aBT " HTML.hs:31:40-49] (CNonCanonical)
                [W] cobox_aFs :: t_aF4 ~ a_aFq [" a type equality t_aF4
                                                                  ~
                                                                  a_aFq " HTML.hs:31:45-49] (CNonCanonical)
                [W] cobox_aFu :: [t_aFt] ~ t_aBR [" a type equality [t_aFt]
                                                                    ~
                                                                    t_aBR " HTML.hs:32:10-11] (CNonCanonical)
                [W] cobox_aFw :: Maybe a_aFv ~ t_aBT [" a type equality Maybe a_aFv
                                                                        ~
                                                                        t_aBT " HTML.hs:32:17-23] (CNonCanonical)}
Tc7a
checkMain not Main HTML
Tc8
simplifyTop {
  wanted =  WC {wc_flat = [W] cobox_aBh :: [HTML]
                                           ~ t_aBf [" a type equality [HTML]
                                                                      ~
                                                                      t_aBf " HTML.hs:62:16-28] (CNonCanonical)
                          [W] cobox_aBi :: Doc ~ t_aBg [" a type equality Doc
                                                                          ~
                                                                          t_aBg " HTML.hs:62:16-28] (CNonCanonical)
                          [W] cobox_aBl :: HTML ~ t_aBj [" a type equality HTML
                                                                           ~
                                                                           t_aBj " HTML.hs:53:11-21] (CNonCanonical)
                          [W] cobox_aBm :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:53:11-21] (CNonCanonical)
                          [W] cobox_aBp :: [Attributen]
                                           ~ t_aBn [" a type equality [Attributen]
                                                                      ~
                                                                      t_aBn " HTML.hs:49:13-31] (CNonCanonical)
                          [W] cobox_aBq :: Doc ~ t_aBo [" a type equality Doc
                                                                          ~
                                                                          t_aBo " HTML.hs:49:13-31] (CNonCanonical)
                          [W] cobox_aBt :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                             ~
                                                                             t_aBr " HTML.hs:45:22-35] (CNonCanonical)
                          [W] cobox_aBu :: Bool ~ t_aBs [" a type equality Bool
                                                                           ~
                                                                           t_aBs " HTML.hs:45:22-35] (CNonCanonical)
                          [W] cobox_aBx :: HTML ~ t_aBv [" a type equality HTML
                                                                           ~
                                                                           t_aBv " HTML.hs:39:22-33] (CNonCanonical)
                          [W] cobox_aBy :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:39:22-33] (CNonCanonical)
                          [W] cobox_aBB :: HTML ~ t_aBz [" a type equality HTML
                                                                           ~
                                                                           t_aBz " HTML.hs:35:11-22] (CNonCanonical)
                          [W] cobox_aBC :: Bool ~ t_aBA [" a type equality Bool
                                                                           ~
                                                                           t_aBA " HTML.hs:35:11-22] (CNonCanonical)
                          [W] cobox_aBU :: [Requirement]
                                           ~ t_aBR [" a type equality [Requirement]
                                                                      ~
                                                                      t_aBR " HTML.hs:26:13-54] (CNonCanonical)
                          [W] cobox_aBV :: HTML ~ t_aBS [" a type equality HTML
                                                                           ~
                                                                           t_aBS " HTML.hs:26:13-54] (CNonCanonical)
                          [W] cobox_aBW :: Maybe Requirement ~ t_aBT [" a type equality Maybe
                                                                                          Requirement
                                                                                        ~
                                                                                        t_aBT " HTML.hs:26:13-54] (CNonCanonical)
                          [W] cobox_aC0 :: Requirement ~ t_aBX [" a type equality Requirement
                                                                                  ~
                                                                                  t_aBX " HTML.hs:21:14-40] (CNonCanonical)
                          [W] cobox_aC1 :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:21:14-40] (CNonCanonical)
                          [W] cobox_aC2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                           ~
                                                                           t_aBZ " HTML.hs:21:14-40] (CNonCanonical)
                          [W] cobox_aC5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:16:15-28] (CNonCanonical)
                          [W] cobox_aC6 :: String ~ t_aC4 [" a type equality String
                                                                             ~
                                                                             t_aC4 " HTML.hs:16:15-28] (CNonCanonical)
                          [W] cobox_aCa :: String ~ t_aC7 [" a type equality String
                                                                             ~
                                                                             t_aC7 " HTML.hs:4:18-41] (CNonCanonical)
                          [W] cobox_aCb :: String ~ t_aC8 [" a type equality String
                                                                             ~
                                                                             t_aC8 " HTML.hs:4:18-41] (CNonCanonical)
                          [W] cobox_aCc :: Bool ~ t_aC9 [" a type equality Bool
                                                                           ~
                                                                           t_aC9 " HTML.hs:4:18-41] (CNonCanonical)
                          [W] cobox_aCf :: [t_aCe] ~ t_aBn [" a type equality [t_aCe]
                                                                              ~
                                                                              t_aBn " HTML.hs:50:10-11] (CNonCanonical)
                          [W] cobox_aCg :: Doc ~ t_aBo [" a type equality Doc
                                                                          ~
                                                                          t_aBo " HTML.hs:50:15-22] (CNonCanonical)
                          [W] cobox_aCh :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:50:21-22] (CNonCanonical)
                          [W] cobox_aCi :: Doc ~ t_aBo [" a type equality Doc
                                                                          ~
                                                                          t_aBo " HTML.hs:51:23-54] (CNonCanonical)
                          [W] cobox_aCj :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:51:23-31] (CNonCanonical)
                          [W] cobox_aCk :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:51:29-31] (CNonCanonical)
                          [W] cobox_aCl :: String ~ Doc [" a type equality String
                                                                           ~
                                                                           Doc " HTML.hs:51:37-54] (CNonCanonical)
                          [W] cobox_aCm :: t_aBn ~ [String] [" a type equality t_aBn
                                                                               ~
                                                                               [String] " HTML.hs:51:45-54] (CNonCanonical)
                          [W] cobox_aCo :: HTML ~ t_aBv [" a type equality HTML
                                                                           ~
                                                                           t_aBv " HTML.hs:40:20-26] (CNonCanonical)
                          [W] cobox_aCp :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:40:31-34] (CNonCanonical)
                          [W] cobox_aCq :: HTML ~ t_aBv [" a type equality HTML
                                                                           ~
                                                                           t_aBv " HTML.hs:41:20-36] (CNonCanonical)
                          [W] cobox_aCr :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:41:41-44] (CNonCanonical)
                          [W] cobox_aCs :: HTML ~ t_aBv [" a type equality HTML
                                                                           ~
                                                                           t_aBv " HTML.hs:42:20-32] (CNonCanonical)
                          [W] cobox_aCt :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:42:37-40] (CNonCanonical)
                          [W] cobox_aCu :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:43:23-27] (CNonCanonical)
                          [W] cobox_aCx :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                              ~
                                                                              t_aBr " HTML.hs:46:20-23] (CNonCanonical)
                          [W] cobox_aCy :: Bool ~ t_aBs [" a type equality Bool
                                                                           ~
                                                                           t_aBs " HTML.hs:46:28-70] (CNonCanonical)
                          [W] cobox_aCz :: t_aBw ~ Bool [" a type equality t_aBw
                                                                           ~
                                                                           Bool " HTML.hs:46:28-46] (CNonCanonical)
                          [W] cobox_aCA :: t_aCw ~ t_aBv [" a type equality t_aCw
                                                                            ~
                                                                            t_aBv " HTML.hs:46:46] (CNonCanonical)
                          [W] cobox_aCB :: t_aBs ~ Bool [" a type equality t_aBs
                                                                           ~
                                                                           Bool " HTML.hs:46:51-70] (CNonCanonical)
                          [W] cobox_aCC :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                              ~
                                                                              t_aBr " HTML.hs:46:69-70] (CNonCanonical)
                          [W] cobox_aCE :: [t_aCD] ~ t_aBr [" a type equality [t_aCD]
                                                                              ~
                                                                              t_aBr " HTML.hs:47:19-20] (CNonCanonical)
                          [W] cobox_aCF :: Bool ~ t_aBs [" a type equality Bool
                                                                           ~
                                                                           t_aBs " HTML.hs:47:24-27] (CNonCanonical)
                          [W] cobox_aCI :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                              ~
                                                                              t_aBf " HTML.hs:63:14-17] (CNonCanonical)
                          [W] cobox_aCJ :: Doc ~ t_aBg [" a type equality Doc
                                                                          ~
                                                                          t_aBg " HTML.hs:63:22-48] (CNonCanonical)
                          [W] cobox_aCK :: t_aBk ~ Doc [" a type equality t_aBk
                                                                          ~
                                                                          Doc " HTML.hs:63:22-29] (CNonCanonical)
                          [W] cobox_aCL :: t_aCH ~ t_aBj [" a type equality t_aCH
                                                                            ~
                                                                            t_aBj " HTML.hs:63:29] (CNonCanonical)
                          [W] cobox_aCM :: t_aBg ~ Doc [" a type equality t_aBg
                                                                          ~
                                                                          Doc " HTML.hs:63:35-48] (CNonCanonical)
                          [W] cobox_aCN :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                              ~
                                                                              t_aBf " HTML.hs:63:47-48] (CNonCanonical)
                          [W] cobox_aCP :: [t_aCO] ~ t_aBf [" a type equality [t_aCO]
                                                                              ~
                                                                              t_aBf " HTML.hs:64:13-14] (CNonCanonical)
                          [W] cobox_aCQ :: Doc ~ t_aBg [" a type equality Doc
                                                                          ~
                                                                          t_aBg " HTML.hs:64:18-25] (CNonCanonical)
                          [W] cobox_aCR :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:64:24-25] (CNonCanonical)
                          [W] cobox_aCT :: HTML ~ t_aBj [" a type equality HTML
                                                                           ~
                                                                           t_aBj " HTML.hs:54:9-31] (CNonCanonical)
                          [W] cobox_aCU :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:54:36-62] (CNonCanonical)
                          [W] cobox_aCV :: t_aBs ~ Bool [" a type equality t_aBs
                                                                           ~
                                                                           Bool " HTML.hs:54:40-61] (CNonCanonical)
                          [W] cobox_aCW :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                             ~
                                                                             t_aBr " HTML.hs:54:58-61] (CNonCanonical)
                          [W] cobox_aCX :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:(54,66)-(56,108)] (CNonCanonical)
                          [W] cobox_aCY :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:(54,66)-(55,98)] (CNonCanonical)
                          [W] cobox_aCZ :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:66-120] (CNonCanonical)
                          [W] cobox_aD0 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:66-106] (CNonCanonical)
                          [W] cobox_aD1 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:66-89] (CNonCanonical)
                          [W] cobox_aD2 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:66-74] (CNonCanonical)
                          [W] cobox_aD3 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:54:72-74] (CNonCanonical)
                          [W] cobox_aD4 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:80-89] (CNonCanonical)
                          [W] cobox_aD5 :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:54:86-89] (CNonCanonical)
                          [W] cobox_aD6 :: t_aBo ~ Doc [" a type equality t_aBo
                                                                          ~
                                                                          Doc " HTML.hs:54:95-106] (CNonCanonical)
                          [W] cobox_aD7 :: [Attributen]
                                           ~ t_aBn [" a type equality [Attributen]
                                                                      ~
                                                                      t_aBn " HTML.hs:54:104-106] (CNonCanonical)
                          [W] cobox_aD8 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:112-120] (CNonCanonical)
                          [W] cobox_aD9 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:54:118-120] (CNonCanonical)
                          [W] cobox_aDa :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:55:70-98] (CNonCanonical)
                          [W] cobox_aDb :: t_aBg ~ Doc [" a type equality t_aBg
                                                                          ~
                                                                          Doc " HTML.hs:55:82-97] (CNonCanonical)
                          [W] cobox_aDc :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                             ~
                                                                             t_aBf " HTML.hs:55:94-97] (CNonCanonical)
                          [W] cobox_aDd :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:70-108] (CNonCanonical)
                          [W] cobox_aDe :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:70-94] (CNonCanonical)
                          [W] cobox_aDf :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:70-79] (CNonCanonical)
                          [W] cobox_aDg :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:56:76-79] (CNonCanonical)
                          [W] cobox_aDh :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:85-94] (CNonCanonical)
                          [W] cobox_aDi :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:56:91-94] (CNonCanonical)
                          [W] cobox_aDj :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:100-108] (CNonCanonical)
                          [W] cobox_aDk :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:56:106-108] (CNonCanonical)
                          [W] cobox_aDl :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:57:36-44] (CNonCanonical)
                          [W] cobox_aDm :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:(57,48)-(58,113)] (CNonCanonical)
                          [W] cobox_aDn :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:(57,48)-(58,99)] (CNonCanonical)
                          [W] cobox_aDo :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:(57,48)-(58,84)] (CNonCanonical)
                          [W] cobox_aDp :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:(57,48)-(58,69)] (CNonCanonical)
                          [W] cobox_aDq :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:48-102] (CNonCanonical)
                          [W] cobox_aDr :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:48-88] (CNonCanonical)
                          [W] cobox_aDs :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:48-71] (CNonCanonical)
                          [W] cobox_aDt :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:48-56] (CNonCanonical)
                          [W] cobox_aDu :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:57:54-56] (CNonCanonical)
                          [W] cobox_aDv :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:62-71] (CNonCanonical)
                          [W] cobox_aDw :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:57:68-71] (CNonCanonical)
                          [W] cobox_aDx :: t_aBo ~ Doc [" a type equality t_aBo
                                                                          ~
                                                                          Doc " HTML.hs:57:77-88] (CNonCanonical)
                          [W] cobox_aDy :: [Attributen]
                                           ~ t_aBn [" a type equality [Attributen]
                                                                      ~
                                                                      t_aBn " HTML.hs:57:86-88] (CNonCanonical)
                          [W] cobox_aDz :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:94-102] (CNonCanonical)
                          [W] cobox_aDA :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:57:100-102] (CNonCanonical)
                          [W] cobox_aDB :: t_aBg ~ Doc [" a type equality t_aBg
                                                                          ~
                                                                          Doc " HTML.hs:58:53-68] (CNonCanonical)
                          [W] cobox_aDC :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                             ~
                                                                             t_aBf " HTML.hs:58:65-68] (CNonCanonical)
                          [W] cobox_aDD :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:58:75-84] (CNonCanonical)
                          [W] cobox_aDE :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:58:81-84] (CNonCanonical)
                          [W] cobox_aDF :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:58:90-99] (CNonCanonical)
                          [W] cobox_aDG :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:58:96-99] (CNonCanonical)
                          [W] cobox_aDH :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:58:105-113] (CNonCanonical)
                          [W] cobox_aDI :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:58:111-113] (CNonCanonical)
                          [W] cobox_aDJ :: HTML ~ t_aBj [" a type equality HTML
                                                                           ~
                                                                           t_aBj " HTML.hs:59:9-26] (CNonCanonical)
                          [W] cobox_aDK :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:59:31-92] (CNonCanonical)
                          [W] cobox_aDL :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:31-78] (CNonCanonical)
                          [W] cobox_aDM :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:31-54] (CNonCanonical)
                          [W] cobox_aDN :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:31-39] (CNonCanonical)
                          [W] cobox_aDO :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:59:37-39] (CNonCanonical)
                          [W] cobox_aDP :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:45-54] (CNonCanonical)
                          [W] cobox_aDQ :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:59:51-54] (CNonCanonical)
                          [W] cobox_aDR :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:60-78] (CNonCanonical)
                          [W] cobox_aDS :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:59:67-77] (CNonCanonical)
                          [W] cobox_aDT :: [Attributen]
                                           ~ [String] [" a type equality [Attributen]
                                                                         ~
                                                                         [String] " HTML.hs:59:75-77] (CNonCanonical)
                          [W] cobox_aDU :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:84-92] (CNonCanonical)
                          [W] cobox_aDV :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:59:90-92] (CNonCanonical)
                          [W] cobox_aDW :: HTML ~ t_aBj [" a type equality HTML
                                                                           ~
                                                                           t_aBj " HTML.hs:60:9-21] (CNonCanonical)
                          [W] cobox_aDX :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:60:26-38] (CNonCanonical)
                          [W] cobox_aDY :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:60:32-38] (CNonCanonical)
                          [W] cobox_aE0 :: HTML ~ t_aBz [" a type equality HTML
                                                                           ~
                                                                           t_aBz " HTML.hs:36:9-23] (CNonCanonical)
                          [W] cobox_aE1 :: t_aBs ~ t_aBA [" a type equality t_aBs
                                                                            ~
                                                                            t_aBA " HTML.hs:36:28-46] (CNonCanonical)
                          [W] cobox_aE2 :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                             ~
                                                                             t_aBr " HTML.hs:36:46] (CNonCanonical)
                          [W] cobox_aE3 :: Bool ~ t_aBA [" a type equality Bool
                                                                           ~
                                                                           t_aBA " HTML.hs:37:12-15] (CNonCanonical)
                          [W] cobox_aE5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:17:13-30] (CNonCanonical)
                          [W] cobox_aE6 :: String ~ t_aC4 [" a type equality String
                                                                             ~
                                                                             t_aC4 " HTML.hs:17:35-38] (CNonCanonical)
                          [W] cobox_aE7 :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:18:13-28] (CNonCanonical)
                          [W] cobox_aE8 :: String ~ t_aC4 [" a type equality String
                                                                             ~
                                                                             t_aC4 " HTML.hs:18:33-36] (CNonCanonical)
                          [W] cobox_aE9 :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:19:13-19] (CNonCanonical)
                          [W] cobox_aEa :: [Char] ~ t_aC4 [" a type equality [Char]
                                                                             ~
                                                                             t_aC4 " HTML.hs:19:24-25] (CNonCanonical)
                          [W] cobox_aEd :: a_aEc
                                           ~ (t_aC7 -> t_aC8 -> t_aC9) [" a type equality a_aEc
                                                                                          ~
                                                                                          t_aC7
                                                                                          -> t_aC8
                                                                                          -> t_aC9 " HTML.hs:5:12-20] (CNonCanonical)
                          [W] cobox_aEh :: (t_aEf, t_aEg) ~ t_aBX [" a type equality (t_aEf,
                                                                                      t_aEg)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:22:11-15] (CNonCanonical)
                          [W] cobox_aEi :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:22:18-42] (CNonCanonical)
                          [W] cobox_aEj :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                           ~
                                                                           Bool " HTML.hs:22:47-71] (CNonCanonical)
                          [W] cobox_aEk :: t_aC4 ~ t_aC7 [" a type equality t_aC4
                                                                            ~
                                                                            t_aC7 " HTML.hs:22:57-68] (CNonCanonical)
                          [W] cobox_aEl :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:22:68] (CNonCanonical)
                          [W] cobox_aEm :: t_aEg ~ t_aC8 [" a type equality t_aEg
                                                                            ~
                                                                            t_aC8 " HTML.hs:22:71] (CNonCanonical)
                          [W] cobox_aEn :: Bool ~ t_aBZ [" a type equality Bool
                                                                           ~
                                                                           t_aBZ " HTML.hs:22:76-160] (CNonCanonical)
                          [W] cobox_aEo :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                           ~
                                                                           Bool " HTML.hs:22:77-91] (CNonCanonical)
                          [W] cobox_aEp :: t_aEf ~ t_aC7 [" a type equality t_aEf
                                                                            ~
                                                                            t_aC7 " HTML.hs:22:86] (CNonCanonical)
                          [W] cobox_aEq :: String ~ t_aC8 [" a type equality String
                                                                             ~
                                                                             t_aC8 " HTML.hs:22:88-91] (CNonCanonical)
                          [W] cobox_aEr :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:22:97-160] (CNonCanonical)
                          [W] cobox_aEs :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:22:98-114] (CNonCanonical)
                          [W] cobox_aEv :: (t_aEt, t_aEu) ~ t_aBX [" a type equality (t_aEt,
                                                                                      t_aEu)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:22:108-112] (CNonCanonical)
                          [W] cobox_aEw :: t_aEf ~ t_aEt [" a type equality t_aEf
                                                                            ~
                                                                            t_aEt " HTML.hs:22:109] (CNonCanonical)
                          [W] cobox_aEx :: t_aEg ~ t_aEu [" a type equality t_aEg
                                                                            ~
                                                                            t_aEu " HTML.hs:22:111] (CNonCanonical)
                          [W] cobox_aEy :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:22:114] (CNonCanonical)
                          [W] cobox_aEz :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:22:121-159] (CNonCanonical)
                          [W] cobox_aEC :: (t_aEA, t_aEB) ~ t_aBX [" a type equality (t_aEA,
                                                                                      t_aEB)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:22:131-135] (CNonCanonical)
                          [W] cobox_aED :: t_aEf ~ t_aEA [" a type equality t_aEf
                                                                            ~
                                                                            t_aEA " HTML.hs:22:132] (CNonCanonical)
                          [W] cobox_aEE :: t_aEg ~ t_aEB [" a type equality t_aEg
                                                                            ~
                                                                            t_aEB " HTML.hs:22:134] (CNonCanonical)
                          [W] cobox_aEF :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:22:138-158] (CNonCanonical)
                          [W] cobox_aEG :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:22:148-151] (CNonCanonical)
                          [W] cobox_aEH :: [Attributen]
                                           ~ [Attributen] [" a type equality [Attributen]
                                                                             ~
                                                                             [Attributen] " HTML.hs:22:153-155] (CNonCanonical)
                          [W] cobox_aEI :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                              ~
                                                                              [HTML] " HTML.hs:22:157-158] (CNonCanonical)
                          [W] cobox_aEJ :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:23:46-54] (CNonCanonical)
                          [W] cobox_aEK :: Bool ~ t_aBZ [" a type equality Bool
                                                                           ~
                                                                           t_aBZ " HTML.hs:23:58-121] (CNonCanonical)
                          [W] cobox_aEL :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:23:59-75] (CNonCanonical)
                          [W] cobox_aEO :: (t_aEM, t_aEN) ~ t_aBX [" a type equality (t_aEM,
                                                                                      t_aEN)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:23:69-73] (CNonCanonical)
                          [W] cobox_aEP :: t_aEf ~ t_aEM [" a type equality t_aEf
                                                                            ~
                                                                            t_aEM " HTML.hs:23:70] (CNonCanonical)
                          [W] cobox_aEQ :: t_aEg ~ t_aEN [" a type equality t_aEg
                                                                            ~
                                                                            t_aEN " HTML.hs:23:72] (CNonCanonical)
                          [W] cobox_aER :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:23:75] (CNonCanonical)
                          [W] cobox_aES :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:23:82-120] (CNonCanonical)
                          [W] cobox_aEV :: (t_aET, t_aEU) ~ t_aBX [" a type equality (t_aET,
                                                                                      t_aEU)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:23:92-96] (CNonCanonical)
                          [W] cobox_aEW :: t_aEf ~ t_aET [" a type equality t_aEf
                                                                            ~
                                                                            t_aET " HTML.hs:23:93] (CNonCanonical)
                          [W] cobox_aEX :: t_aEg ~ t_aEU [" a type equality t_aEg
                                                                            ~
                                                                            t_aEU " HTML.hs:23:95] (CNonCanonical)
                          [W] cobox_aEY :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:23:99-119] (CNonCanonical)
                          [W] cobox_aEZ :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:23:109-112] (CNonCanonical)
                          [W] cobox_aF0 :: [Attributen]
                                           ~ [Attributen] [" a type equality [Attributen]
                                                                             ~
                                                                             [Attributen] " HTML.hs:23:114-116] (CNonCanonical)
                          [W] cobox_aF1 :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                              ~
                                                                              [HTML] " HTML.hs:23:118-119] (CNonCanonical)
                          [W] cobox_aF2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                           ~
                                                                           t_aBZ " HTML.hs:24:17-20] (CNonCanonical)
                          [W] cobox_aF5 :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                              ~
                                                                              t_aBR " HTML.hs:27:11-18] (CNonCanonical)
                          [W] cobox_aF6 :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:27:28-70] (CNonCanonical)
                          [W] cobox_aF7 :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                           ~
                                                                           Bool " HTML.hs:27:32-69] (CNonCanonical)
                          [W] cobox_aFc :: b_aFb ~ t_aC7 [" a type equality b_aFb
                                                                            ~
                                                                            t_aC7 " HTML.hs:27:42-50] (CNonCanonical)
                          [W] cobox_aFd :: t_aF4 ~ (a_aFa, b_aFb) [" a type equality t_aF4
                                                                                     ~
                                                                                     (a_aFa,
                                                                                      b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
                          [W] cobox_aFe :: t_aC4 ~ t_aC8 [" a type equality t_aC4
                                                                            ~
                                                                            t_aC8 " HTML.hs:27:54-68] (CNonCanonical)
                          [W] cobox_aFf :: t_aBS ~ t_aC3 [" a type equality t_aBS
                                                                            ~
                                                                            t_aC3 " HTML.hs:27:65-68] (CNonCanonical)
                          [W] cobox_aFg :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:27:78-97] (CNonCanonical)
                          [W] cobox_aFh :: t_aF4 ~ t_aBX [" a type equality t_aF4
                                                                            ~
                                                                            t_aBX " HTML.hs:27:88-92] (CNonCanonical)
                          [W] cobox_aFi :: t_aBS ~ t_aBY [" a type equality t_aBS
                                                                            ~
                                                                            t_aBY " HTML.hs:27:94-97] (CNonCanonical)
                          [W] cobox_aFj :: t_aBT ~ t_aBT [" a type equality t_aBT
                                                                            ~
                                                                            t_aBT " HTML.hs:28:80-95] (CNonCanonical)
                          [W] cobox_aFk :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                              ~
                                                                              t_aBR " HTML.hs:28:89-90] (CNonCanonical)
                          [W] cobox_aFl :: t_aBS ~ t_aBS [" a type equality t_aBS
                                                                            ~
                                                                            t_aBS " HTML.hs:28:92-95] (CNonCanonical)
                          [W] cobox_aFn :: Maybe a_aFm ~ t_aBT [" a type equality Maybe a_aFm
                                                                                  ~
                                                                                  t_aBT " HTML.hs:30:80-89] (CNonCanonical)
                          [W] cobox_aFo :: t_aF4 ~ a_aFm [" a type equality t_aF4
                                                                            ~
                                                                            a_aFm " HTML.hs:30:85-89] (CNonCanonical)
                          [W] cobox_aFp :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:31:28-36] (CNonCanonical)
                          [W] cobox_aFr :: Maybe a_aFq ~ t_aBT [" a type equality Maybe a_aFq
                                                                                  ~
                                                                                  t_aBT " HTML.hs:31:40-49] (CNonCanonical)
                          [W] cobox_aFs :: t_aF4 ~ a_aFq [" a type equality t_aF4
                                                                            ~
                                                                            a_aFq " HTML.hs:31:45-49] (CNonCanonical)
                          [W] cobox_aFu :: [t_aFt] ~ t_aBR [" a type equality [t_aFt]
                                                                              ~
                                                                              t_aBR " HTML.hs:32:10-11] (CNonCanonical)
                          [W] cobox_aFw :: Maybe a_aFv ~ t_aBT [" a type equality Maybe a_aFv
                                                                                  ~
                                                                                  t_aBT " HTML.hs:32:17-23] (CNonCanonical)}
solveWantedsTcMWithEvBinds
  wanted= WC {wc_flat = [W] cobox_aBh :: [HTML]
                                         ~ t_aBf [" a type equality [HTML]
                                                                    ~
                                                                    t_aBf " HTML.hs:62:16-28] (CNonCanonical)
                        [W] cobox_aBi :: Doc ~ t_aBg [" a type equality Doc
                                                                        ~
                                                                        t_aBg " HTML.hs:62:16-28] (CNonCanonical)
                        [W] cobox_aBl :: HTML ~ t_aBj [" a type equality HTML
                                                                         ~
                                                                         t_aBj " HTML.hs:53:11-21] (CNonCanonical)
                        [W] cobox_aBm :: Doc ~ t_aBk [" a type equality Doc
                                                                        ~
                                                                        t_aBk " HTML.hs:53:11-21] (CNonCanonical)
                        [W] cobox_aBp :: [Attributen]
                                         ~ t_aBn [" a type equality [Attributen]
                                                                    ~
                                                                    t_aBn " HTML.hs:49:13-31] (CNonCanonical)
                        [W] cobox_aBq :: Doc ~ t_aBo [" a type equality Doc
                                                                        ~
                                                                        t_aBo " HTML.hs:49:13-31] (CNonCanonical)
                        [W] cobox_aBt :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                           ~
                                                                           t_aBr " HTML.hs:45:22-35] (CNonCanonical)
                        [W] cobox_aBu :: Bool ~ t_aBs [" a type equality Bool
                                                                         ~
                                                                         t_aBs " HTML.hs:45:22-35] (CNonCanonical)
                        [W] cobox_aBx :: HTML ~ t_aBv [" a type equality HTML
                                                                         ~
                                                                         t_aBv " HTML.hs:39:22-33] (CNonCanonical)
                        [W] cobox_aBy :: Bool ~ t_aBw [" a type equality Bool
                                                                         ~
                                                                         t_aBw " HTML.hs:39:22-33] (CNonCanonical)
                        [W] cobox_aBB :: HTML ~ t_aBz [" a type equality HTML
                                                                         ~
                                                                         t_aBz " HTML.hs:35:11-22] (CNonCanonical)
                        [W] cobox_aBC :: Bool ~ t_aBA [" a type equality Bool
                                                                         ~
                                                                         t_aBA " HTML.hs:35:11-22] (CNonCanonical)
                        [W] cobox_aBU :: [Requirement]
                                         ~ t_aBR [" a type equality [Requirement]
                                                                    ~
                                                                    t_aBR " HTML.hs:26:13-54] (CNonCanonical)
                        [W] cobox_aBV :: HTML ~ t_aBS [" a type equality HTML
                                                                         ~
                                                                         t_aBS " HTML.hs:26:13-54] (CNonCanonical)
                        [W] cobox_aBW :: Maybe Requirement ~ t_aBT [" a type equality Maybe
                                                                                        Requirement
                                                                                      ~
                                                                                      t_aBT " HTML.hs:26:13-54] (CNonCanonical)
                        [W] cobox_aC0 :: Requirement ~ t_aBX [" a type equality Requirement
                                                                                ~
                                                                                t_aBX " HTML.hs:21:14-40] (CNonCanonical)
                        [W] cobox_aC1 :: HTML ~ t_aBY [" a type equality HTML
                                                                         ~
                                                                         t_aBY " HTML.hs:21:14-40] (CNonCanonical)
                        [W] cobox_aC2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                         ~
                                                                         t_aBZ " HTML.hs:21:14-40] (CNonCanonical)
                        [W] cobox_aC5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                         ~
                                                                         t_aC3 " HTML.hs:16:15-28] (CNonCanonical)
                        [W] cobox_aC6 :: String ~ t_aC4 [" a type equality String
                                                                           ~
                                                                           t_aC4 " HTML.hs:16:15-28] (CNonCanonical)
                        [W] cobox_aCa :: String ~ t_aC7 [" a type equality String
                                                                           ~
                                                                           t_aC7 " HTML.hs:4:18-41] (CNonCanonical)
                        [W] cobox_aCb :: String ~ t_aC8 [" a type equality String
                                                                           ~
                                                                           t_aC8 " HTML.hs:4:18-41] (CNonCanonical)
                        [W] cobox_aCc :: Bool ~ t_aC9 [" a type equality Bool
                                                                         ~
                                                                         t_aC9 " HTML.hs:4:18-41] (CNonCanonical)
                        [W] cobox_aCf :: [t_aCe] ~ t_aBn [" a type equality [t_aCe]
                                                                            ~
                                                                            t_aBn " HTML.hs:50:10-11] (CNonCanonical)
                        [W] cobox_aCg :: Doc ~ t_aBo [" a type equality Doc
                                                                        ~
                                                                        t_aBo " HTML.hs:50:15-22] (CNonCanonical)
                        [W] cobox_aCh :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:50:21-22] (CNonCanonical)
                        [W] cobox_aCi :: Doc ~ t_aBo [" a type equality Doc
                                                                        ~
                                                                        t_aBo " HTML.hs:51:23-54] (CNonCanonical)
                        [W] cobox_aCj :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:51:23-31] (CNonCanonical)
                        [W] cobox_aCk :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:51:29-31] (CNonCanonical)
                        [W] cobox_aCl :: String ~ Doc [" a type equality String
                                                                         ~
                                                                         Doc " HTML.hs:51:37-54] (CNonCanonical)
                        [W] cobox_aCm :: t_aBn ~ [String] [" a type equality t_aBn
                                                                             ~
                                                                             [String] " HTML.hs:51:45-54] (CNonCanonical)
                        [W] cobox_aCo :: HTML ~ t_aBv [" a type equality HTML
                                                                         ~
                                                                         t_aBv " HTML.hs:40:20-26] (CNonCanonical)
                        [W] cobox_aCp :: Bool ~ t_aBw [" a type equality Bool
                                                                         ~
                                                                         t_aBw " HTML.hs:40:31-34] (CNonCanonical)
                        [W] cobox_aCq :: HTML ~ t_aBv [" a type equality HTML
                                                                         ~
                                                                         t_aBv " HTML.hs:41:20-36] (CNonCanonical)
                        [W] cobox_aCr :: Bool ~ t_aBw [" a type equality Bool
                                                                         ~
                                                                         t_aBw " HTML.hs:41:41-44] (CNonCanonical)
                        [W] cobox_aCs :: HTML ~ t_aBv [" a type equality HTML
                                                                         ~
                                                                         t_aBv " HTML.hs:42:20-32] (CNonCanonical)
                        [W] cobox_aCt :: Bool ~ t_aBw [" a type equality Bool
                                                                         ~
                                                                         t_aBw " HTML.hs:42:37-40] (CNonCanonical)
                        [W] cobox_aCu :: Bool ~ t_aBw [" a type equality Bool
                                                                         ~
                                                                         t_aBw " HTML.hs:43:23-27] (CNonCanonical)
                        [W] cobox_aCx :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                            ~
                                                                            t_aBr " HTML.hs:46:20-23] (CNonCanonical)
                        [W] cobox_aCy :: Bool ~ t_aBs [" a type equality Bool
                                                                         ~
                                                                         t_aBs " HTML.hs:46:28-70] (CNonCanonical)
                        [W] cobox_aCz :: t_aBw ~ Bool [" a type equality t_aBw
                                                                         ~
                                                                         Bool " HTML.hs:46:28-46] (CNonCanonical)
                        [W] cobox_aCA :: t_aCw ~ t_aBv [" a type equality t_aCw
                                                                          ~
                                                                          t_aBv " HTML.hs:46:46] (CNonCanonical)
                        [W] cobox_aCB :: t_aBs ~ Bool [" a type equality t_aBs
                                                                         ~
                                                                         Bool " HTML.hs:46:51-70] (CNonCanonical)
                        [W] cobox_aCC :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                            ~
                                                                            t_aBr " HTML.hs:46:69-70] (CNonCanonical)
                        [W] cobox_aCE :: [t_aCD] ~ t_aBr [" a type equality [t_aCD]
                                                                            ~
                                                                            t_aBr " HTML.hs:47:19-20] (CNonCanonical)
                        [W] cobox_aCF :: Bool ~ t_aBs [" a type equality Bool
                                                                         ~
                                                                         t_aBs " HTML.hs:47:24-27] (CNonCanonical)
                        [W] cobox_aCI :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                            ~
                                                                            t_aBf " HTML.hs:63:14-17] (CNonCanonical)
                        [W] cobox_aCJ :: Doc ~ t_aBg [" a type equality Doc
                                                                        ~
                                                                        t_aBg " HTML.hs:63:22-48] (CNonCanonical)
                        [W] cobox_aCK :: t_aBk ~ Doc [" a type equality t_aBk
                                                                        ~
                                                                        Doc " HTML.hs:63:22-29] (CNonCanonical)
                        [W] cobox_aCL :: t_aCH ~ t_aBj [" a type equality t_aCH
                                                                          ~
                                                                          t_aBj " HTML.hs:63:29] (CNonCanonical)
                        [W] cobox_aCM :: t_aBg ~ Doc [" a type equality t_aBg
                                                                        ~
                                                                        Doc " HTML.hs:63:35-48] (CNonCanonical)
                        [W] cobox_aCN :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                            ~
                                                                            t_aBf " HTML.hs:63:47-48] (CNonCanonical)
                        [W] cobox_aCP :: [t_aCO] ~ t_aBf [" a type equality [t_aCO]
                                                                            ~
                                                                            t_aBf " HTML.hs:64:13-14] (CNonCanonical)
                        [W] cobox_aCQ :: Doc ~ t_aBg [" a type equality Doc
                                                                        ~
                                                                        t_aBg " HTML.hs:64:18-25] (CNonCanonical)
                        [W] cobox_aCR :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:64:24-25] (CNonCanonical)
                        [W] cobox_aCT :: HTML ~ t_aBj [" a type equality HTML
                                                                         ~
                                                                         t_aBj " HTML.hs:54:9-31] (CNonCanonical)
                        [W] cobox_aCU :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML.hs:54:36-62] (CNonCanonical)
                        [W] cobox_aCV :: t_aBs ~ Bool [" a type equality t_aBs
                                                                         ~
                                                                         Bool " HTML.hs:54:40-61] (CNonCanonical)
                        [W] cobox_aCW :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                           ~
                                                                           t_aBr " HTML.hs:54:58-61] (CNonCanonical)
                        [W] cobox_aCX :: Doc ~ t_aBk [" a type equality Doc
                                                                        ~
                                                                        t_aBk " HTML.hs:(54,66)-(56,108)] (CNonCanonical)
                        [W] cobox_aCY :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:(54,66)-(55,98)] (CNonCanonical)
                        [W] cobox_aCZ :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:54:66-120] (CNonCanonical)
                        [W] cobox_aD0 :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:54:66-106] (CNonCanonical)
                        [W] cobox_aD1 :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:54:66-89] (CNonCanonical)
                        [W] cobox_aD2 :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:54:66-74] (CNonCanonical)
                        [W] cobox_aD3 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:54:72-74] (CNonCanonical)
                        [W] cobox_aD4 :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:54:80-89] (CNonCanonical)
                        [W] cobox_aD5 :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:54:86-89] (CNonCanonical)
                        [W] cobox_aD6 :: t_aBo ~ Doc [" a type equality t_aBo
                                                                        ~
                                                                        Doc " HTML.hs:54:95-106] (CNonCanonical)
                        [W] cobox_aD7 :: [Attributen]
                                         ~ t_aBn [" a type equality [Attributen]
                                                                    ~
                                                                    t_aBn " HTML.hs:54:104-106] (CNonCanonical)
                        [W] cobox_aD8 :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:54:112-120] (CNonCanonical)
                        [W] cobox_aD9 :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:54:118-120] (CNonCanonical)
                        [W] cobox_aDa :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:55:70-98] (CNonCanonical)
                        [W] cobox_aDb :: t_aBg ~ Doc [" a type equality t_aBg
                                                                        ~
                                                                        Doc " HTML.hs:55:82-97] (CNonCanonical)
                        [W] cobox_aDc :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                           ~
                                                                           t_aBf " HTML.hs:55:94-97] (CNonCanonical)
                        [W] cobox_aDd :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:56:70-108] (CNonCanonical)
                        [W] cobox_aDe :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:56:70-94] (CNonCanonical)
                        [W] cobox_aDf :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:56:70-79] (CNonCanonical)
                        [W] cobox_aDg :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:56:76-79] (CNonCanonical)
                        [W] cobox_aDh :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:56:85-94] (CNonCanonical)
                        [W] cobox_aDi :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:56:91-94] (CNonCanonical)
                        [W] cobox_aDj :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:56:100-108] (CNonCanonical)
                        [W] cobox_aDk :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:56:106-108] (CNonCanonical)
                        [W] cobox_aDl :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML.hs:57:36-44] (CNonCanonical)
                        [W] cobox_aDm :: Doc ~ t_aBk [" a type equality Doc
                                                                        ~
                                                                        t_aBk " HTML.hs:(57,48)-(58,113)] (CNonCanonical)
                        [W] cobox_aDn :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:(57,48)-(58,99)] (CNonCanonical)
                        [W] cobox_aDo :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:(57,48)-(58,84)] (CNonCanonical)
                        [W] cobox_aDp :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:(57,48)-(58,69)] (CNonCanonical)
                        [W] cobox_aDq :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:57:48-102] (CNonCanonical)
                        [W] cobox_aDr :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:57:48-88] (CNonCanonical)
                        [W] cobox_aDs :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:57:48-71] (CNonCanonical)
                        [W] cobox_aDt :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:57:48-56] (CNonCanonical)
                        [W] cobox_aDu :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:57:54-56] (CNonCanonical)
                        [W] cobox_aDv :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:57:62-71] (CNonCanonical)
                        [W] cobox_aDw :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:57:68-71] (CNonCanonical)
                        [W] cobox_aDx :: t_aBo ~ Doc [" a type equality t_aBo
                                                                        ~
                                                                        Doc " HTML.hs:57:77-88] (CNonCanonical)
                        [W] cobox_aDy :: [Attributen]
                                         ~ t_aBn [" a type equality [Attributen]
                                                                    ~
                                                                    t_aBn " HTML.hs:57:86-88] (CNonCanonical)
                        [W] cobox_aDz :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:57:94-102] (CNonCanonical)
                        [W] cobox_aDA :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:57:100-102] (CNonCanonical)
                        [W] cobox_aDB :: t_aBg ~ Doc [" a type equality t_aBg
                                                                        ~
                                                                        Doc " HTML.hs:58:53-68] (CNonCanonical)
                        [W] cobox_aDC :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                           ~
                                                                           t_aBf " HTML.hs:58:65-68] (CNonCanonical)
                        [W] cobox_aDD :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:58:75-84] (CNonCanonical)
                        [W] cobox_aDE :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:58:81-84] (CNonCanonical)
                        [W] cobox_aDF :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:58:90-99] (CNonCanonical)
                        [W] cobox_aDG :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:58:96-99] (CNonCanonical)
                        [W] cobox_aDH :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:58:105-113] (CNonCanonical)
                        [W] cobox_aDI :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:58:111-113] (CNonCanonical)
                        [W] cobox_aDJ :: HTML ~ t_aBj [" a type equality HTML
                                                                         ~
                                                                         t_aBj " HTML.hs:59:9-26] (CNonCanonical)
                        [W] cobox_aDK :: Doc ~ t_aBk [" a type equality Doc
                                                                        ~
                                                                        t_aBk " HTML.hs:59:31-92] (CNonCanonical)
                        [W] cobox_aDL :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:59:31-78] (CNonCanonical)
                        [W] cobox_aDM :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:59:31-54] (CNonCanonical)
                        [W] cobox_aDN :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:59:31-39] (CNonCanonical)
                        [W] cobox_aDO :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:59:37-39] (CNonCanonical)
                        [W] cobox_aDP :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:59:45-54] (CNonCanonical)
                        [W] cobox_aDQ :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:59:51-54] (CNonCanonical)
                        [W] cobox_aDR :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:59:60-78] (CNonCanonical)
                        [W] cobox_aDS :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:59:67-77] (CNonCanonical)
                        [W] cobox_aDT :: [Attributen]
                                         ~ [String] [" a type equality [Attributen]
                                                                       ~
                                                                       [String] " HTML.hs:59:75-77] (CNonCanonical)
                        [W] cobox_aDU :: Doc ~ Doc [" a type equality Doc
                                                                      ~
                                                                      Doc " HTML.hs:59:84-92] (CNonCanonical)
                        [W] cobox_aDV :: [Char] ~ String [" a type equality [Char]
                                                                            ~
                                                                            String " HTML.hs:59:90-92] (CNonCanonical)
                        [W] cobox_aDW :: HTML ~ t_aBj [" a type equality HTML
                                                                         ~
                                                                         t_aBj " HTML.hs:60:9-21] (CNonCanonical)
                        [W] cobox_aDX :: Doc ~ t_aBk [" a type equality Doc
                                                                        ~
                                                                        t_aBk " HTML.hs:60:26-38] (CNonCanonical)
                        [W] cobox_aDY :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:60:32-38] (CNonCanonical)
                        [W] cobox_aE0 :: HTML ~ t_aBz [" a type equality HTML
                                                                         ~
                                                                         t_aBz " HTML.hs:36:9-23] (CNonCanonical)
                        [W] cobox_aE1 :: t_aBs ~ t_aBA [" a type equality t_aBs
                                                                          ~
                                                                          t_aBA " HTML.hs:36:28-46] (CNonCanonical)
                        [W] cobox_aE2 :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                           ~
                                                                           t_aBr " HTML.hs:36:46] (CNonCanonical)
                        [W] cobox_aE3 :: Bool ~ t_aBA [" a type equality Bool
                                                                         ~
                                                                         t_aBA " HTML.hs:37:12-15] (CNonCanonical)
                        [W] cobox_aE5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                         ~
                                                                         t_aC3 " HTML.hs:17:13-30] (CNonCanonical)
                        [W] cobox_aE6 :: String ~ t_aC4 [" a type equality String
                                                                           ~
                                                                           t_aC4 " HTML.hs:17:35-38] (CNonCanonical)
                        [W] cobox_aE7 :: HTML ~ t_aC3 [" a type equality HTML
                                                                         ~
                                                                         t_aC3 " HTML.hs:18:13-28] (CNonCanonical)
                        [W] cobox_aE8 :: String ~ t_aC4 [" a type equality String
                                                                           ~
                                                                           t_aC4 " HTML.hs:18:33-36] (CNonCanonical)
                        [W] cobox_aE9 :: HTML ~ t_aC3 [" a type equality HTML
                                                                         ~
                                                                         t_aC3 " HTML.hs:19:13-19] (CNonCanonical)
                        [W] cobox_aEa :: [Char] ~ t_aC4 [" a type equality [Char]
                                                                           ~
                                                                           t_aC4 " HTML.hs:19:24-25] (CNonCanonical)
                        [W] cobox_aEd :: a_aEc
                                         ~ (t_aC7 -> t_aC8 -> t_aC9) [" a type equality a_aEc
                                                                                        ~
                                                                                        t_aC7
                                                                                        -> t_aC8
                                                                                        -> t_aC9 " HTML.hs:5:12-20] (CNonCanonical)
                        [W] cobox_aEh :: (t_aEf, t_aEg) ~ t_aBX [" a type equality (t_aEf,
                                                                                    t_aEg)
                                                                                   ~
                                                                                   t_aBX " HTML.hs:22:11-15] (CNonCanonical)
                        [W] cobox_aEi :: HTML ~ t_aBY [" a type equality HTML
                                                                         ~
                                                                         t_aBY " HTML.hs:22:18-42] (CNonCanonical)
                        [W] cobox_aEj :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                         ~
                                                                         Bool " HTML.hs:22:47-71] (CNonCanonical)
                        [W] cobox_aEk :: t_aC4 ~ t_aC7 [" a type equality t_aC4
                                                                          ~
                                                                          t_aC7 " HTML.hs:22:57-68] (CNonCanonical)
                        [W] cobox_aEl :: HTML ~ t_aC3 [" a type equality HTML
                                                                         ~
                                                                         t_aC3 " HTML.hs:22:68] (CNonCanonical)
                        [W] cobox_aEm :: t_aEg ~ t_aC8 [" a type equality t_aEg
                                                                          ~
                                                                          t_aC8 " HTML.hs:22:71] (CNonCanonical)
                        [W] cobox_aEn :: Bool ~ t_aBZ [" a type equality Bool
                                                                         ~
                                                                         t_aBZ " HTML.hs:22:76-160] (CNonCanonical)
                        [W] cobox_aEo :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                         ~
                                                                         Bool " HTML.hs:22:77-91] (CNonCanonical)
                        [W] cobox_aEp :: t_aEf ~ t_aC7 [" a type equality t_aEf
                                                                          ~
                                                                          t_aC7 " HTML.hs:22:86] (CNonCanonical)
                        [W] cobox_aEq :: String ~ t_aC8 [" a type equality String
                                                                           ~
                                                                           t_aC8 " HTML.hs:22:88-91] (CNonCanonical)
                        [W] cobox_aEr :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML.hs:22:97-160] (CNonCanonical)
                        [W] cobox_aEs :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                         ~
                                                                         Bool " HTML.hs:22:98-114] (CNonCanonical)
                        [W] cobox_aEv :: (t_aEt, t_aEu) ~ t_aBX [" a type equality (t_aEt,
                                                                                    t_aEu)
                                                                                   ~
                                                                                   t_aBX " HTML.hs:22:108-112] (CNonCanonical)
                        [W] cobox_aEw :: t_aEf ~ t_aEt [" a type equality t_aEf
                                                                          ~
                                                                          t_aEt " HTML.hs:22:109] (CNonCanonical)
                        [W] cobox_aEx :: t_aEg ~ t_aEu [" a type equality t_aEg
                                                                          ~
                                                                          t_aEu " HTML.hs:22:111] (CNonCanonical)
                        [W] cobox_aEy :: HTML ~ t_aBY [" a type equality HTML
                                                                         ~
                                                                         t_aBY " HTML.hs:22:114] (CNonCanonical)
                        [W] cobox_aEz :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                         ~
                                                                         Bool " HTML.hs:22:121-159] (CNonCanonical)
                        [W] cobox_aEC :: (t_aEA, t_aEB) ~ t_aBX [" a type equality (t_aEA,
                                                                                    t_aEB)
                                                                                   ~
                                                                                   t_aBX " HTML.hs:22:131-135] (CNonCanonical)
                        [W] cobox_aED :: t_aEf ~ t_aEA [" a type equality t_aEf
                                                                          ~
                                                                          t_aEA " HTML.hs:22:132] (CNonCanonical)
                        [W] cobox_aEE :: t_aEg ~ t_aEB [" a type equality t_aEg
                                                                          ~
                                                                          t_aEB " HTML.hs:22:134] (CNonCanonical)
                        [W] cobox_aEF :: HTML ~ t_aBY [" a type equality HTML
                                                                         ~
                                                                         t_aBY " HTML.hs:22:138-158] (CNonCanonical)
                        [W] cobox_aEG :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:22:148-151] (CNonCanonical)
                        [W] cobox_aEH :: [Attributen]
                                         ~ [Attributen] [" a type equality [Attributen]
                                                                           ~
                                                                           [Attributen] " HTML.hs:22:153-155] (CNonCanonical)
                        [W] cobox_aEI :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                            ~
                                                                            [HTML] " HTML.hs:22:157-158] (CNonCanonical)
                        [W] cobox_aEJ :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML.hs:23:46-54] (CNonCanonical)
                        [W] cobox_aEK :: Bool ~ t_aBZ [" a type equality Bool
                                                                         ~
                                                                         t_aBZ " HTML.hs:23:58-121] (CNonCanonical)
                        [W] cobox_aEL :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                         ~
                                                                         Bool " HTML.hs:23:59-75] (CNonCanonical)
                        [W] cobox_aEO :: (t_aEM, t_aEN) ~ t_aBX [" a type equality (t_aEM,
                                                                                    t_aEN)
                                                                                   ~
                                                                                   t_aBX " HTML.hs:23:69-73] (CNonCanonical)
                        [W] cobox_aEP :: t_aEf ~ t_aEM [" a type equality t_aEf
                                                                          ~
                                                                          t_aEM " HTML.hs:23:70] (CNonCanonical)
                        [W] cobox_aEQ :: t_aEg ~ t_aEN [" a type equality t_aEg
                                                                          ~
                                                                          t_aEN " HTML.hs:23:72] (CNonCanonical)
                        [W] cobox_aER :: HTML ~ t_aBY [" a type equality HTML
                                                                         ~
                                                                         t_aBY " HTML.hs:23:75] (CNonCanonical)
                        [W] cobox_aES :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                         ~
                                                                         Bool " HTML.hs:23:82-120] (CNonCanonical)
                        [W] cobox_aEV :: (t_aET, t_aEU) ~ t_aBX [" a type equality (t_aET,
                                                                                    t_aEU)
                                                                                   ~
                                                                                   t_aBX " HTML.hs:23:92-96] (CNonCanonical)
                        [W] cobox_aEW :: t_aEf ~ t_aET [" a type equality t_aEf
                                                                          ~
                                                                          t_aET " HTML.hs:23:93] (CNonCanonical)
                        [W] cobox_aEX :: t_aEg ~ t_aEU [" a type equality t_aEg
                                                                          ~
                                                                          t_aEU " HTML.hs:23:95] (CNonCanonical)
                        [W] cobox_aEY :: HTML ~ t_aBY [" a type equality HTML
                                                                         ~
                                                                         t_aBY " HTML.hs:23:99-119] (CNonCanonical)
                        [W] cobox_aEZ :: String ~ String [" a type equality String
                                                                            ~
                                                                            String " HTML.hs:23:109-112] (CNonCanonical)
                        [W] cobox_aF0 :: [Attributen]
                                         ~ [Attributen] [" a type equality [Attributen]
                                                                           ~
                                                                           [Attributen] " HTML.hs:23:114-116] (CNonCanonical)
                        [W] cobox_aF1 :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                            ~
                                                                            [HTML] " HTML.hs:23:118-119] (CNonCanonical)
                        [W] cobox_aF2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                         ~
                                                                         t_aBZ " HTML.hs:24:17-20] (CNonCanonical)
                        [W] cobox_aF5 :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                            ~
                                                                            t_aBR " HTML.hs:27:11-18] (CNonCanonical)
                        [W] cobox_aF6 :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML.hs:27:28-70] (CNonCanonical)
                        [W] cobox_aF7 :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                         ~
                                                                         Bool " HTML.hs:27:32-69] (CNonCanonical)
                        [W] cobox_aFc :: b_aFb ~ t_aC7 [" a type equality b_aFb
                                                                          ~
                                                                          t_aC7 " HTML.hs:27:42-50] (CNonCanonical)
                        [W] cobox_aFd :: t_aF4 ~ (a_aFa, b_aFb) [" a type equality t_aF4
                                                                                   ~
                                                                                   (a_aFa,
                                                                                    b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
                        [W] cobox_aFe :: t_aC4 ~ t_aC8 [" a type equality t_aC4
                                                                          ~
                                                                          t_aC8 " HTML.hs:27:54-68] (CNonCanonical)
                        [W] cobox_aFf :: t_aBS ~ t_aC3 [" a type equality t_aBS
                                                                          ~
                                                                          t_aC3 " HTML.hs:27:65-68] (CNonCanonical)
                        [W] cobox_aFg :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                         ~
                                                                         Bool " HTML.hs:27:78-97] (CNonCanonical)
                        [W] cobox_aFh :: t_aF4 ~ t_aBX [" a type equality t_aF4
                                                                          ~
                                                                          t_aBX " HTML.hs:27:88-92] (CNonCanonical)
                        [W] cobox_aFi :: t_aBS ~ t_aBY [" a type equality t_aBS
                                                                          ~
                                                                          t_aBY " HTML.hs:27:94-97] (CNonCanonical)
                        [W] cobox_aFj :: t_aBT ~ t_aBT [" a type equality t_aBT
                                                                          ~
                                                                          t_aBT " HTML.hs:28:80-95] (CNonCanonical)
                        [W] cobox_aFk :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                            ~
                                                                            t_aBR " HTML.hs:28:89-90] (CNonCanonical)
                        [W] cobox_aFl :: t_aBS ~ t_aBS [" a type equality t_aBS
                                                                          ~
                                                                          t_aBS " HTML.hs:28:92-95] (CNonCanonical)
                        [W] cobox_aFn :: Maybe a_aFm ~ t_aBT [" a type equality Maybe a_aFm
                                                                                ~
                                                                                t_aBT " HTML.hs:30:80-89] (CNonCanonical)
                        [W] cobox_aFo :: t_aF4 ~ a_aFm [" a type equality t_aF4
                                                                          ~
                                                                          a_aFm " HTML.hs:30:85-89] (CNonCanonical)
                        [W] cobox_aFp :: Bool ~ Bool [" a type equality Bool
                                                                        ~
                                                                        Bool " HTML.hs:31:28-36] (CNonCanonical)
                        [W] cobox_aFr :: Maybe a_aFq ~ t_aBT [" a type equality Maybe a_aFq
                                                                                ~
                                                                                t_aBT " HTML.hs:31:40-49] (CNonCanonical)
                        [W] cobox_aFs :: t_aF4 ~ a_aFq [" a type equality t_aF4
                                                                          ~
                                                                          a_aFq " HTML.hs:31:45-49] (CNonCanonical)
                        [W] cobox_aFu :: [t_aFt] ~ t_aBR [" a type equality [t_aFt]
                                                                            ~
                                                                            t_aBR " HTML.hs:32:10-11] (CNonCanonical)
                        [W] cobox_aFw :: Maybe a_aFv ~ t_aBT [" a type equality Maybe a_aFv
                                                                                ~
                                                                                t_aBT " HTML.hs:32:17-23] (CNonCanonical)}
solveWanteds {
  WC {wc_flat = [W] cobox_aBh :: [HTML]
                                 ~ t_aBf [" a type equality [HTML]
                                                            ~
                                                            t_aBf " HTML.hs:62:16-28] (CNonCanonical)
                [W] cobox_aBi :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:62:16-28] (CNonCanonical)
                [W] cobox_aBl :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:53:11-21] (CNonCanonical)
                [W] cobox_aBm :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:53:11-21] (CNonCanonical)
                [W] cobox_aBp :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:49:13-31] (CNonCanonical)
                [W] cobox_aBq :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:49:13-31] (CNonCanonical)
                [W] cobox_aBt :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                   ~
                                                                   t_aBr " HTML.hs:45:22-35] (CNonCanonical)
                [W] cobox_aBu :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:45:22-35] (CNonCanonical)
                [W] cobox_aBx :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:39:22-33] (CNonCanonical)
                [W] cobox_aBy :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:39:22-33] (CNonCanonical)
                [W] cobox_aBB :: HTML ~ t_aBz [" a type equality HTML
                                                                 ~
                                                                 t_aBz " HTML.hs:35:11-22] (CNonCanonical)
                [W] cobox_aBC :: Bool ~ t_aBA [" a type equality Bool
                                                                 ~
                                                                 t_aBA " HTML.hs:35:11-22] (CNonCanonical)
                [W] cobox_aBU :: [Requirement]
                                 ~ t_aBR [" a type equality [Requirement]
                                                            ~
                                                            t_aBR " HTML.hs:26:13-54] (CNonCanonical)
                [W] cobox_aBV :: HTML ~ t_aBS [" a type equality HTML
                                                                 ~
                                                                 t_aBS " HTML.hs:26:13-54] (CNonCanonical)
                [W] cobox_aBW :: Maybe Requirement ~ t_aBT [" a type equality Maybe
                                                                                Requirement
                                                                              ~
                                                                              t_aBT " HTML.hs:26:13-54] (CNonCanonical)
                [W] cobox_aC0 :: Requirement ~ t_aBX [" a type equality Requirement
                                                                        ~
                                                                        t_aBX " HTML.hs:21:14-40] (CNonCanonical)
                [W] cobox_aC1 :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:21:14-40] (CNonCanonical)
                [W] cobox_aC2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:21:14-40] (CNonCanonical)
                [W] cobox_aC5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:16:15-28] (CNonCanonical)
                [W] cobox_aC6 :: String ~ t_aC4 [" a type equality String
                                                                   ~
                                                                   t_aC4 " HTML.hs:16:15-28] (CNonCanonical)
                [W] cobox_aCa :: String ~ t_aC7 [" a type equality String
                                                                   ~
                                                                   t_aC7 " HTML.hs:4:18-41] (CNonCanonical)
                [W] cobox_aCb :: String ~ t_aC8 [" a type equality String
                                                                   ~
                                                                   t_aC8 " HTML.hs:4:18-41] (CNonCanonical)
                [W] cobox_aCc :: Bool ~ t_aC9 [" a type equality Bool
                                                                 ~
                                                                 t_aC9 " HTML.hs:4:18-41] (CNonCanonical)
                [W] cobox_aCf :: [t_aCe] ~ t_aBn [" a type equality [t_aCe]
                                                                    ~
                                                                    t_aBn " HTML.hs:50:10-11] (CNonCanonical)
                [W] cobox_aCg :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:50:15-22] (CNonCanonical)
                [W] cobox_aCh :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:50:21-22] (CNonCanonical)
                [W] cobox_aCi :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:51:23-54] (CNonCanonical)
                [W] cobox_aCj :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:51:23-31] (CNonCanonical)
                [W] cobox_aCk :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:51:29-31] (CNonCanonical)
                [W] cobox_aCl :: String ~ Doc [" a type equality String
                                                                 ~
                                                                 Doc " HTML.hs:51:37-54] (CNonCanonical)
                [W] cobox_aCm :: t_aBn ~ [String] [" a type equality t_aBn
                                                                     ~
                                                                     [String] " HTML.hs:51:45-54] (CNonCanonical)
                [W] cobox_aCo :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:40:20-26] (CNonCanonical)
                [W] cobox_aCp :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:40:31-34] (CNonCanonical)
                [W] cobox_aCq :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:41:20-36] (CNonCanonical)
                [W] cobox_aCr :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:41:41-44] (CNonCanonical)
                [W] cobox_aCs :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:42:20-32] (CNonCanonical)
                [W] cobox_aCt :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:42:37-40] (CNonCanonical)
                [W] cobox_aCu :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:43:23-27] (CNonCanonical)
                [W] cobox_aCx :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                    ~
                                                                    t_aBr " HTML.hs:46:20-23] (CNonCanonical)
                [W] cobox_aCy :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:46:28-70] (CNonCanonical)
                [W] cobox_aCz :: t_aBw ~ Bool [" a type equality t_aBw
                                                                 ~
                                                                 Bool " HTML.hs:46:28-46] (CNonCanonical)
                [W] cobox_aCA :: t_aCw ~ t_aBv [" a type equality t_aCw
                                                                  ~
                                                                  t_aBv " HTML.hs:46:46] (CNonCanonical)
                [W] cobox_aCB :: t_aBs ~ Bool [" a type equality t_aBs
                                                                 ~
                                                                 Bool " HTML.hs:46:51-70] (CNonCanonical)
                [W] cobox_aCC :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                    ~
                                                                    t_aBr " HTML.hs:46:69-70] (CNonCanonical)
                [W] cobox_aCE :: [t_aCD] ~ t_aBr [" a type equality [t_aCD]
                                                                    ~
                                                                    t_aBr " HTML.hs:47:19-20] (CNonCanonical)
                [W] cobox_aCF :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:47:24-27] (CNonCanonical)
                [W] cobox_aCI :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                    ~
                                                                    t_aBf " HTML.hs:63:14-17] (CNonCanonical)
                [W] cobox_aCJ :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:63:22-48] (CNonCanonical)
                [W] cobox_aCK :: t_aBk ~ Doc [" a type equality t_aBk
                                                                ~
                                                                Doc " HTML.hs:63:22-29] (CNonCanonical)
                [W] cobox_aCL :: t_aCH ~ t_aBj [" a type equality t_aCH
                                                                  ~
                                                                  t_aBj " HTML.hs:63:29] (CNonCanonical)
                [W] cobox_aCM :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:63:35-48] (CNonCanonical)
                [W] cobox_aCN :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                    ~
                                                                    t_aBf " HTML.hs:63:47-48] (CNonCanonical)
                [W] cobox_aCP :: [t_aCO] ~ t_aBf [" a type equality [t_aCO]
                                                                    ~
                                                                    t_aBf " HTML.hs:64:13-14] (CNonCanonical)
                [W] cobox_aCQ :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:64:18-25] (CNonCanonical)
                [W] cobox_aCR :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:64:24-25] (CNonCanonical)
                [W] cobox_aCT :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:54:9-31] (CNonCanonical)
                [W] cobox_aCU :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:54:36-62] (CNonCanonical)
                [W] cobox_aCV :: t_aBs ~ Bool [" a type equality t_aBs
                                                                 ~
                                                                 Bool " HTML.hs:54:40-61] (CNonCanonical)
                [W] cobox_aCW :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                   ~
                                                                   t_aBr " HTML.hs:54:58-61] (CNonCanonical)
                [W] cobox_aCX :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:(54,66)-(56,108)] (CNonCanonical)
                [W] cobox_aCY :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(54,66)-(55,98)] (CNonCanonical)
                [W] cobox_aCZ :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-120] (CNonCanonical)
                [W] cobox_aD0 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-106] (CNonCanonical)
                [W] cobox_aD1 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-89] (CNonCanonical)
                [W] cobox_aD2 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-74] (CNonCanonical)
                [W] cobox_aD3 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:54:72-74] (CNonCanonical)
                [W] cobox_aD4 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:80-89] (CNonCanonical)
                [W] cobox_aD5 :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:54:86-89] (CNonCanonical)
                [W] cobox_aD6 :: t_aBo ~ Doc [" a type equality t_aBo
                                                                ~
                                                                Doc " HTML.hs:54:95-106] (CNonCanonical)
                [W] cobox_aD7 :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:54:104-106] (CNonCanonical)
                [W] cobox_aD8 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:112-120] (CNonCanonical)
                [W] cobox_aD9 :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:54:118-120] (CNonCanonical)
                [W] cobox_aDa :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:55:70-98] (CNonCanonical)
                [W] cobox_aDb :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:55:82-97] (CNonCanonical)
                [W] cobox_aDc :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                   ~
                                                                   t_aBf " HTML.hs:55:94-97] (CNonCanonical)
                [W] cobox_aDd :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-108] (CNonCanonical)
                [W] cobox_aDe :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-94] (CNonCanonical)
                [W] cobox_aDf :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-79] (CNonCanonical)
                [W] cobox_aDg :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:56:76-79] (CNonCanonical)
                [W] cobox_aDh :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:85-94] (CNonCanonical)
                [W] cobox_aDi :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:56:91-94] (CNonCanonical)
                [W] cobox_aDj :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:100-108] (CNonCanonical)
                [W] cobox_aDk :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:56:106-108] (CNonCanonical)
                [W] cobox_aDl :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:57:36-44] (CNonCanonical)
                [W] cobox_aDm :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:(57,48)-(58,113)] (CNonCanonical)
                [W] cobox_aDn :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,99)] (CNonCanonical)
                [W] cobox_aDo :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,84)] (CNonCanonical)
                [W] cobox_aDp :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,69)] (CNonCanonical)
                [W] cobox_aDq :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-102] (CNonCanonical)
                [W] cobox_aDr :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-88] (CNonCanonical)
                [W] cobox_aDs :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-71] (CNonCanonical)
                [W] cobox_aDt :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-56] (CNonCanonical)
                [W] cobox_aDu :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:57:54-56] (CNonCanonical)
                [W] cobox_aDv :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:62-71] (CNonCanonical)
                [W] cobox_aDw :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:57:68-71] (CNonCanonical)
                [W] cobox_aDx :: t_aBo ~ Doc [" a type equality t_aBo
                                                                ~
                                                                Doc " HTML.hs:57:77-88] (CNonCanonical)
                [W] cobox_aDy :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:57:86-88] (CNonCanonical)
                [W] cobox_aDz :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:94-102] (CNonCanonical)
                [W] cobox_aDA :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:57:100-102] (CNonCanonical)
                [W] cobox_aDB :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:58:53-68] (CNonCanonical)
                [W] cobox_aDC :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                   ~
                                                                   t_aBf " HTML.hs:58:65-68] (CNonCanonical)
                [W] cobox_aDD :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:75-84] (CNonCanonical)
                [W] cobox_aDE :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:58:81-84] (CNonCanonical)
                [W] cobox_aDF :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:90-99] (CNonCanonical)
                [W] cobox_aDG :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:58:96-99] (CNonCanonical)
                [W] cobox_aDH :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:105-113] (CNonCanonical)
                [W] cobox_aDI :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:58:111-113] (CNonCanonical)
                [W] cobox_aDJ :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:59:9-26] (CNonCanonical)
                [W] cobox_aDK :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:59:31-92] (CNonCanonical)
                [W] cobox_aDL :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-78] (CNonCanonical)
                [W] cobox_aDM :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-54] (CNonCanonical)
                [W] cobox_aDN :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-39] (CNonCanonical)
                [W] cobox_aDO :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:59:37-39] (CNonCanonical)
                [W] cobox_aDP :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:45-54] (CNonCanonical)
                [W] cobox_aDQ :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:59:51-54] (CNonCanonical)
                [W] cobox_aDR :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:60-78] (CNonCanonical)
                [W] cobox_aDS :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:59:67-77] (CNonCanonical)
                [W] cobox_aDT :: [Attributen]
                                 ~ [String] [" a type equality [Attributen]
                                                               ~
                                                               [String] " HTML.hs:59:75-77] (CNonCanonical)
                [W] cobox_aDU :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:84-92] (CNonCanonical)
                [W] cobox_aDV :: [Char] ~ String [" a type equality [Char]
                                                                    ~
                                                                    String " HTML.hs:59:90-92] (CNonCanonical)
                [W] cobox_aDW :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:60:9-21] (CNonCanonical)
                [W] cobox_aDX :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:60:26-38] (CNonCanonical)
                [W] cobox_aDY :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:60:32-38] (CNonCanonical)
                [W] cobox_aE0 :: HTML ~ t_aBz [" a type equality HTML
                                                                 ~
                                                                 t_aBz " HTML.hs:36:9-23] (CNonCanonical)
                [W] cobox_aE1 :: t_aBs ~ t_aBA [" a type equality t_aBs
                                                                  ~
                                                                  t_aBA " HTML.hs:36:28-46] (CNonCanonical)
                [W] cobox_aE2 :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                   ~
                                                                   t_aBr " HTML.hs:36:46] (CNonCanonical)
                [W] cobox_aE3 :: Bool ~ t_aBA [" a type equality Bool
                                                                 ~
                                                                 t_aBA " HTML.hs:37:12-15] (CNonCanonical)
                [W] cobox_aE5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:17:13-30] (CNonCanonical)
                [W] cobox_aE6 :: String ~ t_aC4 [" a type equality String
                                                                   ~
                                                                   t_aC4 " HTML.hs:17:35-38] (CNonCanonical)
                [W] cobox_aE7 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:18:13-28] (CNonCanonical)
                [W] cobox_aE8 :: String ~ t_aC4 [" a type equality String
                                                                   ~
                                                                   t_aC4 " HTML.hs:18:33-36] (CNonCanonical)
                [W] cobox_aE9 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:19:13-19] (CNonCanonical)
                [W] cobox_aEa :: [Char] ~ t_aC4 [" a type equality [Char]
                                                                   ~
                                                                   t_aC4 " HTML.hs:19:24-25] (CNonCanonical)
                [W] cobox_aEd :: a_aEc
                                 ~ (t_aC7 -> t_aC8 -> t_aC9) [" a type equality a_aEc
                                                                                ~
                                                                                t_aC7
                                                                                -> t_aC8
                                                                                -> t_aC9 " HTML.hs:5:12-20] (CNonCanonical)
                [W] cobox_aEh :: (t_aEf, t_aEg) ~ t_aBX [" a type equality (t_aEf,
                                                                            t_aEg)
                                                                           ~
                                                                           t_aBX " HTML.hs:22:11-15] (CNonCanonical)
                [W] cobox_aEi :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:18-42] (CNonCanonical)
                [W] cobox_aEj :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                 ~
                                                                 Bool " HTML.hs:22:47-71] (CNonCanonical)
                [W] cobox_aEk :: t_aC4 ~ t_aC7 [" a type equality t_aC4
                                                                  ~
                                                                  t_aC7 " HTML.hs:22:57-68] (CNonCanonical)
                [W] cobox_aEl :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:22:68] (CNonCanonical)
                [W] cobox_aEm :: t_aEg ~ t_aC8 [" a type equality t_aEg
                                                                  ~
                                                                  t_aC8 " HTML.hs:22:71] (CNonCanonical)
                [W] cobox_aEn :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:22:76-160] (CNonCanonical)
                [W] cobox_aEo :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                 ~
                                                                 Bool " HTML.hs:22:77-91] (CNonCanonical)
                [W] cobox_aEp :: t_aEf ~ t_aC7 [" a type equality t_aEf
                                                                  ~
                                                                  t_aC7 " HTML.hs:22:86] (CNonCanonical)
                [W] cobox_aEq :: String ~ t_aC8 [" a type equality String
                                                                   ~
                                                                   t_aC8 " HTML.hs:22:88-91] (CNonCanonical)
                [W] cobox_aEr :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:22:97-160] (CNonCanonical)
                [W] cobox_aEs :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:22:98-114] (CNonCanonical)
                [W] cobox_aEv :: (t_aEt, t_aEu) ~ t_aBX [" a type equality (t_aEt,
                                                                            t_aEu)
                                                                           ~
                                                                           t_aBX " HTML.hs:22:108-112] (CNonCanonical)
                [W] cobox_aEw :: t_aEf ~ t_aEt [" a type equality t_aEf
                                                                  ~
                                                                  t_aEt " HTML.hs:22:109] (CNonCanonical)
                [W] cobox_aEx :: t_aEg ~ t_aEu [" a type equality t_aEg
                                                                  ~
                                                                  t_aEu " HTML.hs:22:111] (CNonCanonical)
                [W] cobox_aEy :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:114] (CNonCanonical)
                [W] cobox_aEz :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:22:121-159] (CNonCanonical)
                [W] cobox_aEC :: (t_aEA, t_aEB) ~ t_aBX [" a type equality (t_aEA,
                                                                            t_aEB)
                                                                           ~
                                                                           t_aBX " HTML.hs:22:131-135] (CNonCanonical)
                [W] cobox_aED :: t_aEf ~ t_aEA [" a type equality t_aEf
                                                                  ~
                                                                  t_aEA " HTML.hs:22:132] (CNonCanonical)
                [W] cobox_aEE :: t_aEg ~ t_aEB [" a type equality t_aEg
                                                                  ~
                                                                  t_aEB " HTML.hs:22:134] (CNonCanonical)
                [W] cobox_aEF :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:138-158] (CNonCanonical)
                [W] cobox_aEG :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:22:148-151] (CNonCanonical)
                [W] cobox_aEH :: [Attributen]
                                 ~ [Attributen] [" a type equality [Attributen]
                                                                   ~
                                                                   [Attributen] " HTML.hs:22:153-155] (CNonCanonical)
                [W] cobox_aEI :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                    ~
                                                                    [HTML] " HTML.hs:22:157-158] (CNonCanonical)
                [W] cobox_aEJ :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:23:46-54] (CNonCanonical)
                [W] cobox_aEK :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:23:58-121] (CNonCanonical)
                [W] cobox_aEL :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:23:59-75] (CNonCanonical)
                [W] cobox_aEO :: (t_aEM, t_aEN) ~ t_aBX [" a type equality (t_aEM,
                                                                            t_aEN)
                                                                           ~
                                                                           t_aBX " HTML.hs:23:69-73] (CNonCanonical)
                [W] cobox_aEP :: t_aEf ~ t_aEM [" a type equality t_aEf
                                                                  ~
                                                                  t_aEM " HTML.hs:23:70] (CNonCanonical)
                [W] cobox_aEQ :: t_aEg ~ t_aEN [" a type equality t_aEg
                                                                  ~
                                                                  t_aEN " HTML.hs:23:72] (CNonCanonical)
                [W] cobox_aER :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:23:75] (CNonCanonical)
                [W] cobox_aES :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:23:82-120] (CNonCanonical)
                [W] cobox_aEV :: (t_aET, t_aEU) ~ t_aBX [" a type equality (t_aET,
                                                                            t_aEU)
                                                                           ~
                                                                           t_aBX " HTML.hs:23:92-96] (CNonCanonical)
                [W] cobox_aEW :: t_aEf ~ t_aET [" a type equality t_aEf
                                                                  ~
                                                                  t_aET " HTML.hs:23:93] (CNonCanonical)
                [W] cobox_aEX :: t_aEg ~ t_aEU [" a type equality t_aEg
                                                                  ~
                                                                  t_aEU " HTML.hs:23:95] (CNonCanonical)
                [W] cobox_aEY :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:23:99-119] (CNonCanonical)
                [W] cobox_aEZ :: String ~ String [" a type equality String
                                                                    ~
                                                                    String " HTML.hs:23:109-112] (CNonCanonical)
                [W] cobox_aF0 :: [Attributen]
                                 ~ [Attributen] [" a type equality [Attributen]
                                                                   ~
                                                                   [Attributen] " HTML.hs:23:114-116] (CNonCanonical)
                [W] cobox_aF1 :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                    ~
                                                                    [HTML] " HTML.hs:23:118-119] (CNonCanonical)
                [W] cobox_aF2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:24:17-20] (CNonCanonical)
                [W] cobox_aF5 :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                    ~
                                                                    t_aBR " HTML.hs:27:11-18] (CNonCanonical)
                [W] cobox_aF6 :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:27:28-70] (CNonCanonical)
                [W] cobox_aF7 :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                 ~
                                                                 Bool " HTML.hs:27:32-69] (CNonCanonical)
                [W] cobox_aFc :: b_aFb ~ t_aC7 [" a type equality b_aFb
                                                                  ~
                                                                  t_aC7 " HTML.hs:27:42-50] (CNonCanonical)
                [W] cobox_aFd :: t_aF4 ~ (a_aFa, b_aFb) [" a type equality t_aF4
                                                                           ~
                                                                           (a_aFa,
                                                                            b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
                [W] cobox_aFe :: t_aC4 ~ t_aC8 [" a type equality t_aC4
                                                                  ~
                                                                  t_aC8 " HTML.hs:27:54-68] (CNonCanonical)
                [W] cobox_aFf :: t_aBS ~ t_aC3 [" a type equality t_aBS
                                                                  ~
                                                                  t_aC3 " HTML.hs:27:65-68] (CNonCanonical)
                [W] cobox_aFg :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                 ~
                                                                 Bool " HTML.hs:27:78-97] (CNonCanonical)
                [W] cobox_aFh :: t_aF4 ~ t_aBX [" a type equality t_aF4
                                                                  ~
                                                                  t_aBX " HTML.hs:27:88-92] (CNonCanonical)
                [W] cobox_aFi :: t_aBS ~ t_aBY [" a type equality t_aBS
                                                                  ~
                                                                  t_aBY " HTML.hs:27:94-97] (CNonCanonical)
                [W] cobox_aFj :: t_aBT ~ t_aBT [" a type equality t_aBT
                                                                  ~
                                                                  t_aBT " HTML.hs:28:80-95] (CNonCanonical)
                [W] cobox_aFk :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                    ~
                                                                    t_aBR " HTML.hs:28:89-90] (CNonCanonical)
                [W] cobox_aFl :: t_aBS ~ t_aBS [" a type equality t_aBS
                                                                  ~
                                                                  t_aBS " HTML.hs:28:92-95] (CNonCanonical)
                [W] cobox_aFn :: Maybe a_aFm ~ t_aBT [" a type equality Maybe a_aFm
                                                                        ~
                                                                        t_aBT " HTML.hs:30:80-89] (CNonCanonical)
                [W] cobox_aFo :: t_aF4 ~ a_aFm [" a type equality t_aF4
                                                                  ~
                                                                  a_aFm " HTML.hs:30:85-89] (CNonCanonical)
                [W] cobox_aFp :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:31:28-36] (CNonCanonical)
                [W] cobox_aFr :: Maybe a_aFq ~ t_aBT [" a type equality Maybe a_aFq
                                                                        ~
                                                                        t_aBT " HTML.hs:31:40-49] (CNonCanonical)
                [W] cobox_aFs :: t_aF4 ~ a_aFq [" a type equality t_aF4
                                                                  ~
                                                                  a_aFq " HTML.hs:31:45-49] (CNonCanonical)
                [W] cobox_aFu :: [t_aFt] ~ t_aBR [" a type equality [t_aFt]
                                                                    ~
                                                                    t_aBR " HTML.hs:32:10-11] (CNonCanonical)
                [W] cobox_aFw :: Maybe a_aFv ~ t_aBT [" a type equality Maybe a_aFv
                                                                        ~
                                                                        t_aBT " HTML.hs:32:17-23] (CNonCanonical)}
solveFlats {
Start solver pipeline {
  work item =  [W] cobox_aBh :: [HTML]
                                ~ t_aBf [" a type equality [HTML]
                                                           ~
                                                           t_aBf " HTML.hs:62:16-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBh :: [HTML]
                                 ~ t_aBf [" a type equality [HTML]
                                                            ~
                                                            t_aBf " HTML.hs:62:16-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBh :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                     ~
                                                     t_aBf " HTML.hs:62:16-28] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aBf
can_eq_nc
  [W] cobox_aBh :: [HTML] ~ t_aBf
  [HTML]
  [HTML]
  t_aBf
  t_aBf
canEqTyVar
  t_aBf
  [HTML]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFy :: t_aBf ~ [HTML]
setEvBind
  ev = cobox_aBh
  tm  = CO Sym cobox_aFy
rewriteEqEvidence
  [W] cobox_aBh :: [HTML] ~ t_aBf
  t_aBf
  [HTML]
  Sym cobox_aFy
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFy :: t_aBf
                                 ~ [HTML] [" a type equality [HTML]
                                                             ~
                                                             t_aBf " HTML.hs:62:16-28] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBf := [HTML]
  Coercion: t_aBf ~ [HTML]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBf := [HTML]
setEvBind
  ev = cobox_aFy
  tm  = CO <[HTML]>_N
kickOutRewritable
  tv =  t_aBf
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
1[<C:0,F:0>] [W] cobox_aFy :: t_aBf ~ [HTML]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBi :: Doc ~ t_aBg [" a type equality Doc
                                                               ~
                                                               t_aBg " HTML.hs:62:16-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBi :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:62:16-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBi :: Doc ~ t_aBg [" a type equality Doc
                                                  ~
                                                  t_aBg " HTML.hs:62:16-28] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBg
can_eq_nc
  [W] cobox_aBi :: Doc ~ t_aBg
  Doc
  Doc
  t_aBg
  t_aBg
can_eq_nc
  [W] cobox_aBi :: Doc ~ t_aBg
  [String]
  Doc
  t_aBg
  t_aBg
canEqTyVar
  t_aBg
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFz :: t_aBg ~ Doc
setEvBind
  ev = cobox_aBi
  tm  = CO Sym cobox_aFz
rewriteEqEvidence
  [W] cobox_aBi :: Doc ~ t_aBg
  t_aBg
  Doc
  Sym cobox_aFz
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFz :: t_aBg ~ Doc [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:62:16-28] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBg := Doc
  Coercion: t_aBg ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBg := Doc
setEvBind
  ev = cobox_aFz
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_aBg
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
2[<C:0,F:0>] [W] cobox_aFz :: t_aBg ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBl :: HTML ~ t_aBj [" a type equality HTML
                                                                ~
                                                                t_aBj " HTML.hs:53:11-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBl :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:53:11-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBl :: HTML ~ t_aBj [" a type equality HTML
                                                   ~
                                                   t_aBj " HTML.hs:53:11-21] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBj
can_eq_nc
  [W] cobox_aBl :: HTML ~ t_aBj
  HTML
  HTML
  t_aBj
  t_aBj
canEqTyVar
  t_aBj
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFA :: t_aBj ~ HTML
setEvBind
  ev = cobox_aBl
  tm  = CO Sym cobox_aFA
rewriteEqEvidence
  [W] cobox_aBl :: HTML ~ t_aBj
  t_aBj
  HTML
  Sym cobox_aFA
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFA :: t_aBj ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:53:11-21] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBj := HTML
  Coercion: t_aBj ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBj := HTML
setEvBind
  ev = cobox_aFA
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aBj
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
3[<C:0,F:0>] [W] cobox_aFA :: t_aBj ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBm :: Doc ~ t_aBk [" a type equality Doc
                                                               ~
                                                               t_aBk " HTML.hs:53:11-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBm :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:53:11-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBm :: Doc ~ t_aBk [" a type equality Doc
                                                  ~
                                                  t_aBk " HTML.hs:53:11-21] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBk
can_eq_nc
  [W] cobox_aBm :: Doc ~ t_aBk
  Doc
  Doc
  t_aBk
  t_aBk
can_eq_nc
  [W] cobox_aBm :: Doc ~ t_aBk
  [String]
  Doc
  t_aBk
  t_aBk
canEqTyVar
  t_aBk
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFB :: t_aBk ~ Doc
setEvBind
  ev = cobox_aBm
  tm  = CO Sym cobox_aFB
rewriteEqEvidence
  [W] cobox_aBm :: Doc ~ t_aBk
  t_aBk
  Doc
  Sym cobox_aFB
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFB :: t_aBk ~ Doc [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:53:11-21] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBk := Doc
  Coercion: t_aBk ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBk := Doc
setEvBind
  ev = cobox_aFB
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_aBk
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
4[<C:0,F:0>] [W] cobox_aFB :: t_aBk ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBp :: [Attributen]
                                ~ t_aBn [" a type equality [Attributen]
                                                           ~
                                                           t_aBn " HTML.hs:49:13-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBp :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:49:13-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBp :: [Attributen]
                   ~ t_aBn [" a type equality [Attributen]
                                              ~
                                              t_aBn " HTML.hs:49:13-31] (CNonCanonical)
canEvNC:eq
  [Attributen]
  t_aBn
can_eq_nc
  [W] cobox_aBp :: [Attributen] ~ t_aBn
  [Attributen]
  [Attributen]
  t_aBn
  t_aBn
canEqTyVar
  t_aBn
  [Attributen]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFC :: t_aBn ~ [Attributen]
setEvBind
  ev = cobox_aBp
  tm  = CO Sym cobox_aFC
rewriteEqEvidence
  [W] cobox_aBp :: [Attributen] ~ t_aBn
  t_aBn
  [Attributen]
  Sym cobox_aFC
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFC :: t_aBn
                                 ~ [Attributen] [" a type equality [Attributen]
                                                                   ~
                                                                   t_aBn " HTML.hs:49:13-31] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBn := [Attributen]
  Coercion: t_aBn ~ [Attributen]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBn := [Attributen]
setEvBind
  ev = cobox_aFC
  tm  = CO <[Attributen]>_N
kickOutRewritable
  tv =  t_aBn
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
5[<C:0,F:0>] [W] cobox_aFC :: t_aBn
                              ~ [Attributen]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBq :: Doc ~ t_aBo [" a type equality Doc
                                                               ~
                                                               t_aBo " HTML.hs:49:13-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBq :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:49:13-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBq :: Doc ~ t_aBo [" a type equality Doc
                                                  ~
                                                  t_aBo " HTML.hs:49:13-31] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBo
can_eq_nc
  [W] cobox_aBq :: Doc ~ t_aBo
  Doc
  Doc
  t_aBo
  t_aBo
can_eq_nc
  [W] cobox_aBq :: Doc ~ t_aBo
  [String]
  Doc
  t_aBo
  t_aBo
canEqTyVar
  t_aBo
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFD :: t_aBo ~ Doc
setEvBind
  ev = cobox_aBq
  tm  = CO Sym cobox_aFD
rewriteEqEvidence
  [W] cobox_aBq :: Doc ~ t_aBo
  t_aBo
  Doc
  Sym cobox_aFD
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFD :: t_aBo ~ Doc [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:49:13-31] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBo := Doc
  Coercion: t_aBo ~ Doc
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBo := Doc
setEvBind
  ev = cobox_aFD
  tm  = CO <Doc>_N
kickOutRewritable
  tv =  t_aBo
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
6[<C:0,F:0>] [W] cobox_aFD :: t_aBo ~ Doc: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBt :: [HTML]
                                ~ t_aBr [" a type equality [HTML]
                                                           ~
                                                           t_aBr " HTML.hs:45:22-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBt :: [HTML]
                                 ~ t_aBr [" a type equality [HTML]
                                                            ~
                                                            t_aBr " HTML.hs:45:22-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBt :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                     ~
                                                     t_aBr " HTML.hs:45:22-35] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aBr
can_eq_nc
  [W] cobox_aBt :: [HTML] ~ t_aBr
  [HTML]
  [HTML]
  t_aBr
  t_aBr
canEqTyVar
  t_aBr
  [HTML]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFE :: t_aBr ~ [HTML]
setEvBind
  ev = cobox_aBt
  tm  = CO Sym cobox_aFE
rewriteEqEvidence
  [W] cobox_aBt :: [HTML] ~ t_aBr
  t_aBr
  [HTML]
  Sym cobox_aFE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFE :: t_aBr
                                 ~ [HTML] [" a type equality [HTML]
                                                             ~
                                                             t_aBr " HTML.hs:45:22-35] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBr := [HTML]
  Coercion: t_aBr ~ [HTML]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBr := [HTML]
setEvBind
  ev = cobox_aFE
  tm  = CO <[HTML]>_N
kickOutRewritable
  tv =  t_aBr
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
7[<C:0,F:0>] [W] cobox_aFE :: t_aBr ~ [HTML]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBu :: Bool ~ t_aBs [" a type equality Bool
                                                                ~
                                                                t_aBs " HTML.hs:45:22-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBu :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:45:22-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBu :: Bool ~ t_aBs [" a type equality Bool
                                                   ~
                                                   t_aBs " HTML.hs:45:22-35] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBs
can_eq_nc
  [W] cobox_aBu :: Bool ~ t_aBs
  Bool
  Bool
  t_aBs
  t_aBs
canEqTyVar
  t_aBs
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFF :: t_aBs ~ Bool
setEvBind
  ev = cobox_aBu
  tm  = CO Sym cobox_aFF
rewriteEqEvidence
  [W] cobox_aBu :: Bool ~ t_aBs
  t_aBs
  Bool
  Sym cobox_aFF
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFF :: t_aBs ~ Bool [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:45:22-35] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBs := Bool
  Coercion: t_aBs ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBs := Bool
setEvBind
  ev = cobox_aFF
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_aBs
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
8[<C:0,F:0>] [W] cobox_aFF :: t_aBs ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBx :: HTML ~ t_aBv [" a type equality HTML
                                                                ~
                                                                t_aBv " HTML.hs:39:22-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBx :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:39:22-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBx :: HTML ~ t_aBv [" a type equality HTML
                                                   ~
                                                   t_aBv " HTML.hs:39:22-33] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBv
can_eq_nc
  [W] cobox_aBx :: HTML ~ t_aBv
  HTML
  HTML
  t_aBv
  t_aBv
canEqTyVar
  t_aBv
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFG :: t_aBv ~ HTML
setEvBind
  ev = cobox_aBx
  tm  = CO Sym cobox_aFG
rewriteEqEvidence
  [W] cobox_aBx :: HTML ~ t_aBv
  t_aBv
  HTML
  Sym cobox_aFG
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFG :: t_aBv ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:39:22-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBv := HTML
  Coercion: t_aBv ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBv := HTML
setEvBind
  ev = cobox_aFG
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aBv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
9[<C:0,F:0>] [W] cobox_aFG :: t_aBv ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBy :: Bool ~ t_aBw [" a type equality Bool
                                                                ~
                                                                t_aBw " HTML.hs:39:22-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBy :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:39:22-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBy :: Bool ~ t_aBw [" a type equality Bool
                                                   ~
                                                   t_aBw " HTML.hs:39:22-33] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBw
can_eq_nc
  [W] cobox_aBy :: Bool ~ t_aBw
  Bool
  Bool
  t_aBw
  t_aBw
canEqTyVar
  t_aBw
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFH :: t_aBw ~ Bool
setEvBind
  ev = cobox_aBy
  tm  = CO Sym cobox_aFH
rewriteEqEvidence
  [W] cobox_aBy :: Bool ~ t_aBw
  t_aBw
  Bool
  Sym cobox_aFH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFH :: t_aBw ~ Bool [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:39:22-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBw := Bool
  Coercion: t_aBw ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBw := Bool
setEvBind
  ev = cobox_aFH
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_aBw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
10[<C:0,F:0>] [W] cobox_aFH :: t_aBw ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBB :: HTML ~ t_aBz [" a type equality HTML
                                                                ~
                                                                t_aBz " HTML.hs:35:11-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBB :: HTML ~ t_aBz [" a type equality HTML
                                                                 ~
                                                                 t_aBz " HTML.hs:35:11-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBB :: HTML ~ t_aBz [" a type equality HTML
                                                   ~
                                                   t_aBz " HTML.hs:35:11-22] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBz
can_eq_nc
  [W] cobox_aBB :: HTML ~ t_aBz
  HTML
  HTML
  t_aBz
  t_aBz
canEqTyVar
  t_aBz
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFI :: t_aBz ~ HTML
setEvBind
  ev = cobox_aBB
  tm  = CO Sym cobox_aFI
rewriteEqEvidence
  [W] cobox_aBB :: HTML ~ t_aBz
  t_aBz
  HTML
  Sym cobox_aFI
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFI :: t_aBz ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aBz " HTML.hs:35:11-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBz := HTML
  Coercion: t_aBz ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBz := HTML
setEvBind
  ev = cobox_aFI
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aBz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
11[<C:0,F:0>] [W] cobox_aFI :: t_aBz ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBC :: Bool ~ t_aBA [" a type equality Bool
                                                                ~
                                                                t_aBA " HTML.hs:35:11-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBC :: Bool ~ t_aBA [" a type equality Bool
                                                                 ~
                                                                 t_aBA " HTML.hs:35:11-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBC :: Bool ~ t_aBA [" a type equality Bool
                                                   ~
                                                   t_aBA " HTML.hs:35:11-22] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBA
can_eq_nc
  [W] cobox_aBC :: Bool ~ t_aBA
  Bool
  Bool
  t_aBA
  t_aBA
canEqTyVar
  t_aBA
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFJ :: t_aBA ~ Bool
setEvBind
  ev = cobox_aBC
  tm  = CO Sym cobox_aFJ
rewriteEqEvidence
  [W] cobox_aBC :: Bool ~ t_aBA
  t_aBA
  Bool
  Sym cobox_aFJ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFJ :: t_aBA ~ Bool [" a type equality Bool
                                                                 ~
                                                                 t_aBA " HTML.hs:35:11-22] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBA := Bool
  Coercion: t_aBA ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBA := Bool
setEvBind
  ev = cobox_aFJ
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_aBA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
12[<C:0,F:0>] [W] cobox_aFJ :: t_aBA ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBU :: [Requirement]
                                ~ t_aBR [" a type equality [Requirement]
                                                           ~
                                                           t_aBR " HTML.hs:26:13-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBU :: [Requirement]
                                 ~ t_aBR [" a type equality [Requirement]
                                                            ~
                                                            t_aBR " HTML.hs:26:13-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBU :: [Requirement]
                   ~ t_aBR [" a type equality [Requirement]
                                              ~
                                              t_aBR " HTML.hs:26:13-54] (CNonCanonical)
canEvNC:eq
  [Requirement]
  t_aBR
can_eq_nc
  [W] cobox_aBU :: [Requirement] ~ t_aBR
  [Requirement]
  [Requirement]
  t_aBR
  t_aBR
canEqTyVar
  t_aBR
  [Requirement]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFK :: t_aBR ~ [Requirement]
setEvBind
  ev = cobox_aBU
  tm  = CO Sym cobox_aFK
rewriteEqEvidence
  [W] cobox_aBU :: [Requirement] ~ t_aBR
  t_aBR
  [Requirement]
  Sym cobox_aFK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFK :: t_aBR
                                 ~ [Requirement] [" a type equality [Requirement]
                                                                    ~
                                                                    t_aBR " HTML.hs:26:13-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBR := [Requirement]
  Coercion: t_aBR ~ [Requirement]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBR := [Requirement]
setEvBind
  ev = cobox_aFK
  tm  = CO <[Requirement]>_N
kickOutRewritable
  tv =  t_aBR
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
13[<C:0,F:0>] [W] cobox_aFK :: t_aBR
                               ~ [Requirement]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBV :: HTML ~ t_aBS [" a type equality HTML
                                                                ~
                                                                t_aBS " HTML.hs:26:13-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBV :: HTML ~ t_aBS [" a type equality HTML
                                                                 ~
                                                                 t_aBS " HTML.hs:26:13-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBV :: HTML ~ t_aBS [" a type equality HTML
                                                   ~
                                                   t_aBS " HTML.hs:26:13-54] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBS
can_eq_nc
  [W] cobox_aBV :: HTML ~ t_aBS
  HTML
  HTML
  t_aBS
  t_aBS
canEqTyVar
  t_aBS
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFL :: t_aBS ~ HTML
setEvBind
  ev = cobox_aBV
  tm  = CO Sym cobox_aFL
rewriteEqEvidence
  [W] cobox_aBV :: HTML ~ t_aBS
  t_aBS
  HTML
  Sym cobox_aFL
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFL :: t_aBS ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aBS " HTML.hs:26:13-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBS := HTML
  Coercion: t_aBS ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBS := HTML
setEvBind
  ev = cobox_aFL
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aBS
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
14[<C:0,F:0>] [W] cobox_aFL :: t_aBS ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aBW :: Maybe Requirement
                                ~ t_aBT [" a type equality Maybe Requirement
                                                           ~
                                                           t_aBT " HTML.hs:26:13-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aBW :: Maybe Requirement
                                 ~ t_aBT [" a type equality Maybe Requirement
                                                            ~
                                                            t_aBT " HTML.hs:26:13-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aBW :: Maybe Requirement ~ t_aBT [" a type equality Maybe
                                                                  Requirement
                                                                ~
                                                                t_aBT " HTML.hs:26:13-54] (CNonCanonical)
canEvNC:eq
  Maybe Requirement
  t_aBT
can_eq_nc
  [W] cobox_aBW :: Maybe Requirement ~ t_aBT
  Maybe Requirement
  Maybe Requirement
  t_aBT
  t_aBT
canEqTyVar
  t_aBT
  Maybe Requirement
  Is-swapped
newWantedEvVar/cache miss
  [W] cobox_aFM :: t_aBT ~ Maybe Requirement
setEvBind
  ev = cobox_aBW
  tm  = CO Sym cobox_aFM
rewriteEqEvidence
  [W] cobox_aBW :: Maybe Requirement ~ t_aBT
  t_aBT
  Maybe Requirement
  Sym cobox_aFM
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFM :: t_aBT
                                 ~ Maybe Requirement [" a type equality Maybe Requirement
                                                                        ~
                                                                        t_aBT " HTML.hs:26:13-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBT := Maybe Requirement
  Coercion: t_aBT ~ Maybe Requirement
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBT := Maybe Requirement
setEvBind
  ev = cobox_aFM
  tm  = CO <Maybe Requirement>_N
kickOutRewritable
  tv =  t_aBT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
15[<C:0,F:0>] [W] cobox_aFM :: t_aBT
                               ~ Maybe Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC0 :: Requirement
                                ~ t_aBX [" a type equality Requirement
                                                           ~
                                                           t_aBX " HTML.hs:21:14-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC0 :: Requirement
                                 ~ t_aBX [" a type equality Requirement
                                                            ~
                                                            t_aBX " HTML.hs:21:14-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC0 :: Requirement ~ t_aBX [" a type equality Requirement
                                                          ~
                                                          t_aBX " HTML.hs:21:14-40] (CNonCanonical)
canEvNC:eq
  Requirement
  t_aBX
can_eq_nc
  [W] cobox_aC0 :: Requirement ~ t_aBX
  Requirement
  Requirement
  t_aBX
  t_aBX
can_eq_nc
  [W] cobox_aC0 :: Requirement ~ t_aBX
  (String, String)
  Requirement
  t_aBX
  t_aBX
canEqTyVar
  t_aBX
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFN :: t_aBX ~ Requirement
setEvBind
  ev = cobox_aC0
  tm  = CO Sym cobox_aFN
rewriteEqEvidence
  [W] cobox_aC0 :: Requirement ~ t_aBX
  t_aBX
  Requirement
  Sym cobox_aFN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFN :: t_aBX
                                 ~ Requirement [" a type equality Requirement
                                                                  ~
                                                                  t_aBX " HTML.hs:21:14-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBX := Requirement
  Coercion: t_aBX ~ Requirement
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBX := Requirement
setEvBind
  ev = cobox_aFN
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  t_aBX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
16[<C:0,F:0>] [W] cobox_aFN :: t_aBX
                               ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC1 :: HTML ~ t_aBY [" a type equality HTML
                                                                ~
                                                                t_aBY " HTML.hs:21:14-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC1 :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:21:14-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC1 :: HTML ~ t_aBY [" a type equality HTML
                                                   ~
                                                   t_aBY " HTML.hs:21:14-40] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBY
can_eq_nc
  [W] cobox_aC1 :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFO :: t_aBY ~ HTML
setEvBind
  ev = cobox_aC1
  tm  = CO Sym cobox_aFO
rewriteEqEvidence
  [W] cobox_aC1 :: HTML ~ t_aBY
  t_aBY
  HTML
  Sym cobox_aFO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFO :: t_aBY ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:21:14-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBY := HTML
  Coercion: t_aBY ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBY := HTML
setEvBind
  ev = cobox_aFO
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aBY
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
17[<C:0,F:0>] [W] cobox_aFO :: t_aBY ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                ~
                                                                t_aBZ " HTML.hs:21:14-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:21:14-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC2 :: Bool ~ t_aBZ [" a type equality Bool
                                                   ~
                                                   t_aBZ " HTML.hs:21:14-40] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBZ
can_eq_nc
  [W] cobox_aC2 :: Bool ~ t_aBZ
  Bool
  Bool
  t_aBZ
  t_aBZ
canEqTyVar
  t_aBZ
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFP :: t_aBZ ~ Bool
setEvBind
  ev = cobox_aC2
  tm  = CO Sym cobox_aFP
rewriteEqEvidence
  [W] cobox_aC2 :: Bool ~ t_aBZ
  t_aBZ
  Bool
  Sym cobox_aFP
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFP :: t_aBZ ~ Bool [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:21:14-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_aBZ := Bool
  Coercion: t_aBZ ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aBZ := Bool
setEvBind
  ev = cobox_aFP
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_aBZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
18[<C:0,F:0>] [W] cobox_aFP :: t_aBZ ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                ~
                                                                t_aC3 " HTML.hs:16:15-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:16:15-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC5 :: HTML ~ t_aC3 [" a type equality HTML
                                                   ~
                                                   t_aC3 " HTML.hs:16:15-28] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC3
can_eq_nc
  [W] cobox_aC5 :: HTML ~ t_aC3
  HTML
  HTML
  t_aC3
  t_aC3
canEqTyVar
  t_aC3
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFQ :: t_aC3 ~ HTML
setEvBind
  ev = cobox_aC5
  tm  = CO Sym cobox_aFQ
rewriteEqEvidence
  [W] cobox_aC5 :: HTML ~ t_aC3
  t_aC3
  HTML
  Sym cobox_aFQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFQ :: t_aC3 ~ HTML [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:16:15-28] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC3 := HTML
  Coercion: t_aC3 ~ HTML
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC3 := HTML
setEvBind
  ev = cobox_aFQ
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aC3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
19[<C:0,F:0>] [W] cobox_aFQ :: t_aC3 ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aC6 :: String
                                ~ t_aC4 [" a type equality String
                                                           ~
                                                           t_aC4 " HTML.hs:16:15-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aC6 :: String
                                 ~ t_aC4 [" a type equality String
                                                            ~
                                                            t_aC4 " HTML.hs:16:15-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aC6 :: String ~ t_aC4 [" a type equality String
                                                     ~
                                                     t_aC4 " HTML.hs:16:15-28] (CNonCanonical)
canEvNC:eq
  String
  t_aC4
can_eq_nc
  [W] cobox_aC6 :: String ~ t_aC4
  String
  String
  t_aC4
  t_aC4
can_eq_nc
  [W] cobox_aC6 :: String ~ t_aC4
  [Char]
  String
  t_aC4
  t_aC4
canEqTyVar
  t_aC4
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFR :: t_aC4 ~ String
setEvBind
  ev = cobox_aC6
  tm  = CO Sym cobox_aFR
rewriteEqEvidence
  [W] cobox_aC6 :: String ~ t_aC4
  t_aC4
  String
  Sym cobox_aFR
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFR :: t_aC4
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aC4 " HTML.hs:16:15-28] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC4 := String
  Coercion: t_aC4 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC4 := String
setEvBind
  ev = cobox_aFR
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aC4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
20[<C:0,F:0>] [W] cobox_aFR :: t_aC4 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCa :: String
                                ~ t_aC7 [" a type equality String
                                                           ~
                                                           t_aC7 " HTML.hs:4:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCa :: String
                                 ~ t_aC7 [" a type equality String
                                                            ~
                                                            t_aC7 " HTML.hs:4:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCa :: String ~ t_aC7 [" a type equality String
                                                     ~
                                                     t_aC7 " HTML.hs:4:18-41] (CNonCanonical)
canEvNC:eq
  String
  t_aC7
can_eq_nc
  [W] cobox_aCa :: String ~ t_aC7
  String
  String
  t_aC7
  t_aC7
can_eq_nc
  [W] cobox_aCa :: String ~ t_aC7
  [Char]
  String
  t_aC7
  t_aC7
canEqTyVar
  t_aC7
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFS :: t_aC7 ~ String
setEvBind
  ev = cobox_aCa
  tm  = CO Sym cobox_aFS
rewriteEqEvidence
  [W] cobox_aCa :: String ~ t_aC7
  t_aC7
  String
  Sym cobox_aFS
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFS :: t_aC7
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aC7 " HTML.hs:4:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC7 := String
  Coercion: t_aC7 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC7 := String
setEvBind
  ev = cobox_aFS
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aC7
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
21[<C:0,F:0>] [W] cobox_aFS :: t_aC7 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCb :: String
                                ~ t_aC8 [" a type equality String
                                                           ~
                                                           t_aC8 " HTML.hs:4:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCb :: String
                                 ~ t_aC8 [" a type equality String
                                                            ~
                                                            t_aC8 " HTML.hs:4:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCb :: String ~ t_aC8 [" a type equality String
                                                     ~
                                                     t_aC8 " HTML.hs:4:18-41] (CNonCanonical)
canEvNC:eq
  String
  t_aC8
can_eq_nc
  [W] cobox_aCb :: String ~ t_aC8
  String
  String
  t_aC8
  t_aC8
can_eq_nc
  [W] cobox_aCb :: String ~ t_aC8
  [Char]
  String
  t_aC8
  t_aC8
canEqTyVar
  t_aC8
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFT :: t_aC8 ~ String
setEvBind
  ev = cobox_aCb
  tm  = CO Sym cobox_aFT
rewriteEqEvidence
  [W] cobox_aCb :: String ~ t_aC8
  t_aC8
  String
  Sym cobox_aFT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFT :: t_aC8
                                 ~ String [" a type equality String
                                                             ~
                                                             t_aC8 " HTML.hs:4:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC8 := String
  Coercion: t_aC8 ~ String
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC8 := String
setEvBind
  ev = cobox_aFT
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aC8
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
22[<C:0,F:0>] [W] cobox_aFT :: t_aC8 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCc :: Bool ~ t_aC9 [" a type equality Bool
                                                                ~
                                                                t_aC9 " HTML.hs:4:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCc :: Bool ~ t_aC9 [" a type equality Bool
                                                                 ~
                                                                 t_aC9 " HTML.hs:4:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCc :: Bool ~ t_aC9 [" a type equality Bool
                                                   ~
                                                   t_aC9 " HTML.hs:4:18-41] (CNonCanonical)
canEvNC:eq
  Bool
  t_aC9
can_eq_nc
  [W] cobox_aCc :: Bool ~ t_aC9
  Bool
  Bool
  t_aC9
  t_aC9
canEqTyVar
  t_aC9
  Bool
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFU :: t_aC9 ~ Bool
setEvBind
  ev = cobox_aCc
  tm  = CO Sym cobox_aFU
rewriteEqEvidence
  [W] cobox_aCc :: Bool ~ t_aC9
  t_aC9
  Bool
  Sym cobox_aFU
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFU :: t_aC9 ~ Bool [" a type equality Bool
                                                                 ~
                                                                 t_aC9 " HTML.hs:4:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aC9 := Bool
  Coercion: t_aC9 ~ Bool
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aC9 := Bool
setEvBind
  ev = cobox_aFU
  tm  = CO <Bool>_N
kickOutRewritable
  tv =  t_aC9
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
23[<C:0,F:0>] [W] cobox_aFU :: t_aC9 ~ Bool: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCf :: [t_aCe]
                                ~ t_aBn [" a type equality [t_aCe]
                                                           ~
                                                           t_aBn " HTML.hs:50:10-11] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCf :: [t_aCe]
                                 ~ t_aBn [" a type equality [t_aCe]
                                                            ~
                                                            t_aBn " HTML.hs:50:10-11] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCf :: [t_aCe] ~ t_aBn [" a type equality [t_aCe]
                                                      ~
                                                      t_aBn " HTML.hs:50:10-11] (CNonCanonical)
canEvNC:eq
  [t_aCe]
  t_aBn
can_eq_nc
  [W] cobox_aCf :: [t_aCe] ~ t_aBn
  [t_aCe]
  [t_aCe]
  t_aBn
  t_aBn
canEqTyVar
  t_aBn
  [t_aCe]
  Is-swapped
Following bound tyvar t_aBn = [Attributen]
newWantedEvVar/cache miss [W] cobox_aFV :: [Attributen] ~ [t_aCe]
setEvBind
  ev = cobox_aCf
  tm  = CO Sym cobox_aFV
rewriteEqEvidence
  [W] cobox_aCf :: [t_aCe] ~ t_aBn
  [Attributen]
  [t_aCe]
  Sym cobox_aFV
canEqTyVar2
  t_aBn
  [t_aCe]
  Is-swapped
  [Attributen]
  <[Attributen]>_N
can_eq_nc
  [W] cobox_aFV :: [Attributen] ~ [t_aCe]
  [Attributen]
  [Attributen]
  [t_aCe]
  [t_aCe]
newWantedEvVar/cache miss [W] cobox_aFW :: Attributen ~ t_aCe
setEvBind
  ev = cobox_aFV
  tm  = CO [cobox_aFW]_N
canEvNC:eq
  Attributen
  t_aCe
can_eq_nc
  [W] cobox_aFW :: Attributen ~ t_aCe
  Attributen
  Attributen
  t_aCe
  t_aCe
can_eq_nc
  [W] cobox_aFW :: Attributen ~ t_aCe
  String
  Attributen
  t_aCe
  t_aCe
can_eq_nc
  [W] cobox_aFW :: Attributen ~ t_aCe
  [Char]
  Attributen
  t_aCe
  t_aCe
canEqTyVar
  t_aCe
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aFX :: t_aCe ~ Attributen
setEvBind
  ev = cobox_aFW
  tm  = CO Sym cobox_aFX
rewriteEqEvidence
  [W] cobox_aFW :: Attributen ~ t_aCe
  t_aCe
  Attributen
  Sym cobox_aFX
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFX :: t_aCe
                                 ~ Attributen [" a type equality [t_aCe]
                                                                 ~
                                                                 t_aBn " HTML.hs:50:10-11] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCe := Attributen
  Coercion: t_aCe ~ Attributen
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aCe := Attributen
setEvBind
  ev = cobox_aFX
  tm  = CO <Attributen>_N
kickOutRewritable
  tv =  t_aCe
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
24[<C:0,F:0>] [W] cobox_aFX :: t_aCe
                               ~ Attributen: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCg :: Doc ~ t_aBo [" a type equality Doc
                                                               ~
                                                               t_aBo " HTML.hs:50:15-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCg :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:50:15-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCg :: Doc ~ t_aBo [" a type equality Doc
                                                  ~
                                                  t_aBo " HTML.hs:50:15-22] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBo
can_eq_nc
  [W] cobox_aCg :: Doc ~ t_aBo
  Doc
  Doc
  t_aBo
  t_aBo
can_eq_nc
  [W] cobox_aCg :: Doc ~ t_aBo
  [String]
  Doc
  t_aBo
  t_aBo
canEqTyVar
  t_aBo
  [String]
  Is-swapped
Following bound tyvar t_aBo = Doc
newWantedEvVar/cache miss [W] cobox_aFY :: Doc ~ Doc
setEvBind
  ev = cobox_aCg
  tm  = CO Sym cobox_aFY
rewriteEqEvidence
  [W] cobox_aCg :: Doc ~ t_aBo
  Doc
  Doc
  Sym cobox_aFY
canEqTyVar2
  t_aBo
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aFY :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aFY :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aFZ :: String ~ String
setEvBind
  ev = cobox_aFY
  tm  = CO [cobox_aFZ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aFZ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aFZ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aFZ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aG0 :: Char ~ Char
setEvBind
  ev = cobox_aFZ
  tm  = CO [cobox_aG0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aG0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aG0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCh :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:50:21-22] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCh :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:50:21-22] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCh :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:50:21-22] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aCh :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aCh :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aG1 :: Char ~ Char
setEvBind
  ev = cobox_aCh
  tm  = CO [cobox_aG1]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aG1 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aG1
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCi :: Doc ~ t_aBo [" a type equality Doc
                                                               ~
                                                               t_aBo " HTML.hs:51:23-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCi :: Doc ~ t_aBo [" a type equality Doc
                                                                ~
                                                                t_aBo " HTML.hs:51:23-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCi :: Doc ~ t_aBo [" a type equality Doc
                                                  ~
                                                  t_aBo " HTML.hs:51:23-54] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBo
can_eq_nc
  [W] cobox_aCi :: Doc ~ t_aBo
  Doc
  Doc
  t_aBo
  t_aBo
can_eq_nc
  [W] cobox_aCi :: Doc ~ t_aBo
  [String]
  Doc
  t_aBo
  t_aBo
canEqTyVar
  t_aBo
  [String]
  Is-swapped
Following bound tyvar t_aBo = Doc
newWantedEvVar/cache miss [W] cobox_aG2 :: Doc ~ Doc
setEvBind
  ev = cobox_aCi
  tm  = CO Sym cobox_aG2
rewriteEqEvidence
  [W] cobox_aCi :: Doc ~ t_aBo
  Doc
  Doc
  Sym cobox_aG2
canEqTyVar2
  t_aBo
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aG2 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aG2 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aG3 :: String ~ String
setEvBind
  ev = cobox_aG2
  tm  = CO [cobox_aG3]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aG3 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aG3 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aG3 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aG4 :: Char ~ Char
setEvBind
  ev = cobox_aG3
  tm  = CO [cobox_aG4]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aG4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aG4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCj :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:51:23-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCj :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:51:23-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCj :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:51:23-31] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aCj :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aCj :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aCj :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aG5 :: String ~ String
setEvBind
  ev = cobox_aCj
  tm  = CO [cobox_aG5]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aG5 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aG5 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aG5 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aG6 :: Char ~ Char
setEvBind
  ev = cobox_aG5
  tm  = CO [cobox_aG6]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aG6 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aG6
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCk :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:51:29-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCk :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:51:29-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCk :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:51:29-31] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aCk :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aCk :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aG7 :: Char ~ Char
setEvBind
  ev = cobox_aCk
  tm  = CO [cobox_aG7]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aG7 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aG7
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCl :: String
                                ~ Doc [" a type equality String
                                                         ~
                                                         Doc " HTML.hs:51:37-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCl :: String
                                 ~ Doc [" a type equality String
                                                          ~
                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCl :: String ~ Doc [" a type equality String
                                                   ~
                                                   Doc " HTML.hs:51:37-54] (CNonCanonical)
canEvNC:eq
  String
  Doc
can_eq_nc
  [W] cobox_aCl :: String ~ Doc
  String
  String
  Doc
  Doc
can_eq_nc
  [W] cobox_aCl :: String ~ Doc
  [Char]
  String
  Doc
  Doc
can_eq_nc
  [W] cobox_aCl :: String ~ Doc
  [Char]
  String
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aG8 :: Char ~ String
setEvBind
  ev = cobox_aCl
  tm  = CO [cobox_aG8]_N
canEvNC:eq
  Char
  String
can_eq_nc
  [W] cobox_aG8 :: Char ~ String
  Char
  Char
  String
  String
can_eq_nc
  [W] cobox_aG8 :: Char ~ String
  Char
  Char
  [Char]
  String
Emit insoluble
  [W] cobox_aG8 :: Char ~ [Char] [" a type equality String
                                                    ~
                                                    Doc " HTML.hs:51:37-54] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCm :: t_aBn
                                ~ [String] [" a type equality t_aBn
                                                              ~
                                                              [String] " HTML.hs:51:45-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCm :: t_aBn
                                 ~ [String] [" a type equality t_aBn
                                                               ~
                                                               [String] " HTML.hs:51:45-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCm :: t_aBn ~ [String] [" a type equality t_aBn
                                                       ~
                                                       [String] " HTML.hs:51:45-54] (CNonCanonical)
canEvNC:eq
  t_aBn
  [String]
can_eq_nc
  [W] cobox_aCm :: t_aBn ~ [String]
  t_aBn
  t_aBn
  [String]
  [String]
canEqTyVar
  t_aBn
  [String]
  Not-swapped
Following bound tyvar t_aBn = [Attributen]
canEqTyVar2
  t_aBn
  [String]
  Not-swapped
  [Attributen]
  <[Attributen]>_N
can_eq_nc
  [W] cobox_aCm :: [Attributen] ~ [String]
  [Attributen]
  [Attributen]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aG9 :: Attributen ~ String
setEvBind
  ev = cobox_aCm
  tm  = CO [cobox_aG9]_N
canEvNC:eq
  Attributen
  String
can_eq_nc
  [W] cobox_aG9 :: Attributen ~ String
  Attributen
  Attributen
  String
  String
can_eq_nc
  [W] cobox_aG9 :: Attributen ~ String
  String
  Attributen
  String
  String
can_eq_nc
  [W] cobox_aG9 :: Attributen ~ String
  [Char]
  Attributen
  String
  String
can_eq_nc
  [W] cobox_aG9 :: Attributen ~ String
  [Char]
  Attributen
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGa :: Char ~ Char
setEvBind
  ev = cobox_aG9
  tm  = CO [cobox_aGa]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGa :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGa
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCo :: HTML ~ t_aBv [" a type equality HTML
                                                                ~
                                                                t_aBv " HTML.hs:40:20-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCo :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:40:20-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCo :: HTML ~ t_aBv [" a type equality HTML
                                                   ~
                                                   t_aBv " HTML.hs:40:20-26] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBv
can_eq_nc
  [W] cobox_aCo :: HTML ~ t_aBv
  HTML
  HTML
  t_aBv
  t_aBv
canEqTyVar
  t_aBv
  HTML
  Is-swapped
Following bound tyvar t_aBv = HTML
newWantedEvVar/cache miss [W] cobox_aGb :: HTML ~ HTML
setEvBind
  ev = cobox_aCo
  tm  = CO Sym cobox_aGb
rewriteEqEvidence
  [W] cobox_aCo :: HTML ~ t_aBv
  HTML
  HTML
  Sym cobox_aGb
canEqTyVar2
  t_aBv
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aGb :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGb
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCp :: Bool ~ t_aBw [" a type equality Bool
                                                                ~
                                                                t_aBw " HTML.hs:40:31-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCp :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:40:31-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCp :: Bool ~ t_aBw [" a type equality Bool
                                                   ~
                                                   t_aBw " HTML.hs:40:31-34] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBw
can_eq_nc
  [W] cobox_aCp :: Bool ~ t_aBw
  Bool
  Bool
  t_aBw
  t_aBw
canEqTyVar
  t_aBw
  Bool
  Is-swapped
Following bound tyvar t_aBw = Bool
newWantedEvVar/cache miss [W] cobox_aGc :: Bool ~ Bool
setEvBind
  ev = cobox_aCp
  tm  = CO Sym cobox_aGc
rewriteEqEvidence
  [W] cobox_aCp :: Bool ~ t_aBw
  Bool
  Bool
  Sym cobox_aGc
canEqTyVar2
  t_aBw
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aGc :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aGc
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCq :: HTML ~ t_aBv [" a type equality HTML
                                                                ~
                                                                t_aBv " HTML.hs:41:20-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCq :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:41:20-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCq :: HTML ~ t_aBv [" a type equality HTML
                                                   ~
                                                   t_aBv " HTML.hs:41:20-36] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBv
can_eq_nc
  [W] cobox_aCq :: HTML ~ t_aBv
  HTML
  HTML
  t_aBv
  t_aBv
canEqTyVar
  t_aBv
  HTML
  Is-swapped
Following bound tyvar t_aBv = HTML
newWantedEvVar/cache miss [W] cobox_aGd :: HTML ~ HTML
setEvBind
  ev = cobox_aCq
  tm  = CO Sym cobox_aGd
rewriteEqEvidence
  [W] cobox_aCq :: HTML ~ t_aBv
  HTML
  HTML
  Sym cobox_aGd
canEqTyVar2
  t_aBv
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aGd :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGd
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCr :: Bool ~ t_aBw [" a type equality Bool
                                                                ~
                                                                t_aBw " HTML.hs:41:41-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCr :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:41:41-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCr :: Bool ~ t_aBw [" a type equality Bool
                                                   ~
                                                   t_aBw " HTML.hs:41:41-44] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBw
can_eq_nc
  [W] cobox_aCr :: Bool ~ t_aBw
  Bool
  Bool
  t_aBw
  t_aBw
canEqTyVar
  t_aBw
  Bool
  Is-swapped
Following bound tyvar t_aBw = Bool
newWantedEvVar/cache miss [W] cobox_aGe :: Bool ~ Bool
setEvBind
  ev = cobox_aCr
  tm  = CO Sym cobox_aGe
rewriteEqEvidence
  [W] cobox_aCr :: Bool ~ t_aBw
  Bool
  Bool
  Sym cobox_aGe
canEqTyVar2
  t_aBw
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aGe :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aGe
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCs :: HTML ~ t_aBv [" a type equality HTML
                                                                ~
                                                                t_aBv " HTML.hs:42:20-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCs :: HTML ~ t_aBv [" a type equality HTML
                                                                 ~
                                                                 t_aBv " HTML.hs:42:20-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCs :: HTML ~ t_aBv [" a type equality HTML
                                                   ~
                                                   t_aBv " HTML.hs:42:20-32] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBv
can_eq_nc
  [W] cobox_aCs :: HTML ~ t_aBv
  HTML
  HTML
  t_aBv
  t_aBv
canEqTyVar
  t_aBv
  HTML
  Is-swapped
Following bound tyvar t_aBv = HTML
newWantedEvVar/cache miss [W] cobox_aGf :: HTML ~ HTML
setEvBind
  ev = cobox_aCs
  tm  = CO Sym cobox_aGf
rewriteEqEvidence
  [W] cobox_aCs :: HTML ~ t_aBv
  HTML
  HTML
  Sym cobox_aGf
canEqTyVar2
  t_aBv
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aGf :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGf
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCt :: Bool ~ t_aBw [" a type equality Bool
                                                                ~
                                                                t_aBw " HTML.hs:42:37-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCt :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:42:37-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCt :: Bool ~ t_aBw [" a type equality Bool
                                                   ~
                                                   t_aBw " HTML.hs:42:37-40] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBw
can_eq_nc
  [W] cobox_aCt :: Bool ~ t_aBw
  Bool
  Bool
  t_aBw
  t_aBw
canEqTyVar
  t_aBw
  Bool
  Is-swapped
Following bound tyvar t_aBw = Bool
newWantedEvVar/cache miss [W] cobox_aGg :: Bool ~ Bool
setEvBind
  ev = cobox_aCt
  tm  = CO Sym cobox_aGg
rewriteEqEvidence
  [W] cobox_aCt :: Bool ~ t_aBw
  Bool
  Bool
  Sym cobox_aGg
canEqTyVar2
  t_aBw
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aGg :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aGg
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCu :: Bool ~ t_aBw [" a type equality Bool
                                                                ~
                                                                t_aBw " HTML.hs:43:23-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCu :: Bool ~ t_aBw [" a type equality Bool
                                                                 ~
                                                                 t_aBw " HTML.hs:43:23-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCu :: Bool ~ t_aBw [" a type equality Bool
                                                   ~
                                                   t_aBw " HTML.hs:43:23-27] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBw
can_eq_nc
  [W] cobox_aCu :: Bool ~ t_aBw
  Bool
  Bool
  t_aBw
  t_aBw
canEqTyVar
  t_aBw
  Bool
  Is-swapped
Following bound tyvar t_aBw = Bool
newWantedEvVar/cache miss [W] cobox_aGh :: Bool ~ Bool
setEvBind
  ev = cobox_aCu
  tm  = CO Sym cobox_aGh
rewriteEqEvidence
  [W] cobox_aCu :: Bool ~ t_aBw
  Bool
  Bool
  Sym cobox_aGh
canEqTyVar2
  t_aBw
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aGh :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aGh
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCx :: [t_aCw]
                                ~ t_aBr [" a type equality [t_aCw]
                                                           ~
                                                           t_aBr " HTML.hs:46:20-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCx :: [t_aCw]
                                 ~ t_aBr [" a type equality [t_aCw]
                                                            ~
                                                            t_aBr " HTML.hs:46:20-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCx :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                      ~
                                                      t_aBr " HTML.hs:46:20-23] (CNonCanonical)
canEvNC:eq
  [t_aCw]
  t_aBr
can_eq_nc
  [W] cobox_aCx :: [t_aCw] ~ t_aBr
  [t_aCw]
  [t_aCw]
  t_aBr
  t_aBr
canEqTyVar
  t_aBr
  [t_aCw]
  Is-swapped
Following bound tyvar t_aBr = [HTML]
newWantedEvVar/cache miss [W] cobox_aGi :: [HTML] ~ [t_aCw]
setEvBind
  ev = cobox_aCx
  tm  = CO Sym cobox_aGi
rewriteEqEvidence
  [W] cobox_aCx :: [t_aCw] ~ t_aBr
  [HTML]
  [t_aCw]
  Sym cobox_aGi
canEqTyVar2
  t_aBr
  [t_aCw]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aGi :: [HTML] ~ [t_aCw]
  [HTML]
  [HTML]
  [t_aCw]
  [t_aCw]
newWantedEvVar/cache miss [W] cobox_aGj :: HTML ~ t_aCw
setEvBind
  ev = cobox_aGi
  tm  = CO [cobox_aGj]_N
canEvNC:eq
  HTML
  t_aCw
can_eq_nc
  [W] cobox_aGj :: HTML ~ t_aCw
  HTML
  HTML
  t_aCw
  t_aCw
canEqTyVar
  t_aCw
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aGk :: t_aCw ~ HTML
setEvBind
  ev = cobox_aGj
  tm  = CO Sym cobox_aGk
rewriteEqEvidence
  [W] cobox_aGj :: HTML ~ t_aCw
  t_aCw
  HTML
  Sym cobox_aGk
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGk :: t_aCw
                                 ~ HTML [" a type equality [t_aCw]
                                                           ~
                                                           t_aBr " HTML.hs:46:20-23] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCw := HTML
  Coercion: t_aCw ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aCw := HTML
setEvBind
  ev = cobox_aGk
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCw
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
39[<C:0,F:0>] [W] cobox_aGk :: t_aCw ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCy :: Bool ~ t_aBs [" a type equality Bool
                                                                ~
                                                                t_aBs " HTML.hs:46:28-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCy :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:46:28-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCy :: Bool ~ t_aBs [" a type equality Bool
                                                   ~
                                                   t_aBs " HTML.hs:46:28-70] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBs
can_eq_nc
  [W] cobox_aCy :: Bool ~ t_aBs
  Bool
  Bool
  t_aBs
  t_aBs
canEqTyVar
  t_aBs
  Bool
  Is-swapped
Following bound tyvar t_aBs = Bool
newWantedEvVar/cache miss [W] cobox_aGl :: Bool ~ Bool
setEvBind
  ev = cobox_aCy
  tm  = CO Sym cobox_aGl
rewriteEqEvidence
  [W] cobox_aCy :: Bool ~ t_aBs
  Bool
  Bool
  Sym cobox_aGl
canEqTyVar2
  t_aBs
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aGl :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aGl
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCz :: t_aBw ~ Bool [" a type equality t_aBw
                                                                ~
                                                                Bool " HTML.hs:46:28-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCz :: t_aBw
                                 ~ Bool [" a type equality t_aBw
                                                           ~
                                                           Bool " HTML.hs:46:28-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCz :: t_aBw ~ Bool [" a type equality t_aBw
                                                   ~
                                                   Bool " HTML.hs:46:28-46] (CNonCanonical)
canEvNC:eq
  t_aBw
  Bool
can_eq_nc
  [W] cobox_aCz :: t_aBw ~ Bool
  t_aBw
  t_aBw
  Bool
  Bool
canEqTyVar
  t_aBw
  Bool
  Not-swapped
Following bound tyvar t_aBw = Bool
canEqTyVar2
  t_aBw
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aCz :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aCz
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCA :: t_aCw
                                ~ t_aBv [" a type equality t_aCw
                                                           ~
                                                           t_aBv " HTML.hs:46:46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCA :: t_aCw
                                 ~ t_aBv [" a type equality t_aCw
                                                            ~
                                                            t_aBv " HTML.hs:46:46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCA :: t_aCw ~ t_aBv [" a type equality t_aCw
                                                    ~
                                                    t_aBv " HTML.hs:46:46] (CNonCanonical)
canEvNC:eq
  t_aCw
  t_aBv
can_eq_nc
  [W] cobox_aCA :: t_aCw ~ t_aBv
  t_aCw
  t_aCw
  t_aBv
  t_aBv
canEqTyVar
  t_aCw
  t_aBv
  Not-swapped
Following bound tyvar t_aCw = HTML
canEqTyVar2
  t_aCw
  t_aBv
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aCA :: HTML ~ t_aBv
  HTML
  HTML
  t_aBv
  t_aBv
canEqTyVar
  t_aBv
  HTML
  Is-swapped
Following bound tyvar t_aBv = HTML
newWantedEvVar/cache miss [W] cobox_aGm :: HTML ~ HTML
setEvBind
  ev = cobox_aCA
  tm  = CO Sym cobox_aGm
rewriteEqEvidence
  [W] cobox_aCA :: HTML ~ t_aBv
  HTML
  HTML
  Sym cobox_aGm
canEqTyVar2
  t_aBv
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aGm :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGm
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCB :: t_aBs ~ Bool [" a type equality t_aBs
                                                                ~
                                                                Bool " HTML.hs:46:51-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCB :: t_aBs
                                 ~ Bool [" a type equality t_aBs
                                                           ~
                                                           Bool " HTML.hs:46:51-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCB :: t_aBs ~ Bool [" a type equality t_aBs
                                                   ~
                                                   Bool " HTML.hs:46:51-70] (CNonCanonical)
canEvNC:eq
  t_aBs
  Bool
can_eq_nc
  [W] cobox_aCB :: t_aBs ~ Bool
  t_aBs
  t_aBs
  Bool
  Bool
canEqTyVar
  t_aBs
  Bool
  Not-swapped
Following bound tyvar t_aBs = Bool
canEqTyVar2
  t_aBs
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aCB :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aCB
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCC :: [t_aCw]
                                ~ t_aBr [" a type equality [t_aCw]
                                                           ~
                                                           t_aBr " HTML.hs:46:69-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCC :: [t_aCw]
                                 ~ t_aBr [" a type equality [t_aCw]
                                                            ~
                                                            t_aBr " HTML.hs:46:69-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCC :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                      ~
                                                      t_aBr " HTML.hs:46:69-70] (CNonCanonical)
canEvNC:eq
  [t_aCw]
  t_aBr
can_eq_nc
  [W] cobox_aCC :: [t_aCw] ~ t_aBr
  [t_aCw]
  [t_aCw]
  t_aBr
  t_aBr
canEqTyVar
  t_aBr
  [t_aCw]
  Is-swapped
Following bound tyvar t_aBr = [HTML]
newWantedEvVar/cache miss [W] cobox_aGn :: [HTML] ~ [t_aCw]
setEvBind
  ev = cobox_aCC
  tm  = CO Sym cobox_aGn
rewriteEqEvidence
  [W] cobox_aCC :: [t_aCw] ~ t_aBr
  [HTML]
  [t_aCw]
  Sym cobox_aGn
canEqTyVar2
  t_aBr
  [t_aCw]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aGn :: [HTML] ~ [t_aCw]
  [HTML]
  [HTML]
  [t_aCw]
  [t_aCw]
newWantedEvVar/cache miss [W] cobox_aGo :: HTML ~ t_aCw
setEvBind
  ev = cobox_aGn
  tm  = CO [cobox_aGo]_N
canEvNC:eq
  HTML
  t_aCw
can_eq_nc
  [W] cobox_aGo :: HTML ~ t_aCw
  HTML
  HTML
  t_aCw
  t_aCw
canEqTyVar
  t_aCw
  HTML
  Is-swapped
Following bound tyvar t_aCw = HTML
newWantedEvVar/cache miss [W] cobox_aGp :: HTML ~ HTML
setEvBind
  ev = cobox_aGo
  tm  = CO Sym cobox_aGp
rewriteEqEvidence
  [W] cobox_aGo :: HTML ~ t_aCw
  HTML
  HTML
  Sym cobox_aGp
canEqTyVar2
  t_aCw
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aGp :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGp
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCE :: [t_aCD]
                                ~ t_aBr [" a type equality [t_aCD]
                                                           ~
                                                           t_aBr " HTML.hs:47:19-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCE :: [t_aCD]
                                 ~ t_aBr [" a type equality [t_aCD]
                                                            ~
                                                            t_aBr " HTML.hs:47:19-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCE :: [t_aCD] ~ t_aBr [" a type equality [t_aCD]
                                                      ~
                                                      t_aBr " HTML.hs:47:19-20] (CNonCanonical)
canEvNC:eq
  [t_aCD]
  t_aBr
can_eq_nc
  [W] cobox_aCE :: [t_aCD] ~ t_aBr
  [t_aCD]
  [t_aCD]
  t_aBr
  t_aBr
canEqTyVar
  t_aBr
  [t_aCD]
  Is-swapped
Following bound tyvar t_aBr = [HTML]
newWantedEvVar/cache miss [W] cobox_aGq :: [HTML] ~ [t_aCD]
setEvBind
  ev = cobox_aCE
  tm  = CO Sym cobox_aGq
rewriteEqEvidence
  [W] cobox_aCE :: [t_aCD] ~ t_aBr
  [HTML]
  [t_aCD]
  Sym cobox_aGq
canEqTyVar2
  t_aBr
  [t_aCD]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aGq :: [HTML] ~ [t_aCD]
  [HTML]
  [HTML]
  [t_aCD]
  [t_aCD]
newWantedEvVar/cache miss [W] cobox_aGr :: HTML ~ t_aCD
setEvBind
  ev = cobox_aGq
  tm  = CO [cobox_aGr]_N
canEvNC:eq
  HTML
  t_aCD
can_eq_nc
  [W] cobox_aGr :: HTML ~ t_aCD
  HTML
  HTML
  t_aCD
  t_aCD
canEqTyVar
  t_aCD
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aGs :: t_aCD ~ HTML
setEvBind
  ev = cobox_aGr
  tm  = CO Sym cobox_aGs
rewriteEqEvidence
  [W] cobox_aGr :: HTML ~ t_aCD
  t_aCD
  HTML
  Sym cobox_aGs
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGs :: t_aCD
                                 ~ HTML [" a type equality [t_aCD]
                                                           ~
                                                           t_aBr " HTML.hs:47:19-20] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCD := HTML
  Coercion: t_aCD ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aCD := HTML
setEvBind
  ev = cobox_aGs
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCD
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
45[<C:0,F:0>] [W] cobox_aGs :: t_aCD ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCF :: Bool ~ t_aBs [" a type equality Bool
                                                                ~
                                                                t_aBs " HTML.hs:47:24-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCF :: Bool ~ t_aBs [" a type equality Bool
                                                                 ~
                                                                 t_aBs " HTML.hs:47:24-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCF :: Bool ~ t_aBs [" a type equality Bool
                                                   ~
                                                   t_aBs " HTML.hs:47:24-27] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBs
can_eq_nc
  [W] cobox_aCF :: Bool ~ t_aBs
  Bool
  Bool
  t_aBs
  t_aBs
canEqTyVar
  t_aBs
  Bool
  Is-swapped
Following bound tyvar t_aBs = Bool
newWantedEvVar/cache miss [W] cobox_aGt :: Bool ~ Bool
setEvBind
  ev = cobox_aCF
  tm  = CO Sym cobox_aGt
rewriteEqEvidence
  [W] cobox_aCF :: Bool ~ t_aBs
  Bool
  Bool
  Sym cobox_aGt
canEqTyVar2
  t_aBs
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aGt :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aGt
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCI :: [t_aCH]
                                ~ t_aBf [" a type equality [t_aCH]
                                                           ~
                                                           t_aBf " HTML.hs:63:14-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCI :: [t_aCH]
                                 ~ t_aBf [" a type equality [t_aCH]
                                                            ~
                                                            t_aBf " HTML.hs:63:14-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCI :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                      ~
                                                      t_aBf " HTML.hs:63:14-17] (CNonCanonical)
canEvNC:eq
  [t_aCH]
  t_aBf
can_eq_nc
  [W] cobox_aCI :: [t_aCH] ~ t_aBf
  [t_aCH]
  [t_aCH]
  t_aBf
  t_aBf
canEqTyVar
  t_aBf
  [t_aCH]
  Is-swapped
Following bound tyvar t_aBf = [HTML]
newWantedEvVar/cache miss [W] cobox_aGu :: [HTML] ~ [t_aCH]
setEvBind
  ev = cobox_aCI
  tm  = CO Sym cobox_aGu
rewriteEqEvidence
  [W] cobox_aCI :: [t_aCH] ~ t_aBf
  [HTML]
  [t_aCH]
  Sym cobox_aGu
canEqTyVar2
  t_aBf
  [t_aCH]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aGu :: [HTML] ~ [t_aCH]
  [HTML]
  [HTML]
  [t_aCH]
  [t_aCH]
newWantedEvVar/cache miss [W] cobox_aGv :: HTML ~ t_aCH
setEvBind
  ev = cobox_aGu
  tm  = CO [cobox_aGv]_N
canEvNC:eq
  HTML
  t_aCH
can_eq_nc
  [W] cobox_aGv :: HTML ~ t_aCH
  HTML
  HTML
  t_aCH
  t_aCH
canEqTyVar
  t_aCH
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aGw :: t_aCH ~ HTML
setEvBind
  ev = cobox_aGv
  tm  = CO Sym cobox_aGw
rewriteEqEvidence
  [W] cobox_aGv :: HTML ~ t_aCH
  t_aCH
  HTML
  Sym cobox_aGw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGw :: t_aCH
                                 ~ HTML [" a type equality [t_aCH]
                                                           ~
                                                           t_aBf " HTML.hs:63:14-17] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCH := HTML
  Coercion: t_aCH ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aCH := HTML
setEvBind
  ev = cobox_aGw
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
47[<C:0,F:0>] [W] cobox_aGw :: t_aCH ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCJ :: Doc ~ t_aBg [" a type equality Doc
                                                               ~
                                                               t_aBg " HTML.hs:63:22-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCJ :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:63:22-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCJ :: Doc ~ t_aBg [" a type equality Doc
                                                  ~
                                                  t_aBg " HTML.hs:63:22-48] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBg
can_eq_nc
  [W] cobox_aCJ :: Doc ~ t_aBg
  Doc
  Doc
  t_aBg
  t_aBg
can_eq_nc
  [W] cobox_aCJ :: Doc ~ t_aBg
  [String]
  Doc
  t_aBg
  t_aBg
canEqTyVar
  t_aBg
  [String]
  Is-swapped
Following bound tyvar t_aBg = Doc
newWantedEvVar/cache miss [W] cobox_aGx :: Doc ~ Doc
setEvBind
  ev = cobox_aCJ
  tm  = CO Sym cobox_aGx
rewriteEqEvidence
  [W] cobox_aCJ :: Doc ~ t_aBg
  Doc
  Doc
  Sym cobox_aGx
canEqTyVar2
  t_aBg
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aGx :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aGx :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aGy :: String ~ String
setEvBind
  ev = cobox_aGx
  tm  = CO [cobox_aGy]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGy :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGy :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGy :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGz :: Char ~ Char
setEvBind
  ev = cobox_aGy
  tm  = CO [cobox_aGz]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCK :: t_aBk ~ Doc [" a type equality t_aBk
                                                               ~
                                                               Doc " HTML.hs:63:22-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCK :: t_aBk ~ Doc [" a type equality t_aBk
                                                                ~
                                                                Doc " HTML.hs:63:22-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCK :: t_aBk ~ Doc [" a type equality t_aBk
                                                  ~
                                                  Doc " HTML.hs:63:22-29] (CNonCanonical)
canEvNC:eq
  t_aBk
  Doc
can_eq_nc
  [W] cobox_aCK :: t_aBk ~ Doc
  t_aBk
  t_aBk
  Doc
  Doc
can_eq_nc
  [W] cobox_aCK :: t_aBk ~ Doc
  t_aBk
  t_aBk
  [String]
  Doc
canEqTyVar
  t_aBk
  [String]
  Not-swapped
Following bound tyvar t_aBk = Doc
canEqTyVar2
  t_aBk
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aCK :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aCK :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aGA :: String ~ String
setEvBind
  ev = cobox_aCK
  tm  = CO [cobox_aGA]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGA :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGA :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGA :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGB :: Char ~ Char
setEvBind
  ev = cobox_aGA
  tm  = CO [cobox_aGB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCL :: t_aCH
                                ~ t_aBj [" a type equality t_aCH
                                                           ~
                                                           t_aBj " HTML.hs:63:29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCL :: t_aCH
                                 ~ t_aBj [" a type equality t_aCH
                                                            ~
                                                            t_aBj " HTML.hs:63:29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCL :: t_aCH ~ t_aBj [" a type equality t_aCH
                                                    ~
                                                    t_aBj " HTML.hs:63:29] (CNonCanonical)
canEvNC:eq
  t_aCH
  t_aBj
can_eq_nc
  [W] cobox_aCL :: t_aCH ~ t_aBj
  t_aCH
  t_aCH
  t_aBj
  t_aBj
canEqTyVar
  t_aCH
  t_aBj
  Not-swapped
Following bound tyvar t_aCH = HTML
canEqTyVar2
  t_aCH
  t_aBj
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aCL :: HTML ~ t_aBj
  HTML
  HTML
  t_aBj
  t_aBj
canEqTyVar
  t_aBj
  HTML
  Is-swapped
Following bound tyvar t_aBj = HTML
newWantedEvVar/cache miss [W] cobox_aGC :: HTML ~ HTML
setEvBind
  ev = cobox_aCL
  tm  = CO Sym cobox_aGC
rewriteEqEvidence
  [W] cobox_aCL :: HTML ~ t_aBj
  HTML
  HTML
  Sym cobox_aGC
canEqTyVar2
  t_aBj
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aGC :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGC
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCM :: t_aBg ~ Doc [" a type equality t_aBg
                                                               ~
                                                               Doc " HTML.hs:63:35-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCM :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:63:35-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCM :: t_aBg ~ Doc [" a type equality t_aBg
                                                  ~
                                                  Doc " HTML.hs:63:35-48] (CNonCanonical)
canEvNC:eq
  t_aBg
  Doc
can_eq_nc
  [W] cobox_aCM :: t_aBg ~ Doc
  t_aBg
  t_aBg
  Doc
  Doc
can_eq_nc
  [W] cobox_aCM :: t_aBg ~ Doc
  t_aBg
  t_aBg
  [String]
  Doc
canEqTyVar
  t_aBg
  [String]
  Not-swapped
Following bound tyvar t_aBg = Doc
canEqTyVar2
  t_aBg
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aCM :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aCM :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aGD :: String ~ String
setEvBind
  ev = cobox_aCM
  tm  = CO [cobox_aGD]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGD :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGD :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGE :: Char ~ Char
setEvBind
  ev = cobox_aGD
  tm  = CO [cobox_aGE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCN :: [t_aCH]
                                ~ t_aBf [" a type equality [t_aCH]
                                                           ~
                                                           t_aBf " HTML.hs:63:47-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCN :: [t_aCH]
                                 ~ t_aBf [" a type equality [t_aCH]
                                                            ~
                                                            t_aBf " HTML.hs:63:47-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCN :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                      ~
                                                      t_aBf " HTML.hs:63:47-48] (CNonCanonical)
canEvNC:eq
  [t_aCH]
  t_aBf
can_eq_nc
  [W] cobox_aCN :: [t_aCH] ~ t_aBf
  [t_aCH]
  [t_aCH]
  t_aBf
  t_aBf
canEqTyVar
  t_aBf
  [t_aCH]
  Is-swapped
Following bound tyvar t_aBf = [HTML]
newWantedEvVar/cache miss [W] cobox_aGF :: [HTML] ~ [t_aCH]
setEvBind
  ev = cobox_aCN
  tm  = CO Sym cobox_aGF
rewriteEqEvidence
  [W] cobox_aCN :: [t_aCH] ~ t_aBf
  [HTML]
  [t_aCH]
  Sym cobox_aGF
canEqTyVar2
  t_aBf
  [t_aCH]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aGF :: [HTML] ~ [t_aCH]
  [HTML]
  [HTML]
  [t_aCH]
  [t_aCH]
newWantedEvVar/cache miss [W] cobox_aGG :: HTML ~ t_aCH
setEvBind
  ev = cobox_aGF
  tm  = CO [cobox_aGG]_N
canEvNC:eq
  HTML
  t_aCH
can_eq_nc
  [W] cobox_aGG :: HTML ~ t_aCH
  HTML
  HTML
  t_aCH
  t_aCH
canEqTyVar
  t_aCH
  HTML
  Is-swapped
Following bound tyvar t_aCH = HTML
newWantedEvVar/cache miss [W] cobox_aGH :: HTML ~ HTML
setEvBind
  ev = cobox_aGG
  tm  = CO Sym cobox_aGH
rewriteEqEvidence
  [W] cobox_aGG :: HTML ~ t_aCH
  HTML
  HTML
  Sym cobox_aGH
canEqTyVar2
  t_aCH
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aGH :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGH
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCP :: [t_aCO]
                                ~ t_aBf [" a type equality [t_aCO]
                                                           ~
                                                           t_aBf " HTML.hs:64:13-14] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCP :: [t_aCO]
                                 ~ t_aBf [" a type equality [t_aCO]
                                                            ~
                                                            t_aBf " HTML.hs:64:13-14] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCP :: [t_aCO] ~ t_aBf [" a type equality [t_aCO]
                                                      ~
                                                      t_aBf " HTML.hs:64:13-14] (CNonCanonical)
canEvNC:eq
  [t_aCO]
  t_aBf
can_eq_nc
  [W] cobox_aCP :: [t_aCO] ~ t_aBf
  [t_aCO]
  [t_aCO]
  t_aBf
  t_aBf
canEqTyVar
  t_aBf
  [t_aCO]
  Is-swapped
Following bound tyvar t_aBf = [HTML]
newWantedEvVar/cache miss [W] cobox_aGI :: [HTML] ~ [t_aCO]
setEvBind
  ev = cobox_aCP
  tm  = CO Sym cobox_aGI
rewriteEqEvidence
  [W] cobox_aCP :: [t_aCO] ~ t_aBf
  [HTML]
  [t_aCO]
  Sym cobox_aGI
canEqTyVar2
  t_aBf
  [t_aCO]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aGI :: [HTML] ~ [t_aCO]
  [HTML]
  [HTML]
  [t_aCO]
  [t_aCO]
newWantedEvVar/cache miss [W] cobox_aGJ :: HTML ~ t_aCO
setEvBind
  ev = cobox_aGI
  tm  = CO [cobox_aGJ]_N
canEvNC:eq
  HTML
  t_aCO
can_eq_nc
  [W] cobox_aGJ :: HTML ~ t_aCO
  HTML
  HTML
  t_aCO
  t_aCO
canEqTyVar
  t_aCO
  HTML
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aGK :: t_aCO ~ HTML
setEvBind
  ev = cobox_aGJ
  tm  = CO Sym cobox_aGK
rewriteEqEvidence
  [W] cobox_aGJ :: HTML ~ t_aCO
  t_aCO
  HTML
  Sym cobox_aGK
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aGK :: t_aCO
                                 ~ HTML [" a type equality [t_aCO]
                                                           ~
                                                           t_aBf " HTML.hs:64:13-14] (CTyEqCan)
Sneaky unification:
  Unifies: t_aCO := HTML
  Coercion: t_aCO ~ HTML
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aCO := HTML
setEvBind
  ev = cobox_aGK
  tm  = CO <HTML>_N
kickOutRewritable
  tv =  t_aCO
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
53[<C:0,F:0>] [W] cobox_aGK :: t_aCO ~ HTML: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCQ :: Doc ~ t_aBg [" a type equality Doc
                                                               ~
                                                               t_aBg " HTML.hs:64:18-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCQ :: Doc ~ t_aBg [" a type equality Doc
                                                                ~
                                                                t_aBg " HTML.hs:64:18-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCQ :: Doc ~ t_aBg [" a type equality Doc
                                                  ~
                                                  t_aBg " HTML.hs:64:18-25] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBg
can_eq_nc
  [W] cobox_aCQ :: Doc ~ t_aBg
  Doc
  Doc
  t_aBg
  t_aBg
can_eq_nc
  [W] cobox_aCQ :: Doc ~ t_aBg
  [String]
  Doc
  t_aBg
  t_aBg
canEqTyVar
  t_aBg
  [String]
  Is-swapped
Following bound tyvar t_aBg = Doc
newWantedEvVar/cache miss [W] cobox_aGL :: Doc ~ Doc
setEvBind
  ev = cobox_aCQ
  tm  = CO Sym cobox_aGL
rewriteEqEvidence
  [W] cobox_aCQ :: Doc ~ t_aBg
  Doc
  Doc
  Sym cobox_aGL
canEqTyVar2
  t_aBg
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aGL :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aGL :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aGM :: String ~ String
setEvBind
  ev = cobox_aGL
  tm  = CO [cobox_aGM]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGM :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGM :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGM :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGN :: Char ~ Char
setEvBind
  ev = cobox_aGM
  tm  = CO [cobox_aGN]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCR :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:64:24-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCR :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:64:24-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCR :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:64:24-25] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aCR :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aCR :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGO :: Char ~ Char
setEvBind
  ev = cobox_aCR
  tm  = CO [cobox_aGO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCT :: HTML ~ t_aBj [" a type equality HTML
                                                                ~
                                                                t_aBj " HTML.hs:54:9-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCT :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:54:9-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCT :: HTML ~ t_aBj [" a type equality HTML
                                                   ~
                                                   t_aBj " HTML.hs:54:9-31] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBj
can_eq_nc
  [W] cobox_aCT :: HTML ~ t_aBj
  HTML
  HTML
  t_aBj
  t_aBj
canEqTyVar
  t_aBj
  HTML
  Is-swapped
Following bound tyvar t_aBj = HTML
newWantedEvVar/cache miss [W] cobox_aGP :: HTML ~ HTML
setEvBind
  ev = cobox_aCT
  tm  = CO Sym cobox_aGP
rewriteEqEvidence
  [W] cobox_aCT :: HTML ~ t_aBj
  HTML
  HTML
  Sym cobox_aGP
canEqTyVar2
  t_aBj
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aGP :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGP
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCU :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML.hs:54:36-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCU :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:54:36-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCU :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML.hs:54:36-62] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aCU :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aCU
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCV :: t_aBs ~ Bool [" a type equality t_aBs
                                                                ~
                                                                Bool " HTML.hs:54:40-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCV :: t_aBs
                                 ~ Bool [" a type equality t_aBs
                                                           ~
                                                           Bool " HTML.hs:54:40-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCV :: t_aBs ~ Bool [" a type equality t_aBs
                                                   ~
                                                   Bool " HTML.hs:54:40-61] (CNonCanonical)
canEvNC:eq
  t_aBs
  Bool
can_eq_nc
  [W] cobox_aCV :: t_aBs ~ Bool
  t_aBs
  t_aBs
  Bool
  Bool
canEqTyVar
  t_aBs
  Bool
  Not-swapped
Following bound tyvar t_aBs = Bool
canEqTyVar2
  t_aBs
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aCV :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aCV
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCW :: [HTML]
                                ~ t_aBr [" a type equality [HTML]
                                                           ~
                                                           t_aBr " HTML.hs:54:58-61] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCW :: [HTML]
                                 ~ t_aBr [" a type equality [HTML]
                                                            ~
                                                            t_aBr " HTML.hs:54:58-61] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCW :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                     ~
                                                     t_aBr " HTML.hs:54:58-61] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aBr
can_eq_nc
  [W] cobox_aCW :: [HTML] ~ t_aBr
  [HTML]
  [HTML]
  t_aBr
  t_aBr
canEqTyVar
  t_aBr
  [HTML]
  Is-swapped
Following bound tyvar t_aBr = [HTML]
newWantedEvVar/cache miss [W] cobox_aGQ :: [HTML] ~ [HTML]
setEvBind
  ev = cobox_aCW
  tm  = CO Sym cobox_aGQ
rewriteEqEvidence
  [W] cobox_aCW :: [HTML] ~ t_aBr
  [HTML]
  [HTML]
  Sym cobox_aGQ
canEqTyVar2
  t_aBr
  [HTML]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aGQ :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aGR :: HTML ~ HTML
setEvBind
  ev = cobox_aGQ
  tm  = CO [cobox_aGR]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aGR :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aGR
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCX :: Doc ~ t_aBk [" a type equality Doc
                                                               ~
                                                               t_aBk " HTML.hs:(54,66)-(56,108)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCX :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:(54,66)-(56,108)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCX :: Doc ~ t_aBk [" a type equality Doc
                                                  ~
                                                  t_aBk " HTML.hs:(54,66)-(56,108)] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBk
can_eq_nc
  [W] cobox_aCX :: Doc ~ t_aBk
  Doc
  Doc
  t_aBk
  t_aBk
can_eq_nc
  [W] cobox_aCX :: Doc ~ t_aBk
  [String]
  Doc
  t_aBk
  t_aBk
canEqTyVar
  t_aBk
  [String]
  Is-swapped
Following bound tyvar t_aBk = Doc
newWantedEvVar/cache miss [W] cobox_aGS :: Doc ~ Doc
setEvBind
  ev = cobox_aCX
  tm  = CO Sym cobox_aGS
rewriteEqEvidence
  [W] cobox_aCX :: Doc ~ t_aBk
  Doc
  Doc
  Sym cobox_aGS
canEqTyVar2
  t_aBk
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aGS :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aGS :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aGT :: String ~ String
setEvBind
  ev = cobox_aGS
  tm  = CO [cobox_aGT]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGT :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGT :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGT :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGU :: Char ~ Char
setEvBind
  ev = cobox_aGT
  tm  = CO [cobox_aGU]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCY :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:(54,66)-(55,98)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCY :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(54,66)-(55,98)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCY :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:(54,66)-(55,98)] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aCY :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aCY :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aCY :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aGV :: String ~ String
setEvBind
  ev = cobox_aCY
  tm  = CO [cobox_aGV]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGV :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGV :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGV :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGW :: Char ~ Char
setEvBind
  ev = cobox_aGV
  tm  = CO [cobox_aGW]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGW :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGW
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aCZ :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:54:66-120] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aCZ :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-120] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aCZ :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:54:66-120] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aCZ :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aCZ :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aCZ :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aGX :: String ~ String
setEvBind
  ev = cobox_aCZ
  tm  = CO [cobox_aGX]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGX :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGX :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGX :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aGY :: Char ~ Char
setEvBind
  ev = cobox_aGX
  tm  = CO [cobox_aGY]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aGY :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aGY
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD0 :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:54:66-106] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD0 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-106] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD0 :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:54:66-106] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aD0 :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD0 :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD0 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aGZ :: String ~ String
setEvBind
  ev = cobox_aD0
  tm  = CO [cobox_aGZ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aGZ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aGZ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aGZ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aH0 :: Char ~ Char
setEvBind
  ev = cobox_aGZ
  tm  = CO [cobox_aH0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aH0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aH0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD1 :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:54:66-89] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD1 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-89] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD1 :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:54:66-89] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aD1 :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD1 :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD1 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aH1 :: String ~ String
setEvBind
  ev = cobox_aD1
  tm  = CO [cobox_aH1]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aH1 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aH1 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aH1 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aH2 :: Char ~ Char
setEvBind
  ev = cobox_aH1
  tm  = CO [cobox_aH2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aH2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aH2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD2 :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:54:66-74] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD2 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:66-74] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD2 :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:54:66-74] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aD2 :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD2 :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD2 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aH3 :: String ~ String
setEvBind
  ev = cobox_aD2
  tm  = CO [cobox_aH3]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aH3 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aH3 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aH3 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aH4 :: Char ~ Char
setEvBind
  ev = cobox_aH3
  tm  = CO [cobox_aH4]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aH4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aH4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD3 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:54:72-74] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD3 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:54:72-74] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD3 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:54:72-74] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aD3 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aD3 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aH5 :: Char ~ Char
setEvBind
  ev = cobox_aD3
  tm  = CO [cobox_aH5]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aH5 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aH5
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD4 :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:54:80-89] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD4 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:80-89] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD4 :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:54:80-89] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aD4 :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD4 :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD4 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aH6 :: String ~ String
setEvBind
  ev = cobox_aD4
  tm  = CO [cobox_aH6]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aH6 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aH6 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aH6 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aH7 :: Char ~ Char
setEvBind
  ev = cobox_aH6
  tm  = CO [cobox_aH7]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aH7 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aH7
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD5 :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:54:86-89] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD5 :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:54:86-89] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD5 :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:54:86-89] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aD5 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aD5 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aD5 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aH8 :: Char ~ Char
setEvBind
  ev = cobox_aD5
  tm  = CO [cobox_aH8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aH8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aH8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD6 :: t_aBo ~ Doc [" a type equality t_aBo
                                                               ~
                                                               Doc " HTML.hs:54:95-106] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD6 :: t_aBo ~ Doc [" a type equality t_aBo
                                                                ~
                                                                Doc " HTML.hs:54:95-106] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD6 :: t_aBo ~ Doc [" a type equality t_aBo
                                                  ~
                                                  Doc " HTML.hs:54:95-106] (CNonCanonical)
canEvNC:eq
  t_aBo
  Doc
can_eq_nc
  [W] cobox_aD6 :: t_aBo ~ Doc
  t_aBo
  t_aBo
  Doc
  Doc
can_eq_nc
  [W] cobox_aD6 :: t_aBo ~ Doc
  t_aBo
  t_aBo
  [String]
  Doc
canEqTyVar
  t_aBo
  [String]
  Not-swapped
Following bound tyvar t_aBo = Doc
canEqTyVar2
  t_aBo
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aD6 :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aD6 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aH9 :: String ~ String
setEvBind
  ev = cobox_aD6
  tm  = CO [cobox_aH9]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aH9 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aH9 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aH9 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHa :: Char ~ Char
setEvBind
  ev = cobox_aH9
  tm  = CO [cobox_aHa]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHa :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHa
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD7 :: [Attributen]
                                ~ t_aBn [" a type equality [Attributen]
                                                           ~
                                                           t_aBn " HTML.hs:54:104-106] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD7 :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:54:104-106] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD7 :: [Attributen]
                   ~ t_aBn [" a type equality [Attributen]
                                              ~
                                              t_aBn " HTML.hs:54:104-106] (CNonCanonical)
canEvNC:eq
  [Attributen]
  t_aBn
can_eq_nc
  [W] cobox_aD7 :: [Attributen] ~ t_aBn
  [Attributen]
  [Attributen]
  t_aBn
  t_aBn
canEqTyVar
  t_aBn
  [Attributen]
  Is-swapped
Following bound tyvar t_aBn = [Attributen]
newWantedEvVar/cache miss
  [W] cobox_aHb :: [Attributen] ~ [Attributen]
setEvBind
  ev = cobox_aD7
  tm  = CO Sym cobox_aHb
rewriteEqEvidence
  [W] cobox_aD7 :: [Attributen] ~ t_aBn
  [Attributen]
  [Attributen]
  Sym cobox_aHb
canEqTyVar2
  t_aBn
  [Attributen]
  Is-swapped
  [Attributen]
  <[Attributen]>_N
can_eq_nc
  [W] cobox_aHb :: [Attributen] ~ [Attributen]
  [Attributen]
  [Attributen]
  [Attributen]
  [Attributen]
newWantedEvVar/cache miss [W] cobox_aHc :: Attributen ~ Attributen
setEvBind
  ev = cobox_aHb
  tm  = CO [cobox_aHc]_N
canEvNC:eq
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aHc :: Attributen ~ Attributen
  Attributen
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aHc :: Attributen ~ Attributen
  String
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aHc :: Attributen ~ Attributen
  [Char]
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aHc :: Attributen ~ Attributen
  [Char]
  Attributen
  String
  Attributen
can_eq_nc
  [W] cobox_aHc :: Attributen ~ Attributen
  [Char]
  Attributen
  [Char]
  Attributen
newWantedEvVar/cache miss [W] cobox_aHd :: Char ~ Char
setEvBind
  ev = cobox_aHc
  tm  = CO [cobox_aHd]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHd :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHd
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD8 :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:54:112-120] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD8 :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:54:112-120] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD8 :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:54:112-120] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aD8 :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD8 :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aD8 :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHe :: String ~ String
setEvBind
  ev = cobox_aD8
  tm  = CO [cobox_aHe]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHe :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHe :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHe :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHf :: Char ~ Char
setEvBind
  ev = cobox_aHe
  tm  = CO [cobox_aHf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aD9 :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:54:118-120] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aD9 :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:54:118-120] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aD9 :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:54:118-120] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aD9 :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aD9 :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHg :: Char ~ Char
setEvBind
  ev = cobox_aD9
  tm  = CO [cobox_aHg]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHg :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHg
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDa :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:55:70-98] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDa :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:55:70-98] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDa :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:55:70-98] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDa :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDa :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDa :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHh :: String ~ String
setEvBind
  ev = cobox_aDa
  tm  = CO [cobox_aHh]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHh :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHh :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHh :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHi :: Char ~ Char
setEvBind
  ev = cobox_aHh
  tm  = CO [cobox_aHi]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHi :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHi
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDb :: t_aBg ~ Doc [" a type equality t_aBg
                                                               ~
                                                               Doc " HTML.hs:55:82-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDb :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:55:82-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDb :: t_aBg ~ Doc [" a type equality t_aBg
                                                  ~
                                                  Doc " HTML.hs:55:82-97] (CNonCanonical)
canEvNC:eq
  t_aBg
  Doc
can_eq_nc
  [W] cobox_aDb :: t_aBg ~ Doc
  t_aBg
  t_aBg
  Doc
  Doc
can_eq_nc
  [W] cobox_aDb :: t_aBg ~ Doc
  t_aBg
  t_aBg
  [String]
  Doc
canEqTyVar
  t_aBg
  [String]
  Not-swapped
Following bound tyvar t_aBg = Doc
canEqTyVar2
  t_aBg
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aDb :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aDb :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHj :: String ~ String
setEvBind
  ev = cobox_aDb
  tm  = CO [cobox_aHj]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHj :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHj :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHj :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHk :: Char ~ Char
setEvBind
  ev = cobox_aHj
  tm  = CO [cobox_aHk]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDc :: [HTML]
                                ~ t_aBf [" a type equality [HTML]
                                                           ~
                                                           t_aBf " HTML.hs:55:94-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDc :: [HTML]
                                 ~ t_aBf [" a type equality [HTML]
                                                            ~
                                                            t_aBf " HTML.hs:55:94-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDc :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                     ~
                                                     t_aBf " HTML.hs:55:94-97] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aBf
can_eq_nc
  [W] cobox_aDc :: [HTML] ~ t_aBf
  [HTML]
  [HTML]
  t_aBf
  t_aBf
canEqTyVar
  t_aBf
  [HTML]
  Is-swapped
Following bound tyvar t_aBf = [HTML]
newWantedEvVar/cache miss [W] cobox_aHl :: [HTML] ~ [HTML]
setEvBind
  ev = cobox_aDc
  tm  = CO Sym cobox_aHl
rewriteEqEvidence
  [W] cobox_aDc :: [HTML] ~ t_aBf
  [HTML]
  [HTML]
  Sym cobox_aHl
canEqTyVar2
  t_aBf
  [HTML]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aHl :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aHm :: HTML ~ HTML
setEvBind
  ev = cobox_aHl
  tm  = CO [cobox_aHm]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aHm :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aHm
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDd :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:56:70-108] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDd :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-108] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDd :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:56:70-108] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDd :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDd :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDd :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHn :: String ~ String
setEvBind
  ev = cobox_aDd
  tm  = CO [cobox_aHn]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHn :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHn :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHn :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHo :: Char ~ Char
setEvBind
  ev = cobox_aHn
  tm  = CO [cobox_aHo]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHo :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHo
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDe :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:56:70-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDe :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDe :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:56:70-94] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDe :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDe :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDe :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHp :: String ~ String
setEvBind
  ev = cobox_aDe
  tm  = CO [cobox_aHp]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHp :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHp :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHp :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHq :: Char ~ Char
setEvBind
  ev = cobox_aHp
  tm  = CO [cobox_aHq]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHq :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHq
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDf :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:56:70-79] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDf :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:70-79] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDf :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:56:70-79] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDf :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDf :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDf :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHr :: String ~ String
setEvBind
  ev = cobox_aDf
  tm  = CO [cobox_aHr]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHr :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHr :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHr :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHs :: Char ~ Char
setEvBind
  ev = cobox_aHr
  tm  = CO [cobox_aHs]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHs :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHs
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDg :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:56:76-79] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDg :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:56:76-79] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDg :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:56:76-79] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDg :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDg :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHt :: Char ~ Char
setEvBind
  ev = cobox_aDg
  tm  = CO [cobox_aHt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDh :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:56:85-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDh :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:85-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDh :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:56:85-94] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDh :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDh :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDh :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHu :: String ~ String
setEvBind
  ev = cobox_aDh
  tm  = CO [cobox_aHu]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHu :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHu :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHu :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHv :: Char ~ Char
setEvBind
  ev = cobox_aHu
  tm  = CO [cobox_aHv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDi :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:56:91-94] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDi :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:56:91-94] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDi :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:56:91-94] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aDi :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aDi :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aDi :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHw :: Char ~ Char
setEvBind
  ev = cobox_aDi
  tm  = CO [cobox_aHw]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDj :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:56:100-108] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDj :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:56:100-108] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDj :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:56:100-108] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDj :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDj :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDj :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHx :: String ~ String
setEvBind
  ev = cobox_aDj
  tm  = CO [cobox_aHx]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHx :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHx :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHx :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHy :: Char ~ Char
setEvBind
  ev = cobox_aHx
  tm  = CO [cobox_aHy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDk :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:56:106-108] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDk :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:56:106-108] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDk :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:56:106-108] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDk :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDk :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHz :: Char ~ Char
setEvBind
  ev = cobox_aDk
  tm  = CO [cobox_aHz]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDl :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML.hs:57:36-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDl :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:57:36-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDl :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML.hs:57:36-44] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aDl :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aDl
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDm :: Doc ~ t_aBk [" a type equality Doc
                                                               ~
                                                               t_aBk " HTML.hs:(57,48)-(58,113)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDm :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:(57,48)-(58,113)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDm :: Doc ~ t_aBk [" a type equality Doc
                                                  ~
                                                  t_aBk " HTML.hs:(57,48)-(58,113)] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBk
can_eq_nc
  [W] cobox_aDm :: Doc ~ t_aBk
  Doc
  Doc
  t_aBk
  t_aBk
can_eq_nc
  [W] cobox_aDm :: Doc ~ t_aBk
  [String]
  Doc
  t_aBk
  t_aBk
canEqTyVar
  t_aBk
  [String]
  Is-swapped
Following bound tyvar t_aBk = Doc
newWantedEvVar/cache miss [W] cobox_aHA :: Doc ~ Doc
setEvBind
  ev = cobox_aDm
  tm  = CO Sym cobox_aHA
rewriteEqEvidence
  [W] cobox_aDm :: Doc ~ t_aBk
  Doc
  Doc
  Sym cobox_aHA
canEqTyVar2
  t_aBk
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aHA :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aHA :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHB :: String ~ String
setEvBind
  ev = cobox_aHA
  tm  = CO [cobox_aHB]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHB :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHB :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHB :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHC :: Char ~ Char
setEvBind
  ev = cobox_aHB
  tm  = CO [cobox_aHC]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHC :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHC
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDn :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:(57,48)-(58,99)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDn :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,99)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDn :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:(57,48)-(58,99)] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDn :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDn :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDn :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHD :: String ~ String
setEvBind
  ev = cobox_aDn
  tm  = CO [cobox_aHD]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHD :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHD :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHD :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHE :: Char ~ Char
setEvBind
  ev = cobox_aHD
  tm  = CO [cobox_aHE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDo :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:(57,48)-(58,84)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDo :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,84)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDo :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:(57,48)-(58,84)] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDo :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDo :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDo :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHF :: String ~ String
setEvBind
  ev = cobox_aDo
  tm  = CO [cobox_aHF]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHF :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHF :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHF :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHG :: Char ~ Char
setEvBind
  ev = cobox_aHF
  tm  = CO [cobox_aHG]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHG :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHG
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDp :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:(57,48)-(58,69)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDp :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:(57,48)-(58,69)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDp :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:(57,48)-(58,69)] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDp :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDp :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDp :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHH :: String ~ String
setEvBind
  ev = cobox_aDp
  tm  = CO [cobox_aHH]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHH :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHH :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHH :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHI :: Char ~ Char
setEvBind
  ev = cobox_aHH
  tm  = CO [cobox_aHI]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHI :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHI
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDq :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:57:48-102] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDq :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-102] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDq :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:57:48-102] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDq :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDq :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDq :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHJ :: String ~ String
setEvBind
  ev = cobox_aDq
  tm  = CO [cobox_aHJ]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHJ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHJ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHJ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHK :: Char ~ Char
setEvBind
  ev = cobox_aHJ
  tm  = CO [cobox_aHK]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDr :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:57:48-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDr :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDr :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:57:48-88] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDr :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDr :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDr :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHL :: String ~ String
setEvBind
  ev = cobox_aDr
  tm  = CO [cobox_aHL]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHL :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHL :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHL :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHM :: Char ~ Char
setEvBind
  ev = cobox_aHL
  tm  = CO [cobox_aHM]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHM :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHM
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDs :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:57:48-71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDs :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDs :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:57:48-71] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDs :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDs :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDs :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHN :: String ~ String
setEvBind
  ev = cobox_aDs
  tm  = CO [cobox_aHN]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHN :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHN :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHN :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHO :: Char ~ Char
setEvBind
  ev = cobox_aHN
  tm  = CO [cobox_aHO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDt :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:57:48-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDt :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:48-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDt :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:57:48-56] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDt :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDt :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDt :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHP :: String ~ String
setEvBind
  ev = cobox_aDt
  tm  = CO [cobox_aHP]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHP :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHP :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHP :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHQ :: Char ~ Char
setEvBind
  ev = cobox_aHP
  tm  = CO [cobox_aHQ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHQ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHQ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDu :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:57:54-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDu :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:57:54-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDu :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:57:54-56] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDu :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDu :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHR :: Char ~ Char
setEvBind
  ev = cobox_aDu
  tm  = CO [cobox_aHR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDv :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:57:62-71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDv :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:62-71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDv :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:57:62-71] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDv :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDv :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDv :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHS :: String ~ String
setEvBind
  ev = cobox_aDv
  tm  = CO [cobox_aHS]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHS :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHS :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHS :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHT :: Char ~ Char
setEvBind
  ev = cobox_aHS
  tm  = CO [cobox_aHT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDw :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:57:68-71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDw :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:57:68-71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDw :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:57:68-71] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aDw :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aDw :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aDw :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHU :: Char ~ Char
setEvBind
  ev = cobox_aDw
  tm  = CO [cobox_aHU]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDx :: t_aBo ~ Doc [" a type equality t_aBo
                                                               ~
                                                               Doc " HTML.hs:57:77-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDx :: t_aBo ~ Doc [" a type equality t_aBo
                                                                ~
                                                                Doc " HTML.hs:57:77-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDx :: t_aBo ~ Doc [" a type equality t_aBo
                                                  ~
                                                  Doc " HTML.hs:57:77-88] (CNonCanonical)
canEvNC:eq
  t_aBo
  Doc
can_eq_nc
  [W] cobox_aDx :: t_aBo ~ Doc
  t_aBo
  t_aBo
  Doc
  Doc
can_eq_nc
  [W] cobox_aDx :: t_aBo ~ Doc
  t_aBo
  t_aBo
  [String]
  Doc
canEqTyVar
  t_aBo
  [String]
  Not-swapped
Following bound tyvar t_aBo = Doc
canEqTyVar2
  t_aBo
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aDx :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aDx :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aHV :: String ~ String
setEvBind
  ev = cobox_aDx
  tm  = CO [cobox_aHV]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aHV :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aHV :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aHV :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aHW :: Char ~ Char
setEvBind
  ev = cobox_aHV
  tm  = CO [cobox_aHW]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHW :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHW
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDy :: [Attributen]
                                ~ t_aBn [" a type equality [Attributen]
                                                           ~
                                                           t_aBn " HTML.hs:57:86-88] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDy :: [Attributen]
                                 ~ t_aBn [" a type equality [Attributen]
                                                            ~
                                                            t_aBn " HTML.hs:57:86-88] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDy :: [Attributen]
                   ~ t_aBn [" a type equality [Attributen]
                                              ~
                                              t_aBn " HTML.hs:57:86-88] (CNonCanonical)
canEvNC:eq
  [Attributen]
  t_aBn
can_eq_nc
  [W] cobox_aDy :: [Attributen] ~ t_aBn
  [Attributen]
  [Attributen]
  t_aBn
  t_aBn
canEqTyVar
  t_aBn
  [Attributen]
  Is-swapped
Following bound tyvar t_aBn = [Attributen]
newWantedEvVar/cache miss
  [W] cobox_aHX :: [Attributen] ~ [Attributen]
setEvBind
  ev = cobox_aDy
  tm  = CO Sym cobox_aHX
rewriteEqEvidence
  [W] cobox_aDy :: [Attributen] ~ t_aBn
  [Attributen]
  [Attributen]
  Sym cobox_aHX
canEqTyVar2
  t_aBn
  [Attributen]
  Is-swapped
  [Attributen]
  <[Attributen]>_N
can_eq_nc
  [W] cobox_aHX :: [Attributen] ~ [Attributen]
  [Attributen]
  [Attributen]
  [Attributen]
  [Attributen]
newWantedEvVar/cache miss [W] cobox_aHY :: Attributen ~ Attributen
setEvBind
  ev = cobox_aHX
  tm  = CO [cobox_aHY]_N
canEvNC:eq
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aHY :: Attributen ~ Attributen
  Attributen
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aHY :: Attributen ~ Attributen
  String
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aHY :: Attributen ~ Attributen
  [Char]
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aHY :: Attributen ~ Attributen
  [Char]
  Attributen
  String
  Attributen
can_eq_nc
  [W] cobox_aHY :: Attributen ~ Attributen
  [Char]
  Attributen
  [Char]
  Attributen
newWantedEvVar/cache miss [W] cobox_aHZ :: Char ~ Char
setEvBind
  ev = cobox_aHY
  tm  = CO [cobox_aHZ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aHZ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aHZ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDz :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:57:94-102] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDz :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:57:94-102] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDz :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:57:94-102] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDz :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDz :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDz :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aI0 :: String ~ String
setEvBind
  ev = cobox_aDz
  tm  = CO [cobox_aI0]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aI0 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aI0 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aI0 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aI1 :: Char ~ Char
setEvBind
  ev = cobox_aI0
  tm  = CO [cobox_aI1]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aI1 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aI1
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDA :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:57:100-102] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDA :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:57:100-102] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDA :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:57:100-102] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDA :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDA :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aI2 :: Char ~ Char
setEvBind
  ev = cobox_aDA
  tm  = CO [cobox_aI2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aI2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aI2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDB :: t_aBg ~ Doc [" a type equality t_aBg
                                                               ~
                                                               Doc " HTML.hs:58:53-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDB :: t_aBg ~ Doc [" a type equality t_aBg
                                                                ~
                                                                Doc " HTML.hs:58:53-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDB :: t_aBg ~ Doc [" a type equality t_aBg
                                                  ~
                                                  Doc " HTML.hs:58:53-68] (CNonCanonical)
canEvNC:eq
  t_aBg
  Doc
can_eq_nc
  [W] cobox_aDB :: t_aBg ~ Doc
  t_aBg
  t_aBg
  Doc
  Doc
can_eq_nc
  [W] cobox_aDB :: t_aBg ~ Doc
  t_aBg
  t_aBg
  [String]
  Doc
canEqTyVar
  t_aBg
  [String]
  Not-swapped
Following bound tyvar t_aBg = Doc
canEqTyVar2
  t_aBg
  [String]
  Not-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aDB :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aDB :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aI3 :: String ~ String
setEvBind
  ev = cobox_aDB
  tm  = CO [cobox_aI3]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aI3 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aI3 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aI3 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aI4 :: Char ~ Char
setEvBind
  ev = cobox_aI3
  tm  = CO [cobox_aI4]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aI4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aI4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDC :: [HTML]
                                ~ t_aBf [" a type equality [HTML]
                                                           ~
                                                           t_aBf " HTML.hs:58:65-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDC :: [HTML]
                                 ~ t_aBf [" a type equality [HTML]
                                                            ~
                                                            t_aBf " HTML.hs:58:65-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDC :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                     ~
                                                     t_aBf " HTML.hs:58:65-68] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aBf
can_eq_nc
  [W] cobox_aDC :: [HTML] ~ t_aBf
  [HTML]
  [HTML]
  t_aBf
  t_aBf
canEqTyVar
  t_aBf
  [HTML]
  Is-swapped
Following bound tyvar t_aBf = [HTML]
newWantedEvVar/cache miss [W] cobox_aI5 :: [HTML] ~ [HTML]
setEvBind
  ev = cobox_aDC
  tm  = CO Sym cobox_aI5
rewriteEqEvidence
  [W] cobox_aDC :: [HTML] ~ t_aBf
  [HTML]
  [HTML]
  Sym cobox_aI5
canEqTyVar2
  t_aBf
  [HTML]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aI5 :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aI6 :: HTML ~ HTML
setEvBind
  ev = cobox_aI5
  tm  = CO [cobox_aI6]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aI6 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aI6
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDD :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:58:75-84] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDD :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:75-84] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDD :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:58:75-84] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDD :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDD :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDD :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aI7 :: String ~ String
setEvBind
  ev = cobox_aDD
  tm  = CO [cobox_aI7]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aI7 :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aI7 :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aI7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aI8 :: Char ~ Char
setEvBind
  ev = cobox_aI7
  tm  = CO [cobox_aI8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aI8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aI8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDE :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:58:81-84] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDE :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:58:81-84] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDE :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:58:81-84] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDE :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDE :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aI9 :: Char ~ Char
setEvBind
  ev = cobox_aDE
  tm  = CO [cobox_aI9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aI9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aI9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDF :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:58:90-99] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDF :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:90-99] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDF :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:58:90-99] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDF :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDF :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDF :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIa :: String ~ String
setEvBind
  ev = cobox_aDF
  tm  = CO [cobox_aIa]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIa :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIa :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIa :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIb :: Char ~ Char
setEvBind
  ev = cobox_aIa
  tm  = CO [cobox_aIb]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIb :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIb
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDG :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:58:96-99] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDG :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:58:96-99] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDG :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:58:96-99] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aDG :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aDG :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aDG :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIc :: Char ~ Char
setEvBind
  ev = cobox_aDG
  tm  = CO [cobox_aIc]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIc :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIc
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDH :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:58:105-113] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDH :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:58:105-113] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDH :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:58:105-113] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDH :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDH :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDH :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aId :: String ~ String
setEvBind
  ev = cobox_aDH
  tm  = CO [cobox_aId]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aId :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aId :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aId :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIe :: Char ~ Char
setEvBind
  ev = cobox_aId
  tm  = CO [cobox_aIe]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIe :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIe
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDI :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:58:111-113] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDI :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:58:111-113] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDI :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:58:111-113] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDI :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDI :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIf :: Char ~ Char
setEvBind
  ev = cobox_aDI
  tm  = CO [cobox_aIf]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIf :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIf
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDJ :: HTML ~ t_aBj [" a type equality HTML
                                                                ~
                                                                t_aBj " HTML.hs:59:9-26] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDJ :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:59:9-26] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDJ :: HTML ~ t_aBj [" a type equality HTML
                                                   ~
                                                   t_aBj " HTML.hs:59:9-26] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBj
can_eq_nc
  [W] cobox_aDJ :: HTML ~ t_aBj
  HTML
  HTML
  t_aBj
  t_aBj
canEqTyVar
  t_aBj
  HTML
  Is-swapped
Following bound tyvar t_aBj = HTML
newWantedEvVar/cache miss [W] cobox_aIg :: HTML ~ HTML
setEvBind
  ev = cobox_aDJ
  tm  = CO Sym cobox_aIg
rewriteEqEvidence
  [W] cobox_aDJ :: HTML ~ t_aBj
  HTML
  HTML
  Sym cobox_aIg
canEqTyVar2
  t_aBj
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aIg :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aIg
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDK :: Doc ~ t_aBk [" a type equality Doc
                                                               ~
                                                               t_aBk " HTML.hs:59:31-92] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDK :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:59:31-92] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDK :: Doc ~ t_aBk [" a type equality Doc
                                                  ~
                                                  t_aBk " HTML.hs:59:31-92] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBk
can_eq_nc
  [W] cobox_aDK :: Doc ~ t_aBk
  Doc
  Doc
  t_aBk
  t_aBk
can_eq_nc
  [W] cobox_aDK :: Doc ~ t_aBk
  [String]
  Doc
  t_aBk
  t_aBk
canEqTyVar
  t_aBk
  [String]
  Is-swapped
Following bound tyvar t_aBk = Doc
newWantedEvVar/cache miss [W] cobox_aIh :: Doc ~ Doc
setEvBind
  ev = cobox_aDK
  tm  = CO Sym cobox_aIh
rewriteEqEvidence
  [W] cobox_aDK :: Doc ~ t_aBk
  Doc
  Doc
  Sym cobox_aIh
canEqTyVar2
  t_aBk
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aIh :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aIh :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIi :: String ~ String
setEvBind
  ev = cobox_aIh
  tm  = CO [cobox_aIi]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIi :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIi :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIi :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIj :: Char ~ Char
setEvBind
  ev = cobox_aIi
  tm  = CO [cobox_aIj]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIj :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIj
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDL :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:59:31-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDL :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDL :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:59:31-78] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDL :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDL :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDL :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIk :: String ~ String
setEvBind
  ev = cobox_aDL
  tm  = CO [cobox_aIk]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIk :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIk :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIk :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIl :: Char ~ Char
setEvBind
  ev = cobox_aIk
  tm  = CO [cobox_aIl]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIl :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIl
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDM :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:59:31-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDM :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDM :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:59:31-54] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDM :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDM :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDM :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIm :: String ~ String
setEvBind
  ev = cobox_aDM
  tm  = CO [cobox_aIm]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIm :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIm :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIm :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIn :: Char ~ Char
setEvBind
  ev = cobox_aIm
  tm  = CO [cobox_aIn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDN :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:59:31-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDN :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:31-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDN :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:59:31-39] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDN :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDN :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDN :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIo :: String ~ String
setEvBind
  ev = cobox_aDN
  tm  = CO [cobox_aIo]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIo :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIo :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIo :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIp :: Char ~ Char
setEvBind
  ev = cobox_aIo
  tm  = CO [cobox_aIp]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIp :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIp
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDO :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:59:37-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDO :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:59:37-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDO :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:59:37-39] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDO :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDO :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIq :: Char ~ Char
setEvBind
  ev = cobox_aDO
  tm  = CO [cobox_aIq]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIq :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIq
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDP :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:59:45-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDP :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:45-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDP :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:59:45-54] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDP :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDP :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDP :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIr :: String ~ String
setEvBind
  ev = cobox_aDP
  tm  = CO [cobox_aIr]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIr :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIr :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIr :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIs :: Char ~ Char
setEvBind
  ev = cobox_aIr
  tm  = CO [cobox_aIs]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIs :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIs
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDQ :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:59:51-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDQ :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:59:51-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDQ :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:59:51-54] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aDQ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aDQ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aDQ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIt :: Char ~ Char
setEvBind
  ev = cobox_aDQ
  tm  = CO [cobox_aIt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDR :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:59:60-78] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDR :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:60-78] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDR :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:59:60-78] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDR :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDR :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDR :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIu :: String ~ String
setEvBind
  ev = cobox_aDR
  tm  = CO [cobox_aIu]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIu :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIu :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIu :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIv :: Char ~ Char
setEvBind
  ev = cobox_aIu
  tm  = CO [cobox_aIv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDS :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:59:67-77] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDS :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:59:67-77] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDS :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:59:67-77] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aDS :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aDS :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aDS :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIw :: Char ~ Char
setEvBind
  ev = cobox_aDS
  tm  = CO [cobox_aIw]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDT :: [Attributen]
                                ~ [String] [" a type equality [Attributen]
                                                              ~
                                                              [String] " HTML.hs:59:75-77] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDT :: [Attributen]
                                 ~ [String] [" a type equality [Attributen]
                                                               ~
                                                               [String] " HTML.hs:59:75-77] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDT :: [Attributen]
                   ~ [String] [" a type equality [Attributen]
                                                 ~
                                                 [String] " HTML.hs:59:75-77] (CNonCanonical)
canEvNC:eq
  [Attributen]
  [String]
can_eq_nc
  [W] cobox_aDT :: [Attributen] ~ [String]
  [Attributen]
  [Attributen]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aIx :: Attributen ~ String
setEvBind
  ev = cobox_aDT
  tm  = CO [cobox_aIx]_N
canEvNC:eq
  Attributen
  String
can_eq_nc
  [W] cobox_aIx :: Attributen ~ String
  Attributen
  Attributen
  String
  String
can_eq_nc
  [W] cobox_aIx :: Attributen ~ String
  String
  Attributen
  String
  String
can_eq_nc
  [W] cobox_aIx :: Attributen ~ String
  [Char]
  Attributen
  String
  String
can_eq_nc
  [W] cobox_aIx :: Attributen ~ String
  [Char]
  Attributen
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIy :: Char ~ Char
setEvBind
  ev = cobox_aIx
  tm  = CO [cobox_aIy]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIy :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIy
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDU :: Doc ~ Doc [" a type equality Doc
                                                             ~
                                                             Doc " HTML.hs:59:84-92] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDU :: Doc ~ Doc [" a type equality Doc
                                                              ~
                                                              Doc " HTML.hs:59:84-92] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDU :: Doc ~ Doc [" a type equality Doc
                                                ~
                                                Doc " HTML.hs:59:84-92] (CNonCanonical)
canEvNC:eq
  Doc
  Doc
can_eq_nc
  [W] cobox_aDU :: Doc ~ Doc
  Doc
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDU :: Doc ~ Doc
  [String]
  Doc
  Doc
  Doc
can_eq_nc
  [W] cobox_aDU :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIz :: String ~ String
setEvBind
  ev = cobox_aDU
  tm  = CO [cobox_aIz]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIz :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIz :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIz :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIA :: Char ~ Char
setEvBind
  ev = cobox_aIz
  tm  = CO [cobox_aIA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDV :: [Char]
                                ~ String [" a type equality [Char]
                                                            ~
                                                            String " HTML.hs:59:90-92] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDV :: [Char]
                                 ~ String [" a type equality [Char]
                                                             ~
                                                             String " HTML.hs:59:90-92] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDV :: [Char] ~ String [" a type equality [Char]
                                                      ~
                                                      String " HTML.hs:59:90-92] (CNonCanonical)
canEvNC:eq
  [Char]
  String
can_eq_nc
  [W] cobox_aDV :: [Char] ~ String
  [Char]
  [Char]
  String
  String
can_eq_nc
  [W] cobox_aDV :: [Char] ~ String
  [Char]
  [Char]
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIB :: Char ~ Char
setEvBind
  ev = cobox_aDV
  tm  = CO [cobox_aIB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDW :: HTML ~ t_aBj [" a type equality HTML
                                                                ~
                                                                t_aBj " HTML.hs:60:9-21] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDW :: HTML ~ t_aBj [" a type equality HTML
                                                                 ~
                                                                 t_aBj " HTML.hs:60:9-21] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDW :: HTML ~ t_aBj [" a type equality HTML
                                                   ~
                                                   t_aBj " HTML.hs:60:9-21] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBj
can_eq_nc
  [W] cobox_aDW :: HTML ~ t_aBj
  HTML
  HTML
  t_aBj
  t_aBj
canEqTyVar
  t_aBj
  HTML
  Is-swapped
Following bound tyvar t_aBj = HTML
newWantedEvVar/cache miss [W] cobox_aIC :: HTML ~ HTML
setEvBind
  ev = cobox_aDW
  tm  = CO Sym cobox_aIC
rewriteEqEvidence
  [W] cobox_aDW :: HTML ~ t_aBj
  HTML
  HTML
  Sym cobox_aIC
canEqTyVar2
  t_aBj
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aIC :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aIC
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDX :: Doc ~ t_aBk [" a type equality Doc
                                                               ~
                                                               t_aBk " HTML.hs:60:26-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDX :: Doc ~ t_aBk [" a type equality Doc
                                                                ~
                                                                t_aBk " HTML.hs:60:26-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDX :: Doc ~ t_aBk [" a type equality Doc
                                                  ~
                                                  t_aBk " HTML.hs:60:26-38] (CNonCanonical)
canEvNC:eq
  Doc
  t_aBk
can_eq_nc
  [W] cobox_aDX :: Doc ~ t_aBk
  Doc
  Doc
  t_aBk
  t_aBk
can_eq_nc
  [W] cobox_aDX :: Doc ~ t_aBk
  [String]
  Doc
  t_aBk
  t_aBk
canEqTyVar
  t_aBk
  [String]
  Is-swapped
Following bound tyvar t_aBk = Doc
newWantedEvVar/cache miss [W] cobox_aID :: Doc ~ Doc
setEvBind
  ev = cobox_aDX
  tm  = CO Sym cobox_aID
rewriteEqEvidence
  [W] cobox_aDX :: Doc ~ t_aBk
  Doc
  Doc
  Sym cobox_aID
canEqTyVar2
  t_aBk
  [String]
  Is-swapped
  Doc
  <Doc>_N
can_eq_nc
  [W] cobox_aID :: Doc ~ Doc
  Doc
  Doc
  [String]
  Doc
can_eq_nc
  [W] cobox_aID :: Doc ~ Doc
  [String]
  Doc
  [String]
  Doc
newWantedEvVar/cache miss [W] cobox_aIE :: String ~ String
setEvBind
  ev = cobox_aID
  tm  = CO [cobox_aIE]_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aIE :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aIE :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aIE :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIF :: Char ~ Char
setEvBind
  ev = cobox_aIE
  tm  = CO [cobox_aIF]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIF :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIF
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aDY :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:60:32-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aDY :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:60:32-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aDY :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:60:32-38] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aDY :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aDY :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aDY :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIG :: Char ~ Char
setEvBind
  ev = cobox_aDY
  tm  = CO [cobox_aIG]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIG :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIG
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE0 :: HTML ~ t_aBz [" a type equality HTML
                                                                ~
                                                                t_aBz " HTML.hs:36:9-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE0 :: HTML ~ t_aBz [" a type equality HTML
                                                                 ~
                                                                 t_aBz " HTML.hs:36:9-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE0 :: HTML ~ t_aBz [" a type equality HTML
                                                   ~
                                                   t_aBz " HTML.hs:36:9-23] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBz
can_eq_nc
  [W] cobox_aE0 :: HTML ~ t_aBz
  HTML
  HTML
  t_aBz
  t_aBz
canEqTyVar
  t_aBz
  HTML
  Is-swapped
Following bound tyvar t_aBz = HTML
newWantedEvVar/cache miss [W] cobox_aIH :: HTML ~ HTML
setEvBind
  ev = cobox_aE0
  tm  = CO Sym cobox_aIH
rewriteEqEvidence
  [W] cobox_aE0 :: HTML ~ t_aBz
  HTML
  HTML
  Sym cobox_aIH
canEqTyVar2
  t_aBz
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aIH :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aIH
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE1 :: t_aBs
                                ~ t_aBA [" a type equality t_aBs
                                                           ~
                                                           t_aBA " HTML.hs:36:28-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE1 :: t_aBs
                                 ~ t_aBA [" a type equality t_aBs
                                                            ~
                                                            t_aBA " HTML.hs:36:28-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE1 :: t_aBs ~ t_aBA [" a type equality t_aBs
                                                    ~
                                                    t_aBA " HTML.hs:36:28-46] (CNonCanonical)
canEvNC:eq
  t_aBs
  t_aBA
can_eq_nc
  [W] cobox_aE1 :: t_aBs ~ t_aBA
  t_aBs
  t_aBs
  t_aBA
  t_aBA
canEqTyVar
  t_aBs
  t_aBA
  Not-swapped
Following bound tyvar t_aBs = Bool
canEqTyVar2
  t_aBs
  t_aBA
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aE1 :: Bool ~ t_aBA
  Bool
  Bool
  t_aBA
  t_aBA
canEqTyVar
  t_aBA
  Bool
  Is-swapped
Following bound tyvar t_aBA = Bool
newWantedEvVar/cache miss [W] cobox_aII :: Bool ~ Bool
setEvBind
  ev = cobox_aE1
  tm  = CO Sym cobox_aII
rewriteEqEvidence
  [W] cobox_aE1 :: Bool ~ t_aBA
  Bool
  Bool
  Sym cobox_aII
canEqTyVar2
  t_aBA
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aII :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aII
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE2 :: [HTML]
                                ~ t_aBr [" a type equality [HTML]
                                                           ~
                                                           t_aBr " HTML.hs:36:46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE2 :: [HTML]
                                 ~ t_aBr [" a type equality [HTML]
                                                            ~
                                                            t_aBr " HTML.hs:36:46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE2 :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                     ~
                                                     t_aBr " HTML.hs:36:46] (CNonCanonical)
canEvNC:eq
  [HTML]
  t_aBr
can_eq_nc
  [W] cobox_aE2 :: [HTML] ~ t_aBr
  [HTML]
  [HTML]
  t_aBr
  t_aBr
canEqTyVar
  t_aBr
  [HTML]
  Is-swapped
Following bound tyvar t_aBr = [HTML]
newWantedEvVar/cache miss [W] cobox_aIJ :: [HTML] ~ [HTML]
setEvBind
  ev = cobox_aE2
  tm  = CO Sym cobox_aIJ
rewriteEqEvidence
  [W] cobox_aE2 :: [HTML] ~ t_aBr
  [HTML]
  [HTML]
  Sym cobox_aIJ
canEqTyVar2
  t_aBr
  [HTML]
  Is-swapped
  [HTML]
  <[HTML]>_N
can_eq_nc
  [W] cobox_aIJ :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aIK :: HTML ~ HTML
setEvBind
  ev = cobox_aIJ
  tm  = CO [cobox_aIK]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aIK :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aIK
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE3 :: Bool ~ t_aBA [" a type equality Bool
                                                                ~
                                                                t_aBA " HTML.hs:37:12-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE3 :: Bool ~ t_aBA [" a type equality Bool
                                                                 ~
                                                                 t_aBA " HTML.hs:37:12-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE3 :: Bool ~ t_aBA [" a type equality Bool
                                                   ~
                                                   t_aBA " HTML.hs:37:12-15] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBA
can_eq_nc
  [W] cobox_aE3 :: Bool ~ t_aBA
  Bool
  Bool
  t_aBA
  t_aBA
canEqTyVar
  t_aBA
  Bool
  Is-swapped
Following bound tyvar t_aBA = Bool
newWantedEvVar/cache miss [W] cobox_aIL :: Bool ~ Bool
setEvBind
  ev = cobox_aE3
  tm  = CO Sym cobox_aIL
rewriteEqEvidence
  [W] cobox_aE3 :: Bool ~ t_aBA
  Bool
  Bool
  Sym cobox_aIL
canEqTyVar2
  t_aBA
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aIL :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aIL
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                ~
                                                                t_aC3 " HTML.hs:17:13-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:17:13-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE5 :: HTML ~ t_aC3 [" a type equality HTML
                                                   ~
                                                   t_aC3 " HTML.hs:17:13-30] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC3
can_eq_nc
  [W] cobox_aE5 :: HTML ~ t_aC3
  HTML
  HTML
  t_aC3
  t_aC3
canEqTyVar
  t_aC3
  HTML
  Is-swapped
Following bound tyvar t_aC3 = HTML
newWantedEvVar/cache miss [W] cobox_aIM :: HTML ~ HTML
setEvBind
  ev = cobox_aE5
  tm  = CO Sym cobox_aIM
rewriteEqEvidence
  [W] cobox_aE5 :: HTML ~ t_aC3
  HTML
  HTML
  Sym cobox_aIM
canEqTyVar2
  t_aC3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aIM :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aIM
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE6 :: String
                                ~ t_aC4 [" a type equality String
                                                           ~
                                                           t_aC4 " HTML.hs:17:35-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE6 :: String
                                 ~ t_aC4 [" a type equality String
                                                            ~
                                                            t_aC4 " HTML.hs:17:35-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE6 :: String ~ t_aC4 [" a type equality String
                                                     ~
                                                     t_aC4 " HTML.hs:17:35-38] (CNonCanonical)
canEvNC:eq
  String
  t_aC4
can_eq_nc
  [W] cobox_aE6 :: String ~ t_aC4
  String
  String
  t_aC4
  t_aC4
can_eq_nc
  [W] cobox_aE6 :: String ~ t_aC4
  [Char]
  String
  t_aC4
  t_aC4
canEqTyVar
  t_aC4
  [Char]
  Is-swapped
Following bound tyvar t_aC4 = String
newWantedEvVar/cache miss [W] cobox_aIN :: String ~ String
setEvBind
  ev = cobox_aE6
  tm  = CO Sym cobox_aIN
rewriteEqEvidence
  [W] cobox_aE6 :: String ~ t_aC4
  String
  String
  Sym cobox_aIN
canEqTyVar2
  t_aC4
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aIN :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aIN :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIO :: Char ~ Char
setEvBind
  ev = cobox_aIN
  tm  = CO [cobox_aIO]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIO :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIO
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE7 :: HTML ~ t_aC3 [" a type equality HTML
                                                                ~
                                                                t_aC3 " HTML.hs:18:13-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE7 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:18:13-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE7 :: HTML ~ t_aC3 [" a type equality HTML
                                                   ~
                                                   t_aC3 " HTML.hs:18:13-28] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC3
can_eq_nc
  [W] cobox_aE7 :: HTML ~ t_aC3
  HTML
  HTML
  t_aC3
  t_aC3
canEqTyVar
  t_aC3
  HTML
  Is-swapped
Following bound tyvar t_aC3 = HTML
newWantedEvVar/cache miss [W] cobox_aIP :: HTML ~ HTML
setEvBind
  ev = cobox_aE7
  tm  = CO Sym cobox_aIP
rewriteEqEvidence
  [W] cobox_aE7 :: HTML ~ t_aC3
  HTML
  HTML
  Sym cobox_aIP
canEqTyVar2
  t_aC3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aIP :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aIP
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE8 :: String
                                ~ t_aC4 [" a type equality String
                                                           ~
                                                           t_aC4 " HTML.hs:18:33-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE8 :: String
                                 ~ t_aC4 [" a type equality String
                                                            ~
                                                            t_aC4 " HTML.hs:18:33-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE8 :: String ~ t_aC4 [" a type equality String
                                                     ~
                                                     t_aC4 " HTML.hs:18:33-36] (CNonCanonical)
canEvNC:eq
  String
  t_aC4
can_eq_nc
  [W] cobox_aE8 :: String ~ t_aC4
  String
  String
  t_aC4
  t_aC4
can_eq_nc
  [W] cobox_aE8 :: String ~ t_aC4
  [Char]
  String
  t_aC4
  t_aC4
canEqTyVar
  t_aC4
  [Char]
  Is-swapped
Following bound tyvar t_aC4 = String
newWantedEvVar/cache miss [W] cobox_aIQ :: String ~ String
setEvBind
  ev = cobox_aE8
  tm  = CO Sym cobox_aIQ
rewriteEqEvidence
  [W] cobox_aE8 :: String ~ t_aC4
  String
  String
  Sym cobox_aIQ
canEqTyVar2
  t_aC4
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aIQ :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aIQ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aIR :: Char ~ Char
setEvBind
  ev = cobox_aIQ
  tm  = CO [cobox_aIR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aE9 :: HTML ~ t_aC3 [" a type equality HTML
                                                                ~
                                                                t_aC3 " HTML.hs:19:13-19] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aE9 :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:19:13-19] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aE9 :: HTML ~ t_aC3 [" a type equality HTML
                                                   ~
                                                   t_aC3 " HTML.hs:19:13-19] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC3
can_eq_nc
  [W] cobox_aE9 :: HTML ~ t_aC3
  HTML
  HTML
  t_aC3
  t_aC3
canEqTyVar
  t_aC3
  HTML
  Is-swapped
Following bound tyvar t_aC3 = HTML
newWantedEvVar/cache miss [W] cobox_aIS :: HTML ~ HTML
setEvBind
  ev = cobox_aE9
  tm  = CO Sym cobox_aIS
rewriteEqEvidence
  [W] cobox_aE9 :: HTML ~ t_aC3
  HTML
  HTML
  Sym cobox_aIS
canEqTyVar2
  t_aC3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aIS :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aIS
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEa :: [Char]
                                ~ t_aC4 [" a type equality [Char]
                                                           ~
                                                           t_aC4 " HTML.hs:19:24-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEa :: [Char]
                                 ~ t_aC4 [" a type equality [Char]
                                                            ~
                                                            t_aC4 " HTML.hs:19:24-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEa :: [Char] ~ t_aC4 [" a type equality [Char]
                                                     ~
                                                     t_aC4 " HTML.hs:19:24-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aC4
can_eq_nc
  [W] cobox_aEa :: [Char] ~ t_aC4
  [Char]
  [Char]
  t_aC4
  t_aC4
canEqTyVar
  t_aC4
  [Char]
  Is-swapped
Following bound tyvar t_aC4 = String
newWantedEvVar/cache miss [W] cobox_aIT :: String ~ [Char]
setEvBind
  ev = cobox_aEa
  tm  = CO Sym cobox_aIT
rewriteEqEvidence
  [W] cobox_aEa :: [Char] ~ t_aC4
  String
  [Char]
  Sym cobox_aIT
canEqTyVar2
  t_aC4
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aIT :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_aIT :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_aIU :: Char ~ Char
setEvBind
  ev = cobox_aIT
  tm  = CO [cobox_aIU]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aIU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aIU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEd :: a_aEc
                                ~ (t_aC7 -> t_aC8 -> t_aC9) [" a type equality a_aEc
                                                                               ~
                                                                               t_aC7
                                                                               -> t_aC8
                                                                               -> t_aC9 " HTML.hs:5:12-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEd :: a_aEc
                                 ~ (t_aC7 -> t_aC8 -> t_aC9) [" a type equality a_aEc
                                                                                ~
                                                                                t_aC7
                                                                                -> t_aC8
                                                                                -> t_aC9 " HTML.hs:5:12-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEd :: a_aEc
                   ~ (t_aC7 -> t_aC8 -> t_aC9) [" a type equality a_aEc
                                                                  ~
                                                                  t_aC7
                                                                  -> t_aC8
                                                                  -> t_aC9 " HTML.hs:5:12-20] (CNonCanonical)
canEvNC:eq
  a_aEc
  t_aC7 -> t_aC8 -> t_aC9
can_eq_nc
  [W] cobox_aEd :: a_aEc ~ (t_aC7 -> t_aC8 -> t_aC9)
  a_aEc
  a_aEc
  t_aC7 -> t_aC8 -> t_aC9
  t_aC7 -> t_aC8 -> t_aC9
canEqTyVar
  a_aEc
  t_aC7 -> t_aC8 -> t_aC9
  Not-swapped
Following bound tyvar t_aC7 = String
Following bound tyvar t_aC8 = String
Following bound tyvar t_aC9 = Bool
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aEd :: a_aEc
                                 ~ (String -> String -> Bool) [" a type equality a_aEc
                                                                                 ~
                                                                                 t_aC7
                                                                                 -> t_aC8
                                                                                 -> t_aC9 " HTML.hs:5:12-20] (CTyEqCan)
Sneaky unification:
  Unifies: a_aEc := String -> String -> Bool
  Coercion: a_aEc ~ (String -> String -> Bool)
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind a_aEc := String -> String -> Bool
setEvBind
  ev = cobox_aEd
  tm  = CO <String -> String -> Bool>_N
kickOutRewritable
  tv =  a_aEc
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
134[<C:0,F:0>] [W] cobox_aEd :: a_aEc
                                ~ (String -> String -> Bool): Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEh :: (t_aEf, t_aEg)
                                ~ t_aBX [" a type equality (t_aEf, t_aEg)
                                                           ~
                                                           t_aBX " HTML.hs:22:11-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEh :: (t_aEf, t_aEg)
                                 ~ t_aBX [" a type equality (t_aEf, t_aEg)
                                                            ~
                                                            t_aBX " HTML.hs:22:11-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEh :: (t_aEf, t_aEg) ~ t_aBX [" a type equality (t_aEf,
                                                              t_aEg)
                                                             ~
                                                             t_aBX " HTML.hs:22:11-15] (CNonCanonical)
canEvNC:eq
  (t_aEf, t_aEg)
  t_aBX
can_eq_nc
  [W] cobox_aEh :: (t_aEf, t_aEg) ~ t_aBX
  (t_aEf, t_aEg)
  (t_aEf, t_aEg)
  t_aBX
  t_aBX
canEqTyVar
  t_aBX
  (t_aEf, t_aEg)
  Is-swapped
Following bound tyvar t_aBX = Requirement
newWantedEvVar/cache miss
  [W] cobox_aIV :: Requirement ~ (t_aEf, t_aEg)
setEvBind
  ev = cobox_aEh
  tm  = CO Sym cobox_aIV
rewriteEqEvidence
  [W] cobox_aEh :: (t_aEf, t_aEg) ~ t_aBX
  Requirement
  (t_aEf, t_aEg)
  Sym cobox_aIV
canEqTyVar2
  t_aBX
  (t_aEf, t_aEg)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aIV :: Requirement ~ (t_aEf, t_aEg)
  Requirement
  Requirement
  (t_aEf, t_aEg)
  (t_aEf, t_aEg)
can_eq_nc
  [W] cobox_aIV :: Requirement ~ (t_aEf, t_aEg)
  (String, String)
  Requirement
  (t_aEf, t_aEg)
  (t_aEf, t_aEg)
newWantedEvVar/cache miss [W] cobox_aIW :: String ~ t_aEf
newWantedEvVar/cache miss [W] cobox_aIX :: String ~ t_aEg
setEvBind
  ev = cobox_aIV
  tm  = CO (cobox_aIW, cobox_aIX)_N
canEvNC:eq
  String
  t_aEf
can_eq_nc
  [W] cobox_aIW :: String ~ t_aEf
  String
  String
  t_aEf
  t_aEf
can_eq_nc
  [W] cobox_aIW :: String ~ t_aEf
  [Char]
  String
  t_aEf
  t_aEf
canEqTyVar
  t_aEf
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aIY :: t_aEf ~ String
setEvBind
  ev = cobox_aIW
  tm  = CO Sym cobox_aIY
rewriteEqEvidence
  [W] cobox_aIW :: String ~ t_aEf
  t_aEf
  String
  Sym cobox_aIY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aIY :: t_aEf
                                 ~ String [" a type equality (t_aEf, t_aEg)
                                                             ~
                                                             t_aBX " HTML.hs:22:11-15] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEf := String
  Coercion: t_aEf ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEf := String
setEvBind
  ev = cobox_aIY
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEf
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
135[<C:0,F:0>] [W] cobox_aIY :: t_aEf
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aIX :: String
                                ~ t_aEg [" a type equality (t_aEf, t_aEg)
                                                           ~
                                                           t_aBX " HTML.hs:22:11-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aIX :: String
                                 ~ t_aEg [" a type equality (t_aEf, t_aEg)
                                                            ~
                                                            t_aBX " HTML.hs:22:11-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aIX :: String ~ t_aEg [" a type equality (t_aEf, t_aEg)
                                                     ~
                                                     t_aBX " HTML.hs:22:11-15] (CNonCanonical)
canEvNC:eq
  String
  t_aEg
can_eq_nc
  [W] cobox_aIX :: String ~ t_aEg
  String
  String
  t_aEg
  t_aEg
can_eq_nc
  [W] cobox_aIX :: String ~ t_aEg
  [Char]
  String
  t_aEg
  t_aEg
canEqTyVar
  t_aEg
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aIZ :: t_aEg ~ String
setEvBind
  ev = cobox_aIX
  tm  = CO Sym cobox_aIZ
rewriteEqEvidence
  [W] cobox_aIX :: String ~ t_aEg
  t_aEg
  String
  Sym cobox_aIZ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aIZ :: t_aEg
                                 ~ String [" a type equality (t_aEf, t_aEg)
                                                             ~
                                                             t_aBX " HTML.hs:22:11-15] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEg := String
  Coercion: t_aEg ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEg := String
setEvBind
  ev = cobox_aIZ
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEg
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
136[<C:0,F:0>] [W] cobox_aIZ :: t_aEg
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEi :: HTML ~ t_aBY [" a type equality HTML
                                                                ~
                                                                t_aBY " HTML.hs:22:18-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEi :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:18-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEi :: HTML ~ t_aBY [" a type equality HTML
                                                   ~
                                                   t_aBY " HTML.hs:22:18-42] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBY
can_eq_nc
  [W] cobox_aEi :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
Following bound tyvar t_aBY = HTML
newWantedEvVar/cache miss [W] cobox_aJ0 :: HTML ~ HTML
setEvBind
  ev = cobox_aEi
  tm  = CO Sym cobox_aJ0
rewriteEqEvidence
  [W] cobox_aEi :: HTML ~ t_aBY
  HTML
  HTML
  Sym cobox_aJ0
canEqTyVar2
  t_aBY
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aJ0 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJ0
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEj :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                ~
                                                                Bool " HTML.hs:22:47-71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEj :: t_aC9
                                 ~ Bool [" a type equality t_aC9
                                                           ~
                                                           Bool " HTML.hs:22:47-71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEj :: t_aC9 ~ Bool [" a type equality t_aC9
                                                   ~
                                                   Bool " HTML.hs:22:47-71] (CNonCanonical)
canEvNC:eq
  t_aC9
  Bool
can_eq_nc
  [W] cobox_aEj :: t_aC9 ~ Bool
  t_aC9
  t_aC9
  Bool
  Bool
canEqTyVar
  t_aC9
  Bool
  Not-swapped
Following bound tyvar t_aC9 = Bool
canEqTyVar2
  t_aC9
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aEj :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aEj
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEk :: t_aC4
                                ~ t_aC7 [" a type equality t_aC4
                                                           ~
                                                           t_aC7 " HTML.hs:22:57-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEk :: t_aC4
                                 ~ t_aC7 [" a type equality t_aC4
                                                            ~
                                                            t_aC7 " HTML.hs:22:57-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEk :: t_aC4 ~ t_aC7 [" a type equality t_aC4
                                                    ~
                                                    t_aC7 " HTML.hs:22:57-68] (CNonCanonical)
canEvNC:eq
  t_aC4
  t_aC7
can_eq_nc
  [W] cobox_aEk :: t_aC4 ~ t_aC7
  t_aC4
  t_aC4
  t_aC7
  t_aC7
canEqTyVar
  t_aC4
  t_aC7
  Not-swapped
Following bound tyvar t_aC4 = String
canEqTyVar2
  t_aC4
  t_aC7
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEk :: String ~ t_aC7
  String
  String
  t_aC7
  t_aC7
can_eq_nc
  [W] cobox_aEk :: String ~ t_aC7
  [Char]
  String
  t_aC7
  t_aC7
canEqTyVar
  t_aC7
  [Char]
  Is-swapped
Following bound tyvar t_aC7 = String
newWantedEvVar/cache miss [W] cobox_aJ1 :: String ~ String
setEvBind
  ev = cobox_aEk
  tm  = CO Sym cobox_aJ1
rewriteEqEvidence
  [W] cobox_aEk :: String ~ t_aC7
  String
  String
  Sym cobox_aJ1
canEqTyVar2
  t_aC7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJ1 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJ1 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJ2 :: Char ~ Char
setEvBind
  ev = cobox_aJ1
  tm  = CO [cobox_aJ2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJ2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJ2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEl :: HTML ~ t_aC3 [" a type equality HTML
                                                                ~
                                                                t_aC3 " HTML.hs:22:68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEl :: HTML ~ t_aC3 [" a type equality HTML
                                                                 ~
                                                                 t_aC3 " HTML.hs:22:68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEl :: HTML ~ t_aC3 [" a type equality HTML
                                                   ~
                                                   t_aC3 " HTML.hs:22:68] (CNonCanonical)
canEvNC:eq
  HTML
  t_aC3
can_eq_nc
  [W] cobox_aEl :: HTML ~ t_aC3
  HTML
  HTML
  t_aC3
  t_aC3
canEqTyVar
  t_aC3
  HTML
  Is-swapped
Following bound tyvar t_aC3 = HTML
newWantedEvVar/cache miss [W] cobox_aJ3 :: HTML ~ HTML
setEvBind
  ev = cobox_aEl
  tm  = CO Sym cobox_aJ3
rewriteEqEvidence
  [W] cobox_aEl :: HTML ~ t_aC3
  HTML
  HTML
  Sym cobox_aJ3
canEqTyVar2
  t_aC3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aJ3 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJ3
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEm :: t_aEg
                                ~ t_aC8 [" a type equality t_aEg
                                                           ~
                                                           t_aC8 " HTML.hs:22:71] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEm :: t_aEg
                                 ~ t_aC8 [" a type equality t_aEg
                                                            ~
                                                            t_aC8 " HTML.hs:22:71] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEm :: t_aEg ~ t_aC8 [" a type equality t_aEg
                                                    ~
                                                    t_aC8 " HTML.hs:22:71] (CNonCanonical)
canEvNC:eq
  t_aEg
  t_aC8
can_eq_nc
  [W] cobox_aEm :: t_aEg ~ t_aC8
  t_aEg
  t_aEg
  t_aC8
  t_aC8
canEqTyVar
  t_aEg
  t_aC8
  Not-swapped
Following bound tyvar t_aEg = String
canEqTyVar2
  t_aEg
  t_aC8
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEm :: String ~ t_aC8
  String
  String
  t_aC8
  t_aC8
can_eq_nc
  [W] cobox_aEm :: String ~ t_aC8
  [Char]
  String
  t_aC8
  t_aC8
canEqTyVar
  t_aC8
  [Char]
  Is-swapped
Following bound tyvar t_aC8 = String
newWantedEvVar/cache miss [W] cobox_aJ4 :: String ~ String
setEvBind
  ev = cobox_aEm
  tm  = CO Sym cobox_aJ4
rewriteEqEvidence
  [W] cobox_aEm :: String ~ t_aC8
  String
  String
  Sym cobox_aJ4
canEqTyVar2
  t_aC8
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJ4 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJ4 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJ5 :: Char ~ Char
setEvBind
  ev = cobox_aJ4
  tm  = CO [cobox_aJ5]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJ5 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJ5
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEn :: Bool ~ t_aBZ [" a type equality Bool
                                                                ~
                                                                t_aBZ " HTML.hs:22:76-160] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEn :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:22:76-160] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEn :: Bool ~ t_aBZ [" a type equality Bool
                                                   ~
                                                   t_aBZ " HTML.hs:22:76-160] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBZ
can_eq_nc
  [W] cobox_aEn :: Bool ~ t_aBZ
  Bool
  Bool
  t_aBZ
  t_aBZ
canEqTyVar
  t_aBZ
  Bool
  Is-swapped
Following bound tyvar t_aBZ = Bool
newWantedEvVar/cache miss [W] cobox_aJ6 :: Bool ~ Bool
setEvBind
  ev = cobox_aEn
  tm  = CO Sym cobox_aJ6
rewriteEqEvidence
  [W] cobox_aEn :: Bool ~ t_aBZ
  Bool
  Bool
  Sym cobox_aJ6
canEqTyVar2
  t_aBZ
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aJ6 :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aJ6
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEo :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                ~
                                                                Bool " HTML.hs:22:77-91] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEo :: t_aC9
                                 ~ Bool [" a type equality t_aC9
                                                           ~
                                                           Bool " HTML.hs:22:77-91] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEo :: t_aC9 ~ Bool [" a type equality t_aC9
                                                   ~
                                                   Bool " HTML.hs:22:77-91] (CNonCanonical)
canEvNC:eq
  t_aC9
  Bool
can_eq_nc
  [W] cobox_aEo :: t_aC9 ~ Bool
  t_aC9
  t_aC9
  Bool
  Bool
canEqTyVar
  t_aC9
  Bool
  Not-swapped
Following bound tyvar t_aC9 = Bool
canEqTyVar2
  t_aC9
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aEo :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aEo
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEp :: t_aEf
                                ~ t_aC7 [" a type equality t_aEf
                                                           ~
                                                           t_aC7 " HTML.hs:22:86] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEp :: t_aEf
                                 ~ t_aC7 [" a type equality t_aEf
                                                            ~
                                                            t_aC7 " HTML.hs:22:86] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEp :: t_aEf ~ t_aC7 [" a type equality t_aEf
                                                    ~
                                                    t_aC7 " HTML.hs:22:86] (CNonCanonical)
canEvNC:eq
  t_aEf
  t_aC7
can_eq_nc
  [W] cobox_aEp :: t_aEf ~ t_aC7
  t_aEf
  t_aEf
  t_aC7
  t_aC7
canEqTyVar
  t_aEf
  t_aC7
  Not-swapped
Following bound tyvar t_aEf = String
canEqTyVar2
  t_aEf
  t_aC7
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEp :: String ~ t_aC7
  String
  String
  t_aC7
  t_aC7
can_eq_nc
  [W] cobox_aEp :: String ~ t_aC7
  [Char]
  String
  t_aC7
  t_aC7
canEqTyVar
  t_aC7
  [Char]
  Is-swapped
Following bound tyvar t_aC7 = String
newWantedEvVar/cache miss [W] cobox_aJ7 :: String ~ String
setEvBind
  ev = cobox_aEp
  tm  = CO Sym cobox_aJ7
rewriteEqEvidence
  [W] cobox_aEp :: String ~ t_aC7
  String
  String
  Sym cobox_aJ7
canEqTyVar2
  t_aC7
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJ7 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJ7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJ8 :: Char ~ Char
setEvBind
  ev = cobox_aJ7
  tm  = CO [cobox_aJ8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJ8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJ8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEq :: String
                                ~ t_aC8 [" a type equality String
                                                           ~
                                                           t_aC8 " HTML.hs:22:88-91] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEq :: String
                                 ~ t_aC8 [" a type equality String
                                                            ~
                                                            t_aC8 " HTML.hs:22:88-91] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEq :: String ~ t_aC8 [" a type equality String
                                                     ~
                                                     t_aC8 " HTML.hs:22:88-91] (CNonCanonical)
canEvNC:eq
  String
  t_aC8
can_eq_nc
  [W] cobox_aEq :: String ~ t_aC8
  String
  String
  t_aC8
  t_aC8
can_eq_nc
  [W] cobox_aEq :: String ~ t_aC8
  [Char]
  String
  t_aC8
  t_aC8
canEqTyVar
  t_aC8
  [Char]
  Is-swapped
Following bound tyvar t_aC8 = String
newWantedEvVar/cache miss [W] cobox_aJ9 :: String ~ String
setEvBind
  ev = cobox_aEq
  tm  = CO Sym cobox_aJ9
rewriteEqEvidence
  [W] cobox_aEq :: String ~ t_aC8
  String
  String
  Sym cobox_aJ9
canEqTyVar2
  t_aC8
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJ9 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJ9 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJa :: Char ~ Char
setEvBind
  ev = cobox_aJ9
  tm  = CO [cobox_aJa]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJa :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJa
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEr :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML.hs:22:97-160] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEr :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:22:97-160] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEr :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML.hs:22:97-160] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aEr :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aEr
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEs :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                ~
                                                                Bool " HTML.hs:22:98-114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEs :: t_aBZ
                                 ~ Bool [" a type equality t_aBZ
                                                           ~
                                                           Bool " HTML.hs:22:98-114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEs :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                   ~
                                                   Bool " HTML.hs:22:98-114] (CNonCanonical)
canEvNC:eq
  t_aBZ
  Bool
can_eq_nc
  [W] cobox_aEs :: t_aBZ ~ Bool
  t_aBZ
  t_aBZ
  Bool
  Bool
canEqTyVar
  t_aBZ
  Bool
  Not-swapped
Following bound tyvar t_aBZ = Bool
canEqTyVar2
  t_aBZ
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aEs :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aEs
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEv :: (t_aEt, t_aEu)
                                ~ t_aBX [" a type equality (t_aEt, t_aEu)
                                                           ~
                                                           t_aBX " HTML.hs:22:108-112] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEv :: (t_aEt, t_aEu)
                                 ~ t_aBX [" a type equality (t_aEt, t_aEu)
                                                            ~
                                                            t_aBX " HTML.hs:22:108-112] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEv :: (t_aEt, t_aEu) ~ t_aBX [" a type equality (t_aEt,
                                                              t_aEu)
                                                             ~
                                                             t_aBX " HTML.hs:22:108-112] (CNonCanonical)
canEvNC:eq
  (t_aEt, t_aEu)
  t_aBX
can_eq_nc
  [W] cobox_aEv :: (t_aEt, t_aEu) ~ t_aBX
  (t_aEt, t_aEu)
  (t_aEt, t_aEu)
  t_aBX
  t_aBX
canEqTyVar
  t_aBX
  (t_aEt, t_aEu)
  Is-swapped
Following bound tyvar t_aBX = Requirement
newWantedEvVar/cache miss
  [W] cobox_aJb :: Requirement ~ (t_aEt, t_aEu)
setEvBind
  ev = cobox_aEv
  tm  = CO Sym cobox_aJb
rewriteEqEvidence
  [W] cobox_aEv :: (t_aEt, t_aEu) ~ t_aBX
  Requirement
  (t_aEt, t_aEu)
  Sym cobox_aJb
canEqTyVar2
  t_aBX
  (t_aEt, t_aEu)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aJb :: Requirement ~ (t_aEt, t_aEu)
  Requirement
  Requirement
  (t_aEt, t_aEu)
  (t_aEt, t_aEu)
can_eq_nc
  [W] cobox_aJb :: Requirement ~ (t_aEt, t_aEu)
  (String, String)
  Requirement
  (t_aEt, t_aEu)
  (t_aEt, t_aEu)
newWantedEvVar/cache miss [W] cobox_aJc :: String ~ t_aEt
newWantedEvVar/cache miss [W] cobox_aJd :: String ~ t_aEu
setEvBind
  ev = cobox_aJb
  tm  = CO (cobox_aJc, cobox_aJd)_N
canEvNC:eq
  String
  t_aEt
can_eq_nc
  [W] cobox_aJc :: String ~ t_aEt
  String
  String
  t_aEt
  t_aEt
can_eq_nc
  [W] cobox_aJc :: String ~ t_aEt
  [Char]
  String
  t_aEt
  t_aEt
canEqTyVar
  t_aEt
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aJe :: t_aEt ~ String
setEvBind
  ev = cobox_aJc
  tm  = CO Sym cobox_aJe
rewriteEqEvidence
  [W] cobox_aJc :: String ~ t_aEt
  t_aEt
  String
  Sym cobox_aJe
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJe :: t_aEt
                                 ~ String [" a type equality (t_aEt, t_aEu)
                                                             ~
                                                             t_aBX " HTML.hs:22:108-112] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEt := String
  Coercion: t_aEt ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEt := String
setEvBind
  ev = cobox_aJe
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEt
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
148[<C:0,F:0>] [W] cobox_aJe :: t_aEt
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJd :: String
                                ~ t_aEu [" a type equality (t_aEt, t_aEu)
                                                           ~
                                                           t_aBX " HTML.hs:22:108-112] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJd :: String
                                 ~ t_aEu [" a type equality (t_aEt, t_aEu)
                                                            ~
                                                            t_aBX " HTML.hs:22:108-112] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJd :: String ~ t_aEu [" a type equality (t_aEt, t_aEu)
                                                     ~
                                                     t_aBX " HTML.hs:22:108-112] (CNonCanonical)
canEvNC:eq
  String
  t_aEu
can_eq_nc
  [W] cobox_aJd :: String ~ t_aEu
  String
  String
  t_aEu
  t_aEu
can_eq_nc
  [W] cobox_aJd :: String ~ t_aEu
  [Char]
  String
  t_aEu
  t_aEu
canEqTyVar
  t_aEu
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aJf :: t_aEu ~ String
setEvBind
  ev = cobox_aJd
  tm  = CO Sym cobox_aJf
rewriteEqEvidence
  [W] cobox_aJd :: String ~ t_aEu
  t_aEu
  String
  Sym cobox_aJf
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJf :: t_aEu
                                 ~ String [" a type equality (t_aEt, t_aEu)
                                                             ~
                                                             t_aBX " HTML.hs:22:108-112] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEu := String
  Coercion: t_aEu ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEu := String
setEvBind
  ev = cobox_aJf
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEu
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
149[<C:0,F:0>] [W] cobox_aJf :: t_aEu
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEw :: t_aEf
                                ~ t_aEt [" a type equality t_aEf
                                                           ~
                                                           t_aEt " HTML.hs:22:109] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEw :: t_aEf
                                 ~ t_aEt [" a type equality t_aEf
                                                            ~
                                                            t_aEt " HTML.hs:22:109] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEw :: t_aEf ~ t_aEt [" a type equality t_aEf
                                                    ~
                                                    t_aEt " HTML.hs:22:109] (CNonCanonical)
canEvNC:eq
  t_aEf
  t_aEt
can_eq_nc
  [W] cobox_aEw :: t_aEf ~ t_aEt
  t_aEf
  t_aEf
  t_aEt
  t_aEt
canEqTyVar
  t_aEf
  t_aEt
  Not-swapped
Following bound tyvar t_aEf = String
canEqTyVar2
  t_aEf
  t_aEt
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEw :: String ~ t_aEt
  String
  String
  t_aEt
  t_aEt
can_eq_nc
  [W] cobox_aEw :: String ~ t_aEt
  [Char]
  String
  t_aEt
  t_aEt
canEqTyVar
  t_aEt
  [Char]
  Is-swapped
Following bound tyvar t_aEt = String
newWantedEvVar/cache miss [W] cobox_aJg :: String ~ String
setEvBind
  ev = cobox_aEw
  tm  = CO Sym cobox_aJg
rewriteEqEvidence
  [W] cobox_aEw :: String ~ t_aEt
  String
  String
  Sym cobox_aJg
canEqTyVar2
  t_aEt
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJg :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJg :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJh :: Char ~ Char
setEvBind
  ev = cobox_aJg
  tm  = CO [cobox_aJh]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJh :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJh
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEx :: t_aEg
                                ~ t_aEu [" a type equality t_aEg
                                                           ~
                                                           t_aEu " HTML.hs:22:111] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEx :: t_aEg
                                 ~ t_aEu [" a type equality t_aEg
                                                            ~
                                                            t_aEu " HTML.hs:22:111] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEx :: t_aEg ~ t_aEu [" a type equality t_aEg
                                                    ~
                                                    t_aEu " HTML.hs:22:111] (CNonCanonical)
canEvNC:eq
  t_aEg
  t_aEu
can_eq_nc
  [W] cobox_aEx :: t_aEg ~ t_aEu
  t_aEg
  t_aEg
  t_aEu
  t_aEu
canEqTyVar
  t_aEg
  t_aEu
  Not-swapped
Following bound tyvar t_aEg = String
canEqTyVar2
  t_aEg
  t_aEu
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEx :: String ~ t_aEu
  String
  String
  t_aEu
  t_aEu
can_eq_nc
  [W] cobox_aEx :: String ~ t_aEu
  [Char]
  String
  t_aEu
  t_aEu
canEqTyVar
  t_aEu
  [Char]
  Is-swapped
Following bound tyvar t_aEu = String
newWantedEvVar/cache miss [W] cobox_aJi :: String ~ String
setEvBind
  ev = cobox_aEx
  tm  = CO Sym cobox_aJi
rewriteEqEvidence
  [W] cobox_aEx :: String ~ t_aEu
  String
  String
  Sym cobox_aJi
canEqTyVar2
  t_aEu
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJi :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJi :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJj :: Char ~ Char
setEvBind
  ev = cobox_aJi
  tm  = CO [cobox_aJj]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJj :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJj
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEy :: HTML ~ t_aBY [" a type equality HTML
                                                                ~
                                                                t_aBY " HTML.hs:22:114] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEy :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:114] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEy :: HTML ~ t_aBY [" a type equality HTML
                                                   ~
                                                   t_aBY " HTML.hs:22:114] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBY
can_eq_nc
  [W] cobox_aEy :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
Following bound tyvar t_aBY = HTML
newWantedEvVar/cache miss [W] cobox_aJk :: HTML ~ HTML
setEvBind
  ev = cobox_aEy
  tm  = CO Sym cobox_aJk
rewriteEqEvidence
  [W] cobox_aEy :: HTML ~ t_aBY
  HTML
  HTML
  Sym cobox_aJk
canEqTyVar2
  t_aBY
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aJk :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJk
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEz :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                ~
                                                                Bool " HTML.hs:22:121-159] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEz :: t_aBZ
                                 ~ Bool [" a type equality t_aBZ
                                                           ~
                                                           Bool " HTML.hs:22:121-159] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEz :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                   ~
                                                   Bool " HTML.hs:22:121-159] (CNonCanonical)
canEvNC:eq
  t_aBZ
  Bool
can_eq_nc
  [W] cobox_aEz :: t_aBZ ~ Bool
  t_aBZ
  t_aBZ
  Bool
  Bool
canEqTyVar
  t_aBZ
  Bool
  Not-swapped
Following bound tyvar t_aBZ = Bool
canEqTyVar2
  t_aBZ
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aEz :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aEz
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEC :: (t_aEA, t_aEB)
                                ~ t_aBX [" a type equality (t_aEA, t_aEB)
                                                           ~
                                                           t_aBX " HTML.hs:22:131-135] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEC :: (t_aEA, t_aEB)
                                 ~ t_aBX [" a type equality (t_aEA, t_aEB)
                                                            ~
                                                            t_aBX " HTML.hs:22:131-135] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEC :: (t_aEA, t_aEB) ~ t_aBX [" a type equality (t_aEA,
                                                              t_aEB)
                                                             ~
                                                             t_aBX " HTML.hs:22:131-135] (CNonCanonical)
canEvNC:eq
  (t_aEA, t_aEB)
  t_aBX
can_eq_nc
  [W] cobox_aEC :: (t_aEA, t_aEB) ~ t_aBX
  (t_aEA, t_aEB)
  (t_aEA, t_aEB)
  t_aBX
  t_aBX
canEqTyVar
  t_aBX
  (t_aEA, t_aEB)
  Is-swapped
Following bound tyvar t_aBX = Requirement
newWantedEvVar/cache miss
  [W] cobox_aJl :: Requirement ~ (t_aEA, t_aEB)
setEvBind
  ev = cobox_aEC
  tm  = CO Sym cobox_aJl
rewriteEqEvidence
  [W] cobox_aEC :: (t_aEA, t_aEB) ~ t_aBX
  Requirement
  (t_aEA, t_aEB)
  Sym cobox_aJl
canEqTyVar2
  t_aBX
  (t_aEA, t_aEB)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aJl :: Requirement ~ (t_aEA, t_aEB)
  Requirement
  Requirement
  (t_aEA, t_aEB)
  (t_aEA, t_aEB)
can_eq_nc
  [W] cobox_aJl :: Requirement ~ (t_aEA, t_aEB)
  (String, String)
  Requirement
  (t_aEA, t_aEB)
  (t_aEA, t_aEB)
newWantedEvVar/cache miss [W] cobox_aJm :: String ~ t_aEA
newWantedEvVar/cache miss [W] cobox_aJn :: String ~ t_aEB
setEvBind
  ev = cobox_aJl
  tm  = CO (cobox_aJm, cobox_aJn)_N
canEvNC:eq
  String
  t_aEA
can_eq_nc
  [W] cobox_aJm :: String ~ t_aEA
  String
  String
  t_aEA
  t_aEA
can_eq_nc
  [W] cobox_aJm :: String ~ t_aEA
  [Char]
  String
  t_aEA
  t_aEA
canEqTyVar
  t_aEA
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aJo :: t_aEA ~ String
setEvBind
  ev = cobox_aJm
  tm  = CO Sym cobox_aJo
rewriteEqEvidence
  [W] cobox_aJm :: String ~ t_aEA
  t_aEA
  String
  Sym cobox_aJo
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJo :: t_aEA
                                 ~ String [" a type equality (t_aEA, t_aEB)
                                                             ~
                                                             t_aBX " HTML.hs:22:131-135] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEA := String
  Coercion: t_aEA ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEA := String
setEvBind
  ev = cobox_aJo
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
154[<C:0,F:0>] [W] cobox_aJo :: t_aEA
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJn :: String
                                ~ t_aEB [" a type equality (t_aEA, t_aEB)
                                                           ~
                                                           t_aBX " HTML.hs:22:131-135] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJn :: String
                                 ~ t_aEB [" a type equality (t_aEA, t_aEB)
                                                            ~
                                                            t_aBX " HTML.hs:22:131-135] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJn :: String ~ t_aEB [" a type equality (t_aEA, t_aEB)
                                                     ~
                                                     t_aBX " HTML.hs:22:131-135] (CNonCanonical)
canEvNC:eq
  String
  t_aEB
can_eq_nc
  [W] cobox_aJn :: String ~ t_aEB
  String
  String
  t_aEB
  t_aEB
can_eq_nc
  [W] cobox_aJn :: String ~ t_aEB
  [Char]
  String
  t_aEB
  t_aEB
canEqTyVar
  t_aEB
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aJp :: t_aEB ~ String
setEvBind
  ev = cobox_aJn
  tm  = CO Sym cobox_aJp
rewriteEqEvidence
  [W] cobox_aJn :: String ~ t_aEB
  t_aEB
  String
  Sym cobox_aJp
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJp :: t_aEB
                                 ~ String [" a type equality (t_aEA, t_aEB)
                                                             ~
                                                             t_aBX " HTML.hs:22:131-135] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEB := String
  Coercion: t_aEB ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEB := String
setEvBind
  ev = cobox_aJp
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
155[<C:0,F:0>] [W] cobox_aJp :: t_aEB
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aED :: t_aEf
                                ~ t_aEA [" a type equality t_aEf
                                                           ~
                                                           t_aEA " HTML.hs:22:132] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aED :: t_aEf
                                 ~ t_aEA [" a type equality t_aEf
                                                            ~
                                                            t_aEA " HTML.hs:22:132] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aED :: t_aEf ~ t_aEA [" a type equality t_aEf
                                                    ~
                                                    t_aEA " HTML.hs:22:132] (CNonCanonical)
canEvNC:eq
  t_aEf
  t_aEA
can_eq_nc
  [W] cobox_aED :: t_aEf ~ t_aEA
  t_aEf
  t_aEf
  t_aEA
  t_aEA
canEqTyVar
  t_aEf
  t_aEA
  Not-swapped
Following bound tyvar t_aEf = String
canEqTyVar2
  t_aEf
  t_aEA
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aED :: String ~ t_aEA
  String
  String
  t_aEA
  t_aEA
can_eq_nc
  [W] cobox_aED :: String ~ t_aEA
  [Char]
  String
  t_aEA
  t_aEA
canEqTyVar
  t_aEA
  [Char]
  Is-swapped
Following bound tyvar t_aEA = String
newWantedEvVar/cache miss [W] cobox_aJq :: String ~ String
setEvBind
  ev = cobox_aED
  tm  = CO Sym cobox_aJq
rewriteEqEvidence
  [W] cobox_aED :: String ~ t_aEA
  String
  String
  Sym cobox_aJq
canEqTyVar2
  t_aEA
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJq :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJr :: Char ~ Char
setEvBind
  ev = cobox_aJq
  tm  = CO [cobox_aJr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEE :: t_aEg
                                ~ t_aEB [" a type equality t_aEg
                                                           ~
                                                           t_aEB " HTML.hs:22:134] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEE :: t_aEg
                                 ~ t_aEB [" a type equality t_aEg
                                                            ~
                                                            t_aEB " HTML.hs:22:134] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEE :: t_aEg ~ t_aEB [" a type equality t_aEg
                                                    ~
                                                    t_aEB " HTML.hs:22:134] (CNonCanonical)
canEvNC:eq
  t_aEg
  t_aEB
can_eq_nc
  [W] cobox_aEE :: t_aEg ~ t_aEB
  t_aEg
  t_aEg
  t_aEB
  t_aEB
canEqTyVar
  t_aEg
  t_aEB
  Not-swapped
Following bound tyvar t_aEg = String
canEqTyVar2
  t_aEg
  t_aEB
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEE :: String ~ t_aEB
  String
  String
  t_aEB
  t_aEB
can_eq_nc
  [W] cobox_aEE :: String ~ t_aEB
  [Char]
  String
  t_aEB
  t_aEB
canEqTyVar
  t_aEB
  [Char]
  Is-swapped
Following bound tyvar t_aEB = String
newWantedEvVar/cache miss [W] cobox_aJs :: String ~ String
setEvBind
  ev = cobox_aEE
  tm  = CO Sym cobox_aJs
rewriteEqEvidence
  [W] cobox_aEE :: String ~ t_aEB
  String
  String
  Sym cobox_aJs
canEqTyVar2
  t_aEB
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJs :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJs :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJt :: Char ~ Char
setEvBind
  ev = cobox_aJs
  tm  = CO [cobox_aJt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEF :: HTML ~ t_aBY [" a type equality HTML
                                                                ~
                                                                t_aBY " HTML.hs:22:138-158] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEF :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:22:138-158] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEF :: HTML ~ t_aBY [" a type equality HTML
                                                   ~
                                                   t_aBY " HTML.hs:22:138-158] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBY
can_eq_nc
  [W] cobox_aEF :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
Following bound tyvar t_aBY = HTML
newWantedEvVar/cache miss [W] cobox_aJu :: HTML ~ HTML
setEvBind
  ev = cobox_aEF
  tm  = CO Sym cobox_aJu
rewriteEqEvidence
  [W] cobox_aEF :: HTML ~ t_aBY
  HTML
  HTML
  Sym cobox_aJu
canEqTyVar2
  t_aBY
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aJu :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJu
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEG :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:22:148-151] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEG :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:22:148-151] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEG :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:22:148-151] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aEG :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aEG :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aEG :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJv :: Char ~ Char
setEvBind
  ev = cobox_aEG
  tm  = CO [cobox_aJv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEH :: [Attributen]
                                ~ [Attributen] [" a type equality [Attributen]
                                                                  ~
                                                                  [Attributen] " HTML.hs:22:153-155] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEH :: [Attributen]
                                 ~ [Attributen] [" a type equality [Attributen]
                                                                   ~
                                                                   [Attributen] " HTML.hs:22:153-155] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEH :: [Attributen]
                   ~ [Attributen] [" a type equality [Attributen]
                                                     ~
                                                     [Attributen] " HTML.hs:22:153-155] (CNonCanonical)
canEvNC:eq
  [Attributen]
  [Attributen]
can_eq_nc
  [W] cobox_aEH :: [Attributen] ~ [Attributen]
  [Attributen]
  [Attributen]
  [Attributen]
  [Attributen]
newWantedEvVar/cache miss [W] cobox_aJw :: Attributen ~ Attributen
setEvBind
  ev = cobox_aEH
  tm  = CO [cobox_aJw]_N
canEvNC:eq
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aJw :: Attributen ~ Attributen
  Attributen
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aJw :: Attributen ~ Attributen
  String
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aJw :: Attributen ~ Attributen
  [Char]
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aJw :: Attributen ~ Attributen
  [Char]
  Attributen
  String
  Attributen
can_eq_nc
  [W] cobox_aJw :: Attributen ~ Attributen
  [Char]
  Attributen
  [Char]
  Attributen
newWantedEvVar/cache miss [W] cobox_aJx :: Char ~ Char
setEvBind
  ev = cobox_aJw
  tm  = CO [cobox_aJx]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJx :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJx
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEI :: [HTML]
                                ~ [HTML] [" a type equality [HTML]
                                                            ~
                                                            [HTML] " HTML.hs:22:157-158] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEI :: [HTML]
                                 ~ [HTML] [" a type equality [HTML]
                                                             ~
                                                             [HTML] " HTML.hs:22:157-158] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEI :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                      ~
                                                      [HTML] " HTML.hs:22:157-158] (CNonCanonical)
canEvNC:eq
  [HTML]
  [HTML]
can_eq_nc
  [W] cobox_aEI :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aJy :: HTML ~ HTML
setEvBind
  ev = cobox_aEI
  tm  = CO [cobox_aJy]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aJy :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJy
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEJ :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML.hs:23:46-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEJ :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:23:46-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEJ :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML.hs:23:46-54] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aEJ :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aEJ
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEK :: Bool ~ t_aBZ [" a type equality Bool
                                                                ~
                                                                t_aBZ " HTML.hs:23:58-121] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEK :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:23:58-121] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEK :: Bool ~ t_aBZ [" a type equality Bool
                                                   ~
                                                   t_aBZ " HTML.hs:23:58-121] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBZ
can_eq_nc
  [W] cobox_aEK :: Bool ~ t_aBZ
  Bool
  Bool
  t_aBZ
  t_aBZ
canEqTyVar
  t_aBZ
  Bool
  Is-swapped
Following bound tyvar t_aBZ = Bool
newWantedEvVar/cache miss [W] cobox_aJz :: Bool ~ Bool
setEvBind
  ev = cobox_aEK
  tm  = CO Sym cobox_aJz
rewriteEqEvidence
  [W] cobox_aEK :: Bool ~ t_aBZ
  Bool
  Bool
  Sym cobox_aJz
canEqTyVar2
  t_aBZ
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aJz :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aJz
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEL :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                ~
                                                                Bool " HTML.hs:23:59-75] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEL :: t_aBZ
                                 ~ Bool [" a type equality t_aBZ
                                                           ~
                                                           Bool " HTML.hs:23:59-75] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEL :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                   ~
                                                   Bool " HTML.hs:23:59-75] (CNonCanonical)
canEvNC:eq
  t_aBZ
  Bool
can_eq_nc
  [W] cobox_aEL :: t_aBZ ~ Bool
  t_aBZ
  t_aBZ
  Bool
  Bool
canEqTyVar
  t_aBZ
  Bool
  Not-swapped
Following bound tyvar t_aBZ = Bool
canEqTyVar2
  t_aBZ
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aEL :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aEL
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEO :: (t_aEM, t_aEN)
                                ~ t_aBX [" a type equality (t_aEM, t_aEN)
                                                           ~
                                                           t_aBX " HTML.hs:23:69-73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEO :: (t_aEM, t_aEN)
                                 ~ t_aBX [" a type equality (t_aEM, t_aEN)
                                                            ~
                                                            t_aBX " HTML.hs:23:69-73] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEO :: (t_aEM, t_aEN) ~ t_aBX [" a type equality (t_aEM,
                                                              t_aEN)
                                                             ~
                                                             t_aBX " HTML.hs:23:69-73] (CNonCanonical)
canEvNC:eq
  (t_aEM, t_aEN)
  t_aBX
can_eq_nc
  [W] cobox_aEO :: (t_aEM, t_aEN) ~ t_aBX
  (t_aEM, t_aEN)
  (t_aEM, t_aEN)
  t_aBX
  t_aBX
canEqTyVar
  t_aBX
  (t_aEM, t_aEN)
  Is-swapped
Following bound tyvar t_aBX = Requirement
newWantedEvVar/cache miss
  [W] cobox_aJA :: Requirement ~ (t_aEM, t_aEN)
setEvBind
  ev = cobox_aEO
  tm  = CO Sym cobox_aJA
rewriteEqEvidence
  [W] cobox_aEO :: (t_aEM, t_aEN) ~ t_aBX
  Requirement
  (t_aEM, t_aEN)
  Sym cobox_aJA
canEqTyVar2
  t_aBX
  (t_aEM, t_aEN)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aJA :: Requirement ~ (t_aEM, t_aEN)
  Requirement
  Requirement
  (t_aEM, t_aEN)
  (t_aEM, t_aEN)
can_eq_nc
  [W] cobox_aJA :: Requirement ~ (t_aEM, t_aEN)
  (String, String)
  Requirement
  (t_aEM, t_aEN)
  (t_aEM, t_aEN)
newWantedEvVar/cache miss [W] cobox_aJB :: String ~ t_aEM
newWantedEvVar/cache miss [W] cobox_aJC :: String ~ t_aEN
setEvBind
  ev = cobox_aJA
  tm  = CO (cobox_aJB, cobox_aJC)_N
canEvNC:eq
  String
  t_aEM
can_eq_nc
  [W] cobox_aJB :: String ~ t_aEM
  String
  String
  t_aEM
  t_aEM
can_eq_nc
  [W] cobox_aJB :: String ~ t_aEM
  [Char]
  String
  t_aEM
  t_aEM
canEqTyVar
  t_aEM
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aJD :: t_aEM ~ String
setEvBind
  ev = cobox_aJB
  tm  = CO Sym cobox_aJD
rewriteEqEvidence
  [W] cobox_aJB :: String ~ t_aEM
  t_aEM
  String
  Sym cobox_aJD
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJD :: t_aEM
                                 ~ String [" a type equality (t_aEM, t_aEN)
                                                             ~
                                                             t_aBX " HTML.hs:23:69-73] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEM := String
  Coercion: t_aEM ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEM := String
setEvBind
  ev = cobox_aJD
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEM
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
165[<C:0,F:0>] [W] cobox_aJD :: t_aEM
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJC :: String
                                ~ t_aEN [" a type equality (t_aEM, t_aEN)
                                                           ~
                                                           t_aBX " HTML.hs:23:69-73] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJC :: String
                                 ~ t_aEN [" a type equality (t_aEM, t_aEN)
                                                            ~
                                                            t_aBX " HTML.hs:23:69-73] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJC :: String ~ t_aEN [" a type equality (t_aEM, t_aEN)
                                                     ~
                                                     t_aBX " HTML.hs:23:69-73] (CNonCanonical)
canEvNC:eq
  String
  t_aEN
can_eq_nc
  [W] cobox_aJC :: String ~ t_aEN
  String
  String
  t_aEN
  t_aEN
can_eq_nc
  [W] cobox_aJC :: String ~ t_aEN
  [Char]
  String
  t_aEN
  t_aEN
canEqTyVar
  t_aEN
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aJE :: t_aEN ~ String
setEvBind
  ev = cobox_aJC
  tm  = CO Sym cobox_aJE
rewriteEqEvidence
  [W] cobox_aJC :: String ~ t_aEN
  t_aEN
  String
  Sym cobox_aJE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJE :: t_aEN
                                 ~ String [" a type equality (t_aEM, t_aEN)
                                                             ~
                                                             t_aBX " HTML.hs:23:69-73] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEN := String
  Coercion: t_aEN ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEN := String
setEvBind
  ev = cobox_aJE
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEN
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
166[<C:0,F:0>] [W] cobox_aJE :: t_aEN
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEP :: t_aEf
                                ~ t_aEM [" a type equality t_aEf
                                                           ~
                                                           t_aEM " HTML.hs:23:70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEP :: t_aEf
                                 ~ t_aEM [" a type equality t_aEf
                                                            ~
                                                            t_aEM " HTML.hs:23:70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEP :: t_aEf ~ t_aEM [" a type equality t_aEf
                                                    ~
                                                    t_aEM " HTML.hs:23:70] (CNonCanonical)
canEvNC:eq
  t_aEf
  t_aEM
can_eq_nc
  [W] cobox_aEP :: t_aEf ~ t_aEM
  t_aEf
  t_aEf
  t_aEM
  t_aEM
canEqTyVar
  t_aEf
  t_aEM
  Not-swapped
Following bound tyvar t_aEf = String
canEqTyVar2
  t_aEf
  t_aEM
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEP :: String ~ t_aEM
  String
  String
  t_aEM
  t_aEM
can_eq_nc
  [W] cobox_aEP :: String ~ t_aEM
  [Char]
  String
  t_aEM
  t_aEM
canEqTyVar
  t_aEM
  [Char]
  Is-swapped
Following bound tyvar t_aEM = String
newWantedEvVar/cache miss [W] cobox_aJF :: String ~ String
setEvBind
  ev = cobox_aEP
  tm  = CO Sym cobox_aJF
rewriteEqEvidence
  [W] cobox_aEP :: String ~ t_aEM
  String
  String
  Sym cobox_aJF
canEqTyVar2
  t_aEM
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJF :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJF :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJG :: Char ~ Char
setEvBind
  ev = cobox_aJF
  tm  = CO [cobox_aJG]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJG :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJG
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEQ :: t_aEg
                                ~ t_aEN [" a type equality t_aEg
                                                           ~
                                                           t_aEN " HTML.hs:23:72] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEQ :: t_aEg
                                 ~ t_aEN [" a type equality t_aEg
                                                            ~
                                                            t_aEN " HTML.hs:23:72] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEQ :: t_aEg ~ t_aEN [" a type equality t_aEg
                                                    ~
                                                    t_aEN " HTML.hs:23:72] (CNonCanonical)
canEvNC:eq
  t_aEg
  t_aEN
can_eq_nc
  [W] cobox_aEQ :: t_aEg ~ t_aEN
  t_aEg
  t_aEg
  t_aEN
  t_aEN
canEqTyVar
  t_aEg
  t_aEN
  Not-swapped
Following bound tyvar t_aEg = String
canEqTyVar2
  t_aEg
  t_aEN
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEQ :: String ~ t_aEN
  String
  String
  t_aEN
  t_aEN
can_eq_nc
  [W] cobox_aEQ :: String ~ t_aEN
  [Char]
  String
  t_aEN
  t_aEN
canEqTyVar
  t_aEN
  [Char]
  Is-swapped
Following bound tyvar t_aEN = String
newWantedEvVar/cache miss [W] cobox_aJH :: String ~ String
setEvBind
  ev = cobox_aEQ
  tm  = CO Sym cobox_aJH
rewriteEqEvidence
  [W] cobox_aEQ :: String ~ t_aEN
  String
  String
  Sym cobox_aJH
canEqTyVar2
  t_aEN
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJH :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJH :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJI :: Char ~ Char
setEvBind
  ev = cobox_aJH
  tm  = CO [cobox_aJI]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJI :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJI
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aER :: HTML ~ t_aBY [" a type equality HTML
                                                                ~
                                                                t_aBY " HTML.hs:23:75] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aER :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:23:75] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aER :: HTML ~ t_aBY [" a type equality HTML
                                                   ~
                                                   t_aBY " HTML.hs:23:75] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBY
can_eq_nc
  [W] cobox_aER :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
Following bound tyvar t_aBY = HTML
newWantedEvVar/cache miss [W] cobox_aJJ :: HTML ~ HTML
setEvBind
  ev = cobox_aER
  tm  = CO Sym cobox_aJJ
rewriteEqEvidence
  [W] cobox_aER :: HTML ~ t_aBY
  HTML
  HTML
  Sym cobox_aJJ
canEqTyVar2
  t_aBY
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aJJ :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJJ
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aES :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                ~
                                                                Bool " HTML.hs:23:82-120] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aES :: t_aBZ
                                 ~ Bool [" a type equality t_aBZ
                                                           ~
                                                           Bool " HTML.hs:23:82-120] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aES :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                   ~
                                                   Bool " HTML.hs:23:82-120] (CNonCanonical)
canEvNC:eq
  t_aBZ
  Bool
can_eq_nc
  [W] cobox_aES :: t_aBZ ~ Bool
  t_aBZ
  t_aBZ
  Bool
  Bool
canEqTyVar
  t_aBZ
  Bool
  Not-swapped
Following bound tyvar t_aBZ = Bool
canEqTyVar2
  t_aBZ
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aES :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aES
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEV :: (t_aET, t_aEU)
                                ~ t_aBX [" a type equality (t_aET, t_aEU)
                                                           ~
                                                           t_aBX " HTML.hs:23:92-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEV :: (t_aET, t_aEU)
                                 ~ t_aBX [" a type equality (t_aET, t_aEU)
                                                            ~
                                                            t_aBX " HTML.hs:23:92-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEV :: (t_aET, t_aEU) ~ t_aBX [" a type equality (t_aET,
                                                              t_aEU)
                                                             ~
                                                             t_aBX " HTML.hs:23:92-96] (CNonCanonical)
canEvNC:eq
  (t_aET, t_aEU)
  t_aBX
can_eq_nc
  [W] cobox_aEV :: (t_aET, t_aEU) ~ t_aBX
  (t_aET, t_aEU)
  (t_aET, t_aEU)
  t_aBX
  t_aBX
canEqTyVar
  t_aBX
  (t_aET, t_aEU)
  Is-swapped
Following bound tyvar t_aBX = Requirement
newWantedEvVar/cache miss
  [W] cobox_aJK :: Requirement ~ (t_aET, t_aEU)
setEvBind
  ev = cobox_aEV
  tm  = CO Sym cobox_aJK
rewriteEqEvidence
  [W] cobox_aEV :: (t_aET, t_aEU) ~ t_aBX
  Requirement
  (t_aET, t_aEU)
  Sym cobox_aJK
canEqTyVar2
  t_aBX
  (t_aET, t_aEU)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aJK :: Requirement ~ (t_aET, t_aEU)
  Requirement
  Requirement
  (t_aET, t_aEU)
  (t_aET, t_aEU)
can_eq_nc
  [W] cobox_aJK :: Requirement ~ (t_aET, t_aEU)
  (String, String)
  Requirement
  (t_aET, t_aEU)
  (t_aET, t_aEU)
newWantedEvVar/cache miss [W] cobox_aJL :: String ~ t_aET
newWantedEvVar/cache miss [W] cobox_aJM :: String ~ t_aEU
setEvBind
  ev = cobox_aJK
  tm  = CO (cobox_aJL, cobox_aJM)_N
canEvNC:eq
  String
  t_aET
can_eq_nc
  [W] cobox_aJL :: String ~ t_aET
  String
  String
  t_aET
  t_aET
can_eq_nc
  [W] cobox_aJL :: String ~ t_aET
  [Char]
  String
  t_aET
  t_aET
canEqTyVar
  t_aET
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aJN :: t_aET ~ String
setEvBind
  ev = cobox_aJL
  tm  = CO Sym cobox_aJN
rewriteEqEvidence
  [W] cobox_aJL :: String ~ t_aET
  t_aET
  String
  Sym cobox_aJN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJN :: t_aET
                                 ~ String [" a type equality (t_aET, t_aEU)
                                                             ~
                                                             t_aBX " HTML.hs:23:92-96] (CTyEqCan)
Sneaky unification:
  Unifies: t_aET := String
  Coercion: t_aET ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aET := String
setEvBind
  ev = cobox_aJN
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aET
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
171[<C:0,F:0>] [W] cobox_aJN :: t_aET
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aJM :: String
                                ~ t_aEU [" a type equality (t_aET, t_aEU)
                                                           ~
                                                           t_aBX " HTML.hs:23:92-96] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aJM :: String
                                 ~ t_aEU [" a type equality (t_aET, t_aEU)
                                                            ~
                                                            t_aBX " HTML.hs:23:92-96] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aJM :: String ~ t_aEU [" a type equality (t_aET, t_aEU)
                                                     ~
                                                     t_aBX " HTML.hs:23:92-96] (CNonCanonical)
canEvNC:eq
  String
  t_aEU
can_eq_nc
  [W] cobox_aJM :: String ~ t_aEU
  String
  String
  t_aEU
  t_aEU
can_eq_nc
  [W] cobox_aJM :: String ~ t_aEU
  [Char]
  String
  t_aEU
  t_aEU
canEqTyVar
  t_aEU
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aJO :: t_aEU ~ String
setEvBind
  ev = cobox_aJM
  tm  = CO Sym cobox_aJO
rewriteEqEvidence
  [W] cobox_aJM :: String ~ t_aEU
  t_aEU
  String
  Sym cobox_aJO
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aJO :: t_aEU
                                 ~ String [" a type equality (t_aET, t_aEU)
                                                             ~
                                                             t_aBX " HTML.hs:23:92-96] (CTyEqCan)
Sneaky unification:
  Unifies: t_aEU := String
  Coercion: t_aEU ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aEU := String
setEvBind
  ev = cobox_aJO
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aEU
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
172[<C:0,F:0>] [W] cobox_aJO :: t_aEU
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEW :: t_aEf
                                ~ t_aET [" a type equality t_aEf
                                                           ~
                                                           t_aET " HTML.hs:23:93] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEW :: t_aEf
                                 ~ t_aET [" a type equality t_aEf
                                                            ~
                                                            t_aET " HTML.hs:23:93] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEW :: t_aEf ~ t_aET [" a type equality t_aEf
                                                    ~
                                                    t_aET " HTML.hs:23:93] (CNonCanonical)
canEvNC:eq
  t_aEf
  t_aET
can_eq_nc
  [W] cobox_aEW :: t_aEf ~ t_aET
  t_aEf
  t_aEf
  t_aET
  t_aET
canEqTyVar
  t_aEf
  t_aET
  Not-swapped
Following bound tyvar t_aEf = String
canEqTyVar2
  t_aEf
  t_aET
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEW :: String ~ t_aET
  String
  String
  t_aET
  t_aET
can_eq_nc
  [W] cobox_aEW :: String ~ t_aET
  [Char]
  String
  t_aET
  t_aET
canEqTyVar
  t_aET
  [Char]
  Is-swapped
Following bound tyvar t_aET = String
newWantedEvVar/cache miss [W] cobox_aJP :: String ~ String
setEvBind
  ev = cobox_aEW
  tm  = CO Sym cobox_aJP
rewriteEqEvidence
  [W] cobox_aEW :: String ~ t_aET
  String
  String
  Sym cobox_aJP
canEqTyVar2
  t_aET
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJP :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJP :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJQ :: Char ~ Char
setEvBind
  ev = cobox_aJP
  tm  = CO [cobox_aJQ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJQ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJQ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEX :: t_aEg
                                ~ t_aEU [" a type equality t_aEg
                                                           ~
                                                           t_aEU " HTML.hs:23:95] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEX :: t_aEg
                                 ~ t_aEU [" a type equality t_aEg
                                                            ~
                                                            t_aEU " HTML.hs:23:95] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEX :: t_aEg ~ t_aEU [" a type equality t_aEg
                                                    ~
                                                    t_aEU " HTML.hs:23:95] (CNonCanonical)
canEvNC:eq
  t_aEg
  t_aEU
can_eq_nc
  [W] cobox_aEX :: t_aEg ~ t_aEU
  t_aEg
  t_aEg
  t_aEU
  t_aEU
canEqTyVar
  t_aEg
  t_aEU
  Not-swapped
Following bound tyvar t_aEg = String
canEqTyVar2
  t_aEg
  t_aEU
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aEX :: String ~ t_aEU
  String
  String
  t_aEU
  t_aEU
can_eq_nc
  [W] cobox_aEX :: String ~ t_aEU
  [Char]
  String
  t_aEU
  t_aEU
canEqTyVar
  t_aEU
  [Char]
  Is-swapped
Following bound tyvar t_aEU = String
newWantedEvVar/cache miss [W] cobox_aJR :: String ~ String
setEvBind
  ev = cobox_aEX
  tm  = CO Sym cobox_aJR
rewriteEqEvidence
  [W] cobox_aEX :: String ~ t_aEU
  String
  String
  Sym cobox_aJR
canEqTyVar2
  t_aEU
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aJR :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aJR :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJS :: Char ~ Char
setEvBind
  ev = cobox_aJR
  tm  = CO [cobox_aJS]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJS :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJS
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEY :: HTML ~ t_aBY [" a type equality HTML
                                                                ~
                                                                t_aBY " HTML.hs:23:99-119] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEY :: HTML ~ t_aBY [" a type equality HTML
                                                                 ~
                                                                 t_aBY " HTML.hs:23:99-119] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEY :: HTML ~ t_aBY [" a type equality HTML
                                                   ~
                                                   t_aBY " HTML.hs:23:99-119] (CNonCanonical)
canEvNC:eq
  HTML
  t_aBY
can_eq_nc
  [W] cobox_aEY :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
Following bound tyvar t_aBY = HTML
newWantedEvVar/cache miss [W] cobox_aJT :: HTML ~ HTML
setEvBind
  ev = cobox_aEY
  tm  = CO Sym cobox_aJT
rewriteEqEvidence
  [W] cobox_aEY :: HTML ~ t_aBY
  HTML
  HTML
  Sym cobox_aJT
canEqTyVar2
  t_aBY
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aJT :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJT
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aEZ :: String
                                ~ String [" a type equality String
                                                            ~
                                                            String " HTML.hs:23:109-112] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aEZ :: String
                                 ~ String [" a type equality String
                                                             ~
                                                             String " HTML.hs:23:109-112] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aEZ :: String ~ String [" a type equality String
                                                      ~
                                                      String " HTML.hs:23:109-112] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aEZ :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aEZ :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aEZ :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aJU :: Char ~ Char
setEvBind
  ev = cobox_aEZ
  tm  = CO [cobox_aJU]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJU :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJU
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF0 :: [Attributen]
                                ~ [Attributen] [" a type equality [Attributen]
                                                                  ~
                                                                  [Attributen] " HTML.hs:23:114-116] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF0 :: [Attributen]
                                 ~ [Attributen] [" a type equality [Attributen]
                                                                   ~
                                                                   [Attributen] " HTML.hs:23:114-116] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF0 :: [Attributen]
                   ~ [Attributen] [" a type equality [Attributen]
                                                     ~
                                                     [Attributen] " HTML.hs:23:114-116] (CNonCanonical)
canEvNC:eq
  [Attributen]
  [Attributen]
can_eq_nc
  [W] cobox_aF0 :: [Attributen] ~ [Attributen]
  [Attributen]
  [Attributen]
  [Attributen]
  [Attributen]
newWantedEvVar/cache miss [W] cobox_aJV :: Attributen ~ Attributen
setEvBind
  ev = cobox_aF0
  tm  = CO [cobox_aJV]_N
canEvNC:eq
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aJV :: Attributen ~ Attributen
  Attributen
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aJV :: Attributen ~ Attributen
  String
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aJV :: Attributen ~ Attributen
  [Char]
  Attributen
  Attributen
  Attributen
can_eq_nc
  [W] cobox_aJV :: Attributen ~ Attributen
  [Char]
  Attributen
  String
  Attributen
can_eq_nc
  [W] cobox_aJV :: Attributen ~ Attributen
  [Char]
  Attributen
  [Char]
  Attributen
newWantedEvVar/cache miss [W] cobox_aJW :: Char ~ Char
setEvBind
  ev = cobox_aJV
  tm  = CO [cobox_aJW]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aJW :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aJW
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF1 :: [HTML]
                                ~ [HTML] [" a type equality [HTML]
                                                            ~
                                                            [HTML] " HTML.hs:23:118-119] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF1 :: [HTML]
                                 ~ [HTML] [" a type equality [HTML]
                                                             ~
                                                             [HTML] " HTML.hs:23:118-119] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF1 :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                      ~
                                                      [HTML] " HTML.hs:23:118-119] (CNonCanonical)
canEvNC:eq
  [HTML]
  [HTML]
can_eq_nc
  [W] cobox_aF1 :: [HTML] ~ [HTML]
  [HTML]
  [HTML]
  [HTML]
  [HTML]
newWantedEvVar/cache miss [W] cobox_aJX :: HTML ~ HTML
setEvBind
  ev = cobox_aF1
  tm  = CO [cobox_aJX]_N
canEvNC:eq
  HTML
  HTML
can_eq_nc
  [W] cobox_aJX :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aJX
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                ~
                                                                t_aBZ " HTML.hs:24:17-20] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                 ~
                                                                 t_aBZ " HTML.hs:24:17-20] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF2 :: Bool ~ t_aBZ [" a type equality Bool
                                                   ~
                                                   t_aBZ " HTML.hs:24:17-20] (CNonCanonical)
canEvNC:eq
  Bool
  t_aBZ
can_eq_nc
  [W] cobox_aF2 :: Bool ~ t_aBZ
  Bool
  Bool
  t_aBZ
  t_aBZ
canEqTyVar
  t_aBZ
  Bool
  Is-swapped
Following bound tyvar t_aBZ = Bool
newWantedEvVar/cache miss [W] cobox_aJY :: Bool ~ Bool
setEvBind
  ev = cobox_aF2
  tm  = CO Sym cobox_aJY
rewriteEqEvidence
  [W] cobox_aF2 :: Bool ~ t_aBZ
  Bool
  Bool
  Sym cobox_aJY
canEqTyVar2
  t_aBZ
  Bool
  Is-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aJY :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aJY
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF5 :: [t_aF4]
                                ~ t_aBR [" a type equality [t_aF4]
                                                           ~
                                                           t_aBR " HTML.hs:27:11-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF5 :: [t_aF4]
                                 ~ t_aBR [" a type equality [t_aF4]
                                                            ~
                                                            t_aBR " HTML.hs:27:11-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF5 :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                      ~
                                                      t_aBR " HTML.hs:27:11-18] (CNonCanonical)
canEvNC:eq
  [t_aF4]
  t_aBR
can_eq_nc
  [W] cobox_aF5 :: [t_aF4] ~ t_aBR
  [t_aF4]
  [t_aF4]
  t_aBR
  t_aBR
canEqTyVar
  t_aBR
  [t_aF4]
  Is-swapped
Following bound tyvar t_aBR = [Requirement]
newWantedEvVar/cache miss [W] cobox_aJZ :: [Requirement] ~ [t_aF4]
setEvBind
  ev = cobox_aF5
  tm  = CO Sym cobox_aJZ
rewriteEqEvidence
  [W] cobox_aF5 :: [t_aF4] ~ t_aBR
  [Requirement]
  [t_aF4]
  Sym cobox_aJZ
canEqTyVar2
  t_aBR
  [t_aF4]
  Is-swapped
  [Requirement]
  <[Requirement]>_N
can_eq_nc
  [W] cobox_aJZ :: [Requirement] ~ [t_aF4]
  [Requirement]
  [Requirement]
  [t_aF4]
  [t_aF4]
newWantedEvVar/cache miss [W] cobox_aK0 :: Requirement ~ t_aF4
setEvBind
  ev = cobox_aJZ
  tm  = CO [cobox_aK0]_N
canEvNC:eq
  Requirement
  t_aF4
can_eq_nc
  [W] cobox_aK0 :: Requirement ~ t_aF4
  Requirement
  Requirement
  t_aF4
  t_aF4
can_eq_nc
  [W] cobox_aK0 :: Requirement ~ t_aF4
  (String, String)
  Requirement
  t_aF4
  t_aF4
canEqTyVar
  t_aF4
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aK1 :: t_aF4 ~ Requirement
setEvBind
  ev = cobox_aK0
  tm  = CO Sym cobox_aK1
rewriteEqEvidence
  [W] cobox_aK0 :: Requirement ~ t_aF4
  t_aF4
  Requirement
  Sym cobox_aK1
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aK1 :: t_aF4
                                 ~ Requirement [" a type equality [t_aF4]
                                                                  ~
                                                                  t_aBR " HTML.hs:27:11-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aF4 := Requirement
  Coercion: t_aF4 ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aF4 := Requirement
setEvBind
  ev = cobox_aK1
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  t_aF4
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
180[<C:0,F:0>] [W] cobox_aK1 :: t_aF4
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF6 :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML.hs:27:28-70] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF6 :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:27:28-70] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF6 :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML.hs:27:28-70] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aF6 :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aF6
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aF7 :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                ~
                                                                Bool " HTML.hs:27:32-69] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aF7 :: t_aC9
                                 ~ Bool [" a type equality t_aC9
                                                           ~
                                                           Bool " HTML.hs:27:32-69] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aF7 :: t_aC9 ~ Bool [" a type equality t_aC9
                                                   ~
                                                   Bool " HTML.hs:27:32-69] (CNonCanonical)
canEvNC:eq
  t_aC9
  Bool
can_eq_nc
  [W] cobox_aF7 :: t_aC9 ~ Bool
  t_aC9
  t_aC9
  Bool
  Bool
canEqTyVar
  t_aC9
  Bool
  Not-swapped
Following bound tyvar t_aC9 = Bool
canEqTyVar2
  t_aC9
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aF7 :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aF7
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFc :: b_aFb
                                ~ t_aC7 [" a type equality b_aFb
                                                           ~
                                                           t_aC7 " HTML.hs:27:42-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFc :: b_aFb
                                 ~ t_aC7 [" a type equality b_aFb
                                                            ~
                                                            t_aC7 " HTML.hs:27:42-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFc :: b_aFb ~ t_aC7 [" a type equality b_aFb
                                                    ~
                                                    t_aC7 " HTML.hs:27:42-50] (CNonCanonical)
canEvNC:eq
  b_aFb
  t_aC7
can_eq_nc
  [W] cobox_aFc :: b_aFb ~ t_aC7
  b_aFb
  b_aFb
  t_aC7
  t_aC7
canEqTyVar
  b_aFb
  t_aC7
  Not-swapped
Following bound tyvar t_aC7 = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aFc :: b_aFb
                                 ~ String [" a type equality b_aFb
                                                             ~
                                                             t_aC7 " HTML.hs:27:42-50] (CTyEqCan)
Sneaky unification:
  Unifies: b_aFb := String
  Coercion: b_aFb ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aFb := String
setEvBind
  ev = cobox_aFc
  tm  = CO <String>_N
kickOutRewritable
  tv =  b_aFb
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
183[<C:0,F:0>] [W] cobox_aFc :: b_aFb
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFd :: t_aF4
                                ~ (a_aFa, b_aFb) [" a type equality t_aF4
                                                                    ~
                                                                    (a_aFa,
                                                                     b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFd :: t_aF4
                                 ~ (a_aFa, b_aFb) [" a type equality t_aF4
                                                                     ~
                                                                     (a_aFa,
                                                                      b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFd :: t_aF4 ~ (a_aFa, b_aFb) [" a type equality t_aF4
                                                             ~
                                                             (a_aFa,
                                                              b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
canEvNC:eq
  t_aF4
  (a_aFa, b_aFb)
can_eq_nc
  [W] cobox_aFd :: t_aF4 ~ (a_aFa, b_aFb)
  t_aF4
  t_aF4
  (a_aFa, b_aFb)
  (a_aFa, b_aFb)
canEqTyVar
  t_aF4
  (a_aFa, b_aFb)
  Not-swapped
Following bound tyvar t_aF4 = Requirement
canEqTyVar2
  t_aF4
  (a_aFa, b_aFb)
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aFd :: Requirement ~ (a_aFa, b_aFb)
  Requirement
  Requirement
  (a_aFa, b_aFb)
  (a_aFa, b_aFb)
can_eq_nc
  [W] cobox_aFd :: Requirement ~ (a_aFa, b_aFb)
  (String, String)
  Requirement
  (a_aFa, b_aFb)
  (a_aFa, b_aFb)
newWantedEvVar/cache miss [W] cobox_aK2 :: String ~ a_aFa
newWantedEvVar/cache miss [W] cobox_aK3 :: String ~ b_aFb
setEvBind
  ev = cobox_aFd
  tm  = CO (cobox_aK2, cobox_aK3)_N
canEvNC:eq
  String
  a_aFa
can_eq_nc
  [W] cobox_aK2 :: String ~ a_aFa
  String
  String
  a_aFa
  a_aFa
can_eq_nc
  [W] cobox_aK2 :: String ~ a_aFa
  [Char]
  String
  a_aFa
  a_aFa
canEqTyVar
  a_aFa
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aK4 :: a_aFa ~ String
setEvBind
  ev = cobox_aK2
  tm  = CO Sym cobox_aK4
rewriteEqEvidence
  [W] cobox_aK2 :: String ~ a_aFa
  a_aFa
  String
  Sym cobox_aK4
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aK4 :: a_aFa
                                 ~ String [" a type equality t_aF4
                                                             ~
                                                             (a_aFa,
                                                              b_aFb) " HTML.hs:27:46-50] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFa := String
  Coercion: a_aFa ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFa := String
setEvBind
  ev = cobox_aK4
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aFa
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
184[<C:0,F:0>] [W] cobox_aK4 :: a_aFa
                                ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aK3 :: String
                                ~ b_aFb [" a type equality t_aF4
                                                           ~
                                                           (a_aFa,
                                                            b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aK3 :: String
                                 ~ b_aFb [" a type equality t_aF4
                                                            ~
                                                            (a_aFa,
                                                             b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aK3 :: String ~ b_aFb [" a type equality t_aF4
                                                     ~
                                                     (a_aFa,
                                                      b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
canEvNC:eq
  String
  b_aFb
can_eq_nc
  [W] cobox_aK3 :: String ~ b_aFb
  String
  String
  b_aFb
  b_aFb
can_eq_nc
  [W] cobox_aK3 :: String ~ b_aFb
  [Char]
  String
  b_aFb
  b_aFb
canEqTyVar
  b_aFb
  [Char]
  Is-swapped
Following bound tyvar b_aFb = String
newWantedEvVar/cache miss [W] cobox_aK5 :: String ~ String
setEvBind
  ev = cobox_aK3
  tm  = CO Sym cobox_aK5
rewriteEqEvidence
  [W] cobox_aK3 :: String ~ b_aFb
  String
  String
  Sym cobox_aK5
canEqTyVar2
  b_aFb
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aK5 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aK5 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aK6 :: Char ~ Char
setEvBind
  ev = cobox_aK5
  tm  = CO [cobox_aK6]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aK6 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aK6
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFe :: t_aC4
                                ~ t_aC8 [" a type equality t_aC4
                                                           ~
                                                           t_aC8 " HTML.hs:27:54-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFe :: t_aC4
                                 ~ t_aC8 [" a type equality t_aC4
                                                            ~
                                                            t_aC8 " HTML.hs:27:54-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFe :: t_aC4 ~ t_aC8 [" a type equality t_aC4
                                                    ~
                                                    t_aC8 " HTML.hs:27:54-68] (CNonCanonical)
canEvNC:eq
  t_aC4
  t_aC8
can_eq_nc
  [W] cobox_aFe :: t_aC4 ~ t_aC8
  t_aC4
  t_aC4
  t_aC8
  t_aC8
canEqTyVar
  t_aC4
  t_aC8
  Not-swapped
Following bound tyvar t_aC4 = String
canEqTyVar2
  t_aC4
  t_aC8
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aFe :: String ~ t_aC8
  String
  String
  t_aC8
  t_aC8
can_eq_nc
  [W] cobox_aFe :: String ~ t_aC8
  [Char]
  String
  t_aC8
  t_aC8
canEqTyVar
  t_aC8
  [Char]
  Is-swapped
Following bound tyvar t_aC8 = String
newWantedEvVar/cache miss [W] cobox_aK7 :: String ~ String
setEvBind
  ev = cobox_aFe
  tm  = CO Sym cobox_aK7
rewriteEqEvidence
  [W] cobox_aFe :: String ~ t_aC8
  String
  String
  Sym cobox_aK7
canEqTyVar2
  t_aC8
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aK7 :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aK7 :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aK8 :: Char ~ Char
setEvBind
  ev = cobox_aK7
  tm  = CO [cobox_aK8]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aK8 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aK8
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFf :: t_aBS
                                ~ t_aC3 [" a type equality t_aBS
                                                           ~
                                                           t_aC3 " HTML.hs:27:65-68] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFf :: t_aBS
                                 ~ t_aC3 [" a type equality t_aBS
                                                            ~
                                                            t_aC3 " HTML.hs:27:65-68] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFf :: t_aBS ~ t_aC3 [" a type equality t_aBS
                                                    ~
                                                    t_aC3 " HTML.hs:27:65-68] (CNonCanonical)
canEvNC:eq
  t_aBS
  t_aC3
can_eq_nc
  [W] cobox_aFf :: t_aBS ~ t_aC3
  t_aBS
  t_aBS
  t_aC3
  t_aC3
canEqTyVar
  t_aBS
  t_aC3
  Not-swapped
Following bound tyvar t_aBS = HTML
canEqTyVar2
  t_aBS
  t_aC3
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aFf :: HTML ~ t_aC3
  HTML
  HTML
  t_aC3
  t_aC3
canEqTyVar
  t_aC3
  HTML
  Is-swapped
Following bound tyvar t_aC3 = HTML
newWantedEvVar/cache miss [W] cobox_aK9 :: HTML ~ HTML
setEvBind
  ev = cobox_aFf
  tm  = CO Sym cobox_aK9
rewriteEqEvidence
  [W] cobox_aFf :: HTML ~ t_aC3
  HTML
  HTML
  Sym cobox_aK9
canEqTyVar2
  t_aC3
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aK9 :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aK9
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFg :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                ~
                                                                Bool " HTML.hs:27:78-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFg :: t_aBZ
                                 ~ Bool [" a type equality t_aBZ
                                                           ~
                                                           Bool " HTML.hs:27:78-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFg :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                   ~
                                                   Bool " HTML.hs:27:78-97] (CNonCanonical)
canEvNC:eq
  t_aBZ
  Bool
can_eq_nc
  [W] cobox_aFg :: t_aBZ ~ Bool
  t_aBZ
  t_aBZ
  Bool
  Bool
canEqTyVar
  t_aBZ
  Bool
  Not-swapped
Following bound tyvar t_aBZ = Bool
canEqTyVar2
  t_aBZ
  Bool
  Not-swapped
  Bool
  <Bool>_N
can_eq_nc
  [W] cobox_aFg :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aFg
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFh :: t_aF4
                                ~ t_aBX [" a type equality t_aF4
                                                           ~
                                                           t_aBX " HTML.hs:27:88-92] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFh :: t_aF4
                                 ~ t_aBX [" a type equality t_aF4
                                                            ~
                                                            t_aBX " HTML.hs:27:88-92] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFh :: t_aF4 ~ t_aBX [" a type equality t_aF4
                                                    ~
                                                    t_aBX " HTML.hs:27:88-92] (CNonCanonical)
canEvNC:eq
  t_aF4
  t_aBX
can_eq_nc
  [W] cobox_aFh :: t_aF4 ~ t_aBX
  t_aF4
  t_aF4
  t_aBX
  t_aBX
canEqTyVar
  t_aF4
  t_aBX
  Not-swapped
Following bound tyvar t_aF4 = Requirement
canEqTyVar2
  t_aF4
  t_aBX
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aFh :: Requirement ~ t_aBX
  Requirement
  Requirement
  t_aBX
  t_aBX
can_eq_nc
  [W] cobox_aFh :: Requirement ~ t_aBX
  (String, String)
  Requirement
  t_aBX
  t_aBX
canEqTyVar
  t_aBX
  (String, String)
  Is-swapped
Following bound tyvar t_aBX = Requirement
newWantedEvVar/cache miss
  [W] cobox_aKa :: Requirement ~ Requirement
setEvBind
  ev = cobox_aFh
  tm  = CO Sym cobox_aKa
rewriteEqEvidence
  [W] cobox_aFh :: Requirement ~ t_aBX
  Requirement
  Requirement
  Sym cobox_aKa
canEqTyVar2
  t_aBX
  (String, String)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aKa :: Requirement ~ Requirement
  Requirement
  Requirement
  (String, String)
  Requirement
can_eq_nc
  [W] cobox_aKa :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_aKb :: String ~ String
newWantedEvVar/cache miss [W] cobox_aKc :: String ~ String
setEvBind
  ev = cobox_aKa
  tm  = CO (cobox_aKb, cobox_aKc)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKb :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKb :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKb :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKd :: Char ~ Char
setEvBind
  ev = cobox_aKb
  tm  = CO [cobox_aKd]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKd :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKd
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKc :: String
                                ~ String [" a type equality t_aF4
                                                            ~
                                                            t_aBX " HTML.hs:27:88-92] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKc :: String
                                 ~ String [" a type equality t_aF4
                                                             ~
                                                             t_aBX " HTML.hs:27:88-92] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKc :: String ~ String [" a type equality t_aF4
                                                      ~
                                                      t_aBX " HTML.hs:27:88-92] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKc :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKc :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKc :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKe :: Char ~ Char
setEvBind
  ev = cobox_aKc
  tm  = CO [cobox_aKe]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKe :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKe
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFi :: t_aBS
                                ~ t_aBY [" a type equality t_aBS
                                                           ~
                                                           t_aBY " HTML.hs:27:94-97] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFi :: t_aBS
                                 ~ t_aBY [" a type equality t_aBS
                                                            ~
                                                            t_aBY " HTML.hs:27:94-97] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFi :: t_aBS ~ t_aBY [" a type equality t_aBS
                                                    ~
                                                    t_aBY " HTML.hs:27:94-97] (CNonCanonical)
canEvNC:eq
  t_aBS
  t_aBY
can_eq_nc
  [W] cobox_aFi :: t_aBS ~ t_aBY
  t_aBS
  t_aBS
  t_aBY
  t_aBY
canEqTyVar
  t_aBS
  t_aBY
  Not-swapped
Following bound tyvar t_aBS = HTML
canEqTyVar2
  t_aBS
  t_aBY
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aFi :: HTML ~ t_aBY
  HTML
  HTML
  t_aBY
  t_aBY
canEqTyVar
  t_aBY
  HTML
  Is-swapped
Following bound tyvar t_aBY = HTML
newWantedEvVar/cache miss [W] cobox_aKf :: HTML ~ HTML
setEvBind
  ev = cobox_aFi
  tm  = CO Sym cobox_aKf
rewriteEqEvidence
  [W] cobox_aFi :: HTML ~ t_aBY
  HTML
  HTML
  Sym cobox_aKf
canEqTyVar2
  t_aBY
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aKf :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aKf
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFj :: t_aBT
                                ~ t_aBT [" a type equality t_aBT
                                                           ~
                                                           t_aBT " HTML.hs:28:80-95] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFj :: t_aBT
                                 ~ t_aBT [" a type equality t_aBT
                                                            ~
                                                            t_aBT " HTML.hs:28:80-95] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFj :: t_aBT ~ t_aBT [" a type equality t_aBT
                                                    ~
                                                    t_aBT " HTML.hs:28:80-95] (CNonCanonical)
canEvNC:eq
  t_aBT
  t_aBT
can_eq_nc
  [W] cobox_aFj :: t_aBT ~ t_aBT
  t_aBT
  t_aBT
  t_aBT
  t_aBT
canEqTyVar
  t_aBT
  t_aBT
  Not-swapped
Following bound tyvar t_aBT = Maybe Requirement
canEqTyVar2
  t_aBT
  t_aBT
  Not-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aFj :: Maybe Requirement ~ t_aBT
  Maybe Requirement
  Maybe Requirement
  t_aBT
  t_aBT
canEqTyVar
  t_aBT
  Maybe Requirement
  Is-swapped
Following bound tyvar t_aBT = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aKg :: Maybe Requirement ~ Maybe Requirement
setEvBind
  ev = cobox_aFj
  tm  = CO Sym cobox_aKg
rewriteEqEvidence
  [W] cobox_aFj :: Maybe Requirement ~ t_aBT
  Maybe Requirement
  Maybe Requirement
  Sym cobox_aKg
canEqTyVar2
  t_aBT
  Maybe Requirement
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aKg :: Maybe Requirement ~ Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
  Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aKh :: Requirement ~ Requirement
setEvBind
  ev = cobox_aKg
  tm  = CO Maybe cobox_aKh_N
canEvNC:eq
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aKh :: Requirement ~ Requirement
  Requirement
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aKh :: Requirement ~ Requirement
  (String, String)
  Requirement
  Requirement
  Requirement
can_eq_nc
  [W] cobox_aKh :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_aKi :: String ~ String
newWantedEvVar/cache miss [W] cobox_aKj :: String ~ String
setEvBind
  ev = cobox_aKh
  tm  = CO (cobox_aKi, cobox_aKj)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKi :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKi :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKi :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKk :: Char ~ Char
setEvBind
  ev = cobox_aKi
  tm  = CO [cobox_aKk]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKj :: String
                                ~ String [" a type equality t_aBT
                                                            ~
                                                            t_aBT " HTML.hs:28:80-95] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKj :: String
                                 ~ String [" a type equality t_aBT
                                                             ~
                                                             t_aBT " HTML.hs:28:80-95] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKj :: String ~ String [" a type equality t_aBT
                                                      ~
                                                      t_aBT " HTML.hs:28:80-95] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKj :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKj :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKj :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKl :: Char ~ Char
setEvBind
  ev = cobox_aKj
  tm  = CO [cobox_aKl]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKl :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKl
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFk :: [t_aF4]
                                ~ t_aBR [" a type equality [t_aF4]
                                                           ~
                                                           t_aBR " HTML.hs:28:89-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFk :: [t_aF4]
                                 ~ t_aBR [" a type equality [t_aF4]
                                                            ~
                                                            t_aBR " HTML.hs:28:89-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFk :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                      ~
                                                      t_aBR " HTML.hs:28:89-90] (CNonCanonical)
canEvNC:eq
  [t_aF4]
  t_aBR
can_eq_nc
  [W] cobox_aFk :: [t_aF4] ~ t_aBR
  [t_aF4]
  [t_aF4]
  t_aBR
  t_aBR
canEqTyVar
  t_aBR
  [t_aF4]
  Is-swapped
Following bound tyvar t_aBR = [Requirement]
newWantedEvVar/cache miss [W] cobox_aKm :: [Requirement] ~ [t_aF4]
setEvBind
  ev = cobox_aFk
  tm  = CO Sym cobox_aKm
rewriteEqEvidence
  [W] cobox_aFk :: [t_aF4] ~ t_aBR
  [Requirement]
  [t_aF4]
  Sym cobox_aKm
canEqTyVar2
  t_aBR
  [t_aF4]
  Is-swapped
  [Requirement]
  <[Requirement]>_N
can_eq_nc
  [W] cobox_aKm :: [Requirement] ~ [t_aF4]
  [Requirement]
  [Requirement]
  [t_aF4]
  [t_aF4]
newWantedEvVar/cache miss [W] cobox_aKn :: Requirement ~ t_aF4
setEvBind
  ev = cobox_aKm
  tm  = CO [cobox_aKn]_N
canEvNC:eq
  Requirement
  t_aF4
can_eq_nc
  [W] cobox_aKn :: Requirement ~ t_aF4
  Requirement
  Requirement
  t_aF4
  t_aF4
can_eq_nc
  [W] cobox_aKn :: Requirement ~ t_aF4
  (String, String)
  Requirement
  t_aF4
  t_aF4
canEqTyVar
  t_aF4
  (String, String)
  Is-swapped
Following bound tyvar t_aF4 = Requirement
newWantedEvVar/cache miss
  [W] cobox_aKo :: Requirement ~ Requirement
setEvBind
  ev = cobox_aKn
  tm  = CO Sym cobox_aKo
rewriteEqEvidence
  [W] cobox_aKn :: Requirement ~ t_aF4
  Requirement
  Requirement
  Sym cobox_aKo
canEqTyVar2
  t_aF4
  (String, String)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aKo :: Requirement ~ Requirement
  Requirement
  Requirement
  (String, String)
  Requirement
can_eq_nc
  [W] cobox_aKo :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_aKp :: String ~ String
newWantedEvVar/cache miss [W] cobox_aKq :: String ~ String
setEvBind
  ev = cobox_aKo
  tm  = CO (cobox_aKp, cobox_aKq)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKp :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKp :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKp :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKr :: Char ~ Char
setEvBind
  ev = cobox_aKp
  tm  = CO [cobox_aKr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKq :: String
                                ~ String [" a type equality [t_aF4]
                                                            ~
                                                            t_aBR " HTML.hs:28:89-90] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKq :: String
                                 ~ String [" a type equality [t_aF4]
                                                             ~
                                                             t_aBR " HTML.hs:28:89-90] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKq :: String ~ String [" a type equality [t_aF4]
                                                      ~
                                                      t_aBR " HTML.hs:28:89-90] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKq :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKq :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKq :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKs :: Char ~ Char
setEvBind
  ev = cobox_aKq
  tm  = CO [cobox_aKs]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKs :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKs
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFl :: t_aBS
                                ~ t_aBS [" a type equality t_aBS
                                                           ~
                                                           t_aBS " HTML.hs:28:92-95] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFl :: t_aBS
                                 ~ t_aBS [" a type equality t_aBS
                                                            ~
                                                            t_aBS " HTML.hs:28:92-95] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFl :: t_aBS ~ t_aBS [" a type equality t_aBS
                                                    ~
                                                    t_aBS " HTML.hs:28:92-95] (CNonCanonical)
canEvNC:eq
  t_aBS
  t_aBS
can_eq_nc
  [W] cobox_aFl :: t_aBS ~ t_aBS
  t_aBS
  t_aBS
  t_aBS
  t_aBS
canEqTyVar
  t_aBS
  t_aBS
  Not-swapped
Following bound tyvar t_aBS = HTML
canEqTyVar2
  t_aBS
  t_aBS
  Not-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aFl :: HTML ~ t_aBS
  HTML
  HTML
  t_aBS
  t_aBS
canEqTyVar
  t_aBS
  HTML
  Is-swapped
Following bound tyvar t_aBS = HTML
newWantedEvVar/cache miss [W] cobox_aKt :: HTML ~ HTML
setEvBind
  ev = cobox_aFl
  tm  = CO Sym cobox_aKt
rewriteEqEvidence
  [W] cobox_aFl :: HTML ~ t_aBS
  HTML
  HTML
  Sym cobox_aKt
canEqTyVar2
  t_aBS
  HTML
  Is-swapped
  HTML
  <HTML>_N
can_eq_nc
  [W] cobox_aKt :: HTML ~ HTML
  HTML
  HTML
  HTML
  HTML
setEvBind
  ev = cobox_aKt
  tm  = CO <HTML>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFn :: Maybe a_aFm
                                ~ t_aBT [" a type equality Maybe a_aFm
                                                           ~
                                                           t_aBT " HTML.hs:30:80-89] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFn :: Maybe a_aFm
                                 ~ t_aBT [" a type equality Maybe a_aFm
                                                            ~
                                                            t_aBT " HTML.hs:30:80-89] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFn :: Maybe a_aFm ~ t_aBT [" a type equality Maybe a_aFm
                                                          ~
                                                          t_aBT " HTML.hs:30:80-89] (CNonCanonical)
canEvNC:eq
  Maybe a_aFm
  t_aBT
can_eq_nc
  [W] cobox_aFn :: Maybe a_aFm ~ t_aBT
  Maybe a_aFm
  Maybe a_aFm
  t_aBT
  t_aBT
canEqTyVar
  t_aBT
  Maybe a_aFm
  Is-swapped
Following bound tyvar t_aBT = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aKu :: Maybe Requirement ~ Maybe a_aFm
setEvBind
  ev = cobox_aFn
  tm  = CO Sym cobox_aKu
rewriteEqEvidence
  [W] cobox_aFn :: Maybe a_aFm ~ t_aBT
  Maybe Requirement
  Maybe a_aFm
  Sym cobox_aKu
canEqTyVar2
  t_aBT
  Maybe a_aFm
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aKu :: Maybe Requirement ~ Maybe a_aFm
  Maybe Requirement
  Maybe Requirement
  Maybe a_aFm
  Maybe a_aFm
newWantedEvVar/cache miss [W] cobox_aKv :: Requirement ~ a_aFm
setEvBind
  ev = cobox_aKu
  tm  = CO Maybe cobox_aKv_N
canEvNC:eq
  Requirement
  a_aFm
can_eq_nc
  [W] cobox_aKv :: Requirement ~ a_aFm
  Requirement
  Requirement
  a_aFm
  a_aFm
can_eq_nc
  [W] cobox_aKv :: Requirement ~ a_aFm
  (String, String)
  Requirement
  a_aFm
  a_aFm
canEqTyVar
  a_aFm
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aKw :: a_aFm ~ Requirement
setEvBind
  ev = cobox_aKv
  tm  = CO Sym cobox_aKw
rewriteEqEvidence
  [W] cobox_aKv :: Requirement ~ a_aFm
  a_aFm
  Requirement
  Sym cobox_aKw
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aKw :: a_aFm
                                 ~ Requirement [" a type equality Maybe a_aFm
                                                                  ~
                                                                  t_aBT " HTML.hs:30:80-89] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFm := Requirement
  Coercion: a_aFm ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFm := Requirement
setEvBind
  ev = cobox_aKw
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aFm
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
197[<C:0,F:0>] [W] cobox_aKw :: a_aFm
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFo :: t_aF4
                                ~ a_aFm [" a type equality t_aF4
                                                           ~
                                                           a_aFm " HTML.hs:30:85-89] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFo :: t_aF4
                                 ~ a_aFm [" a type equality t_aF4
                                                            ~
                                                            a_aFm " HTML.hs:30:85-89] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFo :: t_aF4 ~ a_aFm [" a type equality t_aF4
                                                    ~
                                                    a_aFm " HTML.hs:30:85-89] (CNonCanonical)
canEvNC:eq
  t_aF4
  a_aFm
can_eq_nc
  [W] cobox_aFo :: t_aF4 ~ a_aFm
  t_aF4
  t_aF4
  a_aFm
  a_aFm
canEqTyVar
  t_aF4
  a_aFm
  Not-swapped
Following bound tyvar t_aF4 = Requirement
canEqTyVar2
  t_aF4
  a_aFm
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aFo :: Requirement ~ a_aFm
  Requirement
  Requirement
  a_aFm
  a_aFm
can_eq_nc
  [W] cobox_aFo :: Requirement ~ a_aFm
  (String, String)
  Requirement
  a_aFm
  a_aFm
canEqTyVar
  a_aFm
  (String, String)
  Is-swapped
Following bound tyvar a_aFm = Requirement
newWantedEvVar/cache miss
  [W] cobox_aKx :: Requirement ~ Requirement
setEvBind
  ev = cobox_aFo
  tm  = CO Sym cobox_aKx
rewriteEqEvidence
  [W] cobox_aFo :: Requirement ~ a_aFm
  Requirement
  Requirement
  Sym cobox_aKx
canEqTyVar2
  a_aFm
  (String, String)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aKx :: Requirement ~ Requirement
  Requirement
  Requirement
  (String, String)
  Requirement
can_eq_nc
  [W] cobox_aKx :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_aKy :: String ~ String
newWantedEvVar/cache miss [W] cobox_aKz :: String ~ String
setEvBind
  ev = cobox_aKx
  tm  = CO (cobox_aKy, cobox_aKz)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKy :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKy :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKy :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKA :: Char ~ Char
setEvBind
  ev = cobox_aKy
  tm  = CO [cobox_aKA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKz :: String
                                ~ String [" a type equality t_aF4
                                                            ~
                                                            a_aFm " HTML.hs:30:85-89] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKz :: String
                                 ~ String [" a type equality t_aF4
                                                             ~
                                                             a_aFm " HTML.hs:30:85-89] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKz :: String ~ String [" a type equality t_aF4
                                                      ~
                                                      a_aFm " HTML.hs:30:85-89] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKz :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKz :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKz :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKB :: Char ~ Char
setEvBind
  ev = cobox_aKz
  tm  = CO [cobox_aKB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFp :: Bool ~ Bool [" a type equality Bool
                                                               ~
                                                               Bool " HTML.hs:31:28-36] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFp :: Bool ~ Bool [" a type equality Bool
                                                                ~
                                                                Bool " HTML.hs:31:28-36] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFp :: Bool ~ Bool [" a type equality Bool
                                                  ~
                                                  Bool " HTML.hs:31:28-36] (CNonCanonical)
canEvNC:eq
  Bool
  Bool
can_eq_nc
  [W] cobox_aFp :: Bool ~ Bool
  Bool
  Bool
  Bool
  Bool
setEvBind
  ev = cobox_aFp
  tm  = CO <Bool>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFr :: Maybe a_aFq
                                ~ t_aBT [" a type equality Maybe a_aFq
                                                           ~
                                                           t_aBT " HTML.hs:31:40-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFr :: Maybe a_aFq
                                 ~ t_aBT [" a type equality Maybe a_aFq
                                                            ~
                                                            t_aBT " HTML.hs:31:40-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFr :: Maybe a_aFq ~ t_aBT [" a type equality Maybe a_aFq
                                                          ~
                                                          t_aBT " HTML.hs:31:40-49] (CNonCanonical)
canEvNC:eq
  Maybe a_aFq
  t_aBT
can_eq_nc
  [W] cobox_aFr :: Maybe a_aFq ~ t_aBT
  Maybe a_aFq
  Maybe a_aFq
  t_aBT
  t_aBT
canEqTyVar
  t_aBT
  Maybe a_aFq
  Is-swapped
Following bound tyvar t_aBT = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aKC :: Maybe Requirement ~ Maybe a_aFq
setEvBind
  ev = cobox_aFr
  tm  = CO Sym cobox_aKC
rewriteEqEvidence
  [W] cobox_aFr :: Maybe a_aFq ~ t_aBT
  Maybe Requirement
  Maybe a_aFq
  Sym cobox_aKC
canEqTyVar2
  t_aBT
  Maybe a_aFq
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aKC :: Maybe Requirement ~ Maybe a_aFq
  Maybe Requirement
  Maybe Requirement
  Maybe a_aFq
  Maybe a_aFq
newWantedEvVar/cache miss [W] cobox_aKD :: Requirement ~ a_aFq
setEvBind
  ev = cobox_aKC
  tm  = CO Maybe cobox_aKD_N
canEvNC:eq
  Requirement
  a_aFq
can_eq_nc
  [W] cobox_aKD :: Requirement ~ a_aFq
  Requirement
  Requirement
  a_aFq
  a_aFq
can_eq_nc
  [W] cobox_aKD :: Requirement ~ a_aFq
  (String, String)
  Requirement
  a_aFq
  a_aFq
canEqTyVar
  a_aFq
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aKE :: a_aFq ~ Requirement
setEvBind
  ev = cobox_aKD
  tm  = CO Sym cobox_aKE
rewriteEqEvidence
  [W] cobox_aKD :: Requirement ~ a_aFq
  a_aFq
  Requirement
  Sym cobox_aKE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aKE :: a_aFq
                                 ~ Requirement [" a type equality Maybe a_aFq
                                                                  ~
                                                                  t_aBT " HTML.hs:31:40-49] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFq := Requirement
  Coercion: a_aFq ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFq := Requirement
setEvBind
  ev = cobox_aKE
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aFq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
201[<C:0,F:0>] [W] cobox_aKE :: a_aFq
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFs :: t_aF4
                                ~ a_aFq [" a type equality t_aF4
                                                           ~
                                                           a_aFq " HTML.hs:31:45-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFs :: t_aF4
                                 ~ a_aFq [" a type equality t_aF4
                                                            ~
                                                            a_aFq " HTML.hs:31:45-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFs :: t_aF4 ~ a_aFq [" a type equality t_aF4
                                                    ~
                                                    a_aFq " HTML.hs:31:45-49] (CNonCanonical)
canEvNC:eq
  t_aF4
  a_aFq
can_eq_nc
  [W] cobox_aFs :: t_aF4 ~ a_aFq
  t_aF4
  t_aF4
  a_aFq
  a_aFq
canEqTyVar
  t_aF4
  a_aFq
  Not-swapped
Following bound tyvar t_aF4 = Requirement
canEqTyVar2
  t_aF4
  a_aFq
  Not-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aFs :: Requirement ~ a_aFq
  Requirement
  Requirement
  a_aFq
  a_aFq
can_eq_nc
  [W] cobox_aFs :: Requirement ~ a_aFq
  (String, String)
  Requirement
  a_aFq
  a_aFq
canEqTyVar
  a_aFq
  (String, String)
  Is-swapped
Following bound tyvar a_aFq = Requirement
newWantedEvVar/cache miss
  [W] cobox_aKF :: Requirement ~ Requirement
setEvBind
  ev = cobox_aFs
  tm  = CO Sym cobox_aKF
rewriteEqEvidence
  [W] cobox_aFs :: Requirement ~ a_aFq
  Requirement
  Requirement
  Sym cobox_aKF
canEqTyVar2
  a_aFq
  (String, String)
  Is-swapped
  Requirement
  <Requirement>_N
can_eq_nc
  [W] cobox_aKF :: Requirement ~ Requirement
  Requirement
  Requirement
  (String, String)
  Requirement
can_eq_nc
  [W] cobox_aKF :: Requirement ~ Requirement
  (String, String)
  Requirement
  (String, String)
  Requirement
newWantedEvVar/cache miss [W] cobox_aKG :: String ~ String
newWantedEvVar/cache miss [W] cobox_aKH :: String ~ String
setEvBind
  ev = cobox_aKF
  tm  = CO (cobox_aKG, cobox_aKH)_N
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKG :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKG :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKG :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKI :: Char ~ Char
setEvBind
  ev = cobox_aKG
  tm  = CO [cobox_aKI]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKI :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKI
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aKH :: String
                                ~ String [" a type equality t_aF4
                                                            ~
                                                            a_aFq " HTML.hs:31:45-49] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aKH :: String
                                 ~ String [" a type equality t_aF4
                                                             ~
                                                             a_aFq " HTML.hs:31:45-49] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aKH :: String ~ String [" a type equality t_aF4
                                                      ~
                                                      a_aFq " HTML.hs:31:45-49] (CNonCanonical)
canEvNC:eq
  String
  String
can_eq_nc
  [W] cobox_aKH :: String ~ String
  String
  String
  String
  String
can_eq_nc
  [W] cobox_aKH :: String ~ String
  [Char]
  String
  String
  String
can_eq_nc
  [W] cobox_aKH :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_aKJ :: Char ~ Char
setEvBind
  ev = cobox_aKH
  tm  = CO [cobox_aKJ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_aKJ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_aKJ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFu :: [t_aFt]
                                ~ t_aBR [" a type equality [t_aFt]
                                                           ~
                                                           t_aBR " HTML.hs:32:10-11] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFu :: [t_aFt]
                                 ~ t_aBR [" a type equality [t_aFt]
                                                            ~
                                                            t_aBR " HTML.hs:32:10-11] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFu :: [t_aFt] ~ t_aBR [" a type equality [t_aFt]
                                                      ~
                                                      t_aBR " HTML.hs:32:10-11] (CNonCanonical)
canEvNC:eq
  [t_aFt]
  t_aBR
can_eq_nc
  [W] cobox_aFu :: [t_aFt] ~ t_aBR
  [t_aFt]
  [t_aFt]
  t_aBR
  t_aBR
canEqTyVar
  t_aBR
  [t_aFt]
  Is-swapped
Following bound tyvar t_aBR = [Requirement]
newWantedEvVar/cache miss [W] cobox_aKK :: [Requirement] ~ [t_aFt]
setEvBind
  ev = cobox_aFu
  tm  = CO Sym cobox_aKK
rewriteEqEvidence
  [W] cobox_aFu :: [t_aFt] ~ t_aBR
  [Requirement]
  [t_aFt]
  Sym cobox_aKK
canEqTyVar2
  t_aBR
  [t_aFt]
  Is-swapped
  [Requirement]
  <[Requirement]>_N
can_eq_nc
  [W] cobox_aKK :: [Requirement] ~ [t_aFt]
  [Requirement]
  [Requirement]
  [t_aFt]
  [t_aFt]
newWantedEvVar/cache miss [W] cobox_aKL :: Requirement ~ t_aFt
setEvBind
  ev = cobox_aKK
  tm  = CO [cobox_aKL]_N
canEvNC:eq
  Requirement
  t_aFt
can_eq_nc
  [W] cobox_aKL :: Requirement ~ t_aFt
  Requirement
  Requirement
  t_aFt
  t_aFt
can_eq_nc
  [W] cobox_aKL :: Requirement ~ t_aFt
  (String, String)
  Requirement
  t_aFt
  t_aFt
canEqTyVar
  t_aFt
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aKM :: t_aFt ~ Requirement
setEvBind
  ev = cobox_aKL
  tm  = CO Sym cobox_aKM
rewriteEqEvidence
  [W] cobox_aKL :: Requirement ~ t_aFt
  t_aFt
  Requirement
  Sym cobox_aKM
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aKM :: t_aFt
                                 ~ Requirement [" a type equality [t_aFt]
                                                                  ~
                                                                  t_aBR " HTML.hs:32:10-11] (CTyEqCan)
Sneaky unification:
  Unifies: t_aFt := Requirement
  Coercion: t_aFt ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aFt := Requirement
setEvBind
  ev = cobox_aKM
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  t_aFt
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
204[<C:0,F:0>] [W] cobox_aKM :: t_aFt
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aFw :: Maybe a_aFv
                                ~ t_aBT [" a type equality Maybe a_aFv
                                                           ~
                                                           t_aBT " HTML.hs:32:17-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aFw :: Maybe a_aFv
                                 ~ t_aBT [" a type equality Maybe a_aFv
                                                            ~
                                                            t_aBT " HTML.hs:32:17-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aFw :: Maybe a_aFv ~ t_aBT [" a type equality Maybe a_aFv
                                                          ~
                                                          t_aBT " HTML.hs:32:17-23] (CNonCanonical)
canEvNC:eq
  Maybe a_aFv
  t_aBT
can_eq_nc
  [W] cobox_aFw :: Maybe a_aFv ~ t_aBT
  Maybe a_aFv
  Maybe a_aFv
  t_aBT
  t_aBT
canEqTyVar
  t_aBT
  Maybe a_aFv
  Is-swapped
Following bound tyvar t_aBT = Maybe Requirement
newWantedEvVar/cache miss
  [W] cobox_aKN :: Maybe Requirement ~ Maybe a_aFv
setEvBind
  ev = cobox_aFw
  tm  = CO Sym cobox_aKN
rewriteEqEvidence
  [W] cobox_aFw :: Maybe a_aFv ~ t_aBT
  Maybe Requirement
  Maybe a_aFv
  Sym cobox_aKN
canEqTyVar2
  t_aBT
  Maybe a_aFv
  Is-swapped
  Maybe Requirement
  <Maybe Requirement>_N
can_eq_nc
  [W] cobox_aKN :: Maybe Requirement ~ Maybe a_aFv
  Maybe Requirement
  Maybe Requirement
  Maybe a_aFv
  Maybe a_aFv
newWantedEvVar/cache miss [W] cobox_aKO :: Requirement ~ a_aFv
setEvBind
  ev = cobox_aKN
  tm  = CO Maybe cobox_aKO_N
canEvNC:eq
  Requirement
  a_aFv
can_eq_nc
  [W] cobox_aKO :: Requirement ~ a_aFv
  Requirement
  Requirement
  a_aFv
  a_aFv
can_eq_nc
  [W] cobox_aKO :: Requirement ~ a_aFv
  (String, String)
  Requirement
  a_aFv
  a_aFv
canEqTyVar
  a_aFv
  (String, String)
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aKP :: a_aFv ~ Requirement
setEvBind
  ev = cobox_aKO
  tm  = CO Sym cobox_aKP
rewriteEqEvidence
  [W] cobox_aKO :: Requirement ~ a_aFv
  a_aFv
  Requirement
  Sym cobox_aKP
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aKP :: a_aFv
                                 ~ Requirement [" a type equality Maybe a_aFv
                                                                  ~
                                                                  t_aBT " HTML.hs:32:17-23] (CTyEqCan)
Sneaky unification:
  Unifies: a_aFv := Requirement
  Coercion: a_aFv ~ Requirement
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aFv := Requirement
setEvBind
  ev = cobox_aKP
  tm  = CO <Requirement>_N
kickOutRewritable
  tv =  a_aFv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
205[<C:0,F:0>] [W] cobox_aKP :: a_aFv
                                ~ Requirement: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aG8 :: Char
                                              ~ [Char] [" a type equality String
                                                                          ~
                                                                          Doc " HTML.hs:51:37-54] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
solveFlats end } {}
simpl_loop, iteration 1
solveWanteds }
  unsolved_flats   = {}
  unsolved_implics = {}
  current evbinds  = {cobox_aBh = CO Sym cobox_aFy,
                      cobox_aBi = CO Sym cobox_aFz, cobox_aBl = CO Sym cobox_aFA,
                      cobox_aBm = CO Sym cobox_aFB, cobox_aBp = CO Sym cobox_aFC,
                      cobox_aBq = CO Sym cobox_aFD, cobox_aBt = CO Sym cobox_aFE,
                      cobox_aBu = CO Sym cobox_aFF, cobox_aBx = CO Sym cobox_aFG,
                      cobox_aBy = CO Sym cobox_aFH, cobox_aBB = CO Sym cobox_aFI,
                      cobox_aBC = CO Sym cobox_aFJ, cobox_aBU = CO Sym cobox_aFK,
                      cobox_aBV = CO Sym cobox_aFL, cobox_aBW = CO Sym cobox_aFM,
                      cobox_aC0 = CO Sym cobox_aFN, cobox_aC1 = CO Sym cobox_aFO,
                      cobox_aC2 = CO Sym cobox_aFP, cobox_aC5 = CO Sym cobox_aFQ,
                      cobox_aC6 = CO Sym cobox_aFR, cobox_aCa = CO Sym cobox_aFS,
                      cobox_aCb = CO Sym cobox_aFT, cobox_aCc = CO Sym cobox_aFU,
                      cobox_aCf = CO Sym cobox_aFV, cobox_aCg = CO Sym cobox_aFY,
                      cobox_aCh = CO [cobox_aG1]_N, cobox_aCi = CO Sym cobox_aG2,
                      cobox_aCj = CO [cobox_aG5]_N, cobox_aCk = CO [cobox_aG7]_N,
                      cobox_aCl = CO [cobox_aG8]_N, cobox_aCm = CO [cobox_aG9]_N,
                      cobox_aCo = CO Sym cobox_aGb, cobox_aCp = CO Sym cobox_aGc,
                      cobox_aCq = CO Sym cobox_aGd, cobox_aCr = CO Sym cobox_aGe,
                      cobox_aCs = CO Sym cobox_aGf, cobox_aCt = CO Sym cobox_aGg,
                      cobox_aCu = CO Sym cobox_aGh, cobox_aCx = CO Sym cobox_aGi,
                      cobox_aCy = CO Sym cobox_aGl, cobox_aCz = CO <Bool>_N,
                      cobox_aCA = CO Sym cobox_aGm, cobox_aCB = CO <Bool>_N,
                      cobox_aCC = CO Sym cobox_aGn, cobox_aCE = CO Sym cobox_aGq,
                      cobox_aCF = CO Sym cobox_aGt, cobox_aCI = CO Sym cobox_aGu,
                      cobox_aCJ = CO Sym cobox_aGx, cobox_aCK = CO [cobox_aGA]_N,
                      cobox_aCL = CO Sym cobox_aGC, cobox_aCM = CO [cobox_aGD]_N,
                      cobox_aCN = CO Sym cobox_aGF, cobox_aCP = CO Sym cobox_aGI,
                      cobox_aCQ = CO Sym cobox_aGL, cobox_aCR = CO [cobox_aGO]_N,
                      cobox_aCT = CO Sym cobox_aGP, cobox_aCU = CO <Bool>_N,
                      cobox_aCV = CO <Bool>_N, cobox_aCW = CO Sym cobox_aGQ,
                      cobox_aCX = CO Sym cobox_aGS, cobox_aCY = CO [cobox_aGV]_N,
                      cobox_aCZ = CO [cobox_aGX]_N, cobox_aD0 = CO [cobox_aGZ]_N,
                      cobox_aD1 = CO [cobox_aH1]_N, cobox_aD2 = CO [cobox_aH3]_N,
                      cobox_aD3 = CO [cobox_aH5]_N, cobox_aD4 = CO [cobox_aH6]_N,
                      cobox_aD5 = CO [cobox_aH8]_N, cobox_aD6 = CO [cobox_aH9]_N,
                      cobox_aD7 = CO Sym cobox_aHb, cobox_aD8 = CO [cobox_aHe]_N,
                      cobox_aD9 = CO [cobox_aHg]_N, cobox_aDa = CO [cobox_aHh]_N,
                      cobox_aDb = CO [cobox_aHj]_N, cobox_aDc = CO Sym cobox_aHl,
                      cobox_aDd = CO [cobox_aHn]_N, cobox_aDe = CO [cobox_aHp]_N,
                      cobox_aDf = CO [cobox_aHr]_N, cobox_aDg = CO [cobox_aHt]_N,
                      cobox_aDh = CO [cobox_aHu]_N, cobox_aDi = CO [cobox_aHw]_N,
                      cobox_aDj = CO [cobox_aHx]_N, cobox_aDk = CO [cobox_aHz]_N,
                      cobox_aDl = CO <Bool>_N, cobox_aDm = CO Sym cobox_aHA,
                      cobox_aDn = CO [cobox_aHD]_N, cobox_aDo = CO [cobox_aHF]_N,
                      cobox_aDp = CO [cobox_aHH]_N, cobox_aDq = CO [cobox_aHJ]_N,
                      cobox_aDr = CO [cobox_aHL]_N, cobox_aDs = CO [cobox_aHN]_N,
                      cobox_aDt = CO [cobox_aHP]_N, cobox_aDu = CO [cobox_aHR]_N,
                      cobox_aDv = CO [cobox_aHS]_N, cobox_aDw = CO [cobox_aHU]_N,
                      cobox_aDx = CO [cobox_aHV]_N, cobox_aDy = CO Sym cobox_aHX,
                      cobox_aDz = CO [cobox_aI0]_N, cobox_aDA = CO [cobox_aI2]_N,
                      cobox_aDB = CO [cobox_aI3]_N, cobox_aDC = CO Sym cobox_aI5,
                      cobox_aDD = CO [cobox_aI7]_N, cobox_aDE = CO [cobox_aI9]_N,
                      cobox_aDF = CO [cobox_aIa]_N, cobox_aDG = CO [cobox_aIc]_N,
                      cobox_aDH = CO [cobox_aId]_N, cobox_aDI = CO [cobox_aIf]_N,
                      cobox_aDJ = CO Sym cobox_aIg, cobox_aDK = CO Sym cobox_aIh,
                      cobox_aDL = CO [cobox_aIk]_N, cobox_aDM = CO [cobox_aIm]_N,
                      cobox_aDN = CO [cobox_aIo]_N, cobox_aDO = CO [cobox_aIq]_N,
                      cobox_aDP = CO [cobox_aIr]_N, cobox_aDQ = CO [cobox_aIt]_N,
                      cobox_aDR = CO [cobox_aIu]_N, cobox_aDS = CO [cobox_aIw]_N,
                      cobox_aDT = CO [cobox_aIx]_N, cobox_aDU = CO [cobox_aIz]_N,
                      cobox_aDV = CO [cobox_aIB]_N, cobox_aDW = CO Sym cobox_aIC,
                      cobox_aDX = CO Sym cobox_aID, cobox_aDY = CO [cobox_aIG]_N,
                      cobox_aE0 = CO Sym cobox_aIH, cobox_aE1 = CO Sym cobox_aII,
                      cobox_aE2 = CO Sym cobox_aIJ, cobox_aE3 = CO Sym cobox_aIL,
                      cobox_aE5 = CO Sym cobox_aIM, cobox_aE6 = CO Sym cobox_aIN,
                      cobox_aE7 = CO Sym cobox_aIP, cobox_aE8 = CO Sym cobox_aIQ,
                      cobox_aE9 = CO Sym cobox_aIS, cobox_aEa = CO Sym cobox_aIT,
                      cobox_aEd = CO <String -> String -> Bool>_N,
                      cobox_aEh = CO Sym cobox_aIV, cobox_aEi = CO Sym cobox_aJ0,
                      cobox_aEj = CO <Bool>_N, cobox_aEk = CO Sym cobox_aJ1,
                      cobox_aEl = CO Sym cobox_aJ3, cobox_aEm = CO Sym cobox_aJ4,
                      cobox_aEn = CO Sym cobox_aJ6, cobox_aEo = CO <Bool>_N,
                      cobox_aEp = CO Sym cobox_aJ7, cobox_aEq = CO Sym cobox_aJ9,
                      cobox_aEr = CO <Bool>_N, cobox_aEs = CO <Bool>_N,
                      cobox_aEv = CO Sym cobox_aJb, cobox_aEw = CO Sym cobox_aJg,
                      cobox_aEx = CO Sym cobox_aJi, cobox_aEy = CO Sym cobox_aJk,
                      cobox_aEz = CO <Bool>_N, cobox_aEC = CO Sym cobox_aJl,
                      cobox_aED = CO Sym cobox_aJq, cobox_aEE = CO Sym cobox_aJs,
                      cobox_aEF = CO Sym cobox_aJu, cobox_aEG = CO [cobox_aJv]_N,
                      cobox_aEH = CO [cobox_aJw]_N, cobox_aEI = CO [cobox_aJy]_N,
                      cobox_aEJ = CO <Bool>_N, cobox_aEK = CO Sym cobox_aJz,
                      cobox_aEL = CO <Bool>_N, cobox_aEO = CO Sym cobox_aJA,
                      cobox_aEP = CO Sym cobox_aJF, cobox_aEQ = CO Sym cobox_aJH,
                      cobox_aER = CO Sym cobox_aJJ, cobox_aES = CO <Bool>_N,
                      cobox_aEV = CO Sym cobox_aJK, cobox_aEW = CO Sym cobox_aJP,
                      cobox_aEX = CO Sym cobox_aJR, cobox_aEY = CO Sym cobox_aJT,
                      cobox_aEZ = CO [cobox_aJU]_N, cobox_aF0 = CO [cobox_aJV]_N,
                      cobox_aF1 = CO [cobox_aJX]_N, cobox_aF2 = CO Sym cobox_aJY,
                      cobox_aF5 = CO Sym cobox_aJZ, cobox_aF6 = CO <Bool>_N,
                      cobox_aF7 = CO <Bool>_N, cobox_aFc = CO <String>_N,
                      cobox_aFd = CO (cobox_aK2, cobox_aK3)_N,
                      cobox_aFe = CO Sym cobox_aK7, cobox_aFf = CO Sym cobox_aK9,
                      cobox_aFg = CO <Bool>_N, cobox_aFh = CO Sym cobox_aKa,
                      cobox_aFi = CO Sym cobox_aKf, cobox_aFj = CO Sym cobox_aKg,
                      cobox_aFk = CO Sym cobox_aKm, cobox_aFl = CO Sym cobox_aKt,
                      cobox_aFn = CO Sym cobox_aKu, cobox_aFo = CO Sym cobox_aKx,
                      cobox_aFp = CO <Bool>_N, cobox_aFr = CO Sym cobox_aKC,
                      cobox_aFs = CO Sym cobox_aKF, cobox_aFu = CO Sym cobox_aKK,
                      cobox_aFw = CO Sym cobox_aKN, cobox_aFy = CO <[HTML]>_N,
                      cobox_aFz = CO <Doc>_N, cobox_aFA = CO <HTML>_N,
                      cobox_aFB = CO <Doc>_N, cobox_aFC = CO <[Attributen]>_N,
                      cobox_aFD = CO <Doc>_N, cobox_aFE = CO <[HTML]>_N,
                      cobox_aFF = CO <Bool>_N, cobox_aFG = CO <HTML>_N,
                      cobox_aFH = CO <Bool>_N, cobox_aFI = CO <HTML>_N,
                      cobox_aFJ = CO <Bool>_N, cobox_aFK = CO <[Requirement]>_N,
                      cobox_aFL = CO <HTML>_N, cobox_aFM = CO <Maybe Requirement>_N,
                      cobox_aFN = CO <Requirement>_N, cobox_aFO = CO <HTML>_N,
                      cobox_aFP = CO <Bool>_N, cobox_aFQ = CO <HTML>_N,
                      cobox_aFR = CO <String>_N, cobox_aFS = CO <String>_N,
                      cobox_aFT = CO <String>_N, cobox_aFU = CO <Bool>_N,
                      cobox_aFV = CO [cobox_aFW]_N, cobox_aFW = CO Sym cobox_aFX,
                      cobox_aFX = CO <Attributen>_N, cobox_aFY = CO [cobox_aFZ]_N,
                      cobox_aFZ = CO [cobox_aG0]_N, cobox_aG0 = CO <Char>_N,
                      cobox_aG1 = CO <Char>_N, cobox_aG2 = CO [cobox_aG3]_N,
                      cobox_aG3 = CO [cobox_aG4]_N, cobox_aG4 = CO <Char>_N,
                      cobox_aG5 = CO [cobox_aG6]_N, cobox_aG6 = CO <Char>_N,
                      cobox_aG7 = CO <Char>_N, cobox_aG9 = CO [cobox_aGa]_N,
                      cobox_aGa = CO <Char>_N, cobox_aGb = CO <HTML>_N,
                      cobox_aGc = CO <Bool>_N, cobox_aGd = CO <HTML>_N,
                      cobox_aGe = CO <Bool>_N, cobox_aGf = CO <HTML>_N,
                      cobox_aGg = CO <Bool>_N, cobox_aGh = CO <Bool>_N,
                      cobox_aGi = CO [cobox_aGj]_N, cobox_aGj = CO Sym cobox_aGk,
                      cobox_aGk = CO <HTML>_N, cobox_aGl = CO <Bool>_N,
                      cobox_aGm = CO <HTML>_N, cobox_aGn = CO [cobox_aGo]_N,
                      cobox_aGo = CO Sym cobox_aGp, cobox_aGp = CO <HTML>_N,
                      cobox_aGq = CO [cobox_aGr]_N, cobox_aGr = CO Sym cobox_aGs,
                      cobox_aGs = CO <HTML>_N, cobox_aGt = CO <Bool>_N,
                      cobox_aGu = CO [cobox_aGv]_N, cobox_aGv = CO Sym cobox_aGw,
                      cobox_aGw = CO <HTML>_N, cobox_aGx = CO [cobox_aGy]_N,
                      cobox_aGy = CO [cobox_aGz]_N, cobox_aGz = CO <Char>_N,
                      cobox_aGA = CO [cobox_aGB]_N, cobox_aGB = CO <Char>_N,
                      cobox_aGC = CO <HTML>_N, cobox_aGD = CO [cobox_aGE]_N,
                      cobox_aGE = CO <Char>_N, cobox_aGF = CO [cobox_aGG]_N,
                      cobox_aGG = CO Sym cobox_aGH, cobox_aGH = CO <HTML>_N,
                      cobox_aGI = CO [cobox_aGJ]_N, cobox_aGJ = CO Sym cobox_aGK,
                      cobox_aGK = CO <HTML>_N, cobox_aGL = CO [cobox_aGM]_N,
                      cobox_aGM = CO [cobox_aGN]_N, cobox_aGN = CO <Char>_N,
                      cobox_aGO = CO <Char>_N, cobox_aGP = CO <HTML>_N,
                      cobox_aGQ = CO [cobox_aGR]_N, cobox_aGR = CO <HTML>_N,
                      cobox_aGS = CO [cobox_aGT]_N, cobox_aGT = CO [cobox_aGU]_N,
                      cobox_aGU = CO <Char>_N, cobox_aGV = CO [cobox_aGW]_N,
                      cobox_aGW = CO <Char>_N, cobox_aGX = CO [cobox_aGY]_N,
                      cobox_aGY = CO <Char>_N, cobox_aGZ = CO [cobox_aH0]_N,
                      cobox_aH0 = CO <Char>_N, cobox_aH1 = CO [cobox_aH2]_N,
                      cobox_aH2 = CO <Char>_N, cobox_aH3 = CO [cobox_aH4]_N,
                      cobox_aH4 = CO <Char>_N, cobox_aH5 = CO <Char>_N,
                      cobox_aH6 = CO [cobox_aH7]_N, cobox_aH7 = CO <Char>_N,
                      cobox_aH8 = CO <Char>_N, cobox_aH9 = CO [cobox_aHa]_N,
                      cobox_aHa = CO <Char>_N, cobox_aHb = CO [cobox_aHc]_N,
                      cobox_aHc = CO [cobox_aHd]_N, cobox_aHd = CO <Char>_N,
                      cobox_aHe = CO [cobox_aHf]_N, cobox_aHf = CO <Char>_N,
                      cobox_aHg = CO <Char>_N, cobox_aHh = CO [cobox_aHi]_N,
                      cobox_aHi = CO <Char>_N, cobox_aHj = CO [cobox_aHk]_N,
                      cobox_aHk = CO <Char>_N, cobox_aHl = CO [cobox_aHm]_N,
                      cobox_aHm = CO <HTML>_N, cobox_aHn = CO [cobox_aHo]_N,
                      cobox_aHo = CO <Char>_N, cobox_aHp = CO [cobox_aHq]_N,
                      cobox_aHq = CO <Char>_N, cobox_aHr = CO [cobox_aHs]_N,
                      cobox_aHs = CO <Char>_N, cobox_aHt = CO <Char>_N,
                      cobox_aHu = CO [cobox_aHv]_N, cobox_aHv = CO <Char>_N,
                      cobox_aHw = CO <Char>_N, cobox_aHx = CO [cobox_aHy]_N,
                      cobox_aHy = CO <Char>_N, cobox_aHz = CO <Char>_N,
                      cobox_aHA = CO [cobox_aHB]_N, cobox_aHB = CO [cobox_aHC]_N,
                      cobox_aHC = CO <Char>_N, cobox_aHD = CO [cobox_aHE]_N,
                      cobox_aHE = CO <Char>_N, cobox_aHF = CO [cobox_aHG]_N,
                      cobox_aHG = CO <Char>_N, cobox_aHH = CO [cobox_aHI]_N,
                      cobox_aHI = CO <Char>_N, cobox_aHJ = CO [cobox_aHK]_N,
                      cobox_aHK = CO <Char>_N, cobox_aHL = CO [cobox_aHM]_N,
                      cobox_aHM = CO <Char>_N, cobox_aHN = CO [cobox_aHO]_N,
                      cobox_aHO = CO <Char>_N, cobox_aHP = CO [cobox_aHQ]_N,
                      cobox_aHQ = CO <Char>_N, cobox_aHR = CO <Char>_N,
                      cobox_aHS = CO [cobox_aHT]_N, cobox_aHT = CO <Char>_N,
                      cobox_aHU = CO <Char>_N, cobox_aHV = CO [cobox_aHW]_N,
                      cobox_aHW = CO <Char>_N, cobox_aHX = CO [cobox_aHY]_N,
                      cobox_aHY = CO [cobox_aHZ]_N, cobox_aHZ = CO <Char>_N,
                      cobox_aI0 = CO [cobox_aI1]_N, cobox_aI1 = CO <Char>_N,
                      cobox_aI2 = CO <Char>_N, cobox_aI3 = CO [cobox_aI4]_N,
                      cobox_aI4 = CO <Char>_N, cobox_aI5 = CO [cobox_aI6]_N,
                      cobox_aI6 = CO <HTML>_N, cobox_aI7 = CO [cobox_aI8]_N,
                      cobox_aI8 = CO <Char>_N, cobox_aI9 = CO <Char>_N,
                      cobox_aIa = CO [cobox_aIb]_N, cobox_aIb = CO <Char>_N,
                      cobox_aIc = CO <Char>_N, cobox_aId = CO [cobox_aIe]_N,
                      cobox_aIe = CO <Char>_N, cobox_aIf = CO <Char>_N,
                      cobox_aIg = CO <HTML>_N, cobox_aIh = CO [cobox_aIi]_N,
                      cobox_aIi = CO [cobox_aIj]_N, cobox_aIj = CO <Char>_N,
                      cobox_aIk = CO [cobox_aIl]_N, cobox_aIl = CO <Char>_N,
                      cobox_aIm = CO [cobox_aIn]_N, cobox_aIn = CO <Char>_N,
                      cobox_aIo = CO [cobox_aIp]_N, cobox_aIp = CO <Char>_N,
                      cobox_aIq = CO <Char>_N, cobox_aIr = CO [cobox_aIs]_N,
                      cobox_aIs = CO <Char>_N, cobox_aIt = CO <Char>_N,
                      cobox_aIu = CO [cobox_aIv]_N, cobox_aIv = CO <Char>_N,
                      cobox_aIw = CO <Char>_N, cobox_aIx = CO [cobox_aIy]_N,
                      cobox_aIy = CO <Char>_N, cobox_aIz = CO [cobox_aIA]_N,
                      cobox_aIA = CO <Char>_N, cobox_aIB = CO <Char>_N,
                      cobox_aIC = CO <HTML>_N, cobox_aID = CO [cobox_aIE]_N,
                      cobox_aIE = CO [cobox_aIF]_N, cobox_aIF = CO <Char>_N,
                      cobox_aIG = CO <Char>_N, cobox_aIH = CO <HTML>_N,
                      cobox_aII = CO <Bool>_N, cobox_aIJ = CO [cobox_aIK]_N,
                      cobox_aIK = CO <HTML>_N, cobox_aIL = CO <Bool>_N,
                      cobox_aIM = CO <HTML>_N, cobox_aIN = CO [cobox_aIO]_N,
                      cobox_aIO = CO <Char>_N, cobox_aIP = CO <HTML>_N,
                      cobox_aIQ = CO [cobox_aIR]_N, cobox_aIR = CO <Char>_N,
                      cobox_aIS = CO <HTML>_N, cobox_aIT = CO [cobox_aIU]_N,
                      cobox_aIU = CO <Char>_N, cobox_aIV = CO (cobox_aIW, cobox_aIX)_N,
                      cobox_aIW = CO Sym cobox_aIY, cobox_aIX = CO Sym cobox_aIZ,
                      cobox_aIY = CO <String>_N, cobox_aIZ = CO <String>_N,
                      cobox_aJ0 = CO <HTML>_N, cobox_aJ1 = CO [cobox_aJ2]_N,
                      cobox_aJ2 = CO <Char>_N, cobox_aJ3 = CO <HTML>_N,
                      cobox_aJ4 = CO [cobox_aJ5]_N, cobox_aJ5 = CO <Char>_N,
                      cobox_aJ6 = CO <Bool>_N, cobox_aJ7 = CO [cobox_aJ8]_N,
                      cobox_aJ8 = CO <Char>_N, cobox_aJ9 = CO [cobox_aJa]_N,
                      cobox_aJa = CO <Char>_N, cobox_aJb = CO (cobox_aJc, cobox_aJd)_N,
                      cobox_aJc = CO Sym cobox_aJe, cobox_aJd = CO Sym cobox_aJf,
                      cobox_aJe = CO <String>_N, cobox_aJf = CO <String>_N,
                      cobox_aJg = CO [cobox_aJh]_N, cobox_aJh = CO <Char>_N,
                      cobox_aJi = CO [cobox_aJj]_N, cobox_aJj = CO <Char>_N,
                      cobox_aJk = CO <HTML>_N, cobox_aJl = CO (cobox_aJm, cobox_aJn)_N,
                      cobox_aJm = CO Sym cobox_aJo, cobox_aJn = CO Sym cobox_aJp,
                      cobox_aJo = CO <String>_N, cobox_aJp = CO <String>_N,
                      cobox_aJq = CO [cobox_aJr]_N, cobox_aJr = CO <Char>_N,
                      cobox_aJs = CO [cobox_aJt]_N, cobox_aJt = CO <Char>_N,
                      cobox_aJu = CO <HTML>_N, cobox_aJv = CO <Char>_N,
                      cobox_aJw = CO [cobox_aJx]_N, cobox_aJx = CO <Char>_N,
                      cobox_aJy = CO <HTML>_N, cobox_aJz = CO <Bool>_N,
                      cobox_aJA = CO (cobox_aJB, cobox_aJC)_N,
                      cobox_aJB = CO Sym cobox_aJD, cobox_aJC = CO Sym cobox_aJE,
                      cobox_aJD = CO <String>_N, cobox_aJE = CO <String>_N,
                      cobox_aJF = CO [cobox_aJG]_N, cobox_aJG = CO <Char>_N,
                      cobox_aJH = CO [cobox_aJI]_N, cobox_aJI = CO <Char>_N,
                      cobox_aJJ = CO <HTML>_N, cobox_aJK = CO (cobox_aJL, cobox_aJM)_N,
                      cobox_aJL = CO Sym cobox_aJN, cobox_aJM = CO Sym cobox_aJO,
                      cobox_aJN = CO <String>_N, cobox_aJO = CO <String>_N,
                      cobox_aJP = CO [cobox_aJQ]_N, cobox_aJQ = CO <Char>_N,
                      cobox_aJR = CO [cobox_aJS]_N, cobox_aJS = CO <Char>_N,
                      cobox_aJT = CO <HTML>_N, cobox_aJU = CO <Char>_N,
                      cobox_aJV = CO [cobox_aJW]_N, cobox_aJW = CO <Char>_N,
                      cobox_aJX = CO <HTML>_N, cobox_aJY = CO <Bool>_N,
                      cobox_aJZ = CO [cobox_aK0]_N, cobox_aK0 = CO Sym cobox_aK1,
                      cobox_aK1 = CO <Requirement>_N, cobox_aK2 = CO Sym cobox_aK4,
                      cobox_aK3 = CO Sym cobox_aK5, cobox_aK4 = CO <String>_N,
                      cobox_aK5 = CO [cobox_aK6]_N, cobox_aK6 = CO <Char>_N,
                      cobox_aK7 = CO [cobox_aK8]_N, cobox_aK8 = CO <Char>_N,
                      cobox_aK9 = CO <HTML>_N, cobox_aKa = CO (cobox_aKb, cobox_aKc)_N,
                      cobox_aKb = CO [cobox_aKd]_N, cobox_aKc = CO [cobox_aKe]_N,
                      cobox_aKd = CO <Char>_N, cobox_aKe = CO <Char>_N,
                      cobox_aKf = CO <HTML>_N, cobox_aKg = CO Maybe cobox_aKh_N,
                      cobox_aKh = CO (cobox_aKi, cobox_aKj)_N,
                      cobox_aKi = CO [cobox_aKk]_N, cobox_aKj = CO [cobox_aKl]_N,
                      cobox_aKk = CO <Char>_N, cobox_aKl = CO <Char>_N,
                      cobox_aKm = CO [cobox_aKn]_N, cobox_aKn = CO Sym cobox_aKo,
                      cobox_aKo = CO (cobox_aKp, cobox_aKq)_N,
                      cobox_aKp = CO [cobox_aKr]_N, cobox_aKq = CO [cobox_aKs]_N,
                      cobox_aKr = CO <Char>_N, cobox_aKs = CO <Char>_N,
                      cobox_aKt = CO <HTML>_N, cobox_aKu = CO Maybe cobox_aKv_N,
                      cobox_aKv = CO Sym cobox_aKw, cobox_aKw = CO <Requirement>_N,
                      cobox_aKx = CO (cobox_aKy, cobox_aKz)_N,
                      cobox_aKy = CO [cobox_aKA]_N, cobox_aKz = CO [cobox_aKB]_N,
                      cobox_aKA = CO <Char>_N, cobox_aKB = CO <Char>_N,
                      cobox_aKC = CO Maybe cobox_aKD_N, cobox_aKD = CO Sym cobox_aKE,
                      cobox_aKE = CO <Requirement>_N,
                      cobox_aKF = CO (cobox_aKG, cobox_aKH)_N,
                      cobox_aKG = CO [cobox_aKI]_N, cobox_aKH = CO [cobox_aKJ]_N,
                      cobox_aKI = CO <Char>_N, cobox_aKJ = CO <Char>_N,
                      cobox_aKK = CO [cobox_aKL]_N, cobox_aKL = CO Sym cobox_aKM,
                      cobox_aKM = CO <Requirement>_N, cobox_aKN = CO Maybe cobox_aKO_N,
                      cobox_aKO = CO Sym cobox_aKP, cobox_aKP = CO <Requirement>_N}
  current tybinds  = (t_aBf, [HTML])
                     (t_aBg, Doc)
                     (t_aBj, HTML)
                     (t_aBk, Doc)
                     (t_aBn, [Attributen])
                     (t_aBo, Doc)
                     (t_aBr, [HTML])
                     (t_aBs, Bool)
                     (t_aBv, HTML)
                     (t_aBw, Bool)
                     (t_aBz, HTML)
                     (t_aBA, Bool)
                     (t_aBR, [Requirement])
                     (t_aBS, HTML)
                     (t_aBT, Maybe Requirement)
                     (t_aBX, Requirement)
                     (t_aBY, HTML)
                     (t_aBZ, Bool)
                     (t_aC3, HTML)
                     (t_aC4, String)
                     (t_aC7, String)
                     (t_aC8, String)
                     (t_aC9, Bool)
                     (t_aCe, Attributen)
                     (t_aCw, HTML)
                     (t_aCD, HTML)
                     (t_aCH, HTML)
                     (t_aCO, HTML)
                     (a_aEc, String -> String -> Bool)
                     (t_aEf, String)
                     (t_aEg, String)
                     (t_aEt, String)
                     (t_aEu, String)
                     (t_aEA, String)
                     (t_aEB, String)
                     (t_aEM, String)
                     (t_aEN, String)
                     (t_aET, String)
                     (t_aEU, String)
                     (t_aF4, Requirement)
                     (a_aFa, String)
                     (b_aFb, String)
                     (a_aFm, Requirement)
                     (a_aFq, Requirement)
                     (t_aFt, Requirement)
                     (a_aFv, Requirement)
  final wc = WC {wc_insol = [W] cobox_aG8 :: Char
                                             ~ [Char] [" a type equality String
                                                                         ~
                                                                         Doc " HTML.hs:51:37-54] (CNonCanonical)}
writeMetaTyVar t_aBf := [HTML]
writeMetaTyVar t_aBg := Doc
writeMetaTyVar t_aBj := HTML
writeMetaTyVar t_aBk := Doc
writeMetaTyVar t_aBn := [Attributen]
writeMetaTyVar t_aBo := Doc
writeMetaTyVar t_aBr := [HTML]
writeMetaTyVar t_aBs := Bool
writeMetaTyVar t_aBv := HTML
writeMetaTyVar t_aBw := Bool
writeMetaTyVar t_aBz := HTML
writeMetaTyVar t_aBA := Bool
writeMetaTyVar t_aBR := [Requirement]
writeMetaTyVar t_aBS := HTML
writeMetaTyVar t_aBT := Maybe Requirement
writeMetaTyVar t_aBX := Requirement
writeMetaTyVar t_aBY := HTML
writeMetaTyVar t_aBZ := Bool
writeMetaTyVar t_aC3 := HTML
writeMetaTyVar t_aC4 := String
writeMetaTyVar t_aC7 := String
writeMetaTyVar t_aC8 := String
writeMetaTyVar t_aC9 := Bool
writeMetaTyVar t_aCe := Attributen
writeMetaTyVar t_aCw := HTML
writeMetaTyVar t_aCD := HTML
writeMetaTyVar t_aCH := HTML
writeMetaTyVar t_aCO := HTML
writeMetaTyVar a_aEc := String -> String -> Bool
writeMetaTyVar t_aEf := String
writeMetaTyVar t_aEg := String
writeMetaTyVar t_aEt := String
writeMetaTyVar t_aEu := String
writeMetaTyVar t_aEA := String
writeMetaTyVar t_aEB := String
writeMetaTyVar t_aEM := String
writeMetaTyVar t_aEN := String
writeMetaTyVar t_aET := String
writeMetaTyVar t_aEU := String
writeMetaTyVar t_aF4 := Requirement
writeMetaTyVar a_aFa := String
writeMetaTyVar b_aFb := String
writeMetaTyVar a_aFm := Requirement
writeMetaTyVar a_aFq := Requirement
writeMetaTyVar t_aFt := Requirement
writeMetaTyVar a_aFv := Requirement
Constraint solver steps = 205
End simplifyTop }
reportUnsolved {
reportUnsolved (before unflattening)
  WC {wc_insol = [W] cobox_aG8 :: Char
                                  ~ [Char] [" a type equality String
                                                              ~
                                                              Doc " HTML.hs:51:37-54] (CNonCanonical)}
reportUnsolved (after unflattening):
  WC {wc_insol = [W] cobox_aG8 :: Char
                                  ~ [Char] [" a type equality String
                                                              ~
                                                              Doc " HTML.hs:51:37-54] (CNonCanonical)}
reportFlats
  Flats = {}
  Suppress = False
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {[W] cobox_aG8 :: Char ~ [Char] [" a type equality String
                                                             ~
                                                             Doc " HTML.hs:51:37-54] (CNonCanonical)}
  Suppress = False
tryReporters {
  [[W] cobox_aG8 :: Char ~ [Char] [" a type equality String
                                                     ~
                                                     Doc " HTML.hs:51:37-54] (CNonCanonical)]
tryReporters: yes
  Utterly wrong [[W] cobox_aG8 :: Char
                                  ~ [Char] [" a type equality String
                                                              ~
                                                              Doc " HTML.hs:51:37-54] (CNonCanonical)]
relevantBindings [attributen, prepAttr]
Adding error:
  HTML.hs:51:37:
      Couldn't match type ‘Char’ with ‘[Char]’
      Expected type: Doc
        Actual type: String
      In the second argument of ‘(<|>)’, namely ‘unwords attributen’
      In the expression: tekst " " <|> unwords attributen
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {}
  Suppress = True
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportUnsolved }
InstEnvs (External) {
  instance Control.Applicative.Alternative []
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus m =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance (Control.Arrow.ArrowZero a, Control.Arrow.ArrowPlus a) =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.ArrowPlus a =>
           Control.Applicative.Alternative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Enum GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Enum (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Enum Float -- Defined in ‘GHC.Float’
  instance Enum Double -- Defined in ‘GHC.Float’
  instance Eq a => Eq [a] -- Defined in ‘GHC.Classes’
  instance Eq GHC.Types.Word -- Defined in ‘GHC.Classes’
  instance Eq Ordering -- Defined in ‘GHC.Classes’
  instance Eq Int -- Defined in ‘GHC.Classes’
  instance Eq Float -- Defined in ‘GHC.Classes’
  instance Eq Double -- Defined in ‘GHC.Classes’
  instance Eq Char -- Defined in ‘GHC.Classes’
  instance Eq Bool -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m, Eq n, Eq o) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m, Eq n) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l, Eq m) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k, Eq l) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k, l)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j, Eq k) =>
           Eq (a, b, c, d, e, f, g, h, i, j, k)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i,
            Eq j) =>
           Eq (a, b, c, d, e, f, g, h, i, j)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h, Eq i) =>
           Eq (a, b, c, d, e, f, g, h, i)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g, Eq h) =>
           Eq (a, b, c, d, e, f, g, h)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f, Eq g) =>
           Eq (a, b, c, d, e, f, g)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e, Eq f) =>
           Eq (a, b, c, d, e, f)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d, Eq e) => Eq (a, b, c, d, e)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c, Eq d) => Eq (a, b, c, d)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b, Eq c) => Eq (a, b, c)
    -- Defined in ‘GHC.Classes’
  instance (Eq a, Eq b) => Eq (a, b) -- Defined in ‘GHC.Classes’
  instance Eq () -- Defined in ‘GHC.Classes’
  instance Eq a => Eq (Maybe a) -- Defined in ‘Data.Maybe’
  instance Eq Integer -- Defined in ‘integer-gmp:GHC.Integer.Type’
  instance Eq a => Eq (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Eq a => Eq (GHC.Real.Ratio a) -- Defined in ‘GHC.Real’
  instance Floating Float -- Defined in ‘GHC.Float’
  instance Floating Double -- Defined in ‘GHC.Float’
  instance Integral a => Fractional (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Fractional Float -- Defined in ‘GHC.Float’
  instance Fractional Double -- Defined in ‘GHC.Float’
  instance Integral GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral Integer -- Defined in ‘GHC.Real’
  instance Integral Int -- Defined in ‘GHC.Real’
  instance Monad Maybe -- Defined in ‘Data.Maybe’
  instance Monad m => Monad (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Monad [] -- Defined in ‘GHC.Base’
  instance Monad IO -- Defined in ‘GHC.Base’
  instance Monad ((->) r) -- Defined in ‘GHC.Base’
  instance Functor Maybe -- Defined in ‘Data.Maybe’
  instance Functor Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m => Functor (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Functor (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Functor (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Functor [] -- Defined in ‘GHC.Base’
  instance Functor IO -- Defined in ‘GHC.Base’
  instance Functor ((->) r) -- Defined in ‘GHC.Base’
  instance Functor ((,) a) -- Defined in ‘GHC.Base’
  instance Num GHC.Types.Word -- Defined in ‘GHC.Num’
  instance Num Integer -- Defined in ‘GHC.Num’
  instance Num Int -- Defined in ‘GHC.Num’
  instance Integral a => Num (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Num Float -- Defined in ‘GHC.Float’
  instance Num Double -- Defined in ‘GHC.Float’
  instance Ord a => Ord [a] -- Defined in ‘GHC.Classes’
  instance Ord GHC.Types.Word -- Defined in ‘GHC.Classes’
  instance Ord Ordering -- Defined in ‘GHC.Classes’
  instance Ord Int -- Defined in ‘GHC.Classes’
  instance Ord Float -- Defined in ‘GHC.Classes’
  instance Ord Double -- Defined in ‘GHC.Classes’
  instance Ord Char -- Defined in ‘GHC.Classes’
  instance Ord Bool -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m, Ord n, Ord o) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m, Ord n) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l, Ord m) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l, m)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k, Ord l) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k, l)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j, Ord k) =>
           Ord (a, b, c, d, e, f, g, h, i, j, k)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i, Ord j) =>
           Ord (a, b, c, d, e, f, g, h, i, j)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g, Ord h,
            Ord i) =>
           Ord (a, b, c, d, e, f, g, h, i)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g,
            Ord h) =>
           Ord (a, b, c, d, e, f, g, h)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f, Ord g) =>
           Ord (a, b, c, d, e, f, g)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e, Ord f) =>
           Ord (a, b, c, d, e, f)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d, Ord e) => Ord (a, b, c, d, e)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c, Ord d) => Ord (a, b, c, d)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b, Ord c) => Ord (a, b, c)
    -- Defined in ‘GHC.Classes’
  instance (Ord a, Ord b) => Ord (a, b) -- Defined in ‘GHC.Classes’
  instance Ord () -- Defined in ‘GHC.Classes’
  instance Ord a => Ord (Maybe a) -- Defined in ‘Data.Maybe’
  instance Ord Integer -- Defined in ‘integer-gmp:GHC.Integer.Type’
  instance Ord a => Ord (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Integral a => Ord (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Read a => Read (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Real GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Real (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Real Integer -- Defined in ‘GHC.Real’
  instance Real Int -- Defined in ‘GHC.Real’
  instance Real Float -- Defined in ‘GHC.Float’
  instance Real Double -- Defined in ‘GHC.Float’
  instance RealFloat Float -- Defined in ‘GHC.Float’
  instance RealFloat Double -- Defined in ‘GHC.Float’
  instance Integral a => RealFrac (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance RealFrac Float -- Defined in ‘GHC.Float’
  instance RealFrac Double -- Defined in ‘GHC.Float’
  instance Show a => Show (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance (Integral a, Show a) => Show (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Show Float -- Defined in ‘GHC.Float’
  instance Show Double -- Defined in ‘GHC.Float’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Applicative
    -- Defined in ‘Control.Applicative’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Alternative
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus [] -- Defined in ‘Control.Monad’
  instance Control.Monad.MonadPlus Maybe
    -- Defined in ‘Control.Monad’
  instance Control.Applicative.Applicative []
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (GHC.ST.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             (base:Control.Monad.ST.Lazy.Imp.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Data.Proxy.Proxy
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative IO
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (Either e)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid m =>
           Control.Applicative.Applicative (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative ((->) a)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Control.Applicative.Applicative ((,) a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedMonad m a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedArrow a b c)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.Const a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0Const
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Data.Monoid.Monoid (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
End InstEnvs }
InstEnvs (Internal) {
End InstEnvs }
famInstEnvs (External) {
  type GHC.Generics.Rep Char
    ~ GHC.Generics.D1
        GHC.Generics.D_Char
        (GHC.Generics.C1
           GHC.Generics.C_Char
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Char)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Double
    ~ GHC.Generics.D1
        GHC.Generics.D_Double
        (GHC.Generics.C1
           GHC.Generics.C_Double
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Double)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Float
    ~ GHC.Generics.D1
        GHC.Generics.D_Float
        (GHC.Generics.C1
           GHC.Generics.C_Float
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Float)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Int
    ~ GHC.Generics.D1
        GHC.Generics.D_Int
        (GHC.Generics.C1
           GHC.Generics.C_Int
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Proxy.Proxy t)
    ~ GHC.Generics.D1
        GHC.Generics.D1Proxy
        (GHC.Generics.C1 GHC.Generics.C1_0Proxy GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f, g)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 g)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 f)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 e)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ()
    ~ GHC.Generics.D1
        GHC.Generics.D1()
        (GHC.Generics.C1 GHC.Generics.C1_0() GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Ordering
    ~ GHC.Generics.D1
        GHC.Generics.D1Ordering
        (GHC.Generics.C1 GHC.Generics.C1_0Ordering GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Ordering GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Ordering GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Bool
    ~ GHC.Generics.D1
        GHC.Generics.D1Bool
        (GHC.Generics.C1 GHC.Generics.C1_0Bool GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Bool GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Either a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Maybe a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep [a]
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 [a])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.U1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1U1
        (GHC.Generics.C1 GHC.Generics.C1_0U1 GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Par1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Par1
        (GHC.Generics.C1
           GHC.Generics.C1_0Par1
           (GHC.Generics.S1 GHC.Generics.S1_0_0Par1 (GHC.Generics.Rec0 p)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Rec1 f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Rec1
        (GHC.Generics.C1
           GHC.Generics.C1_0Rec1
           (GHC.Generics.S1
              GHC.Generics.S1_0_0Rec1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.K1 i c p)
    ~ GHC.Generics.D1
        GHC.Generics.D1K1
        (GHC.Generics.C1
           GHC.Generics.C1_0K1
           (GHC.Generics.S1 GHC.Generics.S1_0_0K1 (GHC.Generics.Rec0 c)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.M1 i c f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1M1
        (GHC.Generics.C1
           GHC.Generics.C1_0M1
           (GHC.Generics.S1 GHC.Generics.S1_0_0M1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:+:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:+:
        (GHC.Generics.C1
           GHC.Generics.C1_0:+:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p)))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1:+:
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:*:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:*:
        (GHC.Generics.C1
           GHC.Generics.C1_0:*:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p))
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:.:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:.:
        (GHC.Generics.C1
           GHC.Generics.C1_0:.:
           (GHC.Generics.S1
              GHC.Generics.S1_0_0:.: (GHC.Generics.Rec0 (f (g p)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Associativity
    ~ GHC.Generics.D1
        GHC.Generics.D1Associativity
        (GHC.Generics.C1 GHC.Generics.C1_0Associativity GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Associativity GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Associativity GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Fixity
    ~ GHC.Generics.D1
        GHC.Generics.D1Fixity
        (GHC.Generics.C1 GHC.Generics.C1_0Fixity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Fixity
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector
                               (GHC.Generics.Rec0 GHC.Generics.Associativity)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Arity
    ~ GHC.Generics.D1
        GHC.Generics.D1Arity
        (GHC.Generics.C1 GHC.Generics.C1_0Arity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Arity
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Monoid.Dual a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Endo a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Endo
        (GHC.Generics.C1
           Data.Monoid.C1_0Endo
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Endo (GHC.Generics.Rec0 (a -> a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.All
    ~ GHC.Generics.D1
        Data.Monoid.D1All
        (GHC.Generics.C1
           Data.Monoid.C1_0All
           (GHC.Generics.S1 Data.Monoid.S1_0_0All (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.Any
    ~ GHC.Generics.D1
        Data.Monoid.D1Any
        (GHC.Generics.C1
           Data.Monoid.C1_0Any
           (GHC.Generics.S1 Data.Monoid.S1_0_0Any (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Sum a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Product a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.First a)
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Last a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Last (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Control.Applicative.Const a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedMonad m a)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec0 (m a))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedArrow a b c)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow
              (GHC.Generics.Rec0 (a b c))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.ZipList a)
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec0 [a])))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 ((,,,,,,) a b c d e f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,,) a b c d e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,) a b c d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,) a b c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,) a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,) a)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 (Either a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Maybe
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 []
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec1 [])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Data.Monoid.Dual
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Sum
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Product
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.First
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Last
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1 Data.Monoid.S1_0_0Last (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 (Control.Applicative.Const a)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedMonad m)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec1 m)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedArrow a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow (GHC.Generics.Rec1 (a b))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 Control.Applicative.ZipList
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec1 [])))
    -- Defined in ‘Control.Applicative’
  type instance a Data.Type.Equality.== b
    ~ Data.Either.EqEither a b
    -- Defined in ‘Data.Either’
End famInstEnvs }
famInstEnvs (Internal) {
End famInstEnvs }
originalCts (simplifyTop)
  fvars =  [(aBf, t_aBf), (aBg, t_aBg), (aBj, t_aBj), (aBk, t_aBk),
            (aBn, t_aBn), (aBo, t_aBo), (aBr, t_aBr), (aBs, t_aBs),
            (aBv, t_aBv), (aBw, t_aBw), (aBz, t_aBz), (aBA, t_aBA),
            (aBR, t_aBR), (aBS, t_aBS), (aBT, t_aBT), (aBX, t_aBX),
            (aBY, t_aBY), (aBZ, t_aBZ), (aC3, t_aC3), (aC4, t_aC4),
            (aC7, t_aC7), (aC8, t_aC8), (aC9, t_aC9), (aCe, t_aCe),
            (aCw, t_aCw), (aCD, t_aCD), (aCH, t_aCH), (aCO, t_aCO),
            (aEc, a_aEc), (aEf, t_aEf), (aEg, t_aEg), (aEt, t_aEt),
            (aEu, t_aEu), (aEA, t_aEA), (aEB, t_aEB), (aEM, t_aEM),
            (aEN, t_aEN), (aET, t_aET), (aEU, t_aEU), (aF4, t_aF4),
            (aFa, a_aFa), (aFb, b_aFb), (aFm, a_aFm), (aFq, a_aFq),
            (aFt, t_aFt), (aFv, a_aFv)]
  wanted =  WC {wc_flat = [W] cobox_aBh :: [HTML]
                                           ~ t_aBf [" a type equality [HTML]
                                                                      ~
                                                                      t_aBf " HTML.hs:62:16-28] (CNonCanonical)
                          [W] cobox_aBi :: Doc ~ t_aBg [" a type equality Doc
                                                                          ~
                                                                          t_aBg " HTML.hs:62:16-28] (CNonCanonical)
                          [W] cobox_aBl :: HTML ~ t_aBj [" a type equality HTML
                                                                           ~
                                                                           t_aBj " HTML.hs:53:11-21] (CNonCanonical)
                          [W] cobox_aBm :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:53:11-21] (CNonCanonical)
                          [W] cobox_aBp :: [Attributen]
                                           ~ t_aBn [" a type equality [Attributen]
                                                                      ~
                                                                      t_aBn " HTML.hs:49:13-31] (CNonCanonical)
                          [W] cobox_aBq :: Doc ~ t_aBo [" a type equality Doc
                                                                          ~
                                                                          t_aBo " HTML.hs:49:13-31] (CNonCanonical)
                          [W] cobox_aBt :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                             ~
                                                                             t_aBr " HTML.hs:45:22-35] (CNonCanonical)
                          [W] cobox_aBu :: Bool ~ t_aBs [" a type equality Bool
                                                                           ~
                                                                           t_aBs " HTML.hs:45:22-35] (CNonCanonical)
                          [W] cobox_aBx :: HTML ~ t_aBv [" a type equality HTML
                                                                           ~
                                                                           t_aBv " HTML.hs:39:22-33] (CNonCanonical)
                          [W] cobox_aBy :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:39:22-33] (CNonCanonical)
                          [W] cobox_aBB :: HTML ~ t_aBz [" a type equality HTML
                                                                           ~
                                                                           t_aBz " HTML.hs:35:11-22] (CNonCanonical)
                          [W] cobox_aBC :: Bool ~ t_aBA [" a type equality Bool
                                                                           ~
                                                                           t_aBA " HTML.hs:35:11-22] (CNonCanonical)
                          [W] cobox_aBU :: [Requirement]
                                           ~ t_aBR [" a type equality [Requirement]
                                                                      ~
                                                                      t_aBR " HTML.hs:26:13-54] (CNonCanonical)
                          [W] cobox_aBV :: HTML ~ t_aBS [" a type equality HTML
                                                                           ~
                                                                           t_aBS " HTML.hs:26:13-54] (CNonCanonical)
                          [W] cobox_aBW :: Maybe Requirement ~ t_aBT [" a type equality Maybe
                                                                                          Requirement
                                                                                        ~
                                                                                        t_aBT " HTML.hs:26:13-54] (CNonCanonical)
                          [W] cobox_aC0 :: Requirement ~ t_aBX [" a type equality Requirement
                                                                                  ~
                                                                                  t_aBX " HTML.hs:21:14-40] (CNonCanonical)
                          [W] cobox_aC1 :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:21:14-40] (CNonCanonical)
                          [W] cobox_aC2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                           ~
                                                                           t_aBZ " HTML.hs:21:14-40] (CNonCanonical)
                          [W] cobox_aC5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:16:15-28] (CNonCanonical)
                          [W] cobox_aC6 :: String ~ t_aC4 [" a type equality String
                                                                             ~
                                                                             t_aC4 " HTML.hs:16:15-28] (CNonCanonical)
                          [W] cobox_aCa :: String ~ t_aC7 [" a type equality String
                                                                             ~
                                                                             t_aC7 " HTML.hs:4:18-41] (CNonCanonical)
                          [W] cobox_aCb :: String ~ t_aC8 [" a type equality String
                                                                             ~
                                                                             t_aC8 " HTML.hs:4:18-41] (CNonCanonical)
                          [W] cobox_aCc :: Bool ~ t_aC9 [" a type equality Bool
                                                                           ~
                                                                           t_aC9 " HTML.hs:4:18-41] (CNonCanonical)
                          [W] cobox_aCf :: [t_aCe] ~ t_aBn [" a type equality [t_aCe]
                                                                              ~
                                                                              t_aBn " HTML.hs:50:10-11] (CNonCanonical)
                          [W] cobox_aCg :: Doc ~ t_aBo [" a type equality Doc
                                                                          ~
                                                                          t_aBo " HTML.hs:50:15-22] (CNonCanonical)
                          [W] cobox_aCh :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:50:21-22] (CNonCanonical)
                          [W] cobox_aCi :: Doc ~ t_aBo [" a type equality Doc
                                                                          ~
                                                                          t_aBo " HTML.hs:51:23-54] (CNonCanonical)
                          [W] cobox_aCj :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:51:23-31] (CNonCanonical)
                          [W] cobox_aCk :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:51:29-31] (CNonCanonical)
                          [W] cobox_aCl :: String ~ Doc [" a type equality String
                                                                           ~
                                                                           Doc " HTML.hs:51:37-54] (CNonCanonical)
                          [W] cobox_aCm :: t_aBn ~ [String] [" a type equality t_aBn
                                                                               ~
                                                                               [String] " HTML.hs:51:45-54] (CNonCanonical)
                          [W] cobox_aCo :: HTML ~ t_aBv [" a type equality HTML
                                                                           ~
                                                                           t_aBv " HTML.hs:40:20-26] (CNonCanonical)
                          [W] cobox_aCp :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:40:31-34] (CNonCanonical)
                          [W] cobox_aCq :: HTML ~ t_aBv [" a type equality HTML
                                                                           ~
                                                                           t_aBv " HTML.hs:41:20-36] (CNonCanonical)
                          [W] cobox_aCr :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:41:41-44] (CNonCanonical)
                          [W] cobox_aCs :: HTML ~ t_aBv [" a type equality HTML
                                                                           ~
                                                                           t_aBv " HTML.hs:42:20-32] (CNonCanonical)
                          [W] cobox_aCt :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:42:37-40] (CNonCanonical)
                          [W] cobox_aCu :: Bool ~ t_aBw [" a type equality Bool
                                                                           ~
                                                                           t_aBw " HTML.hs:43:23-27] (CNonCanonical)
                          [W] cobox_aCx :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                              ~
                                                                              t_aBr " HTML.hs:46:20-23] (CNonCanonical)
                          [W] cobox_aCy :: Bool ~ t_aBs [" a type equality Bool
                                                                           ~
                                                                           t_aBs " HTML.hs:46:28-70] (CNonCanonical)
                          [W] cobox_aCz :: t_aBw ~ Bool [" a type equality t_aBw
                                                                           ~
                                                                           Bool " HTML.hs:46:28-46] (CNonCanonical)
                          [W] cobox_aCA :: t_aCw ~ t_aBv [" a type equality t_aCw
                                                                            ~
                                                                            t_aBv " HTML.hs:46:46] (CNonCanonical)
                          [W] cobox_aCB :: t_aBs ~ Bool [" a type equality t_aBs
                                                                           ~
                                                                           Bool " HTML.hs:46:51-70] (CNonCanonical)
                          [W] cobox_aCC :: [t_aCw] ~ t_aBr [" a type equality [t_aCw]
                                                                              ~
                                                                              t_aBr " HTML.hs:46:69-70] (CNonCanonical)
                          [W] cobox_aCE :: [t_aCD] ~ t_aBr [" a type equality [t_aCD]
                                                                              ~
                                                                              t_aBr " HTML.hs:47:19-20] (CNonCanonical)
                          [W] cobox_aCF :: Bool ~ t_aBs [" a type equality Bool
                                                                           ~
                                                                           t_aBs " HTML.hs:47:24-27] (CNonCanonical)
                          [W] cobox_aCI :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                              ~
                                                                              t_aBf " HTML.hs:63:14-17] (CNonCanonical)
                          [W] cobox_aCJ :: Doc ~ t_aBg [" a type equality Doc
                                                                          ~
                                                                          t_aBg " HTML.hs:63:22-48] (CNonCanonical)
                          [W] cobox_aCK :: t_aBk ~ Doc [" a type equality t_aBk
                                                                          ~
                                                                          Doc " HTML.hs:63:22-29] (CNonCanonical)
                          [W] cobox_aCL :: t_aCH ~ t_aBj [" a type equality t_aCH
                                                                            ~
                                                                            t_aBj " HTML.hs:63:29] (CNonCanonical)
                          [W] cobox_aCM :: t_aBg ~ Doc [" a type equality t_aBg
                                                                          ~
                                                                          Doc " HTML.hs:63:35-48] (CNonCanonical)
                          [W] cobox_aCN :: [t_aCH] ~ t_aBf [" a type equality [t_aCH]
                                                                              ~
                                                                              t_aBf " HTML.hs:63:47-48] (CNonCanonical)
                          [W] cobox_aCP :: [t_aCO] ~ t_aBf [" a type equality [t_aCO]
                                                                              ~
                                                                              t_aBf " HTML.hs:64:13-14] (CNonCanonical)
                          [W] cobox_aCQ :: Doc ~ t_aBg [" a type equality Doc
                                                                          ~
                                                                          t_aBg " HTML.hs:64:18-25] (CNonCanonical)
                          [W] cobox_aCR :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:64:24-25] (CNonCanonical)
                          [W] cobox_aCT :: HTML ~ t_aBj [" a type equality HTML
                                                                           ~
                                                                           t_aBj " HTML.hs:54:9-31] (CNonCanonical)
                          [W] cobox_aCU :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:54:36-62] (CNonCanonical)
                          [W] cobox_aCV :: t_aBs ~ Bool [" a type equality t_aBs
                                                                           ~
                                                                           Bool " HTML.hs:54:40-61] (CNonCanonical)
                          [W] cobox_aCW :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                             ~
                                                                             t_aBr " HTML.hs:54:58-61] (CNonCanonical)
                          [W] cobox_aCX :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:(54,66)-(56,108)] (CNonCanonical)
                          [W] cobox_aCY :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:(54,66)-(55,98)] (CNonCanonical)
                          [W] cobox_aCZ :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:66-120] (CNonCanonical)
                          [W] cobox_aD0 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:66-106] (CNonCanonical)
                          [W] cobox_aD1 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:66-89] (CNonCanonical)
                          [W] cobox_aD2 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:66-74] (CNonCanonical)
                          [W] cobox_aD3 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:54:72-74] (CNonCanonical)
                          [W] cobox_aD4 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:80-89] (CNonCanonical)
                          [W] cobox_aD5 :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:54:86-89] (CNonCanonical)
                          [W] cobox_aD6 :: t_aBo ~ Doc [" a type equality t_aBo
                                                                          ~
                                                                          Doc " HTML.hs:54:95-106] (CNonCanonical)
                          [W] cobox_aD7 :: [Attributen]
                                           ~ t_aBn [" a type equality [Attributen]
                                                                      ~
                                                                      t_aBn " HTML.hs:54:104-106] (CNonCanonical)
                          [W] cobox_aD8 :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:54:112-120] (CNonCanonical)
                          [W] cobox_aD9 :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:54:118-120] (CNonCanonical)
                          [W] cobox_aDa :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:55:70-98] (CNonCanonical)
                          [W] cobox_aDb :: t_aBg ~ Doc [" a type equality t_aBg
                                                                          ~
                                                                          Doc " HTML.hs:55:82-97] (CNonCanonical)
                          [W] cobox_aDc :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                             ~
                                                                             t_aBf " HTML.hs:55:94-97] (CNonCanonical)
                          [W] cobox_aDd :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:70-108] (CNonCanonical)
                          [W] cobox_aDe :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:70-94] (CNonCanonical)
                          [W] cobox_aDf :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:70-79] (CNonCanonical)
                          [W] cobox_aDg :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:56:76-79] (CNonCanonical)
                          [W] cobox_aDh :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:85-94] (CNonCanonical)
                          [W] cobox_aDi :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:56:91-94] (CNonCanonical)
                          [W] cobox_aDj :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:56:100-108] (CNonCanonical)
                          [W] cobox_aDk :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:56:106-108] (CNonCanonical)
                          [W] cobox_aDl :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:57:36-44] (CNonCanonical)
                          [W] cobox_aDm :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:(57,48)-(58,113)] (CNonCanonical)
                          [W] cobox_aDn :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:(57,48)-(58,99)] (CNonCanonical)
                          [W] cobox_aDo :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:(57,48)-(58,84)] (CNonCanonical)
                          [W] cobox_aDp :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:(57,48)-(58,69)] (CNonCanonical)
                          [W] cobox_aDq :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:48-102] (CNonCanonical)
                          [W] cobox_aDr :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:48-88] (CNonCanonical)
                          [W] cobox_aDs :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:48-71] (CNonCanonical)
                          [W] cobox_aDt :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:48-56] (CNonCanonical)
                          [W] cobox_aDu :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:57:54-56] (CNonCanonical)
                          [W] cobox_aDv :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:62-71] (CNonCanonical)
                          [W] cobox_aDw :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:57:68-71] (CNonCanonical)
                          [W] cobox_aDx :: t_aBo ~ Doc [" a type equality t_aBo
                                                                          ~
                                                                          Doc " HTML.hs:57:77-88] (CNonCanonical)
                          [W] cobox_aDy :: [Attributen]
                                           ~ t_aBn [" a type equality [Attributen]
                                                                      ~
                                                                      t_aBn " HTML.hs:57:86-88] (CNonCanonical)
                          [W] cobox_aDz :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:57:94-102] (CNonCanonical)
                          [W] cobox_aDA :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:57:100-102] (CNonCanonical)
                          [W] cobox_aDB :: t_aBg ~ Doc [" a type equality t_aBg
                                                                          ~
                                                                          Doc " HTML.hs:58:53-68] (CNonCanonical)
                          [W] cobox_aDC :: [HTML] ~ t_aBf [" a type equality [HTML]
                                                                             ~
                                                                             t_aBf " HTML.hs:58:65-68] (CNonCanonical)
                          [W] cobox_aDD :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:58:75-84] (CNonCanonical)
                          [W] cobox_aDE :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:58:81-84] (CNonCanonical)
                          [W] cobox_aDF :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:58:90-99] (CNonCanonical)
                          [W] cobox_aDG :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:58:96-99] (CNonCanonical)
                          [W] cobox_aDH :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:58:105-113] (CNonCanonical)
                          [W] cobox_aDI :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:58:111-113] (CNonCanonical)
                          [W] cobox_aDJ :: HTML ~ t_aBj [" a type equality HTML
                                                                           ~
                                                                           t_aBj " HTML.hs:59:9-26] (CNonCanonical)
                          [W] cobox_aDK :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:59:31-92] (CNonCanonical)
                          [W] cobox_aDL :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:31-78] (CNonCanonical)
                          [W] cobox_aDM :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:31-54] (CNonCanonical)
                          [W] cobox_aDN :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:31-39] (CNonCanonical)
                          [W] cobox_aDO :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:59:37-39] (CNonCanonical)
                          [W] cobox_aDP :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:45-54] (CNonCanonical)
                          [W] cobox_aDQ :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:59:51-54] (CNonCanonical)
                          [W] cobox_aDR :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:60-78] (CNonCanonical)
                          [W] cobox_aDS :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:59:67-77] (CNonCanonical)
                          [W] cobox_aDT :: [Attributen]
                                           ~ [String] [" a type equality [Attributen]
                                                                         ~
                                                                         [String] " HTML.hs:59:75-77] (CNonCanonical)
                          [W] cobox_aDU :: Doc ~ Doc [" a type equality Doc
                                                                        ~
                                                                        Doc " HTML.hs:59:84-92] (CNonCanonical)
                          [W] cobox_aDV :: [Char] ~ String [" a type equality [Char]
                                                                              ~
                                                                              String " HTML.hs:59:90-92] (CNonCanonical)
                          [W] cobox_aDW :: HTML ~ t_aBj [" a type equality HTML
                                                                           ~
                                                                           t_aBj " HTML.hs:60:9-21] (CNonCanonical)
                          [W] cobox_aDX :: Doc ~ t_aBk [" a type equality Doc
                                                                          ~
                                                                          t_aBk " HTML.hs:60:26-38] (CNonCanonical)
                          [W] cobox_aDY :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:60:32-38] (CNonCanonical)
                          [W] cobox_aE0 :: HTML ~ t_aBz [" a type equality HTML
                                                                           ~
                                                                           t_aBz " HTML.hs:36:9-23] (CNonCanonical)
                          [W] cobox_aE1 :: t_aBs ~ t_aBA [" a type equality t_aBs
                                                                            ~
                                                                            t_aBA " HTML.hs:36:28-46] (CNonCanonical)
                          [W] cobox_aE2 :: [HTML] ~ t_aBr [" a type equality [HTML]
                                                                             ~
                                                                             t_aBr " HTML.hs:36:46] (CNonCanonical)
                          [W] cobox_aE3 :: Bool ~ t_aBA [" a type equality Bool
                                                                           ~
                                                                           t_aBA " HTML.hs:37:12-15] (CNonCanonical)
                          [W] cobox_aE5 :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:17:13-30] (CNonCanonical)
                          [W] cobox_aE6 :: String ~ t_aC4 [" a type equality String
                                                                             ~
                                                                             t_aC4 " HTML.hs:17:35-38] (CNonCanonical)
                          [W] cobox_aE7 :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:18:13-28] (CNonCanonical)
                          [W] cobox_aE8 :: String ~ t_aC4 [" a type equality String
                                                                             ~
                                                                             t_aC4 " HTML.hs:18:33-36] (CNonCanonical)
                          [W] cobox_aE9 :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:19:13-19] (CNonCanonical)
                          [W] cobox_aEa :: [Char] ~ t_aC4 [" a type equality [Char]
                                                                             ~
                                                                             t_aC4 " HTML.hs:19:24-25] (CNonCanonical)
                          [W] cobox_aEd :: a_aEc
                                           ~ (t_aC7 -> t_aC8 -> t_aC9) [" a type equality a_aEc
                                                                                          ~
                                                                                          t_aC7
                                                                                          -> t_aC8
                                                                                          -> t_aC9 " HTML.hs:5:12-20] (CNonCanonical)
                          [W] cobox_aEh :: (t_aEf, t_aEg) ~ t_aBX [" a type equality (t_aEf,
                                                                                      t_aEg)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:22:11-15] (CNonCanonical)
                          [W] cobox_aEi :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:22:18-42] (CNonCanonical)
                          [W] cobox_aEj :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                           ~
                                                                           Bool " HTML.hs:22:47-71] (CNonCanonical)
                          [W] cobox_aEk :: t_aC4 ~ t_aC7 [" a type equality t_aC4
                                                                            ~
                                                                            t_aC7 " HTML.hs:22:57-68] (CNonCanonical)
                          [W] cobox_aEl :: HTML ~ t_aC3 [" a type equality HTML
                                                                           ~
                                                                           t_aC3 " HTML.hs:22:68] (CNonCanonical)
                          [W] cobox_aEm :: t_aEg ~ t_aC8 [" a type equality t_aEg
                                                                            ~
                                                                            t_aC8 " HTML.hs:22:71] (CNonCanonical)
                          [W] cobox_aEn :: Bool ~ t_aBZ [" a type equality Bool
                                                                           ~
                                                                           t_aBZ " HTML.hs:22:76-160] (CNonCanonical)
                          [W] cobox_aEo :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                           ~
                                                                           Bool " HTML.hs:22:77-91] (CNonCanonical)
                          [W] cobox_aEp :: t_aEf ~ t_aC7 [" a type equality t_aEf
                                                                            ~
                                                                            t_aC7 " HTML.hs:22:86] (CNonCanonical)
                          [W] cobox_aEq :: String ~ t_aC8 [" a type equality String
                                                                             ~
                                                                             t_aC8 " HTML.hs:22:88-91] (CNonCanonical)
                          [W] cobox_aEr :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:22:97-160] (CNonCanonical)
                          [W] cobox_aEs :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:22:98-114] (CNonCanonical)
                          [W] cobox_aEv :: (t_aEt, t_aEu) ~ t_aBX [" a type equality (t_aEt,
                                                                                      t_aEu)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:22:108-112] (CNonCanonical)
                          [W] cobox_aEw :: t_aEf ~ t_aEt [" a type equality t_aEf
                                                                            ~
                                                                            t_aEt " HTML.hs:22:109] (CNonCanonical)
                          [W] cobox_aEx :: t_aEg ~ t_aEu [" a type equality t_aEg
                                                                            ~
                                                                            t_aEu " HTML.hs:22:111] (CNonCanonical)
                          [W] cobox_aEy :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:22:114] (CNonCanonical)
                          [W] cobox_aEz :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:22:121-159] (CNonCanonical)
                          [W] cobox_aEC :: (t_aEA, t_aEB) ~ t_aBX [" a type equality (t_aEA,
                                                                                      t_aEB)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:22:131-135] (CNonCanonical)
                          [W] cobox_aED :: t_aEf ~ t_aEA [" a type equality t_aEf
                                                                            ~
                                                                            t_aEA " HTML.hs:22:132] (CNonCanonical)
                          [W] cobox_aEE :: t_aEg ~ t_aEB [" a type equality t_aEg
                                                                            ~
                                                                            t_aEB " HTML.hs:22:134] (CNonCanonical)
                          [W] cobox_aEF :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:22:138-158] (CNonCanonical)
                          [W] cobox_aEG :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:22:148-151] (CNonCanonical)
                          [W] cobox_aEH :: [Attributen]
                                           ~ [Attributen] [" a type equality [Attributen]
                                                                             ~
                                                                             [Attributen] " HTML.hs:22:153-155] (CNonCanonical)
                          [W] cobox_aEI :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                              ~
                                                                              [HTML] " HTML.hs:22:157-158] (CNonCanonical)
                          [W] cobox_aEJ :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:23:46-54] (CNonCanonical)
                          [W] cobox_aEK :: Bool ~ t_aBZ [" a type equality Bool
                                                                           ~
                                                                           t_aBZ " HTML.hs:23:58-121] (CNonCanonical)
                          [W] cobox_aEL :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:23:59-75] (CNonCanonical)
                          [W] cobox_aEO :: (t_aEM, t_aEN) ~ t_aBX [" a type equality (t_aEM,
                                                                                      t_aEN)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:23:69-73] (CNonCanonical)
                          [W] cobox_aEP :: t_aEf ~ t_aEM [" a type equality t_aEf
                                                                            ~
                                                                            t_aEM " HTML.hs:23:70] (CNonCanonical)
                          [W] cobox_aEQ :: t_aEg ~ t_aEN [" a type equality t_aEg
                                                                            ~
                                                                            t_aEN " HTML.hs:23:72] (CNonCanonical)
                          [W] cobox_aER :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:23:75] (CNonCanonical)
                          [W] cobox_aES :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:23:82-120] (CNonCanonical)
                          [W] cobox_aEV :: (t_aET, t_aEU) ~ t_aBX [" a type equality (t_aET,
                                                                                      t_aEU)
                                                                                     ~
                                                                                     t_aBX " HTML.hs:23:92-96] (CNonCanonical)
                          [W] cobox_aEW :: t_aEf ~ t_aET [" a type equality t_aEf
                                                                            ~
                                                                            t_aET " HTML.hs:23:93] (CNonCanonical)
                          [W] cobox_aEX :: t_aEg ~ t_aEU [" a type equality t_aEg
                                                                            ~
                                                                            t_aEU " HTML.hs:23:95] (CNonCanonical)
                          [W] cobox_aEY :: HTML ~ t_aBY [" a type equality HTML
                                                                           ~
                                                                           t_aBY " HTML.hs:23:99-119] (CNonCanonical)
                          [W] cobox_aEZ :: String ~ String [" a type equality String
                                                                              ~
                                                                              String " HTML.hs:23:109-112] (CNonCanonical)
                          [W] cobox_aF0 :: [Attributen]
                                           ~ [Attributen] [" a type equality [Attributen]
                                                                             ~
                                                                             [Attributen] " HTML.hs:23:114-116] (CNonCanonical)
                          [W] cobox_aF1 :: [HTML] ~ [HTML] [" a type equality [HTML]
                                                                              ~
                                                                              [HTML] " HTML.hs:23:118-119] (CNonCanonical)
                          [W] cobox_aF2 :: Bool ~ t_aBZ [" a type equality Bool
                                                                           ~
                                                                           t_aBZ " HTML.hs:24:17-20] (CNonCanonical)
                          [W] cobox_aF5 :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                              ~
                                                                              t_aBR " HTML.hs:27:11-18] (CNonCanonical)
                          [W] cobox_aF6 :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:27:28-70] (CNonCanonical)
                          [W] cobox_aF7 :: t_aC9 ~ Bool [" a type equality t_aC9
                                                                           ~
                                                                           Bool " HTML.hs:27:32-69] (CNonCanonical)
                          [W] cobox_aFc :: b_aFb ~ t_aC7 [" a type equality b_aFb
                                                                            ~
                                                                            t_aC7 " HTML.hs:27:42-50] (CNonCanonical)
                          [W] cobox_aFd :: t_aF4 ~ (a_aFa, b_aFb) [" a type equality t_aF4
                                                                                     ~
                                                                                     (a_aFa,
                                                                                      b_aFb) " HTML.hs:27:46-50] (CNonCanonical)
                          [W] cobox_aFe :: t_aC4 ~ t_aC8 [" a type equality t_aC4
                                                                            ~
                                                                            t_aC8 " HTML.hs:27:54-68] (CNonCanonical)
                          [W] cobox_aFf :: t_aBS ~ t_aC3 [" a type equality t_aBS
                                                                            ~
                                                                            t_aC3 " HTML.hs:27:65-68] (CNonCanonical)
                          [W] cobox_aFg :: t_aBZ ~ Bool [" a type equality t_aBZ
                                                                           ~
                                                                           Bool " HTML.hs:27:78-97] (CNonCanonical)
                          [W] cobox_aFh :: t_aF4 ~ t_aBX [" a type equality t_aF4
                                                                            ~
                                                                            t_aBX " HTML.hs:27:88-92] (CNonCanonical)
                          [W] cobox_aFi :: t_aBS ~ t_aBY [" a type equality t_aBS
                                                                            ~
                                                                            t_aBY " HTML.hs:27:94-97] (CNonCanonical)
                          [W] cobox_aFj :: t_aBT ~ t_aBT [" a type equality t_aBT
                                                                            ~
                                                                            t_aBT " HTML.hs:28:80-95] (CNonCanonical)
                          [W] cobox_aFk :: [t_aF4] ~ t_aBR [" a type equality [t_aF4]
                                                                              ~
                                                                              t_aBR " HTML.hs:28:89-90] (CNonCanonical)
                          [W] cobox_aFl :: t_aBS ~ t_aBS [" a type equality t_aBS
                                                                            ~
                                                                            t_aBS " HTML.hs:28:92-95] (CNonCanonical)
                          [W] cobox_aFn :: Maybe a_aFm ~ t_aBT [" a type equality Maybe a_aFm
                                                                                  ~
                                                                                  t_aBT " HTML.hs:30:80-89] (CNonCanonical)
                          [W] cobox_aFo :: t_aF4 ~ a_aFm [" a type equality t_aF4
                                                                            ~
                                                                            a_aFm " HTML.hs:30:85-89] (CNonCanonical)
                          [W] cobox_aFp :: Bool ~ Bool [" a type equality Bool
                                                                          ~
                                                                          Bool " HTML.hs:31:28-36] (CNonCanonical)
                          [W] cobox_aFr :: Maybe a_aFq ~ t_aBT [" a type equality Maybe a_aFq
                                                                                  ~
                                                                                  t_aBT " HTML.hs:31:40-49] (CNonCanonical)
                          [W] cobox_aFs :: t_aF4 ~ a_aFq [" a type equality t_aF4
                                                                            ~
                                                                            a_aFq " HTML.hs:31:45-49] (CNonCanonical)
                          [W] cobox_aFu :: [t_aFt] ~ t_aBR [" a type equality [t_aFt]
                                                                              ~
                                                                              t_aBR " HTML.hs:32:10-11] (CNonCanonical)
                          [W] cobox_aFw :: Maybe a_aFv ~ t_aBT [" a type equality Maybe a_aFv
                                                                                  ~
                                                                                  t_aBT " HTML.hs:32:17-23] (CNonCanonical)}
Tc9

HTML.hs:51:37:
    Couldn't match type ‘Char’ with ‘[Char]’
    Expected type: Doc
      Actual type: String
    In the second argument of ‘(<|>)’, namely ‘unwords attributen’
    In the expression: tekst " " <|> unwords attributen
