rn12
rn13
Tc2 (src)
Tc3
kcTyClGroup
  module Practium1
  type Table = [[String]]
kcTyClGroup: initial kinds []
env2 []
kcd1 Table []
tc_lhs_type:
  [[String]]
  Expected kind ‘k_abX’
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
writeMetaTyVar k_abX := *
kcd2 Table
Generalise kind
  Table
  k_abX
  []
  *
kcTyClGroup result [(Table, *)]
tcTyAndCl generalized kinds [(Table, *)]
tcTyAndCl-x type Table = [[String]]
env2 []
env2 []
tc-syn
  Table
  [(r8l, AThing *)]
tc_lhs_type:
  [[String]]
  Expected kind ‘*’
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
Starting validity check [Type constructor ‘Table’]
checkValidType [[String]] :: *
checkValidType done [[String]] :: *
env2 []
Adding instances:
addFamInsts
env2 []
tcDeriving
tcDeriving False
tcDeriving 1 []
Adding instances:
Tc3b
tcAmpMissingParentClassWarn/isInsts []
tcAmpMissingParentClassWarn/isInsts []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Monad.join []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.<*> []
tcAmpFunctionWarn/wouldBeImported
tcAmpFunctionWarn/amp_prelude_functions Control.Applicative.pure []
Tc4
Tc4a
env2 []
Tc5
tc_lhs_type:
  [[String]]
  Expected a type
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [Int]
  Expected a type
tc_lhs_type:
  Int
  Expected kind ‘*’
lk1 Int
lk2 Int Type constructor ‘Int’
tcCheckHsTypeAndGen [[String]] -> [Int]
Before unification
utype_defer
  cobox_aij
  [[String]]
  t_aih
  a type equality [[String]] ~ t_aih
  In the type signature for ‘lengthColumn’:
    lengthColumn :: [[String]] -> [Int]
utype_defer
  cobox_aik
  [Int]
  t_aii
  a type equality [Int] ~ t_aii
  In the type signature for ‘lengthColumn’:
    lengthColumn :: [[String]] -> [Int]
checkValidType t_aih -> t_aii :: *
checkValidType done t_aih -> t_aii :: *
tc_lhs_type:
  [[String]]
  Expected a type
tc_lhs_type:
  [String]
  Expected kind ‘*’
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tc_lhs_type:
  [String]
  Expected a type
tc_lhs_type:
  String
  Expected kind ‘*’
lk1 String
lk2 String Type constructor ‘String’
tcCheckHsTypeAndGen [[String]] -> [String]
Before unification
utype_defer
  cobox_ain
  [[String]]
  t_ail
  a type equality [[String]] ~ t_ail
  In the type signature for ‘firstColumn’:
    firstColumn :: [[String]] -> [String]
utype_defer
  cobox_aio
  [String]
  t_aim
  a type equality [String] ~ t_aim
  In the type signature for ‘firstColumn’:
    firstColumn :: [[String]] -> [String]
checkValidType t_ail -> t_aim :: *
checkValidType done t_ail -> t_aim :: *
tc_lhs_type:
  Int
  Expected a type
lk1 Int
lk2 Int Type constructor ‘Int’
tc_lhs_type:
  [Char]
  Expected a type
tc_lhs_type:
  Char
  Expected kind ‘*’
lk1 Char
lk2 Char Type constructor ‘Char’
tcCheckHsTypeAndGen Int -> [Char]
Before unification
utype_defer
  cobox_air
  Int
  t_aip
  a type equality Int ~ t_aip
  In the type signature for ‘minnen’: minnen :: Int -> [Char]
utype_defer
  cobox_ais
  [Char]
  t_aiq
  a type equality [Char] ~ t_aiq
  In the type signature for ‘minnen’: minnen :: Int -> [Char]
checkValidType t_aip -> t_aiq :: *
checkValidType done t_aip -> t_aiq :: *
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table
Before unification
utype_defer
  cobox_aiu
  Table
  t_ait
  a type equality Table ~ t_ait
  In the type signature for ‘locaties’: locaties :: Table
checkValidType t_ait :: OpenKind
checkValidType done t_ait :: OpenKind
lk1 Table
lk2 Table Type constructor ‘Table’
tcCheckHsTypeAndGen Table
Before unification
utype_defer
  cobox_aiw
  Table
  t_aiv
  a type equality Table ~ t_aiv
  In the type signature for ‘compilers’: compilers :: Table
checkValidType t_aiv :: OpenKind
checkValidType done t_aiv :: OpenKind
env2
  [(lengthColumn,
    Identifier[lengthColumn::t_aih -> t_aii, <NotTopLevel>]),
   (firstColumn,
    Identifier[firstColumn::t_ail -> t_aim, <NotTopLevel>]),
   (minnen, Identifier[minnen::t_aip -> t_aiq, <NotTopLevel>]),
   (locaties, Identifier[locaties::t_ait, <NotTopLevel>]),
   (compilers, Identifier[compilers::t_aiv, <NotTopLevel>])]
------------------------------------------------
Bindings for { [firstColumn]
Generalisation plan
  CheckGen firstColumn :: t_ail -> t_aim
                          []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  firstColumn
  t_ail -> t_aim
tcMatchesFun
  firstColumn
  t_ail -> t_aim
tcGen
env2 [(xs, Identifier[xs::t_ail, <NotTopLevel>])]
tcBody t_aim
Instantiating
  map with [a_aiA, b_aiB]
           []
utype_defer
  cobox_aiC
  [b_aiB]
  t_aim
  a type equality [b_aiB] ~ t_aim
  In the expression: map head xs
  In an equation for ‘firstColumn’: firstColumn xs = map head xs
tcPolyExprNC a_aiA -> b_aiB
tcGen
Instantiating
  head with [a_aiE]
            []
utype_defer
  cobox_aiF
  [a_aiE] -> a_aiE
  a_aiA -> b_aiB
  a type equality [a_aiE] -> a_aiE ~ a_aiA -> b_aiB
  In the first argument of ‘map’, namely ‘head’
  In the expression: map head xs
tcPolyExprNC [a_aiA]
tcGen
utype_defer
  cobox_aiG
  t_ail
  [a_aiA]
  a type equality t_ail ~ [a_aiA]
  In the second argument of ‘map’, namely ‘xs’
  In the expression: map head xs
addInlinePrags
  firstColumn
  []
csb2 [firstColumn]
} End of bindings for
  [firstColumn]
  NonRecursive
  firstColumn t_ail -> t_aim
env2
  [(firstColumn,
    Identifier[firstColumn::t_ail -> t_aim, <NotTopLevel>])]
------------------------------------------------
Bindings for { [lengthColumn]
Generalisation plan
  CheckGen lengthColumn :: t_aih -> t_aii
                           []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  lengthColumn
  t_aih -> t_aii
tcMatchesFun
  lengthColumn
  t_aih -> t_aii
tcGen
env2 [(n, Identifier[n::t_aih, <NotTopLevel>])]
tcBody t_aii
Instantiating
  map with [a_aiI, b_aiJ]
           []
utype_defer
  cobox_aiM
  [b_aiJ]
  t_aiK -> t_aiL
  a type equality [b_aiJ] ~ t_aiK -> t_aiL
  The function ‘map’ is applied to three arguments,
  but its type ‘(a0 -> b0) -> [a0] -> [b0]’ has only two
  In the expression: map length firstColumn n
  In an equation for ‘lengthColumn’:
      lengthColumn n = map length firstColumn n
utype_defer
  cobox_aiN
  t_aiL
  t_aii
  a type equality t_aiL ~ t_aii
  In the expression: map length firstColumn n
  In an equation for ‘lengthColumn’:
      lengthColumn n = map length firstColumn n
tcPolyExprNC a_aiI -> b_aiJ
tcGen
Instantiating
  length with [a_aiP]
              []
utype_defer
  cobox_aiQ
  [a_aiP] -> Int
  a_aiI -> b_aiJ
  a type equality [a_aiP] -> Int ~ a_aiI -> b_aiJ
  In the first argument of ‘map’, namely ‘length’
  In the expression: map length firstColumn n
tcPolyExprNC [a_aiI]
tcGen
utype_defer
  cobox_aiR
  t_ail -> t_aim
  [a_aiI]
  a type equality t_ail -> t_aim ~ [a_aiI]
  Probable cause: ‘firstColumn’ is applied to too few arguments
  In the second argument of ‘map’, namely ‘firstColumn’
  In the expression: map length firstColumn n
tcPolyExprNC t_aiK
tcGen
utype_defer
  cobox_aiS
  t_aih
  t_aiK
  a type equality t_aih ~ t_aiK
  In the third argument of ‘map’, namely ‘n’
  In the expression: map length firstColumn n
addInlinePrags
  lengthColumn
  []
csb2 [lengthColumn]
} End of bindings for
  [lengthColumn]
  NonRecursive
  lengthColumn t_aih -> t_aii
env2
  [(lengthColumn,
    Identifier[lengthColumn::t_aih -> t_aii, <NotTopLevel>])]
------------------------------------------------
Bindings for { [minnen]
Generalisation plan
  CheckGen minnen :: t_aip -> t_aiq
                     []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  minnen
  t_aip -> t_aiq
tcMatchesFun
  minnen
  t_aip -> t_aiq
tcGen
env2 [(n, Identifier[n::t_aip, <NotTopLevel>])]
tcBody t_aiq
Instantiating
  take with [a_aiV]
            []
utype_defer
  cobox_aiW
  [a_aiV]
  t_aiq
  a type equality [a_aiV] ~ t_aiq
  In the expression: take n (repeat '-')
  In an equation for ‘minnen’: minnen n = take n (repeat '-')
tcPolyExprNC Int
tcGen
utype_defer
  cobox_aiX
  t_aip
  Int
  a type equality t_aip ~ Int
  In the first argument of ‘take’, namely ‘n’
  In the expression: take n (repeat '-')
tcPolyExprNC [a_aiV]
tcGen
Instantiating
  repeat with [a_aiZ]
              []
utype_defer
  cobox_aj0
  [a_aiZ]
  [a_aiV]
  a type equality [a_aiZ] ~ [a_aiV]
  In the second argument of ‘take’, namely ‘(repeat '-')’
  In the expression: take n (repeat '-')
tcPolyExprNC a_aiZ
tcGen
utype_defer
  cobox_aj1
  Char
  a_aiZ
  a type equality Char ~ a_aiZ
  In the first argument of ‘repeat’, namely ‘'-'’
  In the second argument of ‘take’, namely ‘(repeat '-')’
  In the expression: take n (repeat '-')
addInlinePrags
  minnen
  []
csb2 [minnen]
} End of bindings for
  [minnen]
  NonRecursive
  minnen t_aip -> t_aiq
env2 [(minnen, Identifier[minnen::t_aip -> t_aiq, <NotTopLevel>])]
------------------------------------------------
Bindings for { [locaties]
Generalisation plan
  CheckGen locaties :: t_ait
                       []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  locaties
  t_ait
tcMatchesFun
  locaties
  t_ait
tcGen
tcBody t_ait
utype_defer
  cobox_aj4
  [t_aj3]
  t_ait
  a type equality [t_aj3] ~ t_ait
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj3
tcPolyExprNC t_aj3
tcGen
utype_defer
  cobox_aj6
  [t_aj5]
  t_aj3
  a type equality [t_aj5] ~ t_aj3
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj5
tcPolyExprNC t_aj5
tcGen
utype_defer
  cobox_aj7
  [Char]
  t_aj5
  a type equality [Char] ~ t_aj5
  In the expression: "Universiteit/bedrijf"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj5
tcPolyExprNC t_aj5
tcGen
utype_defer
  cobox_aj8
  [Char]
  t_aj5
  a type equality [Char] ~ t_aj5
  In the expression: "Land"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj5
tcPolyExprNC t_aj5
tcGen
utype_defer
  cobox_aj9
  [Char]
  t_aj5
  a type equality [Char] ~ t_aj5
  In the expression: "Stad"
  In the expression: ["Universiteit/bedrijf", "Land", "Stad"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj3
tcPolyExprNC t_aj3
tcGen
utype_defer
  cobox_ajb
  [t_aja]
  t_aj3
  a type equality [t_aja] ~ t_aj3
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aja
tcPolyExprNC t_aja
tcGen
utype_defer
  cobox_ajc
  [Char]
  t_aja
  a type equality [Char] ~ t_aja
  In the expression: "Universiteit van Utrecht"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aja
tcPolyExprNC t_aja
tcGen
utype_defer
  cobox_ajd
  [Char]
  t_aja
  a type equality [Char] ~ t_aja
  In the expression: "Nederland"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aja
tcPolyExprNC t_aja
tcGen
utype_defer
  cobox_aje
  [Char]
  t_aja
  a type equality [Char] ~ t_aja
  In the expression: "Utrecht"
  In the expression:
    ["Universiteit van Utrecht", "Nederland", "Utrecht"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj3
tcPolyExprNC t_aj3
tcGen
utype_defer
  cobox_ajg
  [t_ajf]
  t_aj3
  a type equality [t_ajf] ~ t_aj3
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajf
tcPolyExprNC t_ajf
tcGen
utype_defer
  cobox_ajh
  [Char]
  t_ajf
  a type equality [Char] ~ t_ajf
  In the expression: "University of York"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajf
tcPolyExprNC t_ajf
tcGen
utype_defer
  cobox_aji
  [Char]
  t_ajf
  a type equality [Char] ~ t_ajf
  In the expression: "Engeland"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajf
tcPolyExprNC t_ajf
tcGen
utype_defer
  cobox_ajj
  [Char]
  t_ajf
  a type equality [Char] ~ t_ajf
  In the expression: "York"
  In the expression: ["University of York", "Engeland", "York"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj3
tcPolyExprNC t_aj3
tcGen
utype_defer
  cobox_ajl
  [t_ajk]
  t_aj3
  a type equality [t_ajk] ~ t_aj3
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajk
tcPolyExprNC t_ajk
tcGen
utype_defer
  cobox_ajm
  [Char]
  t_ajk
  a type equality [Char] ~ t_ajk
  In the expression: "Microsoft Research"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajk
tcPolyExprNC t_ajk
tcGen
utype_defer
  cobox_ajn
  [Char]
  t_ajk
  a type equality [Char] ~ t_ajk
  In the expression: "Engeland"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajk
tcPolyExprNC t_ajk
tcGen
utype_defer
  cobox_ajo
  [Char]
  t_ajk
  a type equality [Char] ~ t_ajk
  In the expression: "Cambridge"
  In the expression: ["Microsoft Research", "Engeland", "Cambridge"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj3
tcPolyExprNC t_aj3
tcGen
utype_defer
  cobox_ajq
  [t_ajp]
  t_aj3
  a type equality [t_ajp] ~ t_aj3
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajp
tcPolyExprNC t_ajp
tcGen
utype_defer
  cobox_ajr
  [Char]
  t_ajp
  a type equality [Char] ~ t_ajp
  In the expression: "Galois Connections"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajp
tcPolyExprNC t_ajp
tcGen
utype_defer
  cobox_ajs
  [Char]
  t_ajp
  a type equality [Char] ~ t_ajp
  In the expression: "Verenigde Staten"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajp
tcPolyExprNC t_ajp
tcGen
utype_defer
  cobox_ajt
  [Char]
  t_ajp
  a type equality [Char] ~ t_ajp
  In the expression: "Beaverton"
  In the expression:
    ["Galois Connections", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj3
tcPolyExprNC t_aj3
tcGen
utype_defer
  cobox_ajv
  [t_aju]
  t_aj3
  a type equality [t_aju] ~ t_aj3
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aju
tcPolyExprNC t_aju
tcGen
utype_defer
  cobox_ajw
  [Char]
  t_aju
  a type equality [Char] ~ t_aju
  In the expression: "Oregon Graduate Institute"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aju
tcPolyExprNC t_aju
tcGen
utype_defer
  cobox_ajx
  [Char]
  t_aju
  a type equality [Char] ~ t_aju
  In the expression: "Verenigde Staten"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aju
tcPolyExprNC t_aju
tcGen
utype_defer
  cobox_ajy
  [Char]
  t_aju
  a type equality [Char] ~ t_aju
  In the expression: "Beaverton"
  In the expression:
    ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_aj3
tcPolyExprNC t_aj3
tcGen
utype_defer
  cobox_ajA
  [t_ajz]
  t_aj3
  a type equality [t_ajz] ~ t_aj3
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
  In an equation for ‘locaties’:
      locaties
        = [["Universiteit/bedrijf", "Land", "Stad"],
           ["Universiteit van Utrecht", "Nederland", "Utrecht"],
           ["University of York", "Engeland", "York"],
           ["Microsoft Research", "Engeland", "Cambridge"],
           ["Galois Connections", "Verenigde Staten", "Beaverton"],
           ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
           ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajz
tcPolyExprNC t_ajz
tcGen
utype_defer
  cobox_ajB
  [Char]
  t_ajz
  a type equality [Char] ~ t_ajz
  In the expression: "Chalmers University of Technology"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajz
tcPolyExprNC t_ajz
tcGen
utype_defer
  cobox_ajC
  [Char]
  t_ajz
  a type equality [Char] ~ t_ajz
  In the expression: "Zweden"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
tcPolyExpr t_ajz
tcPolyExprNC t_ajz
tcGen
utype_defer
  cobox_ajD
  [Char]
  t_ajz
  a type equality [Char] ~ t_ajz
  In the expression: "Goteborg"
  In the expression:
    ["Chalmers University of Technology", "Zweden", "Goteborg"]
  In the expression:
    [["Universiteit/bedrijf", "Land", "Stad"],
     ["Universiteit van Utrecht", "Nederland", "Utrecht"],
     ["University of York", "Engeland", "York"],
     ["Microsoft Research", "Engeland", "Cambridge"],
     ["Galois Connections", "Verenigde Staten", "Beaverton"],
     ["Oregon Graduate Institute", "Verenigde Staten", "Beaverton"],
     ["Chalmers University of Technology", "Zweden", "Goteborg"]]
addInlinePrags
  locaties
  []
csb2 [locaties]
} End of bindings for
  [locaties]
  NonRecursive
  locaties t_ait
env2 [(locaties, Identifier[locaties::t_ait, <NotTopLevel>])]
------------------------------------------------
Bindings for { [compilers]
Generalisation plan
  CheckGen compilers :: t_aiv
                        []
env2 []
tcMonoBinds
env2 []
tcRhs: fun bind
  compilers
  t_aiv
tcMatchesFun
  compilers
  t_aiv
tcGen
tcBody t_aiv
utype_defer
  cobox_ajG
  [t_ajF]
  t_aiv
  a type equality [t_ajF] ~ t_aiv
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ajI
  [t_ajH]
  t_ajF
  a type equality [t_ajH] ~ t_ajF
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajH
tcPolyExprNC t_ajH
tcGen
utype_defer
  cobox_ajJ
  [Char]
  t_ajH
  a type equality [Char] ~ t_ajH
  In the expression: "Compiler"
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajH
tcPolyExprNC t_ajH
tcGen
utype_defer
  cobox_ajK
  [Char]
  t_ajH
  a type equality [Char] ~ t_ajH
  In the expression: "Universiteit/bedrijf"
  In the expression: ["Compiler", "Universiteit/bedrijf"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ajM
  [t_ajL]
  t_ajF
  a type equality [t_ajL] ~ t_ajF
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajL
tcPolyExprNC t_ajL
tcGen
utype_defer
  cobox_ajN
  [Char]
  t_ajL
  a type equality [Char] ~ t_ajL
  In the expression: "Helium"
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajL
tcPolyExprNC t_ajL
tcGen
utype_defer
  cobox_ajO
  [Char]
  t_ajL
  a type equality [Char] ~ t_ajL
  In the expression: "Universiteit van Utrecht"
  In the expression: ["Helium", "Universiteit van Utrecht"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ajQ
  [t_ajP]
  t_ajF
  a type equality [t_ajP] ~ t_ajF
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajP
tcPolyExprNC t_ajP
tcGen
utype_defer
  cobox_ajR
  [Char]
  t_ajP
  a type equality [Char] ~ t_ajP
  In the expression: "NHC"
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajP
tcPolyExprNC t_ajP
tcGen
utype_defer
  cobox_ajS
  [Char]
  t_ajP
  a type equality [Char] ~ t_ajP
  In the expression: "University of York"
  In the expression: ["NHC", "University of York"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ajU
  [t_ajT]
  t_ajF
  a type equality [t_ajT] ~ t_ajF
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajT
tcPolyExprNC t_ajT
tcGen
utype_defer
  cobox_ajV
  [Char]
  t_ajT
  a type equality [Char] ~ t_ajT
  In the expression: "GHC"
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajT
tcPolyExprNC t_ajT
tcGen
utype_defer
  cobox_ajW
  [Char]
  t_ajT
  a type equality [Char] ~ t_ajT
  In the expression: "Microsoft Research"
  In the expression: ["GHC", "Microsoft Research"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ajY
  [t_ajX]
  t_ajF
  a type equality [t_ajX] ~ t_ajF
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajX
tcPolyExprNC t_ajX
tcGen
utype_defer
  cobox_ajZ
  [Char]
  t_ajX
  a type equality [Char] ~ t_ajX
  In the expression: "Hugs"
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajX
tcPolyExprNC t_ajX
tcGen
utype_defer
  cobox_ak0
  [Char]
  t_ajX
  a type equality [Char] ~ t_ajX
  In the expression: "Galois Connections"
  In the expression: ["Hugs", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ak2
  [t_ak1]
  t_ajF
  a type equality [t_ak1] ~ t_ajF
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ak1
tcPolyExprNC t_ak1
tcGen
utype_defer
  cobox_ak3
  [Char]
  t_ak1
  a type equality [Char] ~ t_ak1
  In the expression: "Hugs.NET"
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ak1
tcPolyExprNC t_ak1
tcGen
utype_defer
  cobox_ak4
  [Char]
  t_ak1
  a type equality [Char] ~ t_ak1
  In the expression: "Galois Connections"
  In the expression: ["Hugs.NET", "Galois Connections"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ak6
  [t_ak5]
  t_ajF
  a type equality [t_ak5] ~ t_ajF
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ak5
tcPolyExprNC t_ak5
tcGen
utype_defer
  cobox_ak7
  [Char]
  t_ak5
  a type equality [Char] ~ t_ak5
  In the expression: "O'Haskell"
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ak5
tcPolyExprNC t_ak5
tcGen
utype_defer
  cobox_ak8
  [Char]
  t_ak5
  a type equality [Char] ~ t_ak5
  In the expression: "Oregon Graduate Institute"
  In the expression: ["O'Haskell", "Oregon Graduate Institute"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_aka
  [t_ak9]
  t_ajF
  a type equality [t_ak9] ~ t_ajF
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ak9
tcPolyExprNC t_ak9
tcGen
utype_defer
  cobox_akb
  [Char]
  t_ak9
  a type equality [Char] ~ t_ak9
  In the expression: "O'Haskell"
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ak9
tcPolyExprNC t_ak9
tcGen
utype_defer
  cobox_akc
  [Char]
  t_ak9
  a type equality [Char] ~ t_ak9
  In the expression: "Chalmers University of Technology"
  In the expression:
    ["O'Haskell", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_ajF
tcPolyExprNC t_ajF
tcGen
utype_defer
  cobox_ake
  [t_akd]
  t_ajF
  a type equality [t_akd] ~ t_ajF
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
  In an equation for ‘compilers’:
      compilers
        = [["Compiler", "Universiteit/bedrijf"],
           ["Helium", "Universiteit van Utrecht"],
           ["NHC", "University of York"], ["GHC", "Microsoft Research"],
           ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
           ["O'Haskell", "Oregon Graduate Institute"],
           ["O'Haskell", "Chalmers University of Technology"],
           ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_akd
tcPolyExprNC t_akd
tcGen
utype_defer
  cobox_akf
  [Char]
  t_akd
  a type equality [Char] ~ t_akd
  In the expression: "HBC"
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
tcPolyExpr t_akd
tcPolyExprNC t_akd
tcGen
utype_defer
  cobox_akg
  [Char]
  t_akd
  a type equality [Char] ~ t_akd
  In the expression: "Chalmers University of Technology"
  In the expression: ["HBC", "Chalmers University of Technology"]
  In the expression:
    [["Compiler", "Universiteit/bedrijf"],
     ["Helium", "Universiteit van Utrecht"],
     ["NHC", "University of York"], ["GHC", "Microsoft Research"],
     ["Hugs", "Galois Connections"], ["Hugs.NET", "Galois Connections"],
     ["O'Haskell", "Oregon Graduate Institute"],
     ["O'Haskell", "Chalmers University of Technology"],
     ["HBC", "Chalmers University of Technology"]]
addInlinePrags
  compilers
  []
csb2 [compilers]
} End of bindings for
  [compilers]
  NonRecursive
  compilers t_aiv
env2 [(compilers, Identifier[compilers::t_aiv, <NotTopLevel>])]
Tc6
env2 []
Tc7
End of tcVectDecls: LIE:
  WC {wc_flat = [W] cobox_aij :: [[String]]
                                 ~ t_aih [" a type equality [[String]]
                                                            ~
                                                            t_aih " Practium1.hs:33:17-35] (CNonCanonical)
                [W] cobox_aik :: [Int] ~ t_aii [" a type equality [Int]
                                                                  ~
                                                                  t_aii " Practium1.hs:33:17-35] (CNonCanonical)
                [W] cobox_ain :: [[String]] ~ t_ail [" a type equality [[String]]
                                                                       ~
                                                                       t_ail " Practium1.hs:30:16-37] (CNonCanonical)
                [W] cobox_aio :: [String] ~ t_aim [" a type equality [String]
                                                                     ~
                                                                     t_aim " Practium1.hs:30:16-37] (CNonCanonical)
                [W] cobox_air :: Int ~ t_aip [" a type equality Int
                                                                ~
                                                                t_aip " Practium1.hs:27:11-23] (CNonCanonical)
                [W] cobox_ais :: [Char] ~ t_aiq [" a type equality [Char]
                                                                   ~
                                                                   t_aiq " Practium1.hs:27:11-23] (CNonCanonical)
                [W] cobox_aiu :: Table ~ t_ait [" a type equality Table
                                                                  ~
                                                                  t_ait " Practium1.hs:16:13-17] (CNonCanonical)
                [W] cobox_aiw :: Table ~ t_aiv [" a type equality Table
                                                                  ~
                                                                  t_aiv " Practium1.hs:3:14-18] (CNonCanonical)
                [W] cobox_aiC :: [b_aiB] ~ t_aim [" a type equality [b_aiB]
                                                                    ~
                                                                    t_aim " Practium1.hs:31:18-28] (CNonCanonical)
                [W] cobox_aiF :: ([a_aiE] -> a_aiE)
                                 ~ (a_aiA -> b_aiB) [" a type equality [a_aiE] -> a_aiE
                                                                       ~
                                                                       a_aiA
                                                                       -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
                [W] cobox_aiG :: t_ail ~ [a_aiA] [" a type equality t_ail
                                                                    ~
                                                                    [a_aiA] " Practium1.hs:31:27-28] (CNonCanonical)
                [W] cobox_aiM :: [b_aiJ]
                                 ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                       ~
                                                                       t_aiK
                                                                       -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
                [W] cobox_aiN :: t_aiL ~ t_aii [" a type equality t_aiL
                                                                  ~
                                                                  t_aii " Practium1.hs:34:18-41] (CNonCanonical)
                [W] cobox_aiQ :: ([a_aiP] -> Int)
                                 ~ (a_aiI -> b_aiJ) [" a type equality [a_aiP] -> Int
                                                                       ~
                                                                       a_aiI
                                                                       -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
                [W] cobox_aiR :: (t_ail -> t_aim)
                                 ~ [a_aiI] [" a type equality t_ail -> t_aim
                                                              ~
                                                              [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                [W] cobox_aiS :: t_aih ~ t_aiK [" a type equality t_aih
                                                                  ~
                                                                  t_aiK " Practium1.hs:34:41] (CNonCanonical)
                [W] cobox_aiW :: [a_aiV] ~ t_aiq [" a type equality [a_aiV]
                                                                    ~
                                                                    t_aiq " Practium1.hs:28:12-30] (CNonCanonical)
                [W] cobox_aiX :: t_aip ~ Int [" a type equality t_aip
                                                                ~
                                                                Int " Practium1.hs:28:17] (CNonCanonical)
                [W] cobox_aj0 :: [a_aiZ] ~ [a_aiV] [" a type equality [a_aiZ]
                                                                      ~
                                                                      [a_aiV] " Practium1.hs:28:20-29] (CNonCanonical)
                [W] cobox_aj1 :: Char ~ a_aiZ [" a type equality Char
                                                                 ~
                                                                 a_aiZ " Practium1.hs:28:27-29] (CNonCanonical)
                [W] cobox_aj4 :: [t_aj3] ~ t_ait [" a type equality [t_aj3]
                                                                    ~
                                                                    t_ait " Practium1.hs:(18,3)-(25,3)] (CNonCanonical)
                [W] cobox_aj6 :: [t_aj5] ~ t_aj3 [" a type equality [t_aj5]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:18:5-44] (CNonCanonical)
                [W] cobox_aj7 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                   ~
                                                                   t_aj5 " Practium1.hs:18:6-27] (CNonCanonical)
                [W] cobox_aj8 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                   ~
                                                                   t_aj5 " Practium1.hs:18:30-35] (CNonCanonical)
                [W] cobox_aj9 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                   ~
                                                                   t_aj5 " Practium1.hs:18:38-43] (CNonCanonical)
                [W] cobox_ajb :: [t_aja] ~ t_aj3 [" a type equality [t_aja]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:19:5-56] (CNonCanonical)
                [W] cobox_ajc :: [Char] ~ t_aja [" a type equality [Char]
                                                                   ~
                                                                   t_aja " Practium1.hs:19:6-31] (CNonCanonical)
                [W] cobox_ajd :: [Char] ~ t_aja [" a type equality [Char]
                                                                   ~
                                                                   t_aja " Practium1.hs:19:34-44] (CNonCanonical)
                [W] cobox_aje :: [Char] ~ t_aja [" a type equality [Char]
                                                                   ~
                                                                   t_aja " Practium1.hs:19:47-55] (CNonCanonical)
                [W] cobox_ajg :: [t_ajf] ~ t_aj3 [" a type equality [t_ajf]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:20:5-46] (CNonCanonical)
                [W] cobox_ajh :: [Char] ~ t_ajf [" a type equality [Char]
                                                                   ~
                                                                   t_ajf " Practium1.hs:20:6-25] (CNonCanonical)
                [W] cobox_aji :: [Char] ~ t_ajf [" a type equality [Char]
                                                                   ~
                                                                   t_ajf " Practium1.hs:20:28-37] (CNonCanonical)
                [W] cobox_ajj :: [Char] ~ t_ajf [" a type equality [Char]
                                                                   ~
                                                                   t_ajf " Practium1.hs:20:40-45] (CNonCanonical)
                [W] cobox_ajl :: [t_ajk] ~ t_aj3 [" a type equality [t_ajk]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:21:5-51] (CNonCanonical)
                [W] cobox_ajm :: [Char] ~ t_ajk [" a type equality [Char]
                                                                   ~
                                                                   t_ajk " Practium1.hs:21:6-25] (CNonCanonical)
                [W] cobox_ajn :: [Char] ~ t_ajk [" a type equality [Char]
                                                                   ~
                                                                   t_ajk " Practium1.hs:21:28-37] (CNonCanonical)
                [W] cobox_ajo :: [Char] ~ t_ajk [" a type equality [Char]
                                                                   ~
                                                                   t_ajk " Practium1.hs:21:40-50] (CNonCanonical)
                [W] cobox_ajq :: [t_ajp] ~ t_aj3 [" a type equality [t_ajp]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:22:5-59] (CNonCanonical)
                [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Practium1.hs:22:6-25] (CNonCanonical)
                [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Practium1.hs:22:28-45] (CNonCanonical)
                [W] cobox_ajt :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Practium1.hs:22:48-58] (CNonCanonical)
                [W] cobox_ajv :: [t_aju] ~ t_aj3 [" a type equality [t_aju]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:23:5-66] (CNonCanonical)
                [W] cobox_ajw :: [Char] ~ t_aju [" a type equality [Char]
                                                                   ~
                                                                   t_aju " Practium1.hs:23:6-32] (CNonCanonical)
                [W] cobox_ajx :: [Char] ~ t_aju [" a type equality [Char]
                                                                   ~
                                                                   t_aju " Practium1.hs:23:35-52] (CNonCanonical)
                [W] cobox_ajy :: [Char] ~ t_aju [" a type equality [Char]
                                                                   ~
                                                                   t_aju " Practium1.hs:23:55-65] (CNonCanonical)
                [W] cobox_ajA :: [t_ajz] ~ t_aj3 [" a type equality [t_ajz]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:24:5-63] (CNonCanonical)
                [W] cobox_ajB :: [Char] ~ t_ajz [" a type equality [Char]
                                                                   ~
                                                                   t_ajz " Practium1.hs:24:6-40] (CNonCanonical)
                [W] cobox_ajC :: [Char] ~ t_ajz [" a type equality [Char]
                                                                   ~
                                                                   t_ajz " Practium1.hs:24:43-50] (CNonCanonical)
                [W] cobox_ajD :: [Char] ~ t_ajz [" a type equality [Char]
                                                                   ~
                                                                   t_ajz " Practium1.hs:24:53-62] (CNonCanonical)
                [W] cobox_ajG :: [t_ajF] ~ t_aiv [" a type equality [t_ajF]
                                                                    ~
                                                                    t_aiv " Practium1.hs:(5,3)-(14,3)] (CNonCanonical)
                [W] cobox_ajI :: [t_ajH] ~ t_ajF [" a type equality [t_ajH]
                                                                    ~
                                                                    t_ajF " Practium1.hs:5:5-40] (CNonCanonical)
                [W] cobox_ajJ :: [Char] ~ t_ajH [" a type equality [Char]
                                                                   ~
                                                                   t_ajH " Practium1.hs:5:6-15] (CNonCanonical)
                [W] cobox_ajK :: [Char] ~ t_ajH [" a type equality [Char]
                                                                   ~
                                                                   t_ajH " Practium1.hs:5:18-39] (CNonCanonical)
                [W] cobox_ajM :: [t_ajL] ~ t_ajF [" a type equality [t_ajL]
                                                                    ~
                                                                    t_ajF " Practium1.hs:6:5-42] (CNonCanonical)
                [W] cobox_ajN :: [Char] ~ t_ajL [" a type equality [Char]
                                                                   ~
                                                                   t_ajL " Practium1.hs:6:6-13] (CNonCanonical)
                [W] cobox_ajO :: [Char] ~ t_ajL [" a type equality [Char]
                                                                   ~
                                                                   t_ajL " Practium1.hs:6:16-41] (CNonCanonical)
                [W] cobox_ajQ :: [t_ajP] ~ t_ajF [" a type equality [t_ajP]
                                                                    ~
                                                                    t_ajF " Practium1.hs:7:5-33] (CNonCanonical)
                [W] cobox_ajR :: [Char] ~ t_ajP [" a type equality [Char]
                                                                   ~
                                                                   t_ajP " Practium1.hs:7:6-10] (CNonCanonical)
                [W] cobox_ajS :: [Char] ~ t_ajP [" a type equality [Char]
                                                                   ~
                                                                   t_ajP " Practium1.hs:7:13-32] (CNonCanonical)
                [W] cobox_ajU :: [t_ajT] ~ t_ajF [" a type equality [t_ajT]
                                                                    ~
                                                                    t_ajF " Practium1.hs:8:5-33] (CNonCanonical)
                [W] cobox_ajV :: [Char] ~ t_ajT [" a type equality [Char]
                                                                   ~
                                                                   t_ajT " Practium1.hs:8:6-10] (CNonCanonical)
                [W] cobox_ajW :: [Char] ~ t_ajT [" a type equality [Char]
                                                                   ~
                                                                   t_ajT " Practium1.hs:8:13-32] (CNonCanonical)
                [W] cobox_ajY :: [t_ajX] ~ t_ajF [" a type equality [t_ajX]
                                                                    ~
                                                                    t_ajF " Practium1.hs:9:5-34] (CNonCanonical)
                [W] cobox_ajZ :: [Char] ~ t_ajX [" a type equality [Char]
                                                                   ~
                                                                   t_ajX " Practium1.hs:9:6-11] (CNonCanonical)
                [W] cobox_ak0 :: [Char] ~ t_ajX [" a type equality [Char]
                                                                   ~
                                                                   t_ajX " Practium1.hs:9:14-33] (CNonCanonical)
                [W] cobox_ak2 :: [t_ak1] ~ t_ajF [" a type equality [t_ak1]
                                                                    ~
                                                                    t_ajF " Practium1.hs:10:5-38] (CNonCanonical)
                [W] cobox_ak3 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                   ~
                                                                   t_ak1 " Practium1.hs:10:6-15] (CNonCanonical)
                [W] cobox_ak4 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                   ~
                                                                   t_ak1 " Practium1.hs:10:18-37] (CNonCanonical)
                [W] cobox_ak6 :: [t_ak5] ~ t_ajF [" a type equality [t_ak5]
                                                                    ~
                                                                    t_ajF " Practium1.hs:11:5-46] (CNonCanonical)
                [W] cobox_ak7 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                   ~
                                                                   t_ak5 " Practium1.hs:11:6-16] (CNonCanonical)
                [W] cobox_ak8 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                   ~
                                                                   t_ak5 " Practium1.hs:11:19-45] (CNonCanonical)
                [W] cobox_aka :: [t_ak9] ~ t_ajF [" a type equality [t_ak9]
                                                                    ~
                                                                    t_ajF " Practium1.hs:12:5-54] (CNonCanonical)
                [W] cobox_akb :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                   ~
                                                                   t_ak9 " Practium1.hs:12:6-16] (CNonCanonical)
                [W] cobox_akc :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                   ~
                                                                   t_ak9 " Practium1.hs:12:19-53] (CNonCanonical)
                [W] cobox_ake :: [t_akd] ~ t_ajF [" a type equality [t_akd]
                                                                    ~
                                                                    t_ajF " Practium1.hs:13:5-48] (CNonCanonical)
                [W] cobox_akf :: [Char] ~ t_akd [" a type equality [Char]
                                                                   ~
                                                                   t_akd " Practium1.hs:13:6-10] (CNonCanonical)
                [W] cobox_akg :: [Char] ~ t_akd [" a type equality [Char]
                                                                   ~
                                                                   t_akd " Practium1.hs:13:13-47] (CNonCanonical)}
Tc7a
checkMain not Main Practium1
Tc8
simplifyTop {
  wanted =  WC {wc_flat = [W] cobox_aij :: [[String]]
                                           ~ t_aih [" a type equality [[String]]
                                                                      ~
                                                                      t_aih " Practium1.hs:33:17-35] (CNonCanonical)
                          [W] cobox_aik :: [Int] ~ t_aii [" a type equality [Int]
                                                                            ~
                                                                            t_aii " Practium1.hs:33:17-35] (CNonCanonical)
                          [W] cobox_ain :: [[String]] ~ t_ail [" a type equality [[String]]
                                                                                 ~
                                                                                 t_ail " Practium1.hs:30:16-37] (CNonCanonical)
                          [W] cobox_aio :: [String] ~ t_aim [" a type equality [String]
                                                                               ~
                                                                               t_aim " Practium1.hs:30:16-37] (CNonCanonical)
                          [W] cobox_air :: Int ~ t_aip [" a type equality Int
                                                                          ~
                                                                          t_aip " Practium1.hs:27:11-23] (CNonCanonical)
                          [W] cobox_ais :: [Char] ~ t_aiq [" a type equality [Char]
                                                                             ~
                                                                             t_aiq " Practium1.hs:27:11-23] (CNonCanonical)
                          [W] cobox_aiu :: Table ~ t_ait [" a type equality Table
                                                                            ~
                                                                            t_ait " Practium1.hs:16:13-17] (CNonCanonical)
                          [W] cobox_aiw :: Table ~ t_aiv [" a type equality Table
                                                                            ~
                                                                            t_aiv " Practium1.hs:3:14-18] (CNonCanonical)
                          [W] cobox_aiC :: [b_aiB] ~ t_aim [" a type equality [b_aiB]
                                                                              ~
                                                                              t_aim " Practium1.hs:31:18-28] (CNonCanonical)
                          [W] cobox_aiF :: ([a_aiE] -> a_aiE)
                                           ~ (a_aiA -> b_aiB) [" a type equality [a_aiE] -> a_aiE
                                                                                 ~
                                                                                 a_aiA
                                                                                 -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
                          [W] cobox_aiG :: t_ail ~ [a_aiA] [" a type equality t_ail
                                                                              ~
                                                                              [a_aiA] " Practium1.hs:31:27-28] (CNonCanonical)
                          [W] cobox_aiM :: [b_aiJ]
                                           ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                                 ~
                                                                                 t_aiK
                                                                                 -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
                          [W] cobox_aiN :: t_aiL ~ t_aii [" a type equality t_aiL
                                                                            ~
                                                                            t_aii " Practium1.hs:34:18-41] (CNonCanonical)
                          [W] cobox_aiQ :: ([a_aiP] -> Int)
                                           ~ (a_aiI -> b_aiJ) [" a type equality [a_aiP] -> Int
                                                                                 ~
                                                                                 a_aiI
                                                                                 -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
                          [W] cobox_aiR :: (t_ail -> t_aim)
                                           ~ [a_aiI] [" a type equality t_ail -> t_aim
                                                                        ~
                                                                        [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                          [W] cobox_aiS :: t_aih ~ t_aiK [" a type equality t_aih
                                                                            ~
                                                                            t_aiK " Practium1.hs:34:41] (CNonCanonical)
                          [W] cobox_aiW :: [a_aiV] ~ t_aiq [" a type equality [a_aiV]
                                                                              ~
                                                                              t_aiq " Practium1.hs:28:12-30] (CNonCanonical)
                          [W] cobox_aiX :: t_aip ~ Int [" a type equality t_aip
                                                                          ~
                                                                          Int " Practium1.hs:28:17] (CNonCanonical)
                          [W] cobox_aj0 :: [a_aiZ] ~ [a_aiV] [" a type equality [a_aiZ]
                                                                                ~
                                                                                [a_aiV] " Practium1.hs:28:20-29] (CNonCanonical)
                          [W] cobox_aj1 :: Char ~ a_aiZ [" a type equality Char
                                                                           ~
                                                                           a_aiZ " Practium1.hs:28:27-29] (CNonCanonical)
                          [W] cobox_aj4 :: [t_aj3] ~ t_ait [" a type equality [t_aj3]
                                                                              ~
                                                                              t_ait " Practium1.hs:(18,3)-(25,3)] (CNonCanonical)
                          [W] cobox_aj6 :: [t_aj5] ~ t_aj3 [" a type equality [t_aj5]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:18:5-44] (CNonCanonical)
                          [W] cobox_aj7 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                             ~
                                                                             t_aj5 " Practium1.hs:18:6-27] (CNonCanonical)
                          [W] cobox_aj8 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                             ~
                                                                             t_aj5 " Practium1.hs:18:30-35] (CNonCanonical)
                          [W] cobox_aj9 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                             ~
                                                                             t_aj5 " Practium1.hs:18:38-43] (CNonCanonical)
                          [W] cobox_ajb :: [t_aja] ~ t_aj3 [" a type equality [t_aja]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:19:5-56] (CNonCanonical)
                          [W] cobox_ajc :: [Char] ~ t_aja [" a type equality [Char]
                                                                             ~
                                                                             t_aja " Practium1.hs:19:6-31] (CNonCanonical)
                          [W] cobox_ajd :: [Char] ~ t_aja [" a type equality [Char]
                                                                             ~
                                                                             t_aja " Practium1.hs:19:34-44] (CNonCanonical)
                          [W] cobox_aje :: [Char] ~ t_aja [" a type equality [Char]
                                                                             ~
                                                                             t_aja " Practium1.hs:19:47-55] (CNonCanonical)
                          [W] cobox_ajg :: [t_ajf] ~ t_aj3 [" a type equality [t_ajf]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:20:5-46] (CNonCanonical)
                          [W] cobox_ajh :: [Char] ~ t_ajf [" a type equality [Char]
                                                                             ~
                                                                             t_ajf " Practium1.hs:20:6-25] (CNonCanonical)
                          [W] cobox_aji :: [Char] ~ t_ajf [" a type equality [Char]
                                                                             ~
                                                                             t_ajf " Practium1.hs:20:28-37] (CNonCanonical)
                          [W] cobox_ajj :: [Char] ~ t_ajf [" a type equality [Char]
                                                                             ~
                                                                             t_ajf " Practium1.hs:20:40-45] (CNonCanonical)
                          [W] cobox_ajl :: [t_ajk] ~ t_aj3 [" a type equality [t_ajk]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:21:5-51] (CNonCanonical)
                          [W] cobox_ajm :: [Char] ~ t_ajk [" a type equality [Char]
                                                                             ~
                                                                             t_ajk " Practium1.hs:21:6-25] (CNonCanonical)
                          [W] cobox_ajn :: [Char] ~ t_ajk [" a type equality [Char]
                                                                             ~
                                                                             t_ajk " Practium1.hs:21:28-37] (CNonCanonical)
                          [W] cobox_ajo :: [Char] ~ t_ajk [" a type equality [Char]
                                                                             ~
                                                                             t_ajk " Practium1.hs:21:40-50] (CNonCanonical)
                          [W] cobox_ajq :: [t_ajp] ~ t_aj3 [" a type equality [t_ajp]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:22:5-59] (CNonCanonical)
                          [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Practium1.hs:22:6-25] (CNonCanonical)
                          [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Practium1.hs:22:28-45] (CNonCanonical)
                          [W] cobox_ajt :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Practium1.hs:22:48-58] (CNonCanonical)
                          [W] cobox_ajv :: [t_aju] ~ t_aj3 [" a type equality [t_aju]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:23:5-66] (CNonCanonical)
                          [W] cobox_ajw :: [Char] ~ t_aju [" a type equality [Char]
                                                                             ~
                                                                             t_aju " Practium1.hs:23:6-32] (CNonCanonical)
                          [W] cobox_ajx :: [Char] ~ t_aju [" a type equality [Char]
                                                                             ~
                                                                             t_aju " Practium1.hs:23:35-52] (CNonCanonical)
                          [W] cobox_ajy :: [Char] ~ t_aju [" a type equality [Char]
                                                                             ~
                                                                             t_aju " Practium1.hs:23:55-65] (CNonCanonical)
                          [W] cobox_ajA :: [t_ajz] ~ t_aj3 [" a type equality [t_ajz]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:24:5-63] (CNonCanonical)
                          [W] cobox_ajB :: [Char] ~ t_ajz [" a type equality [Char]
                                                                             ~
                                                                             t_ajz " Practium1.hs:24:6-40] (CNonCanonical)
                          [W] cobox_ajC :: [Char] ~ t_ajz [" a type equality [Char]
                                                                             ~
                                                                             t_ajz " Practium1.hs:24:43-50] (CNonCanonical)
                          [W] cobox_ajD :: [Char] ~ t_ajz [" a type equality [Char]
                                                                             ~
                                                                             t_ajz " Practium1.hs:24:53-62] (CNonCanonical)
                          [W] cobox_ajG :: [t_ajF] ~ t_aiv [" a type equality [t_ajF]
                                                                              ~
                                                                              t_aiv " Practium1.hs:(5,3)-(14,3)] (CNonCanonical)
                          [W] cobox_ajI :: [t_ajH] ~ t_ajF [" a type equality [t_ajH]
                                                                              ~
                                                                              t_ajF " Practium1.hs:5:5-40] (CNonCanonical)
                          [W] cobox_ajJ :: [Char] ~ t_ajH [" a type equality [Char]
                                                                             ~
                                                                             t_ajH " Practium1.hs:5:6-15] (CNonCanonical)
                          [W] cobox_ajK :: [Char] ~ t_ajH [" a type equality [Char]
                                                                             ~
                                                                             t_ajH " Practium1.hs:5:18-39] (CNonCanonical)
                          [W] cobox_ajM :: [t_ajL] ~ t_ajF [" a type equality [t_ajL]
                                                                              ~
                                                                              t_ajF " Practium1.hs:6:5-42] (CNonCanonical)
                          [W] cobox_ajN :: [Char] ~ t_ajL [" a type equality [Char]
                                                                             ~
                                                                             t_ajL " Practium1.hs:6:6-13] (CNonCanonical)
                          [W] cobox_ajO :: [Char] ~ t_ajL [" a type equality [Char]
                                                                             ~
                                                                             t_ajL " Practium1.hs:6:16-41] (CNonCanonical)
                          [W] cobox_ajQ :: [t_ajP] ~ t_ajF [" a type equality [t_ajP]
                                                                              ~
                                                                              t_ajF " Practium1.hs:7:5-33] (CNonCanonical)
                          [W] cobox_ajR :: [Char] ~ t_ajP [" a type equality [Char]
                                                                             ~
                                                                             t_ajP " Practium1.hs:7:6-10] (CNonCanonical)
                          [W] cobox_ajS :: [Char] ~ t_ajP [" a type equality [Char]
                                                                             ~
                                                                             t_ajP " Practium1.hs:7:13-32] (CNonCanonical)
                          [W] cobox_ajU :: [t_ajT] ~ t_ajF [" a type equality [t_ajT]
                                                                              ~
                                                                              t_ajF " Practium1.hs:8:5-33] (CNonCanonical)
                          [W] cobox_ajV :: [Char] ~ t_ajT [" a type equality [Char]
                                                                             ~
                                                                             t_ajT " Practium1.hs:8:6-10] (CNonCanonical)
                          [W] cobox_ajW :: [Char] ~ t_ajT [" a type equality [Char]
                                                                             ~
                                                                             t_ajT " Practium1.hs:8:13-32] (CNonCanonical)
                          [W] cobox_ajY :: [t_ajX] ~ t_ajF [" a type equality [t_ajX]
                                                                              ~
                                                                              t_ajF " Practium1.hs:9:5-34] (CNonCanonical)
                          [W] cobox_ajZ :: [Char] ~ t_ajX [" a type equality [Char]
                                                                             ~
                                                                             t_ajX " Practium1.hs:9:6-11] (CNonCanonical)
                          [W] cobox_ak0 :: [Char] ~ t_ajX [" a type equality [Char]
                                                                             ~
                                                                             t_ajX " Practium1.hs:9:14-33] (CNonCanonical)
                          [W] cobox_ak2 :: [t_ak1] ~ t_ajF [" a type equality [t_ak1]
                                                                              ~
                                                                              t_ajF " Practium1.hs:10:5-38] (CNonCanonical)
                          [W] cobox_ak3 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                             ~
                                                                             t_ak1 " Practium1.hs:10:6-15] (CNonCanonical)
                          [W] cobox_ak4 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                             ~
                                                                             t_ak1 " Practium1.hs:10:18-37] (CNonCanonical)
                          [W] cobox_ak6 :: [t_ak5] ~ t_ajF [" a type equality [t_ak5]
                                                                              ~
                                                                              t_ajF " Practium1.hs:11:5-46] (CNonCanonical)
                          [W] cobox_ak7 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                             ~
                                                                             t_ak5 " Practium1.hs:11:6-16] (CNonCanonical)
                          [W] cobox_ak8 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                             ~
                                                                             t_ak5 " Practium1.hs:11:19-45] (CNonCanonical)
                          [W] cobox_aka :: [t_ak9] ~ t_ajF [" a type equality [t_ak9]
                                                                              ~
                                                                              t_ajF " Practium1.hs:12:5-54] (CNonCanonical)
                          [W] cobox_akb :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                             ~
                                                                             t_ak9 " Practium1.hs:12:6-16] (CNonCanonical)
                          [W] cobox_akc :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                             ~
                                                                             t_ak9 " Practium1.hs:12:19-53] (CNonCanonical)
                          [W] cobox_ake :: [t_akd] ~ t_ajF [" a type equality [t_akd]
                                                                              ~
                                                                              t_ajF " Practium1.hs:13:5-48] (CNonCanonical)
                          [W] cobox_akf :: [Char] ~ t_akd [" a type equality [Char]
                                                                             ~
                                                                             t_akd " Practium1.hs:13:6-10] (CNonCanonical)
                          [W] cobox_akg :: [Char] ~ t_akd [" a type equality [Char]
                                                                             ~
                                                                             t_akd " Practium1.hs:13:13-47] (CNonCanonical)}
solveWantedsTcMWithEvBinds
  wanted= WC {wc_flat = [W] cobox_aij :: [[String]]
                                         ~ t_aih [" a type equality [[String]]
                                                                    ~
                                                                    t_aih " Practium1.hs:33:17-35] (CNonCanonical)
                        [W] cobox_aik :: [Int] ~ t_aii [" a type equality [Int]
                                                                          ~
                                                                          t_aii " Practium1.hs:33:17-35] (CNonCanonical)
                        [W] cobox_ain :: [[String]] ~ t_ail [" a type equality [[String]]
                                                                               ~
                                                                               t_ail " Practium1.hs:30:16-37] (CNonCanonical)
                        [W] cobox_aio :: [String] ~ t_aim [" a type equality [String]
                                                                             ~
                                                                             t_aim " Practium1.hs:30:16-37] (CNonCanonical)
                        [W] cobox_air :: Int ~ t_aip [" a type equality Int
                                                                        ~
                                                                        t_aip " Practium1.hs:27:11-23] (CNonCanonical)
                        [W] cobox_ais :: [Char] ~ t_aiq [" a type equality [Char]
                                                                           ~
                                                                           t_aiq " Practium1.hs:27:11-23] (CNonCanonical)
                        [W] cobox_aiu :: Table ~ t_ait [" a type equality Table
                                                                          ~
                                                                          t_ait " Practium1.hs:16:13-17] (CNonCanonical)
                        [W] cobox_aiw :: Table ~ t_aiv [" a type equality Table
                                                                          ~
                                                                          t_aiv " Practium1.hs:3:14-18] (CNonCanonical)
                        [W] cobox_aiC :: [b_aiB] ~ t_aim [" a type equality [b_aiB]
                                                                            ~
                                                                            t_aim " Practium1.hs:31:18-28] (CNonCanonical)
                        [W] cobox_aiF :: ([a_aiE] -> a_aiE)
                                         ~ (a_aiA -> b_aiB) [" a type equality [a_aiE] -> a_aiE
                                                                               ~
                                                                               a_aiA
                                                                               -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
                        [W] cobox_aiG :: t_ail ~ [a_aiA] [" a type equality t_ail
                                                                            ~
                                                                            [a_aiA] " Practium1.hs:31:27-28] (CNonCanonical)
                        [W] cobox_aiM :: [b_aiJ]
                                         ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                               ~
                                                                               t_aiK
                                                                               -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
                        [W] cobox_aiN :: t_aiL ~ t_aii [" a type equality t_aiL
                                                                          ~
                                                                          t_aii " Practium1.hs:34:18-41] (CNonCanonical)
                        [W] cobox_aiQ :: ([a_aiP] -> Int)
                                         ~ (a_aiI -> b_aiJ) [" a type equality [a_aiP] -> Int
                                                                               ~
                                                                               a_aiI
                                                                               -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
                        [W] cobox_aiR :: (t_ail -> t_aim)
                                         ~ [a_aiI] [" a type equality t_ail -> t_aim
                                                                      ~
                                                                      [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                        [W] cobox_aiS :: t_aih ~ t_aiK [" a type equality t_aih
                                                                          ~
                                                                          t_aiK " Practium1.hs:34:41] (CNonCanonical)
                        [W] cobox_aiW :: [a_aiV] ~ t_aiq [" a type equality [a_aiV]
                                                                            ~
                                                                            t_aiq " Practium1.hs:28:12-30] (CNonCanonical)
                        [W] cobox_aiX :: t_aip ~ Int [" a type equality t_aip
                                                                        ~
                                                                        Int " Practium1.hs:28:17] (CNonCanonical)
                        [W] cobox_aj0 :: [a_aiZ] ~ [a_aiV] [" a type equality [a_aiZ]
                                                                              ~
                                                                              [a_aiV] " Practium1.hs:28:20-29] (CNonCanonical)
                        [W] cobox_aj1 :: Char ~ a_aiZ [" a type equality Char
                                                                         ~
                                                                         a_aiZ " Practium1.hs:28:27-29] (CNonCanonical)
                        [W] cobox_aj4 :: [t_aj3] ~ t_ait [" a type equality [t_aj3]
                                                                            ~
                                                                            t_ait " Practium1.hs:(18,3)-(25,3)] (CNonCanonical)
                        [W] cobox_aj6 :: [t_aj5] ~ t_aj3 [" a type equality [t_aj5]
                                                                            ~
                                                                            t_aj3 " Practium1.hs:18:5-44] (CNonCanonical)
                        [W] cobox_aj7 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                           ~
                                                                           t_aj5 " Practium1.hs:18:6-27] (CNonCanonical)
                        [W] cobox_aj8 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                           ~
                                                                           t_aj5 " Practium1.hs:18:30-35] (CNonCanonical)
                        [W] cobox_aj9 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                           ~
                                                                           t_aj5 " Practium1.hs:18:38-43] (CNonCanonical)
                        [W] cobox_ajb :: [t_aja] ~ t_aj3 [" a type equality [t_aja]
                                                                            ~
                                                                            t_aj3 " Practium1.hs:19:5-56] (CNonCanonical)
                        [W] cobox_ajc :: [Char] ~ t_aja [" a type equality [Char]
                                                                           ~
                                                                           t_aja " Practium1.hs:19:6-31] (CNonCanonical)
                        [W] cobox_ajd :: [Char] ~ t_aja [" a type equality [Char]
                                                                           ~
                                                                           t_aja " Practium1.hs:19:34-44] (CNonCanonical)
                        [W] cobox_aje :: [Char] ~ t_aja [" a type equality [Char]
                                                                           ~
                                                                           t_aja " Practium1.hs:19:47-55] (CNonCanonical)
                        [W] cobox_ajg :: [t_ajf] ~ t_aj3 [" a type equality [t_ajf]
                                                                            ~
                                                                            t_aj3 " Practium1.hs:20:5-46] (CNonCanonical)
                        [W] cobox_ajh :: [Char] ~ t_ajf [" a type equality [Char]
                                                                           ~
                                                                           t_ajf " Practium1.hs:20:6-25] (CNonCanonical)
                        [W] cobox_aji :: [Char] ~ t_ajf [" a type equality [Char]
                                                                           ~
                                                                           t_ajf " Practium1.hs:20:28-37] (CNonCanonical)
                        [W] cobox_ajj :: [Char] ~ t_ajf [" a type equality [Char]
                                                                           ~
                                                                           t_ajf " Practium1.hs:20:40-45] (CNonCanonical)
                        [W] cobox_ajl :: [t_ajk] ~ t_aj3 [" a type equality [t_ajk]
                                                                            ~
                                                                            t_aj3 " Practium1.hs:21:5-51] (CNonCanonical)
                        [W] cobox_ajm :: [Char] ~ t_ajk [" a type equality [Char]
                                                                           ~
                                                                           t_ajk " Practium1.hs:21:6-25] (CNonCanonical)
                        [W] cobox_ajn :: [Char] ~ t_ajk [" a type equality [Char]
                                                                           ~
                                                                           t_ajk " Practium1.hs:21:28-37] (CNonCanonical)
                        [W] cobox_ajo :: [Char] ~ t_ajk [" a type equality [Char]
                                                                           ~
                                                                           t_ajk " Practium1.hs:21:40-50] (CNonCanonical)
                        [W] cobox_ajq :: [t_ajp] ~ t_aj3 [" a type equality [t_ajp]
                                                                            ~
                                                                            t_aj3 " Practium1.hs:22:5-59] (CNonCanonical)
                        [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                           ~
                                                                           t_ajp " Practium1.hs:22:6-25] (CNonCanonical)
                        [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                           ~
                                                                           t_ajp " Practium1.hs:22:28-45] (CNonCanonical)
                        [W] cobox_ajt :: [Char] ~ t_ajp [" a type equality [Char]
                                                                           ~
                                                                           t_ajp " Practium1.hs:22:48-58] (CNonCanonical)
                        [W] cobox_ajv :: [t_aju] ~ t_aj3 [" a type equality [t_aju]
                                                                            ~
                                                                            t_aj3 " Practium1.hs:23:5-66] (CNonCanonical)
                        [W] cobox_ajw :: [Char] ~ t_aju [" a type equality [Char]
                                                                           ~
                                                                           t_aju " Practium1.hs:23:6-32] (CNonCanonical)
                        [W] cobox_ajx :: [Char] ~ t_aju [" a type equality [Char]
                                                                           ~
                                                                           t_aju " Practium1.hs:23:35-52] (CNonCanonical)
                        [W] cobox_ajy :: [Char] ~ t_aju [" a type equality [Char]
                                                                           ~
                                                                           t_aju " Practium1.hs:23:55-65] (CNonCanonical)
                        [W] cobox_ajA :: [t_ajz] ~ t_aj3 [" a type equality [t_ajz]
                                                                            ~
                                                                            t_aj3 " Practium1.hs:24:5-63] (CNonCanonical)
                        [W] cobox_ajB :: [Char] ~ t_ajz [" a type equality [Char]
                                                                           ~
                                                                           t_ajz " Practium1.hs:24:6-40] (CNonCanonical)
                        [W] cobox_ajC :: [Char] ~ t_ajz [" a type equality [Char]
                                                                           ~
                                                                           t_ajz " Practium1.hs:24:43-50] (CNonCanonical)
                        [W] cobox_ajD :: [Char] ~ t_ajz [" a type equality [Char]
                                                                           ~
                                                                           t_ajz " Practium1.hs:24:53-62] (CNonCanonical)
                        [W] cobox_ajG :: [t_ajF] ~ t_aiv [" a type equality [t_ajF]
                                                                            ~
                                                                            t_aiv " Practium1.hs:(5,3)-(14,3)] (CNonCanonical)
                        [W] cobox_ajI :: [t_ajH] ~ t_ajF [" a type equality [t_ajH]
                                                                            ~
                                                                            t_ajF " Practium1.hs:5:5-40] (CNonCanonical)
                        [W] cobox_ajJ :: [Char] ~ t_ajH [" a type equality [Char]
                                                                           ~
                                                                           t_ajH " Practium1.hs:5:6-15] (CNonCanonical)
                        [W] cobox_ajK :: [Char] ~ t_ajH [" a type equality [Char]
                                                                           ~
                                                                           t_ajH " Practium1.hs:5:18-39] (CNonCanonical)
                        [W] cobox_ajM :: [t_ajL] ~ t_ajF [" a type equality [t_ajL]
                                                                            ~
                                                                            t_ajF " Practium1.hs:6:5-42] (CNonCanonical)
                        [W] cobox_ajN :: [Char] ~ t_ajL [" a type equality [Char]
                                                                           ~
                                                                           t_ajL " Practium1.hs:6:6-13] (CNonCanonical)
                        [W] cobox_ajO :: [Char] ~ t_ajL [" a type equality [Char]
                                                                           ~
                                                                           t_ajL " Practium1.hs:6:16-41] (CNonCanonical)
                        [W] cobox_ajQ :: [t_ajP] ~ t_ajF [" a type equality [t_ajP]
                                                                            ~
                                                                            t_ajF " Practium1.hs:7:5-33] (CNonCanonical)
                        [W] cobox_ajR :: [Char] ~ t_ajP [" a type equality [Char]
                                                                           ~
                                                                           t_ajP " Practium1.hs:7:6-10] (CNonCanonical)
                        [W] cobox_ajS :: [Char] ~ t_ajP [" a type equality [Char]
                                                                           ~
                                                                           t_ajP " Practium1.hs:7:13-32] (CNonCanonical)
                        [W] cobox_ajU :: [t_ajT] ~ t_ajF [" a type equality [t_ajT]
                                                                            ~
                                                                            t_ajF " Practium1.hs:8:5-33] (CNonCanonical)
                        [W] cobox_ajV :: [Char] ~ t_ajT [" a type equality [Char]
                                                                           ~
                                                                           t_ajT " Practium1.hs:8:6-10] (CNonCanonical)
                        [W] cobox_ajW :: [Char] ~ t_ajT [" a type equality [Char]
                                                                           ~
                                                                           t_ajT " Practium1.hs:8:13-32] (CNonCanonical)
                        [W] cobox_ajY :: [t_ajX] ~ t_ajF [" a type equality [t_ajX]
                                                                            ~
                                                                            t_ajF " Practium1.hs:9:5-34] (CNonCanonical)
                        [W] cobox_ajZ :: [Char] ~ t_ajX [" a type equality [Char]
                                                                           ~
                                                                           t_ajX " Practium1.hs:9:6-11] (CNonCanonical)
                        [W] cobox_ak0 :: [Char] ~ t_ajX [" a type equality [Char]
                                                                           ~
                                                                           t_ajX " Practium1.hs:9:14-33] (CNonCanonical)
                        [W] cobox_ak2 :: [t_ak1] ~ t_ajF [" a type equality [t_ak1]
                                                                            ~
                                                                            t_ajF " Practium1.hs:10:5-38] (CNonCanonical)
                        [W] cobox_ak3 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                           ~
                                                                           t_ak1 " Practium1.hs:10:6-15] (CNonCanonical)
                        [W] cobox_ak4 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                           ~
                                                                           t_ak1 " Practium1.hs:10:18-37] (CNonCanonical)
                        [W] cobox_ak6 :: [t_ak5] ~ t_ajF [" a type equality [t_ak5]
                                                                            ~
                                                                            t_ajF " Practium1.hs:11:5-46] (CNonCanonical)
                        [W] cobox_ak7 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                           ~
                                                                           t_ak5 " Practium1.hs:11:6-16] (CNonCanonical)
                        [W] cobox_ak8 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                           ~
                                                                           t_ak5 " Practium1.hs:11:19-45] (CNonCanonical)
                        [W] cobox_aka :: [t_ak9] ~ t_ajF [" a type equality [t_ak9]
                                                                            ~
                                                                            t_ajF " Practium1.hs:12:5-54] (CNonCanonical)
                        [W] cobox_akb :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                           ~
                                                                           t_ak9 " Practium1.hs:12:6-16] (CNonCanonical)
                        [W] cobox_akc :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                           ~
                                                                           t_ak9 " Practium1.hs:12:19-53] (CNonCanonical)
                        [W] cobox_ake :: [t_akd] ~ t_ajF [" a type equality [t_akd]
                                                                            ~
                                                                            t_ajF " Practium1.hs:13:5-48] (CNonCanonical)
                        [W] cobox_akf :: [Char] ~ t_akd [" a type equality [Char]
                                                                           ~
                                                                           t_akd " Practium1.hs:13:6-10] (CNonCanonical)
                        [W] cobox_akg :: [Char] ~ t_akd [" a type equality [Char]
                                                                           ~
                                                                           t_akd " Practium1.hs:13:13-47] (CNonCanonical)}
solveWanteds {
  WC {wc_flat = [W] cobox_aij :: [[String]]
                                 ~ t_aih [" a type equality [[String]]
                                                            ~
                                                            t_aih " Practium1.hs:33:17-35] (CNonCanonical)
                [W] cobox_aik :: [Int] ~ t_aii [" a type equality [Int]
                                                                  ~
                                                                  t_aii " Practium1.hs:33:17-35] (CNonCanonical)
                [W] cobox_ain :: [[String]] ~ t_ail [" a type equality [[String]]
                                                                       ~
                                                                       t_ail " Practium1.hs:30:16-37] (CNonCanonical)
                [W] cobox_aio :: [String] ~ t_aim [" a type equality [String]
                                                                     ~
                                                                     t_aim " Practium1.hs:30:16-37] (CNonCanonical)
                [W] cobox_air :: Int ~ t_aip [" a type equality Int
                                                                ~
                                                                t_aip " Practium1.hs:27:11-23] (CNonCanonical)
                [W] cobox_ais :: [Char] ~ t_aiq [" a type equality [Char]
                                                                   ~
                                                                   t_aiq " Practium1.hs:27:11-23] (CNonCanonical)
                [W] cobox_aiu :: Table ~ t_ait [" a type equality Table
                                                                  ~
                                                                  t_ait " Practium1.hs:16:13-17] (CNonCanonical)
                [W] cobox_aiw :: Table ~ t_aiv [" a type equality Table
                                                                  ~
                                                                  t_aiv " Practium1.hs:3:14-18] (CNonCanonical)
                [W] cobox_aiC :: [b_aiB] ~ t_aim [" a type equality [b_aiB]
                                                                    ~
                                                                    t_aim " Practium1.hs:31:18-28] (CNonCanonical)
                [W] cobox_aiF :: ([a_aiE] -> a_aiE)
                                 ~ (a_aiA -> b_aiB) [" a type equality [a_aiE] -> a_aiE
                                                                       ~
                                                                       a_aiA
                                                                       -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
                [W] cobox_aiG :: t_ail ~ [a_aiA] [" a type equality t_ail
                                                                    ~
                                                                    [a_aiA] " Practium1.hs:31:27-28] (CNonCanonical)
                [W] cobox_aiM :: [b_aiJ]
                                 ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                       ~
                                                                       t_aiK
                                                                       -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
                [W] cobox_aiN :: t_aiL ~ t_aii [" a type equality t_aiL
                                                                  ~
                                                                  t_aii " Practium1.hs:34:18-41] (CNonCanonical)
                [W] cobox_aiQ :: ([a_aiP] -> Int)
                                 ~ (a_aiI -> b_aiJ) [" a type equality [a_aiP] -> Int
                                                                       ~
                                                                       a_aiI
                                                                       -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
                [W] cobox_aiR :: (t_ail -> t_aim)
                                 ~ [a_aiI] [" a type equality t_ail -> t_aim
                                                              ~
                                                              [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                [W] cobox_aiS :: t_aih ~ t_aiK [" a type equality t_aih
                                                                  ~
                                                                  t_aiK " Practium1.hs:34:41] (CNonCanonical)
                [W] cobox_aiW :: [a_aiV] ~ t_aiq [" a type equality [a_aiV]
                                                                    ~
                                                                    t_aiq " Practium1.hs:28:12-30] (CNonCanonical)
                [W] cobox_aiX :: t_aip ~ Int [" a type equality t_aip
                                                                ~
                                                                Int " Practium1.hs:28:17] (CNonCanonical)
                [W] cobox_aj0 :: [a_aiZ] ~ [a_aiV] [" a type equality [a_aiZ]
                                                                      ~
                                                                      [a_aiV] " Practium1.hs:28:20-29] (CNonCanonical)
                [W] cobox_aj1 :: Char ~ a_aiZ [" a type equality Char
                                                                 ~
                                                                 a_aiZ " Practium1.hs:28:27-29] (CNonCanonical)
                [W] cobox_aj4 :: [t_aj3] ~ t_ait [" a type equality [t_aj3]
                                                                    ~
                                                                    t_ait " Practium1.hs:(18,3)-(25,3)] (CNonCanonical)
                [W] cobox_aj6 :: [t_aj5] ~ t_aj3 [" a type equality [t_aj5]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:18:5-44] (CNonCanonical)
                [W] cobox_aj7 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                   ~
                                                                   t_aj5 " Practium1.hs:18:6-27] (CNonCanonical)
                [W] cobox_aj8 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                   ~
                                                                   t_aj5 " Practium1.hs:18:30-35] (CNonCanonical)
                [W] cobox_aj9 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                   ~
                                                                   t_aj5 " Practium1.hs:18:38-43] (CNonCanonical)
                [W] cobox_ajb :: [t_aja] ~ t_aj3 [" a type equality [t_aja]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:19:5-56] (CNonCanonical)
                [W] cobox_ajc :: [Char] ~ t_aja [" a type equality [Char]
                                                                   ~
                                                                   t_aja " Practium1.hs:19:6-31] (CNonCanonical)
                [W] cobox_ajd :: [Char] ~ t_aja [" a type equality [Char]
                                                                   ~
                                                                   t_aja " Practium1.hs:19:34-44] (CNonCanonical)
                [W] cobox_aje :: [Char] ~ t_aja [" a type equality [Char]
                                                                   ~
                                                                   t_aja " Practium1.hs:19:47-55] (CNonCanonical)
                [W] cobox_ajg :: [t_ajf] ~ t_aj3 [" a type equality [t_ajf]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:20:5-46] (CNonCanonical)
                [W] cobox_ajh :: [Char] ~ t_ajf [" a type equality [Char]
                                                                   ~
                                                                   t_ajf " Practium1.hs:20:6-25] (CNonCanonical)
                [W] cobox_aji :: [Char] ~ t_ajf [" a type equality [Char]
                                                                   ~
                                                                   t_ajf " Practium1.hs:20:28-37] (CNonCanonical)
                [W] cobox_ajj :: [Char] ~ t_ajf [" a type equality [Char]
                                                                   ~
                                                                   t_ajf " Practium1.hs:20:40-45] (CNonCanonical)
                [W] cobox_ajl :: [t_ajk] ~ t_aj3 [" a type equality [t_ajk]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:21:5-51] (CNonCanonical)
                [W] cobox_ajm :: [Char] ~ t_ajk [" a type equality [Char]
                                                                   ~
                                                                   t_ajk " Practium1.hs:21:6-25] (CNonCanonical)
                [W] cobox_ajn :: [Char] ~ t_ajk [" a type equality [Char]
                                                                   ~
                                                                   t_ajk " Practium1.hs:21:28-37] (CNonCanonical)
                [W] cobox_ajo :: [Char] ~ t_ajk [" a type equality [Char]
                                                                   ~
                                                                   t_ajk " Practium1.hs:21:40-50] (CNonCanonical)
                [W] cobox_ajq :: [t_ajp] ~ t_aj3 [" a type equality [t_ajp]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:22:5-59] (CNonCanonical)
                [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Practium1.hs:22:6-25] (CNonCanonical)
                [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Practium1.hs:22:28-45] (CNonCanonical)
                [W] cobox_ajt :: [Char] ~ t_ajp [" a type equality [Char]
                                                                   ~
                                                                   t_ajp " Practium1.hs:22:48-58] (CNonCanonical)
                [W] cobox_ajv :: [t_aju] ~ t_aj3 [" a type equality [t_aju]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:23:5-66] (CNonCanonical)
                [W] cobox_ajw :: [Char] ~ t_aju [" a type equality [Char]
                                                                   ~
                                                                   t_aju " Practium1.hs:23:6-32] (CNonCanonical)
                [W] cobox_ajx :: [Char] ~ t_aju [" a type equality [Char]
                                                                   ~
                                                                   t_aju " Practium1.hs:23:35-52] (CNonCanonical)
                [W] cobox_ajy :: [Char] ~ t_aju [" a type equality [Char]
                                                                   ~
                                                                   t_aju " Practium1.hs:23:55-65] (CNonCanonical)
                [W] cobox_ajA :: [t_ajz] ~ t_aj3 [" a type equality [t_ajz]
                                                                    ~
                                                                    t_aj3 " Practium1.hs:24:5-63] (CNonCanonical)
                [W] cobox_ajB :: [Char] ~ t_ajz [" a type equality [Char]
                                                                   ~
                                                                   t_ajz " Practium1.hs:24:6-40] (CNonCanonical)
                [W] cobox_ajC :: [Char] ~ t_ajz [" a type equality [Char]
                                                                   ~
                                                                   t_ajz " Practium1.hs:24:43-50] (CNonCanonical)
                [W] cobox_ajD :: [Char] ~ t_ajz [" a type equality [Char]
                                                                   ~
                                                                   t_ajz " Practium1.hs:24:53-62] (CNonCanonical)
                [W] cobox_ajG :: [t_ajF] ~ t_aiv [" a type equality [t_ajF]
                                                                    ~
                                                                    t_aiv " Practium1.hs:(5,3)-(14,3)] (CNonCanonical)
                [W] cobox_ajI :: [t_ajH] ~ t_ajF [" a type equality [t_ajH]
                                                                    ~
                                                                    t_ajF " Practium1.hs:5:5-40] (CNonCanonical)
                [W] cobox_ajJ :: [Char] ~ t_ajH [" a type equality [Char]
                                                                   ~
                                                                   t_ajH " Practium1.hs:5:6-15] (CNonCanonical)
                [W] cobox_ajK :: [Char] ~ t_ajH [" a type equality [Char]
                                                                   ~
                                                                   t_ajH " Practium1.hs:5:18-39] (CNonCanonical)
                [W] cobox_ajM :: [t_ajL] ~ t_ajF [" a type equality [t_ajL]
                                                                    ~
                                                                    t_ajF " Practium1.hs:6:5-42] (CNonCanonical)
                [W] cobox_ajN :: [Char] ~ t_ajL [" a type equality [Char]
                                                                   ~
                                                                   t_ajL " Practium1.hs:6:6-13] (CNonCanonical)
                [W] cobox_ajO :: [Char] ~ t_ajL [" a type equality [Char]
                                                                   ~
                                                                   t_ajL " Practium1.hs:6:16-41] (CNonCanonical)
                [W] cobox_ajQ :: [t_ajP] ~ t_ajF [" a type equality [t_ajP]
                                                                    ~
                                                                    t_ajF " Practium1.hs:7:5-33] (CNonCanonical)
                [W] cobox_ajR :: [Char] ~ t_ajP [" a type equality [Char]
                                                                   ~
                                                                   t_ajP " Practium1.hs:7:6-10] (CNonCanonical)
                [W] cobox_ajS :: [Char] ~ t_ajP [" a type equality [Char]
                                                                   ~
                                                                   t_ajP " Practium1.hs:7:13-32] (CNonCanonical)
                [W] cobox_ajU :: [t_ajT] ~ t_ajF [" a type equality [t_ajT]
                                                                    ~
                                                                    t_ajF " Practium1.hs:8:5-33] (CNonCanonical)
                [W] cobox_ajV :: [Char] ~ t_ajT [" a type equality [Char]
                                                                   ~
                                                                   t_ajT " Practium1.hs:8:6-10] (CNonCanonical)
                [W] cobox_ajW :: [Char] ~ t_ajT [" a type equality [Char]
                                                                   ~
                                                                   t_ajT " Practium1.hs:8:13-32] (CNonCanonical)
                [W] cobox_ajY :: [t_ajX] ~ t_ajF [" a type equality [t_ajX]
                                                                    ~
                                                                    t_ajF " Practium1.hs:9:5-34] (CNonCanonical)
                [W] cobox_ajZ :: [Char] ~ t_ajX [" a type equality [Char]
                                                                   ~
                                                                   t_ajX " Practium1.hs:9:6-11] (CNonCanonical)
                [W] cobox_ak0 :: [Char] ~ t_ajX [" a type equality [Char]
                                                                   ~
                                                                   t_ajX " Practium1.hs:9:14-33] (CNonCanonical)
                [W] cobox_ak2 :: [t_ak1] ~ t_ajF [" a type equality [t_ak1]
                                                                    ~
                                                                    t_ajF " Practium1.hs:10:5-38] (CNonCanonical)
                [W] cobox_ak3 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                   ~
                                                                   t_ak1 " Practium1.hs:10:6-15] (CNonCanonical)
                [W] cobox_ak4 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                   ~
                                                                   t_ak1 " Practium1.hs:10:18-37] (CNonCanonical)
                [W] cobox_ak6 :: [t_ak5] ~ t_ajF [" a type equality [t_ak5]
                                                                    ~
                                                                    t_ajF " Practium1.hs:11:5-46] (CNonCanonical)
                [W] cobox_ak7 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                   ~
                                                                   t_ak5 " Practium1.hs:11:6-16] (CNonCanonical)
                [W] cobox_ak8 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                   ~
                                                                   t_ak5 " Practium1.hs:11:19-45] (CNonCanonical)
                [W] cobox_aka :: [t_ak9] ~ t_ajF [" a type equality [t_ak9]
                                                                    ~
                                                                    t_ajF " Practium1.hs:12:5-54] (CNonCanonical)
                [W] cobox_akb :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                   ~
                                                                   t_ak9 " Practium1.hs:12:6-16] (CNonCanonical)
                [W] cobox_akc :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                   ~
                                                                   t_ak9 " Practium1.hs:12:19-53] (CNonCanonical)
                [W] cobox_ake :: [t_akd] ~ t_ajF [" a type equality [t_akd]
                                                                    ~
                                                                    t_ajF " Practium1.hs:13:5-48] (CNonCanonical)
                [W] cobox_akf :: [Char] ~ t_akd [" a type equality [Char]
                                                                   ~
                                                                   t_akd " Practium1.hs:13:6-10] (CNonCanonical)
                [W] cobox_akg :: [Char] ~ t_akd [" a type equality [Char]
                                                                   ~
                                                                   t_akd " Practium1.hs:13:13-47] (CNonCanonical)}
solveFlats {
Start solver pipeline {
  work item =  [W] cobox_aij :: [[String]]
                                ~ t_aih [" a type equality [[String]]
                                                           ~
                                                           t_aih " Practium1.hs:33:17-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aij :: [[String]]
                                 ~ t_aih [" a type equality [[String]]
                                                            ~
                                                            t_aih " Practium1.hs:33:17-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aij :: [[String]] ~ t_aih [" a type equality [[String]]
                                                         ~
                                                         t_aih " Practium1.hs:33:17-35] (CNonCanonical)
canEvNC:eq
  [[String]]
  t_aih
can_eq_nc
  [W] cobox_aij :: [[String]] ~ t_aih
  [[String]]
  [[String]]
  t_aih
  t_aih
canEqTyVar
  t_aih
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aki :: t_aih ~ [[String]]
setEvBind
  ev = cobox_aij
  tm  = CO Sym cobox_aki
rewriteEqEvidence
  [W] cobox_aij :: [[String]] ~ t_aih
  t_aih
  [[String]]
  Sym cobox_aki
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aki :: t_aih
                                 ~ [[String]] [" a type equality [[String]]
                                                                 ~
                                                                 t_aih " Practium1.hs:33:17-35] (CTyEqCan)
Sneaky unification:
  Unifies: t_aih := [[String]]
  Coercion: t_aih ~ [[String]]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aih := [[String]]
setEvBind
  ev = cobox_aki
  tm  = CO <[[String]]>_N
kickOutRewritable
  tv =  t_aih
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
1[<C:0,F:0>] [W] cobox_aki :: t_aih
                              ~ [[String]]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aik :: [Int]
                                ~ t_aii [" a type equality [Int]
                                                           ~
                                                           t_aii " Practium1.hs:33:17-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aik :: [Int]
                                 ~ t_aii [" a type equality [Int]
                                                            ~
                                                            t_aii " Practium1.hs:33:17-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aik :: [Int] ~ t_aii [" a type equality [Int]
                                                    ~
                                                    t_aii " Practium1.hs:33:17-35] (CNonCanonical)
canEvNC:eq
  [Int]
  t_aii
can_eq_nc
  [W] cobox_aik :: [Int] ~ t_aii
  [Int]
  [Int]
  t_aii
  t_aii
canEqTyVar
  t_aii
  [Int]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akj :: t_aii ~ [Int]
setEvBind
  ev = cobox_aik
  tm  = CO Sym cobox_akj
rewriteEqEvidence
  [W] cobox_aik :: [Int] ~ t_aii
  t_aii
  [Int]
  Sym cobox_akj
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akj :: t_aii
                                 ~ [Int] [" a type equality [Int]
                                                            ~
                                                            t_aii " Practium1.hs:33:17-35] (CTyEqCan)
Sneaky unification:
  Unifies: t_aii := [Int]
  Coercion: t_aii ~ [Int]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aii := [Int]
setEvBind
  ev = cobox_akj
  tm  = CO <[Int]>_N
kickOutRewritable
  tv =  t_aii
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
2[<C:0,F:0>] [W] cobox_akj :: t_aii ~ [Int]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ain :: [[String]]
                                ~ t_ail [" a type equality [[String]]
                                                           ~
                                                           t_ail " Practium1.hs:30:16-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ain :: [[String]]
                                 ~ t_ail [" a type equality [[String]]
                                                            ~
                                                            t_ail " Practium1.hs:30:16-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ain :: [[String]] ~ t_ail [" a type equality [[String]]
                                                         ~
                                                         t_ail " Practium1.hs:30:16-37] (CNonCanonical)
canEvNC:eq
  [[String]]
  t_ail
can_eq_nc
  [W] cobox_ain :: [[String]] ~ t_ail
  [[String]]
  [[String]]
  t_ail
  t_ail
canEqTyVar
  t_ail
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akk :: t_ail ~ [[String]]
setEvBind
  ev = cobox_ain
  tm  = CO Sym cobox_akk
rewriteEqEvidence
  [W] cobox_ain :: [[String]] ~ t_ail
  t_ail
  [[String]]
  Sym cobox_akk
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akk :: t_ail
                                 ~ [[String]] [" a type equality [[String]]
                                                                 ~
                                                                 t_ail " Practium1.hs:30:16-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_ail := [[String]]
  Coercion: t_ail ~ [[String]]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ail := [[String]]
setEvBind
  ev = cobox_akk
  tm  = CO <[[String]]>_N
kickOutRewritable
  tv =  t_ail
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
3[<C:0,F:0>] [W] cobox_akk :: t_ail
                              ~ [[String]]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aio :: [String]
                                ~ t_aim [" a type equality [String]
                                                           ~
                                                           t_aim " Practium1.hs:30:16-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aio :: [String]
                                 ~ t_aim [" a type equality [String]
                                                            ~
                                                            t_aim " Practium1.hs:30:16-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aio :: [String] ~ t_aim [" a type equality [String]
                                                       ~
                                                       t_aim " Practium1.hs:30:16-37] (CNonCanonical)
canEvNC:eq
  [String]
  t_aim
can_eq_nc
  [W] cobox_aio :: [String] ~ t_aim
  [String]
  [String]
  t_aim
  t_aim
canEqTyVar
  t_aim
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akl :: t_aim ~ [String]
setEvBind
  ev = cobox_aio
  tm  = CO Sym cobox_akl
rewriteEqEvidence
  [W] cobox_aio :: [String] ~ t_aim
  t_aim
  [String]
  Sym cobox_akl
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akl :: t_aim
                                 ~ [String] [" a type equality [String]
                                                               ~
                                                               t_aim " Practium1.hs:30:16-37] (CTyEqCan)
Sneaky unification:
  Unifies: t_aim := [String]
  Coercion: t_aim ~ [String]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aim := [String]
setEvBind
  ev = cobox_akl
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_aim
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
4[<C:0,F:0>] [W] cobox_akl :: t_aim
                              ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_air :: Int ~ t_aip [" a type equality Int
                                                               ~
                                                               t_aip " Practium1.hs:27:11-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_air :: Int ~ t_aip [" a type equality Int
                                                                ~
                                                                t_aip " Practium1.hs:27:11-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_air :: Int ~ t_aip [" a type equality Int
                                                  ~
                                                  t_aip " Practium1.hs:27:11-23] (CNonCanonical)
canEvNC:eq
  Int
  t_aip
can_eq_nc
  [W] cobox_air :: Int ~ t_aip
  Int
  Int
  t_aip
  t_aip
canEqTyVar
  t_aip
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akm :: t_aip ~ Int
setEvBind
  ev = cobox_air
  tm  = CO Sym cobox_akm
rewriteEqEvidence
  [W] cobox_air :: Int ~ t_aip
  t_aip
  Int
  Sym cobox_akm
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akm :: t_aip ~ Int [" a type equality Int
                                                                ~
                                                                t_aip " Practium1.hs:27:11-23] (CTyEqCan)
Sneaky unification:
  Unifies: t_aip := Int
  Coercion: t_aip ~ Int
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aip := Int
setEvBind
  ev = cobox_akm
  tm  = CO <Int>_N
kickOutRewritable
  tv =  t_aip
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
5[<C:0,F:0>] [W] cobox_akm :: t_aip ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ais :: [Char]
                                ~ t_aiq [" a type equality [Char]
                                                           ~
                                                           t_aiq " Practium1.hs:27:11-23] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ais :: [Char]
                                 ~ t_aiq [" a type equality [Char]
                                                            ~
                                                            t_aiq " Practium1.hs:27:11-23] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ais :: [Char] ~ t_aiq [" a type equality [Char]
                                                     ~
                                                     t_aiq " Practium1.hs:27:11-23] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aiq
can_eq_nc
  [W] cobox_ais :: [Char] ~ t_aiq
  [Char]
  [Char]
  t_aiq
  t_aiq
canEqTyVar
  t_aiq
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akn :: t_aiq ~ [Char]
setEvBind
  ev = cobox_ais
  tm  = CO Sym cobox_akn
rewriteEqEvidence
  [W] cobox_ais :: [Char] ~ t_aiq
  t_aiq
  [Char]
  Sym cobox_akn
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akn :: t_aiq
                                 ~ [Char] [" a type equality [Char]
                                                             ~
                                                             t_aiq " Practium1.hs:27:11-23] (CTyEqCan)
Sneaky unification:
  Unifies: t_aiq := [Char]
  Coercion: t_aiq ~ [Char]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aiq := [Char]
setEvBind
  ev = cobox_akn
  tm  = CO <[Char]>_N
kickOutRewritable
  tv =  t_aiq
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
6[<C:0,F:0>] [W] cobox_akn :: t_aiq ~ [Char]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiu :: Table
                                ~ t_ait [" a type equality Table
                                                           ~
                                                           t_ait " Practium1.hs:16:13-17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiu :: Table
                                 ~ t_ait [" a type equality Table
                                                            ~
                                                            t_ait " Practium1.hs:16:13-17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiu :: Table ~ t_ait [" a type equality Table
                                                    ~
                                                    t_ait " Practium1.hs:16:13-17] (CNonCanonical)
canEvNC:eq
  Table
  t_ait
can_eq_nc
  [W] cobox_aiu :: Table ~ t_ait
  Table
  Table
  t_ait
  t_ait
can_eq_nc
  [W] cobox_aiu :: Table ~ t_ait
  [[String]]
  Table
  t_ait
  t_ait
canEqTyVar
  t_ait
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ako :: t_ait ~ Table
setEvBind
  ev = cobox_aiu
  tm  = CO Sym cobox_ako
rewriteEqEvidence
  [W] cobox_aiu :: Table ~ t_ait
  t_ait
  Table
  Sym cobox_ako
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ako :: t_ait
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_ait " Practium1.hs:16:13-17] (CTyEqCan)
Sneaky unification:
  Unifies: t_ait := Table
  Coercion: t_ait ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_ait := Table
setEvBind
  ev = cobox_ako
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_ait
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
7[<C:0,F:0>] [W] cobox_ako :: t_ait ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiw :: Table
                                ~ t_aiv [" a type equality Table
                                                           ~
                                                           t_aiv " Practium1.hs:3:14-18] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiw :: Table
                                 ~ t_aiv [" a type equality Table
                                                            ~
                                                            t_aiv " Practium1.hs:3:14-18] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiw :: Table ~ t_aiv [" a type equality Table
                                                    ~
                                                    t_aiv " Practium1.hs:3:14-18] (CNonCanonical)
canEvNC:eq
  Table
  t_aiv
can_eq_nc
  [W] cobox_aiw :: Table ~ t_aiv
  Table
  Table
  t_aiv
  t_aiv
can_eq_nc
  [W] cobox_aiw :: Table ~ t_aiv
  [[String]]
  Table
  t_aiv
  t_aiv
canEqTyVar
  t_aiv
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akp :: t_aiv ~ Table
setEvBind
  ev = cobox_aiw
  tm  = CO Sym cobox_akp
rewriteEqEvidence
  [W] cobox_aiw :: Table ~ t_aiv
  t_aiv
  Table
  Sym cobox_akp
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akp :: t_aiv
                                 ~ Table [" a type equality Table
                                                            ~
                                                            t_aiv " Practium1.hs:3:14-18] (CTyEqCan)
Sneaky unification:
  Unifies: t_aiv := Table
  Coercion: t_aiv ~ Table
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aiv := Table
setEvBind
  ev = cobox_akp
  tm  = CO <Table>_N
kickOutRewritable
  tv =  t_aiv
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
8[<C:0,F:0>] [W] cobox_akp :: t_aiv ~ Table: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiC :: [b_aiB]
                                ~ t_aim [" a type equality [b_aiB]
                                                           ~
                                                           t_aim " Practium1.hs:31:18-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiC :: [b_aiB]
                                 ~ t_aim [" a type equality [b_aiB]
                                                            ~
                                                            t_aim " Practium1.hs:31:18-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiC :: [b_aiB] ~ t_aim [" a type equality [b_aiB]
                                                      ~
                                                      t_aim " Practium1.hs:31:18-28] (CNonCanonical)
canEvNC:eq
  [b_aiB]
  t_aim
can_eq_nc
  [W] cobox_aiC :: [b_aiB] ~ t_aim
  [b_aiB]
  [b_aiB]
  t_aim
  t_aim
canEqTyVar
  t_aim
  [b_aiB]
  Is-swapped
Following bound tyvar t_aim = [String]
newWantedEvVar/cache miss [W] cobox_akq :: [String] ~ [b_aiB]
setEvBind
  ev = cobox_aiC
  tm  = CO Sym cobox_akq
rewriteEqEvidence
  [W] cobox_aiC :: [b_aiB] ~ t_aim
  [String]
  [b_aiB]
  Sym cobox_akq
canEqTyVar2
  t_aim
  [b_aiB]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_akq :: [String] ~ [b_aiB]
  [String]
  [String]
  [b_aiB]
  [b_aiB]
newWantedEvVar/cache miss [W] cobox_akr :: String ~ b_aiB
setEvBind
  ev = cobox_akq
  tm  = CO [cobox_akr]_N
canEvNC:eq
  String
  b_aiB
can_eq_nc
  [W] cobox_akr :: String ~ b_aiB
  String
  String
  b_aiB
  b_aiB
can_eq_nc
  [W] cobox_akr :: String ~ b_aiB
  [Char]
  String
  b_aiB
  b_aiB
canEqTyVar
  b_aiB
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aks :: b_aiB ~ String
setEvBind
  ev = cobox_akr
  tm  = CO Sym cobox_aks
rewriteEqEvidence
  [W] cobox_akr :: String ~ b_aiB
  b_aiB
  String
  Sym cobox_aks
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aks :: b_aiB
                                 ~ String [" a type equality [b_aiB]
                                                             ~
                                                             t_aim " Practium1.hs:31:18-28] (CTyEqCan)
Sneaky unification:
  Unifies: b_aiB := String
  Coercion: b_aiB ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aiB := String
setEvBind
  ev = cobox_aks
  tm  = CO <String>_N
kickOutRewritable
  tv =  b_aiB
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
9[<C:0,F:0>] [W] cobox_aks :: b_aiB ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiF :: ([a_aiE] -> a_aiE)
                                ~ (a_aiA -> b_aiB) [" a type equality [a_aiE] -> a_aiE
                                                                      ~
                                                                      a_aiA
                                                                      -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiF :: ([a_aiE] -> a_aiE)
                                 ~ (a_aiA -> b_aiB) [" a type equality [a_aiE] -> a_aiE
                                                                       ~
                                                                       a_aiA
                                                                       -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiF :: ([a_aiE] -> a_aiE)
                   ~ (a_aiA -> b_aiB) [" a type equality [a_aiE] -> a_aiE
                                                         ~
                                                         a_aiA
                                                         -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
canEvNC:eq
  [a_aiE] -> a_aiE
  a_aiA -> b_aiB
can_eq_nc
  [W] cobox_aiF :: ([a_aiE] -> a_aiE) ~ (a_aiA -> b_aiB)
  [a_aiE] -> a_aiE
  [a_aiE] -> a_aiE
  a_aiA -> b_aiB
  a_aiA -> b_aiB
newWantedEvVar/cache miss [W] cobox_akt :: [a_aiE] ~ a_aiA
newWantedEvVar/cache miss [W] cobox_aku :: a_aiE ~ b_aiB
setEvBind
  ev = cobox_aiF
  tm  = CO cobox_akt -> cobox_aku
canEvNC:eq
  [a_aiE]
  a_aiA
can_eq_nc
  [W] cobox_akt :: [a_aiE] ~ a_aiA
  [a_aiE]
  [a_aiE]
  a_aiA
  a_aiA
canEqTyVar
  a_aiA
  [a_aiE]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akv :: a_aiA ~ [a_aiE]
setEvBind
  ev = cobox_akt
  tm  = CO Sym cobox_akv
rewriteEqEvidence
  [W] cobox_akt :: [a_aiE] ~ a_aiA
  a_aiA
  [a_aiE]
  Sym cobox_akv
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akv :: a_aiA
                                 ~ [a_aiE] [" a type equality [a_aiE] -> a_aiE
                                                              ~
                                                              a_aiA
                                                              -> b_aiB " Practium1.hs:31:22-25] (CTyEqCan)
Sneaky unification:
  Unifies: a_aiA := [a_aiE]
  Coercion: a_aiA ~ [a_aiE]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aiA := [a_aiE]
setEvBind
  ev = cobox_akv
  tm  = CO <[a_aiE]>_N
kickOutRewritable
  tv =  a_aiA
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
10[<C:0,F:0>] [W] cobox_akv :: a_aiA
                               ~ [a_aiE]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aku :: a_aiE
                                ~ b_aiB [" a type equality [a_aiE] -> a_aiE
                                                           ~
                                                           a_aiA
                                                           -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aku :: a_aiE
                                 ~ b_aiB [" a type equality [a_aiE] -> a_aiE
                                                            ~
                                                            a_aiA
                                                            -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aku :: a_aiE ~ b_aiB [" a type equality [a_aiE] -> a_aiE
                                                    ~
                                                    a_aiA
                                                    -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
canEvNC:eq
  a_aiE
  b_aiB
can_eq_nc
  [W] cobox_aku :: a_aiE ~ b_aiB
  a_aiE
  a_aiE
  b_aiB
  b_aiB
canEqTyVar
  a_aiE
  b_aiB
  Not-swapped
Following bound tyvar b_aiB = String
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aku :: a_aiE
                                 ~ String [" a type equality [a_aiE] -> a_aiE
                                                             ~
                                                             a_aiA
                                                             -> b_aiB " Practium1.hs:31:22-25] (CTyEqCan)
Sneaky unification:
  Unifies: a_aiE := String
  Coercion: a_aiE ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aiE := String
setEvBind
  ev = cobox_aku
  tm  = CO <String>_N
kickOutRewritable
  tv =  a_aiE
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
11[<C:0,F:0>] [W] cobox_aku :: a_aiE ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiG :: t_ail
                                ~ [a_aiA] [" a type equality t_ail
                                                             ~
                                                             [a_aiA] " Practium1.hs:31:27-28] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiG :: t_ail
                                 ~ [a_aiA] [" a type equality t_ail
                                                              ~
                                                              [a_aiA] " Practium1.hs:31:27-28] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiG :: t_ail ~ [a_aiA] [" a type equality t_ail
                                                      ~
                                                      [a_aiA] " Practium1.hs:31:27-28] (CNonCanonical)
canEvNC:eq
  t_ail
  [a_aiA]
can_eq_nc
  [W] cobox_aiG :: t_ail ~ [a_aiA]
  t_ail
  t_ail
  [a_aiA]
  [a_aiA]
canEqTyVar
  t_ail
  [a_aiA]
  Not-swapped
Following bound tyvar t_ail = [[String]]
canEqTyVar2
  t_ail
  [a_aiA]
  Not-swapped
  [[String]]
  <[[String]]>_N
can_eq_nc
  [W] cobox_aiG :: [[String]] ~ [a_aiA]
  [[String]]
  [[String]]
  [a_aiA]
  [a_aiA]
newWantedEvVar/cache miss [W] cobox_akw :: [String] ~ a_aiA
setEvBind
  ev = cobox_aiG
  tm  = CO [cobox_akw]_N
canEvNC:eq
  [String]
  a_aiA
can_eq_nc
  [W] cobox_akw :: [String] ~ a_aiA
  [String]
  [String]
  a_aiA
  a_aiA
canEqTyVar
  a_aiA
  [String]
  Is-swapped
Following bound tyvar a_aiA = [a_aiE]
newWantedEvVar/cache miss [W] cobox_akx :: [a_aiE] ~ [String]
setEvBind
  ev = cobox_akw
  tm  = CO Sym cobox_akx
rewriteEqEvidence
  [W] cobox_akw :: [String] ~ a_aiA
  [a_aiE]
  [String]
  Sym cobox_akx
canEqTyVar2
  a_aiA
  [String]
  Is-swapped
  [a_aiE]
  <[a_aiE]>_N
can_eq_nc
  [W] cobox_akx :: [a_aiE] ~ [String]
  [a_aiE]
  [a_aiE]
  [String]
  [String]
newWantedEvVar/cache miss [W] cobox_aky :: a_aiE ~ String
setEvBind
  ev = cobox_akx
  tm  = CO [cobox_aky]_N
canEvNC:eq
  a_aiE
  String
can_eq_nc
  [W] cobox_aky :: a_aiE ~ String
  a_aiE
  a_aiE
  String
  String
can_eq_nc
  [W] cobox_aky :: a_aiE ~ String
  a_aiE
  a_aiE
  [Char]
  String
canEqTyVar
  a_aiE
  [Char]
  Not-swapped
Following bound tyvar a_aiE = String
canEqTyVar2
  a_aiE
  [Char]
  Not-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_aky :: String ~ String
  String
  String
  [Char]
  String
can_eq_nc
  [W] cobox_aky :: String ~ String
  [Char]
  String
  [Char]
  String
newWantedEvVar/cache miss [W] cobox_akz :: Char ~ Char
setEvBind
  ev = cobox_aky
  tm  = CO [cobox_akz]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akz :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akz
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiM :: [b_aiJ]
                                ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                      ~
                                                                      t_aiK
                                                                      -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiM :: [b_aiJ]
                                 ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                       ~
                                                                       t_aiK
                                                                       -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiM :: [b_aiJ]
                   ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                         ~
                                                         t_aiK
                                                         -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
canEvNC:eq
  [b_aiJ]
  t_aiK -> t_aiL
can_eq_nc
  [W] cobox_aiM :: [b_aiJ] ~ (t_aiK -> t_aiL)
  [b_aiJ]
  [b_aiJ]
  t_aiK -> t_aiL
  t_aiK -> t_aiL
Emit insoluble
  [W] cobox_aiM :: [b_aiJ]
                   ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                         ~
                                                         t_aiK
                                                         -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiM :: [b_aiJ]
                                              ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                                    ~
                                                                                    t_aiK
                                                                                    -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiN :: t_aiL
                                ~ t_aii [" a type equality t_aiL
                                                           ~
                                                           t_aii " Practium1.hs:34:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiM :: [b_aiJ]
                                              ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                                    ~
                                                                                    t_aiK
                                                                                    -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiN :: t_aiL
                                 ~ t_aii [" a type equality t_aiL
                                                            ~
                                                            t_aii " Practium1.hs:34:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiN :: t_aiL ~ t_aii [" a type equality t_aiL
                                                    ~
                                                    t_aii " Practium1.hs:34:18-41] (CNonCanonical)
canEvNC:eq
  t_aiL
  t_aii
can_eq_nc
  [W] cobox_aiN :: t_aiL ~ t_aii
  t_aiL
  t_aiL
  t_aii
  t_aii
canEqTyVar
  t_aiL
  t_aii
  Not-swapped
Following bound tyvar t_aii = [Int]
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aiN :: t_aiL
                                 ~ [Int] [" a type equality t_aiL
                                                            ~
                                                            t_aii " Practium1.hs:34:18-41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aiL := [Int]
  Coercion: t_aiL ~ [Int]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aiL := [Int]
setEvBind
  ev = cobox_aiN
  tm  = CO <[Int]>_N
kickOutRewritable
  tv =  t_aiL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  [[W] cobox_aiM :: [b_aiJ]
                                                     ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                                           ~
                                                                                           t_aiK
                                                                                           -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)]
14[<C:0,F:0>] [W] cobox_aiN :: t_aiL
                               ~ [Int]: Spontaneously solved (1 kicked out)
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiQ :: ([a_aiP] -> Int)
                                ~ (a_aiI -> b_aiJ) [" a type equality [a_aiP] -> Int
                                                                      ~
                                                                      a_aiI
                                                                      -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiQ :: ([a_aiP] -> Int)
                                 ~ (a_aiI -> b_aiJ) [" a type equality [a_aiP] -> Int
                                                                       ~
                                                                       a_aiI
                                                                       -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiQ :: ([a_aiP] -> Int)
                   ~ (a_aiI -> b_aiJ) [" a type equality [a_aiP] -> Int
                                                         ~
                                                         a_aiI
                                                         -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
canEvNC:eq
  [a_aiP] -> Int
  a_aiI -> b_aiJ
can_eq_nc
  [W] cobox_aiQ :: ([a_aiP] -> Int) ~ (a_aiI -> b_aiJ)
  [a_aiP] -> Int
  [a_aiP] -> Int
  a_aiI -> b_aiJ
  a_aiI -> b_aiJ
newWantedEvVar/cache miss [W] cobox_akA :: [a_aiP] ~ a_aiI
newWantedEvVar/cache miss [W] cobox_akB :: Int ~ b_aiJ
setEvBind
  ev = cobox_aiQ
  tm  = CO cobox_akA -> cobox_akB
canEvNC:eq
  [a_aiP]
  a_aiI
can_eq_nc
  [W] cobox_akA :: [a_aiP] ~ a_aiI
  [a_aiP]
  [a_aiP]
  a_aiI
  a_aiI
canEqTyVar
  a_aiI
  [a_aiP]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akC :: a_aiI ~ [a_aiP]
setEvBind
  ev = cobox_akA
  tm  = CO Sym cobox_akC
rewriteEqEvidence
  [W] cobox_akA :: [a_aiP] ~ a_aiI
  a_aiI
  [a_aiP]
  Sym cobox_akC
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akC :: a_aiI
                                 ~ [a_aiP] [" a type equality [a_aiP] -> Int
                                                              ~
                                                              a_aiI
                                                              -> b_aiJ " Practium1.hs:34:22-27] (CTyEqCan)
Sneaky unification:
  Unifies: a_aiI := [a_aiP]
  Coercion: a_aiI ~ [a_aiP]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aiI := [a_aiP]
setEvBind
  ev = cobox_akC
  tm  = CO <[a_aiP]>_N
kickOutRewritable
  tv =  a_aiI
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
15[<C:0,F:0>] [W] cobox_akC :: a_aiI
                               ~ [a_aiP]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_akB :: Int
                                ~ b_aiJ [" a type equality [a_aiP] -> Int
                                                           ~
                                                           a_aiI
                                                           -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_akB :: Int
                                 ~ b_aiJ [" a type equality [a_aiP] -> Int
                                                            ~
                                                            a_aiI
                                                            -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_akB :: Int ~ b_aiJ [" a type equality [a_aiP] -> Int
                                                  ~
                                                  a_aiI
                                                  -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
canEvNC:eq
  Int
  b_aiJ
can_eq_nc
  [W] cobox_akB :: Int ~ b_aiJ
  Int
  Int
  b_aiJ
  b_aiJ
canEqTyVar
  b_aiJ
  Int
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akD :: b_aiJ ~ Int
setEvBind
  ev = cobox_akB
  tm  = CO Sym cobox_akD
rewriteEqEvidence
  [W] cobox_akB :: Int ~ b_aiJ
  b_aiJ
  Int
  Sym cobox_akD
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akD :: b_aiJ
                                 ~ Int [" a type equality [a_aiP] -> Int
                                                          ~
                                                          a_aiI
                                                          -> b_aiJ " Practium1.hs:34:22-27] (CTyEqCan)
Sneaky unification:
  Unifies: b_aiJ := Int
  Coercion: b_aiJ ~ Int
  Left Kind is: *
  Right Kind is: *
setWantedTyBind b_aiJ := Int
setEvBind
  ev = cobox_akD
  tm  = CO <Int>_N
kickOutRewritable
  tv =  b_aiJ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
16[<C:0,F:0>] [W] cobox_akD :: b_aiJ ~ Int: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiR :: (t_ail -> t_aim)
                                ~ [a_aiI] [" a type equality t_ail -> t_aim
                                                             ~
                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiR :: (t_ail -> t_aim)
                                 ~ [a_aiI] [" a type equality t_ail -> t_aim
                                                              ~
                                                              [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiR :: (t_ail -> t_aim)
                   ~ [a_aiI] [" a type equality t_ail -> t_aim
                                                ~
                                                [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
canEvNC:eq
  t_ail -> t_aim
  [a_aiI]
can_eq_nc
  [W] cobox_aiR :: (t_ail -> t_aim) ~ [a_aiI]
  t_ail -> t_aim
  t_ail -> t_aim
  [a_aiI]
  [a_aiI]
Following bound tyvar t_ail = [[String]]
Following bound tyvar t_aim = [String]
Following bound tyvar a_aiI = [a_aiP]
Emit insoluble
  [W] cobox_aiR :: ([[String]] -> [String])
                   ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                  ~
                                                  [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiS :: t_aih
                                ~ t_aiK [" a type equality t_aih
                                                           ~
                                                           t_aiK " Practium1.hs:34:41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiS :: t_aih
                                 ~ t_aiK [" a type equality t_aih
                                                            ~
                                                            t_aiK " Practium1.hs:34:41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiS :: t_aih ~ t_aiK [" a type equality t_aih
                                                    ~
                                                    t_aiK " Practium1.hs:34:41] (CNonCanonical)
canEvNC:eq
  t_aih
  t_aiK
can_eq_nc
  [W] cobox_aiS :: t_aih ~ t_aiK
  t_aih
  t_aih
  t_aiK
  t_aiK
canEqTyVar
  t_aih
  t_aiK
  Not-swapped
Following bound tyvar t_aih = [[String]]
canEqTyVar2
  t_aih
  t_aiK
  Not-swapped
  [[String]]
  <[[String]]>_N
can_eq_nc
  [W] cobox_aiS :: [[String]] ~ t_aiK
  [[String]]
  [[String]]
  t_aiK
  t_aiK
canEqTyVar
  t_aiK
  [[String]]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akE :: t_aiK ~ [[String]]
setEvBind
  ev = cobox_aiS
  tm  = CO Sym cobox_akE
rewriteEqEvidence
  [W] cobox_aiS :: [[String]] ~ t_aiK
  t_aiK
  [[String]]
  Sym cobox_akE
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akE :: t_aiK
                                 ~ [[String]] [" a type equality t_aih
                                                                 ~
                                                                 t_aiK " Practium1.hs:34:41] (CTyEqCan)
Sneaky unification:
  Unifies: t_aiK := [[String]]
  Coercion: t_aiK ~ [[String]]
  Left Kind is: OpenKind
  Right Kind is: *
setWantedTyBind t_aiK := [[String]]
setEvBind
  ev = cobox_akE
  tm  = CO <[[String]]>_N
kickOutRewritable
  tv =  t_aiK
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
18[<C:0,F:0>] [W] cobox_akE :: t_aiK
                               ~ [[String]]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiW :: [a_aiV]
                                ~ t_aiq [" a type equality [a_aiV]
                                                           ~
                                                           t_aiq " Practium1.hs:28:12-30] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiW :: [a_aiV]
                                 ~ t_aiq [" a type equality [a_aiV]
                                                            ~
                                                            t_aiq " Practium1.hs:28:12-30] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiW :: [a_aiV] ~ t_aiq [" a type equality [a_aiV]
                                                      ~
                                                      t_aiq " Practium1.hs:28:12-30] (CNonCanonical)
canEvNC:eq
  [a_aiV]
  t_aiq
can_eq_nc
  [W] cobox_aiW :: [a_aiV] ~ t_aiq
  [a_aiV]
  [a_aiV]
  t_aiq
  t_aiq
canEqTyVar
  t_aiq
  [a_aiV]
  Is-swapped
Following bound tyvar t_aiq = [Char]
newWantedEvVar/cache miss [W] cobox_akF :: [Char] ~ [a_aiV]
setEvBind
  ev = cobox_aiW
  tm  = CO Sym cobox_akF
rewriteEqEvidence
  [W] cobox_aiW :: [a_aiV] ~ t_aiq
  [Char]
  [a_aiV]
  Sym cobox_akF
canEqTyVar2
  t_aiq
  [a_aiV]
  Is-swapped
  [Char]
  <[Char]>_N
can_eq_nc
  [W] cobox_akF :: [Char] ~ [a_aiV]
  [Char]
  [Char]
  [a_aiV]
  [a_aiV]
newWantedEvVar/cache miss [W] cobox_akG :: Char ~ a_aiV
setEvBind
  ev = cobox_akF
  tm  = CO [cobox_akG]_N
canEvNC:eq
  Char
  a_aiV
can_eq_nc
  [W] cobox_akG :: Char ~ a_aiV
  Char
  Char
  a_aiV
  a_aiV
canEqTyVar
  a_aiV
  Char
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akH :: a_aiV ~ Char
setEvBind
  ev = cobox_akG
  tm  = CO Sym cobox_akH
rewriteEqEvidence
  [W] cobox_akG :: Char ~ a_aiV
  a_aiV
  Char
  Sym cobox_akH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akH :: a_aiV
                                 ~ Char [" a type equality [a_aiV]
                                                           ~
                                                           t_aiq " Practium1.hs:28:12-30] (CTyEqCan)
Sneaky unification:
  Unifies: a_aiV := Char
  Coercion: a_aiV ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aiV := Char
setEvBind
  ev = cobox_akH
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aiV
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
19[<C:0,F:0>] [W] cobox_akH :: a_aiV ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiX :: t_aip ~ Int [" a type equality t_aip
                                                               ~
                                                               Int " Practium1.hs:28:17] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiX :: t_aip ~ Int [" a type equality t_aip
                                                                ~
                                                                Int " Practium1.hs:28:17] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiX :: t_aip ~ Int [" a type equality t_aip
                                                  ~
                                                  Int " Practium1.hs:28:17] (CNonCanonical)
canEvNC:eq
  t_aip
  Int
can_eq_nc
  [W] cobox_aiX :: t_aip ~ Int
  t_aip
  t_aip
  Int
  Int
canEqTyVar
  t_aip
  Int
  Not-swapped
Following bound tyvar t_aip = Int
canEqTyVar2
  t_aip
  Int
  Not-swapped
  Int
  <Int>_N
can_eq_nc
  [W] cobox_aiX :: Int ~ Int
  Int
  Int
  Int
  Int
setEvBind
  ev = cobox_aiX
  tm  = CO <Int>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj0 :: [a_aiZ]
                                ~ [a_aiV] [" a type equality [a_aiZ]
                                                             ~
                                                             [a_aiV] " Practium1.hs:28:20-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj0 :: [a_aiZ]
                                 ~ [a_aiV] [" a type equality [a_aiZ]
                                                              ~
                                                              [a_aiV] " Practium1.hs:28:20-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj0 :: [a_aiZ] ~ [a_aiV] [" a type equality [a_aiZ]
                                                        ~
                                                        [a_aiV] " Practium1.hs:28:20-29] (CNonCanonical)
canEvNC:eq
  [a_aiZ]
  [a_aiV]
can_eq_nc
  [W] cobox_aj0 :: [a_aiZ] ~ [a_aiV]
  [a_aiZ]
  [a_aiZ]
  [a_aiV]
  [a_aiV]
newWantedEvVar/cache miss [W] cobox_akI :: a_aiZ ~ a_aiV
setEvBind
  ev = cobox_aj0
  tm  = CO [cobox_akI]_N
canEvNC:eq
  a_aiZ
  a_aiV
can_eq_nc
  [W] cobox_akI :: a_aiZ ~ a_aiV
  a_aiZ
  a_aiZ
  a_aiV
  a_aiV
canEqTyVar
  a_aiZ
  a_aiV
  Not-swapped
Following bound tyvar a_aiV = Char
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akI :: a_aiZ
                                 ~ Char [" a type equality [a_aiZ]
                                                           ~
                                                           [a_aiV] " Practium1.hs:28:20-29] (CTyEqCan)
Sneaky unification:
  Unifies: a_aiZ := Char
  Coercion: a_aiZ ~ Char
  Left Kind is: *
  Right Kind is: *
setWantedTyBind a_aiZ := Char
setEvBind
  ev = cobox_akI
  tm  = CO <Char>_N
kickOutRewritable
  tv =  a_aiZ
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
21[<C:0,F:0>] [W] cobox_akI :: a_aiZ ~ Char: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj1 :: Char ~ a_aiZ [" a type equality Char
                                                                ~
                                                                a_aiZ " Practium1.hs:28:27-29] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj1 :: Char ~ a_aiZ [" a type equality Char
                                                                 ~
                                                                 a_aiZ " Practium1.hs:28:27-29] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj1 :: Char ~ a_aiZ [" a type equality Char
                                                   ~
                                                   a_aiZ " Practium1.hs:28:27-29] (CNonCanonical)
canEvNC:eq
  Char
  a_aiZ
can_eq_nc
  [W] cobox_aj1 :: Char ~ a_aiZ
  Char
  Char
  a_aiZ
  a_aiZ
canEqTyVar
  a_aiZ
  Char
  Is-swapped
Following bound tyvar a_aiZ = Char
newWantedEvVar/cache miss [W] cobox_akJ :: Char ~ Char
setEvBind
  ev = cobox_aj1
  tm  = CO Sym cobox_akJ
rewriteEqEvidence
  [W] cobox_aj1 :: Char ~ a_aiZ
  Char
  Char
  Sym cobox_akJ
canEqTyVar2
  a_aiZ
  Char
  Is-swapped
  Char
  <Char>_N
can_eq_nc
  [W] cobox_akJ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akJ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj4 :: [t_aj3]
                                ~ t_ait [" a type equality [t_aj3]
                                                           ~
                                                           t_ait " Practium1.hs:(18,3)-(25,3)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj4 :: [t_aj3]
                                 ~ t_ait [" a type equality [t_aj3]
                                                            ~
                                                            t_ait " Practium1.hs:(18,3)-(25,3)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj4 :: [t_aj3] ~ t_ait [" a type equality [t_aj3]
                                                      ~
                                                      t_ait " Practium1.hs:(18,3)-(25,3)] (CNonCanonical)
canEvNC:eq
  [t_aj3]
  t_ait
can_eq_nc
  [W] cobox_aj4 :: [t_aj3] ~ t_ait
  [t_aj3]
  [t_aj3]
  t_ait
  t_ait
canEqTyVar
  t_ait
  [t_aj3]
  Is-swapped
Following bound tyvar t_ait = Table
newWantedEvVar/cache miss [W] cobox_akK :: Table ~ [t_aj3]
setEvBind
  ev = cobox_aj4
  tm  = CO Sym cobox_akK
rewriteEqEvidence
  [W] cobox_aj4 :: [t_aj3] ~ t_ait
  Table
  [t_aj3]
  Sym cobox_akK
canEqTyVar2
  t_ait
  [t_aj3]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_akK :: Table ~ [t_aj3]
  Table
  Table
  [t_aj3]
  [t_aj3]
can_eq_nc
  [W] cobox_akK :: Table ~ [t_aj3]
  [[String]]
  Table
  [t_aj3]
  [t_aj3]
newWantedEvVar/cache miss [W] cobox_akL :: [String] ~ t_aj3
setEvBind
  ev = cobox_akK
  tm  = CO [cobox_akL]_N
canEvNC:eq
  [String]
  t_aj3
can_eq_nc
  [W] cobox_akL :: [String] ~ t_aj3
  [String]
  [String]
  t_aj3
  t_aj3
canEqTyVar
  t_aj3
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akM :: t_aj3 ~ [String]
setEvBind
  ev = cobox_akL
  tm  = CO Sym cobox_akM
rewriteEqEvidence
  [W] cobox_akL :: [String] ~ t_aj3
  t_aj3
  [String]
  Sym cobox_akM
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akM :: t_aj3
                                 ~ [String] [" a type equality [t_aj3]
                                                               ~
                                                               t_ait " Practium1.hs:(18,3)-(25,3)] (CTyEqCan)
Sneaky unification:
  Unifies: t_aj3 := [String]
  Coercion: t_aj3 ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aj3 := [String]
setEvBind
  ev = cobox_akM
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_aj3
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
23[<C:0,F:0>] [W] cobox_akM :: t_aj3
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj6 :: [t_aj5]
                                ~ t_aj3 [" a type equality [t_aj5]
                                                           ~
                                                           t_aj3 " Practium1.hs:18:5-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj6 :: [t_aj5]
                                 ~ t_aj3 [" a type equality [t_aj5]
                                                            ~
                                                            t_aj3 " Practium1.hs:18:5-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj6 :: [t_aj5] ~ t_aj3 [" a type equality [t_aj5]
                                                      ~
                                                      t_aj3 " Practium1.hs:18:5-44] (CNonCanonical)
canEvNC:eq
  [t_aj5]
  t_aj3
can_eq_nc
  [W] cobox_aj6 :: [t_aj5] ~ t_aj3
  [t_aj5]
  [t_aj5]
  t_aj3
  t_aj3
canEqTyVar
  t_aj3
  [t_aj5]
  Is-swapped
Following bound tyvar t_aj3 = [String]
newWantedEvVar/cache miss [W] cobox_akN :: [String] ~ [t_aj5]
setEvBind
  ev = cobox_aj6
  tm  = CO Sym cobox_akN
rewriteEqEvidence
  [W] cobox_aj6 :: [t_aj5] ~ t_aj3
  [String]
  [t_aj5]
  Sym cobox_akN
canEqTyVar2
  t_aj3
  [t_aj5]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_akN :: [String] ~ [t_aj5]
  [String]
  [String]
  [t_aj5]
  [t_aj5]
newWantedEvVar/cache miss [W] cobox_akO :: String ~ t_aj5
setEvBind
  ev = cobox_akN
  tm  = CO [cobox_akO]_N
canEvNC:eq
  String
  t_aj5
can_eq_nc
  [W] cobox_akO :: String ~ t_aj5
  String
  String
  t_aj5
  t_aj5
can_eq_nc
  [W] cobox_akO :: String ~ t_aj5
  [Char]
  String
  t_aj5
  t_aj5
canEqTyVar
  t_aj5
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akP :: t_aj5 ~ String
setEvBind
  ev = cobox_akO
  tm  = CO Sym cobox_akP
rewriteEqEvidence
  [W] cobox_akO :: String ~ t_aj5
  t_aj5
  String
  Sym cobox_akP
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akP :: t_aj5
                                 ~ String [" a type equality [t_aj5]
                                                             ~
                                                             t_aj3 " Practium1.hs:18:5-44] (CTyEqCan)
Sneaky unification:
  Unifies: t_aj5 := String
  Coercion: t_aj5 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aj5 := String
setEvBind
  ev = cobox_akP
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aj5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
24[<C:0,F:0>] [W] cobox_akP :: t_aj5 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj7 :: [Char]
                                ~ t_aj5 [" a type equality [Char]
                                                           ~
                                                           t_aj5 " Practium1.hs:18:6-27] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj7 :: [Char]
                                 ~ t_aj5 [" a type equality [Char]
                                                            ~
                                                            t_aj5 " Practium1.hs:18:6-27] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj7 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                     ~
                                                     t_aj5 " Practium1.hs:18:6-27] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj5
can_eq_nc
  [W] cobox_aj7 :: [Char] ~ t_aj5
  [Char]
  [Char]
  t_aj5
  t_aj5
canEqTyVar
  t_aj5
  [Char]
  Is-swapped
Following bound tyvar t_aj5 = String
newWantedEvVar/cache miss [W] cobox_akQ :: String ~ [Char]
setEvBind
  ev = cobox_aj7
  tm  = CO Sym cobox_akQ
rewriteEqEvidence
  [W] cobox_aj7 :: [Char] ~ t_aj5
  String
  [Char]
  Sym cobox_akQ
canEqTyVar2
  t_aj5
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akQ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akQ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akR :: Char ~ Char
setEvBind
  ev = cobox_akQ
  tm  = CO [cobox_akR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj8 :: [Char]
                                ~ t_aj5 [" a type equality [Char]
                                                           ~
                                                           t_aj5 " Practium1.hs:18:30-35] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj8 :: [Char]
                                 ~ t_aj5 [" a type equality [Char]
                                                            ~
                                                            t_aj5 " Practium1.hs:18:30-35] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj8 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                     ~
                                                     t_aj5 " Practium1.hs:18:30-35] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj5
can_eq_nc
  [W] cobox_aj8 :: [Char] ~ t_aj5
  [Char]
  [Char]
  t_aj5
  t_aj5
canEqTyVar
  t_aj5
  [Char]
  Is-swapped
Following bound tyvar t_aj5 = String
newWantedEvVar/cache miss [W] cobox_akS :: String ~ [Char]
setEvBind
  ev = cobox_aj8
  tm  = CO Sym cobox_akS
rewriteEqEvidence
  [W] cobox_aj8 :: [Char] ~ t_aj5
  String
  [Char]
  Sym cobox_akS
canEqTyVar2
  t_aj5
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akS :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akS :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akT :: Char ~ Char
setEvBind
  ev = cobox_akS
  tm  = CO [cobox_akT]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akT :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akT
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aj9 :: [Char]
                                ~ t_aj5 [" a type equality [Char]
                                                           ~
                                                           t_aj5 " Practium1.hs:18:38-43] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aj9 :: [Char]
                                 ~ t_aj5 [" a type equality [Char]
                                                            ~
                                                            t_aj5 " Practium1.hs:18:38-43] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aj9 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                     ~
                                                     t_aj5 " Practium1.hs:18:38-43] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aj5
can_eq_nc
  [W] cobox_aj9 :: [Char] ~ t_aj5
  [Char]
  [Char]
  t_aj5
  t_aj5
canEqTyVar
  t_aj5
  [Char]
  Is-swapped
Following bound tyvar t_aj5 = String
newWantedEvVar/cache miss [W] cobox_akU :: String ~ [Char]
setEvBind
  ev = cobox_aj9
  tm  = CO Sym cobox_akU
rewriteEqEvidence
  [W] cobox_aj9 :: [Char] ~ t_aj5
  String
  [Char]
  Sym cobox_akU
canEqTyVar2
  t_aj5
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akU :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akU :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_akV :: Char ~ Char
setEvBind
  ev = cobox_akU
  tm  = CO [cobox_akV]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_akV :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_akV
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajb :: [t_aja]
                                ~ t_aj3 [" a type equality [t_aja]
                                                           ~
                                                           t_aj3 " Practium1.hs:19:5-56] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajb :: [t_aja]
                                 ~ t_aj3 [" a type equality [t_aja]
                                                            ~
                                                            t_aj3 " Practium1.hs:19:5-56] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajb :: [t_aja] ~ t_aj3 [" a type equality [t_aja]
                                                      ~
                                                      t_aj3 " Practium1.hs:19:5-56] (CNonCanonical)
canEvNC:eq
  [t_aja]
  t_aj3
can_eq_nc
  [W] cobox_ajb :: [t_aja] ~ t_aj3
  [t_aja]
  [t_aja]
  t_aj3
  t_aj3
canEqTyVar
  t_aj3
  [t_aja]
  Is-swapped
Following bound tyvar t_aj3 = [String]
newWantedEvVar/cache miss [W] cobox_akW :: [String] ~ [t_aja]
setEvBind
  ev = cobox_ajb
  tm  = CO Sym cobox_akW
rewriteEqEvidence
  [W] cobox_ajb :: [t_aja] ~ t_aj3
  [String]
  [t_aja]
  Sym cobox_akW
canEqTyVar2
  t_aj3
  [t_aja]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_akW :: [String] ~ [t_aja]
  [String]
  [String]
  [t_aja]
  [t_aja]
newWantedEvVar/cache miss [W] cobox_akX :: String ~ t_aja
setEvBind
  ev = cobox_akW
  tm  = CO [cobox_akX]_N
canEvNC:eq
  String
  t_aja
can_eq_nc
  [W] cobox_akX :: String ~ t_aja
  String
  String
  t_aja
  t_aja
can_eq_nc
  [W] cobox_akX :: String ~ t_aja
  [Char]
  String
  t_aja
  t_aja
canEqTyVar
  t_aja
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_akY :: t_aja ~ String
setEvBind
  ev = cobox_akX
  tm  = CO Sym cobox_akY
rewriteEqEvidence
  [W] cobox_akX :: String ~ t_aja
  t_aja
  String
  Sym cobox_akY
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_akY :: t_aja
                                 ~ String [" a type equality [t_aja]
                                                             ~
                                                             t_aj3 " Practium1.hs:19:5-56] (CTyEqCan)
Sneaky unification:
  Unifies: t_aja := String
  Coercion: t_aja ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aja := String
setEvBind
  ev = cobox_akY
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aja
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
28[<C:0,F:0>] [W] cobox_akY :: t_aja ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajc :: [Char]
                                ~ t_aja [" a type equality [Char]
                                                           ~
                                                           t_aja " Practium1.hs:19:6-31] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajc :: [Char]
                                 ~ t_aja [" a type equality [Char]
                                                            ~
                                                            t_aja " Practium1.hs:19:6-31] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajc :: [Char] ~ t_aja [" a type equality [Char]
                                                     ~
                                                     t_aja " Practium1.hs:19:6-31] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aja
can_eq_nc
  [W] cobox_ajc :: [Char] ~ t_aja
  [Char]
  [Char]
  t_aja
  t_aja
canEqTyVar
  t_aja
  [Char]
  Is-swapped
Following bound tyvar t_aja = String
newWantedEvVar/cache miss [W] cobox_akZ :: String ~ [Char]
setEvBind
  ev = cobox_ajc
  tm  = CO Sym cobox_akZ
rewriteEqEvidence
  [W] cobox_ajc :: [Char] ~ t_aja
  String
  [Char]
  Sym cobox_akZ
canEqTyVar2
  t_aja
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_akZ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_akZ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_al0 :: Char ~ Char
setEvBind
  ev = cobox_akZ
  tm  = CO [cobox_al0]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_al0 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_al0
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajd :: [Char]
                                ~ t_aja [" a type equality [Char]
                                                           ~
                                                           t_aja " Practium1.hs:19:34-44] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajd :: [Char]
                                 ~ t_aja [" a type equality [Char]
                                                            ~
                                                            t_aja " Practium1.hs:19:34-44] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajd :: [Char] ~ t_aja [" a type equality [Char]
                                                     ~
                                                     t_aja " Practium1.hs:19:34-44] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aja
can_eq_nc
  [W] cobox_ajd :: [Char] ~ t_aja
  [Char]
  [Char]
  t_aja
  t_aja
canEqTyVar
  t_aja
  [Char]
  Is-swapped
Following bound tyvar t_aja = String
newWantedEvVar/cache miss [W] cobox_al1 :: String ~ [Char]
setEvBind
  ev = cobox_ajd
  tm  = CO Sym cobox_al1
rewriteEqEvidence
  [W] cobox_ajd :: [Char] ~ t_aja
  String
  [Char]
  Sym cobox_al1
canEqTyVar2
  t_aja
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_al1 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_al1 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_al2 :: Char ~ Char
setEvBind
  ev = cobox_al1
  tm  = CO [cobox_al2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_al2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_al2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aje :: [Char]
                                ~ t_aja [" a type equality [Char]
                                                           ~
                                                           t_aja " Practium1.hs:19:47-55] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aje :: [Char]
                                 ~ t_aja [" a type equality [Char]
                                                            ~
                                                            t_aja " Practium1.hs:19:47-55] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aje :: [Char] ~ t_aja [" a type equality [Char]
                                                     ~
                                                     t_aja " Practium1.hs:19:47-55] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aja
can_eq_nc
  [W] cobox_aje :: [Char] ~ t_aja
  [Char]
  [Char]
  t_aja
  t_aja
canEqTyVar
  t_aja
  [Char]
  Is-swapped
Following bound tyvar t_aja = String
newWantedEvVar/cache miss [W] cobox_al3 :: String ~ [Char]
setEvBind
  ev = cobox_aje
  tm  = CO Sym cobox_al3
rewriteEqEvidence
  [W] cobox_aje :: [Char] ~ t_aja
  String
  [Char]
  Sym cobox_al3
canEqTyVar2
  t_aja
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_al3 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_al3 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_al4 :: Char ~ Char
setEvBind
  ev = cobox_al3
  tm  = CO [cobox_al4]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_al4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_al4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajg :: [t_ajf]
                                ~ t_aj3 [" a type equality [t_ajf]
                                                           ~
                                                           t_aj3 " Practium1.hs:20:5-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajg :: [t_ajf]
                                 ~ t_aj3 [" a type equality [t_ajf]
                                                            ~
                                                            t_aj3 " Practium1.hs:20:5-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajg :: [t_ajf] ~ t_aj3 [" a type equality [t_ajf]
                                                      ~
                                                      t_aj3 " Practium1.hs:20:5-46] (CNonCanonical)
canEvNC:eq
  [t_ajf]
  t_aj3
can_eq_nc
  [W] cobox_ajg :: [t_ajf] ~ t_aj3
  [t_ajf]
  [t_ajf]
  t_aj3
  t_aj3
canEqTyVar
  t_aj3
  [t_ajf]
  Is-swapped
Following bound tyvar t_aj3 = [String]
newWantedEvVar/cache miss [W] cobox_al5 :: [String] ~ [t_ajf]
setEvBind
  ev = cobox_ajg
  tm  = CO Sym cobox_al5
rewriteEqEvidence
  [W] cobox_ajg :: [t_ajf] ~ t_aj3
  [String]
  [t_ajf]
  Sym cobox_al5
canEqTyVar2
  t_aj3
  [t_ajf]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_al5 :: [String] ~ [t_ajf]
  [String]
  [String]
  [t_ajf]
  [t_ajf]
newWantedEvVar/cache miss [W] cobox_al6 :: String ~ t_ajf
setEvBind
  ev = cobox_al5
  tm  = CO [cobox_al6]_N
canEvNC:eq
  String
  t_ajf
can_eq_nc
  [W] cobox_al6 :: String ~ t_ajf
  String
  String
  t_ajf
  t_ajf
can_eq_nc
  [W] cobox_al6 :: String ~ t_ajf
  [Char]
  String
  t_ajf
  t_ajf
canEqTyVar
  t_ajf
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_al7 :: t_ajf ~ String
setEvBind
  ev = cobox_al6
  tm  = CO Sym cobox_al7
rewriteEqEvidence
  [W] cobox_al6 :: String ~ t_ajf
  t_ajf
  String
  Sym cobox_al7
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_al7 :: t_ajf
                                 ~ String [" a type equality [t_ajf]
                                                             ~
                                                             t_aj3 " Practium1.hs:20:5-46] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajf := String
  Coercion: t_ajf ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajf := String
setEvBind
  ev = cobox_al7
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajf
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
32[<C:0,F:0>] [W] cobox_al7 :: t_ajf ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajh :: [Char]
                                ~ t_ajf [" a type equality [Char]
                                                           ~
                                                           t_ajf " Practium1.hs:20:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajh :: [Char]
                                 ~ t_ajf [" a type equality [Char]
                                                            ~
                                                            t_ajf " Practium1.hs:20:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajh :: [Char] ~ t_ajf [" a type equality [Char]
                                                     ~
                                                     t_ajf " Practium1.hs:20:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajf
can_eq_nc
  [W] cobox_ajh :: [Char] ~ t_ajf
  [Char]
  [Char]
  t_ajf
  t_ajf
canEqTyVar
  t_ajf
  [Char]
  Is-swapped
Following bound tyvar t_ajf = String
newWantedEvVar/cache miss [W] cobox_al8 :: String ~ [Char]
setEvBind
  ev = cobox_ajh
  tm  = CO Sym cobox_al8
rewriteEqEvidence
  [W] cobox_ajh :: [Char] ~ t_ajf
  String
  [Char]
  Sym cobox_al8
canEqTyVar2
  t_ajf
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_al8 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_al8 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_al9 :: Char ~ Char
setEvBind
  ev = cobox_al8
  tm  = CO [cobox_al9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_al9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_al9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aji :: [Char]
                                ~ t_ajf [" a type equality [Char]
                                                           ~
                                                           t_ajf " Practium1.hs:20:28-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aji :: [Char]
                                 ~ t_ajf [" a type equality [Char]
                                                            ~
                                                            t_ajf " Practium1.hs:20:28-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aji :: [Char] ~ t_ajf [" a type equality [Char]
                                                     ~
                                                     t_ajf " Practium1.hs:20:28-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajf
can_eq_nc
  [W] cobox_aji :: [Char] ~ t_ajf
  [Char]
  [Char]
  t_ajf
  t_ajf
canEqTyVar
  t_ajf
  [Char]
  Is-swapped
Following bound tyvar t_ajf = String
newWantedEvVar/cache miss [W] cobox_ala :: String ~ [Char]
setEvBind
  ev = cobox_aji
  tm  = CO Sym cobox_ala
rewriteEqEvidence
  [W] cobox_aji :: [Char] ~ t_ajf
  String
  [Char]
  Sym cobox_ala
canEqTyVar2
  t_ajf
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_ala :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_ala :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alb :: Char ~ Char
setEvBind
  ev = cobox_ala
  tm  = CO [cobox_alb]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alb :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alb
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajj :: [Char]
                                ~ t_ajf [" a type equality [Char]
                                                           ~
                                                           t_ajf " Practium1.hs:20:40-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajj :: [Char]
                                 ~ t_ajf [" a type equality [Char]
                                                            ~
                                                            t_ajf " Practium1.hs:20:40-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajj :: [Char] ~ t_ajf [" a type equality [Char]
                                                     ~
                                                     t_ajf " Practium1.hs:20:40-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajf
can_eq_nc
  [W] cobox_ajj :: [Char] ~ t_ajf
  [Char]
  [Char]
  t_ajf
  t_ajf
canEqTyVar
  t_ajf
  [Char]
  Is-swapped
Following bound tyvar t_ajf = String
newWantedEvVar/cache miss [W] cobox_alc :: String ~ [Char]
setEvBind
  ev = cobox_ajj
  tm  = CO Sym cobox_alc
rewriteEqEvidence
  [W] cobox_ajj :: [Char] ~ t_ajf
  String
  [Char]
  Sym cobox_alc
canEqTyVar2
  t_ajf
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alc :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alc :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_ald :: Char ~ Char
setEvBind
  ev = cobox_alc
  tm  = CO [cobox_ald]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_ald :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ald
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajl :: [t_ajk]
                                ~ t_aj3 [" a type equality [t_ajk]
                                                           ~
                                                           t_aj3 " Practium1.hs:21:5-51] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajl :: [t_ajk]
                                 ~ t_aj3 [" a type equality [t_ajk]
                                                            ~
                                                            t_aj3 " Practium1.hs:21:5-51] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajl :: [t_ajk] ~ t_aj3 [" a type equality [t_ajk]
                                                      ~
                                                      t_aj3 " Practium1.hs:21:5-51] (CNonCanonical)
canEvNC:eq
  [t_ajk]
  t_aj3
can_eq_nc
  [W] cobox_ajl :: [t_ajk] ~ t_aj3
  [t_ajk]
  [t_ajk]
  t_aj3
  t_aj3
canEqTyVar
  t_aj3
  [t_ajk]
  Is-swapped
Following bound tyvar t_aj3 = [String]
newWantedEvVar/cache miss [W] cobox_ale :: [String] ~ [t_ajk]
setEvBind
  ev = cobox_ajl
  tm  = CO Sym cobox_ale
rewriteEqEvidence
  [W] cobox_ajl :: [t_ajk] ~ t_aj3
  [String]
  [t_ajk]
  Sym cobox_ale
canEqTyVar2
  t_aj3
  [t_ajk]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_ale :: [String] ~ [t_ajk]
  [String]
  [String]
  [t_ajk]
  [t_ajk]
newWantedEvVar/cache miss [W] cobox_alf :: String ~ t_ajk
setEvBind
  ev = cobox_ale
  tm  = CO [cobox_alf]_N
canEvNC:eq
  String
  t_ajk
can_eq_nc
  [W] cobox_alf :: String ~ t_ajk
  String
  String
  t_ajk
  t_ajk
can_eq_nc
  [W] cobox_alf :: String ~ t_ajk
  [Char]
  String
  t_ajk
  t_ajk
canEqTyVar
  t_ajk
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alg :: t_ajk ~ String
setEvBind
  ev = cobox_alf
  tm  = CO Sym cobox_alg
rewriteEqEvidence
  [W] cobox_alf :: String ~ t_ajk
  t_ajk
  String
  Sym cobox_alg
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alg :: t_ajk
                                 ~ String [" a type equality [t_ajk]
                                                             ~
                                                             t_aj3 " Practium1.hs:21:5-51] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajk := String
  Coercion: t_ajk ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajk := String
setEvBind
  ev = cobox_alg
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajk
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
36[<C:0,F:0>] [W] cobox_alg :: t_ajk ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajm :: [Char]
                                ~ t_ajk [" a type equality [Char]
                                                           ~
                                                           t_ajk " Practium1.hs:21:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajm :: [Char]
                                 ~ t_ajk [" a type equality [Char]
                                                            ~
                                                            t_ajk " Practium1.hs:21:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajm :: [Char] ~ t_ajk [" a type equality [Char]
                                                     ~
                                                     t_ajk " Practium1.hs:21:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajk
can_eq_nc
  [W] cobox_ajm :: [Char] ~ t_ajk
  [Char]
  [Char]
  t_ajk
  t_ajk
canEqTyVar
  t_ajk
  [Char]
  Is-swapped
Following bound tyvar t_ajk = String
newWantedEvVar/cache miss [W] cobox_alh :: String ~ [Char]
setEvBind
  ev = cobox_ajm
  tm  = CO Sym cobox_alh
rewriteEqEvidence
  [W] cobox_ajm :: [Char] ~ t_ajk
  String
  [Char]
  Sym cobox_alh
canEqTyVar2
  t_ajk
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alh :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alh :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_ali :: Char ~ Char
setEvBind
  ev = cobox_alh
  tm  = CO [cobox_ali]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_ali :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ali
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajn :: [Char]
                                ~ t_ajk [" a type equality [Char]
                                                           ~
                                                           t_ajk " Practium1.hs:21:28-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajn :: [Char]
                                 ~ t_ajk [" a type equality [Char]
                                                            ~
                                                            t_ajk " Practium1.hs:21:28-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajn :: [Char] ~ t_ajk [" a type equality [Char]
                                                     ~
                                                     t_ajk " Practium1.hs:21:28-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajk
can_eq_nc
  [W] cobox_ajn :: [Char] ~ t_ajk
  [Char]
  [Char]
  t_ajk
  t_ajk
canEqTyVar
  t_ajk
  [Char]
  Is-swapped
Following bound tyvar t_ajk = String
newWantedEvVar/cache miss [W] cobox_alj :: String ~ [Char]
setEvBind
  ev = cobox_ajn
  tm  = CO Sym cobox_alj
rewriteEqEvidence
  [W] cobox_ajn :: [Char] ~ t_ajk
  String
  [Char]
  Sym cobox_alj
canEqTyVar2
  t_ajk
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alj :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alj :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alk :: Char ~ Char
setEvBind
  ev = cobox_alj
  tm  = CO [cobox_alk]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alk :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alk
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajo :: [Char]
                                ~ t_ajk [" a type equality [Char]
                                                           ~
                                                           t_ajk " Practium1.hs:21:40-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajo :: [Char]
                                 ~ t_ajk [" a type equality [Char]
                                                            ~
                                                            t_ajk " Practium1.hs:21:40-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajo :: [Char] ~ t_ajk [" a type equality [Char]
                                                     ~
                                                     t_ajk " Practium1.hs:21:40-50] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajk
can_eq_nc
  [W] cobox_ajo :: [Char] ~ t_ajk
  [Char]
  [Char]
  t_ajk
  t_ajk
canEqTyVar
  t_ajk
  [Char]
  Is-swapped
Following bound tyvar t_ajk = String
newWantedEvVar/cache miss [W] cobox_all :: String ~ [Char]
setEvBind
  ev = cobox_ajo
  tm  = CO Sym cobox_all
rewriteEqEvidence
  [W] cobox_ajo :: [Char] ~ t_ajk
  String
  [Char]
  Sym cobox_all
canEqTyVar2
  t_ajk
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_all :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_all :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alm :: Char ~ Char
setEvBind
  ev = cobox_all
  tm  = CO [cobox_alm]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alm :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alm
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajq :: [t_ajp]
                                ~ t_aj3 [" a type equality [t_ajp]
                                                           ~
                                                           t_aj3 " Practium1.hs:22:5-59] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajq :: [t_ajp]
                                 ~ t_aj3 [" a type equality [t_ajp]
                                                            ~
                                                            t_aj3 " Practium1.hs:22:5-59] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajq :: [t_ajp] ~ t_aj3 [" a type equality [t_ajp]
                                                      ~
                                                      t_aj3 " Practium1.hs:22:5-59] (CNonCanonical)
canEvNC:eq
  [t_ajp]
  t_aj3
can_eq_nc
  [W] cobox_ajq :: [t_ajp] ~ t_aj3
  [t_ajp]
  [t_ajp]
  t_aj3
  t_aj3
canEqTyVar
  t_aj3
  [t_ajp]
  Is-swapped
Following bound tyvar t_aj3 = [String]
newWantedEvVar/cache miss [W] cobox_aln :: [String] ~ [t_ajp]
setEvBind
  ev = cobox_ajq
  tm  = CO Sym cobox_aln
rewriteEqEvidence
  [W] cobox_ajq :: [t_ajp] ~ t_aj3
  [String]
  [t_ajp]
  Sym cobox_aln
canEqTyVar2
  t_aj3
  [t_ajp]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_aln :: [String] ~ [t_ajp]
  [String]
  [String]
  [t_ajp]
  [t_ajp]
newWantedEvVar/cache miss [W] cobox_alo :: String ~ t_ajp
setEvBind
  ev = cobox_aln
  tm  = CO [cobox_alo]_N
canEvNC:eq
  String
  t_ajp
can_eq_nc
  [W] cobox_alo :: String ~ t_ajp
  String
  String
  t_ajp
  t_ajp
can_eq_nc
  [W] cobox_alo :: String ~ t_ajp
  [Char]
  String
  t_ajp
  t_ajp
canEqTyVar
  t_ajp
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alp :: t_ajp ~ String
setEvBind
  ev = cobox_alo
  tm  = CO Sym cobox_alp
rewriteEqEvidence
  [W] cobox_alo :: String ~ t_ajp
  t_ajp
  String
  Sym cobox_alp
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alp :: t_ajp
                                 ~ String [" a type equality [t_ajp]
                                                             ~
                                                             t_aj3 " Practium1.hs:22:5-59] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajp := String
  Coercion: t_ajp ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajp := String
setEvBind
  ev = cobox_alp
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajp
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
40[<C:0,F:0>] [W] cobox_alp :: t_ajp ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajr :: [Char]
                                ~ t_ajp [" a type equality [Char]
                                                           ~
                                                           t_ajp " Practium1.hs:22:6-25] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajr :: [Char]
                                 ~ t_ajp [" a type equality [Char]
                                                            ~
                                                            t_ajp " Practium1.hs:22:6-25] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                     ~
                                                     t_ajp " Practium1.hs:22:6-25] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajp
can_eq_nc
  [W] cobox_ajr :: [Char] ~ t_ajp
  [Char]
  [Char]
  t_ajp
  t_ajp
canEqTyVar
  t_ajp
  [Char]
  Is-swapped
Following bound tyvar t_ajp = String
newWantedEvVar/cache miss [W] cobox_alq :: String ~ [Char]
setEvBind
  ev = cobox_ajr
  tm  = CO Sym cobox_alq
rewriteEqEvidence
  [W] cobox_ajr :: [Char] ~ t_ajp
  String
  [Char]
  Sym cobox_alq
canEqTyVar2
  t_ajp
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alq :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alq :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alr :: Char ~ Char
setEvBind
  ev = cobox_alq
  tm  = CO [cobox_alr]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alr :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alr
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajs :: [Char]
                                ~ t_ajp [" a type equality [Char]
                                                           ~
                                                           t_ajp " Practium1.hs:22:28-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajs :: [Char]
                                 ~ t_ajp [" a type equality [Char]
                                                            ~
                                                            t_ajp " Practium1.hs:22:28-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                     ~
                                                     t_ajp " Practium1.hs:22:28-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajp
can_eq_nc
  [W] cobox_ajs :: [Char] ~ t_ajp
  [Char]
  [Char]
  t_ajp
  t_ajp
canEqTyVar
  t_ajp
  [Char]
  Is-swapped
Following bound tyvar t_ajp = String
newWantedEvVar/cache miss [W] cobox_als :: String ~ [Char]
setEvBind
  ev = cobox_ajs
  tm  = CO Sym cobox_als
rewriteEqEvidence
  [W] cobox_ajs :: [Char] ~ t_ajp
  String
  [Char]
  Sym cobox_als
canEqTyVar2
  t_ajp
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_als :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_als :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alt :: Char ~ Char
setEvBind
  ev = cobox_als
  tm  = CO [cobox_alt]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alt :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alt
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajt :: [Char]
                                ~ t_ajp [" a type equality [Char]
                                                           ~
                                                           t_ajp " Practium1.hs:22:48-58] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajt :: [Char]
                                 ~ t_ajp [" a type equality [Char]
                                                            ~
                                                            t_ajp " Practium1.hs:22:48-58] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajt :: [Char] ~ t_ajp [" a type equality [Char]
                                                     ~
                                                     t_ajp " Practium1.hs:22:48-58] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajp
can_eq_nc
  [W] cobox_ajt :: [Char] ~ t_ajp
  [Char]
  [Char]
  t_ajp
  t_ajp
canEqTyVar
  t_ajp
  [Char]
  Is-swapped
Following bound tyvar t_ajp = String
newWantedEvVar/cache miss [W] cobox_alu :: String ~ [Char]
setEvBind
  ev = cobox_ajt
  tm  = CO Sym cobox_alu
rewriteEqEvidence
  [W] cobox_ajt :: [Char] ~ t_ajp
  String
  [Char]
  Sym cobox_alu
canEqTyVar2
  t_ajp
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alu :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alu :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alv :: Char ~ Char
setEvBind
  ev = cobox_alu
  tm  = CO [cobox_alv]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alv :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alv
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajv :: [t_aju]
                                ~ t_aj3 [" a type equality [t_aju]
                                                           ~
                                                           t_aj3 " Practium1.hs:23:5-66] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajv :: [t_aju]
                                 ~ t_aj3 [" a type equality [t_aju]
                                                            ~
                                                            t_aj3 " Practium1.hs:23:5-66] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajv :: [t_aju] ~ t_aj3 [" a type equality [t_aju]
                                                      ~
                                                      t_aj3 " Practium1.hs:23:5-66] (CNonCanonical)
canEvNC:eq
  [t_aju]
  t_aj3
can_eq_nc
  [W] cobox_ajv :: [t_aju] ~ t_aj3
  [t_aju]
  [t_aju]
  t_aj3
  t_aj3
canEqTyVar
  t_aj3
  [t_aju]
  Is-swapped
Following bound tyvar t_aj3 = [String]
newWantedEvVar/cache miss [W] cobox_alw :: [String] ~ [t_aju]
setEvBind
  ev = cobox_ajv
  tm  = CO Sym cobox_alw
rewriteEqEvidence
  [W] cobox_ajv :: [t_aju] ~ t_aj3
  [String]
  [t_aju]
  Sym cobox_alw
canEqTyVar2
  t_aj3
  [t_aju]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alw :: [String] ~ [t_aju]
  [String]
  [String]
  [t_aju]
  [t_aju]
newWantedEvVar/cache miss [W] cobox_alx :: String ~ t_aju
setEvBind
  ev = cobox_alw
  tm  = CO [cobox_alx]_N
canEvNC:eq
  String
  t_aju
can_eq_nc
  [W] cobox_alx :: String ~ t_aju
  String
  String
  t_aju
  t_aju
can_eq_nc
  [W] cobox_alx :: String ~ t_aju
  [Char]
  String
  t_aju
  t_aju
canEqTyVar
  t_aju
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aly :: t_aju ~ String
setEvBind
  ev = cobox_alx
  tm  = CO Sym cobox_aly
rewriteEqEvidence
  [W] cobox_alx :: String ~ t_aju
  t_aju
  String
  Sym cobox_aly
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aly :: t_aju
                                 ~ String [" a type equality [t_aju]
                                                             ~
                                                             t_aj3 " Practium1.hs:23:5-66] (CTyEqCan)
Sneaky unification:
  Unifies: t_aju := String
  Coercion: t_aju ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_aju := String
setEvBind
  ev = cobox_aly
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_aju
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
44[<C:0,F:0>] [W] cobox_aly :: t_aju ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajw :: [Char]
                                ~ t_aju [" a type equality [Char]
                                                           ~
                                                           t_aju " Practium1.hs:23:6-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajw :: [Char]
                                 ~ t_aju [" a type equality [Char]
                                                            ~
                                                            t_aju " Practium1.hs:23:6-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajw :: [Char] ~ t_aju [" a type equality [Char]
                                                     ~
                                                     t_aju " Practium1.hs:23:6-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aju
can_eq_nc
  [W] cobox_ajw :: [Char] ~ t_aju
  [Char]
  [Char]
  t_aju
  t_aju
canEqTyVar
  t_aju
  [Char]
  Is-swapped
Following bound tyvar t_aju = String
newWantedEvVar/cache miss [W] cobox_alz :: String ~ [Char]
setEvBind
  ev = cobox_ajw
  tm  = CO Sym cobox_alz
rewriteEqEvidence
  [W] cobox_ajw :: [Char] ~ t_aju
  String
  [Char]
  Sym cobox_alz
canEqTyVar2
  t_aju
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alz :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alz :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alA :: Char ~ Char
setEvBind
  ev = cobox_alz
  tm  = CO [cobox_alA]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alA :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alA
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajx :: [Char]
                                ~ t_aju [" a type equality [Char]
                                                           ~
                                                           t_aju " Practium1.hs:23:35-52] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajx :: [Char]
                                 ~ t_aju [" a type equality [Char]
                                                            ~
                                                            t_aju " Practium1.hs:23:35-52] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajx :: [Char] ~ t_aju [" a type equality [Char]
                                                     ~
                                                     t_aju " Practium1.hs:23:35-52] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aju
can_eq_nc
  [W] cobox_ajx :: [Char] ~ t_aju
  [Char]
  [Char]
  t_aju
  t_aju
canEqTyVar
  t_aju
  [Char]
  Is-swapped
Following bound tyvar t_aju = String
newWantedEvVar/cache miss [W] cobox_alB :: String ~ [Char]
setEvBind
  ev = cobox_ajx
  tm  = CO Sym cobox_alB
rewriteEqEvidence
  [W] cobox_ajx :: [Char] ~ t_aju
  String
  [Char]
  Sym cobox_alB
canEqTyVar2
  t_aju
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alB :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alB :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alC :: Char ~ Char
setEvBind
  ev = cobox_alB
  tm  = CO [cobox_alC]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alC :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alC
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajy :: [Char]
                                ~ t_aju [" a type equality [Char]
                                                           ~
                                                           t_aju " Practium1.hs:23:55-65] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajy :: [Char]
                                 ~ t_aju [" a type equality [Char]
                                                            ~
                                                            t_aju " Practium1.hs:23:55-65] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajy :: [Char] ~ t_aju [" a type equality [Char]
                                                     ~
                                                     t_aju " Practium1.hs:23:55-65] (CNonCanonical)
canEvNC:eq
  [Char]
  t_aju
can_eq_nc
  [W] cobox_ajy :: [Char] ~ t_aju
  [Char]
  [Char]
  t_aju
  t_aju
canEqTyVar
  t_aju
  [Char]
  Is-swapped
Following bound tyvar t_aju = String
newWantedEvVar/cache miss [W] cobox_alD :: String ~ [Char]
setEvBind
  ev = cobox_ajy
  tm  = CO Sym cobox_alD
rewriteEqEvidence
  [W] cobox_ajy :: [Char] ~ t_aju
  String
  [Char]
  Sym cobox_alD
canEqTyVar2
  t_aju
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alD :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alD :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alE :: Char ~ Char
setEvBind
  ev = cobox_alD
  tm  = CO [cobox_alE]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alE :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alE
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajA :: [t_ajz]
                                ~ t_aj3 [" a type equality [t_ajz]
                                                           ~
                                                           t_aj3 " Practium1.hs:24:5-63] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajA :: [t_ajz]
                                 ~ t_aj3 [" a type equality [t_ajz]
                                                            ~
                                                            t_aj3 " Practium1.hs:24:5-63] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajA :: [t_ajz] ~ t_aj3 [" a type equality [t_ajz]
                                                      ~
                                                      t_aj3 " Practium1.hs:24:5-63] (CNonCanonical)
canEvNC:eq
  [t_ajz]
  t_aj3
can_eq_nc
  [W] cobox_ajA :: [t_ajz] ~ t_aj3
  [t_ajz]
  [t_ajz]
  t_aj3
  t_aj3
canEqTyVar
  t_aj3
  [t_ajz]
  Is-swapped
Following bound tyvar t_aj3 = [String]
newWantedEvVar/cache miss [W] cobox_alF :: [String] ~ [t_ajz]
setEvBind
  ev = cobox_ajA
  tm  = CO Sym cobox_alF
rewriteEqEvidence
  [W] cobox_ajA :: [t_ajz] ~ t_aj3
  [String]
  [t_ajz]
  Sym cobox_alF
canEqTyVar2
  t_aj3
  [t_ajz]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alF :: [String] ~ [t_ajz]
  [String]
  [String]
  [t_ajz]
  [t_ajz]
newWantedEvVar/cache miss [W] cobox_alG :: String ~ t_ajz
setEvBind
  ev = cobox_alF
  tm  = CO [cobox_alG]_N
canEvNC:eq
  String
  t_ajz
can_eq_nc
  [W] cobox_alG :: String ~ t_ajz
  String
  String
  t_ajz
  t_ajz
can_eq_nc
  [W] cobox_alG :: String ~ t_ajz
  [Char]
  String
  t_ajz
  t_ajz
canEqTyVar
  t_ajz
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alH :: t_ajz ~ String
setEvBind
  ev = cobox_alG
  tm  = CO Sym cobox_alH
rewriteEqEvidence
  [W] cobox_alG :: String ~ t_ajz
  t_ajz
  String
  Sym cobox_alH
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alH :: t_ajz
                                 ~ String [" a type equality [t_ajz]
                                                             ~
                                                             t_aj3 " Practium1.hs:24:5-63] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajz := String
  Coercion: t_ajz ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajz := String
setEvBind
  ev = cobox_alH
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajz
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
48[<C:0,F:0>] [W] cobox_alH :: t_ajz ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajB :: [Char]
                                ~ t_ajz [" a type equality [Char]
                                                           ~
                                                           t_ajz " Practium1.hs:24:6-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajB :: [Char]
                                 ~ t_ajz [" a type equality [Char]
                                                            ~
                                                            t_ajz " Practium1.hs:24:6-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajB :: [Char] ~ t_ajz [" a type equality [Char]
                                                     ~
                                                     t_ajz " Practium1.hs:24:6-40] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajz
can_eq_nc
  [W] cobox_ajB :: [Char] ~ t_ajz
  [Char]
  [Char]
  t_ajz
  t_ajz
canEqTyVar
  t_ajz
  [Char]
  Is-swapped
Following bound tyvar t_ajz = String
newWantedEvVar/cache miss [W] cobox_alI :: String ~ [Char]
setEvBind
  ev = cobox_ajB
  tm  = CO Sym cobox_alI
rewriteEqEvidence
  [W] cobox_ajB :: [Char] ~ t_ajz
  String
  [Char]
  Sym cobox_alI
canEqTyVar2
  t_ajz
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alI :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alI :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alJ :: Char ~ Char
setEvBind
  ev = cobox_alI
  tm  = CO [cobox_alJ]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alJ :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alJ
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajC :: [Char]
                                ~ t_ajz [" a type equality [Char]
                                                           ~
                                                           t_ajz " Practium1.hs:24:43-50] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajC :: [Char]
                                 ~ t_ajz [" a type equality [Char]
                                                            ~
                                                            t_ajz " Practium1.hs:24:43-50] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajC :: [Char] ~ t_ajz [" a type equality [Char]
                                                     ~
                                                     t_ajz " Practium1.hs:24:43-50] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajz
can_eq_nc
  [W] cobox_ajC :: [Char] ~ t_ajz
  [Char]
  [Char]
  t_ajz
  t_ajz
canEqTyVar
  t_ajz
  [Char]
  Is-swapped
Following bound tyvar t_ajz = String
newWantedEvVar/cache miss [W] cobox_alK :: String ~ [Char]
setEvBind
  ev = cobox_ajC
  tm  = CO Sym cobox_alK
rewriteEqEvidence
  [W] cobox_ajC :: [Char] ~ t_ajz
  String
  [Char]
  Sym cobox_alK
canEqTyVar2
  t_ajz
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alK :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alK :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alL :: Char ~ Char
setEvBind
  ev = cobox_alK
  tm  = CO [cobox_alL]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alL :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alL
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajD :: [Char]
                                ~ t_ajz [" a type equality [Char]
                                                           ~
                                                           t_ajz " Practium1.hs:24:53-62] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajD :: [Char]
                                 ~ t_ajz [" a type equality [Char]
                                                            ~
                                                            t_ajz " Practium1.hs:24:53-62] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajD :: [Char] ~ t_ajz [" a type equality [Char]
                                                     ~
                                                     t_ajz " Practium1.hs:24:53-62] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajz
can_eq_nc
  [W] cobox_ajD :: [Char] ~ t_ajz
  [Char]
  [Char]
  t_ajz
  t_ajz
canEqTyVar
  t_ajz
  [Char]
  Is-swapped
Following bound tyvar t_ajz = String
newWantedEvVar/cache miss [W] cobox_alM :: String ~ [Char]
setEvBind
  ev = cobox_ajD
  tm  = CO Sym cobox_alM
rewriteEqEvidence
  [W] cobox_ajD :: [Char] ~ t_ajz
  String
  [Char]
  Sym cobox_alM
canEqTyVar2
  t_ajz
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alM :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alM :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alN :: Char ~ Char
setEvBind
  ev = cobox_alM
  tm  = CO [cobox_alN]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alN :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alN
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajG :: [t_ajF]
                                ~ t_aiv [" a type equality [t_ajF]
                                                           ~
                                                           t_aiv " Practium1.hs:(5,3)-(14,3)] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajG :: [t_ajF]
                                 ~ t_aiv [" a type equality [t_ajF]
                                                            ~
                                                            t_aiv " Practium1.hs:(5,3)-(14,3)] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajG :: [t_ajF] ~ t_aiv [" a type equality [t_ajF]
                                                      ~
                                                      t_aiv " Practium1.hs:(5,3)-(14,3)] (CNonCanonical)
canEvNC:eq
  [t_ajF]
  t_aiv
can_eq_nc
  [W] cobox_ajG :: [t_ajF] ~ t_aiv
  [t_ajF]
  [t_ajF]
  t_aiv
  t_aiv
canEqTyVar
  t_aiv
  [t_ajF]
  Is-swapped
Following bound tyvar t_aiv = Table
newWantedEvVar/cache miss [W] cobox_alO :: Table ~ [t_ajF]
setEvBind
  ev = cobox_ajG
  tm  = CO Sym cobox_alO
rewriteEqEvidence
  [W] cobox_ajG :: [t_ajF] ~ t_aiv
  Table
  [t_ajF]
  Sym cobox_alO
canEqTyVar2
  t_aiv
  [t_ajF]
  Is-swapped
  Table
  <Table>_N
can_eq_nc
  [W] cobox_alO :: Table ~ [t_ajF]
  Table
  Table
  [t_ajF]
  [t_ajF]
can_eq_nc
  [W] cobox_alO :: Table ~ [t_ajF]
  [[String]]
  Table
  [t_ajF]
  [t_ajF]
newWantedEvVar/cache miss [W] cobox_alP :: [String] ~ t_ajF
setEvBind
  ev = cobox_alO
  tm  = CO [cobox_alP]_N
canEvNC:eq
  [String]
  t_ajF
can_eq_nc
  [W] cobox_alP :: [String] ~ t_ajF
  [String]
  [String]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [String]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alQ :: t_ajF ~ [String]
setEvBind
  ev = cobox_alP
  tm  = CO Sym cobox_alQ
rewriteEqEvidence
  [W] cobox_alP :: [String] ~ t_ajF
  t_ajF
  [String]
  Sym cobox_alQ
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alQ :: t_ajF
                                 ~ [String] [" a type equality [t_ajF]
                                                               ~
                                                               t_aiv " Practium1.hs:(5,3)-(14,3)] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajF := [String]
  Coercion: t_ajF ~ [String]
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajF := [String]
setEvBind
  ev = cobox_alQ
  tm  = CO <[String]>_N
kickOutRewritable
  tv =  t_ajF
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
52[<C:0,F:0>] [W] cobox_alQ :: t_ajF
                               ~ [String]: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajI :: [t_ajH]
                                ~ t_ajF [" a type equality [t_ajH]
                                                           ~
                                                           t_ajF " Practium1.hs:5:5-40] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajI :: [t_ajH]
                                 ~ t_ajF [" a type equality [t_ajH]
                                                            ~
                                                            t_ajF " Practium1.hs:5:5-40] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajI :: [t_ajH] ~ t_ajF [" a type equality [t_ajH]
                                                      ~
                                                      t_ajF " Practium1.hs:5:5-40] (CNonCanonical)
canEvNC:eq
  [t_ajH]
  t_ajF
can_eq_nc
  [W] cobox_ajI :: [t_ajH] ~ t_ajF
  [t_ajH]
  [t_ajH]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_ajH]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_alR :: [String] ~ [t_ajH]
setEvBind
  ev = cobox_ajI
  tm  = CO Sym cobox_alR
rewriteEqEvidence
  [W] cobox_ajI :: [t_ajH] ~ t_ajF
  [String]
  [t_ajH]
  Sym cobox_alR
canEqTyVar2
  t_ajF
  [t_ajH]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alR :: [String] ~ [t_ajH]
  [String]
  [String]
  [t_ajH]
  [t_ajH]
newWantedEvVar/cache miss [W] cobox_alS :: String ~ t_ajH
setEvBind
  ev = cobox_alR
  tm  = CO [cobox_alS]_N
canEvNC:eq
  String
  t_ajH
can_eq_nc
  [W] cobox_alS :: String ~ t_ajH
  String
  String
  t_ajH
  t_ajH
can_eq_nc
  [W] cobox_alS :: String ~ t_ajH
  [Char]
  String
  t_ajH
  t_ajH
canEqTyVar
  t_ajH
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_alT :: t_ajH ~ String
setEvBind
  ev = cobox_alS
  tm  = CO Sym cobox_alT
rewriteEqEvidence
  [W] cobox_alS :: String ~ t_ajH
  t_ajH
  String
  Sym cobox_alT
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_alT :: t_ajH
                                 ~ String [" a type equality [t_ajH]
                                                             ~
                                                             t_ajF " Practium1.hs:5:5-40] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajH := String
  Coercion: t_ajH ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajH := String
setEvBind
  ev = cobox_alT
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajH
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
53[<C:0,F:0>] [W] cobox_alT :: t_ajH ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajJ :: [Char]
                                ~ t_ajH [" a type equality [Char]
                                                           ~
                                                           t_ajH " Practium1.hs:5:6-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajJ :: [Char]
                                 ~ t_ajH [" a type equality [Char]
                                                            ~
                                                            t_ajH " Practium1.hs:5:6-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajJ :: [Char] ~ t_ajH [" a type equality [Char]
                                                     ~
                                                     t_ajH " Practium1.hs:5:6-15] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajH
can_eq_nc
  [W] cobox_ajJ :: [Char] ~ t_ajH
  [Char]
  [Char]
  t_ajH
  t_ajH
canEqTyVar
  t_ajH
  [Char]
  Is-swapped
Following bound tyvar t_ajH = String
newWantedEvVar/cache miss [W] cobox_alU :: String ~ [Char]
setEvBind
  ev = cobox_ajJ
  tm  = CO Sym cobox_alU
rewriteEqEvidence
  [W] cobox_ajJ :: [Char] ~ t_ajH
  String
  [Char]
  Sym cobox_alU
canEqTyVar2
  t_ajH
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alU :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alU :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alV :: Char ~ Char
setEvBind
  ev = cobox_alU
  tm  = CO [cobox_alV]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alV :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alV
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajK :: [Char]
                                ~ t_ajH [" a type equality [Char]
                                                           ~
                                                           t_ajH " Practium1.hs:5:18-39] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajK :: [Char]
                                 ~ t_ajH [" a type equality [Char]
                                                            ~
                                                            t_ajH " Practium1.hs:5:18-39] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajK :: [Char] ~ t_ajH [" a type equality [Char]
                                                     ~
                                                     t_ajH " Practium1.hs:5:18-39] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajH
can_eq_nc
  [W] cobox_ajK :: [Char] ~ t_ajH
  [Char]
  [Char]
  t_ajH
  t_ajH
canEqTyVar
  t_ajH
  [Char]
  Is-swapped
Following bound tyvar t_ajH = String
newWantedEvVar/cache miss [W] cobox_alW :: String ~ [Char]
setEvBind
  ev = cobox_ajK
  tm  = CO Sym cobox_alW
rewriteEqEvidence
  [W] cobox_ajK :: [Char] ~ t_ajH
  String
  [Char]
  Sym cobox_alW
canEqTyVar2
  t_ajH
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_alW :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_alW :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_alX :: Char ~ Char
setEvBind
  ev = cobox_alW
  tm  = CO [cobox_alX]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_alX :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_alX
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajM :: [t_ajL]
                                ~ t_ajF [" a type equality [t_ajL]
                                                           ~
                                                           t_ajF " Practium1.hs:6:5-42] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajM :: [t_ajL]
                                 ~ t_ajF [" a type equality [t_ajL]
                                                            ~
                                                            t_ajF " Practium1.hs:6:5-42] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajM :: [t_ajL] ~ t_ajF [" a type equality [t_ajL]
                                                      ~
                                                      t_ajF " Practium1.hs:6:5-42] (CNonCanonical)
canEvNC:eq
  [t_ajL]
  t_ajF
can_eq_nc
  [W] cobox_ajM :: [t_ajL] ~ t_ajF
  [t_ajL]
  [t_ajL]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_ajL]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_alY :: [String] ~ [t_ajL]
setEvBind
  ev = cobox_ajM
  tm  = CO Sym cobox_alY
rewriteEqEvidence
  [W] cobox_ajM :: [t_ajL] ~ t_ajF
  [String]
  [t_ajL]
  Sym cobox_alY
canEqTyVar2
  t_ajF
  [t_ajL]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_alY :: [String] ~ [t_ajL]
  [String]
  [String]
  [t_ajL]
  [t_ajL]
newWantedEvVar/cache miss [W] cobox_alZ :: String ~ t_ajL
setEvBind
  ev = cobox_alY
  tm  = CO [cobox_alZ]_N
canEvNC:eq
  String
  t_ajL
can_eq_nc
  [W] cobox_alZ :: String ~ t_ajL
  String
  String
  t_ajL
  t_ajL
can_eq_nc
  [W] cobox_alZ :: String ~ t_ajL
  [Char]
  String
  t_ajL
  t_ajL
canEqTyVar
  t_ajL
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_am0 :: t_ajL ~ String
setEvBind
  ev = cobox_alZ
  tm  = CO Sym cobox_am0
rewriteEqEvidence
  [W] cobox_alZ :: String ~ t_ajL
  t_ajL
  String
  Sym cobox_am0
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_am0 :: t_ajL
                                 ~ String [" a type equality [t_ajL]
                                                             ~
                                                             t_ajF " Practium1.hs:6:5-42] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajL := String
  Coercion: t_ajL ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajL := String
setEvBind
  ev = cobox_am0
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajL
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
56[<C:0,F:0>] [W] cobox_am0 :: t_ajL ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajN :: [Char]
                                ~ t_ajL [" a type equality [Char]
                                                           ~
                                                           t_ajL " Practium1.hs:6:6-13] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajN :: [Char]
                                 ~ t_ajL [" a type equality [Char]
                                                            ~
                                                            t_ajL " Practium1.hs:6:6-13] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajN :: [Char] ~ t_ajL [" a type equality [Char]
                                                     ~
                                                     t_ajL " Practium1.hs:6:6-13] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajL
can_eq_nc
  [W] cobox_ajN :: [Char] ~ t_ajL
  [Char]
  [Char]
  t_ajL
  t_ajL
canEqTyVar
  t_ajL
  [Char]
  Is-swapped
Following bound tyvar t_ajL = String
newWantedEvVar/cache miss [W] cobox_am1 :: String ~ [Char]
setEvBind
  ev = cobox_ajN
  tm  = CO Sym cobox_am1
rewriteEqEvidence
  [W] cobox_ajN :: [Char] ~ t_ajL
  String
  [Char]
  Sym cobox_am1
canEqTyVar2
  t_ajL
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_am1 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_am1 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_am2 :: Char ~ Char
setEvBind
  ev = cobox_am1
  tm  = CO [cobox_am2]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_am2 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_am2
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajO :: [Char]
                                ~ t_ajL [" a type equality [Char]
                                                           ~
                                                           t_ajL " Practium1.hs:6:16-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajO :: [Char]
                                 ~ t_ajL [" a type equality [Char]
                                                            ~
                                                            t_ajL " Practium1.hs:6:16-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajO :: [Char] ~ t_ajL [" a type equality [Char]
                                                     ~
                                                     t_ajL " Practium1.hs:6:16-41] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajL
can_eq_nc
  [W] cobox_ajO :: [Char] ~ t_ajL
  [Char]
  [Char]
  t_ajL
  t_ajL
canEqTyVar
  t_ajL
  [Char]
  Is-swapped
Following bound tyvar t_ajL = String
newWantedEvVar/cache miss [W] cobox_am3 :: String ~ [Char]
setEvBind
  ev = cobox_ajO
  tm  = CO Sym cobox_am3
rewriteEqEvidence
  [W] cobox_ajO :: [Char] ~ t_ajL
  String
  [Char]
  Sym cobox_am3
canEqTyVar2
  t_ajL
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_am3 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_am3 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_am4 :: Char ~ Char
setEvBind
  ev = cobox_am3
  tm  = CO [cobox_am4]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_am4 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_am4
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajQ :: [t_ajP]
                                ~ t_ajF [" a type equality [t_ajP]
                                                           ~
                                                           t_ajF " Practium1.hs:7:5-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajQ :: [t_ajP]
                                 ~ t_ajF [" a type equality [t_ajP]
                                                            ~
                                                            t_ajF " Practium1.hs:7:5-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajQ :: [t_ajP] ~ t_ajF [" a type equality [t_ajP]
                                                      ~
                                                      t_ajF " Practium1.hs:7:5-33] (CNonCanonical)
canEvNC:eq
  [t_ajP]
  t_ajF
can_eq_nc
  [W] cobox_ajQ :: [t_ajP] ~ t_ajF
  [t_ajP]
  [t_ajP]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_ajP]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_am5 :: [String] ~ [t_ajP]
setEvBind
  ev = cobox_ajQ
  tm  = CO Sym cobox_am5
rewriteEqEvidence
  [W] cobox_ajQ :: [t_ajP] ~ t_ajF
  [String]
  [t_ajP]
  Sym cobox_am5
canEqTyVar2
  t_ajF
  [t_ajP]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_am5 :: [String] ~ [t_ajP]
  [String]
  [String]
  [t_ajP]
  [t_ajP]
newWantedEvVar/cache miss [W] cobox_am6 :: String ~ t_ajP
setEvBind
  ev = cobox_am5
  tm  = CO [cobox_am6]_N
canEvNC:eq
  String
  t_ajP
can_eq_nc
  [W] cobox_am6 :: String ~ t_ajP
  String
  String
  t_ajP
  t_ajP
can_eq_nc
  [W] cobox_am6 :: String ~ t_ajP
  [Char]
  String
  t_ajP
  t_ajP
canEqTyVar
  t_ajP
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_am7 :: t_ajP ~ String
setEvBind
  ev = cobox_am6
  tm  = CO Sym cobox_am7
rewriteEqEvidence
  [W] cobox_am6 :: String ~ t_ajP
  t_ajP
  String
  Sym cobox_am7
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_am7 :: t_ajP
                                 ~ String [" a type equality [t_ajP]
                                                             ~
                                                             t_ajF " Practium1.hs:7:5-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajP := String
  Coercion: t_ajP ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajP := String
setEvBind
  ev = cobox_am7
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajP
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
59[<C:0,F:0>] [W] cobox_am7 :: t_ajP ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajR :: [Char]
                                ~ t_ajP [" a type equality [Char]
                                                           ~
                                                           t_ajP " Practium1.hs:7:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajR :: [Char]
                                 ~ t_ajP [" a type equality [Char]
                                                            ~
                                                            t_ajP " Practium1.hs:7:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajR :: [Char] ~ t_ajP [" a type equality [Char]
                                                     ~
                                                     t_ajP " Practium1.hs:7:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajP
can_eq_nc
  [W] cobox_ajR :: [Char] ~ t_ajP
  [Char]
  [Char]
  t_ajP
  t_ajP
canEqTyVar
  t_ajP
  [Char]
  Is-swapped
Following bound tyvar t_ajP = String
newWantedEvVar/cache miss [W] cobox_am8 :: String ~ [Char]
setEvBind
  ev = cobox_ajR
  tm  = CO Sym cobox_am8
rewriteEqEvidence
  [W] cobox_ajR :: [Char] ~ t_ajP
  String
  [Char]
  Sym cobox_am8
canEqTyVar2
  t_ajP
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_am8 :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_am8 :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_am9 :: Char ~ Char
setEvBind
  ev = cobox_am8
  tm  = CO [cobox_am9]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_am9 :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_am9
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajS :: [Char]
                                ~ t_ajP [" a type equality [Char]
                                                           ~
                                                           t_ajP " Practium1.hs:7:13-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajS :: [Char]
                                 ~ t_ajP [" a type equality [Char]
                                                            ~
                                                            t_ajP " Practium1.hs:7:13-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajS :: [Char] ~ t_ajP [" a type equality [Char]
                                                     ~
                                                     t_ajP " Practium1.hs:7:13-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajP
can_eq_nc
  [W] cobox_ajS :: [Char] ~ t_ajP
  [Char]
  [Char]
  t_ajP
  t_ajP
canEqTyVar
  t_ajP
  [Char]
  Is-swapped
Following bound tyvar t_ajP = String
newWantedEvVar/cache miss [W] cobox_ama :: String ~ [Char]
setEvBind
  ev = cobox_ajS
  tm  = CO Sym cobox_ama
rewriteEqEvidence
  [W] cobox_ajS :: [Char] ~ t_ajP
  String
  [Char]
  Sym cobox_ama
canEqTyVar2
  t_ajP
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_ama :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_ama :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amb :: Char ~ Char
setEvBind
  ev = cobox_ama
  tm  = CO [cobox_amb]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amb :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amb
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajU :: [t_ajT]
                                ~ t_ajF [" a type equality [t_ajT]
                                                           ~
                                                           t_ajF " Practium1.hs:8:5-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajU :: [t_ajT]
                                 ~ t_ajF [" a type equality [t_ajT]
                                                            ~
                                                            t_ajF " Practium1.hs:8:5-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajU :: [t_ajT] ~ t_ajF [" a type equality [t_ajT]
                                                      ~
                                                      t_ajF " Practium1.hs:8:5-33] (CNonCanonical)
canEvNC:eq
  [t_ajT]
  t_ajF
can_eq_nc
  [W] cobox_ajU :: [t_ajT] ~ t_ajF
  [t_ajT]
  [t_ajT]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_ajT]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_amc :: [String] ~ [t_ajT]
setEvBind
  ev = cobox_ajU
  tm  = CO Sym cobox_amc
rewriteEqEvidence
  [W] cobox_ajU :: [t_ajT] ~ t_ajF
  [String]
  [t_ajT]
  Sym cobox_amc
canEqTyVar2
  t_ajF
  [t_ajT]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_amc :: [String] ~ [t_ajT]
  [String]
  [String]
  [t_ajT]
  [t_ajT]
newWantedEvVar/cache miss [W] cobox_amd :: String ~ t_ajT
setEvBind
  ev = cobox_amc
  tm  = CO [cobox_amd]_N
canEvNC:eq
  String
  t_ajT
can_eq_nc
  [W] cobox_amd :: String ~ t_ajT
  String
  String
  t_ajT
  t_ajT
can_eq_nc
  [W] cobox_amd :: String ~ t_ajT
  [Char]
  String
  t_ajT
  t_ajT
canEqTyVar
  t_ajT
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ame :: t_ajT ~ String
setEvBind
  ev = cobox_amd
  tm  = CO Sym cobox_ame
rewriteEqEvidence
  [W] cobox_amd :: String ~ t_ajT
  t_ajT
  String
  Sym cobox_ame
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ame :: t_ajT
                                 ~ String [" a type equality [t_ajT]
                                                             ~
                                                             t_ajF " Practium1.hs:8:5-33] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajT := String
  Coercion: t_ajT ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajT := String
setEvBind
  ev = cobox_ame
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajT
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
62[<C:0,F:0>] [W] cobox_ame :: t_ajT ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajV :: [Char]
                                ~ t_ajT [" a type equality [Char]
                                                           ~
                                                           t_ajT " Practium1.hs:8:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajV :: [Char]
                                 ~ t_ajT [" a type equality [Char]
                                                            ~
                                                            t_ajT " Practium1.hs:8:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajV :: [Char] ~ t_ajT [" a type equality [Char]
                                                     ~
                                                     t_ajT " Practium1.hs:8:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajT
can_eq_nc
  [W] cobox_ajV :: [Char] ~ t_ajT
  [Char]
  [Char]
  t_ajT
  t_ajT
canEqTyVar
  t_ajT
  [Char]
  Is-swapped
Following bound tyvar t_ajT = String
newWantedEvVar/cache miss [W] cobox_amf :: String ~ [Char]
setEvBind
  ev = cobox_ajV
  tm  = CO Sym cobox_amf
rewriteEqEvidence
  [W] cobox_ajV :: [Char] ~ t_ajT
  String
  [Char]
  Sym cobox_amf
canEqTyVar2
  t_ajT
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amf :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amf :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amg :: Char ~ Char
setEvBind
  ev = cobox_amf
  tm  = CO [cobox_amg]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amg :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amg
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajW :: [Char]
                                ~ t_ajT [" a type equality [Char]
                                                           ~
                                                           t_ajT " Practium1.hs:8:13-32] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajW :: [Char]
                                 ~ t_ajT [" a type equality [Char]
                                                            ~
                                                            t_ajT " Practium1.hs:8:13-32] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajW :: [Char] ~ t_ajT [" a type equality [Char]
                                                     ~
                                                     t_ajT " Practium1.hs:8:13-32] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajT
can_eq_nc
  [W] cobox_ajW :: [Char] ~ t_ajT
  [Char]
  [Char]
  t_ajT
  t_ajT
canEqTyVar
  t_ajT
  [Char]
  Is-swapped
Following bound tyvar t_ajT = String
newWantedEvVar/cache miss [W] cobox_amh :: String ~ [Char]
setEvBind
  ev = cobox_ajW
  tm  = CO Sym cobox_amh
rewriteEqEvidence
  [W] cobox_ajW :: [Char] ~ t_ajT
  String
  [Char]
  Sym cobox_amh
canEqTyVar2
  t_ajT
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amh :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amh :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_ami :: Char ~ Char
setEvBind
  ev = cobox_amh
  tm  = CO [cobox_ami]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_ami :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_ami
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajY :: [t_ajX]
                                ~ t_ajF [" a type equality [t_ajX]
                                                           ~
                                                           t_ajF " Practium1.hs:9:5-34] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajY :: [t_ajX]
                                 ~ t_ajF [" a type equality [t_ajX]
                                                            ~
                                                            t_ajF " Practium1.hs:9:5-34] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajY :: [t_ajX] ~ t_ajF [" a type equality [t_ajX]
                                                      ~
                                                      t_ajF " Practium1.hs:9:5-34] (CNonCanonical)
canEvNC:eq
  [t_ajX]
  t_ajF
can_eq_nc
  [W] cobox_ajY :: [t_ajX] ~ t_ajF
  [t_ajX]
  [t_ajX]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_ajX]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_amj :: [String] ~ [t_ajX]
setEvBind
  ev = cobox_ajY
  tm  = CO Sym cobox_amj
rewriteEqEvidence
  [W] cobox_ajY :: [t_ajX] ~ t_ajF
  [String]
  [t_ajX]
  Sym cobox_amj
canEqTyVar2
  t_ajF
  [t_ajX]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_amj :: [String] ~ [t_ajX]
  [String]
  [String]
  [t_ajX]
  [t_ajX]
newWantedEvVar/cache miss [W] cobox_amk :: String ~ t_ajX
setEvBind
  ev = cobox_amj
  tm  = CO [cobox_amk]_N
canEvNC:eq
  String
  t_ajX
can_eq_nc
  [W] cobox_amk :: String ~ t_ajX
  String
  String
  t_ajX
  t_ajX
can_eq_nc
  [W] cobox_amk :: String ~ t_ajX
  [Char]
  String
  t_ajX
  t_ajX
canEqTyVar
  t_ajX
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_aml :: t_ajX ~ String
setEvBind
  ev = cobox_amk
  tm  = CO Sym cobox_aml
rewriteEqEvidence
  [W] cobox_amk :: String ~ t_ajX
  t_ajX
  String
  Sym cobox_aml
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_aml :: t_ajX
                                 ~ String [" a type equality [t_ajX]
                                                             ~
                                                             t_ajF " Practium1.hs:9:5-34] (CTyEqCan)
Sneaky unification:
  Unifies: t_ajX := String
  Coercion: t_ajX ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ajX := String
setEvBind
  ev = cobox_aml
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ajX
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
65[<C:0,F:0>] [W] cobox_aml :: t_ajX ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ajZ :: [Char]
                                ~ t_ajX [" a type equality [Char]
                                                           ~
                                                           t_ajX " Practium1.hs:9:6-11] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ajZ :: [Char]
                                 ~ t_ajX [" a type equality [Char]
                                                            ~
                                                            t_ajX " Practium1.hs:9:6-11] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ajZ :: [Char] ~ t_ajX [" a type equality [Char]
                                                     ~
                                                     t_ajX " Practium1.hs:9:6-11] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajX
can_eq_nc
  [W] cobox_ajZ :: [Char] ~ t_ajX
  [Char]
  [Char]
  t_ajX
  t_ajX
canEqTyVar
  t_ajX
  [Char]
  Is-swapped
Following bound tyvar t_ajX = String
newWantedEvVar/cache miss [W] cobox_amm :: String ~ [Char]
setEvBind
  ev = cobox_ajZ
  tm  = CO Sym cobox_amm
rewriteEqEvidence
  [W] cobox_ajZ :: [Char] ~ t_ajX
  String
  [Char]
  Sym cobox_amm
canEqTyVar2
  t_ajX
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amm :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amm :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amn :: Char ~ Char
setEvBind
  ev = cobox_amm
  tm  = CO [cobox_amn]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amn :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amn
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ak0 :: [Char]
                                ~ t_ajX [" a type equality [Char]
                                                           ~
                                                           t_ajX " Practium1.hs:9:14-33] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ak0 :: [Char]
                                 ~ t_ajX [" a type equality [Char]
                                                            ~
                                                            t_ajX " Practium1.hs:9:14-33] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ak0 :: [Char] ~ t_ajX [" a type equality [Char]
                                                     ~
                                                     t_ajX " Practium1.hs:9:14-33] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ajX
can_eq_nc
  [W] cobox_ak0 :: [Char] ~ t_ajX
  [Char]
  [Char]
  t_ajX
  t_ajX
canEqTyVar
  t_ajX
  [Char]
  Is-swapped
Following bound tyvar t_ajX = String
newWantedEvVar/cache miss [W] cobox_amo :: String ~ [Char]
setEvBind
  ev = cobox_ak0
  tm  = CO Sym cobox_amo
rewriteEqEvidence
  [W] cobox_ak0 :: [Char] ~ t_ajX
  String
  [Char]
  Sym cobox_amo
canEqTyVar2
  t_ajX
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amo :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amo :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amp :: Char ~ Char
setEvBind
  ev = cobox_amo
  tm  = CO [cobox_amp]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amp :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amp
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ak2 :: [t_ak1]
                                ~ t_ajF [" a type equality [t_ak1]
                                                           ~
                                                           t_ajF " Practium1.hs:10:5-38] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ak2 :: [t_ak1]
                                 ~ t_ajF [" a type equality [t_ak1]
                                                            ~
                                                            t_ajF " Practium1.hs:10:5-38] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ak2 :: [t_ak1] ~ t_ajF [" a type equality [t_ak1]
                                                      ~
                                                      t_ajF " Practium1.hs:10:5-38] (CNonCanonical)
canEvNC:eq
  [t_ak1]
  t_ajF
can_eq_nc
  [W] cobox_ak2 :: [t_ak1] ~ t_ajF
  [t_ak1]
  [t_ak1]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_ak1]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_amq :: [String] ~ [t_ak1]
setEvBind
  ev = cobox_ak2
  tm  = CO Sym cobox_amq
rewriteEqEvidence
  [W] cobox_ak2 :: [t_ak1] ~ t_ajF
  [String]
  [t_ak1]
  Sym cobox_amq
canEqTyVar2
  t_ajF
  [t_ak1]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_amq :: [String] ~ [t_ak1]
  [String]
  [String]
  [t_ak1]
  [t_ak1]
newWantedEvVar/cache miss [W] cobox_amr :: String ~ t_ak1
setEvBind
  ev = cobox_amq
  tm  = CO [cobox_amr]_N
canEvNC:eq
  String
  t_ak1
can_eq_nc
  [W] cobox_amr :: String ~ t_ak1
  String
  String
  t_ak1
  t_ak1
can_eq_nc
  [W] cobox_amr :: String ~ t_ak1
  [Char]
  String
  t_ak1
  t_ak1
canEqTyVar
  t_ak1
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_ams :: t_ak1 ~ String
setEvBind
  ev = cobox_amr
  tm  = CO Sym cobox_ams
rewriteEqEvidence
  [W] cobox_amr :: String ~ t_ak1
  t_ak1
  String
  Sym cobox_ams
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_ams :: t_ak1
                                 ~ String [" a type equality [t_ak1]
                                                             ~
                                                             t_ajF " Practium1.hs:10:5-38] (CTyEqCan)
Sneaky unification:
  Unifies: t_ak1 := String
  Coercion: t_ak1 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ak1 := String
setEvBind
  ev = cobox_ams
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ak1
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
68[<C:0,F:0>] [W] cobox_ams :: t_ak1 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ak3 :: [Char]
                                ~ t_ak1 [" a type equality [Char]
                                                           ~
                                                           t_ak1 " Practium1.hs:10:6-15] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ak3 :: [Char]
                                 ~ t_ak1 [" a type equality [Char]
                                                            ~
                                                            t_ak1 " Practium1.hs:10:6-15] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ak3 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                     ~
                                                     t_ak1 " Practium1.hs:10:6-15] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ak1
can_eq_nc
  [W] cobox_ak3 :: [Char] ~ t_ak1
  [Char]
  [Char]
  t_ak1
  t_ak1
canEqTyVar
  t_ak1
  [Char]
  Is-swapped
Following bound tyvar t_ak1 = String
newWantedEvVar/cache miss [W] cobox_amt :: String ~ [Char]
setEvBind
  ev = cobox_ak3
  tm  = CO Sym cobox_amt
rewriteEqEvidence
  [W] cobox_ak3 :: [Char] ~ t_ak1
  String
  [Char]
  Sym cobox_amt
canEqTyVar2
  t_ak1
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amt :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amt :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amu :: Char ~ Char
setEvBind
  ev = cobox_amt
  tm  = CO [cobox_amu]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amu :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amu
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ak4 :: [Char]
                                ~ t_ak1 [" a type equality [Char]
                                                           ~
                                                           t_ak1 " Practium1.hs:10:18-37] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ak4 :: [Char]
                                 ~ t_ak1 [" a type equality [Char]
                                                            ~
                                                            t_ak1 " Practium1.hs:10:18-37] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ak4 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                     ~
                                                     t_ak1 " Practium1.hs:10:18-37] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ak1
can_eq_nc
  [W] cobox_ak4 :: [Char] ~ t_ak1
  [Char]
  [Char]
  t_ak1
  t_ak1
canEqTyVar
  t_ak1
  [Char]
  Is-swapped
Following bound tyvar t_ak1 = String
newWantedEvVar/cache miss [W] cobox_amv :: String ~ [Char]
setEvBind
  ev = cobox_ak4
  tm  = CO Sym cobox_amv
rewriteEqEvidence
  [W] cobox_ak4 :: [Char] ~ t_ak1
  String
  [Char]
  Sym cobox_amv
canEqTyVar2
  t_ak1
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amv :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amv :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amw :: Char ~ Char
setEvBind
  ev = cobox_amv
  tm  = CO [cobox_amw]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amw :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amw
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ak6 :: [t_ak5]
                                ~ t_ajF [" a type equality [t_ak5]
                                                           ~
                                                           t_ajF " Practium1.hs:11:5-46] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ak6 :: [t_ak5]
                                 ~ t_ajF [" a type equality [t_ak5]
                                                            ~
                                                            t_ajF " Practium1.hs:11:5-46] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ak6 :: [t_ak5] ~ t_ajF [" a type equality [t_ak5]
                                                      ~
                                                      t_ajF " Practium1.hs:11:5-46] (CNonCanonical)
canEvNC:eq
  [t_ak5]
  t_ajF
can_eq_nc
  [W] cobox_ak6 :: [t_ak5] ~ t_ajF
  [t_ak5]
  [t_ak5]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_ak5]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_amx :: [String] ~ [t_ak5]
setEvBind
  ev = cobox_ak6
  tm  = CO Sym cobox_amx
rewriteEqEvidence
  [W] cobox_ak6 :: [t_ak5] ~ t_ajF
  [String]
  [t_ak5]
  Sym cobox_amx
canEqTyVar2
  t_ajF
  [t_ak5]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_amx :: [String] ~ [t_ak5]
  [String]
  [String]
  [t_ak5]
  [t_ak5]
newWantedEvVar/cache miss [W] cobox_amy :: String ~ t_ak5
setEvBind
  ev = cobox_amx
  tm  = CO [cobox_amy]_N
canEvNC:eq
  String
  t_ak5
can_eq_nc
  [W] cobox_amy :: String ~ t_ak5
  String
  String
  t_ak5
  t_ak5
can_eq_nc
  [W] cobox_amy :: String ~ t_ak5
  [Char]
  String
  t_ak5
  t_ak5
canEqTyVar
  t_ak5
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_amz :: t_ak5 ~ String
setEvBind
  ev = cobox_amy
  tm  = CO Sym cobox_amz
rewriteEqEvidence
  [W] cobox_amy :: String ~ t_ak5
  t_ak5
  String
  Sym cobox_amz
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_amz :: t_ak5
                                 ~ String [" a type equality [t_ak5]
                                                             ~
                                                             t_ajF " Practium1.hs:11:5-46] (CTyEqCan)
Sneaky unification:
  Unifies: t_ak5 := String
  Coercion: t_ak5 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ak5 := String
setEvBind
  ev = cobox_amz
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ak5
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
71[<C:0,F:0>] [W] cobox_amz :: t_ak5 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ak7 :: [Char]
                                ~ t_ak5 [" a type equality [Char]
                                                           ~
                                                           t_ak5 " Practium1.hs:11:6-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ak7 :: [Char]
                                 ~ t_ak5 [" a type equality [Char]
                                                            ~
                                                            t_ak5 " Practium1.hs:11:6-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ak7 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                     ~
                                                     t_ak5 " Practium1.hs:11:6-16] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ak5
can_eq_nc
  [W] cobox_ak7 :: [Char] ~ t_ak5
  [Char]
  [Char]
  t_ak5
  t_ak5
canEqTyVar
  t_ak5
  [Char]
  Is-swapped
Following bound tyvar t_ak5 = String
newWantedEvVar/cache miss [W] cobox_amA :: String ~ [Char]
setEvBind
  ev = cobox_ak7
  tm  = CO Sym cobox_amA
rewriteEqEvidence
  [W] cobox_ak7 :: [Char] ~ t_ak5
  String
  [Char]
  Sym cobox_amA
canEqTyVar2
  t_ak5
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amA :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amA :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amB :: Char ~ Char
setEvBind
  ev = cobox_amA
  tm  = CO [cobox_amB]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amB :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amB
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ak8 :: [Char]
                                ~ t_ak5 [" a type equality [Char]
                                                           ~
                                                           t_ak5 " Practium1.hs:11:19-45] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ak8 :: [Char]
                                 ~ t_ak5 [" a type equality [Char]
                                                            ~
                                                            t_ak5 " Practium1.hs:11:19-45] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ak8 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                     ~
                                                     t_ak5 " Practium1.hs:11:19-45] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ak5
can_eq_nc
  [W] cobox_ak8 :: [Char] ~ t_ak5
  [Char]
  [Char]
  t_ak5
  t_ak5
canEqTyVar
  t_ak5
  [Char]
  Is-swapped
Following bound tyvar t_ak5 = String
newWantedEvVar/cache miss [W] cobox_amC :: String ~ [Char]
setEvBind
  ev = cobox_ak8
  tm  = CO Sym cobox_amC
rewriteEqEvidence
  [W] cobox_ak8 :: [Char] ~ t_ak5
  String
  [Char]
  Sym cobox_amC
canEqTyVar2
  t_ak5
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amC :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amC :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amD :: Char ~ Char
setEvBind
  ev = cobox_amC
  tm  = CO [cobox_amD]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amD :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amD
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aka :: [t_ak9]
                                ~ t_ajF [" a type equality [t_ak9]
                                                           ~
                                                           t_ajF " Practium1.hs:12:5-54] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aka :: [t_ak9]
                                 ~ t_ajF [" a type equality [t_ak9]
                                                            ~
                                                            t_ajF " Practium1.hs:12:5-54] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aka :: [t_ak9] ~ t_ajF [" a type equality [t_ak9]
                                                      ~
                                                      t_ajF " Practium1.hs:12:5-54] (CNonCanonical)
canEvNC:eq
  [t_ak9]
  t_ajF
can_eq_nc
  [W] cobox_aka :: [t_ak9] ~ t_ajF
  [t_ak9]
  [t_ak9]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_ak9]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_amE :: [String] ~ [t_ak9]
setEvBind
  ev = cobox_aka
  tm  = CO Sym cobox_amE
rewriteEqEvidence
  [W] cobox_aka :: [t_ak9] ~ t_ajF
  [String]
  [t_ak9]
  Sym cobox_amE
canEqTyVar2
  t_ajF
  [t_ak9]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_amE :: [String] ~ [t_ak9]
  [String]
  [String]
  [t_ak9]
  [t_ak9]
newWantedEvVar/cache miss [W] cobox_amF :: String ~ t_ak9
setEvBind
  ev = cobox_amE
  tm  = CO [cobox_amF]_N
canEvNC:eq
  String
  t_ak9
can_eq_nc
  [W] cobox_amF :: String ~ t_ak9
  String
  String
  t_ak9
  t_ak9
can_eq_nc
  [W] cobox_amF :: String ~ t_ak9
  [Char]
  String
  t_ak9
  t_ak9
canEqTyVar
  t_ak9
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_amG :: t_ak9 ~ String
setEvBind
  ev = cobox_amF
  tm  = CO Sym cobox_amG
rewriteEqEvidence
  [W] cobox_amF :: String ~ t_ak9
  t_ak9
  String
  Sym cobox_amG
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_amG :: t_ak9
                                 ~ String [" a type equality [t_ak9]
                                                             ~
                                                             t_ajF " Practium1.hs:12:5-54] (CTyEqCan)
Sneaky unification:
  Unifies: t_ak9 := String
  Coercion: t_ak9 ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_ak9 := String
setEvBind
  ev = cobox_amG
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_ak9
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
74[<C:0,F:0>] [W] cobox_amG :: t_ak9 ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_akb :: [Char]
                                ~ t_ak9 [" a type equality [Char]
                                                           ~
                                                           t_ak9 " Practium1.hs:12:6-16] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_akb :: [Char]
                                 ~ t_ak9 [" a type equality [Char]
                                                            ~
                                                            t_ak9 " Practium1.hs:12:6-16] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_akb :: [Char] ~ t_ak9 [" a type equality [Char]
                                                     ~
                                                     t_ak9 " Practium1.hs:12:6-16] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ak9
can_eq_nc
  [W] cobox_akb :: [Char] ~ t_ak9
  [Char]
  [Char]
  t_ak9
  t_ak9
canEqTyVar
  t_ak9
  [Char]
  Is-swapped
Following bound tyvar t_ak9 = String
newWantedEvVar/cache miss [W] cobox_amH :: String ~ [Char]
setEvBind
  ev = cobox_akb
  tm  = CO Sym cobox_amH
rewriteEqEvidence
  [W] cobox_akb :: [Char] ~ t_ak9
  String
  [Char]
  Sym cobox_amH
canEqTyVar2
  t_ak9
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amH :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amH :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amI :: Char ~ Char
setEvBind
  ev = cobox_amH
  tm  = CO [cobox_amI]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amI :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amI
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_akc :: [Char]
                                ~ t_ak9 [" a type equality [Char]
                                                           ~
                                                           t_ak9 " Practium1.hs:12:19-53] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_akc :: [Char]
                                 ~ t_ak9 [" a type equality [Char]
                                                            ~
                                                            t_ak9 " Practium1.hs:12:19-53] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_akc :: [Char] ~ t_ak9 [" a type equality [Char]
                                                     ~
                                                     t_ak9 " Practium1.hs:12:19-53] (CNonCanonical)
canEvNC:eq
  [Char]
  t_ak9
can_eq_nc
  [W] cobox_akc :: [Char] ~ t_ak9
  [Char]
  [Char]
  t_ak9
  t_ak9
canEqTyVar
  t_ak9
  [Char]
  Is-swapped
Following bound tyvar t_ak9 = String
newWantedEvVar/cache miss [W] cobox_amJ :: String ~ [Char]
setEvBind
  ev = cobox_akc
  tm  = CO Sym cobox_amJ
rewriteEqEvidence
  [W] cobox_akc :: [Char] ~ t_ak9
  String
  [Char]
  Sym cobox_amJ
canEqTyVar2
  t_ak9
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amJ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amJ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amK :: Char ~ Char
setEvBind
  ev = cobox_amJ
  tm  = CO [cobox_amK]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amK :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amK
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_ake :: [t_akd]
                                ~ t_ajF [" a type equality [t_akd]
                                                           ~
                                                           t_ajF " Practium1.hs:13:5-48] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_ake :: [t_akd]
                                 ~ t_ajF [" a type equality [t_akd]
                                                            ~
                                                            t_ajF " Practium1.hs:13:5-48] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_ake :: [t_akd] ~ t_ajF [" a type equality [t_akd]
                                                      ~
                                                      t_ajF " Practium1.hs:13:5-48] (CNonCanonical)
canEvNC:eq
  [t_akd]
  t_ajF
can_eq_nc
  [W] cobox_ake :: [t_akd] ~ t_ajF
  [t_akd]
  [t_akd]
  t_ajF
  t_ajF
canEqTyVar
  t_ajF
  [t_akd]
  Is-swapped
Following bound tyvar t_ajF = [String]
newWantedEvVar/cache miss [W] cobox_amL :: [String] ~ [t_akd]
setEvBind
  ev = cobox_ake
  tm  = CO Sym cobox_amL
rewriteEqEvidence
  [W] cobox_ake :: [t_akd] ~ t_ajF
  [String]
  [t_akd]
  Sym cobox_amL
canEqTyVar2
  t_ajF
  [t_akd]
  Is-swapped
  [String]
  <[String]>_N
can_eq_nc
  [W] cobox_amL :: [String] ~ [t_akd]
  [String]
  [String]
  [t_akd]
  [t_akd]
newWantedEvVar/cache miss [W] cobox_amM :: String ~ t_akd
setEvBind
  ev = cobox_amL
  tm  = CO [cobox_amM]_N
canEvNC:eq
  String
  t_akd
can_eq_nc
  [W] cobox_amM :: String ~ t_akd
  String
  String
  t_akd
  t_akd
can_eq_nc
  [W] cobox_amM :: String ~ t_akd
  [Char]
  String
  t_akd
  t_akd
canEqTyVar
  t_akd
  [Char]
  Is-swapped
newWantedEvVar/cache miss [W] cobox_amN :: t_akd ~ String
setEvBind
  ev = cobox_amM
  tm  = CO Sym cobox_amN
rewriteEqEvidence
  [W] cobox_amM :: String ~ t_akd
  t_akd
  String
  Sym cobox_amN
end stage canonicalization }
runStage interact with inerts {
  workitem   =  [W] cobox_amN :: t_akd
                                 ~ String [" a type equality [t_akd]
                                                             ~
                                                             t_ajF " Practium1.hs:13:5-48] (CTyEqCan)
Sneaky unification:
  Unifies: t_akd := String
  Coercion: t_akd ~ String
  Left Kind is: *
  Right Kind is: *
setWantedTyBind t_akd := String
setEvBind
  ev = cobox_amN
  tm  = CO <String>_N
kickOutRewritable
  tv =  t_akd
  Kicked out = WorkList (eqs)   =  []
               WorkList (funeqs)=  []
               WorkList (rest)  =  []
77[<C:0,F:0>] [W] cobox_amN :: t_akd ~ String: Spontaneously solved
end stage interact with inerts }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_akf :: [Char]
                                ~ t_akd [" a type equality [Char]
                                                           ~
                                                           t_akd " Practium1.hs:13:6-10] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_akf :: [Char]
                                 ~ t_akd [" a type equality [Char]
                                                            ~
                                                            t_akd " Practium1.hs:13:6-10] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_akf :: [Char] ~ t_akd [" a type equality [Char]
                                                     ~
                                                     t_akd " Practium1.hs:13:6-10] (CNonCanonical)
canEvNC:eq
  [Char]
  t_akd
can_eq_nc
  [W] cobox_akf :: [Char] ~ t_akd
  [Char]
  [Char]
  t_akd
  t_akd
canEqTyVar
  t_akd
  [Char]
  Is-swapped
Following bound tyvar t_akd = String
newWantedEvVar/cache miss [W] cobox_amO :: String ~ [Char]
setEvBind
  ev = cobox_akf
  tm  = CO Sym cobox_amO
rewriteEqEvidence
  [W] cobox_akf :: [Char] ~ t_akd
  String
  [Char]
  Sym cobox_amO
canEqTyVar2
  t_akd
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amO :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amO :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amP :: Char ~ Char
setEvBind
  ev = cobox_amO
  tm  = CO [cobox_amP]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amP :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amP
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_akg :: [Char]
                                ~ t_akd [" a type equality [Char]
                                                           ~
                                                           t_akd " Practium1.hs:13:13-47] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_akg :: [Char]
                                 ~ t_akd [" a type equality [Char]
                                                            ~
                                                            t_akd " Practium1.hs:13:13-47] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_akg :: [Char] ~ t_akd [" a type equality [Char]
                                                     ~
                                                     t_akd " Practium1.hs:13:13-47] (CNonCanonical)
canEvNC:eq
  [Char]
  t_akd
can_eq_nc
  [W] cobox_akg :: [Char] ~ t_akd
  [Char]
  [Char]
  t_akd
  t_akd
canEqTyVar
  t_akd
  [Char]
  Is-swapped
Following bound tyvar t_akd = String
newWantedEvVar/cache miss [W] cobox_amQ :: String ~ [Char]
setEvBind
  ev = cobox_akg
  tm  = CO Sym cobox_amQ
rewriteEqEvidence
  [W] cobox_akg :: [Char] ~ t_akd
  String
  [Char]
  Sym cobox_amQ
canEqTyVar2
  t_akd
  [Char]
  Is-swapped
  String
  <String>_N
can_eq_nc
  [W] cobox_amQ :: String ~ [Char]
  String
  String
  [Char]
  [Char]
can_eq_nc
  [W] cobox_amQ :: String ~ [Char]
  [Char]
  String
  [Char]
  [Char]
newWantedEvVar/cache miss [W] cobox_amR :: Char ~ Char
setEvBind
  ev = cobox_amQ
  tm  = CO [cobox_amR]_N
canEvNC:eq
  Char
  Char
can_eq_nc
  [W] cobox_amR :: Char ~ Char
  Char
  Char
  Char
  Char
setEvBind
  ev = cobox_amR
  tm  = CO <Char>_N
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
Start solver pipeline {
  work item =  [W] cobox_aiM :: [b_aiJ]
                                ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                      ~
                                                                      t_aiK
                                                                      -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
runStage canonicalization {
  workitem   =  [W] cobox_aiM :: [b_aiJ]
                                 ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                       ~
                                                                       t_aiK
                                                                       -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
canonicalize (non-canonical)
  [W] cobox_aiM :: [b_aiJ]
                   ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                         ~
                                                         t_aiK
                                                         -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
canEvNC:eq
  [b_aiJ]
  t_aiK -> t_aiL
can_eq_nc
  [W] cobox_aiM :: [b_aiJ] ~ (t_aiK -> t_aiL)
  [b_aiJ]
  [b_aiJ]
  t_aiK -> t_aiL
  t_aiK -> t_aiL
Following bound tyvar b_aiJ = Int
Following bound tyvar t_aiK = [[String]]
Following bound tyvar t_aiL = [Int]
Emit insoluble
  [W] cobox_aiM :: [Int]
                   ~ ([[String]] -> [Int]) [" a type equality [b_aiJ]
                                                              ~
                                                              t_aiK
                                                              -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
end stage canonicalization }
End solver pipeline (discharged) }
  inerts    =  Equalities:
               Type-function equalities:
               No-eqs: True
               Dictionaries:
               Irreds:
               Insolubles = {[W] cobox_aiR :: ([[String]] -> [String])
                                              ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                             ~
                                                                             [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                             [W] cobox_aiM :: [Int]
                                              ~ ([[String]] -> [Int]) [" a type equality [b_aiJ]
                                                                                         ~
                                                                                         t_aiK
                                                                                         -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)}
               Solved dicts 0
               Solved funeqs 0
solveFlats end } {}
simpl_loop, iteration 1
solveWanteds }
  unsolved_flats   = {}
  unsolved_implics = {}
  current evbinds  = {cobox_aij = CO Sym cobox_aki,
                      cobox_aik = CO Sym cobox_akj, cobox_ain = CO Sym cobox_akk,
                      cobox_aio = CO Sym cobox_akl, cobox_air = CO Sym cobox_akm,
                      cobox_ais = CO Sym cobox_akn, cobox_aiu = CO Sym cobox_ako,
                      cobox_aiw = CO Sym cobox_akp, cobox_aiC = CO Sym cobox_akq,
                      cobox_aiF = CO cobox_akt -> cobox_aku,
                      cobox_aiG = CO [cobox_akw]_N, cobox_aiN = CO <[Int]>_N,
                      cobox_aiQ = CO cobox_akA -> cobox_akB,
                      cobox_aiS = CO Sym cobox_akE, cobox_aiW = CO Sym cobox_akF,
                      cobox_aiX = CO <Int>_N, cobox_aj0 = CO [cobox_akI]_N,
                      cobox_aj1 = CO Sym cobox_akJ, cobox_aj4 = CO Sym cobox_akK,
                      cobox_aj6 = CO Sym cobox_akN, cobox_aj7 = CO Sym cobox_akQ,
                      cobox_aj8 = CO Sym cobox_akS, cobox_aj9 = CO Sym cobox_akU,
                      cobox_ajb = CO Sym cobox_akW, cobox_ajc = CO Sym cobox_akZ,
                      cobox_ajd = CO Sym cobox_al1, cobox_aje = CO Sym cobox_al3,
                      cobox_ajg = CO Sym cobox_al5, cobox_ajh = CO Sym cobox_al8,
                      cobox_aji = CO Sym cobox_ala, cobox_ajj = CO Sym cobox_alc,
                      cobox_ajl = CO Sym cobox_ale, cobox_ajm = CO Sym cobox_alh,
                      cobox_ajn = CO Sym cobox_alj, cobox_ajo = CO Sym cobox_all,
                      cobox_ajq = CO Sym cobox_aln, cobox_ajr = CO Sym cobox_alq,
                      cobox_ajs = CO Sym cobox_als, cobox_ajt = CO Sym cobox_alu,
                      cobox_ajv = CO Sym cobox_alw, cobox_ajw = CO Sym cobox_alz,
                      cobox_ajx = CO Sym cobox_alB, cobox_ajy = CO Sym cobox_alD,
                      cobox_ajA = CO Sym cobox_alF, cobox_ajB = CO Sym cobox_alI,
                      cobox_ajC = CO Sym cobox_alK, cobox_ajD = CO Sym cobox_alM,
                      cobox_ajG = CO Sym cobox_alO, cobox_ajI = CO Sym cobox_alR,
                      cobox_ajJ = CO Sym cobox_alU, cobox_ajK = CO Sym cobox_alW,
                      cobox_ajM = CO Sym cobox_alY, cobox_ajN = CO Sym cobox_am1,
                      cobox_ajO = CO Sym cobox_am3, cobox_ajQ = CO Sym cobox_am5,
                      cobox_ajR = CO Sym cobox_am8, cobox_ajS = CO Sym cobox_ama,
                      cobox_ajU = CO Sym cobox_amc, cobox_ajV = CO Sym cobox_amf,
                      cobox_ajW = CO Sym cobox_amh, cobox_ajY = CO Sym cobox_amj,
                      cobox_ajZ = CO Sym cobox_amm, cobox_ak0 = CO Sym cobox_amo,
                      cobox_ak2 = CO Sym cobox_amq, cobox_ak3 = CO Sym cobox_amt,
                      cobox_ak4 = CO Sym cobox_amv, cobox_ak6 = CO Sym cobox_amx,
                      cobox_ak7 = CO Sym cobox_amA, cobox_ak8 = CO Sym cobox_amC,
                      cobox_aka = CO Sym cobox_amE, cobox_akb = CO Sym cobox_amH,
                      cobox_akc = CO Sym cobox_amJ, cobox_ake = CO Sym cobox_amL,
                      cobox_akf = CO Sym cobox_amO, cobox_akg = CO Sym cobox_amQ,
                      cobox_aki = CO <[[String]]>_N, cobox_akj = CO <[Int]>_N,
                      cobox_akk = CO <[[String]]>_N, cobox_akl = CO <[String]>_N,
                      cobox_akm = CO <Int>_N, cobox_akn = CO <[Char]>_N,
                      cobox_ako = CO <Table>_N, cobox_akp = CO <Table>_N,
                      cobox_akq = CO [cobox_akr]_N, cobox_akr = CO Sym cobox_aks,
                      cobox_aks = CO <String>_N, cobox_akt = CO Sym cobox_akv,
                      cobox_aku = CO <String>_N, cobox_akv = CO <[a_aiE]>_N,
                      cobox_akw = CO Sym cobox_akx, cobox_akx = CO [cobox_aky]_N,
                      cobox_aky = CO [cobox_akz]_N, cobox_akz = CO <Char>_N,
                      cobox_akA = CO Sym cobox_akC, cobox_akB = CO Sym cobox_akD,
                      cobox_akC = CO <[a_aiP]>_N, cobox_akD = CO <Int>_N,
                      cobox_akE = CO <[[String]]>_N, cobox_akF = CO [cobox_akG]_N,
                      cobox_akG = CO Sym cobox_akH, cobox_akH = CO <Char>_N,
                      cobox_akI = CO <Char>_N, cobox_akJ = CO <Char>_N,
                      cobox_akK = CO [cobox_akL]_N, cobox_akL = CO Sym cobox_akM,
                      cobox_akM = CO <[String]>_N, cobox_akN = CO [cobox_akO]_N,
                      cobox_akO = CO Sym cobox_akP, cobox_akP = CO <String>_N,
                      cobox_akQ = CO [cobox_akR]_N, cobox_akR = CO <Char>_N,
                      cobox_akS = CO [cobox_akT]_N, cobox_akT = CO <Char>_N,
                      cobox_akU = CO [cobox_akV]_N, cobox_akV = CO <Char>_N,
                      cobox_akW = CO [cobox_akX]_N, cobox_akX = CO Sym cobox_akY,
                      cobox_akY = CO <String>_N, cobox_akZ = CO [cobox_al0]_N,
                      cobox_al0 = CO <Char>_N, cobox_al1 = CO [cobox_al2]_N,
                      cobox_al2 = CO <Char>_N, cobox_al3 = CO [cobox_al4]_N,
                      cobox_al4 = CO <Char>_N, cobox_al5 = CO [cobox_al6]_N,
                      cobox_al6 = CO Sym cobox_al7, cobox_al7 = CO <String>_N,
                      cobox_al8 = CO [cobox_al9]_N, cobox_al9 = CO <Char>_N,
                      cobox_ala = CO [cobox_alb]_N, cobox_alb = CO <Char>_N,
                      cobox_alc = CO [cobox_ald]_N, cobox_ald = CO <Char>_N,
                      cobox_ale = CO [cobox_alf]_N, cobox_alf = CO Sym cobox_alg,
                      cobox_alg = CO <String>_N, cobox_alh = CO [cobox_ali]_N,
                      cobox_ali = CO <Char>_N, cobox_alj = CO [cobox_alk]_N,
                      cobox_alk = CO <Char>_N, cobox_all = CO [cobox_alm]_N,
                      cobox_alm = CO <Char>_N, cobox_aln = CO [cobox_alo]_N,
                      cobox_alo = CO Sym cobox_alp, cobox_alp = CO <String>_N,
                      cobox_alq = CO [cobox_alr]_N, cobox_alr = CO <Char>_N,
                      cobox_als = CO [cobox_alt]_N, cobox_alt = CO <Char>_N,
                      cobox_alu = CO [cobox_alv]_N, cobox_alv = CO <Char>_N,
                      cobox_alw = CO [cobox_alx]_N, cobox_alx = CO Sym cobox_aly,
                      cobox_aly = CO <String>_N, cobox_alz = CO [cobox_alA]_N,
                      cobox_alA = CO <Char>_N, cobox_alB = CO [cobox_alC]_N,
                      cobox_alC = CO <Char>_N, cobox_alD = CO [cobox_alE]_N,
                      cobox_alE = CO <Char>_N, cobox_alF = CO [cobox_alG]_N,
                      cobox_alG = CO Sym cobox_alH, cobox_alH = CO <String>_N,
                      cobox_alI = CO [cobox_alJ]_N, cobox_alJ = CO <Char>_N,
                      cobox_alK = CO [cobox_alL]_N, cobox_alL = CO <Char>_N,
                      cobox_alM = CO [cobox_alN]_N, cobox_alN = CO <Char>_N,
                      cobox_alO = CO [cobox_alP]_N, cobox_alP = CO Sym cobox_alQ,
                      cobox_alQ = CO <[String]>_N, cobox_alR = CO [cobox_alS]_N,
                      cobox_alS = CO Sym cobox_alT, cobox_alT = CO <String>_N,
                      cobox_alU = CO [cobox_alV]_N, cobox_alV = CO <Char>_N,
                      cobox_alW = CO [cobox_alX]_N, cobox_alX = CO <Char>_N,
                      cobox_alY = CO [cobox_alZ]_N, cobox_alZ = CO Sym cobox_am0,
                      cobox_am0 = CO <String>_N, cobox_am1 = CO [cobox_am2]_N,
                      cobox_am2 = CO <Char>_N, cobox_am3 = CO [cobox_am4]_N,
                      cobox_am4 = CO <Char>_N, cobox_am5 = CO [cobox_am6]_N,
                      cobox_am6 = CO Sym cobox_am7, cobox_am7 = CO <String>_N,
                      cobox_am8 = CO [cobox_am9]_N, cobox_am9 = CO <Char>_N,
                      cobox_ama = CO [cobox_amb]_N, cobox_amb = CO <Char>_N,
                      cobox_amc = CO [cobox_amd]_N, cobox_amd = CO Sym cobox_ame,
                      cobox_ame = CO <String>_N, cobox_amf = CO [cobox_amg]_N,
                      cobox_amg = CO <Char>_N, cobox_amh = CO [cobox_ami]_N,
                      cobox_ami = CO <Char>_N, cobox_amj = CO [cobox_amk]_N,
                      cobox_amk = CO Sym cobox_aml, cobox_aml = CO <String>_N,
                      cobox_amm = CO [cobox_amn]_N, cobox_amn = CO <Char>_N,
                      cobox_amo = CO [cobox_amp]_N, cobox_amp = CO <Char>_N,
                      cobox_amq = CO [cobox_amr]_N, cobox_amr = CO Sym cobox_ams,
                      cobox_ams = CO <String>_N, cobox_amt = CO [cobox_amu]_N,
                      cobox_amu = CO <Char>_N, cobox_amv = CO [cobox_amw]_N,
                      cobox_amw = CO <Char>_N, cobox_amx = CO [cobox_amy]_N,
                      cobox_amy = CO Sym cobox_amz, cobox_amz = CO <String>_N,
                      cobox_amA = CO [cobox_amB]_N, cobox_amB = CO <Char>_N,
                      cobox_amC = CO [cobox_amD]_N, cobox_amD = CO <Char>_N,
                      cobox_amE = CO [cobox_amF]_N, cobox_amF = CO Sym cobox_amG,
                      cobox_amG = CO <String>_N, cobox_amH = CO [cobox_amI]_N,
                      cobox_amI = CO <Char>_N, cobox_amJ = CO [cobox_amK]_N,
                      cobox_amK = CO <Char>_N, cobox_amL = CO [cobox_amM]_N,
                      cobox_amM = CO Sym cobox_amN, cobox_amN = CO <String>_N,
                      cobox_amO = CO [cobox_amP]_N, cobox_amP = CO <Char>_N,
                      cobox_amQ = CO [cobox_amR]_N, cobox_amR = CO <Char>_N}
  current tybinds  = (t_aih, [[String]])
                     (t_aii, [Int])
                     (t_ail, [[String]])
                     (t_aim, [String])
                     (t_aip, Int)
                     (t_aiq, [Char])
                     (t_ait, Table)
                     (t_aiv, Table)
                     (a_aiA, [a_aiE])
                     (b_aiB, String)
                     (a_aiE, String)
                     (a_aiI, [a_aiP])
                     (b_aiJ, Int)
                     (t_aiK, [[String]])
                     (t_aiL, [Int])
                     (a_aiV, Char)
                     (a_aiZ, Char)
                     (t_aj3, [String])
                     (t_aj5, String)
                     (t_aja, String)
                     (t_ajf, String)
                     (t_ajk, String)
                     (t_ajp, String)
                     (t_aju, String)
                     (t_ajz, String)
                     (t_ajF, [String])
                     (t_ajH, String)
                     (t_ajL, String)
                     (t_ajP, String)
                     (t_ajT, String)
                     (t_ajX, String)
                     (t_ak1, String)
                     (t_ak5, String)
                     (t_ak9, String)
                     (t_akd, String)
  final wc = WC {wc_insol = [W] cobox_aiR :: ([[String]] -> [String])
                                             ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                            ~
                                                                            [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                            [W] cobox_aiM :: [Int]
                                             ~ ([[String]] -> [Int]) [" a type equality [b_aiJ]
                                                                                        ~
                                                                                        t_aiK
                                                                                        -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)}
writeMetaTyVar t_aih := [[String]]
writeMetaTyVar t_aii := [Int]
writeMetaTyVar t_ail := [[String]]
writeMetaTyVar t_aim := [String]
writeMetaTyVar t_aip := Int
writeMetaTyVar t_aiq := [Char]
writeMetaTyVar t_ait := Table
writeMetaTyVar t_aiv := Table
writeMetaTyVar a_aiA := [a_aiE]
writeMetaTyVar b_aiB := String
writeMetaTyVar a_aiE := String
writeMetaTyVar a_aiI := [a_aiP]
writeMetaTyVar b_aiJ := Int
writeMetaTyVar t_aiK := [[String]]
writeMetaTyVar t_aiL := [Int]
writeMetaTyVar a_aiV := Char
writeMetaTyVar a_aiZ := Char
writeMetaTyVar t_aj3 := [String]
writeMetaTyVar t_aj5 := String
writeMetaTyVar t_aja := String
writeMetaTyVar t_ajf := String
writeMetaTyVar t_ajk := String
writeMetaTyVar t_ajp := String
writeMetaTyVar t_aju := String
writeMetaTyVar t_ajz := String
writeMetaTyVar t_ajF := [String]
writeMetaTyVar t_ajH := String
writeMetaTyVar t_ajL := String
writeMetaTyVar t_ajP := String
writeMetaTyVar t_ajT := String
writeMetaTyVar t_ajX := String
writeMetaTyVar t_ak1 := String
writeMetaTyVar t_ak5 := String
writeMetaTyVar t_ak9 := String
writeMetaTyVar t_akd := String
Constraint solver steps = 80
End simplifyTop }
reportUnsolved {
reportUnsolved (before unflattening)
  WC {wc_insol = [W] cobox_aiR :: ([[String]] -> [String])
                                  ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                 ~
                                                                 [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                 [W] cobox_aiM :: [Int]
                                  ~ ([[String]] -> [Int]) [" a type equality [b_aiJ]
                                                                             ~
                                                                             t_aiK
                                                                             -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)}
reportUnsolved (after unflattening):
  a_aiP
  WC {wc_insol = [W] cobox_aiR :: ([[String]] -> [String])
                                  ~ [[a_aiP]] [" a type equality t_ail -> t_aim
                                                                 ~
                                                                 [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                 [W] cobox_aiM :: [Int]
                                  ~ ([[String]] -> [Int]) [" a type equality [b_aiJ]
                                                                             ~
                                                                             t_aiK
                                                                             -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)}
reportFlats
  Flats = {}
  Suppress = False
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {[W] cobox_aiR :: ([[String]] -> [String])
                            ~ [[a0]] [" a type equality t_ail -> t_aim
                                                        ~
                                                        [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical),
           [W] cobox_aiM :: [Int]
                            ~ ([[String]] -> [Int]) [" a type equality [b_aiJ]
                                                                       ~
                                                                       t_aiK
                                                                       -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)}
  Suppress = False
tryReporters {
  [[W] cobox_aiR :: ([[String]] -> [String])
                    ~ [[a0]] [" a type equality t_ail -> t_aim
                                                ~
                                                [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical),
   [W] cobox_aiM :: [Int]
                    ~ ([[String]] -> [Int]) [" a type equality [b_aiJ]
                                                               ~
                                                               t_aiK
                                                               -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)]
tryReporters: yes
  Utterly wrong [[W] cobox_aiR :: ([[String]] -> [String])
                                  ~ [[a0]] [" a type equality t_ail -> t_aim
                                                              ~
                                                              [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical),
                 [W] cobox_aiM :: [Int]
                                  ~ ([[String]] -> [Int]) [" a type equality [b_aiJ]
                                                                             ~
                                                                             t_aiK
                                                                             -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)]
relevantBindings [n, lengthColumn, firstColumn]
Adding error:
  Practium1.hs:34:18:
      Couldn't match expected type ‘[[String]] -> [Int]’
                  with actual type ‘[Int]’
      The function ‘map’ is applied to three arguments,
      but its type ‘([a0] -> Int) -> [[a0]] -> [Int]’ has only two
      In the expression: map length firstColumn n
      In an equation for ‘lengthColumn’:
          lengthColumn n = map length firstColumn n
relevantBindings [n, lengthColumn, firstColumn]
Adding error:
  Practium1.hs:34:29:
      Couldn't match expected type ‘[[a0]]’
                  with actual type ‘[[String]] -> [String]’
      Probable cause: ‘firstColumn’ is applied to too few arguments
      In the second argument of ‘map’, namely ‘firstColumn’
      In the expression: map length firstColumn n
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportFlats
  Flats = {}
  Suppress = True
tryReporters { []
tryReporters: no Utterly wrong
tryReporters: no Holes
tryReporters: no Skolem equalities
tryReporters: no Equalities
tryReporters: no Implicit params
tryReporters: no Irreds
tryReporters: no Dicts
tryReporters }
reportUnsolved }
InstEnvs (External) {
  instance Control.Applicative.Alternative []
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus m =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance (Control.Arrow.ArrowZero a, Control.Arrow.ArrowPlus a) =>
           Control.Applicative.Alternative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Alternative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.ArrowPlus a =>
           Control.Applicative.Alternative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Enum GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Enum (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Enum Float -- Defined in ‘GHC.Float’
  instance Enum Double -- Defined in ‘GHC.Float’
  instance Eq a => Eq (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Eq a => Eq (GHC.Real.Ratio a) -- Defined in ‘GHC.Real’
  instance Floating Float -- Defined in ‘GHC.Float’
  instance Floating Double -- Defined in ‘GHC.Float’
  instance Integral a => Fractional (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Fractional Float -- Defined in ‘GHC.Float’
  instance Fractional Double -- Defined in ‘GHC.Float’
  instance Integral GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral Integer -- Defined in ‘GHC.Real’
  instance Integral Int -- Defined in ‘GHC.Real’
  instance Monad m => Monad (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Monad [] -- Defined in ‘GHC.Base’
  instance Monad IO -- Defined in ‘GHC.Base’
  instance Monad ((->) r) -- Defined in ‘GHC.Base’
  instance Functor Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m => Functor (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Functor (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Functor (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Functor [] -- Defined in ‘GHC.Base’
  instance Functor IO -- Defined in ‘GHC.Base’
  instance Functor ((->) r) -- Defined in ‘GHC.Base’
  instance Functor ((,) a) -- Defined in ‘GHC.Base’
  instance Integral a => Num (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Num Float -- Defined in ‘GHC.Float’
  instance Num Double -- Defined in ‘GHC.Float’
  instance Ord a => Ord (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Integral a => Ord (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Read a => Read (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance Real GHC.Types.Word -- Defined in ‘GHC.Real’
  instance Integral a => Real (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Real Integer -- Defined in ‘GHC.Real’
  instance Real Int -- Defined in ‘GHC.Real’
  instance Real Float -- Defined in ‘GHC.Float’
  instance Real Double -- Defined in ‘GHC.Float’
  instance RealFloat Float -- Defined in ‘GHC.Float’
  instance RealFloat Double -- Defined in ‘GHC.Float’
  instance Integral a => RealFrac (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance RealFrac Float -- Defined in ‘GHC.Float’
  instance RealFrac Double -- Defined in ‘GHC.Float’
  instance Show a => Show (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance (Integral a, Show a) => Show (GHC.Real.Ratio a)
    -- Defined in ‘GHC.Real’
  instance Show Float -- Defined in ‘GHC.Float’
  instance Show Double -- Defined in ‘GHC.Float’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Applicative
    -- Defined in ‘Control.Applicative’
  instance Data.Typeable.Internal.Typeable
             Control.Applicative.Alternative
    -- Defined in ‘Control.Applicative’
  instance Control.Monad.MonadPlus [] -- Defined in ‘Control.Monad’
  instance Control.Monad.MonadPlus Maybe
    -- Defined in ‘Control.Monad’
  instance Control.Applicative.Applicative []
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance Monad m =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative GHC.Conc.Sync.STM
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (GHC.ST.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             (base:Control.Monad.ST.Lazy.Imp.ST s)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadPrec.ReadPrec
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative
             Text.ParserCombinators.ReadP.ReadP
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Data.Proxy.Proxy
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative Maybe
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative IO
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative (Either e)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid m =>
           Control.Applicative.Applicative (Control.Applicative.Const m)
    -- Defined in ‘Control.Applicative’
  instance Control.Arrow.Arrow a =>
           Control.Applicative.Applicative (Control.Arrow.ArrowMonad a)
    -- Defined in ‘Control.Applicative’
  instance Control.Applicative.Applicative ((->) a)
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Control.Applicative.Applicative ((,) a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.ZipList a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedMonad m a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic
             (Control.Applicative.WrappedArrow a b c)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 Control.Applicative.ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.WrappedMonad m)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1
             (Control.Applicative.WrappedArrow a b)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Generic1 (Control.Applicative.Const a)
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Datatype Control.Applicative.D1Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor
             Control.Applicative.C1_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Constructor Control.Applicative.C1_0Const
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0ZipList
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedMonad
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector
             Control.Applicative.S1_0_0WrappedArrow
    -- Defined in ‘Control.Applicative’
  instance GHC.Generics.Selector Control.Applicative.S1_0_0Const
    -- Defined in ‘Control.Applicative’
  instance Data.Monoid.Monoid a =>
           Data.Monoid.Monoid (Control.Applicative.Const a b)
    -- Defined in ‘Control.Applicative’
End InstEnvs }
InstEnvs (Internal) {
End InstEnvs }
famInstEnvs (External) {
  type GHC.Generics.Rep Char
    ~ GHC.Generics.D1
        GHC.Generics.D_Char
        (GHC.Generics.C1
           GHC.Generics.C_Char
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Char)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Double
    ~ GHC.Generics.D1
        GHC.Generics.D_Double
        (GHC.Generics.C1
           GHC.Generics.C_Double
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Double)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Float
    ~ GHC.Generics.D1
        GHC.Generics.D_Float
        (GHC.Generics.C1
           GHC.Generics.C_Float
           (GHC.Generics.S1
              GHC.Generics.NoSelector (GHC.Generics.Rec0 Float)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Int
    ~ GHC.Generics.D1
        GHC.Generics.D_Int
        (GHC.Generics.C1
           GHC.Generics.C_Int
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Proxy.Proxy t)
    ~ GHC.Generics.D1
        GHC.Generics.D1Proxy
        (GHC.Generics.C1 GHC.Generics.C1_0Proxy GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f, g)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 g)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e, f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 f)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d, e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   (GHC.Generics.Rec0 e)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c, d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b, c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 c))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (a, b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ()
    ~ GHC.Generics.D1
        GHC.Generics.D1()
        (GHC.Generics.C1 GHC.Generics.C1_0() GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Ordering
    ~ GHC.Generics.D1
        GHC.Generics.D1Ordering
        (GHC.Generics.C1 GHC.Generics.C1_0Ordering GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Ordering GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Ordering GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep Bool
    ~ GHC.Generics.D1
        GHC.Generics.D1Bool
        (GHC.Generics.C1 GHC.Generics.C1_0Bool GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Bool GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Either a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Maybe a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep [a]
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 [a])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.U1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1U1
        (GHC.Generics.C1 GHC.Generics.C1_0U1 GHC.Generics.U1)
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Par1 p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Par1
        (GHC.Generics.C1
           GHC.Generics.C1_0Par1
           (GHC.Generics.S1 GHC.Generics.S1_0_0Par1 (GHC.Generics.Rec0 p)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.Rec1 f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1Rec1
        (GHC.Generics.C1
           GHC.Generics.C1_0Rec1
           (GHC.Generics.S1
              GHC.Generics.S1_0_0Rec1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.K1 i c p)
    ~ GHC.Generics.D1
        GHC.Generics.D1K1
        (GHC.Generics.C1
           GHC.Generics.C1_0K1
           (GHC.Generics.S1 GHC.Generics.S1_0_0K1 (GHC.Generics.Rec0 c)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (GHC.Generics.M1 i c f p)
    ~ GHC.Generics.D1
        GHC.Generics.D1M1
        (GHC.Generics.C1
           GHC.Generics.C1_0M1
           (GHC.Generics.S1 GHC.Generics.S1_0_0M1 (GHC.Generics.Rec0 (f p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:+:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:+:
        (GHC.Generics.C1
           GHC.Generics.C1_0:+:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p)))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1:+:
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:*:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:*:
        (GHC.Generics.C1
           GHC.Generics.C1_0:*:
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 (f p))
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector (GHC.Generics.Rec0 (g p))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep ((GHC.Generics.:.:) f g p)
    ~ GHC.Generics.D1
        GHC.Generics.D1:.:
        (GHC.Generics.C1
           GHC.Generics.C1_0:.:
           (GHC.Generics.S1
              GHC.Generics.S1_0_0:.: (GHC.Generics.Rec0 (f (g p)))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Associativity
    ~ GHC.Generics.D1
        GHC.Generics.D1Associativity
        (GHC.Generics.C1 GHC.Generics.C1_0Associativity GHC.Generics.U1
         GHC.Generics.:+: (GHC.Generics.C1
                             GHC.Generics.C1_1Associativity GHC.Generics.U1
                           GHC.Generics.:+: GHC.Generics.C1
                                              GHC.Generics.C1_2Associativity GHC.Generics.U1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Fixity
    ~ GHC.Generics.D1
        GHC.Generics.D1Fixity
        (GHC.Generics.C1 GHC.Generics.C1_0Fixity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Fixity
                            (GHC.Generics.S1
                               GHC.Generics.NoSelector
                               (GHC.Generics.Rec0 GHC.Generics.Associativity)
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep GHC.Generics.Arity
    ~ GHC.Generics.D1
        GHC.Generics.D1Arity
        (GHC.Generics.C1 GHC.Generics.C1_0Arity GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Arity
                            (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 Int)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep (Data.Monoid.Dual a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Endo a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Endo
        (GHC.Generics.C1
           Data.Monoid.C1_0Endo
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Endo (GHC.Generics.Rec0 (a -> a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.All
    ~ GHC.Generics.D1
        Data.Monoid.D1All
        (GHC.Generics.C1
           Data.Monoid.C1_0All
           (GHC.Generics.S1 Data.Monoid.S1_0_0All (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep Data.Monoid.Any
    ~ GHC.Generics.D1
        Data.Monoid.D1Any
        (GHC.Generics.C1
           Data.Monoid.C1_0Any
           (GHC.Generics.S1 Data.Monoid.S1_0_0Any (GHC.Generics.Rec0 Bool)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Sum a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Product a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product (GHC.Generics.Rec0 a)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.First a)
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Data.Monoid.Last a)
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1
              Data.Monoid.S1_0_0Last (GHC.Generics.Rec0 (Maybe a))))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep (Control.Applicative.Const a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedMonad m a)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec0 (m a))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.WrappedArrow a b c)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow
              (GHC.Generics.Rec0 (a b c))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep (Control.Applicative.ZipList a)
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec0 [a])))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 ((,,,,,,) a b c d e f)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: ((GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e))
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 f)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,,) a b c d e)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: (GHC.Generics.S1
                                 GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                               GHC.Generics.:*: GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 c)))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 e)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,,) a b c d)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: (GHC.Generics.S1
                                                  GHC.Generics.NoSelector (GHC.Generics.Rec0 d)
                                                GHC.Generics.:*: GHC.Generics.S1
                                                                   GHC.Generics.NoSelector
                                                                   GHC.Generics.Par1))))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,,) a b c)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,,)
           ((GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
             GHC.Generics.:*: GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b))
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 c)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,,) a b)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: (GHC.Generics.S1
                                GHC.Generics.NoSelector (GHC.Generics.Rec0 b)
                              GHC.Generics.:*: GHC.Generics.S1
                                                 GHC.Generics.NoSelector GHC.Generics.Par1)))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 ((,) a)
    ~ GHC.Generics.D1
        GHC.Generics.D1(,)
        (GHC.Generics.C1
           GHC.Generics.C1_0(,)
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a)
            GHC.Generics.:*: GHC.Generics.S1
                               GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 (Either a)
    ~ GHC.Generics.D1
        GHC.Generics.D1Either
        (GHC.Generics.C1
           GHC.Generics.C1_0Either
           (GHC.Generics.S1 GHC.Generics.NoSelector (GHC.Generics.Rec0 a))
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Either
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Maybe
    ~ GHC.Generics.D1
        GHC.Generics.D1Maybe
        (GHC.Generics.C1 GHC.Generics.C1_0Maybe GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1Maybe
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 []
    ~ GHC.Generics.D1
        GHC.Generics.D1[]
        (GHC.Generics.C1 GHC.Generics.C1_0[] GHC.Generics.U1
         GHC.Generics.:+: GHC.Generics.C1
                            GHC.Generics.C1_1[]
                            (GHC.Generics.S1 GHC.Generics.NoSelector GHC.Generics.Par1
                             GHC.Generics.:*: GHC.Generics.S1
                                                GHC.Generics.NoSelector (GHC.Generics.Rec1 [])))
    -- Defined in ‘GHC.Generics’
  type GHC.Generics.Rep1 Data.Monoid.Dual
    ~ GHC.Generics.D1
        Data.Monoid.D1Dual
        (GHC.Generics.C1
           Data.Monoid.C1_0Dual
           (GHC.Generics.S1 Data.Monoid.S1_0_0Dual GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Sum
    ~ GHC.Generics.D1
        Data.Monoid.D1Sum
        (GHC.Generics.C1
           Data.Monoid.C1_0Sum
           (GHC.Generics.S1 Data.Monoid.S1_0_0Sum GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Product
    ~ GHC.Generics.D1
        Data.Monoid.D1Product
        (GHC.Generics.C1
           Data.Monoid.C1_0Product
           (GHC.Generics.S1 Data.Monoid.S1_0_0Product GHC.Generics.Par1))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.First
    ~ GHC.Generics.D1
        Data.Monoid.D1First
        (GHC.Generics.C1
           Data.Monoid.C1_0First
           (GHC.Generics.S1
              Data.Monoid.S1_0_0First (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 Data.Monoid.Last
    ~ GHC.Generics.D1
        Data.Monoid.D1Last
        (GHC.Generics.C1
           Data.Monoid.C1_0Last
           (GHC.Generics.S1 Data.Monoid.S1_0_0Last (GHC.Generics.Rec1 Maybe)))
    -- Defined in ‘Data.Monoid’
  type GHC.Generics.Rep1 (Control.Applicative.Const a)
    ~ GHC.Generics.D1
        Control.Applicative.D1Const
        (GHC.Generics.C1
           Control.Applicative.C1_0Const
           (GHC.Generics.S1
              Control.Applicative.S1_0_0Const (GHC.Generics.Rec0 a)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedMonad m)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedMonad
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedMonad
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedMonad (GHC.Generics.Rec1 m)))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 (Control.Applicative.WrappedArrow a b)
    ~ GHC.Generics.D1
        Control.Applicative.D1WrappedArrow
        (GHC.Generics.C1
           Control.Applicative.C1_0WrappedArrow
           (GHC.Generics.S1
              Control.Applicative.S1_0_0WrappedArrow (GHC.Generics.Rec1 (a b))))
    -- Defined in ‘Control.Applicative’
  type GHC.Generics.Rep1 Control.Applicative.ZipList
    ~ GHC.Generics.D1
        Control.Applicative.D1ZipList
        (GHC.Generics.C1
           Control.Applicative.C1_0ZipList
           (GHC.Generics.S1
              Control.Applicative.S1_0_0ZipList (GHC.Generics.Rec1 [])))
    -- Defined in ‘Control.Applicative’
  type instance a Data.Type.Equality.== b
    ~ Data.Either.EqEither a b
    -- Defined in ‘Data.Either’
End famInstEnvs }
famInstEnvs (Internal) {
End famInstEnvs }
originalCts (simplifyTop)
  fvars =  [(aih, t_aih), (aii, t_aii), (ail, t_ail), (aim, t_aim),
            (aip, t_aip), (aiq, t_aiq), (ait, t_ait), (aiv, t_aiv),
            (aiA, a_aiA), (aiB, b_aiB), (aiE, a_aiE), (aiI, a_aiI),
            (aiJ, b_aiJ), (aiK, t_aiK), (aiL, t_aiL), (aiP, a_aiP),
            (aiV, a_aiV), (aiZ, a_aiZ), (aj3, t_aj3), (aj5, t_aj5),
            (aja, t_aja), (ajf, t_ajf), (ajk, t_ajk), (ajp, t_ajp),
            (aju, t_aju), (ajz, t_ajz), (ajF, t_ajF), (ajH, t_ajH),
            (ajL, t_ajL), (ajP, t_ajP), (ajT, t_ajT), (ajX, t_ajX),
            (ak1, t_ak1), (ak5, t_ak5), (ak9, t_ak9), (akd, t_akd)]
  wanted =  WC {wc_flat = [W] cobox_aij :: [[String]]
                                           ~ t_aih [" a type equality [[String]]
                                                                      ~
                                                                      t_aih " Practium1.hs:33:17-35] (CNonCanonical)
                          [W] cobox_aik :: [Int] ~ t_aii [" a type equality [Int]
                                                                            ~
                                                                            t_aii " Practium1.hs:33:17-35] (CNonCanonical)
                          [W] cobox_ain :: [[String]] ~ t_ail [" a type equality [[String]]
                                                                                 ~
                                                                                 t_ail " Practium1.hs:30:16-37] (CNonCanonical)
                          [W] cobox_aio :: [String] ~ t_aim [" a type equality [String]
                                                                               ~
                                                                               t_aim " Practium1.hs:30:16-37] (CNonCanonical)
                          [W] cobox_air :: Int ~ t_aip [" a type equality Int
                                                                          ~
                                                                          t_aip " Practium1.hs:27:11-23] (CNonCanonical)
                          [W] cobox_ais :: [Char] ~ t_aiq [" a type equality [Char]
                                                                             ~
                                                                             t_aiq " Practium1.hs:27:11-23] (CNonCanonical)
                          [W] cobox_aiu :: Table ~ t_ait [" a type equality Table
                                                                            ~
                                                                            t_ait " Practium1.hs:16:13-17] (CNonCanonical)
                          [W] cobox_aiw :: Table ~ t_aiv [" a type equality Table
                                                                            ~
                                                                            t_aiv " Practium1.hs:3:14-18] (CNonCanonical)
                          [W] cobox_aiC :: [b_aiB] ~ t_aim [" a type equality [b_aiB]
                                                                              ~
                                                                              t_aim " Practium1.hs:31:18-28] (CNonCanonical)
                          [W] cobox_aiF :: ([a_aiE] -> a_aiE)
                                           ~ (a_aiA -> b_aiB) [" a type equality [a_aiE] -> a_aiE
                                                                                 ~
                                                                                 a_aiA
                                                                                 -> b_aiB " Practium1.hs:31:22-25] (CNonCanonical)
                          [W] cobox_aiG :: t_ail ~ [a_aiA] [" a type equality t_ail
                                                                              ~
                                                                              [a_aiA] " Practium1.hs:31:27-28] (CNonCanonical)
                          [W] cobox_aiM :: [b_aiJ]
                                           ~ (t_aiK -> t_aiL) [" a type equality [b_aiJ]
                                                                                 ~
                                                                                 t_aiK
                                                                                 -> t_aiL " Practium1.hs:34:18-41] (CNonCanonical)
                          [W] cobox_aiN :: t_aiL ~ t_aii [" a type equality t_aiL
                                                                            ~
                                                                            t_aii " Practium1.hs:34:18-41] (CNonCanonical)
                          [W] cobox_aiQ :: ([a_aiP] -> Int)
                                           ~ (a_aiI -> b_aiJ) [" a type equality [a_aiP] -> Int
                                                                                 ~
                                                                                 a_aiI
                                                                                 -> b_aiJ " Practium1.hs:34:22-27] (CNonCanonical)
                          [W] cobox_aiR :: (t_ail -> t_aim)
                                           ~ [a_aiI] [" a type equality t_ail -> t_aim
                                                                        ~
                                                                        [a_aiI] " Practium1.hs:34:29-39] (CNonCanonical)
                          [W] cobox_aiS :: t_aih ~ t_aiK [" a type equality t_aih
                                                                            ~
                                                                            t_aiK " Practium1.hs:34:41] (CNonCanonical)
                          [W] cobox_aiW :: [a_aiV] ~ t_aiq [" a type equality [a_aiV]
                                                                              ~
                                                                              t_aiq " Practium1.hs:28:12-30] (CNonCanonical)
                          [W] cobox_aiX :: t_aip ~ Int [" a type equality t_aip
                                                                          ~
                                                                          Int " Practium1.hs:28:17] (CNonCanonical)
                          [W] cobox_aj0 :: [a_aiZ] ~ [a_aiV] [" a type equality [a_aiZ]
                                                                                ~
                                                                                [a_aiV] " Practium1.hs:28:20-29] (CNonCanonical)
                          [W] cobox_aj1 :: Char ~ a_aiZ [" a type equality Char
                                                                           ~
                                                                           a_aiZ " Practium1.hs:28:27-29] (CNonCanonical)
                          [W] cobox_aj4 :: [t_aj3] ~ t_ait [" a type equality [t_aj3]
                                                                              ~
                                                                              t_ait " Practium1.hs:(18,3)-(25,3)] (CNonCanonical)
                          [W] cobox_aj6 :: [t_aj5] ~ t_aj3 [" a type equality [t_aj5]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:18:5-44] (CNonCanonical)
                          [W] cobox_aj7 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                             ~
                                                                             t_aj5 " Practium1.hs:18:6-27] (CNonCanonical)
                          [W] cobox_aj8 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                             ~
                                                                             t_aj5 " Practium1.hs:18:30-35] (CNonCanonical)
                          [W] cobox_aj9 :: [Char] ~ t_aj5 [" a type equality [Char]
                                                                             ~
                                                                             t_aj5 " Practium1.hs:18:38-43] (CNonCanonical)
                          [W] cobox_ajb :: [t_aja] ~ t_aj3 [" a type equality [t_aja]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:19:5-56] (CNonCanonical)
                          [W] cobox_ajc :: [Char] ~ t_aja [" a type equality [Char]
                                                                             ~
                                                                             t_aja " Practium1.hs:19:6-31] (CNonCanonical)
                          [W] cobox_ajd :: [Char] ~ t_aja [" a type equality [Char]
                                                                             ~
                                                                             t_aja " Practium1.hs:19:34-44] (CNonCanonical)
                          [W] cobox_aje :: [Char] ~ t_aja [" a type equality [Char]
                                                                             ~
                                                                             t_aja " Practium1.hs:19:47-55] (CNonCanonical)
                          [W] cobox_ajg :: [t_ajf] ~ t_aj3 [" a type equality [t_ajf]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:20:5-46] (CNonCanonical)
                          [W] cobox_ajh :: [Char] ~ t_ajf [" a type equality [Char]
                                                                             ~
                                                                             t_ajf " Practium1.hs:20:6-25] (CNonCanonical)
                          [W] cobox_aji :: [Char] ~ t_ajf [" a type equality [Char]
                                                                             ~
                                                                             t_ajf " Practium1.hs:20:28-37] (CNonCanonical)
                          [W] cobox_ajj :: [Char] ~ t_ajf [" a type equality [Char]
                                                                             ~
                                                                             t_ajf " Practium1.hs:20:40-45] (CNonCanonical)
                          [W] cobox_ajl :: [t_ajk] ~ t_aj3 [" a type equality [t_ajk]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:21:5-51] (CNonCanonical)
                          [W] cobox_ajm :: [Char] ~ t_ajk [" a type equality [Char]
                                                                             ~
                                                                             t_ajk " Practium1.hs:21:6-25] (CNonCanonical)
                          [W] cobox_ajn :: [Char] ~ t_ajk [" a type equality [Char]
                                                                             ~
                                                                             t_ajk " Practium1.hs:21:28-37] (CNonCanonical)
                          [W] cobox_ajo :: [Char] ~ t_ajk [" a type equality [Char]
                                                                             ~
                                                                             t_ajk " Practium1.hs:21:40-50] (CNonCanonical)
                          [W] cobox_ajq :: [t_ajp] ~ t_aj3 [" a type equality [t_ajp]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:22:5-59] (CNonCanonical)
                          [W] cobox_ajr :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Practium1.hs:22:6-25] (CNonCanonical)
                          [W] cobox_ajs :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Practium1.hs:22:28-45] (CNonCanonical)
                          [W] cobox_ajt :: [Char] ~ t_ajp [" a type equality [Char]
                                                                             ~
                                                                             t_ajp " Practium1.hs:22:48-58] (CNonCanonical)
                          [W] cobox_ajv :: [t_aju] ~ t_aj3 [" a type equality [t_aju]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:23:5-66] (CNonCanonical)
                          [W] cobox_ajw :: [Char] ~ t_aju [" a type equality [Char]
                                                                             ~
                                                                             t_aju " Practium1.hs:23:6-32] (CNonCanonical)
                          [W] cobox_ajx :: [Char] ~ t_aju [" a type equality [Char]
                                                                             ~
                                                                             t_aju " Practium1.hs:23:35-52] (CNonCanonical)
                          [W] cobox_ajy :: [Char] ~ t_aju [" a type equality [Char]
                                                                             ~
                                                                             t_aju " Practium1.hs:23:55-65] (CNonCanonical)
                          [W] cobox_ajA :: [t_ajz] ~ t_aj3 [" a type equality [t_ajz]
                                                                              ~
                                                                              t_aj3 " Practium1.hs:24:5-63] (CNonCanonical)
                          [W] cobox_ajB :: [Char] ~ t_ajz [" a type equality [Char]
                                                                             ~
                                                                             t_ajz " Practium1.hs:24:6-40] (CNonCanonical)
                          [W] cobox_ajC :: [Char] ~ t_ajz [" a type equality [Char]
                                                                             ~
                                                                             t_ajz " Practium1.hs:24:43-50] (CNonCanonical)
                          [W] cobox_ajD :: [Char] ~ t_ajz [" a type equality [Char]
                                                                             ~
                                                                             t_ajz " Practium1.hs:24:53-62] (CNonCanonical)
                          [W] cobox_ajG :: [t_ajF] ~ t_aiv [" a type equality [t_ajF]
                                                                              ~
                                                                              t_aiv " Practium1.hs:(5,3)-(14,3)] (CNonCanonical)
                          [W] cobox_ajI :: [t_ajH] ~ t_ajF [" a type equality [t_ajH]
                                                                              ~
                                                                              t_ajF " Practium1.hs:5:5-40] (CNonCanonical)
                          [W] cobox_ajJ :: [Char] ~ t_ajH [" a type equality [Char]
                                                                             ~
                                                                             t_ajH " Practium1.hs:5:6-15] (CNonCanonical)
                          [W] cobox_ajK :: [Char] ~ t_ajH [" a type equality [Char]
                                                                             ~
                                                                             t_ajH " Practium1.hs:5:18-39] (CNonCanonical)
                          [W] cobox_ajM :: [t_ajL] ~ t_ajF [" a type equality [t_ajL]
                                                                              ~
                                                                              t_ajF " Practium1.hs:6:5-42] (CNonCanonical)
                          [W] cobox_ajN :: [Char] ~ t_ajL [" a type equality [Char]
                                                                             ~
                                                                             t_ajL " Practium1.hs:6:6-13] (CNonCanonical)
                          [W] cobox_ajO :: [Char] ~ t_ajL [" a type equality [Char]
                                                                             ~
                                                                             t_ajL " Practium1.hs:6:16-41] (CNonCanonical)
                          [W] cobox_ajQ :: [t_ajP] ~ t_ajF [" a type equality [t_ajP]
                                                                              ~
                                                                              t_ajF " Practium1.hs:7:5-33] (CNonCanonical)
                          [W] cobox_ajR :: [Char] ~ t_ajP [" a type equality [Char]
                                                                             ~
                                                                             t_ajP " Practium1.hs:7:6-10] (CNonCanonical)
                          [W] cobox_ajS :: [Char] ~ t_ajP [" a type equality [Char]
                                                                             ~
                                                                             t_ajP " Practium1.hs:7:13-32] (CNonCanonical)
                          [W] cobox_ajU :: [t_ajT] ~ t_ajF [" a type equality [t_ajT]
                                                                              ~
                                                                              t_ajF " Practium1.hs:8:5-33] (CNonCanonical)
                          [W] cobox_ajV :: [Char] ~ t_ajT [" a type equality [Char]
                                                                             ~
                                                                             t_ajT " Practium1.hs:8:6-10] (CNonCanonical)
                          [W] cobox_ajW :: [Char] ~ t_ajT [" a type equality [Char]
                                                                             ~
                                                                             t_ajT " Practium1.hs:8:13-32] (CNonCanonical)
                          [W] cobox_ajY :: [t_ajX] ~ t_ajF [" a type equality [t_ajX]
                                                                              ~
                                                                              t_ajF " Practium1.hs:9:5-34] (CNonCanonical)
                          [W] cobox_ajZ :: [Char] ~ t_ajX [" a type equality [Char]
                                                                             ~
                                                                             t_ajX " Practium1.hs:9:6-11] (CNonCanonical)
                          [W] cobox_ak0 :: [Char] ~ t_ajX [" a type equality [Char]
                                                                             ~
                                                                             t_ajX " Practium1.hs:9:14-33] (CNonCanonical)
                          [W] cobox_ak2 :: [t_ak1] ~ t_ajF [" a type equality [t_ak1]
                                                                              ~
                                                                              t_ajF " Practium1.hs:10:5-38] (CNonCanonical)
                          [W] cobox_ak3 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                             ~
                                                                             t_ak1 " Practium1.hs:10:6-15] (CNonCanonical)
                          [W] cobox_ak4 :: [Char] ~ t_ak1 [" a type equality [Char]
                                                                             ~
                                                                             t_ak1 " Practium1.hs:10:18-37] (CNonCanonical)
                          [W] cobox_ak6 :: [t_ak5] ~ t_ajF [" a type equality [t_ak5]
                                                                              ~
                                                                              t_ajF " Practium1.hs:11:5-46] (CNonCanonical)
                          [W] cobox_ak7 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                             ~
                                                                             t_ak5 " Practium1.hs:11:6-16] (CNonCanonical)
                          [W] cobox_ak8 :: [Char] ~ t_ak5 [" a type equality [Char]
                                                                             ~
                                                                             t_ak5 " Practium1.hs:11:19-45] (CNonCanonical)
                          [W] cobox_aka :: [t_ak9] ~ t_ajF [" a type equality [t_ak9]
                                                                              ~
                                                                              t_ajF " Practium1.hs:12:5-54] (CNonCanonical)
                          [W] cobox_akb :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                             ~
                                                                             t_ak9 " Practium1.hs:12:6-16] (CNonCanonical)
                          [W] cobox_akc :: [Char] ~ t_ak9 [" a type equality [Char]
                                                                             ~
                                                                             t_ak9 " Practium1.hs:12:19-53] (CNonCanonical)
                          [W] cobox_ake :: [t_akd] ~ t_ajF [" a type equality [t_akd]
                                                                              ~
                                                                              t_ajF " Practium1.hs:13:5-48] (CNonCanonical)
                          [W] cobox_akf :: [Char] ~ t_akd [" a type equality [Char]
                                                                             ~
                                                                             t_akd " Practium1.hs:13:6-10] (CNonCanonical)
                          [W] cobox_akg :: [Char] ~ t_akd [" a type equality [Char]
                                                                             ~
                                                                             t_akd " Practium1.hs:13:13-47] (CNonCanonical)}
Tc9

Practium1.hs:34:18:
    Couldn't match expected type ‘[[String]] -> [Int]’
                with actual type ‘[Int]’
    The function ‘map’ is applied to three arguments,
    but its type ‘([a0] -> Int) -> [[a0]] -> [Int]’ has only two
    In the expression: map length firstColumn n
    In an equation for ‘lengthColumn’:
        lengthColumn n = map length firstColumn n

Practium1.hs:34:29:
    Couldn't match expected type ‘[[a0]]’
                with actual type ‘[[String]] -> [String]’
    Probable cause: ‘firstColumn’ is applied to too few arguments
    In the second argument of ‘map’, namely ‘firstColumn’
    In the expression: map length firstColumn n
